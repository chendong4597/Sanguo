// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MsgNetWork.proto

#ifndef PROTOBUF_MsgNetWork_2eproto__INCLUDED
#define PROTOBUF_MsgNetWork_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace MsgPB {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_MsgNetWork_2eproto();
void protobuf_AssignDesc_MsgNetWork_2eproto();
void protobuf_ShutdownFile_MsgNetWork_2eproto();

class MsgConnectionState;

enum MSG_COMMON_ID {
  MCI_UNKNOWN = 0,
  MCI_CONNECTION_STATE = 1,
  MCI_MAX = 999
};
bool MSG_COMMON_ID_IsValid(int value);
const MSG_COMMON_ID MSG_COMMON_ID_MIN = MCI_UNKNOWN;
const MSG_COMMON_ID MSG_COMMON_ID_MAX = MCI_MAX;
const int MSG_COMMON_ID_ARRAYSIZE = MSG_COMMON_ID_MAX + 1;

const ::google::protobuf::EnumDescriptor* MSG_COMMON_ID_descriptor();
inline const ::std::string& MSG_COMMON_ID_Name(MSG_COMMON_ID value) {
  return ::google::protobuf::internal::NameOfEnum(
    MSG_COMMON_ID_descriptor(), value);
}
inline bool MSG_COMMON_ID_Parse(
    const ::std::string& name, MSG_COMMON_ID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MSG_COMMON_ID>(
    MSG_COMMON_ID_descriptor(), name, value);
}
enum CONNECTION_STATE {
  CS_DISCONNECTED = 1,
  CS_CONNECTING = 2,
  CS_CONNECTED = 3,
  CS_FAILED = 4,
  CS_BREAK = 5,
  CS_FORCE_BREAK = 6
};
bool CONNECTION_STATE_IsValid(int value);
const CONNECTION_STATE CONNECTION_STATE_MIN = CS_DISCONNECTED;
const CONNECTION_STATE CONNECTION_STATE_MAX = CS_FORCE_BREAK;
const int CONNECTION_STATE_ARRAYSIZE = CONNECTION_STATE_MAX + 1;

const ::google::protobuf::EnumDescriptor* CONNECTION_STATE_descriptor();
inline const ::std::string& CONNECTION_STATE_Name(CONNECTION_STATE value) {
  return ::google::protobuf::internal::NameOfEnum(
    CONNECTION_STATE_descriptor(), value);
}
inline bool CONNECTION_STATE_Parse(
    const ::std::string& name, CONNECTION_STATE* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CONNECTION_STATE>(
    CONNECTION_STATE_descriptor(), name, value);
}
enum EventType {
  Unknown = 0,
  ConnectionStateConnecting = 1,
  ConnectionStateConnectingFailed = 2,
  ConnectionStateConnecting_break = 3,
  ConnectionStateConnected = 4
};
bool EventType_IsValid(int value);
const EventType EventType_MIN = Unknown;
const EventType EventType_MAX = ConnectionStateConnected;
const int EventType_ARRAYSIZE = EventType_MAX + 1;

const ::google::protobuf::EnumDescriptor* EventType_descriptor();
inline const ::std::string& EventType_Name(EventType value) {
  return ::google::protobuf::internal::NameOfEnum(
    EventType_descriptor(), value);
}
inline bool EventType_Parse(
    const ::std::string& name, EventType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EventType>(
    EventType_descriptor(), name, value);
}
// ===================================================================

class MsgConnectionState : public ::google::protobuf::Message {
 public:
  MsgConnectionState();
  virtual ~MsgConnectionState();

  MsgConnectionState(const MsgConnectionState& from);

  inline MsgConnectionState& operator=(const MsgConnectionState& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgConnectionState& default_instance();

  void Swap(MsgConnectionState* other);

  // implements Message ----------------------------------------------

  MsgConnectionState* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgConnectionState& from);
  void MergeFrom(const MsgConnectionState& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .MsgPB.MSG_COMMON_ID msgType = 1 [default = MCI_CONNECTION_STATE];
  inline bool has_msgtype() const;
  inline void clear_msgtype();
  static const int kMsgTypeFieldNumber = 1;
  inline ::MsgPB::MSG_COMMON_ID msgtype() const;
  inline void set_msgtype(::MsgPB::MSG_COMMON_ID value);

  // required int32 eState = 2;
  inline bool has_estate() const;
  inline void clear_estate();
  static const int kEStateFieldNumber = 2;
  inline ::google::protobuf::int32 estate() const;
  inline void set_estate(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:MsgPB.MsgConnectionState)
 private:
  inline void set_has_msgtype();
  inline void clear_has_msgtype();
  inline void set_has_estate();
  inline void clear_has_estate();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int msgtype_;
  ::google::protobuf::int32 estate_;
  friend void  protobuf_AddDesc_MsgNetWork_2eproto();
  friend void protobuf_AssignDesc_MsgNetWork_2eproto();
  friend void protobuf_ShutdownFile_MsgNetWork_2eproto();

  void InitAsDefaultInstance();
  static MsgConnectionState* default_instance_;
};
// ===================================================================


// ===================================================================

// MsgConnectionState

// optional .MsgPB.MSG_COMMON_ID msgType = 1 [default = MCI_CONNECTION_STATE];
inline bool MsgConnectionState::has_msgtype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgConnectionState::set_has_msgtype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgConnectionState::clear_has_msgtype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgConnectionState::clear_msgtype() {
  msgtype_ = 1;
  clear_has_msgtype();
}
inline ::MsgPB::MSG_COMMON_ID MsgConnectionState::msgtype() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgConnectionState.msgType)
  return static_cast< ::MsgPB::MSG_COMMON_ID >(msgtype_);
}
inline void MsgConnectionState::set_msgtype(::MsgPB::MSG_COMMON_ID value) {
  assert(::MsgPB::MSG_COMMON_ID_IsValid(value));
  set_has_msgtype();
  msgtype_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgConnectionState.msgType)
}

// required int32 eState = 2;
inline bool MsgConnectionState::has_estate() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MsgConnectionState::set_has_estate() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MsgConnectionState::clear_has_estate() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MsgConnectionState::clear_estate() {
  estate_ = 0;
  clear_has_estate();
}
inline ::google::protobuf::int32 MsgConnectionState::estate() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgConnectionState.eState)
  return estate_;
}
inline void MsgConnectionState::set_estate(::google::protobuf::int32 value) {
  set_has_estate();
  estate_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgConnectionState.eState)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace MsgPB

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::MsgPB::MSG_COMMON_ID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::MsgPB::MSG_COMMON_ID>() {
  return ::MsgPB::MSG_COMMON_ID_descriptor();
}
template <> struct is_proto_enum< ::MsgPB::CONNECTION_STATE> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::MsgPB::CONNECTION_STATE>() {
  return ::MsgPB::CONNECTION_STATE_descriptor();
}
template <> struct is_proto_enum< ::MsgPB::EventType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::MsgPB::EventType>() {
  return ::MsgPB::EventType_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_MsgNetWork_2eproto__INCLUDED
