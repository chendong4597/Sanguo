// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MsgNetWork.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "MsgNetWork.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace MsgPB {

namespace {

const ::google::protobuf::Descriptor* MsgConnectionState_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgConnectionState_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* MSG_COMMON_ID_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* CONNECTION_STATE_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* EventType_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_MsgNetWork_2eproto() {
  protobuf_AddDesc_MsgNetWork_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "MsgNetWork.proto");
  GOOGLE_CHECK(file != NULL);
  MsgConnectionState_descriptor_ = file->message_type(0);
  static const int MsgConnectionState_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgConnectionState, msgtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgConnectionState, estate_),
  };
  MsgConnectionState_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgConnectionState_descriptor_,
      MsgConnectionState::default_instance_,
      MsgConnectionState_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgConnectionState, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgConnectionState, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgConnectionState));
  MSG_COMMON_ID_descriptor_ = file->enum_type(0);
  CONNECTION_STATE_descriptor_ = file->enum_type(1);
  EventType_descriptor_ = file->enum_type(2);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_MsgNetWork_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgConnectionState_descriptor_, &MsgConnectionState::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_MsgNetWork_2eproto() {
  delete MsgConnectionState::default_instance_;
  delete MsgConnectionState_reflection_;
}

void protobuf_AddDesc_MsgNetWork_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\020MsgNetWork.proto\022\005MsgPB\"a\n\022MsgConnecti"
    "onState\022;\n\007msgType\030\001 \001(\0162\024.MsgPB.MSG_COM"
    "MON_ID:\024MCI_CONNECTION_STATE\022\016\n\006eState\030\002"
    " \002(\005*H\n\rMSG_COMMON_ID\022\017\n\013MCI_UNKNOWN\020\000\022\030"
    "\n\024MCI_CONNECTION_STATE\020\001\022\014\n\007MCI_MAX\020\347\007*}"
    "\n\020CONNECTION_STATE\022\023\n\017CS_DISCONNECTED\020\001\022"
    "\021\n\rCS_CONNECTING\020\002\022\020\n\014CS_CONNECTED\020\003\022\r\n\t"
    "CS_FAILED\020\004\022\014\n\010CS_BREAK\020\005\022\022\n\016CS_FORCE_BR"
    "EAK\020\006*\237\001\n\tEventType\022\013\n\007Unknown\020\000\022\035\n\031Conn"
    "ectionStateConnecting\020\001\022#\n\037ConnectionSta"
    "teConnectingFailed\020\002\022#\n\037ConnectionStateC"
    "onnecting_break\020\003\022\034\n\030ConnectionStateConn"
    "ected\020\004", 487);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "MsgNetWork.proto", &protobuf_RegisterTypes);
  MsgConnectionState::default_instance_ = new MsgConnectionState();
  MsgConnectionState::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_MsgNetWork_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_MsgNetWork_2eproto {
  StaticDescriptorInitializer_MsgNetWork_2eproto() {
    protobuf_AddDesc_MsgNetWork_2eproto();
  }
} static_descriptor_initializer_MsgNetWork_2eproto_;
const ::google::protobuf::EnumDescriptor* MSG_COMMON_ID_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MSG_COMMON_ID_descriptor_;
}
bool MSG_COMMON_ID_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 999:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* CONNECTION_STATE_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CONNECTION_STATE_descriptor_;
}
bool CONNECTION_STATE_IsValid(int value) {
  switch(value) {
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* EventType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EventType_descriptor_;
}
bool EventType_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#ifndef _MSC_VER
const int MsgConnectionState::kMsgTypeFieldNumber;
const int MsgConnectionState::kEStateFieldNumber;
#endif  // !_MSC_VER

MsgConnectionState::MsgConnectionState()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.MsgConnectionState)
}

void MsgConnectionState::InitAsDefaultInstance() {
}

MsgConnectionState::MsgConnectionState(const MsgConnectionState& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.MsgConnectionState)
}

void MsgConnectionState::SharedCtor() {
  _cached_size_ = 0;
  msgtype_ = 1;
  estate_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgConnectionState::~MsgConnectionState() {
  // @@protoc_insertion_point(destructor:MsgPB.MsgConnectionState)
  SharedDtor();
}

void MsgConnectionState::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgConnectionState::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgConnectionState::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgConnectionState_descriptor_;
}

const MsgConnectionState& MsgConnectionState::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgNetWork_2eproto();
  return *default_instance_;
}

MsgConnectionState* MsgConnectionState::default_instance_ = NULL;

MsgConnectionState* MsgConnectionState::New() const {
  return new MsgConnectionState;
}

void MsgConnectionState::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    msgtype_ = 1;
    estate_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgConnectionState::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.MsgConnectionState)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .MsgPB.MSG_COMMON_ID msgType = 1 [default = MCI_CONNECTION_STATE];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::MSG_COMMON_ID_IsValid(value)) {
            set_msgtype(static_cast< ::MsgPB::MSG_COMMON_ID >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_eState;
        break;
      }

      // required int32 eState = 2;
      case 2: {
        if (tag == 16) {
         parse_eState:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &estate_)));
          set_has_estate();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.MsgConnectionState)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.MsgConnectionState)
  return false;
#undef DO_
}

void MsgConnectionState::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.MsgConnectionState)
  // optional .MsgPB.MSG_COMMON_ID msgType = 1 [default = MCI_CONNECTION_STATE];
  if (has_msgtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->msgtype(), output);
  }

  // required int32 eState = 2;
  if (has_estate()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->estate(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.MsgConnectionState)
}

::google::protobuf::uint8* MsgConnectionState::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.MsgConnectionState)
  // optional .MsgPB.MSG_COMMON_ID msgType = 1 [default = MCI_CONNECTION_STATE];
  if (has_msgtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->msgtype(), target);
  }

  // required int32 eState = 2;
  if (has_estate()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->estate(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.MsgConnectionState)
  return target;
}

int MsgConnectionState::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .MsgPB.MSG_COMMON_ID msgType = 1 [default = MCI_CONNECTION_STATE];
    if (has_msgtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgtype());
    }

    // required int32 eState = 2;
    if (has_estate()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->estate());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgConnectionState::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgConnectionState* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgConnectionState*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgConnectionState::MergeFrom(const MsgConnectionState& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msgtype()) {
      set_msgtype(from.msgtype());
    }
    if (from.has_estate()) {
      set_estate(from.estate());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgConnectionState::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgConnectionState::CopyFrom(const MsgConnectionState& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgConnectionState::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000002) != 0x00000002) return false;

  return true;
}

void MsgConnectionState::Swap(MsgConnectionState* other) {
  if (other != this) {
    std::swap(msgtype_, other->msgtype_);
    std::swap(estate_, other->estate_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgConnectionState::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgConnectionState_descriptor_;
  metadata.reflection = MsgConnectionState_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace MsgPB

// @@protoc_insertion_point(global_scope)
