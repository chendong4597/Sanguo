// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MsgGameDef.proto

#ifndef PROTOBUF_MsgGameDef_2eproto__INCLUDED
#define PROTOBUF_MsgGameDef_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace MsgPB {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_MsgGameDef_2eproto();
void protobuf_AssignDesc_MsgGameDef_2eproto();
void protobuf_ShutdownFile_MsgGameDef_2eproto();

class MsgPoint;
class MsgSize;
class MsgArea;
class MsgCircle;
class MsgGateTarget;
class KeyVal;
class KeyValI64;
class AttrEffect;
class UnderAttack;
class ItemReward;
class MsgRepeatedUUID;

enum E_ErrorCode {
  EC_Success = 0,
  EC_Fail = 1,
  EC_PacketFull = 2,
  EC_LackCost = 3,
  EC_ItemNotExist = 4,
  EC_ItemUpgradeResult_NotExist = 101001,
  EC_ItemUpgradeResult_LackItem = 101002,
  EC_ItemUpgradeResult_Cannot = 101003,
  EC_ItemUpgradeResult_Max = 101004,
  EC_NpcAutoIncome_LockBiome = 50001,
  EC_NpcAutoIncome_ProtectorNotFound = 50002,
  EC_NpcAutoIncome_PassStageByMail = 50003,
  EC_NpcAutoIncome_PacketFull = 50004,
  EC_NpcAutoIncome_FenceNotFound = 50010,
  EC_NpcAutoIncome_ItemNotEnough = 50011,
  EC_NpcAutoIncome_IndexNotFound = 50013,
  EC_NpcAutoIncome_PlantNotFound = 50014,
  EC_NpcAutoIncome_FenceLock = 50015,
  EC_NpcAutoIncome_PlotLock = 50016,
  EC_NpcAutoIncome_FenceUnlock = 50017,
  EC_NpcAutoIncome_PlotUnlock = 50018,
  EC_RefiningMine_SetItemNumError = 50051,
  EC_RefiningMine_SetItemTypeError = 50052,
  EC_RefiningMine_SetItemNotEnough = 50053,
  EC_RefiningMine_SetIndexError = 50054,
  EC_RefiningMine_SetItemTypeDiff = 50055,
  EC_RefiningMine_PacketFull = 50056,
  EC_SpinStartResult_Spins = 60001,
  EC_SpinStartResult_Backpack = 60002,
  EC_PvpSquadPairResult_NpcNotExist = 60101,
  EC_PvpSquadPairResult_PetNotExist = 60102,
  EC_PvpSquadPairResult_LackCount = 60103,
  EC_ProtectorResult_NpcNotExist = 60201,
  EC_ProtectorResult_RebornLackCost = 60202,
  EC_NpcPetBountyRefreshResult_LackMoney = 71001,
  EC_NpcPetBountyConfigResult_NpcNotExist = 72001,
  EC_NpcPetBountyConfigResult_PetNotExist = 72002,
  EC_NpcPetBountyConfigResult_LackCount = 72003,
  EC_PvpSquad_SystemError = 81001,
  EC_PvpSquad_EnemyAlreadyBattle = 81002,
  EC_PvpSquad_SeasonNotStart = 81011,
  EC_PvpSquad_PlayerAlreadyMatch = 81012,
  EC_PvpSquad_PlayerBattling = 81013,
  EC_PvpSquad_PlayerNotMatching = 81014,
  EC_PvpSquad_UploadBatResError = 81021,
  EC_PvpSquad_PlayerNotBattling = 81022,
  EC_PvpSquad_PlayerAlreadyBattle = 81023
};
bool E_ErrorCode_IsValid(int value);
const E_ErrorCode E_ErrorCode_MIN = EC_Success;
const E_ErrorCode E_ErrorCode_MAX = EC_ItemUpgradeResult_Max;
const int E_ErrorCode_ARRAYSIZE = E_ErrorCode_MAX + 1;

const ::google::protobuf::EnumDescriptor* E_ErrorCode_descriptor();
inline const ::std::string& E_ErrorCode_Name(E_ErrorCode value) {
  return ::google::protobuf::internal::NameOfEnum(
    E_ErrorCode_descriptor(), value);
}
inline bool E_ErrorCode_Parse(
    const ::std::string& name, E_ErrorCode* value) {
  return ::google::protobuf::internal::ParseNamedEnum<E_ErrorCode>(
    E_ErrorCode_descriptor(), name, value);
}
enum ITEM_SUBTYPE {
  ITEM_SUBTYPE_NORMAL = 0,
  ITEM_SUBTYPE_FURNITURE = 1,
  ITEM_SUBTYPE_ARMOR = 2,
  ITEM_SUBTYPE_PLANT_SEED = 3,
  ITEM_SUBTYPE_BLOCKMINE = 4,
  ITEM_SUBTYPE_FOOD = 5,
  ITEM_SUBTYPE_MEDICAMENT = 6,
  ITEM_SUBTYPE_PLANT = 7,
  ITEM_SUBTYPE_SURVIVAL = 8,
  ITEM_SUBTYPE_CHEST = 9,
  ITEM_SUBTYPE_GRASS = 10,
  ITEM_SUBTYPE_INTERACTIVE = 11,
  ITEM_SUBTYPE_EXPLORE = 12,
  ITEM_SUBTYPE_SPOILS = 13,
  ITEM_SUBTYPE_CURRENCY = 14,
  ITEM_SUBTYPE_ENDLESS_POTION = 15,
  ITEM_SUBTYPE_ENDLESS_PIECE = 16,
  ITEM_SUBTYPE_TURNTABLE = 17,
  ITEM_SUBTYPE_PET_FOOD = 18,
  ITEM_SUBTYPE_PET_EGG = 19,
  ITEM_SUBTYPE_PET_CAPTURE = 20,
  ITEM_SUBTYPE_PET_SKILL_BOOK = 21,
  ITEM_SUBTYPE_MOB_SOUL = 22,
  ITEM_SUBTYPE_EXP_BALL = 23,
  ITEM_SUBTYPE_ANIMAL = 24,
  ITEM_SUBTYPE_ANTIQUE = 25,
  ITEM_SUBTYPE_RENAME_CARD = 26,
  ITEM_SUBTYPE_HONOR = 27,
  ITEM_SUBTYPE_ESSENCE = 28,
  ITEM_SUBTYPE_BOX = 29,
  ITEM_SUBTYPE_ADS_MOB = 30,
  ITEM_SUBTYPE_GIFT_BOX = 31,
  ITEM_SUBTYPE_NPC_TEMP = 32
};
bool ITEM_SUBTYPE_IsValid(int value);
const ITEM_SUBTYPE ITEM_SUBTYPE_MIN = ITEM_SUBTYPE_NORMAL;
const ITEM_SUBTYPE ITEM_SUBTYPE_MAX = ITEM_SUBTYPE_NPC_TEMP;
const int ITEM_SUBTYPE_ARRAYSIZE = ITEM_SUBTYPE_MAX + 1;

const ::google::protobuf::EnumDescriptor* ITEM_SUBTYPE_descriptor();
inline const ::std::string& ITEM_SUBTYPE_Name(ITEM_SUBTYPE value) {
  return ::google::protobuf::internal::NameOfEnum(
    ITEM_SUBTYPE_descriptor(), value);
}
inline bool ITEM_SUBTYPE_Parse(
    const ::std::string& name, ITEM_SUBTYPE* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ITEM_SUBTYPE>(
    ITEM_SUBTYPE_descriptor(), name, value);
}
enum EQUIP_TYPE {
  EQUIP_NULL = 0,
  EQUIP_ARMOR = 1,
  EQUIP_MELEE_WEQPON = 20,
  EQUIP_RANGED_WEQPON = 21,
  EQUIP_MAGIC_WEQPON = 22,
  EQUIP_THROWING_WEQPON = 23,
  EQUIP_COLLECTION_WEQPON = 24,
  EQUIP_MELEE_WEQPON_COS = 45,
  EQUIP_RANGED_WEQPON_COS = 46,
  EQUIP_MAGIC_WEQPON_COS = 47,
  EQUIP_THROWING_WEQPON_COS = 48,
  EQUIP_PET_ARMOR = 50
};
bool EQUIP_TYPE_IsValid(int value);
const EQUIP_TYPE EQUIP_TYPE_MIN = EQUIP_NULL;
const EQUIP_TYPE EQUIP_TYPE_MAX = EQUIP_PET_ARMOR;
const int EQUIP_TYPE_ARRAYSIZE = EQUIP_TYPE_MAX + 1;

const ::google::protobuf::EnumDescriptor* EQUIP_TYPE_descriptor();
inline const ::std::string& EQUIP_TYPE_Name(EQUIP_TYPE value) {
  return ::google::protobuf::internal::NameOfEnum(
    EQUIP_TYPE_descriptor(), value);
}
inline bool EQUIP_TYPE_Parse(
    const ::std::string& name, EQUIP_TYPE* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EQUIP_TYPE>(
    EQUIP_TYPE_descriptor(), name, value);
}
enum ARMOR_EQUIP_POS {
  ARMOR_EQUIP_NULL = 0,
  ARMOR_EQUIP_HEAD = 1,
  ARMOR_EQUIP_CLOTHES = 2,
  ARMOR_EQUIP_PANTS = 3,
  ARMOR_EQUIP_BACK = 4,
  ARMOR_EQUIP_SHOE = 5,
  ARMOR_EQUIP_AMULET = 6,
  ARMOR_EQUIP_COS_HEAD = 7,
  ARMOR_EQUIP_COS_CLOTHES = 8,
  ARMOR_EQUIP_COS_PANTS = 9,
  ARMOR_EQUIP_COS_BACK = 10,
  ARMOR_EQUIP_COS_SHOE = 11,
  ARMOR_EQUIP_COS_WEAPON = 12,
  ARMOR_EQUIP_COS_EFFECT = 13,
  ARMOR_EQUIP_WEAPON = 14,
  ARMOR_EQUIP_HORSE = 15,
  ARMOR_EQUIP_FOLLOW_PET = 16,
  ARMOR_EQUIP_PET_COLLAR = 30,
  ARMOR_EQUIP_PET_CLOTHES = 31,
  ARMOR_EQUIP_PET_AMULET = 32
};
bool ARMOR_EQUIP_POS_IsValid(int value);
const ARMOR_EQUIP_POS ARMOR_EQUIP_POS_MIN = ARMOR_EQUIP_NULL;
const ARMOR_EQUIP_POS ARMOR_EQUIP_POS_MAX = ARMOR_EQUIP_PET_AMULET;
const int ARMOR_EQUIP_POS_ARRAYSIZE = ARMOR_EQUIP_POS_MAX + 1;

const ::google::protobuf::EnumDescriptor* ARMOR_EQUIP_POS_descriptor();
inline const ::std::string& ARMOR_EQUIP_POS_Name(ARMOR_EQUIP_POS value) {
  return ::google::protobuf::internal::NameOfEnum(
    ARMOR_EQUIP_POS_descriptor(), value);
}
inline bool ARMOR_EQUIP_POS_Parse(
    const ::std::string& name, ARMOR_EQUIP_POS* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ARMOR_EQUIP_POS>(
    ARMOR_EQUIP_POS_descriptor(), name, value);
}
enum ROLE_EFFECT_TYPE {
  ROLE_EFFECT_NULL = 0,
  ROLE_EFFECT_HPM = 1,
  ROLE_EFFECT_MPM = 2,
  ROLE_EFFECT_AD = 3,
  ROLE_EFFECT_AP = 4,
  ROLE_EFFECT_ARM = 5,
  ROLE_EFFECT_MARM = 6,
  ROLE_EFFECT_AR = 7,
  ROLE_EFFECT_MR_FIRE = 8,
  ROLE_EFFECT_MR_FORST = 9,
  ROLE_EFFECT_MR_THUNDER = 10,
  ROLE_EFFECT_MR_EARTH = 11,
  ROLE_EFFECT_MR_POSION = 12,
  ROLE_EFFECT_MR_LIGHT = 13,
  ROLE_EFFECT_MR_DARK = 14,
  ROLE_EFFECT_ARP = 15,
  ROLE_EFFECT_MRP = 16,
  ROLE_EFFECT_CRI = 17,
  ROLE_EFFECT_MCRI = 18,
  ROLE_EFFECT_CRID = 19,
  ROLE_EFFECT_MCRID = 20,
  ROLE_EFFECT_RES = 21,
  ROLE_EFFECT_MRES = 22,
  ROLE_EFFECT_CC_HIT = 23,
  ROLE_EFFECT_CC_RES = 24,
  ROLE_EFFECT_ATK_SP = 25,
  ROLE_EFFECT_MV_SP = 26,
  ROLE_EFFECT_HB = 27,
  ROLE_EFFECT_HPR = 28,
  ROLE_EFFECT_HPRS = 29,
  ROLE_EFFECT_MPR = 30,
  ROLE_EFFECT_MPRS = 31,
  ROLE_EFFECT_GATHER_ATK = 32,
  ROLE_EFFECT_JUMP = 33,
  ROLE_EFFECT_SWIM = 34,
  ROLE_EFFECT_ATK_RANGE = 35,
  ROLE_EFFECT_GATHER_SP = 36,
  ROLE_EFFECT_CHASE = 37,
  ROLE_EFFECT_BOSS_HURT = 38,
  ROLE_EFFECT_BOSS_DMGREDUC = 39,
  ROLE_EFFECT_JUMP_INIT_SPEED = 40,
  ROLE_EFFECT_TOTAL_DAMAGE_INC = 41,
  ROLE_EFFECT_DEBUFF_DAMAGE_INC = 42,
  ROLE_EFFECT_ATTR_STATIC_MAX = 43,
  ROLE_EFFECT_HPM_RATE = 101,
  ROLE_EFFECT_MPM_RATE = 102,
  ROLE_EFFECT_AD_RATE = 103,
  ROLE_EFFECT_AP_RATE = 104,
  ROLE_EFFECT_ARM_RATE = 105,
  ROLE_EFFECT_MARM_RATE = 106,
  ROLE_EFFECT_AR_RATE = 107,
  ROLE_EFFECT_MR_FIRE_RATE = 108,
  ROLE_EFFECT_MR_FORST_RATE = 109,
  ROLE_EFFECT_MR_THUNDER_RATE = 110,
  ROLE_EFFECT_MR_EARTH_RATE = 111,
  ROLE_EFFECT_MR_POSION_RATE = 112,
  ROLE_EFFECT_MR_LIGHT_RATE = 113,
  ROLE_EFFECT_MR_DARK_RATE = 114,
  ROLE_EFFECT_ARP_RATE = 115,
  ROLE_EFFECT_MRP_RATE = 116,
  ROLE_EFFECT_CRI_RATE = 117,
  ROLE_EFFECT_MCRI_RATE = 118,
  ROLE_EFFECT_CRID_RATE = 119,
  ROLE_EFFECT_MCRID_RATE = 120,
  ROLE_EFFECT_RES_RATE = 121,
  ROLE_EFFECT_MRES_RATE = 122,
  ROLE_EFFECT_CC_HIT_RATE = 123,
  ROLE_EFFECT_CC_RES_RATE = 124,
  ROLE_EFFECT_ATK_SP_RATE = 125,
  ROLE_EFFECT_MV_SP_RATE = 126,
  ROLE_EFFECT_HB_RATE = 127,
  ROLE_EFFECT_HPR_RATE = 128,
  ROLE_EFFECT_HPRS_RATE = 129,
  ROLE_EFFECT_MPR_RATE = 130,
  ROLE_EFFECT_MPRS_RATE = 131,
  ROLE_EFFECT_GATHER_ATK_RATE = 132,
  ROLE_EFFECT_JUMP_RATE = 133,
  ROLE_EFFECT_SWIM_RATE = 134,
  ROLE_EFFECT_ATK_RANGE_RATE = 135,
  ROLE_EFFECT_GATHER_SP_RATE = 136,
  ROLE_EFFECT_CHASE_RATE = 137,
  ROLE_EFFECT_BOSS_HURT_RATE = 138,
  ROLE_EFFECT_BOSS_DMGREDUC_RATE = 139,
  ROLE_EFFECT_JUMP_INIT_SPEED_RATE = 140,
  ROLE_EFFECT_TOTAL_DAMAGE_INC_RATE = 141,
  ROLE_EFFECT_DEBUFF_DAMAGE_INC_RATE = 142,
  ROLE_EFFECT_ATTR_RATE_MAX = 143,
  ROLE_EFFECT_MR_ALL = 201,
  ROLE_EFFECT_MR_ALL_RATE = 202,
  ROLE_EFFECT_ATTR_MAX = 203,
  ROLE_EFFECT_SKILL_STATUS = 301,
  ROLE_EFFECT_CAST_SKILL = 401,
  ROLE_EFFECT_TRANSPORT = 402,
  ROLE_EFFECT_PROSPECT = 403,
  ROLE_EFFECT_DETECTING_ORE = 404,
  ROLE_EFFECT_DETECTING_DUNGEON = 405,
  ROLE_EFFECT_FALLING_SLOW = 407,
  ROLE_EFFECT_MAX = 408
};
bool ROLE_EFFECT_TYPE_IsValid(int value);
const ROLE_EFFECT_TYPE ROLE_EFFECT_TYPE_MIN = ROLE_EFFECT_NULL;
const ROLE_EFFECT_TYPE ROLE_EFFECT_TYPE_MAX = ROLE_EFFECT_MAX;
const int ROLE_EFFECT_TYPE_ARRAYSIZE = ROLE_EFFECT_TYPE_MAX + 1;

const ::google::protobuf::EnumDescriptor* ROLE_EFFECT_TYPE_descriptor();
inline const ::std::string& ROLE_EFFECT_TYPE_Name(ROLE_EFFECT_TYPE value) {
  return ::google::protobuf::internal::NameOfEnum(
    ROLE_EFFECT_TYPE_descriptor(), value);
}
inline bool ROLE_EFFECT_TYPE_Parse(
    const ::std::string& name, ROLE_EFFECT_TYPE* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ROLE_EFFECT_TYPE>(
    ROLE_EFFECT_TYPE_descriptor(), name, value);
}
enum SKILL_STATUS {
  SKILL_STATUS_NONE = 0,
  SKILL_STATUS_CANT_MOVE = 1,
  SKILL_STATUS_CANT_ATTACK = 2,
  SKILL_STATUS_CANT_DIG = 4,
  SKILL_STATUS_CANT_BUILD = 8,
  SKILL_STATUS_CANT_CASTSKILL = 16,
  SKILL_STATUS_DONT_PLAY_HIT_AMIN = 32,
  SKILL_STATUS_CANT_USEITEM = 64,
  SKILL_STATUS_FREEZE = 128,
  SKILL_STATUS_FOLLOWMOVE = 256,
  SKILL_STATUS_CONFUSION = 512,
  SKILL_STATUS_INVISIBLE = 1024,
  SKILL_STATUS_CANT_BE_ATTACK = 2048,
  SKILL_STATUS_PETRIFACTION = 4096,
  SKILL_STATUS_TAUNT = 8192,
  SKILL_STATUS_FRESNEL = 16384,
  SKILL_STATUS_CANT_FLY = 32768,
  SKILL_STATUS_CHANGE_GROUP = 65536,
  SKILL_STATUS_BLIND = 131072,
  SKILL_STATUS_MODEL_CHANGE = 262144,
  SKILL_STATUS_CANT_BE_ATTACK_AI = 524288,
  SKILL_STATUS_DREAD = 1048576
};
bool SKILL_STATUS_IsValid(int value);
const SKILL_STATUS SKILL_STATUS_MIN = SKILL_STATUS_NONE;
const SKILL_STATUS SKILL_STATUS_MAX = SKILL_STATUS_DREAD;
const int SKILL_STATUS_ARRAYSIZE = SKILL_STATUS_MAX + 1;

const ::google::protobuf::EnumDescriptor* SKILL_STATUS_descriptor();
inline const ::std::string& SKILL_STATUS_Name(SKILL_STATUS value) {
  return ::google::protobuf::internal::NameOfEnum(
    SKILL_STATUS_descriptor(), value);
}
inline bool SKILL_STATUS_Parse(
    const ::std::string& name, SKILL_STATUS* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SKILL_STATUS>(
    SKILL_STATUS_descriptor(), name, value);
}
enum SURVIVAL_GAME_RESULT {
  SURVIVAL_GAME_RESULT_NONE = 0,
  SURVIVAL_GAME_RESULT_Win = 1,
  SURVIVAL_GAME_RESULT_Lose = 2,
  SURVIVAL_GAME_RESULT_END = 3
};
bool SURVIVAL_GAME_RESULT_IsValid(int value);
const SURVIVAL_GAME_RESULT SURVIVAL_GAME_RESULT_MIN = SURVIVAL_GAME_RESULT_NONE;
const SURVIVAL_GAME_RESULT SURVIVAL_GAME_RESULT_MAX = SURVIVAL_GAME_RESULT_END;
const int SURVIVAL_GAME_RESULT_ARRAYSIZE = SURVIVAL_GAME_RESULT_MAX + 1;

const ::google::protobuf::EnumDescriptor* SURVIVAL_GAME_RESULT_descriptor();
inline const ::std::string& SURVIVAL_GAME_RESULT_Name(SURVIVAL_GAME_RESULT value) {
  return ::google::protobuf::internal::NameOfEnum(
    SURVIVAL_GAME_RESULT_descriptor(), value);
}
inline bool SURVIVAL_GAME_RESULT_Parse(
    const ::std::string& name, SURVIVAL_GAME_RESULT* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SURVIVAL_GAME_RESULT>(
    SURVIVAL_GAME_RESULT_descriptor(), name, value);
}
enum PROTECTOR_STATUS {
  BADGE_STATUS_LOCK = -1,
  BADGE_STATUS_NONE = 0,
  BADGE_STATUS_NOT_REQUIRED = 1,
  BADGE_STATUS_WAIT_JOIN = 2,
  BADGE_STATUS_ENABLE_FUNCTION = 3,
  BADGE_STATUS_DEATH = 4,
  BADGE_STATUS_PATROL = 5,
  BADGE_STATUS_FOLLOW = 6,
  BADGE_STATUS_SP = 7
};
bool PROTECTOR_STATUS_IsValid(int value);
const PROTECTOR_STATUS PROTECTOR_STATUS_MIN = BADGE_STATUS_LOCK;
const PROTECTOR_STATUS PROTECTOR_STATUS_MAX = BADGE_STATUS_SP;
const int PROTECTOR_STATUS_ARRAYSIZE = PROTECTOR_STATUS_MAX + 1;

const ::google::protobuf::EnumDescriptor* PROTECTOR_STATUS_descriptor();
inline const ::std::string& PROTECTOR_STATUS_Name(PROTECTOR_STATUS value) {
  return ::google::protobuf::internal::NameOfEnum(
    PROTECTOR_STATUS_descriptor(), value);
}
inline bool PROTECTOR_STATUS_Parse(
    const ::std::string& name, PROTECTOR_STATUS* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PROTECTOR_STATUS>(
    PROTECTOR_STATUS_descriptor(), name, value);
}
enum PROTECTOR_LESS_THAN_REQUIRED {
  PROTECTOR_LESS_THAN_REQUIRED_NONE = 0,
  PROTECTOR_LESS_THAN_REQUIRED_SPACE = 1,
  PROTECTOR_LESS_THAN_REQUIRED_WALL = 2,
  PROTECTOR_LESS_THAN_REQUIRED_FURNITURE = 3,
  PROTECTOR_LESS_THAN_REQUIRED_COMFORE = 4,
  PROTECTOR_LESS_THAN_REQUIRED_HEIGHT = 5,
  PROTECTOR_LESS_THAN_REQUIRED_LIGHT = 6
};
bool PROTECTOR_LESS_THAN_REQUIRED_IsValid(int value);
const PROTECTOR_LESS_THAN_REQUIRED PROTECTOR_LESS_THAN_REQUIRED_MIN = PROTECTOR_LESS_THAN_REQUIRED_NONE;
const PROTECTOR_LESS_THAN_REQUIRED PROTECTOR_LESS_THAN_REQUIRED_MAX = PROTECTOR_LESS_THAN_REQUIRED_LIGHT;
const int PROTECTOR_LESS_THAN_REQUIRED_ARRAYSIZE = PROTECTOR_LESS_THAN_REQUIRED_MAX + 1;

const ::google::protobuf::EnumDescriptor* PROTECTOR_LESS_THAN_REQUIRED_descriptor();
inline const ::std::string& PROTECTOR_LESS_THAN_REQUIRED_Name(PROTECTOR_LESS_THAN_REQUIRED value) {
  return ::google::protobuf::internal::NameOfEnum(
    PROTECTOR_LESS_THAN_REQUIRED_descriptor(), value);
}
inline bool PROTECTOR_LESS_THAN_REQUIRED_Parse(
    const ::std::string& name, PROTECTOR_LESS_THAN_REQUIRED* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PROTECTOR_LESS_THAN_REQUIRED>(
    PROTECTOR_LESS_THAN_REQUIRED_descriptor(), name, value);
}
enum PROTECTOR_WAIT_TYPE {
  PROTECTOR_WAIT_TYPE_NONE = 0,
  PROTECTOR_WAIT_TYPE_JOIN = 1,
  PROTECTOR_WAIT_TYPE_LEAVE = 2,
  PROTECTOR_WAIT_TYPE_REBORN = 3
};
bool PROTECTOR_WAIT_TYPE_IsValid(int value);
const PROTECTOR_WAIT_TYPE PROTECTOR_WAIT_TYPE_MIN = PROTECTOR_WAIT_TYPE_NONE;
const PROTECTOR_WAIT_TYPE PROTECTOR_WAIT_TYPE_MAX = PROTECTOR_WAIT_TYPE_REBORN;
const int PROTECTOR_WAIT_TYPE_ARRAYSIZE = PROTECTOR_WAIT_TYPE_MAX + 1;

const ::google::protobuf::EnumDescriptor* PROTECTOR_WAIT_TYPE_descriptor();
inline const ::std::string& PROTECTOR_WAIT_TYPE_Name(PROTECTOR_WAIT_TYPE value) {
  return ::google::protobuf::internal::NameOfEnum(
    PROTECTOR_WAIT_TYPE_descriptor(), value);
}
inline bool PROTECTOR_WAIT_TYPE_Parse(
    const ::std::string& name, PROTECTOR_WAIT_TYPE* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PROTECTOR_WAIT_TYPE>(
    PROTECTOR_WAIT_TYPE_descriptor(), name, value);
}
enum MEDICAMENT_TYPE {
  MEDICAMENT_HP = 0,
  MEDICAMENT_HP_PER = 1,
  MEDICAMENT_MP = 2,
  MEDICAMENT_MP_PER = 3,
  MEDICAMENT_HPMP = 4,
  MEDICAMENT_HPMP_PER = 5,
  MEDICAMENT_BUFF = 6
};
bool MEDICAMENT_TYPE_IsValid(int value);
const MEDICAMENT_TYPE MEDICAMENT_TYPE_MIN = MEDICAMENT_HP;
const MEDICAMENT_TYPE MEDICAMENT_TYPE_MAX = MEDICAMENT_BUFF;
const int MEDICAMENT_TYPE_ARRAYSIZE = MEDICAMENT_TYPE_MAX + 1;

const ::google::protobuf::EnumDescriptor* MEDICAMENT_TYPE_descriptor();
inline const ::std::string& MEDICAMENT_TYPE_Name(MEDICAMENT_TYPE value) {
  return ::google::protobuf::internal::NameOfEnum(
    MEDICAMENT_TYPE_descriptor(), value);
}
inline bool MEDICAMENT_TYPE_Parse(
    const ::std::string& name, MEDICAMENT_TYPE* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MEDICAMENT_TYPE>(
    MEDICAMENT_TYPE_descriptor(), name, value);
}
enum ACHIEVE_STATUS {
  ACHIEVE_STATUS_IN_PROGRESS = 0,
  ACHIEVE_STATUS_ACCOMPLISH = 1,
  ACHIEVE_STATUS_RECEIVED = 2,
  ACHIEVE_STATUS_LOCK = 3
};
bool ACHIEVE_STATUS_IsValid(int value);
const ACHIEVE_STATUS ACHIEVE_STATUS_MIN = ACHIEVE_STATUS_IN_PROGRESS;
const ACHIEVE_STATUS ACHIEVE_STATUS_MAX = ACHIEVE_STATUS_LOCK;
const int ACHIEVE_STATUS_ARRAYSIZE = ACHIEVE_STATUS_MAX + 1;

const ::google::protobuf::EnumDescriptor* ACHIEVE_STATUS_descriptor();
inline const ::std::string& ACHIEVE_STATUS_Name(ACHIEVE_STATUS value) {
  return ::google::protobuf::internal::NameOfEnum(
    ACHIEVE_STATUS_descriptor(), value);
}
inline bool ACHIEVE_STATUS_Parse(
    const ::std::string& name, ACHIEVE_STATUS* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ACHIEVE_STATUS>(
    ACHIEVE_STATUS_descriptor(), name, value);
}
enum MAIL_STATUS {
  MAIL_STATUS_UNREAD = 0,
  MAIL_STATUS_HAS_BEEN_READ = 1,
  MAIL_STATUS_CLAIMED = 2
};
bool MAIL_STATUS_IsValid(int value);
const MAIL_STATUS MAIL_STATUS_MIN = MAIL_STATUS_UNREAD;
const MAIL_STATUS MAIL_STATUS_MAX = MAIL_STATUS_CLAIMED;
const int MAIL_STATUS_ARRAYSIZE = MAIL_STATUS_MAX + 1;

const ::google::protobuf::EnumDescriptor* MAIL_STATUS_descriptor();
inline const ::std::string& MAIL_STATUS_Name(MAIL_STATUS value) {
  return ::google::protobuf::internal::NameOfEnum(
    MAIL_STATUS_descriptor(), value);
}
inline bool MAIL_STATUS_Parse(
    const ::std::string& name, MAIL_STATUS* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MAIL_STATUS>(
    MAIL_STATUS_descriptor(), name, value);
}
enum QUALITY_GRADE {
  QUALITY_GRADE_NONE = 0,
  QUALITY_GRADE_WHITE = 1,
  QUALITY_GRADE_GREEN = 2,
  QUALITY_GRADE_BLUE = 3,
  QUALITY_GRADE_PURPLE = 4,
  QUALITY_GRADE_ORANGE = 5,
  QUALITY_GRADE_RED = 6,
  QUALITY_GRADE_GRAY = 99
};
bool QUALITY_GRADE_IsValid(int value);
const QUALITY_GRADE QUALITY_GRADE_MIN = QUALITY_GRADE_NONE;
const QUALITY_GRADE QUALITY_GRADE_MAX = QUALITY_GRADE_GRAY;
const int QUALITY_GRADE_ARRAYSIZE = QUALITY_GRADE_MAX + 1;

const ::google::protobuf::EnumDescriptor* QUALITY_GRADE_descriptor();
inline const ::std::string& QUALITY_GRADE_Name(QUALITY_GRADE value) {
  return ::google::protobuf::internal::NameOfEnum(
    QUALITY_GRADE_descriptor(), value);
}
inline bool QUALITY_GRADE_Parse(
    const ::std::string& name, QUALITY_GRADE* value) {
  return ::google::protobuf::internal::ParseNamedEnum<QUALITY_GRADE>(
    QUALITY_GRADE_descriptor(), name, value);
}
enum QUALITY_GRADE_FOR_DB_SETTING {
  QUALITY_GRADE_FOR_DB_SETTING_ROOM_FURNITURE_ARRAYSIZE = 7
};
bool QUALITY_GRADE_FOR_DB_SETTING_IsValid(int value);
const QUALITY_GRADE_FOR_DB_SETTING QUALITY_GRADE_FOR_DB_SETTING_MIN = QUALITY_GRADE_FOR_DB_SETTING_ROOM_FURNITURE_ARRAYSIZE;
const QUALITY_GRADE_FOR_DB_SETTING QUALITY_GRADE_FOR_DB_SETTING_MAX = QUALITY_GRADE_FOR_DB_SETTING_ROOM_FURNITURE_ARRAYSIZE;
const int QUALITY_GRADE_FOR_DB_SETTING_ARRAYSIZE = QUALITY_GRADE_FOR_DB_SETTING_MAX + 1;

const ::google::protobuf::EnumDescriptor* QUALITY_GRADE_FOR_DB_SETTING_descriptor();
inline const ::std::string& QUALITY_GRADE_FOR_DB_SETTING_Name(QUALITY_GRADE_FOR_DB_SETTING value) {
  return ::google::protobuf::internal::NameOfEnum(
    QUALITY_GRADE_FOR_DB_SETTING_descriptor(), value);
}
inline bool QUALITY_GRADE_FOR_DB_SETTING_Parse(
    const ::std::string& name, QUALITY_GRADE_FOR_DB_SETTING* value) {
  return ::google::protobuf::internal::ParseNamedEnum<QUALITY_GRADE_FOR_DB_SETTING>(
    QUALITY_GRADE_FOR_DB_SETTING_descriptor(), name, value);
}
enum ITEM_CURRENCY_TYPE {
  ITEM_CURRENCY_TYPE_ITEM = 0,
  ITEM_CURRENCY_TYPE_SILVER = 1,
  ITEM_CURRENCY_TYPE_GOLD = 2,
  ITEM_CURRENCY_TYPE_DIAMOND = 3,
  ITEM_CURRENCY_TYPE_ENDLESS = 4,
  ITEM_CURRENCY_TYPE_TURNTABLE = 5,
  ITEM_CURRENCY_TYPE_SPIN = 6,
  ITEM_CURRENCY_TYPE_ARES_COIN = 7,
  ITEM_CURRENCY_TYPE_DOLLAR = 98
};
bool ITEM_CURRENCY_TYPE_IsValid(int value);
const ITEM_CURRENCY_TYPE ITEM_CURRENCY_TYPE_MIN = ITEM_CURRENCY_TYPE_ITEM;
const ITEM_CURRENCY_TYPE ITEM_CURRENCY_TYPE_MAX = ITEM_CURRENCY_TYPE_DOLLAR;
const int ITEM_CURRENCY_TYPE_ARRAYSIZE = ITEM_CURRENCY_TYPE_MAX + 1;

const ::google::protobuf::EnumDescriptor* ITEM_CURRENCY_TYPE_descriptor();
inline const ::std::string& ITEM_CURRENCY_TYPE_Name(ITEM_CURRENCY_TYPE value) {
  return ::google::protobuf::internal::NameOfEnum(
    ITEM_CURRENCY_TYPE_descriptor(), value);
}
inline bool ITEM_CURRENCY_TYPE_Parse(
    const ::std::string& name, ITEM_CURRENCY_TYPE* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ITEM_CURRENCY_TYPE>(
    ITEM_CURRENCY_TYPE_descriptor(), name, value);
}
enum MSG_MOVE_DIR {
  MSG_DIR_NOE = 0,
  MSG_DIR_LEFT = 1,
  MSG_DIR_RIGHT = 2,
  MSG_DIR_RIGHT_UP = 3,
  MSG_DIR_LEFT_UP = 4,
  MSG_DIR_RIGHT_DOWN = 5,
  MSG_DIR_LEFT_DOWN = 6
};
bool MSG_MOVE_DIR_IsValid(int value);
const MSG_MOVE_DIR MSG_MOVE_DIR_MIN = MSG_DIR_NOE;
const MSG_MOVE_DIR MSG_MOVE_DIR_MAX = MSG_DIR_LEFT_DOWN;
const int MSG_MOVE_DIR_ARRAYSIZE = MSG_MOVE_DIR_MAX + 1;

const ::google::protobuf::EnumDescriptor* MSG_MOVE_DIR_descriptor();
inline const ::std::string& MSG_MOVE_DIR_Name(MSG_MOVE_DIR value) {
  return ::google::protobuf::internal::NameOfEnum(
    MSG_MOVE_DIR_descriptor(), value);
}
inline bool MSG_MOVE_DIR_Parse(
    const ::std::string& name, MSG_MOVE_DIR* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MSG_MOVE_DIR>(
    MSG_MOVE_DIR_descriptor(), name, value);
}
enum MSG_MOVE_STAT {
  MSG_MOVE_STATE_STAND = 0,
  MSG_MOVE_STATE_WALK = 1,
  MSG_MOVE_STATE_JUMP = 2,
  MSG_MOVE_STATE_FALL = 3,
  MSG_MOVE_STATE_CLIME_UP = 4,
  MSG_MOVE_STATE_GO_DOWN = 5
};
bool MSG_MOVE_STAT_IsValid(int value);
const MSG_MOVE_STAT MSG_MOVE_STAT_MIN = MSG_MOVE_STATE_STAND;
const MSG_MOVE_STAT MSG_MOVE_STAT_MAX = MSG_MOVE_STATE_GO_DOWN;
const int MSG_MOVE_STAT_ARRAYSIZE = MSG_MOVE_STAT_MAX + 1;

const ::google::protobuf::EnumDescriptor* MSG_MOVE_STAT_descriptor();
inline const ::std::string& MSG_MOVE_STAT_Name(MSG_MOVE_STAT value) {
  return ::google::protobuf::internal::NameOfEnum(
    MSG_MOVE_STAT_descriptor(), value);
}
inline bool MSG_MOVE_STAT_Parse(
    const ::std::string& name, MSG_MOVE_STAT* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MSG_MOVE_STAT>(
    MSG_MOVE_STAT_descriptor(), name, value);
}
enum E_AntiqueQuality {
  E_AntiqueQuality_Entry = 1,
  E_AntiqueQuality_General = 2,
  E_AntiqueQuality_Expert = 3,
  E_AntiqueQuality_Master = 4,
  E_AntiqueQuality_God = 5
};
bool E_AntiqueQuality_IsValid(int value);
const E_AntiqueQuality E_AntiqueQuality_MIN = E_AntiqueQuality_Entry;
const E_AntiqueQuality E_AntiqueQuality_MAX = E_AntiqueQuality_God;
const int E_AntiqueQuality_ARRAYSIZE = E_AntiqueQuality_MAX + 1;

const ::google::protobuf::EnumDescriptor* E_AntiqueQuality_descriptor();
inline const ::std::string& E_AntiqueQuality_Name(E_AntiqueQuality value) {
  return ::google::protobuf::internal::NameOfEnum(
    E_AntiqueQuality_descriptor(), value);
}
inline bool E_AntiqueQuality_Parse(
    const ::std::string& name, E_AntiqueQuality* value) {
  return ::google::protobuf::internal::ParseNamedEnum<E_AntiqueQuality>(
    E_AntiqueQuality_descriptor(), name, value);
}
enum E_AntiqueIntegrity {
  E_AntiqueIntegrity_Broken = 1,
  E_AntiqueIntegrity_Incomplete = 2,
  E_AntiqueIntegrity_Complete = 3,
  E_AntiqueIntegrity_Flawless = 4,
  E_AntiqueIntegrity_Perfect = 5
};
bool E_AntiqueIntegrity_IsValid(int value);
const E_AntiqueIntegrity E_AntiqueIntegrity_MIN = E_AntiqueIntegrity_Broken;
const E_AntiqueIntegrity E_AntiqueIntegrity_MAX = E_AntiqueIntegrity_Perfect;
const int E_AntiqueIntegrity_ARRAYSIZE = E_AntiqueIntegrity_MAX + 1;

const ::google::protobuf::EnumDescriptor* E_AntiqueIntegrity_descriptor();
inline const ::std::string& E_AntiqueIntegrity_Name(E_AntiqueIntegrity value) {
  return ::google::protobuf::internal::NameOfEnum(
    E_AntiqueIntegrity_descriptor(), value);
}
inline bool E_AntiqueIntegrity_Parse(
    const ::std::string& name, E_AntiqueIntegrity* value) {
  return ::google::protobuf::internal::ParseNamedEnum<E_AntiqueIntegrity>(
    E_AntiqueIntegrity_descriptor(), name, value);
}
enum EN_FUNCTION_LOCK_BIT {
  EN_FUNCTION_LOCK_BIT_NONE = 0,
  EN_FUNCTION_LOCK_BIT_NOTICE = 1,
  EN_FUNCTION_LOCK_BIT_PRIVATE_DUNGEON_BOSS = 2,
  EN_FUNCTION_LOCK_BIT_STRONG_HOLD_BOSS = 4,
  EN_FUNCTION_LOCK_BIT_FUNCTION_MALL = 8,
  EN_FUNCTION_LOCK_BIT_FUNCTION_FINANCIAL = 16,
  EN_FUNCTION_LOCK_BIT_FUNCTION_SLOT = 32,
  EN_FUNCTION_LOCK_BIT_FUNCTION_CHEST = 64,
  EN_FUNCTION_LOCK_BIT_FUNCTION_ANIMAL_FEED = 128,
  EN_FUNCTION_LOCK_BIT_FUNCTION_CRYSTAL_TURNTABLE = 256,
  EN_FUNCTION_LOCK_BIT_FUNCTION_GOLD_TURNTABLE = 512,
  EN_FUNCTION_LOCK_BIT_FUNCTION_NPC_ORDER = 1024,
  EN_FUNCTION_LOCK_BIT_FUNCTION_NPC_BATTLE_REWARD = 2048,
  EN_FUNCTION_LOCK_BIT_FUNCTION_NPC_MINE = 4096,
  EN_FUNCTION_LOCK_BIT_FUNCTION_NPC_DUNGEON = 8192,
  EN_FUNCTION_LOCK_BIT_FUNCTION_NPC_BUYS = 16384,
  EN_FUNCTION_LOCK_BIT_FUNCTION_NPC_SELL = 32768,
  EN_FUNCTION_LOCK_BIT_FUNCTION_JOURNAL_REWRAD = 65536,
  EN_FUNCTION_LOCK_BIT_FUNCTION_SCORE = 131072,
  EN_FUNCTION_LOCK_BIT_FUNCTION_SUBSCRIPTION = 262144
};
bool EN_FUNCTION_LOCK_BIT_IsValid(int value);
const EN_FUNCTION_LOCK_BIT EN_FUNCTION_LOCK_BIT_MIN = EN_FUNCTION_LOCK_BIT_NONE;
const EN_FUNCTION_LOCK_BIT EN_FUNCTION_LOCK_BIT_MAX = EN_FUNCTION_LOCK_BIT_FUNCTION_SUBSCRIPTION;
const int EN_FUNCTION_LOCK_BIT_ARRAYSIZE = EN_FUNCTION_LOCK_BIT_MAX + 1;

const ::google::protobuf::EnumDescriptor* EN_FUNCTION_LOCK_BIT_descriptor();
inline const ::std::string& EN_FUNCTION_LOCK_BIT_Name(EN_FUNCTION_LOCK_BIT value) {
  return ::google::protobuf::internal::NameOfEnum(
    EN_FUNCTION_LOCK_BIT_descriptor(), value);
}
inline bool EN_FUNCTION_LOCK_BIT_Parse(
    const ::std::string& name, EN_FUNCTION_LOCK_BIT* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EN_FUNCTION_LOCK_BIT>(
    EN_FUNCTION_LOCK_BIT_descriptor(), name, value);
}
enum EN_PLAYER_EVENT_TYPE {
  EN_PLAYER_EVENT_TYPE_NONE = 0,
  EN_PLAYER_EVENT_TYPE_shootcup_share = 1,
  EN_PLAYER_EVENT_TYPE_login_Daily = 2,
  EN_PLAYER_EVENT_TYPE_sign_in = 3,
  EN_PLAYER_EVENT_TYPE_dig_block = 4,
  EN_PLAYER_EVENT_TYPE_dig_mine = 5,
  EN_PLAYER_EVENT_TYPE_dig_plant = 6,
  EN_PLAYER_EVENT_TYPE_kill_mob = 7,
  EN_PLAYER_EVENT_TYPE_kill_boss = 8,
  EN_PLAYER_EVENT_TYPE_compose = 9,
  EN_PLAYER_EVENT_TYPE_TaskNPcrepo = 10,
  EN_PLAYER_EVENT_TYPE_eat_food = 11,
  EN_PLAYER_EVENT_TYPE_home_visit = 12,
  EN_PLAYER_EVENT_TYPE_world_share = 13,
  EN_PLAYER_EVENT_TYPE_plant_set = 14,
  EN_PLAYER_EVENT_TYPE_animal_feed = 15,
  EN_PLAYER_EVENT_TYPE_animal_get = 16,
  EN_PLAYER_EVENT_TYPE_spin = 17,
  EN_PLAYER_EVENT_TYPE_NpcPetBounty = 18,
  EN_PLAYER_EVENT_TYPE_equipment_wash = 19,
  EN_PLAYER_EVENT_TYPE_view_video = 20,
  EN_PLAYER_EVENT_TYPE_consume_cash = 21,
  EN_PLAYER_EVENT_TYPE_Towerpvp = 22,
  EN_PLAYER_EVENT_TYPE_PvpSquad = 23,
  EN_PLAYER_EVENT_TYPE_open_chest = 24,
  EN_PLAYER_EVENT_TYPE_transfer_map = 25,
  EN_PLAYER_EVENT_TYPE_repair_equip = 26,
  EN_PLAYER_EVENT_TYPE_mysterious_man = 27,
  EN_PLAYER_EVENT_TYPE_achieve_level = 28,
  EN_PLAYER_EVENT_TYPE_equip_suit_rare = 29,
  EN_PLAYER_EVENT_TYPE_equip_upgrade = 30,
  EN_PLAYER_EVENT_TYPE_npc_equip_suit = 31,
  EN_PLAYER_EVENT_TYPE_npc_power = 32,
  EN_PLAYER_EVENT_TYPE_npc_use_essence = 33,
  EN_PLAYER_EVENT_TYPE_pet_quality = 34,
  EN_PLAYER_EVENT_TYPE_pet_level_up = 35,
  EN_PLAYER_EVENT_TYPE_pet_change_data = 36,
  EN_PLAYER_EVENT_TYPE_pet_use_essence = 37,
  EN_PLAYER_EVENT_TYPE_put_build = 38,
  EN_PLAYER_EVENT_TYPE_pvp_squad_rank = 39,
  EN_PLAYER_EVENT_TYPE_towerpvp_rank = 40,
  EN_PLAYER_EVENT_TYPE_sell_item = 41,
  EN_PLAYER_EVENT_TYPE_tower_challenge = 42,
  EN_PLAYER_EVENT_TYPE_tower_challenge_score = 43,
  EN_PLAYER_EVENT_TYPE_repair_build = 44,
  EN_PLAYER_EVENT_TYPE_pet_power = 45,
  EN_PLAYER_EVENT_TYPE_pet_equip_suit = 46,
  EN_PLAYER_EVENT_TYPE_npc_gift = 47,
  EN_PLAYER_EVENT_TYPE_put_animal = 48,
  EN_PLAYER_EVENT_TYPE_sell_item_get_currency = 49,
  EN_PLAYER_EVENT_TYPE_identify_equip = 50,
  EN_PLAYER_EVENT_TYPE_player_use_essence = 51,
  EN_PLAYER_EVENT_TYPE_compose_pattern = 52,
  EN_PLAYER_EVENT_TYPE_arrive_map = 55,
  EN_PLAYER_EVENT_TYPE_get_drop_item = 56,
  EN_PLAYER_EVENT_TYPE_interactive_build_level_up = 57,
  EN_PLAYER_EVENT_TYPE_use_item = 58,
  EN_PLAYER_EVENT_TYPE_get_protector = 59,
  EN_PLAYER_EVENT_TYPE_pet_learn_skill = 60,
  EN_PLAYER_EVENT_TYPE_own_room = 61,
  EN_PLAYER_EVENT_TYPE_put_protector = 62,
  EN_PLAYER_EVENT_TYPE_room_comfort = 63,
  EN_PLAYER_EVENT_TYPE_get_rent = 64,
  EN_PLAYER_EVENT_TYPE_tower_build_level_up = 65,
  EN_PLAYER_EVENT_TYPE_crystal_energy_supply = 67,
  EN_PLAYER_EVENT_TYPE_receive_npc_automatic = 68,
  EN_PLAYER_EVENT_TYPE_achievement_complete = 69
};
bool EN_PLAYER_EVENT_TYPE_IsValid(int value);
const EN_PLAYER_EVENT_TYPE EN_PLAYER_EVENT_TYPE_MIN = EN_PLAYER_EVENT_TYPE_NONE;
const EN_PLAYER_EVENT_TYPE EN_PLAYER_EVENT_TYPE_MAX = EN_PLAYER_EVENT_TYPE_achievement_complete;
const int EN_PLAYER_EVENT_TYPE_ARRAYSIZE = EN_PLAYER_EVENT_TYPE_MAX + 1;

const ::google::protobuf::EnumDescriptor* EN_PLAYER_EVENT_TYPE_descriptor();
inline const ::std::string& EN_PLAYER_EVENT_TYPE_Name(EN_PLAYER_EVENT_TYPE value) {
  return ::google::protobuf::internal::NameOfEnum(
    EN_PLAYER_EVENT_TYPE_descriptor(), value);
}
inline bool EN_PLAYER_EVENT_TYPE_Parse(
    const ::std::string& name, EN_PLAYER_EVENT_TYPE* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EN_PLAYER_EVENT_TYPE>(
    EN_PLAYER_EVENT_TYPE_descriptor(), name, value);
}
enum GAME_NEWS_TYPE {
  GAME_NEWS_TURNTABLE = 1,
  GAME_NEWS_BUY_DEPOSIT_POT = 2,
  GAME_NEWS_BUY_FUND_TICKET = 3,
  GAME_NEWS_SS_PET_AND_5_SKILLS = 4,
  GAME_NEWS_PET_OWN_5_SKILLS = 5
};
bool GAME_NEWS_TYPE_IsValid(int value);
const GAME_NEWS_TYPE GAME_NEWS_TYPE_MIN = GAME_NEWS_TURNTABLE;
const GAME_NEWS_TYPE GAME_NEWS_TYPE_MAX = GAME_NEWS_PET_OWN_5_SKILLS;
const int GAME_NEWS_TYPE_ARRAYSIZE = GAME_NEWS_TYPE_MAX + 1;

const ::google::protobuf::EnumDescriptor* GAME_NEWS_TYPE_descriptor();
inline const ::std::string& GAME_NEWS_TYPE_Name(GAME_NEWS_TYPE value) {
  return ::google::protobuf::internal::NameOfEnum(
    GAME_NEWS_TYPE_descriptor(), value);
}
inline bool GAME_NEWS_TYPE_Parse(
    const ::std::string& name, GAME_NEWS_TYPE* value) {
  return ::google::protobuf::internal::ParseNamedEnum<GAME_NEWS_TYPE>(
    GAME_NEWS_TYPE_descriptor(), name, value);
}
// ===================================================================

class MsgPoint : public ::google::protobuf::Message {
 public:
  MsgPoint();
  virtual ~MsgPoint();

  MsgPoint(const MsgPoint& from);

  inline MsgPoint& operator=(const MsgPoint& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgPoint& default_instance();

  void Swap(MsgPoint* other);

  // implements Message ----------------------------------------------

  MsgPoint* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgPoint& from);
  void MergeFrom(const MsgPoint& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 x = 1;
  inline bool has_x() const;
  inline void clear_x();
  static const int kXFieldNumber = 1;
  inline ::google::protobuf::int32 x() const;
  inline void set_x(::google::protobuf::int32 value);

  // optional int32 y = 2;
  inline bool has_y() const;
  inline void clear_y();
  static const int kYFieldNumber = 2;
  inline ::google::protobuf::int32 y() const;
  inline void set_y(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:MsgPB.MsgPoint)
 private:
  inline void set_has_x();
  inline void clear_has_x();
  inline void set_has_y();
  inline void clear_has_y();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 x_;
  ::google::protobuf::int32 y_;
  friend void  protobuf_AddDesc_MsgGameDef_2eproto();
  friend void protobuf_AssignDesc_MsgGameDef_2eproto();
  friend void protobuf_ShutdownFile_MsgGameDef_2eproto();

  void InitAsDefaultInstance();
  static MsgPoint* default_instance_;
};
// -------------------------------------------------------------------

class MsgSize : public ::google::protobuf::Message {
 public:
  MsgSize();
  virtual ~MsgSize();

  MsgSize(const MsgSize& from);

  inline MsgSize& operator=(const MsgSize& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgSize& default_instance();

  void Swap(MsgSize* other);

  // implements Message ----------------------------------------------

  MsgSize* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgSize& from);
  void MergeFrom(const MsgSize& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 width = 1;
  inline bool has_width() const;
  inline void clear_width();
  static const int kWidthFieldNumber = 1;
  inline ::google::protobuf::int32 width() const;
  inline void set_width(::google::protobuf::int32 value);

  // optional int32 height = 2;
  inline bool has_height() const;
  inline void clear_height();
  static const int kHeightFieldNumber = 2;
  inline ::google::protobuf::int32 height() const;
  inline void set_height(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:MsgPB.MsgSize)
 private:
  inline void set_has_width();
  inline void clear_has_width();
  inline void set_has_height();
  inline void clear_has_height();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 width_;
  ::google::protobuf::int32 height_;
  friend void  protobuf_AddDesc_MsgGameDef_2eproto();
  friend void protobuf_AssignDesc_MsgGameDef_2eproto();
  friend void protobuf_ShutdownFile_MsgGameDef_2eproto();

  void InitAsDefaultInstance();
  static MsgSize* default_instance_;
};
// -------------------------------------------------------------------

class MsgArea : public ::google::protobuf::Message {
 public:
  MsgArea();
  virtual ~MsgArea();

  MsgArea(const MsgArea& from);

  inline MsgArea& operator=(const MsgArea& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgArea& default_instance();

  void Swap(MsgArea* other);

  // implements Message ----------------------------------------------

  MsgArea* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgArea& from);
  void MergeFrom(const MsgArea& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 left = 1;
  inline bool has_left() const;
  inline void clear_left();
  static const int kLeftFieldNumber = 1;
  inline ::google::protobuf::int32 left() const;
  inline void set_left(::google::protobuf::int32 value);

  // optional int32 top = 2;
  inline bool has_top() const;
  inline void clear_top();
  static const int kTopFieldNumber = 2;
  inline ::google::protobuf::int32 top() const;
  inline void set_top(::google::protobuf::int32 value);

  // optional int32 right = 3;
  inline bool has_right() const;
  inline void clear_right();
  static const int kRightFieldNumber = 3;
  inline ::google::protobuf::int32 right() const;
  inline void set_right(::google::protobuf::int32 value);

  // optional int32 bottom = 4;
  inline bool has_bottom() const;
  inline void clear_bottom();
  static const int kBottomFieldNumber = 4;
  inline ::google::protobuf::int32 bottom() const;
  inline void set_bottom(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:MsgPB.MsgArea)
 private:
  inline void set_has_left();
  inline void clear_has_left();
  inline void set_has_top();
  inline void clear_has_top();
  inline void set_has_right();
  inline void clear_has_right();
  inline void set_has_bottom();
  inline void clear_has_bottom();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 left_;
  ::google::protobuf::int32 top_;
  ::google::protobuf::int32 right_;
  ::google::protobuf::int32 bottom_;
  friend void  protobuf_AddDesc_MsgGameDef_2eproto();
  friend void protobuf_AssignDesc_MsgGameDef_2eproto();
  friend void protobuf_ShutdownFile_MsgGameDef_2eproto();

  void InitAsDefaultInstance();
  static MsgArea* default_instance_;
};
// -------------------------------------------------------------------

class MsgCircle : public ::google::protobuf::Message {
 public:
  MsgCircle();
  virtual ~MsgCircle();

  MsgCircle(const MsgCircle& from);

  inline MsgCircle& operator=(const MsgCircle& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgCircle& default_instance();

  void Swap(MsgCircle* other);

  // implements Message ----------------------------------------------

  MsgCircle* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgCircle& from);
  void MergeFrom(const MsgCircle& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 x = 1;
  inline bool has_x() const;
  inline void clear_x();
  static const int kXFieldNumber = 1;
  inline ::google::protobuf::int32 x() const;
  inline void set_x(::google::protobuf::int32 value);

  // optional int32 y = 2;
  inline bool has_y() const;
  inline void clear_y();
  static const int kYFieldNumber = 2;
  inline ::google::protobuf::int32 y() const;
  inline void set_y(::google::protobuf::int32 value);

  // optional int32 radius = 3;
  inline bool has_radius() const;
  inline void clear_radius();
  static const int kRadiusFieldNumber = 3;
  inline ::google::protobuf::int32 radius() const;
  inline void set_radius(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:MsgPB.MsgCircle)
 private:
  inline void set_has_x();
  inline void clear_has_x();
  inline void set_has_y();
  inline void clear_has_y();
  inline void set_has_radius();
  inline void clear_has_radius();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 x_;
  ::google::protobuf::int32 y_;
  ::google::protobuf::int32 radius_;
  friend void  protobuf_AddDesc_MsgGameDef_2eproto();
  friend void protobuf_AssignDesc_MsgGameDef_2eproto();
  friend void protobuf_ShutdownFile_MsgGameDef_2eproto();

  void InitAsDefaultInstance();
  static MsgCircle* default_instance_;
};
// -------------------------------------------------------------------

class MsgGateTarget : public ::google::protobuf::Message {
 public:
  MsgGateTarget();
  virtual ~MsgGateTarget();

  MsgGateTarget(const MsgGateTarget& from);

  inline MsgGateTarget& operator=(const MsgGateTarget& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgGateTarget& default_instance();

  void Swap(MsgGateTarget* other);

  // implements Message ----------------------------------------------

  MsgGateTarget* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgGateTarget& from);
  void MergeFrom(const MsgGateTarget& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // optional int32 type = 2;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // optional int32 mapId = 3;
  inline bool has_mapid() const;
  inline void clear_mapid();
  static const int kMapIdFieldNumber = 3;
  inline ::google::protobuf::int32 mapid() const;
  inline void set_mapid(::google::protobuf::int32 value);

  // optional int32 gateid = 4;
  inline bool has_gateid() const;
  inline void clear_gateid();
  static const int kGateidFieldNumber = 4;
  inline ::google::protobuf::int32 gateid() const;
  inline void set_gateid(::google::protobuf::int32 value);

  // optional .MsgPB.MsgPoint pos = 5;
  inline bool has_pos() const;
  inline void clear_pos();
  static const int kPosFieldNumber = 5;
  inline const ::MsgPB::MsgPoint& pos() const;
  inline ::MsgPB::MsgPoint* mutable_pos();
  inline ::MsgPB::MsgPoint* release_pos();
  inline void set_allocated_pos(::MsgPB::MsgPoint* pos);

  // @@protoc_insertion_point(class_scope:MsgPB.MsgGateTarget)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_mapid();
  inline void clear_has_mapid();
  inline void set_has_gateid();
  inline void clear_has_gateid();
  inline void set_has_pos();
  inline void clear_has_pos();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 mapid_;
  ::google::protobuf::int32 gateid_;
  ::MsgPB::MsgPoint* pos_;
  friend void  protobuf_AddDesc_MsgGameDef_2eproto();
  friend void protobuf_AssignDesc_MsgGameDef_2eproto();
  friend void protobuf_ShutdownFile_MsgGameDef_2eproto();

  void InitAsDefaultInstance();
  static MsgGateTarget* default_instance_;
};
// -------------------------------------------------------------------

class KeyVal : public ::google::protobuf::Message {
 public:
  KeyVal();
  virtual ~KeyVal();

  KeyVal(const KeyVal& from);

  inline KeyVal& operator=(const KeyVal& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const KeyVal& default_instance();

  void Swap(KeyVal* other);

  // implements Message ----------------------------------------------

  KeyVal* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const KeyVal& from);
  void MergeFrom(const KeyVal& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 key = 1;
  inline bool has_key() const;
  inline void clear_key();
  static const int kKeyFieldNumber = 1;
  inline ::google::protobuf::int32 key() const;
  inline void set_key(::google::protobuf::int32 value);

  // optional int32 val = 2;
  inline bool has_val() const;
  inline void clear_val();
  static const int kValFieldNumber = 2;
  inline ::google::protobuf::int32 val() const;
  inline void set_val(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:MsgPB.KeyVal)
 private:
  inline void set_has_key();
  inline void clear_has_key();
  inline void set_has_val();
  inline void clear_has_val();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 key_;
  ::google::protobuf::int32 val_;
  friend void  protobuf_AddDesc_MsgGameDef_2eproto();
  friend void protobuf_AssignDesc_MsgGameDef_2eproto();
  friend void protobuf_ShutdownFile_MsgGameDef_2eproto();

  void InitAsDefaultInstance();
  static KeyVal* default_instance_;
};
// -------------------------------------------------------------------

class KeyValI64 : public ::google::protobuf::Message {
 public:
  KeyValI64();
  virtual ~KeyValI64();

  KeyValI64(const KeyValI64& from);

  inline KeyValI64& operator=(const KeyValI64& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const KeyValI64& default_instance();

  void Swap(KeyValI64* other);

  // implements Message ----------------------------------------------

  KeyValI64* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const KeyValI64& from);
  void MergeFrom(const KeyValI64& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 key = 1;
  inline bool has_key() const;
  inline void clear_key();
  static const int kKeyFieldNumber = 1;
  inline ::google::protobuf::int64 key() const;
  inline void set_key(::google::protobuf::int64 value);

  // optional int32 val = 2;
  inline bool has_val() const;
  inline void clear_val();
  static const int kValFieldNumber = 2;
  inline ::google::protobuf::int32 val() const;
  inline void set_val(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:MsgPB.KeyValI64)
 private:
  inline void set_has_key();
  inline void clear_has_key();
  inline void set_has_val();
  inline void clear_has_val();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 key_;
  ::google::protobuf::int32 val_;
  friend void  protobuf_AddDesc_MsgGameDef_2eproto();
  friend void protobuf_AssignDesc_MsgGameDef_2eproto();
  friend void protobuf_ShutdownFile_MsgGameDef_2eproto();

  void InitAsDefaultInstance();
  static KeyValI64* default_instance_;
};
// -------------------------------------------------------------------

class AttrEffect : public ::google::protobuf::Message {
 public:
  AttrEffect();
  virtual ~AttrEffect();

  AttrEffect(const AttrEffect& from);

  inline AttrEffect& operator=(const AttrEffect& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AttrEffect& default_instance();

  void Swap(AttrEffect* other);

  // implements Message ----------------------------------------------

  AttrEffect* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AttrEffect& from);
  void MergeFrom(const AttrEffect& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .MsgPB.ROLE_EFFECT_TYPE type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::MsgPB::ROLE_EFFECT_TYPE type() const;
  inline void set_type(::MsgPB::ROLE_EFFECT_TYPE value);

  // repeated .MsgPB.KeyVal values = 2;
  inline int values_size() const;
  inline void clear_values();
  static const int kValuesFieldNumber = 2;
  inline const ::MsgPB::KeyVal& values(int index) const;
  inline ::MsgPB::KeyVal* mutable_values(int index);
  inline ::MsgPB::KeyVal* add_values();
  inline const ::google::protobuf::RepeatedPtrField< ::MsgPB::KeyVal >&
      values() const;
  inline ::google::protobuf::RepeatedPtrField< ::MsgPB::KeyVal >*
      mutable_values();

  // @@protoc_insertion_point(class_scope:MsgPB.AttrEffect)
 private:
  inline void set_has_type();
  inline void clear_has_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::MsgPB::KeyVal > values_;
  int type_;
  friend void  protobuf_AddDesc_MsgGameDef_2eproto();
  friend void protobuf_AssignDesc_MsgGameDef_2eproto();
  friend void protobuf_ShutdownFile_MsgGameDef_2eproto();

  void InitAsDefaultInstance();
  static AttrEffect* default_instance_;
};
// -------------------------------------------------------------------

class UnderAttack : public ::google::protobuf::Message {
 public:
  UnderAttack();
  virtual ~UnderAttack();

  UnderAttack(const UnderAttack& from);

  inline UnderAttack& operator=(const UnderAttack& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UnderAttack& default_instance();

  void Swap(UnderAttack* other);

  // implements Message ----------------------------------------------

  UnderAttack* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UnderAttack& from);
  void MergeFrom(const UnderAttack& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 mapobjectid = 1;
  inline bool has_mapobjectid() const;
  inline void clear_mapobjectid();
  static const int kMapobjectidFieldNumber = 1;
  inline ::google::protobuf::int32 mapobjectid() const;
  inline void set_mapobjectid(::google::protobuf::int32 value);

  // optional int32 damage = 2;
  inline bool has_damage() const;
  inline void clear_damage();
  static const int kDamageFieldNumber = 2;
  inline ::google::protobuf::int32 damage() const;
  inline void set_damage(::google::protobuf::int32 value);

  // optional int32 criticl = 3;
  inline bool has_criticl() const;
  inline void clear_criticl();
  static const int kCriticlFieldNumber = 3;
  inline ::google::protobuf::int32 criticl() const;
  inline void set_criticl(::google::protobuf::int32 value);

  // optional int32 currhp = 4;
  inline bool has_currhp() const;
  inline void clear_currhp();
  static const int kCurrhpFieldNumber = 4;
  inline ::google::protobuf::int32 currhp() const;
  inline void set_currhp(::google::protobuf::int32 value);

  // optional int32 targetSkill = 5;
  inline bool has_targetskill() const;
  inline void clear_targetskill();
  static const int kTargetSkillFieldNumber = 5;
  inline ::google::protobuf::int32 targetskill() const;
  inline void set_targetskill(::google::protobuf::int32 value);

  // optional int32 durability = 6;
  inline bool has_durability() const;
  inline void clear_durability();
  static const int kDurabilityFieldNumber = 6;
  inline ::google::protobuf::int32 durability() const;
  inline void set_durability(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:MsgPB.UnderAttack)
 private:
  inline void set_has_mapobjectid();
  inline void clear_has_mapobjectid();
  inline void set_has_damage();
  inline void clear_has_damage();
  inline void set_has_criticl();
  inline void clear_has_criticl();
  inline void set_has_currhp();
  inline void clear_has_currhp();
  inline void set_has_targetskill();
  inline void clear_has_targetskill();
  inline void set_has_durability();
  inline void clear_has_durability();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 mapobjectid_;
  ::google::protobuf::int32 damage_;
  ::google::protobuf::int32 criticl_;
  ::google::protobuf::int32 currhp_;
  ::google::protobuf::int32 targetskill_;
  ::google::protobuf::int32 durability_;
  friend void  protobuf_AddDesc_MsgGameDef_2eproto();
  friend void protobuf_AssignDesc_MsgGameDef_2eproto();
  friend void protobuf_ShutdownFile_MsgGameDef_2eproto();

  void InitAsDefaultInstance();
  static UnderAttack* default_instance_;
};
// -------------------------------------------------------------------

class ItemReward : public ::google::protobuf::Message {
 public:
  ItemReward();
  virtual ~ItemReward();

  ItemReward(const ItemReward& from);

  inline ItemReward& operator=(const ItemReward& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ItemReward& default_instance();

  void Swap(ItemReward* other);

  // implements Message ----------------------------------------------

  ItemReward* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ItemReward& from);
  void MergeFrom(const ItemReward& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 ItemID = 1;
  inline bool has_itemid() const;
  inline void clear_itemid();
  static const int kItemIDFieldNumber = 1;
  inline ::google::protobuf::int32 itemid() const;
  inline void set_itemid(::google::protobuf::int32 value);

  // optional int32 ItemCount = 2;
  inline bool has_itemcount() const;
  inline void clear_itemcount();
  static const int kItemCountFieldNumber = 2;
  inline ::google::protobuf::int32 itemcount() const;
  inline void set_itemcount(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:MsgPB.ItemReward)
 private:
  inline void set_has_itemid();
  inline void clear_has_itemid();
  inline void set_has_itemcount();
  inline void clear_has_itemcount();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 itemid_;
  ::google::protobuf::int32 itemcount_;
  friend void  protobuf_AddDesc_MsgGameDef_2eproto();
  friend void protobuf_AssignDesc_MsgGameDef_2eproto();
  friend void protobuf_ShutdownFile_MsgGameDef_2eproto();

  void InitAsDefaultInstance();
  static ItemReward* default_instance_;
};
// -------------------------------------------------------------------

class MsgRepeatedUUID : public ::google::protobuf::Message {
 public:
  MsgRepeatedUUID();
  virtual ~MsgRepeatedUUID();

  MsgRepeatedUUID(const MsgRepeatedUUID& from);

  inline MsgRepeatedUUID& operator=(const MsgRepeatedUUID& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgRepeatedUUID& default_instance();

  void Swap(MsgRepeatedUUID* other);

  // implements Message ----------------------------------------------

  MsgRepeatedUUID* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgRepeatedUUID& from);
  void MergeFrom(const MsgRepeatedUUID& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 uuid = 1;
  inline bool has_uuid() const;
  inline void clear_uuid();
  static const int kUuidFieldNumber = 1;
  inline ::google::protobuf::int64 uuid() const;
  inline void set_uuid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:MsgPB.MsgRepeatedUUID)
 private:
  inline void set_has_uuid();
  inline void clear_has_uuid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 uuid_;
  friend void  protobuf_AddDesc_MsgGameDef_2eproto();
  friend void protobuf_AssignDesc_MsgGameDef_2eproto();
  friend void protobuf_ShutdownFile_MsgGameDef_2eproto();

  void InitAsDefaultInstance();
  static MsgRepeatedUUID* default_instance_;
};
// ===================================================================


// ===================================================================

// MsgPoint

// optional int32 x = 1;
inline bool MsgPoint::has_x() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgPoint::set_has_x() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgPoint::clear_has_x() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgPoint::clear_x() {
  x_ = 0;
  clear_has_x();
}
inline ::google::protobuf::int32 MsgPoint::x() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgPoint.x)
  return x_;
}
inline void MsgPoint::set_x(::google::protobuf::int32 value) {
  set_has_x();
  x_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgPoint.x)
}

// optional int32 y = 2;
inline bool MsgPoint::has_y() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MsgPoint::set_has_y() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MsgPoint::clear_has_y() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MsgPoint::clear_y() {
  y_ = 0;
  clear_has_y();
}
inline ::google::protobuf::int32 MsgPoint::y() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgPoint.y)
  return y_;
}
inline void MsgPoint::set_y(::google::protobuf::int32 value) {
  set_has_y();
  y_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgPoint.y)
}

// -------------------------------------------------------------------

// MsgSize

// optional int32 width = 1;
inline bool MsgSize::has_width() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgSize::set_has_width() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgSize::clear_has_width() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgSize::clear_width() {
  width_ = 0;
  clear_has_width();
}
inline ::google::protobuf::int32 MsgSize::width() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgSize.width)
  return width_;
}
inline void MsgSize::set_width(::google::protobuf::int32 value) {
  set_has_width();
  width_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgSize.width)
}

// optional int32 height = 2;
inline bool MsgSize::has_height() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MsgSize::set_has_height() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MsgSize::clear_has_height() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MsgSize::clear_height() {
  height_ = 0;
  clear_has_height();
}
inline ::google::protobuf::int32 MsgSize::height() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgSize.height)
  return height_;
}
inline void MsgSize::set_height(::google::protobuf::int32 value) {
  set_has_height();
  height_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgSize.height)
}

// -------------------------------------------------------------------

// MsgArea

// optional int32 left = 1;
inline bool MsgArea::has_left() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgArea::set_has_left() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgArea::clear_has_left() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgArea::clear_left() {
  left_ = 0;
  clear_has_left();
}
inline ::google::protobuf::int32 MsgArea::left() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgArea.left)
  return left_;
}
inline void MsgArea::set_left(::google::protobuf::int32 value) {
  set_has_left();
  left_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgArea.left)
}

// optional int32 top = 2;
inline bool MsgArea::has_top() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MsgArea::set_has_top() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MsgArea::clear_has_top() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MsgArea::clear_top() {
  top_ = 0;
  clear_has_top();
}
inline ::google::protobuf::int32 MsgArea::top() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgArea.top)
  return top_;
}
inline void MsgArea::set_top(::google::protobuf::int32 value) {
  set_has_top();
  top_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgArea.top)
}

// optional int32 right = 3;
inline bool MsgArea::has_right() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MsgArea::set_has_right() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MsgArea::clear_has_right() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MsgArea::clear_right() {
  right_ = 0;
  clear_has_right();
}
inline ::google::protobuf::int32 MsgArea::right() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgArea.right)
  return right_;
}
inline void MsgArea::set_right(::google::protobuf::int32 value) {
  set_has_right();
  right_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgArea.right)
}

// optional int32 bottom = 4;
inline bool MsgArea::has_bottom() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MsgArea::set_has_bottom() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MsgArea::clear_has_bottom() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MsgArea::clear_bottom() {
  bottom_ = 0;
  clear_has_bottom();
}
inline ::google::protobuf::int32 MsgArea::bottom() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgArea.bottom)
  return bottom_;
}
inline void MsgArea::set_bottom(::google::protobuf::int32 value) {
  set_has_bottom();
  bottom_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgArea.bottom)
}

// -------------------------------------------------------------------

// MsgCircle

// optional int32 x = 1;
inline bool MsgCircle::has_x() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgCircle::set_has_x() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgCircle::clear_has_x() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgCircle::clear_x() {
  x_ = 0;
  clear_has_x();
}
inline ::google::protobuf::int32 MsgCircle::x() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgCircle.x)
  return x_;
}
inline void MsgCircle::set_x(::google::protobuf::int32 value) {
  set_has_x();
  x_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgCircle.x)
}

// optional int32 y = 2;
inline bool MsgCircle::has_y() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MsgCircle::set_has_y() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MsgCircle::clear_has_y() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MsgCircle::clear_y() {
  y_ = 0;
  clear_has_y();
}
inline ::google::protobuf::int32 MsgCircle::y() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgCircle.y)
  return y_;
}
inline void MsgCircle::set_y(::google::protobuf::int32 value) {
  set_has_y();
  y_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgCircle.y)
}

// optional int32 radius = 3;
inline bool MsgCircle::has_radius() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MsgCircle::set_has_radius() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MsgCircle::clear_has_radius() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MsgCircle::clear_radius() {
  radius_ = 0;
  clear_has_radius();
}
inline ::google::protobuf::int32 MsgCircle::radius() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgCircle.radius)
  return radius_;
}
inline void MsgCircle::set_radius(::google::protobuf::int32 value) {
  set_has_radius();
  radius_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgCircle.radius)
}

// -------------------------------------------------------------------

// MsgGateTarget

// optional int32 id = 1;
inline bool MsgGateTarget::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgGateTarget::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgGateTarget::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgGateTarget::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 MsgGateTarget::id() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgGateTarget.id)
  return id_;
}
inline void MsgGateTarget::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgGateTarget.id)
}

// optional int32 type = 2;
inline bool MsgGateTarget::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MsgGateTarget::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MsgGateTarget::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MsgGateTarget::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 MsgGateTarget::type() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgGateTarget.type)
  return type_;
}
inline void MsgGateTarget::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgGateTarget.type)
}

// optional int32 mapId = 3;
inline bool MsgGateTarget::has_mapid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MsgGateTarget::set_has_mapid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MsgGateTarget::clear_has_mapid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MsgGateTarget::clear_mapid() {
  mapid_ = 0;
  clear_has_mapid();
}
inline ::google::protobuf::int32 MsgGateTarget::mapid() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgGateTarget.mapId)
  return mapid_;
}
inline void MsgGateTarget::set_mapid(::google::protobuf::int32 value) {
  set_has_mapid();
  mapid_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgGateTarget.mapId)
}

// optional int32 gateid = 4;
inline bool MsgGateTarget::has_gateid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MsgGateTarget::set_has_gateid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MsgGateTarget::clear_has_gateid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MsgGateTarget::clear_gateid() {
  gateid_ = 0;
  clear_has_gateid();
}
inline ::google::protobuf::int32 MsgGateTarget::gateid() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgGateTarget.gateid)
  return gateid_;
}
inline void MsgGateTarget::set_gateid(::google::protobuf::int32 value) {
  set_has_gateid();
  gateid_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgGateTarget.gateid)
}

// optional .MsgPB.MsgPoint pos = 5;
inline bool MsgGateTarget::has_pos() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void MsgGateTarget::set_has_pos() {
  _has_bits_[0] |= 0x00000010u;
}
inline void MsgGateTarget::clear_has_pos() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void MsgGateTarget::clear_pos() {
  if (pos_ != NULL) pos_->::MsgPB::MsgPoint::Clear();
  clear_has_pos();
}
inline const ::MsgPB::MsgPoint& MsgGateTarget::pos() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgGateTarget.pos)
  return pos_ != NULL ? *pos_ : *default_instance_->pos_;
}
inline ::MsgPB::MsgPoint* MsgGateTarget::mutable_pos() {
  set_has_pos();
  if (pos_ == NULL) pos_ = new ::MsgPB::MsgPoint;
  // @@protoc_insertion_point(field_mutable:MsgPB.MsgGateTarget.pos)
  return pos_;
}
inline ::MsgPB::MsgPoint* MsgGateTarget::release_pos() {
  clear_has_pos();
  ::MsgPB::MsgPoint* temp = pos_;
  pos_ = NULL;
  return temp;
}
inline void MsgGateTarget::set_allocated_pos(::MsgPB::MsgPoint* pos) {
  delete pos_;
  pos_ = pos;
  if (pos) {
    set_has_pos();
  } else {
    clear_has_pos();
  }
  // @@protoc_insertion_point(field_set_allocated:MsgPB.MsgGateTarget.pos)
}

// -------------------------------------------------------------------

// KeyVal

// optional int32 key = 1;
inline bool KeyVal::has_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void KeyVal::set_has_key() {
  _has_bits_[0] |= 0x00000001u;
}
inline void KeyVal::clear_has_key() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void KeyVal::clear_key() {
  key_ = 0;
  clear_has_key();
}
inline ::google::protobuf::int32 KeyVal::key() const {
  // @@protoc_insertion_point(field_get:MsgPB.KeyVal.key)
  return key_;
}
inline void KeyVal::set_key(::google::protobuf::int32 value) {
  set_has_key();
  key_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.KeyVal.key)
}

// optional int32 val = 2;
inline bool KeyVal::has_val() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void KeyVal::set_has_val() {
  _has_bits_[0] |= 0x00000002u;
}
inline void KeyVal::clear_has_val() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void KeyVal::clear_val() {
  val_ = 0;
  clear_has_val();
}
inline ::google::protobuf::int32 KeyVal::val() const {
  // @@protoc_insertion_point(field_get:MsgPB.KeyVal.val)
  return val_;
}
inline void KeyVal::set_val(::google::protobuf::int32 value) {
  set_has_val();
  val_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.KeyVal.val)
}

// -------------------------------------------------------------------

// KeyValI64

// optional int64 key = 1;
inline bool KeyValI64::has_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void KeyValI64::set_has_key() {
  _has_bits_[0] |= 0x00000001u;
}
inline void KeyValI64::clear_has_key() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void KeyValI64::clear_key() {
  key_ = GOOGLE_LONGLONG(0);
  clear_has_key();
}
inline ::google::protobuf::int64 KeyValI64::key() const {
  // @@protoc_insertion_point(field_get:MsgPB.KeyValI64.key)
  return key_;
}
inline void KeyValI64::set_key(::google::protobuf::int64 value) {
  set_has_key();
  key_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.KeyValI64.key)
}

// optional int32 val = 2;
inline bool KeyValI64::has_val() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void KeyValI64::set_has_val() {
  _has_bits_[0] |= 0x00000002u;
}
inline void KeyValI64::clear_has_val() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void KeyValI64::clear_val() {
  val_ = 0;
  clear_has_val();
}
inline ::google::protobuf::int32 KeyValI64::val() const {
  // @@protoc_insertion_point(field_get:MsgPB.KeyValI64.val)
  return val_;
}
inline void KeyValI64::set_val(::google::protobuf::int32 value) {
  set_has_val();
  val_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.KeyValI64.val)
}

// -------------------------------------------------------------------

// AttrEffect

// optional .MsgPB.ROLE_EFFECT_TYPE type = 1;
inline bool AttrEffect::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AttrEffect::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AttrEffect::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AttrEffect::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::MsgPB::ROLE_EFFECT_TYPE AttrEffect::type() const {
  // @@protoc_insertion_point(field_get:MsgPB.AttrEffect.type)
  return static_cast< ::MsgPB::ROLE_EFFECT_TYPE >(type_);
}
inline void AttrEffect::set_type(::MsgPB::ROLE_EFFECT_TYPE value) {
  assert(::MsgPB::ROLE_EFFECT_TYPE_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.AttrEffect.type)
}

// repeated .MsgPB.KeyVal values = 2;
inline int AttrEffect::values_size() const {
  return values_.size();
}
inline void AttrEffect::clear_values() {
  values_.Clear();
}
inline const ::MsgPB::KeyVal& AttrEffect::values(int index) const {
  // @@protoc_insertion_point(field_get:MsgPB.AttrEffect.values)
  return values_.Get(index);
}
inline ::MsgPB::KeyVal* AttrEffect::mutable_values(int index) {
  // @@protoc_insertion_point(field_mutable:MsgPB.AttrEffect.values)
  return values_.Mutable(index);
}
inline ::MsgPB::KeyVal* AttrEffect::add_values() {
  // @@protoc_insertion_point(field_add:MsgPB.AttrEffect.values)
  return values_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::MsgPB::KeyVal >&
AttrEffect::values() const {
  // @@protoc_insertion_point(field_list:MsgPB.AttrEffect.values)
  return values_;
}
inline ::google::protobuf::RepeatedPtrField< ::MsgPB::KeyVal >*
AttrEffect::mutable_values() {
  // @@protoc_insertion_point(field_mutable_list:MsgPB.AttrEffect.values)
  return &values_;
}

// -------------------------------------------------------------------

// UnderAttack

// optional int32 mapobjectid = 1;
inline bool UnderAttack::has_mapobjectid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UnderAttack::set_has_mapobjectid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UnderAttack::clear_has_mapobjectid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UnderAttack::clear_mapobjectid() {
  mapobjectid_ = 0;
  clear_has_mapobjectid();
}
inline ::google::protobuf::int32 UnderAttack::mapobjectid() const {
  // @@protoc_insertion_point(field_get:MsgPB.UnderAttack.mapobjectid)
  return mapobjectid_;
}
inline void UnderAttack::set_mapobjectid(::google::protobuf::int32 value) {
  set_has_mapobjectid();
  mapobjectid_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.UnderAttack.mapobjectid)
}

// optional int32 damage = 2;
inline bool UnderAttack::has_damage() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UnderAttack::set_has_damage() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UnderAttack::clear_has_damage() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UnderAttack::clear_damage() {
  damage_ = 0;
  clear_has_damage();
}
inline ::google::protobuf::int32 UnderAttack::damage() const {
  // @@protoc_insertion_point(field_get:MsgPB.UnderAttack.damage)
  return damage_;
}
inline void UnderAttack::set_damage(::google::protobuf::int32 value) {
  set_has_damage();
  damage_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.UnderAttack.damage)
}

// optional int32 criticl = 3;
inline bool UnderAttack::has_criticl() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void UnderAttack::set_has_criticl() {
  _has_bits_[0] |= 0x00000004u;
}
inline void UnderAttack::clear_has_criticl() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void UnderAttack::clear_criticl() {
  criticl_ = 0;
  clear_has_criticl();
}
inline ::google::protobuf::int32 UnderAttack::criticl() const {
  // @@protoc_insertion_point(field_get:MsgPB.UnderAttack.criticl)
  return criticl_;
}
inline void UnderAttack::set_criticl(::google::protobuf::int32 value) {
  set_has_criticl();
  criticl_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.UnderAttack.criticl)
}

// optional int32 currhp = 4;
inline bool UnderAttack::has_currhp() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void UnderAttack::set_has_currhp() {
  _has_bits_[0] |= 0x00000008u;
}
inline void UnderAttack::clear_has_currhp() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void UnderAttack::clear_currhp() {
  currhp_ = 0;
  clear_has_currhp();
}
inline ::google::protobuf::int32 UnderAttack::currhp() const {
  // @@protoc_insertion_point(field_get:MsgPB.UnderAttack.currhp)
  return currhp_;
}
inline void UnderAttack::set_currhp(::google::protobuf::int32 value) {
  set_has_currhp();
  currhp_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.UnderAttack.currhp)
}

// optional int32 targetSkill = 5;
inline bool UnderAttack::has_targetskill() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void UnderAttack::set_has_targetskill() {
  _has_bits_[0] |= 0x00000010u;
}
inline void UnderAttack::clear_has_targetskill() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void UnderAttack::clear_targetskill() {
  targetskill_ = 0;
  clear_has_targetskill();
}
inline ::google::protobuf::int32 UnderAttack::targetskill() const {
  // @@protoc_insertion_point(field_get:MsgPB.UnderAttack.targetSkill)
  return targetskill_;
}
inline void UnderAttack::set_targetskill(::google::protobuf::int32 value) {
  set_has_targetskill();
  targetskill_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.UnderAttack.targetSkill)
}

// optional int32 durability = 6;
inline bool UnderAttack::has_durability() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void UnderAttack::set_has_durability() {
  _has_bits_[0] |= 0x00000020u;
}
inline void UnderAttack::clear_has_durability() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void UnderAttack::clear_durability() {
  durability_ = 0;
  clear_has_durability();
}
inline ::google::protobuf::int32 UnderAttack::durability() const {
  // @@protoc_insertion_point(field_get:MsgPB.UnderAttack.durability)
  return durability_;
}
inline void UnderAttack::set_durability(::google::protobuf::int32 value) {
  set_has_durability();
  durability_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.UnderAttack.durability)
}

// -------------------------------------------------------------------

// ItemReward

// optional int32 ItemID = 1;
inline bool ItemReward::has_itemid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ItemReward::set_has_itemid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ItemReward::clear_has_itemid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ItemReward::clear_itemid() {
  itemid_ = 0;
  clear_has_itemid();
}
inline ::google::protobuf::int32 ItemReward::itemid() const {
  // @@protoc_insertion_point(field_get:MsgPB.ItemReward.ItemID)
  return itemid_;
}
inline void ItemReward::set_itemid(::google::protobuf::int32 value) {
  set_has_itemid();
  itemid_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.ItemReward.ItemID)
}

// optional int32 ItemCount = 2;
inline bool ItemReward::has_itemcount() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ItemReward::set_has_itemcount() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ItemReward::clear_has_itemcount() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ItemReward::clear_itemcount() {
  itemcount_ = 0;
  clear_has_itemcount();
}
inline ::google::protobuf::int32 ItemReward::itemcount() const {
  // @@protoc_insertion_point(field_get:MsgPB.ItemReward.ItemCount)
  return itemcount_;
}
inline void ItemReward::set_itemcount(::google::protobuf::int32 value) {
  set_has_itemcount();
  itemcount_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.ItemReward.ItemCount)
}

// -------------------------------------------------------------------

// MsgRepeatedUUID

// optional int64 uuid = 1;
inline bool MsgRepeatedUUID::has_uuid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgRepeatedUUID::set_has_uuid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgRepeatedUUID::clear_has_uuid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgRepeatedUUID::clear_uuid() {
  uuid_ = GOOGLE_LONGLONG(0);
  clear_has_uuid();
}
inline ::google::protobuf::int64 MsgRepeatedUUID::uuid() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgRepeatedUUID.uuid)
  return uuid_;
}
inline void MsgRepeatedUUID::set_uuid(::google::protobuf::int64 value) {
  set_has_uuid();
  uuid_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgRepeatedUUID.uuid)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace MsgPB

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::MsgPB::E_ErrorCode> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::MsgPB::E_ErrorCode>() {
  return ::MsgPB::E_ErrorCode_descriptor();
}
template <> struct is_proto_enum< ::MsgPB::ITEM_SUBTYPE> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::MsgPB::ITEM_SUBTYPE>() {
  return ::MsgPB::ITEM_SUBTYPE_descriptor();
}
template <> struct is_proto_enum< ::MsgPB::EQUIP_TYPE> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::MsgPB::EQUIP_TYPE>() {
  return ::MsgPB::EQUIP_TYPE_descriptor();
}
template <> struct is_proto_enum< ::MsgPB::ARMOR_EQUIP_POS> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::MsgPB::ARMOR_EQUIP_POS>() {
  return ::MsgPB::ARMOR_EQUIP_POS_descriptor();
}
template <> struct is_proto_enum< ::MsgPB::ROLE_EFFECT_TYPE> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::MsgPB::ROLE_EFFECT_TYPE>() {
  return ::MsgPB::ROLE_EFFECT_TYPE_descriptor();
}
template <> struct is_proto_enum< ::MsgPB::SKILL_STATUS> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::MsgPB::SKILL_STATUS>() {
  return ::MsgPB::SKILL_STATUS_descriptor();
}
template <> struct is_proto_enum< ::MsgPB::SURVIVAL_GAME_RESULT> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::MsgPB::SURVIVAL_GAME_RESULT>() {
  return ::MsgPB::SURVIVAL_GAME_RESULT_descriptor();
}
template <> struct is_proto_enum< ::MsgPB::PROTECTOR_STATUS> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::MsgPB::PROTECTOR_STATUS>() {
  return ::MsgPB::PROTECTOR_STATUS_descriptor();
}
template <> struct is_proto_enum< ::MsgPB::PROTECTOR_LESS_THAN_REQUIRED> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::MsgPB::PROTECTOR_LESS_THAN_REQUIRED>() {
  return ::MsgPB::PROTECTOR_LESS_THAN_REQUIRED_descriptor();
}
template <> struct is_proto_enum< ::MsgPB::PROTECTOR_WAIT_TYPE> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::MsgPB::PROTECTOR_WAIT_TYPE>() {
  return ::MsgPB::PROTECTOR_WAIT_TYPE_descriptor();
}
template <> struct is_proto_enum< ::MsgPB::MEDICAMENT_TYPE> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::MsgPB::MEDICAMENT_TYPE>() {
  return ::MsgPB::MEDICAMENT_TYPE_descriptor();
}
template <> struct is_proto_enum< ::MsgPB::ACHIEVE_STATUS> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::MsgPB::ACHIEVE_STATUS>() {
  return ::MsgPB::ACHIEVE_STATUS_descriptor();
}
template <> struct is_proto_enum< ::MsgPB::MAIL_STATUS> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::MsgPB::MAIL_STATUS>() {
  return ::MsgPB::MAIL_STATUS_descriptor();
}
template <> struct is_proto_enum< ::MsgPB::QUALITY_GRADE> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::MsgPB::QUALITY_GRADE>() {
  return ::MsgPB::QUALITY_GRADE_descriptor();
}
template <> struct is_proto_enum< ::MsgPB::QUALITY_GRADE_FOR_DB_SETTING> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::MsgPB::QUALITY_GRADE_FOR_DB_SETTING>() {
  return ::MsgPB::QUALITY_GRADE_FOR_DB_SETTING_descriptor();
}
template <> struct is_proto_enum< ::MsgPB::ITEM_CURRENCY_TYPE> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::MsgPB::ITEM_CURRENCY_TYPE>() {
  return ::MsgPB::ITEM_CURRENCY_TYPE_descriptor();
}
template <> struct is_proto_enum< ::MsgPB::MSG_MOVE_DIR> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::MsgPB::MSG_MOVE_DIR>() {
  return ::MsgPB::MSG_MOVE_DIR_descriptor();
}
template <> struct is_proto_enum< ::MsgPB::MSG_MOVE_STAT> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::MsgPB::MSG_MOVE_STAT>() {
  return ::MsgPB::MSG_MOVE_STAT_descriptor();
}
template <> struct is_proto_enum< ::MsgPB::E_AntiqueQuality> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::MsgPB::E_AntiqueQuality>() {
  return ::MsgPB::E_AntiqueQuality_descriptor();
}
template <> struct is_proto_enum< ::MsgPB::E_AntiqueIntegrity> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::MsgPB::E_AntiqueIntegrity>() {
  return ::MsgPB::E_AntiqueIntegrity_descriptor();
}
template <> struct is_proto_enum< ::MsgPB::EN_FUNCTION_LOCK_BIT> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::MsgPB::EN_FUNCTION_LOCK_BIT>() {
  return ::MsgPB::EN_FUNCTION_LOCK_BIT_descriptor();
}
template <> struct is_proto_enum< ::MsgPB::EN_PLAYER_EVENT_TYPE> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::MsgPB::EN_PLAYER_EVENT_TYPE>() {
  return ::MsgPB::EN_PLAYER_EVENT_TYPE_descriptor();
}
template <> struct is_proto_enum< ::MsgPB::GAME_NEWS_TYPE> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::MsgPB::GAME_NEWS_TYPE>() {
  return ::MsgPB::GAME_NEWS_TYPE_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_MsgGameDef_2eproto__INCLUDED
