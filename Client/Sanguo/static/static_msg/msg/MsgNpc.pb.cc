// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MsgNpc.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "MsgNpc.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace MsgPB {

namespace {

const ::google::protobuf::Descriptor* MsgNpcRentC2S_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgNpcRentC2S_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgNpcRentResultS2C_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgNpcRentResultS2C_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* MsgNpcRentResultS2C_RESULT_descriptor_ = NULL;
const ::google::protobuf::Descriptor* MsgNpcGiftC2S_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgNpcGiftC2S_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgNpcGiftResultS2C_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgNpcGiftResultS2C_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* MsgNpcGiftResultS2C_RESULT_descriptor_ = NULL;
const ::google::protobuf::Descriptor* MsgNpcFeaturesC2S_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgNpcFeaturesC2S_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgNpcFeaturesResultS2C_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgNpcFeaturesResultS2C_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* MsgNpcFeaturesResultS2C_RESULT_descriptor_ = NULL;
const ::google::protobuf::Descriptor* MsgNpcCreateG2C_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgNpcCreateG2C_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgNpcDestroyG2C_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgNpcDestroyG2C_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgNpcAppearance_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgNpcAppearance_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_MsgNpc_2eproto() {
  protobuf_AddDesc_MsgNpc_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "MsgNpc.proto");
  GOOGLE_CHECK(file != NULL);
  MsgNpcRentC2S_descriptor_ = file->message_type(0);
  static const int MsgNpcRentC2S_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgNpcRentC2S, msgtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgNpcRentC2S, npcdefid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgNpcRentC2S, mapobjectid_),
  };
  MsgNpcRentC2S_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgNpcRentC2S_descriptor_,
      MsgNpcRentC2S::default_instance_,
      MsgNpcRentC2S_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgNpcRentC2S, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgNpcRentC2S, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgNpcRentC2S));
  MsgNpcRentResultS2C_descriptor_ = file->message_type(1);
  static const int MsgNpcRentResultS2C_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgNpcRentResultS2C, msgtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgNpcRentResultS2C, result_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgNpcRentResultS2C, coin_),
  };
  MsgNpcRentResultS2C_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgNpcRentResultS2C_descriptor_,
      MsgNpcRentResultS2C::default_instance_,
      MsgNpcRentResultS2C_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgNpcRentResultS2C, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgNpcRentResultS2C, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgNpcRentResultS2C));
  MsgNpcRentResultS2C_RESULT_descriptor_ = MsgNpcRentResultS2C_descriptor_->enum_type(0);
  MsgNpcGiftC2S_descriptor_ = file->message_type(2);
  static const int MsgNpcGiftC2S_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgNpcGiftC2S, msgtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgNpcGiftC2S, npcdefid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgNpcGiftC2S, mapobjectid_),
  };
  MsgNpcGiftC2S_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgNpcGiftC2S_descriptor_,
      MsgNpcGiftC2S::default_instance_,
      MsgNpcGiftC2S_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgNpcGiftC2S, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgNpcGiftC2S, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgNpcGiftC2S));
  MsgNpcGiftResultS2C_descriptor_ = file->message_type(3);
  static const int MsgNpcGiftResultS2C_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgNpcGiftResultS2C, msgtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgNpcGiftResultS2C, result_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgNpcGiftResultS2C, itemid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgNpcGiftResultS2C, itemcount_),
  };
  MsgNpcGiftResultS2C_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgNpcGiftResultS2C_descriptor_,
      MsgNpcGiftResultS2C::default_instance_,
      MsgNpcGiftResultS2C_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgNpcGiftResultS2C, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgNpcGiftResultS2C, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgNpcGiftResultS2C));
  MsgNpcGiftResultS2C_RESULT_descriptor_ = MsgNpcGiftResultS2C_descriptor_->enum_type(0);
  MsgNpcFeaturesC2S_descriptor_ = file->message_type(4);
  static const int MsgNpcFeaturesC2S_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgNpcFeaturesC2S, msgtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgNpcFeaturesC2S, npcdefid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgNpcFeaturesC2S, mapobjectid_),
  };
  MsgNpcFeaturesC2S_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgNpcFeaturesC2S_descriptor_,
      MsgNpcFeaturesC2S::default_instance_,
      MsgNpcFeaturesC2S_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgNpcFeaturesC2S, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgNpcFeaturesC2S, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgNpcFeaturesC2S));
  MsgNpcFeaturesResultS2C_descriptor_ = file->message_type(5);
  static const int MsgNpcFeaturesResultS2C_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgNpcFeaturesResultS2C, msgtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgNpcFeaturesResultS2C, result_),
  };
  MsgNpcFeaturesResultS2C_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgNpcFeaturesResultS2C_descriptor_,
      MsgNpcFeaturesResultS2C::default_instance_,
      MsgNpcFeaturesResultS2C_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgNpcFeaturesResultS2C, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgNpcFeaturesResultS2C, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgNpcFeaturesResultS2C));
  MsgNpcFeaturesResultS2C_RESULT_descriptor_ = MsgNpcFeaturesResultS2C_descriptor_->enum_type(0);
  MsgNpcCreateG2C_descriptor_ = file->message_type(6);
  static const int MsgNpcCreateG2C_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgNpcCreateG2C, msgtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgNpcCreateG2C, npcinsid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgNpcCreateG2C, npcdefid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgNpcCreateG2C, mapobjectid_),
  };
  MsgNpcCreateG2C_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgNpcCreateG2C_descriptor_,
      MsgNpcCreateG2C::default_instance_,
      MsgNpcCreateG2C_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgNpcCreateG2C, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgNpcCreateG2C, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgNpcCreateG2C));
  MsgNpcDestroyG2C_descriptor_ = file->message_type(7);
  static const int MsgNpcDestroyG2C_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgNpcDestroyG2C, msgtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgNpcDestroyG2C, npcinsid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgNpcDestroyG2C, mapobjectid_),
  };
  MsgNpcDestroyG2C_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgNpcDestroyG2C_descriptor_,
      MsgNpcDestroyG2C::default_instance_,
      MsgNpcDestroyG2C_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgNpcDestroyG2C, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgNpcDestroyG2C, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgNpcDestroyG2C));
  MsgNpcAppearance_descriptor_ = file->message_type(8);
  static const int MsgNpcAppearance_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgNpcAppearance, msgtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgNpcAppearance, npcinsid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgNpcAppearance, npcdefid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgNpcAppearance, mapobjectid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgNpcAppearance, movepath_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgNpcAppearance, buff_infos_),
  };
  MsgNpcAppearance_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgNpcAppearance_descriptor_,
      MsgNpcAppearance::default_instance_,
      MsgNpcAppearance_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgNpcAppearance, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgNpcAppearance, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgNpcAppearance));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_MsgNpc_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgNpcRentC2S_descriptor_, &MsgNpcRentC2S::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgNpcRentResultS2C_descriptor_, &MsgNpcRentResultS2C::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgNpcGiftC2S_descriptor_, &MsgNpcGiftC2S::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgNpcGiftResultS2C_descriptor_, &MsgNpcGiftResultS2C::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgNpcFeaturesC2S_descriptor_, &MsgNpcFeaturesC2S::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgNpcFeaturesResultS2C_descriptor_, &MsgNpcFeaturesResultS2C::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgNpcCreateG2C_descriptor_, &MsgNpcCreateG2C::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgNpcDestroyG2C_descriptor_, &MsgNpcDestroyG2C::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgNpcAppearance_descriptor_, &MsgNpcAppearance::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_MsgNpc_2eproto() {
  delete MsgNpcRentC2S::default_instance_;
  delete MsgNpcRentC2S_reflection_;
  delete MsgNpcRentResultS2C::default_instance_;
  delete MsgNpcRentResultS2C_reflection_;
  delete MsgNpcGiftC2S::default_instance_;
  delete MsgNpcGiftC2S_reflection_;
  delete MsgNpcGiftResultS2C::default_instance_;
  delete MsgNpcGiftResultS2C_reflection_;
  delete MsgNpcFeaturesC2S::default_instance_;
  delete MsgNpcFeaturesC2S_reflection_;
  delete MsgNpcFeaturesResultS2C::default_instance_;
  delete MsgNpcFeaturesResultS2C_reflection_;
  delete MsgNpcCreateG2C::default_instance_;
  delete MsgNpcCreateG2C_reflection_;
  delete MsgNpcDestroyG2C::default_instance_;
  delete MsgNpcDestroyG2C_reflection_;
  delete MsgNpcAppearance::default_instance_;
  delete MsgNpcAppearance_reflection_;
}

void protobuf_AddDesc_MsgNpc_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::MsgPB::protobuf_AddDesc_MsgType_2eproto();
  ::MsgPB::protobuf_AddDesc_MsgMove_2eproto();
  ::MsgPB::protobuf_AddDesc_MsgBuff_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\014MsgNpc.proto\022\005MsgPB\032\rMsgType.proto\032\rMs"
    "gMove.proto\032\rMsgBuff.proto\"k\n\rMsgNpcRent"
    "C2S\0223\n\007msgType\030\001 \001(\0162\017.MsgPB.EMsgType:\021_"
    "MSG_NPC_RENT_C2S\022\020\n\010npcDefID\030\002 \001(\005\022\023\n\013ma"
    "pObjectID\030\003 \001(\005\"\277\001\n\023MsgNpcRentResultS2C\022"
    ":\n\007msgType\030\001 \001(\0162\017.MsgPB.EMsgType:\030_MSG_"
    "NPC_RENT_RESULT_S2C\0221\n\006result\030\002 \001(\0162!.Ms"
    "gPB.MsgNpcRentResultS2C.RESULT\022\014\n\004coin\030\003"
    " \001(\005\"+\n\006RESULT\022\024\n\007FAILURE\020\377\377\377\377\377\377\377\377\377\001\022\013\n\007"
    "SUCCESS\020\000\"k\n\rMsgNpcGiftC2S\0223\n\007msgType\030\001 "
    "\001(\0162\017.MsgPB.EMsgType:\021_MSG_NPC_GIFT_C2S\022"
    "\020\n\010npcDefID\030\002 \001(\005\022\023\n\013mapObjectID\030\003 \001(\005\"\324"
    "\001\n\023MsgNpcGiftResultS2C\022:\n\007msgType\030\001 \001(\0162"
    "\017.MsgPB.EMsgType:\030_MSG_NPC_GIFT_RESULT_S"
    "2C\0221\n\006result\030\002 \001(\0162!.MsgPB.MsgNpcGiftRes"
    "ultS2C.RESULT\022\016\n\006itemID\030\003 \001(\005\022\021\n\titemCou"
    "nt\030\004 \001(\005\"+\n\006RESULT\022\024\n\007FAILURE\020\377\377\377\377\377\377\377\377\377\001"
    "\022\013\n\007SUCCESS\020\000\"s\n\021MsgNpcFeaturesC2S\0227\n\007ms"
    "gType\030\001 \001(\0162\017.MsgPB.EMsgType:\025_MSG_NPC_F"
    "EATURES_C2S\022\020\n\010npcDefID\030\002 \001(\005\022\023\n\013mapObje"
    "ctID\030\003 \001(\005\"\275\001\n\027MsgNpcFeaturesResultS2C\022>"
    "\n\007msgType\030\001 \001(\0162\017.MsgPB.EMsgType:\034_MSG_N"
    "PC_FEATURES_RESULT_S2C\0225\n\006result\030\002 \001(\0162%"
    ".MsgPB.MsgNpcFeaturesResultS2C.RESULT\"+\n"
    "\006RESULT\022\024\n\007FAILURE\020\377\377\377\377\377\377\377\377\377\001\022\013\n\007SUCCESS"
    "\020\000\"\201\001\n\017MsgNpcCreateG2C\0225\n\007msgType\030\001 \001(\0162"
    "\017.MsgPB.EMsgType:\023_MSG_NPC_CREATE_G2C\022\020\n"
    "\010npcInsID\030\002 \001(\003\022\020\n\010npcDefID\030\003 \001(\005\022\023\n\013map"
    "ObjectID\030\004 \001(\005\"q\n\020MsgNpcDestroyG2C\0226\n\007ms"
    "gType\030\001 \001(\0162\017.MsgPB.EMsgType:\024_MSG_NPC_D"
    "ESTROY_G2C\022\020\n\010npcInsID\030\002 \001(\003\022\023\n\013mapObjec"
    "tID\030\003 \001(\005\"\322\001\n\020MsgNpcAppearance\0224\n\007msgTyp"
    "e\030\001 \001(\0162\017.MsgPB.EMsgType:\022_MSG_NPC_APPEA"
    "RACE\022\020\n\010npcInsID\030\002 \001(\003\022\020\n\010npcDefId\030\003 \001(\005"
    "\022\023\n\013mapObjectId\030\004 \001(\005\022$\n\010movePath\030\007 \001(\0132"
    "\022.MsgPB.MsgMovePath\022)\n\nbuff_infos\030\010 \003(\0132"
    "\025.MsgPB.ServerBuffInfo", 1462);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "MsgNpc.proto", &protobuf_RegisterTypes);
  MsgNpcRentC2S::default_instance_ = new MsgNpcRentC2S();
  MsgNpcRentResultS2C::default_instance_ = new MsgNpcRentResultS2C();
  MsgNpcGiftC2S::default_instance_ = new MsgNpcGiftC2S();
  MsgNpcGiftResultS2C::default_instance_ = new MsgNpcGiftResultS2C();
  MsgNpcFeaturesC2S::default_instance_ = new MsgNpcFeaturesC2S();
  MsgNpcFeaturesResultS2C::default_instance_ = new MsgNpcFeaturesResultS2C();
  MsgNpcCreateG2C::default_instance_ = new MsgNpcCreateG2C();
  MsgNpcDestroyG2C::default_instance_ = new MsgNpcDestroyG2C();
  MsgNpcAppearance::default_instance_ = new MsgNpcAppearance();
  MsgNpcRentC2S::default_instance_->InitAsDefaultInstance();
  MsgNpcRentResultS2C::default_instance_->InitAsDefaultInstance();
  MsgNpcGiftC2S::default_instance_->InitAsDefaultInstance();
  MsgNpcGiftResultS2C::default_instance_->InitAsDefaultInstance();
  MsgNpcFeaturesC2S::default_instance_->InitAsDefaultInstance();
  MsgNpcFeaturesResultS2C::default_instance_->InitAsDefaultInstance();
  MsgNpcCreateG2C::default_instance_->InitAsDefaultInstance();
  MsgNpcDestroyG2C::default_instance_->InitAsDefaultInstance();
  MsgNpcAppearance::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_MsgNpc_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_MsgNpc_2eproto {
  StaticDescriptorInitializer_MsgNpc_2eproto() {
    protobuf_AddDesc_MsgNpc_2eproto();
  }
} static_descriptor_initializer_MsgNpc_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int MsgNpcRentC2S::kMsgTypeFieldNumber;
const int MsgNpcRentC2S::kNpcDefIDFieldNumber;
const int MsgNpcRentC2S::kMapObjectIDFieldNumber;
#endif  // !_MSC_VER

MsgNpcRentC2S::MsgNpcRentC2S()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.MsgNpcRentC2S)
}

void MsgNpcRentC2S::InitAsDefaultInstance() {
}

MsgNpcRentC2S::MsgNpcRentC2S(const MsgNpcRentC2S& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.MsgNpcRentC2S)
}

void MsgNpcRentC2S::SharedCtor() {
  _cached_size_ = 0;
  msgtype_ = 1550;
  npcdefid_ = 0;
  mapobjectid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgNpcRentC2S::~MsgNpcRentC2S() {
  // @@protoc_insertion_point(destructor:MsgPB.MsgNpcRentC2S)
  SharedDtor();
}

void MsgNpcRentC2S::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgNpcRentC2S::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgNpcRentC2S::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgNpcRentC2S_descriptor_;
}

const MsgNpcRentC2S& MsgNpcRentC2S::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgNpc_2eproto();
  return *default_instance_;
}

MsgNpcRentC2S* MsgNpcRentC2S::default_instance_ = NULL;

MsgNpcRentC2S* MsgNpcRentC2S::New() const {
  return new MsgNpcRentC2S;
}

void MsgNpcRentC2S::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<MsgNpcRentC2S*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 7) {
    ZR_(npcdefid_, mapobjectid_);
    msgtype_ = 1550;
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgNpcRentC2S::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.MsgNpcRentC2S)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_NPC_RENT_C2S];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::EMsgType_IsValid(value)) {
            set_msgtype(static_cast< ::MsgPB::EMsgType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_npcDefID;
        break;
      }

      // optional int32 npcDefID = 2;
      case 2: {
        if (tag == 16) {
         parse_npcDefID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &npcdefid_)));
          set_has_npcdefid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_mapObjectID;
        break;
      }

      // optional int32 mapObjectID = 3;
      case 3: {
        if (tag == 24) {
         parse_mapObjectID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &mapobjectid_)));
          set_has_mapobjectid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.MsgNpcRentC2S)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.MsgNpcRentC2S)
  return false;
#undef DO_
}

void MsgNpcRentC2S::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.MsgNpcRentC2S)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_NPC_RENT_C2S];
  if (has_msgtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->msgtype(), output);
  }

  // optional int32 npcDefID = 2;
  if (has_npcdefid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->npcdefid(), output);
  }

  // optional int32 mapObjectID = 3;
  if (has_mapobjectid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->mapobjectid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.MsgNpcRentC2S)
}

::google::protobuf::uint8* MsgNpcRentC2S::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.MsgNpcRentC2S)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_NPC_RENT_C2S];
  if (has_msgtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->msgtype(), target);
  }

  // optional int32 npcDefID = 2;
  if (has_npcdefid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->npcdefid(), target);
  }

  // optional int32 mapObjectID = 3;
  if (has_mapobjectid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->mapobjectid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.MsgNpcRentC2S)
  return target;
}

int MsgNpcRentC2S::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_NPC_RENT_C2S];
    if (has_msgtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgtype());
    }

    // optional int32 npcDefID = 2;
    if (has_npcdefid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->npcdefid());
    }

    // optional int32 mapObjectID = 3;
    if (has_mapobjectid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->mapobjectid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgNpcRentC2S::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgNpcRentC2S* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgNpcRentC2S*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgNpcRentC2S::MergeFrom(const MsgNpcRentC2S& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msgtype()) {
      set_msgtype(from.msgtype());
    }
    if (from.has_npcdefid()) {
      set_npcdefid(from.npcdefid());
    }
    if (from.has_mapobjectid()) {
      set_mapobjectid(from.mapobjectid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgNpcRentC2S::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgNpcRentC2S::CopyFrom(const MsgNpcRentC2S& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgNpcRentC2S::IsInitialized() const {

  return true;
}

void MsgNpcRentC2S::Swap(MsgNpcRentC2S* other) {
  if (other != this) {
    std::swap(msgtype_, other->msgtype_);
    std::swap(npcdefid_, other->npcdefid_);
    std::swap(mapobjectid_, other->mapobjectid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgNpcRentC2S::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgNpcRentC2S_descriptor_;
  metadata.reflection = MsgNpcRentC2S_reflection_;
  return metadata;
}


// ===================================================================

const ::google::protobuf::EnumDescriptor* MsgNpcRentResultS2C_RESULT_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgNpcRentResultS2C_RESULT_descriptor_;
}
bool MsgNpcRentResultS2C_RESULT_IsValid(int value) {
  switch(value) {
    case -1:
    case 0:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const MsgNpcRentResultS2C_RESULT MsgNpcRentResultS2C::FAILURE;
const MsgNpcRentResultS2C_RESULT MsgNpcRentResultS2C::SUCCESS;
const MsgNpcRentResultS2C_RESULT MsgNpcRentResultS2C::RESULT_MIN;
const MsgNpcRentResultS2C_RESULT MsgNpcRentResultS2C::RESULT_MAX;
const int MsgNpcRentResultS2C::RESULT_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int MsgNpcRentResultS2C::kMsgTypeFieldNumber;
const int MsgNpcRentResultS2C::kResultFieldNumber;
const int MsgNpcRentResultS2C::kCoinFieldNumber;
#endif  // !_MSC_VER

MsgNpcRentResultS2C::MsgNpcRentResultS2C()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.MsgNpcRentResultS2C)
}

void MsgNpcRentResultS2C::InitAsDefaultInstance() {
}

MsgNpcRentResultS2C::MsgNpcRentResultS2C(const MsgNpcRentResultS2C& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.MsgNpcRentResultS2C)
}

void MsgNpcRentResultS2C::SharedCtor() {
  _cached_size_ = 0;
  msgtype_ = 1551;
  result_ = -1;
  coin_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgNpcRentResultS2C::~MsgNpcRentResultS2C() {
  // @@protoc_insertion_point(destructor:MsgPB.MsgNpcRentResultS2C)
  SharedDtor();
}

void MsgNpcRentResultS2C::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgNpcRentResultS2C::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgNpcRentResultS2C::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgNpcRentResultS2C_descriptor_;
}

const MsgNpcRentResultS2C& MsgNpcRentResultS2C::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgNpc_2eproto();
  return *default_instance_;
}

MsgNpcRentResultS2C* MsgNpcRentResultS2C::default_instance_ = NULL;

MsgNpcRentResultS2C* MsgNpcRentResultS2C::New() const {
  return new MsgNpcRentResultS2C;
}

void MsgNpcRentResultS2C::Clear() {
  if (_has_bits_[0 / 32] & 7) {
    msgtype_ = 1551;
    result_ = -1;
    coin_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgNpcRentResultS2C::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.MsgNpcRentResultS2C)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_NPC_RENT_RESULT_S2C];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::EMsgType_IsValid(value)) {
            set_msgtype(static_cast< ::MsgPB::EMsgType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_result;
        break;
      }

      // optional .MsgPB.MsgNpcRentResultS2C.RESULT result = 2;
      case 2: {
        if (tag == 16) {
         parse_result:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::MsgNpcRentResultS2C_RESULT_IsValid(value)) {
            set_result(static_cast< ::MsgPB::MsgNpcRentResultS2C_RESULT >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_coin;
        break;
      }

      // optional int32 coin = 3;
      case 3: {
        if (tag == 24) {
         parse_coin:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &coin_)));
          set_has_coin();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.MsgNpcRentResultS2C)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.MsgNpcRentResultS2C)
  return false;
#undef DO_
}

void MsgNpcRentResultS2C::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.MsgNpcRentResultS2C)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_NPC_RENT_RESULT_S2C];
  if (has_msgtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->msgtype(), output);
  }

  // optional .MsgPB.MsgNpcRentResultS2C.RESULT result = 2;
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->result(), output);
  }

  // optional int32 coin = 3;
  if (has_coin()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->coin(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.MsgNpcRentResultS2C)
}

::google::protobuf::uint8* MsgNpcRentResultS2C::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.MsgNpcRentResultS2C)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_NPC_RENT_RESULT_S2C];
  if (has_msgtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->msgtype(), target);
  }

  // optional .MsgPB.MsgNpcRentResultS2C.RESULT result = 2;
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->result(), target);
  }

  // optional int32 coin = 3;
  if (has_coin()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->coin(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.MsgNpcRentResultS2C)
  return target;
}

int MsgNpcRentResultS2C::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_NPC_RENT_RESULT_S2C];
    if (has_msgtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgtype());
    }

    // optional .MsgPB.MsgNpcRentResultS2C.RESULT result = 2;
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->result());
    }

    // optional int32 coin = 3;
    if (has_coin()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->coin());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgNpcRentResultS2C::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgNpcRentResultS2C* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgNpcRentResultS2C*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgNpcRentResultS2C::MergeFrom(const MsgNpcRentResultS2C& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msgtype()) {
      set_msgtype(from.msgtype());
    }
    if (from.has_result()) {
      set_result(from.result());
    }
    if (from.has_coin()) {
      set_coin(from.coin());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgNpcRentResultS2C::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgNpcRentResultS2C::CopyFrom(const MsgNpcRentResultS2C& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgNpcRentResultS2C::IsInitialized() const {

  return true;
}

void MsgNpcRentResultS2C::Swap(MsgNpcRentResultS2C* other) {
  if (other != this) {
    std::swap(msgtype_, other->msgtype_);
    std::swap(result_, other->result_);
    std::swap(coin_, other->coin_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgNpcRentResultS2C::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgNpcRentResultS2C_descriptor_;
  metadata.reflection = MsgNpcRentResultS2C_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgNpcGiftC2S::kMsgTypeFieldNumber;
const int MsgNpcGiftC2S::kNpcDefIDFieldNumber;
const int MsgNpcGiftC2S::kMapObjectIDFieldNumber;
#endif  // !_MSC_VER

MsgNpcGiftC2S::MsgNpcGiftC2S()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.MsgNpcGiftC2S)
}

void MsgNpcGiftC2S::InitAsDefaultInstance() {
}

MsgNpcGiftC2S::MsgNpcGiftC2S(const MsgNpcGiftC2S& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.MsgNpcGiftC2S)
}

void MsgNpcGiftC2S::SharedCtor() {
  _cached_size_ = 0;
  msgtype_ = 1552;
  npcdefid_ = 0;
  mapobjectid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgNpcGiftC2S::~MsgNpcGiftC2S() {
  // @@protoc_insertion_point(destructor:MsgPB.MsgNpcGiftC2S)
  SharedDtor();
}

void MsgNpcGiftC2S::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgNpcGiftC2S::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgNpcGiftC2S::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgNpcGiftC2S_descriptor_;
}

const MsgNpcGiftC2S& MsgNpcGiftC2S::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgNpc_2eproto();
  return *default_instance_;
}

MsgNpcGiftC2S* MsgNpcGiftC2S::default_instance_ = NULL;

MsgNpcGiftC2S* MsgNpcGiftC2S::New() const {
  return new MsgNpcGiftC2S;
}

void MsgNpcGiftC2S::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<MsgNpcGiftC2S*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 7) {
    ZR_(npcdefid_, mapobjectid_);
    msgtype_ = 1552;
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgNpcGiftC2S::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.MsgNpcGiftC2S)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_NPC_GIFT_C2S];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::EMsgType_IsValid(value)) {
            set_msgtype(static_cast< ::MsgPB::EMsgType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_npcDefID;
        break;
      }

      // optional int32 npcDefID = 2;
      case 2: {
        if (tag == 16) {
         parse_npcDefID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &npcdefid_)));
          set_has_npcdefid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_mapObjectID;
        break;
      }

      // optional int32 mapObjectID = 3;
      case 3: {
        if (tag == 24) {
         parse_mapObjectID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &mapobjectid_)));
          set_has_mapobjectid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.MsgNpcGiftC2S)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.MsgNpcGiftC2S)
  return false;
#undef DO_
}

void MsgNpcGiftC2S::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.MsgNpcGiftC2S)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_NPC_GIFT_C2S];
  if (has_msgtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->msgtype(), output);
  }

  // optional int32 npcDefID = 2;
  if (has_npcdefid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->npcdefid(), output);
  }

  // optional int32 mapObjectID = 3;
  if (has_mapobjectid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->mapobjectid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.MsgNpcGiftC2S)
}

::google::protobuf::uint8* MsgNpcGiftC2S::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.MsgNpcGiftC2S)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_NPC_GIFT_C2S];
  if (has_msgtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->msgtype(), target);
  }

  // optional int32 npcDefID = 2;
  if (has_npcdefid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->npcdefid(), target);
  }

  // optional int32 mapObjectID = 3;
  if (has_mapobjectid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->mapobjectid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.MsgNpcGiftC2S)
  return target;
}

int MsgNpcGiftC2S::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_NPC_GIFT_C2S];
    if (has_msgtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgtype());
    }

    // optional int32 npcDefID = 2;
    if (has_npcdefid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->npcdefid());
    }

    // optional int32 mapObjectID = 3;
    if (has_mapobjectid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->mapobjectid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgNpcGiftC2S::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgNpcGiftC2S* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgNpcGiftC2S*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgNpcGiftC2S::MergeFrom(const MsgNpcGiftC2S& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msgtype()) {
      set_msgtype(from.msgtype());
    }
    if (from.has_npcdefid()) {
      set_npcdefid(from.npcdefid());
    }
    if (from.has_mapobjectid()) {
      set_mapobjectid(from.mapobjectid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgNpcGiftC2S::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgNpcGiftC2S::CopyFrom(const MsgNpcGiftC2S& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgNpcGiftC2S::IsInitialized() const {

  return true;
}

void MsgNpcGiftC2S::Swap(MsgNpcGiftC2S* other) {
  if (other != this) {
    std::swap(msgtype_, other->msgtype_);
    std::swap(npcdefid_, other->npcdefid_);
    std::swap(mapobjectid_, other->mapobjectid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgNpcGiftC2S::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgNpcGiftC2S_descriptor_;
  metadata.reflection = MsgNpcGiftC2S_reflection_;
  return metadata;
}


// ===================================================================

const ::google::protobuf::EnumDescriptor* MsgNpcGiftResultS2C_RESULT_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgNpcGiftResultS2C_RESULT_descriptor_;
}
bool MsgNpcGiftResultS2C_RESULT_IsValid(int value) {
  switch(value) {
    case -1:
    case 0:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const MsgNpcGiftResultS2C_RESULT MsgNpcGiftResultS2C::FAILURE;
const MsgNpcGiftResultS2C_RESULT MsgNpcGiftResultS2C::SUCCESS;
const MsgNpcGiftResultS2C_RESULT MsgNpcGiftResultS2C::RESULT_MIN;
const MsgNpcGiftResultS2C_RESULT MsgNpcGiftResultS2C::RESULT_MAX;
const int MsgNpcGiftResultS2C::RESULT_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int MsgNpcGiftResultS2C::kMsgTypeFieldNumber;
const int MsgNpcGiftResultS2C::kResultFieldNumber;
const int MsgNpcGiftResultS2C::kItemIDFieldNumber;
const int MsgNpcGiftResultS2C::kItemCountFieldNumber;
#endif  // !_MSC_VER

MsgNpcGiftResultS2C::MsgNpcGiftResultS2C()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.MsgNpcGiftResultS2C)
}

void MsgNpcGiftResultS2C::InitAsDefaultInstance() {
}

MsgNpcGiftResultS2C::MsgNpcGiftResultS2C(const MsgNpcGiftResultS2C& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.MsgNpcGiftResultS2C)
}

void MsgNpcGiftResultS2C::SharedCtor() {
  _cached_size_ = 0;
  msgtype_ = 1553;
  result_ = -1;
  itemid_ = 0;
  itemcount_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgNpcGiftResultS2C::~MsgNpcGiftResultS2C() {
  // @@protoc_insertion_point(destructor:MsgPB.MsgNpcGiftResultS2C)
  SharedDtor();
}

void MsgNpcGiftResultS2C::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgNpcGiftResultS2C::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgNpcGiftResultS2C::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgNpcGiftResultS2C_descriptor_;
}

const MsgNpcGiftResultS2C& MsgNpcGiftResultS2C::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgNpc_2eproto();
  return *default_instance_;
}

MsgNpcGiftResultS2C* MsgNpcGiftResultS2C::default_instance_ = NULL;

MsgNpcGiftResultS2C* MsgNpcGiftResultS2C::New() const {
  return new MsgNpcGiftResultS2C;
}

void MsgNpcGiftResultS2C::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<MsgNpcGiftResultS2C*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 15) {
    ZR_(itemid_, itemcount_);
    msgtype_ = 1553;
    result_ = -1;
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgNpcGiftResultS2C::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.MsgNpcGiftResultS2C)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_NPC_GIFT_RESULT_S2C];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::EMsgType_IsValid(value)) {
            set_msgtype(static_cast< ::MsgPB::EMsgType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_result;
        break;
      }

      // optional .MsgPB.MsgNpcGiftResultS2C.RESULT result = 2;
      case 2: {
        if (tag == 16) {
         parse_result:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::MsgNpcGiftResultS2C_RESULT_IsValid(value)) {
            set_result(static_cast< ::MsgPB::MsgNpcGiftResultS2C_RESULT >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_itemID;
        break;
      }

      // optional int32 itemID = 3;
      case 3: {
        if (tag == 24) {
         parse_itemID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &itemid_)));
          set_has_itemid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_itemCount;
        break;
      }

      // optional int32 itemCount = 4;
      case 4: {
        if (tag == 32) {
         parse_itemCount:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &itemcount_)));
          set_has_itemcount();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.MsgNpcGiftResultS2C)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.MsgNpcGiftResultS2C)
  return false;
#undef DO_
}

void MsgNpcGiftResultS2C::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.MsgNpcGiftResultS2C)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_NPC_GIFT_RESULT_S2C];
  if (has_msgtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->msgtype(), output);
  }

  // optional .MsgPB.MsgNpcGiftResultS2C.RESULT result = 2;
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->result(), output);
  }

  // optional int32 itemID = 3;
  if (has_itemid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->itemid(), output);
  }

  // optional int32 itemCount = 4;
  if (has_itemcount()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->itemcount(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.MsgNpcGiftResultS2C)
}

::google::protobuf::uint8* MsgNpcGiftResultS2C::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.MsgNpcGiftResultS2C)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_NPC_GIFT_RESULT_S2C];
  if (has_msgtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->msgtype(), target);
  }

  // optional .MsgPB.MsgNpcGiftResultS2C.RESULT result = 2;
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->result(), target);
  }

  // optional int32 itemID = 3;
  if (has_itemid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->itemid(), target);
  }

  // optional int32 itemCount = 4;
  if (has_itemcount()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->itemcount(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.MsgNpcGiftResultS2C)
  return target;
}

int MsgNpcGiftResultS2C::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_NPC_GIFT_RESULT_S2C];
    if (has_msgtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgtype());
    }

    // optional .MsgPB.MsgNpcGiftResultS2C.RESULT result = 2;
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->result());
    }

    // optional int32 itemID = 3;
    if (has_itemid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->itemid());
    }

    // optional int32 itemCount = 4;
    if (has_itemcount()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->itemcount());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgNpcGiftResultS2C::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgNpcGiftResultS2C* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgNpcGiftResultS2C*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgNpcGiftResultS2C::MergeFrom(const MsgNpcGiftResultS2C& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msgtype()) {
      set_msgtype(from.msgtype());
    }
    if (from.has_result()) {
      set_result(from.result());
    }
    if (from.has_itemid()) {
      set_itemid(from.itemid());
    }
    if (from.has_itemcount()) {
      set_itemcount(from.itemcount());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgNpcGiftResultS2C::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgNpcGiftResultS2C::CopyFrom(const MsgNpcGiftResultS2C& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgNpcGiftResultS2C::IsInitialized() const {

  return true;
}

void MsgNpcGiftResultS2C::Swap(MsgNpcGiftResultS2C* other) {
  if (other != this) {
    std::swap(msgtype_, other->msgtype_);
    std::swap(result_, other->result_);
    std::swap(itemid_, other->itemid_);
    std::swap(itemcount_, other->itemcount_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgNpcGiftResultS2C::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgNpcGiftResultS2C_descriptor_;
  metadata.reflection = MsgNpcGiftResultS2C_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgNpcFeaturesC2S::kMsgTypeFieldNumber;
const int MsgNpcFeaturesC2S::kNpcDefIDFieldNumber;
const int MsgNpcFeaturesC2S::kMapObjectIDFieldNumber;
#endif  // !_MSC_VER

MsgNpcFeaturesC2S::MsgNpcFeaturesC2S()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.MsgNpcFeaturesC2S)
}

void MsgNpcFeaturesC2S::InitAsDefaultInstance() {
}

MsgNpcFeaturesC2S::MsgNpcFeaturesC2S(const MsgNpcFeaturesC2S& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.MsgNpcFeaturesC2S)
}

void MsgNpcFeaturesC2S::SharedCtor() {
  _cached_size_ = 0;
  msgtype_ = 1554;
  npcdefid_ = 0;
  mapobjectid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgNpcFeaturesC2S::~MsgNpcFeaturesC2S() {
  // @@protoc_insertion_point(destructor:MsgPB.MsgNpcFeaturesC2S)
  SharedDtor();
}

void MsgNpcFeaturesC2S::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgNpcFeaturesC2S::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgNpcFeaturesC2S::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgNpcFeaturesC2S_descriptor_;
}

const MsgNpcFeaturesC2S& MsgNpcFeaturesC2S::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgNpc_2eproto();
  return *default_instance_;
}

MsgNpcFeaturesC2S* MsgNpcFeaturesC2S::default_instance_ = NULL;

MsgNpcFeaturesC2S* MsgNpcFeaturesC2S::New() const {
  return new MsgNpcFeaturesC2S;
}

void MsgNpcFeaturesC2S::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<MsgNpcFeaturesC2S*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 7) {
    ZR_(npcdefid_, mapobjectid_);
    msgtype_ = 1554;
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgNpcFeaturesC2S::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.MsgNpcFeaturesC2S)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_NPC_FEATURES_C2S];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::EMsgType_IsValid(value)) {
            set_msgtype(static_cast< ::MsgPB::EMsgType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_npcDefID;
        break;
      }

      // optional int32 npcDefID = 2;
      case 2: {
        if (tag == 16) {
         parse_npcDefID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &npcdefid_)));
          set_has_npcdefid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_mapObjectID;
        break;
      }

      // optional int32 mapObjectID = 3;
      case 3: {
        if (tag == 24) {
         parse_mapObjectID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &mapobjectid_)));
          set_has_mapobjectid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.MsgNpcFeaturesC2S)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.MsgNpcFeaturesC2S)
  return false;
#undef DO_
}

void MsgNpcFeaturesC2S::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.MsgNpcFeaturesC2S)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_NPC_FEATURES_C2S];
  if (has_msgtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->msgtype(), output);
  }

  // optional int32 npcDefID = 2;
  if (has_npcdefid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->npcdefid(), output);
  }

  // optional int32 mapObjectID = 3;
  if (has_mapobjectid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->mapobjectid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.MsgNpcFeaturesC2S)
}

::google::protobuf::uint8* MsgNpcFeaturesC2S::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.MsgNpcFeaturesC2S)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_NPC_FEATURES_C2S];
  if (has_msgtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->msgtype(), target);
  }

  // optional int32 npcDefID = 2;
  if (has_npcdefid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->npcdefid(), target);
  }

  // optional int32 mapObjectID = 3;
  if (has_mapobjectid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->mapobjectid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.MsgNpcFeaturesC2S)
  return target;
}

int MsgNpcFeaturesC2S::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_NPC_FEATURES_C2S];
    if (has_msgtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgtype());
    }

    // optional int32 npcDefID = 2;
    if (has_npcdefid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->npcdefid());
    }

    // optional int32 mapObjectID = 3;
    if (has_mapobjectid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->mapobjectid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgNpcFeaturesC2S::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgNpcFeaturesC2S* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgNpcFeaturesC2S*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgNpcFeaturesC2S::MergeFrom(const MsgNpcFeaturesC2S& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msgtype()) {
      set_msgtype(from.msgtype());
    }
    if (from.has_npcdefid()) {
      set_npcdefid(from.npcdefid());
    }
    if (from.has_mapobjectid()) {
      set_mapobjectid(from.mapobjectid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgNpcFeaturesC2S::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgNpcFeaturesC2S::CopyFrom(const MsgNpcFeaturesC2S& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgNpcFeaturesC2S::IsInitialized() const {

  return true;
}

void MsgNpcFeaturesC2S::Swap(MsgNpcFeaturesC2S* other) {
  if (other != this) {
    std::swap(msgtype_, other->msgtype_);
    std::swap(npcdefid_, other->npcdefid_);
    std::swap(mapobjectid_, other->mapobjectid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgNpcFeaturesC2S::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgNpcFeaturesC2S_descriptor_;
  metadata.reflection = MsgNpcFeaturesC2S_reflection_;
  return metadata;
}


// ===================================================================

const ::google::protobuf::EnumDescriptor* MsgNpcFeaturesResultS2C_RESULT_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgNpcFeaturesResultS2C_RESULT_descriptor_;
}
bool MsgNpcFeaturesResultS2C_RESULT_IsValid(int value) {
  switch(value) {
    case -1:
    case 0:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const MsgNpcFeaturesResultS2C_RESULT MsgNpcFeaturesResultS2C::FAILURE;
const MsgNpcFeaturesResultS2C_RESULT MsgNpcFeaturesResultS2C::SUCCESS;
const MsgNpcFeaturesResultS2C_RESULT MsgNpcFeaturesResultS2C::RESULT_MIN;
const MsgNpcFeaturesResultS2C_RESULT MsgNpcFeaturesResultS2C::RESULT_MAX;
const int MsgNpcFeaturesResultS2C::RESULT_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int MsgNpcFeaturesResultS2C::kMsgTypeFieldNumber;
const int MsgNpcFeaturesResultS2C::kResultFieldNumber;
#endif  // !_MSC_VER

MsgNpcFeaturesResultS2C::MsgNpcFeaturesResultS2C()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.MsgNpcFeaturesResultS2C)
}

void MsgNpcFeaturesResultS2C::InitAsDefaultInstance() {
}

MsgNpcFeaturesResultS2C::MsgNpcFeaturesResultS2C(const MsgNpcFeaturesResultS2C& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.MsgNpcFeaturesResultS2C)
}

void MsgNpcFeaturesResultS2C::SharedCtor() {
  _cached_size_ = 0;
  msgtype_ = 1555;
  result_ = -1;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgNpcFeaturesResultS2C::~MsgNpcFeaturesResultS2C() {
  // @@protoc_insertion_point(destructor:MsgPB.MsgNpcFeaturesResultS2C)
  SharedDtor();
}

void MsgNpcFeaturesResultS2C::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgNpcFeaturesResultS2C::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgNpcFeaturesResultS2C::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgNpcFeaturesResultS2C_descriptor_;
}

const MsgNpcFeaturesResultS2C& MsgNpcFeaturesResultS2C::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgNpc_2eproto();
  return *default_instance_;
}

MsgNpcFeaturesResultS2C* MsgNpcFeaturesResultS2C::default_instance_ = NULL;

MsgNpcFeaturesResultS2C* MsgNpcFeaturesResultS2C::New() const {
  return new MsgNpcFeaturesResultS2C;
}

void MsgNpcFeaturesResultS2C::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    msgtype_ = 1555;
    result_ = -1;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgNpcFeaturesResultS2C::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.MsgNpcFeaturesResultS2C)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_NPC_FEATURES_RESULT_S2C];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::EMsgType_IsValid(value)) {
            set_msgtype(static_cast< ::MsgPB::EMsgType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_result;
        break;
      }

      // optional .MsgPB.MsgNpcFeaturesResultS2C.RESULT result = 2;
      case 2: {
        if (tag == 16) {
         parse_result:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::MsgNpcFeaturesResultS2C_RESULT_IsValid(value)) {
            set_result(static_cast< ::MsgPB::MsgNpcFeaturesResultS2C_RESULT >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.MsgNpcFeaturesResultS2C)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.MsgNpcFeaturesResultS2C)
  return false;
#undef DO_
}

void MsgNpcFeaturesResultS2C::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.MsgNpcFeaturesResultS2C)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_NPC_FEATURES_RESULT_S2C];
  if (has_msgtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->msgtype(), output);
  }

  // optional .MsgPB.MsgNpcFeaturesResultS2C.RESULT result = 2;
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->result(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.MsgNpcFeaturesResultS2C)
}

::google::protobuf::uint8* MsgNpcFeaturesResultS2C::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.MsgNpcFeaturesResultS2C)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_NPC_FEATURES_RESULT_S2C];
  if (has_msgtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->msgtype(), target);
  }

  // optional .MsgPB.MsgNpcFeaturesResultS2C.RESULT result = 2;
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->result(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.MsgNpcFeaturesResultS2C)
  return target;
}

int MsgNpcFeaturesResultS2C::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_NPC_FEATURES_RESULT_S2C];
    if (has_msgtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgtype());
    }

    // optional .MsgPB.MsgNpcFeaturesResultS2C.RESULT result = 2;
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->result());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgNpcFeaturesResultS2C::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgNpcFeaturesResultS2C* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgNpcFeaturesResultS2C*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgNpcFeaturesResultS2C::MergeFrom(const MsgNpcFeaturesResultS2C& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msgtype()) {
      set_msgtype(from.msgtype());
    }
    if (from.has_result()) {
      set_result(from.result());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgNpcFeaturesResultS2C::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgNpcFeaturesResultS2C::CopyFrom(const MsgNpcFeaturesResultS2C& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgNpcFeaturesResultS2C::IsInitialized() const {

  return true;
}

void MsgNpcFeaturesResultS2C::Swap(MsgNpcFeaturesResultS2C* other) {
  if (other != this) {
    std::swap(msgtype_, other->msgtype_);
    std::swap(result_, other->result_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgNpcFeaturesResultS2C::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgNpcFeaturesResultS2C_descriptor_;
  metadata.reflection = MsgNpcFeaturesResultS2C_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgNpcCreateG2C::kMsgTypeFieldNumber;
const int MsgNpcCreateG2C::kNpcInsIDFieldNumber;
const int MsgNpcCreateG2C::kNpcDefIDFieldNumber;
const int MsgNpcCreateG2C::kMapObjectIDFieldNumber;
#endif  // !_MSC_VER

MsgNpcCreateG2C::MsgNpcCreateG2C()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.MsgNpcCreateG2C)
}

void MsgNpcCreateG2C::InitAsDefaultInstance() {
}

MsgNpcCreateG2C::MsgNpcCreateG2C(const MsgNpcCreateG2C& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.MsgNpcCreateG2C)
}

void MsgNpcCreateG2C::SharedCtor() {
  _cached_size_ = 0;
  msgtype_ = 1566;
  npcinsid_ = GOOGLE_LONGLONG(0);
  npcdefid_ = 0;
  mapobjectid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgNpcCreateG2C::~MsgNpcCreateG2C() {
  // @@protoc_insertion_point(destructor:MsgPB.MsgNpcCreateG2C)
  SharedDtor();
}

void MsgNpcCreateG2C::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgNpcCreateG2C::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgNpcCreateG2C::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgNpcCreateG2C_descriptor_;
}

const MsgNpcCreateG2C& MsgNpcCreateG2C::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgNpc_2eproto();
  return *default_instance_;
}

MsgNpcCreateG2C* MsgNpcCreateG2C::default_instance_ = NULL;

MsgNpcCreateG2C* MsgNpcCreateG2C::New() const {
  return new MsgNpcCreateG2C;
}

void MsgNpcCreateG2C::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<MsgNpcCreateG2C*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 15) {
    ZR_(npcdefid_, mapobjectid_);
    msgtype_ = 1566;
    npcinsid_ = GOOGLE_LONGLONG(0);
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgNpcCreateG2C::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.MsgNpcCreateG2C)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_NPC_CREATE_G2C];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::EMsgType_IsValid(value)) {
            set_msgtype(static_cast< ::MsgPB::EMsgType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_npcInsID;
        break;
      }

      // optional int64 npcInsID = 2;
      case 2: {
        if (tag == 16) {
         parse_npcInsID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &npcinsid_)));
          set_has_npcinsid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_npcDefID;
        break;
      }

      // optional int32 npcDefID = 3;
      case 3: {
        if (tag == 24) {
         parse_npcDefID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &npcdefid_)));
          set_has_npcdefid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_mapObjectID;
        break;
      }

      // optional int32 mapObjectID = 4;
      case 4: {
        if (tag == 32) {
         parse_mapObjectID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &mapobjectid_)));
          set_has_mapobjectid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.MsgNpcCreateG2C)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.MsgNpcCreateG2C)
  return false;
#undef DO_
}

void MsgNpcCreateG2C::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.MsgNpcCreateG2C)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_NPC_CREATE_G2C];
  if (has_msgtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->msgtype(), output);
  }

  // optional int64 npcInsID = 2;
  if (has_npcinsid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->npcinsid(), output);
  }

  // optional int32 npcDefID = 3;
  if (has_npcdefid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->npcdefid(), output);
  }

  // optional int32 mapObjectID = 4;
  if (has_mapobjectid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->mapobjectid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.MsgNpcCreateG2C)
}

::google::protobuf::uint8* MsgNpcCreateG2C::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.MsgNpcCreateG2C)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_NPC_CREATE_G2C];
  if (has_msgtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->msgtype(), target);
  }

  // optional int64 npcInsID = 2;
  if (has_npcinsid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->npcinsid(), target);
  }

  // optional int32 npcDefID = 3;
  if (has_npcdefid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->npcdefid(), target);
  }

  // optional int32 mapObjectID = 4;
  if (has_mapobjectid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->mapobjectid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.MsgNpcCreateG2C)
  return target;
}

int MsgNpcCreateG2C::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_NPC_CREATE_G2C];
    if (has_msgtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgtype());
    }

    // optional int64 npcInsID = 2;
    if (has_npcinsid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->npcinsid());
    }

    // optional int32 npcDefID = 3;
    if (has_npcdefid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->npcdefid());
    }

    // optional int32 mapObjectID = 4;
    if (has_mapobjectid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->mapobjectid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgNpcCreateG2C::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgNpcCreateG2C* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgNpcCreateG2C*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgNpcCreateG2C::MergeFrom(const MsgNpcCreateG2C& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msgtype()) {
      set_msgtype(from.msgtype());
    }
    if (from.has_npcinsid()) {
      set_npcinsid(from.npcinsid());
    }
    if (from.has_npcdefid()) {
      set_npcdefid(from.npcdefid());
    }
    if (from.has_mapobjectid()) {
      set_mapobjectid(from.mapobjectid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgNpcCreateG2C::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgNpcCreateG2C::CopyFrom(const MsgNpcCreateG2C& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgNpcCreateG2C::IsInitialized() const {

  return true;
}

void MsgNpcCreateG2C::Swap(MsgNpcCreateG2C* other) {
  if (other != this) {
    std::swap(msgtype_, other->msgtype_);
    std::swap(npcinsid_, other->npcinsid_);
    std::swap(npcdefid_, other->npcdefid_);
    std::swap(mapobjectid_, other->mapobjectid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgNpcCreateG2C::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgNpcCreateG2C_descriptor_;
  metadata.reflection = MsgNpcCreateG2C_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgNpcDestroyG2C::kMsgTypeFieldNumber;
const int MsgNpcDestroyG2C::kNpcInsIDFieldNumber;
const int MsgNpcDestroyG2C::kMapObjectIDFieldNumber;
#endif  // !_MSC_VER

MsgNpcDestroyG2C::MsgNpcDestroyG2C()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.MsgNpcDestroyG2C)
}

void MsgNpcDestroyG2C::InitAsDefaultInstance() {
}

MsgNpcDestroyG2C::MsgNpcDestroyG2C(const MsgNpcDestroyG2C& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.MsgNpcDestroyG2C)
}

void MsgNpcDestroyG2C::SharedCtor() {
  _cached_size_ = 0;
  msgtype_ = 1567;
  npcinsid_ = GOOGLE_LONGLONG(0);
  mapobjectid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgNpcDestroyG2C::~MsgNpcDestroyG2C() {
  // @@protoc_insertion_point(destructor:MsgPB.MsgNpcDestroyG2C)
  SharedDtor();
}

void MsgNpcDestroyG2C::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgNpcDestroyG2C::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgNpcDestroyG2C::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgNpcDestroyG2C_descriptor_;
}

const MsgNpcDestroyG2C& MsgNpcDestroyG2C::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgNpc_2eproto();
  return *default_instance_;
}

MsgNpcDestroyG2C* MsgNpcDestroyG2C::default_instance_ = NULL;

MsgNpcDestroyG2C* MsgNpcDestroyG2C::New() const {
  return new MsgNpcDestroyG2C;
}

void MsgNpcDestroyG2C::Clear() {
  if (_has_bits_[0 / 32] & 7) {
    msgtype_ = 1567;
    npcinsid_ = GOOGLE_LONGLONG(0);
    mapobjectid_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgNpcDestroyG2C::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.MsgNpcDestroyG2C)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_NPC_DESTROY_G2C];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::EMsgType_IsValid(value)) {
            set_msgtype(static_cast< ::MsgPB::EMsgType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_npcInsID;
        break;
      }

      // optional int64 npcInsID = 2;
      case 2: {
        if (tag == 16) {
         parse_npcInsID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &npcinsid_)));
          set_has_npcinsid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_mapObjectID;
        break;
      }

      // optional int32 mapObjectID = 3;
      case 3: {
        if (tag == 24) {
         parse_mapObjectID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &mapobjectid_)));
          set_has_mapobjectid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.MsgNpcDestroyG2C)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.MsgNpcDestroyG2C)
  return false;
#undef DO_
}

void MsgNpcDestroyG2C::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.MsgNpcDestroyG2C)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_NPC_DESTROY_G2C];
  if (has_msgtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->msgtype(), output);
  }

  // optional int64 npcInsID = 2;
  if (has_npcinsid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->npcinsid(), output);
  }

  // optional int32 mapObjectID = 3;
  if (has_mapobjectid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->mapobjectid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.MsgNpcDestroyG2C)
}

::google::protobuf::uint8* MsgNpcDestroyG2C::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.MsgNpcDestroyG2C)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_NPC_DESTROY_G2C];
  if (has_msgtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->msgtype(), target);
  }

  // optional int64 npcInsID = 2;
  if (has_npcinsid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->npcinsid(), target);
  }

  // optional int32 mapObjectID = 3;
  if (has_mapobjectid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->mapobjectid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.MsgNpcDestroyG2C)
  return target;
}

int MsgNpcDestroyG2C::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_NPC_DESTROY_G2C];
    if (has_msgtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgtype());
    }

    // optional int64 npcInsID = 2;
    if (has_npcinsid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->npcinsid());
    }

    // optional int32 mapObjectID = 3;
    if (has_mapobjectid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->mapobjectid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgNpcDestroyG2C::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgNpcDestroyG2C* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgNpcDestroyG2C*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgNpcDestroyG2C::MergeFrom(const MsgNpcDestroyG2C& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msgtype()) {
      set_msgtype(from.msgtype());
    }
    if (from.has_npcinsid()) {
      set_npcinsid(from.npcinsid());
    }
    if (from.has_mapobjectid()) {
      set_mapobjectid(from.mapobjectid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgNpcDestroyG2C::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgNpcDestroyG2C::CopyFrom(const MsgNpcDestroyG2C& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgNpcDestroyG2C::IsInitialized() const {

  return true;
}

void MsgNpcDestroyG2C::Swap(MsgNpcDestroyG2C* other) {
  if (other != this) {
    std::swap(msgtype_, other->msgtype_);
    std::swap(npcinsid_, other->npcinsid_);
    std::swap(mapobjectid_, other->mapobjectid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgNpcDestroyG2C::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgNpcDestroyG2C_descriptor_;
  metadata.reflection = MsgNpcDestroyG2C_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgNpcAppearance::kMsgTypeFieldNumber;
const int MsgNpcAppearance::kNpcInsIDFieldNumber;
const int MsgNpcAppearance::kNpcDefIdFieldNumber;
const int MsgNpcAppearance::kMapObjectIdFieldNumber;
const int MsgNpcAppearance::kMovePathFieldNumber;
const int MsgNpcAppearance::kBuffInfosFieldNumber;
#endif  // !_MSC_VER

MsgNpcAppearance::MsgNpcAppearance()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.MsgNpcAppearance)
}

void MsgNpcAppearance::InitAsDefaultInstance() {
  movepath_ = const_cast< ::MsgPB::MsgMovePath*>(&::MsgPB::MsgMovePath::default_instance());
}

MsgNpcAppearance::MsgNpcAppearance(const MsgNpcAppearance& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.MsgNpcAppearance)
}

void MsgNpcAppearance::SharedCtor() {
  _cached_size_ = 0;
  msgtype_ = 1568;
  npcinsid_ = GOOGLE_LONGLONG(0);
  npcdefid_ = 0;
  mapobjectid_ = 0;
  movepath_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgNpcAppearance::~MsgNpcAppearance() {
  // @@protoc_insertion_point(destructor:MsgPB.MsgNpcAppearance)
  SharedDtor();
}

void MsgNpcAppearance::SharedDtor() {
  if (this != default_instance_) {
    delete movepath_;
  }
}

void MsgNpcAppearance::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgNpcAppearance::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgNpcAppearance_descriptor_;
}

const MsgNpcAppearance& MsgNpcAppearance::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgNpc_2eproto();
  return *default_instance_;
}

MsgNpcAppearance* MsgNpcAppearance::default_instance_ = NULL;

MsgNpcAppearance* MsgNpcAppearance::New() const {
  return new MsgNpcAppearance;
}

void MsgNpcAppearance::Clear() {
  if (_has_bits_[0 / 32] & 31) {
    msgtype_ = 1568;
    npcinsid_ = GOOGLE_LONGLONG(0);
    npcdefid_ = 0;
    mapobjectid_ = 0;
    if (has_movepath()) {
      if (movepath_ != NULL) movepath_->::MsgPB::MsgMovePath::Clear();
    }
  }
  buff_infos_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgNpcAppearance::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.MsgNpcAppearance)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_NPC_APPEARACE];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::EMsgType_IsValid(value)) {
            set_msgtype(static_cast< ::MsgPB::EMsgType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_npcInsID;
        break;
      }

      // optional int64 npcInsID = 2;
      case 2: {
        if (tag == 16) {
         parse_npcInsID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &npcinsid_)));
          set_has_npcinsid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_npcDefId;
        break;
      }

      // optional int32 npcDefId = 3;
      case 3: {
        if (tag == 24) {
         parse_npcDefId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &npcdefid_)));
          set_has_npcdefid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_mapObjectId;
        break;
      }

      // optional int32 mapObjectId = 4;
      case 4: {
        if (tag == 32) {
         parse_mapObjectId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &mapobjectid_)));
          set_has_mapobjectid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_movePath;
        break;
      }

      // optional .MsgPB.MsgMovePath movePath = 7;
      case 7: {
        if (tag == 58) {
         parse_movePath:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_movepath()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_buff_infos;
        break;
      }

      // repeated .MsgPB.ServerBuffInfo buff_infos = 8;
      case 8: {
        if (tag == 66) {
         parse_buff_infos:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_buff_infos()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_buff_infos;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.MsgNpcAppearance)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.MsgNpcAppearance)
  return false;
#undef DO_
}

void MsgNpcAppearance::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.MsgNpcAppearance)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_NPC_APPEARACE];
  if (has_msgtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->msgtype(), output);
  }

  // optional int64 npcInsID = 2;
  if (has_npcinsid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->npcinsid(), output);
  }

  // optional int32 npcDefId = 3;
  if (has_npcdefid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->npcdefid(), output);
  }

  // optional int32 mapObjectId = 4;
  if (has_mapobjectid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->mapobjectid(), output);
  }

  // optional .MsgPB.MsgMovePath movePath = 7;
  if (has_movepath()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->movepath(), output);
  }

  // repeated .MsgPB.ServerBuffInfo buff_infos = 8;
  for (int i = 0; i < this->buff_infos_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->buff_infos(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.MsgNpcAppearance)
}

::google::protobuf::uint8* MsgNpcAppearance::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.MsgNpcAppearance)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_NPC_APPEARACE];
  if (has_msgtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->msgtype(), target);
  }

  // optional int64 npcInsID = 2;
  if (has_npcinsid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->npcinsid(), target);
  }

  // optional int32 npcDefId = 3;
  if (has_npcdefid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->npcdefid(), target);
  }

  // optional int32 mapObjectId = 4;
  if (has_mapobjectid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->mapobjectid(), target);
  }

  // optional .MsgPB.MsgMovePath movePath = 7;
  if (has_movepath()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        7, this->movepath(), target);
  }

  // repeated .MsgPB.ServerBuffInfo buff_infos = 8;
  for (int i = 0; i < this->buff_infos_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        8, this->buff_infos(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.MsgNpcAppearance)
  return target;
}

int MsgNpcAppearance::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_NPC_APPEARACE];
    if (has_msgtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgtype());
    }

    // optional int64 npcInsID = 2;
    if (has_npcinsid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->npcinsid());
    }

    // optional int32 npcDefId = 3;
    if (has_npcdefid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->npcdefid());
    }

    // optional int32 mapObjectId = 4;
    if (has_mapobjectid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->mapobjectid());
    }

    // optional .MsgPB.MsgMovePath movePath = 7;
    if (has_movepath()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->movepath());
    }

  }
  // repeated .MsgPB.ServerBuffInfo buff_infos = 8;
  total_size += 1 * this->buff_infos_size();
  for (int i = 0; i < this->buff_infos_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->buff_infos(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgNpcAppearance::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgNpcAppearance* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgNpcAppearance*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgNpcAppearance::MergeFrom(const MsgNpcAppearance& from) {
  GOOGLE_CHECK_NE(&from, this);
  buff_infos_.MergeFrom(from.buff_infos_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msgtype()) {
      set_msgtype(from.msgtype());
    }
    if (from.has_npcinsid()) {
      set_npcinsid(from.npcinsid());
    }
    if (from.has_npcdefid()) {
      set_npcdefid(from.npcdefid());
    }
    if (from.has_mapobjectid()) {
      set_mapobjectid(from.mapobjectid());
    }
    if (from.has_movepath()) {
      mutable_movepath()->::MsgPB::MsgMovePath::MergeFrom(from.movepath());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgNpcAppearance::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgNpcAppearance::CopyFrom(const MsgNpcAppearance& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgNpcAppearance::IsInitialized() const {

  return true;
}

void MsgNpcAppearance::Swap(MsgNpcAppearance* other) {
  if (other != this) {
    std::swap(msgtype_, other->msgtype_);
    std::swap(npcinsid_, other->npcinsid_);
    std::swap(npcdefid_, other->npcdefid_);
    std::swap(mapobjectid_, other->mapobjectid_);
    std::swap(movepath_, other->movepath_);
    buff_infos_.Swap(&other->buff_infos_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgNpcAppearance::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgNpcAppearance_descriptor_;
  metadata.reflection = MsgNpcAppearance_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace MsgPB

// @@protoc_insertion_point(global_scope)
