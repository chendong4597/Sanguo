// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MsgLottery.proto

#ifndef PROTOBUF_MsgLottery_2eproto__INCLUDED
#define PROTOBUF_MsgLottery_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "MsgType.pb.h"
// @@protoc_insertion_point(includes)

namespace MsgPB {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_MsgLottery_2eproto();
void protobuf_AssignDesc_MsgLottery_2eproto();
void protobuf_ShutdownFile_MsgLottery_2eproto();

class MsgLotteryC2S;
class MsgLotteryS2C;

enum MsgLotteryS2C_RESULT {
  MsgLotteryS2C_RESULT_FAILURE = -1,
  MsgLotteryS2C_RESULT_SUCCESS = 0
};
bool MsgLotteryS2C_RESULT_IsValid(int value);
const MsgLotteryS2C_RESULT MsgLotteryS2C_RESULT_RESULT_MIN = MsgLotteryS2C_RESULT_FAILURE;
const MsgLotteryS2C_RESULT MsgLotteryS2C_RESULT_RESULT_MAX = MsgLotteryS2C_RESULT_SUCCESS;
const int MsgLotteryS2C_RESULT_RESULT_ARRAYSIZE = MsgLotteryS2C_RESULT_RESULT_MAX + 1;

const ::google::protobuf::EnumDescriptor* MsgLotteryS2C_RESULT_descriptor();
inline const ::std::string& MsgLotteryS2C_RESULT_Name(MsgLotteryS2C_RESULT value) {
  return ::google::protobuf::internal::NameOfEnum(
    MsgLotteryS2C_RESULT_descriptor(), value);
}
inline bool MsgLotteryS2C_RESULT_Parse(
    const ::std::string& name, MsgLotteryS2C_RESULT* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MsgLotteryS2C_RESULT>(
    MsgLotteryS2C_RESULT_descriptor(), name, value);
}
// ===================================================================

class MsgLotteryC2S : public ::google::protobuf::Message {
 public:
  MsgLotteryC2S();
  virtual ~MsgLotteryC2S();

  MsgLotteryC2S(const MsgLotteryC2S& from);

  inline MsgLotteryC2S& operator=(const MsgLotteryC2S& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgLotteryC2S& default_instance();

  void Swap(MsgLotteryC2S* other);

  // implements Message ----------------------------------------------

  MsgLotteryC2S* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgLotteryC2S& from);
  void MergeFrom(const MsgLotteryC2S& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_LOTTERY_C2G];
  inline bool has_msgtype() const;
  inline void clear_msgtype();
  static const int kMsgTypeFieldNumber = 1;
  inline ::MsgPB::EMsgType msgtype() const;
  inline void set_msgtype(::MsgPB::EMsgType value);

  // optional int64 iggid = 2;
  inline bool has_iggid() const;
  inline void clear_iggid();
  static const int kIggidFieldNumber = 2;
  inline ::google::protobuf::int64 iggid() const;
  inline void set_iggid(::google::protobuf::int64 value);

  // optional int32 nLotteryTpy = 3;
  inline bool has_nlotterytpy() const;
  inline void clear_nlotterytpy();
  static const int kNLotteryTpyFieldNumber = 3;
  inline ::google::protobuf::int32 nlotterytpy() const;
  inline void set_nlotterytpy(::google::protobuf::int32 value);

  // optional int32 nItemId = 4;
  inline bool has_nitemid() const;
  inline void clear_nitemid();
  static const int kNItemIdFieldNumber = 4;
  inline ::google::protobuf::int32 nitemid() const;
  inline void set_nitemid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:MsgPB.MsgLotteryC2S)
 private:
  inline void set_has_msgtype();
  inline void clear_has_msgtype();
  inline void set_has_iggid();
  inline void clear_has_iggid();
  inline void set_has_nlotterytpy();
  inline void clear_has_nlotterytpy();
  inline void set_has_nitemid();
  inline void clear_has_nitemid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 iggid_;
  int msgtype_;
  ::google::protobuf::int32 nlotterytpy_;
  ::google::protobuf::int32 nitemid_;
  friend void  protobuf_AddDesc_MsgLottery_2eproto();
  friend void protobuf_AssignDesc_MsgLottery_2eproto();
  friend void protobuf_ShutdownFile_MsgLottery_2eproto();

  void InitAsDefaultInstance();
  static MsgLotteryC2S* default_instance_;
};
// -------------------------------------------------------------------

class MsgLotteryS2C : public ::google::protobuf::Message {
 public:
  MsgLotteryS2C();
  virtual ~MsgLotteryS2C();

  MsgLotteryS2C(const MsgLotteryS2C& from);

  inline MsgLotteryS2C& operator=(const MsgLotteryS2C& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgLotteryS2C& default_instance();

  void Swap(MsgLotteryS2C* other);

  // implements Message ----------------------------------------------

  MsgLotteryS2C* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgLotteryS2C& from);
  void MergeFrom(const MsgLotteryS2C& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef MsgLotteryS2C_RESULT RESULT;
  static const RESULT FAILURE = MsgLotteryS2C_RESULT_FAILURE;
  static const RESULT SUCCESS = MsgLotteryS2C_RESULT_SUCCESS;
  static inline bool RESULT_IsValid(int value) {
    return MsgLotteryS2C_RESULT_IsValid(value);
  }
  static const RESULT RESULT_MIN =
    MsgLotteryS2C_RESULT_RESULT_MIN;
  static const RESULT RESULT_MAX =
    MsgLotteryS2C_RESULT_RESULT_MAX;
  static const int RESULT_ARRAYSIZE =
    MsgLotteryS2C_RESULT_RESULT_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  RESULT_descriptor() {
    return MsgLotteryS2C_RESULT_descriptor();
  }
  static inline const ::std::string& RESULT_Name(RESULT value) {
    return MsgLotteryS2C_RESULT_Name(value);
  }
  static inline bool RESULT_Parse(const ::std::string& name,
      RESULT* value) {
    return MsgLotteryS2C_RESULT_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_LOTTERY_G2C];
  inline bool has_msgtype() const;
  inline void clear_msgtype();
  static const int kMsgTypeFieldNumber = 1;
  inline ::MsgPB::EMsgType msgtype() const;
  inline void set_msgtype(::MsgPB::EMsgType value);

  // optional .MsgPB.MsgLotteryS2C.RESULT result = 2;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 2;
  inline ::MsgPB::MsgLotteryS2C_RESULT result() const;
  inline void set_result(::MsgPB::MsgLotteryS2C_RESULT value);

  // optional int32 itemID = 3;
  inline bool has_itemid() const;
  inline void clear_itemid();
  static const int kItemIDFieldNumber = 3;
  inline ::google::protobuf::int32 itemid() const;
  inline void set_itemid(::google::protobuf::int32 value);

  // optional int32 itemCount = 4;
  inline bool has_itemcount() const;
  inline void clear_itemcount();
  static const int kItemCountFieldNumber = 4;
  inline ::google::protobuf::int32 itemcount() const;
  inline void set_itemcount(::google::protobuf::int32 value);

  // optional int64 uuid = 5;
  inline bool has_uuid() const;
  inline void clear_uuid();
  static const int kUuidFieldNumber = 5;
  inline ::google::protobuf::int64 uuid() const;
  inline void set_uuid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:MsgPB.MsgLotteryS2C)
 private:
  inline void set_has_msgtype();
  inline void clear_has_msgtype();
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_itemid();
  inline void clear_has_itemid();
  inline void set_has_itemcount();
  inline void clear_has_itemcount();
  inline void set_has_uuid();
  inline void clear_has_uuid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int msgtype_;
  int result_;
  ::google::protobuf::int32 itemid_;
  ::google::protobuf::int32 itemcount_;
  ::google::protobuf::int64 uuid_;
  friend void  protobuf_AddDesc_MsgLottery_2eproto();
  friend void protobuf_AssignDesc_MsgLottery_2eproto();
  friend void protobuf_ShutdownFile_MsgLottery_2eproto();

  void InitAsDefaultInstance();
  static MsgLotteryS2C* default_instance_;
};
// ===================================================================


// ===================================================================

// MsgLotteryC2S

// optional .MsgPB.EMsgType msgType = 1 [default = _MSG_LOTTERY_C2G];
inline bool MsgLotteryC2S::has_msgtype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgLotteryC2S::set_has_msgtype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgLotteryC2S::clear_has_msgtype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgLotteryC2S::clear_msgtype() {
  msgtype_ = 1450;
  clear_has_msgtype();
}
inline ::MsgPB::EMsgType MsgLotteryC2S::msgtype() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgLotteryC2S.msgType)
  return static_cast< ::MsgPB::EMsgType >(msgtype_);
}
inline void MsgLotteryC2S::set_msgtype(::MsgPB::EMsgType value) {
  assert(::MsgPB::EMsgType_IsValid(value));
  set_has_msgtype();
  msgtype_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgLotteryC2S.msgType)
}

// optional int64 iggid = 2;
inline bool MsgLotteryC2S::has_iggid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MsgLotteryC2S::set_has_iggid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MsgLotteryC2S::clear_has_iggid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MsgLotteryC2S::clear_iggid() {
  iggid_ = GOOGLE_LONGLONG(0);
  clear_has_iggid();
}
inline ::google::protobuf::int64 MsgLotteryC2S::iggid() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgLotteryC2S.iggid)
  return iggid_;
}
inline void MsgLotteryC2S::set_iggid(::google::protobuf::int64 value) {
  set_has_iggid();
  iggid_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgLotteryC2S.iggid)
}

// optional int32 nLotteryTpy = 3;
inline bool MsgLotteryC2S::has_nlotterytpy() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MsgLotteryC2S::set_has_nlotterytpy() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MsgLotteryC2S::clear_has_nlotterytpy() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MsgLotteryC2S::clear_nlotterytpy() {
  nlotterytpy_ = 0;
  clear_has_nlotterytpy();
}
inline ::google::protobuf::int32 MsgLotteryC2S::nlotterytpy() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgLotteryC2S.nLotteryTpy)
  return nlotterytpy_;
}
inline void MsgLotteryC2S::set_nlotterytpy(::google::protobuf::int32 value) {
  set_has_nlotterytpy();
  nlotterytpy_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgLotteryC2S.nLotteryTpy)
}

// optional int32 nItemId = 4;
inline bool MsgLotteryC2S::has_nitemid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MsgLotteryC2S::set_has_nitemid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MsgLotteryC2S::clear_has_nitemid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MsgLotteryC2S::clear_nitemid() {
  nitemid_ = 0;
  clear_has_nitemid();
}
inline ::google::protobuf::int32 MsgLotteryC2S::nitemid() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgLotteryC2S.nItemId)
  return nitemid_;
}
inline void MsgLotteryC2S::set_nitemid(::google::protobuf::int32 value) {
  set_has_nitemid();
  nitemid_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgLotteryC2S.nItemId)
}

// -------------------------------------------------------------------

// MsgLotteryS2C

// optional .MsgPB.EMsgType msgType = 1 [default = _MSG_LOTTERY_G2C];
inline bool MsgLotteryS2C::has_msgtype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgLotteryS2C::set_has_msgtype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgLotteryS2C::clear_has_msgtype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgLotteryS2C::clear_msgtype() {
  msgtype_ = 1451;
  clear_has_msgtype();
}
inline ::MsgPB::EMsgType MsgLotteryS2C::msgtype() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgLotteryS2C.msgType)
  return static_cast< ::MsgPB::EMsgType >(msgtype_);
}
inline void MsgLotteryS2C::set_msgtype(::MsgPB::EMsgType value) {
  assert(::MsgPB::EMsgType_IsValid(value));
  set_has_msgtype();
  msgtype_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgLotteryS2C.msgType)
}

// optional .MsgPB.MsgLotteryS2C.RESULT result = 2;
inline bool MsgLotteryS2C::has_result() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MsgLotteryS2C::set_has_result() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MsgLotteryS2C::clear_has_result() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MsgLotteryS2C::clear_result() {
  result_ = -1;
  clear_has_result();
}
inline ::MsgPB::MsgLotteryS2C_RESULT MsgLotteryS2C::result() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgLotteryS2C.result)
  return static_cast< ::MsgPB::MsgLotteryS2C_RESULT >(result_);
}
inline void MsgLotteryS2C::set_result(::MsgPB::MsgLotteryS2C_RESULT value) {
  assert(::MsgPB::MsgLotteryS2C_RESULT_IsValid(value));
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgLotteryS2C.result)
}

// optional int32 itemID = 3;
inline bool MsgLotteryS2C::has_itemid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MsgLotteryS2C::set_has_itemid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MsgLotteryS2C::clear_has_itemid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MsgLotteryS2C::clear_itemid() {
  itemid_ = 0;
  clear_has_itemid();
}
inline ::google::protobuf::int32 MsgLotteryS2C::itemid() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgLotteryS2C.itemID)
  return itemid_;
}
inline void MsgLotteryS2C::set_itemid(::google::protobuf::int32 value) {
  set_has_itemid();
  itemid_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgLotteryS2C.itemID)
}

// optional int32 itemCount = 4;
inline bool MsgLotteryS2C::has_itemcount() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MsgLotteryS2C::set_has_itemcount() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MsgLotteryS2C::clear_has_itemcount() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MsgLotteryS2C::clear_itemcount() {
  itemcount_ = 0;
  clear_has_itemcount();
}
inline ::google::protobuf::int32 MsgLotteryS2C::itemcount() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgLotteryS2C.itemCount)
  return itemcount_;
}
inline void MsgLotteryS2C::set_itemcount(::google::protobuf::int32 value) {
  set_has_itemcount();
  itemcount_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgLotteryS2C.itemCount)
}

// optional int64 uuid = 5;
inline bool MsgLotteryS2C::has_uuid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void MsgLotteryS2C::set_has_uuid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void MsgLotteryS2C::clear_has_uuid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void MsgLotteryS2C::clear_uuid() {
  uuid_ = GOOGLE_LONGLONG(0);
  clear_has_uuid();
}
inline ::google::protobuf::int64 MsgLotteryS2C::uuid() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgLotteryS2C.uuid)
  return uuid_;
}
inline void MsgLotteryS2C::set_uuid(::google::protobuf::int64 value) {
  set_has_uuid();
  uuid_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgLotteryS2C.uuid)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace MsgPB

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::MsgPB::MsgLotteryS2C_RESULT> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::MsgPB::MsgLotteryS2C_RESULT>() {
  return ::MsgPB::MsgLotteryS2C_RESULT_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_MsgLottery_2eproto__INCLUDED
