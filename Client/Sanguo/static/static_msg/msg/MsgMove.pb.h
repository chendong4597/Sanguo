// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MsgMove.proto

#ifndef PROTOBUF_MsgMove_2eproto__INCLUDED
#define PROTOBUF_MsgMove_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "MsgType.pb.h"
#include "MsgGameDef.pb.h"
// @@protoc_insertion_point(includes)

namespace MsgPB {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_MsgMove_2eproto();
void protobuf_AssignDesc_MsgMove_2eproto();
void protobuf_ShutdownFile_MsgMove_2eproto();

class MsgMovePath;
class MsgMovePathG2C;

enum MsgMovePath_PATHTYPE {
  MsgMovePath_PATHTYPE_NONE = 0,
  MsgMovePath_PATHTYPE_POINT = 1,
  MsgMovePath_PATHTYPE_TARGET = 2,
  MsgMovePath_PATHTYPE_LOOP = 3,
  MsgMovePath_PATHTYPE_FALL = 4,
  MsgMovePath_PATHTYPE_TELEPORT = 5
};
bool MsgMovePath_PATHTYPE_IsValid(int value);
const MsgMovePath_PATHTYPE MsgMovePath_PATHTYPE_PATHTYPE_MIN = MsgMovePath_PATHTYPE_NONE;
const MsgMovePath_PATHTYPE MsgMovePath_PATHTYPE_PATHTYPE_MAX = MsgMovePath_PATHTYPE_TELEPORT;
const int MsgMovePath_PATHTYPE_PATHTYPE_ARRAYSIZE = MsgMovePath_PATHTYPE_PATHTYPE_MAX + 1;

const ::google::protobuf::EnumDescriptor* MsgMovePath_PATHTYPE_descriptor();
inline const ::std::string& MsgMovePath_PATHTYPE_Name(MsgMovePath_PATHTYPE value) {
  return ::google::protobuf::internal::NameOfEnum(
    MsgMovePath_PATHTYPE_descriptor(), value);
}
inline bool MsgMovePath_PATHTYPE_Parse(
    const ::std::string& name, MsgMovePath_PATHTYPE* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MsgMovePath_PATHTYPE>(
    MsgMovePath_PATHTYPE_descriptor(), name, value);
}
// ===================================================================

class MsgMovePath : public ::google::protobuf::Message {
 public:
  MsgMovePath();
  virtual ~MsgMovePath();

  MsgMovePath(const MsgMovePath& from);

  inline MsgMovePath& operator=(const MsgMovePath& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgMovePath& default_instance();

  void Swap(MsgMovePath* other);

  // implements Message ----------------------------------------------

  MsgMovePath* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgMovePath& from);
  void MergeFrom(const MsgMovePath& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef MsgMovePath_PATHTYPE PATHTYPE;
  static const PATHTYPE NONE = MsgMovePath_PATHTYPE_NONE;
  static const PATHTYPE POINT = MsgMovePath_PATHTYPE_POINT;
  static const PATHTYPE TARGET = MsgMovePath_PATHTYPE_TARGET;
  static const PATHTYPE LOOP = MsgMovePath_PATHTYPE_LOOP;
  static const PATHTYPE FALL = MsgMovePath_PATHTYPE_FALL;
  static const PATHTYPE TELEPORT = MsgMovePath_PATHTYPE_TELEPORT;
  static inline bool PATHTYPE_IsValid(int value) {
    return MsgMovePath_PATHTYPE_IsValid(value);
  }
  static const PATHTYPE PATHTYPE_MIN =
    MsgMovePath_PATHTYPE_PATHTYPE_MIN;
  static const PATHTYPE PATHTYPE_MAX =
    MsgMovePath_PATHTYPE_PATHTYPE_MAX;
  static const int PATHTYPE_ARRAYSIZE =
    MsgMovePath_PATHTYPE_PATHTYPE_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  PATHTYPE_descriptor() {
    return MsgMovePath_PATHTYPE_descriptor();
  }
  static inline const ::std::string& PATHTYPE_Name(PATHTYPE value) {
    return MsgMovePath_PATHTYPE_Name(value);
  }
  static inline bool PATHTYPE_Parse(const ::std::string& name,
      PATHTYPE* value) {
    return MsgMovePath_PATHTYPE_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional .MsgPB.MsgPoint pos = 1;
  inline bool has_pos() const;
  inline void clear_pos();
  static const int kPosFieldNumber = 1;
  inline const ::MsgPB::MsgPoint& pos() const;
  inline ::MsgPB::MsgPoint* mutable_pos();
  inline ::MsgPB::MsgPoint* release_pos();
  inline void set_allocated_pos(::MsgPB::MsgPoint* pos);

  // optional .MsgPB.MsgMovePath.PATHTYPE pathType = 2;
  inline bool has_pathtype() const;
  inline void clear_pathtype();
  static const int kPathTypeFieldNumber = 2;
  inline ::MsgPB::MsgMovePath_PATHTYPE pathtype() const;
  inline void set_pathtype(::MsgPB::MsgMovePath_PATHTYPE value);

  // repeated .MsgPB.MsgPoint points = 3;
  inline int points_size() const;
  inline void clear_points();
  static const int kPointsFieldNumber = 3;
  inline const ::MsgPB::MsgPoint& points(int index) const;
  inline ::MsgPB::MsgPoint* mutable_points(int index);
  inline ::MsgPB::MsgPoint* add_points();
  inline const ::google::protobuf::RepeatedPtrField< ::MsgPB::MsgPoint >&
      points() const;
  inline ::google::protobuf::RepeatedPtrField< ::MsgPB::MsgPoint >*
      mutable_points();

  // optional int32 targetObjectId = 4;
  inline bool has_targetobjectid() const;
  inline void clear_targetobjectid();
  static const int kTargetObjectIdFieldNumber = 4;
  inline ::google::protobuf::int32 targetobjectid() const;
  inline void set_targetobjectid(::google::protobuf::int32 value);

  // optional int64 serverTimeMS = 5;
  inline bool has_servertimems() const;
  inline void clear_servertimems();
  static const int kServerTimeMSFieldNumber = 5;
  inline ::google::protobuf::int64 servertimems() const;
  inline void set_servertimems(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:MsgPB.MsgMovePath)
 private:
  inline void set_has_pos();
  inline void clear_has_pos();
  inline void set_has_pathtype();
  inline void clear_has_pathtype();
  inline void set_has_targetobjectid();
  inline void clear_has_targetobjectid();
  inline void set_has_servertimems();
  inline void clear_has_servertimems();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::MsgPB::MsgPoint* pos_;
  ::google::protobuf::RepeatedPtrField< ::MsgPB::MsgPoint > points_;
  int pathtype_;
  ::google::protobuf::int32 targetobjectid_;
  ::google::protobuf::int64 servertimems_;
  friend void  protobuf_AddDesc_MsgMove_2eproto();
  friend void protobuf_AssignDesc_MsgMove_2eproto();
  friend void protobuf_ShutdownFile_MsgMove_2eproto();

  void InitAsDefaultInstance();
  static MsgMovePath* default_instance_;
};
// -------------------------------------------------------------------

class MsgMovePathG2C : public ::google::protobuf::Message {
 public:
  MsgMovePathG2C();
  virtual ~MsgMovePathG2C();

  MsgMovePathG2C(const MsgMovePathG2C& from);

  inline MsgMovePathG2C& operator=(const MsgMovePathG2C& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgMovePathG2C& default_instance();

  void Swap(MsgMovePathG2C* other);

  // implements Message ----------------------------------------------

  MsgMovePathG2C* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgMovePathG2C& from);
  void MergeFrom(const MsgMovePathG2C& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_MOVE_PATH_G2C];
  inline bool has_msgtype() const;
  inline void clear_msgtype();
  static const int kMsgTypeFieldNumber = 1;
  inline ::MsgPB::EMsgType msgtype() const;
  inline void set_msgtype(::MsgPB::EMsgType value);

  // optional int32 mapObjectId = 2;
  inline bool has_mapobjectid() const;
  inline void clear_mapobjectid();
  static const int kMapObjectIdFieldNumber = 2;
  inline ::google::protobuf::int32 mapobjectid() const;
  inline void set_mapobjectid(::google::protobuf::int32 value);

  // optional .MsgPB.MsgMovePath movePath = 3;
  inline bool has_movepath() const;
  inline void clear_movepath();
  static const int kMovePathFieldNumber = 3;
  inline const ::MsgPB::MsgMovePath& movepath() const;
  inline ::MsgPB::MsgMovePath* mutable_movepath();
  inline ::MsgPB::MsgMovePath* release_movepath();
  inline void set_allocated_movepath(::MsgPB::MsgMovePath* movepath);

  // @@protoc_insertion_point(class_scope:MsgPB.MsgMovePathG2C)
 private:
  inline void set_has_msgtype();
  inline void clear_has_msgtype();
  inline void set_has_mapobjectid();
  inline void clear_has_mapobjectid();
  inline void set_has_movepath();
  inline void clear_has_movepath();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int msgtype_;
  ::google::protobuf::int32 mapobjectid_;
  ::MsgPB::MsgMovePath* movepath_;
  friend void  protobuf_AddDesc_MsgMove_2eproto();
  friend void protobuf_AssignDesc_MsgMove_2eproto();
  friend void protobuf_ShutdownFile_MsgMove_2eproto();

  void InitAsDefaultInstance();
  static MsgMovePathG2C* default_instance_;
};
// ===================================================================


// ===================================================================

// MsgMovePath

// optional .MsgPB.MsgPoint pos = 1;
inline bool MsgMovePath::has_pos() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgMovePath::set_has_pos() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgMovePath::clear_has_pos() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgMovePath::clear_pos() {
  if (pos_ != NULL) pos_->::MsgPB::MsgPoint::Clear();
  clear_has_pos();
}
inline const ::MsgPB::MsgPoint& MsgMovePath::pos() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgMovePath.pos)
  return pos_ != NULL ? *pos_ : *default_instance_->pos_;
}
inline ::MsgPB::MsgPoint* MsgMovePath::mutable_pos() {
  set_has_pos();
  if (pos_ == NULL) pos_ = new ::MsgPB::MsgPoint;
  // @@protoc_insertion_point(field_mutable:MsgPB.MsgMovePath.pos)
  return pos_;
}
inline ::MsgPB::MsgPoint* MsgMovePath::release_pos() {
  clear_has_pos();
  ::MsgPB::MsgPoint* temp = pos_;
  pos_ = NULL;
  return temp;
}
inline void MsgMovePath::set_allocated_pos(::MsgPB::MsgPoint* pos) {
  delete pos_;
  pos_ = pos;
  if (pos) {
    set_has_pos();
  } else {
    clear_has_pos();
  }
  // @@protoc_insertion_point(field_set_allocated:MsgPB.MsgMovePath.pos)
}

// optional .MsgPB.MsgMovePath.PATHTYPE pathType = 2;
inline bool MsgMovePath::has_pathtype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MsgMovePath::set_has_pathtype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MsgMovePath::clear_has_pathtype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MsgMovePath::clear_pathtype() {
  pathtype_ = 0;
  clear_has_pathtype();
}
inline ::MsgPB::MsgMovePath_PATHTYPE MsgMovePath::pathtype() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgMovePath.pathType)
  return static_cast< ::MsgPB::MsgMovePath_PATHTYPE >(pathtype_);
}
inline void MsgMovePath::set_pathtype(::MsgPB::MsgMovePath_PATHTYPE value) {
  assert(::MsgPB::MsgMovePath_PATHTYPE_IsValid(value));
  set_has_pathtype();
  pathtype_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgMovePath.pathType)
}

// repeated .MsgPB.MsgPoint points = 3;
inline int MsgMovePath::points_size() const {
  return points_.size();
}
inline void MsgMovePath::clear_points() {
  points_.Clear();
}
inline const ::MsgPB::MsgPoint& MsgMovePath::points(int index) const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgMovePath.points)
  return points_.Get(index);
}
inline ::MsgPB::MsgPoint* MsgMovePath::mutable_points(int index) {
  // @@protoc_insertion_point(field_mutable:MsgPB.MsgMovePath.points)
  return points_.Mutable(index);
}
inline ::MsgPB::MsgPoint* MsgMovePath::add_points() {
  // @@protoc_insertion_point(field_add:MsgPB.MsgMovePath.points)
  return points_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::MsgPB::MsgPoint >&
MsgMovePath::points() const {
  // @@protoc_insertion_point(field_list:MsgPB.MsgMovePath.points)
  return points_;
}
inline ::google::protobuf::RepeatedPtrField< ::MsgPB::MsgPoint >*
MsgMovePath::mutable_points() {
  // @@protoc_insertion_point(field_mutable_list:MsgPB.MsgMovePath.points)
  return &points_;
}

// optional int32 targetObjectId = 4;
inline bool MsgMovePath::has_targetobjectid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MsgMovePath::set_has_targetobjectid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MsgMovePath::clear_has_targetobjectid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MsgMovePath::clear_targetobjectid() {
  targetobjectid_ = 0;
  clear_has_targetobjectid();
}
inline ::google::protobuf::int32 MsgMovePath::targetobjectid() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgMovePath.targetObjectId)
  return targetobjectid_;
}
inline void MsgMovePath::set_targetobjectid(::google::protobuf::int32 value) {
  set_has_targetobjectid();
  targetobjectid_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgMovePath.targetObjectId)
}

// optional int64 serverTimeMS = 5;
inline bool MsgMovePath::has_servertimems() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void MsgMovePath::set_has_servertimems() {
  _has_bits_[0] |= 0x00000010u;
}
inline void MsgMovePath::clear_has_servertimems() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void MsgMovePath::clear_servertimems() {
  servertimems_ = GOOGLE_LONGLONG(0);
  clear_has_servertimems();
}
inline ::google::protobuf::int64 MsgMovePath::servertimems() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgMovePath.serverTimeMS)
  return servertimems_;
}
inline void MsgMovePath::set_servertimems(::google::protobuf::int64 value) {
  set_has_servertimems();
  servertimems_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgMovePath.serverTimeMS)
}

// -------------------------------------------------------------------

// MsgMovePathG2C

// optional .MsgPB.EMsgType msgType = 1 [default = _MSG_MOVE_PATH_G2C];
inline bool MsgMovePathG2C::has_msgtype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgMovePathG2C::set_has_msgtype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgMovePathG2C::clear_has_msgtype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgMovePathG2C::clear_msgtype() {
  msgtype_ = 1750;
  clear_has_msgtype();
}
inline ::MsgPB::EMsgType MsgMovePathG2C::msgtype() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgMovePathG2C.msgType)
  return static_cast< ::MsgPB::EMsgType >(msgtype_);
}
inline void MsgMovePathG2C::set_msgtype(::MsgPB::EMsgType value) {
  assert(::MsgPB::EMsgType_IsValid(value));
  set_has_msgtype();
  msgtype_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgMovePathG2C.msgType)
}

// optional int32 mapObjectId = 2;
inline bool MsgMovePathG2C::has_mapobjectid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MsgMovePathG2C::set_has_mapobjectid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MsgMovePathG2C::clear_has_mapobjectid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MsgMovePathG2C::clear_mapobjectid() {
  mapobjectid_ = 0;
  clear_has_mapobjectid();
}
inline ::google::protobuf::int32 MsgMovePathG2C::mapobjectid() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgMovePathG2C.mapObjectId)
  return mapobjectid_;
}
inline void MsgMovePathG2C::set_mapobjectid(::google::protobuf::int32 value) {
  set_has_mapobjectid();
  mapobjectid_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgMovePathG2C.mapObjectId)
}

// optional .MsgPB.MsgMovePath movePath = 3;
inline bool MsgMovePathG2C::has_movepath() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MsgMovePathG2C::set_has_movepath() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MsgMovePathG2C::clear_has_movepath() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MsgMovePathG2C::clear_movepath() {
  if (movepath_ != NULL) movepath_->::MsgPB::MsgMovePath::Clear();
  clear_has_movepath();
}
inline const ::MsgPB::MsgMovePath& MsgMovePathG2C::movepath() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgMovePathG2C.movePath)
  return movepath_ != NULL ? *movepath_ : *default_instance_->movepath_;
}
inline ::MsgPB::MsgMovePath* MsgMovePathG2C::mutable_movepath() {
  set_has_movepath();
  if (movepath_ == NULL) movepath_ = new ::MsgPB::MsgMovePath;
  // @@protoc_insertion_point(field_mutable:MsgPB.MsgMovePathG2C.movePath)
  return movepath_;
}
inline ::MsgPB::MsgMovePath* MsgMovePathG2C::release_movepath() {
  clear_has_movepath();
  ::MsgPB::MsgMovePath* temp = movepath_;
  movepath_ = NULL;
  return temp;
}
inline void MsgMovePathG2C::set_allocated_movepath(::MsgPB::MsgMovePath* movepath) {
  delete movepath_;
  movepath_ = movepath;
  if (movepath) {
    set_has_movepath();
  } else {
    clear_has_movepath();
  }
  // @@protoc_insertion_point(field_set_allocated:MsgPB.MsgMovePathG2C.movePath)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace MsgPB

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::MsgPB::MsgMovePath_PATHTYPE> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::MsgPB::MsgMovePath_PATHTYPE>() {
  return ::MsgPB::MsgMovePath_PATHTYPE_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_MsgMove_2eproto__INCLUDED
