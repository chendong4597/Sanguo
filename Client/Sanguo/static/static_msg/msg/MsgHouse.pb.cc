// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MsgHouse.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "MsgHouse.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace MsgPB {

namespace {

const ::google::protobuf::Descriptor* MsgHouseData_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgHouseData_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgHouseSyncS2C_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgHouseSyncS2C_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgHouseUpdateS2C_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgHouseUpdateS2C_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgHouseRemoveS2C_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgHouseRemoveS2C_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgHouseUpgradeC2S_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgHouseUpgradeC2S_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgHouseUpgradeS2C_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgHouseUpgradeS2C_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* MsgHouseUpgradeS2C_HOUSE_UP_RESULT_descriptor_ = NULL;
const ::google::protobuf::Descriptor* MsgHouseHomeC2S_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgHouseHomeC2S_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgHouseHomeS2C_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgHouseHomeS2C_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* MsgHouseHomeS2C_HOUSE_HOME_RESULT_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_MsgHouse_2eproto() {
  protobuf_AddDesc_MsgHouse_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "MsgHouse.proto");
  GOOGLE_CHECK(file != NULL);
  MsgHouseData_descriptor_ = file->message_type(0);
  static const int MsgHouseData_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgHouseData, houseid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgHouseData, housetype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgHouseData, nexthouse_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgHouseData, completetm_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgHouseData, dirty_),
  };
  MsgHouseData_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgHouseData_descriptor_,
      MsgHouseData::default_instance_,
      MsgHouseData_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgHouseData, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgHouseData, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgHouseData));
  MsgHouseSyncS2C_descriptor_ = file->message_type(1);
  static const int MsgHouseSyncS2C_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgHouseSyncS2C, msgtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgHouseSyncS2C, data_),
  };
  MsgHouseSyncS2C_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgHouseSyncS2C_descriptor_,
      MsgHouseSyncS2C::default_instance_,
      MsgHouseSyncS2C_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgHouseSyncS2C, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgHouseSyncS2C, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgHouseSyncS2C));
  MsgHouseUpdateS2C_descriptor_ = file->message_type(2);
  static const int MsgHouseUpdateS2C_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgHouseUpdateS2C, msgtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgHouseUpdateS2C, data_),
  };
  MsgHouseUpdateS2C_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgHouseUpdateS2C_descriptor_,
      MsgHouseUpdateS2C::default_instance_,
      MsgHouseUpdateS2C_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgHouseUpdateS2C, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgHouseUpdateS2C, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgHouseUpdateS2C));
  MsgHouseRemoveS2C_descriptor_ = file->message_type(3);
  static const int MsgHouseRemoveS2C_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgHouseRemoveS2C, msgtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgHouseRemoveS2C, houseid_),
  };
  MsgHouseRemoveS2C_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgHouseRemoveS2C_descriptor_,
      MsgHouseRemoveS2C::default_instance_,
      MsgHouseRemoveS2C_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgHouseRemoveS2C, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgHouseRemoveS2C, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgHouseRemoveS2C));
  MsgHouseUpgradeC2S_descriptor_ = file->message_type(4);
  static const int MsgHouseUpgradeC2S_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgHouseUpgradeC2S, msgtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgHouseUpgradeC2S, iggid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgHouseUpgradeC2S, houseid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgHouseUpgradeC2S, next_house_tpy_),
  };
  MsgHouseUpgradeC2S_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgHouseUpgradeC2S_descriptor_,
      MsgHouseUpgradeC2S::default_instance_,
      MsgHouseUpgradeC2S_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgHouseUpgradeC2S, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgHouseUpgradeC2S, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgHouseUpgradeC2S));
  MsgHouseUpgradeS2C_descriptor_ = file->message_type(5);
  static const int MsgHouseUpgradeS2C_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgHouseUpgradeS2C, msgtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgHouseUpgradeS2C, iggid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgHouseUpgradeS2C, result_),
  };
  MsgHouseUpgradeS2C_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgHouseUpgradeS2C_descriptor_,
      MsgHouseUpgradeS2C::default_instance_,
      MsgHouseUpgradeS2C_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgHouseUpgradeS2C, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgHouseUpgradeS2C, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgHouseUpgradeS2C));
  MsgHouseUpgradeS2C_HOUSE_UP_RESULT_descriptor_ = MsgHouseUpgradeS2C_descriptor_->enum_type(0);
  MsgHouseHomeC2S_descriptor_ = file->message_type(6);
  static const int MsgHouseHomeC2S_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgHouseHomeC2S, msgtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgHouseHomeC2S, iggid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgHouseHomeC2S, houseid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgHouseHomeC2S, protectorid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgHouseHomeC2S, bcheckin_),
  };
  MsgHouseHomeC2S_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgHouseHomeC2S_descriptor_,
      MsgHouseHomeC2S::default_instance_,
      MsgHouseHomeC2S_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgHouseHomeC2S, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgHouseHomeC2S, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgHouseHomeC2S));
  MsgHouseHomeS2C_descriptor_ = file->message_type(7);
  static const int MsgHouseHomeS2C_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgHouseHomeS2C, msgtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgHouseHomeS2C, iggid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgHouseHomeS2C, result_),
  };
  MsgHouseHomeS2C_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgHouseHomeS2C_descriptor_,
      MsgHouseHomeS2C::default_instance_,
      MsgHouseHomeS2C_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgHouseHomeS2C, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgHouseHomeS2C, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgHouseHomeS2C));
  MsgHouseHomeS2C_HOUSE_HOME_RESULT_descriptor_ = MsgHouseHomeS2C_descriptor_->enum_type(0);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_MsgHouse_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgHouseData_descriptor_, &MsgHouseData::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgHouseSyncS2C_descriptor_, &MsgHouseSyncS2C::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgHouseUpdateS2C_descriptor_, &MsgHouseUpdateS2C::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgHouseRemoveS2C_descriptor_, &MsgHouseRemoveS2C::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgHouseUpgradeC2S_descriptor_, &MsgHouseUpgradeC2S::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgHouseUpgradeS2C_descriptor_, &MsgHouseUpgradeS2C::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgHouseHomeC2S_descriptor_, &MsgHouseHomeC2S::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgHouseHomeS2C_descriptor_, &MsgHouseHomeS2C::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_MsgHouse_2eproto() {
  delete MsgHouseData::default_instance_;
  delete MsgHouseData_reflection_;
  delete MsgHouseSyncS2C::default_instance_;
  delete MsgHouseSyncS2C_reflection_;
  delete MsgHouseUpdateS2C::default_instance_;
  delete MsgHouseUpdateS2C_reflection_;
  delete MsgHouseRemoveS2C::default_instance_;
  delete MsgHouseRemoveS2C_reflection_;
  delete MsgHouseUpgradeC2S::default_instance_;
  delete MsgHouseUpgradeC2S_reflection_;
  delete MsgHouseUpgradeS2C::default_instance_;
  delete MsgHouseUpgradeS2C_reflection_;
  delete MsgHouseHomeC2S::default_instance_;
  delete MsgHouseHomeC2S_reflection_;
  delete MsgHouseHomeS2C::default_instance_;
  delete MsgHouseHomeS2C_reflection_;
}

void protobuf_AddDesc_MsgHouse_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::MsgPB::protobuf_AddDesc_MsgType_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\016MsgHouse.proto\022\005MsgPB\032\rMsgType.proto\"h"
    "\n\014MsgHouseData\022\017\n\007houseId\030\001 \001(\005\022\021\n\thouse"
    "Type\030\002 \001(\005\022\021\n\tnextHouse\030\003 \001(\005\022\022\n\ncomplet"
    "eTm\030\004 \001(\003\022\r\n\005dirty\030\005 \001(\003\"k\n\017MsgHouseSync"
    "S2C\0225\n\007msgType\030\001 \001(\0162\017.MsgPB.EMsgType:\023_"
    "MSG_HOUSE_SYNC_S2C\022!\n\004data\030\002 \003(\0132\023.MsgPB"
    ".MsgHouseData\"o\n\021MsgHouseUpdateS2C\0227\n\007ms"
    "gType\030\001 \001(\0162\017.MsgPB.EMsgType:\025_MSG_HOUSE"
    "_UPDATE_S2C\022!\n\004data\030\002 \001(\0132\023.MsgPB.MsgHou"
    "seData\"]\n\021MsgHouseRemoveS2C\0227\n\007msgType\030\001"
    " \001(\0162\017.MsgPB.EMsgType:\025_MSG_HOUSE_REMOVE"
    "_S2C\022\017\n\007houseId\030\002 \001(\005\"\206\001\n\022MsgHouseUpgrad"
    "eC2S\0228\n\007msgType\030\001 \001(\0162\017.MsgPB.EMsgType:\026"
    "_MSG_HOUSE_UPGRADE_C2S\022\r\n\005iggid\030\002 \001(\003\022\017\n"
    "\007houseId\030\003 \001(\005\022\026\n\016next_house_tpy\030\004 \001(\005\"\314"
    "\001\n\022MsgHouseUpgradeS2C\0228\n\007msgType\030\001 \001(\0162\017"
    ".MsgPB.EMsgType:\026_MSG_HOUSE_UPGRADE_S2C\022"
    "\r\n\005iggid\030\002 \001(\003\0229\n\006result\030\003 \001(\0162).MsgPB.M"
    "sgHouseUpgradeS2C.HOUSE_UP_RESULT\"2\n\017HOU"
    "SE_UP_RESULT\022\007\n\003ERR\020\000\022\010\n\004SUCC\020\001\022\014\n\010MATER"
    "IAL\020\002\"\223\001\n\017MsgHouseHomeC2S\0229\n\007msgType\030\001 \001"
    "(\0162\017.MsgPB.EMsgType:\027_MSG_HOUSE_NPC_HOME"
    "_C2S\022\r\n\005iggid\030\002 \001(\003\022\017\n\007houseId\030\003 \001(\005\022\023\n\013"
    "protectorId\030\004 \001(\003\022\020\n\010bCheckIn\030\005 \001(\010\"\275\001\n\017"
    "MsgHouseHomeS2C\0229\n\007msgType\030\001 \001(\0162\017.MsgPB"
    ".EMsgType:\027_MSG_HOUSE_NPC_HOME_S2C\022\r\n\005ig"
    "gid\030\002 \001(\003\0228\n\006result\030\003 \001(\0162(.MsgPB.MsgHou"
    "seHomeS2C.HOUSE_HOME_RESULT\"&\n\021HOUSE_HOM"
    "E_RESULT\022\007\n\003ERR\020\000\022\010\n\004SUCC\020\001", 1147);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "MsgHouse.proto", &protobuf_RegisterTypes);
  MsgHouseData::default_instance_ = new MsgHouseData();
  MsgHouseSyncS2C::default_instance_ = new MsgHouseSyncS2C();
  MsgHouseUpdateS2C::default_instance_ = new MsgHouseUpdateS2C();
  MsgHouseRemoveS2C::default_instance_ = new MsgHouseRemoveS2C();
  MsgHouseUpgradeC2S::default_instance_ = new MsgHouseUpgradeC2S();
  MsgHouseUpgradeS2C::default_instance_ = new MsgHouseUpgradeS2C();
  MsgHouseHomeC2S::default_instance_ = new MsgHouseHomeC2S();
  MsgHouseHomeS2C::default_instance_ = new MsgHouseHomeS2C();
  MsgHouseData::default_instance_->InitAsDefaultInstance();
  MsgHouseSyncS2C::default_instance_->InitAsDefaultInstance();
  MsgHouseUpdateS2C::default_instance_->InitAsDefaultInstance();
  MsgHouseRemoveS2C::default_instance_->InitAsDefaultInstance();
  MsgHouseUpgradeC2S::default_instance_->InitAsDefaultInstance();
  MsgHouseUpgradeS2C::default_instance_->InitAsDefaultInstance();
  MsgHouseHomeC2S::default_instance_->InitAsDefaultInstance();
  MsgHouseHomeS2C::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_MsgHouse_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_MsgHouse_2eproto {
  StaticDescriptorInitializer_MsgHouse_2eproto() {
    protobuf_AddDesc_MsgHouse_2eproto();
  }
} static_descriptor_initializer_MsgHouse_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int MsgHouseData::kHouseIdFieldNumber;
const int MsgHouseData::kHouseTypeFieldNumber;
const int MsgHouseData::kNextHouseFieldNumber;
const int MsgHouseData::kCompleteTmFieldNumber;
const int MsgHouseData::kDirtyFieldNumber;
#endif  // !_MSC_VER

MsgHouseData::MsgHouseData()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.MsgHouseData)
}

void MsgHouseData::InitAsDefaultInstance() {
}

MsgHouseData::MsgHouseData(const MsgHouseData& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.MsgHouseData)
}

void MsgHouseData::SharedCtor() {
  _cached_size_ = 0;
  houseid_ = 0;
  housetype_ = 0;
  nexthouse_ = 0;
  completetm_ = GOOGLE_LONGLONG(0);
  dirty_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgHouseData::~MsgHouseData() {
  // @@protoc_insertion_point(destructor:MsgPB.MsgHouseData)
  SharedDtor();
}

void MsgHouseData::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgHouseData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgHouseData::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgHouseData_descriptor_;
}

const MsgHouseData& MsgHouseData::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgHouse_2eproto();
  return *default_instance_;
}

MsgHouseData* MsgHouseData::default_instance_ = NULL;

MsgHouseData* MsgHouseData::New() const {
  return new MsgHouseData;
}

void MsgHouseData::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<MsgHouseData*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 31) {
    ZR_(houseid_, nexthouse_);
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgHouseData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.MsgHouseData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 houseId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &houseid_)));
          set_has_houseid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_houseType;
        break;
      }

      // optional int32 houseType = 2;
      case 2: {
        if (tag == 16) {
         parse_houseType:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &housetype_)));
          set_has_housetype();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_nextHouse;
        break;
      }

      // optional int32 nextHouse = 3;
      case 3: {
        if (tag == 24) {
         parse_nextHouse:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &nexthouse_)));
          set_has_nexthouse();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_completeTm;
        break;
      }

      // optional int64 completeTm = 4;
      case 4: {
        if (tag == 32) {
         parse_completeTm:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &completetm_)));
          set_has_completetm();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_dirty;
        break;
      }

      // optional int64 dirty = 5;
      case 5: {
        if (tag == 40) {
         parse_dirty:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &dirty_)));
          set_has_dirty();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.MsgHouseData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.MsgHouseData)
  return false;
#undef DO_
}

void MsgHouseData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.MsgHouseData)
  // optional int32 houseId = 1;
  if (has_houseid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->houseid(), output);
  }

  // optional int32 houseType = 2;
  if (has_housetype()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->housetype(), output);
  }

  // optional int32 nextHouse = 3;
  if (has_nexthouse()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->nexthouse(), output);
  }

  // optional int64 completeTm = 4;
  if (has_completetm()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->completetm(), output);
  }

  // optional int64 dirty = 5;
  if (has_dirty()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(5, this->dirty(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.MsgHouseData)
}

::google::protobuf::uint8* MsgHouseData::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.MsgHouseData)
  // optional int32 houseId = 1;
  if (has_houseid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->houseid(), target);
  }

  // optional int32 houseType = 2;
  if (has_housetype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->housetype(), target);
  }

  // optional int32 nextHouse = 3;
  if (has_nexthouse()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->nexthouse(), target);
  }

  // optional int64 completeTm = 4;
  if (has_completetm()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->completetm(), target);
  }

  // optional int64 dirty = 5;
  if (has_dirty()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(5, this->dirty(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.MsgHouseData)
  return target;
}

int MsgHouseData::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 houseId = 1;
    if (has_houseid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->houseid());
    }

    // optional int32 houseType = 2;
    if (has_housetype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->housetype());
    }

    // optional int32 nextHouse = 3;
    if (has_nexthouse()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->nexthouse());
    }

    // optional int64 completeTm = 4;
    if (has_completetm()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->completetm());
    }

    // optional int64 dirty = 5;
    if (has_dirty()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->dirty());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgHouseData::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgHouseData* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgHouseData*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgHouseData::MergeFrom(const MsgHouseData& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_houseid()) {
      set_houseid(from.houseid());
    }
    if (from.has_housetype()) {
      set_housetype(from.housetype());
    }
    if (from.has_nexthouse()) {
      set_nexthouse(from.nexthouse());
    }
    if (from.has_completetm()) {
      set_completetm(from.completetm());
    }
    if (from.has_dirty()) {
      set_dirty(from.dirty());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgHouseData::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgHouseData::CopyFrom(const MsgHouseData& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgHouseData::IsInitialized() const {

  return true;
}

void MsgHouseData::Swap(MsgHouseData* other) {
  if (other != this) {
    std::swap(houseid_, other->houseid_);
    std::swap(housetype_, other->housetype_);
    std::swap(nexthouse_, other->nexthouse_);
    std::swap(completetm_, other->completetm_);
    std::swap(dirty_, other->dirty_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgHouseData::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgHouseData_descriptor_;
  metadata.reflection = MsgHouseData_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgHouseSyncS2C::kMsgTypeFieldNumber;
const int MsgHouseSyncS2C::kDataFieldNumber;
#endif  // !_MSC_VER

MsgHouseSyncS2C::MsgHouseSyncS2C()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.MsgHouseSyncS2C)
}

void MsgHouseSyncS2C::InitAsDefaultInstance() {
}

MsgHouseSyncS2C::MsgHouseSyncS2C(const MsgHouseSyncS2C& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.MsgHouseSyncS2C)
}

void MsgHouseSyncS2C::SharedCtor() {
  _cached_size_ = 0;
  msgtype_ = 5110;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgHouseSyncS2C::~MsgHouseSyncS2C() {
  // @@protoc_insertion_point(destructor:MsgPB.MsgHouseSyncS2C)
  SharedDtor();
}

void MsgHouseSyncS2C::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgHouseSyncS2C::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgHouseSyncS2C::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgHouseSyncS2C_descriptor_;
}

const MsgHouseSyncS2C& MsgHouseSyncS2C::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgHouse_2eproto();
  return *default_instance_;
}

MsgHouseSyncS2C* MsgHouseSyncS2C::default_instance_ = NULL;

MsgHouseSyncS2C* MsgHouseSyncS2C::New() const {
  return new MsgHouseSyncS2C;
}

void MsgHouseSyncS2C::Clear() {
  msgtype_ = 5110;
  data_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgHouseSyncS2C::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.MsgHouseSyncS2C)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_HOUSE_SYNC_S2C];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::EMsgType_IsValid(value)) {
            set_msgtype(static_cast< ::MsgPB::EMsgType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_data;
        break;
      }

      // repeated .MsgPB.MsgHouseData data = 2;
      case 2: {
        if (tag == 18) {
         parse_data:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_data()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_data;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.MsgHouseSyncS2C)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.MsgHouseSyncS2C)
  return false;
#undef DO_
}

void MsgHouseSyncS2C::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.MsgHouseSyncS2C)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_HOUSE_SYNC_S2C];
  if (has_msgtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->msgtype(), output);
  }

  // repeated .MsgPB.MsgHouseData data = 2;
  for (int i = 0; i < this->data_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->data(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.MsgHouseSyncS2C)
}

::google::protobuf::uint8* MsgHouseSyncS2C::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.MsgHouseSyncS2C)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_HOUSE_SYNC_S2C];
  if (has_msgtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->msgtype(), target);
  }

  // repeated .MsgPB.MsgHouseData data = 2;
  for (int i = 0; i < this->data_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->data(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.MsgHouseSyncS2C)
  return target;
}

int MsgHouseSyncS2C::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_HOUSE_SYNC_S2C];
    if (has_msgtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgtype());
    }

  }
  // repeated .MsgPB.MsgHouseData data = 2;
  total_size += 1 * this->data_size();
  for (int i = 0; i < this->data_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->data(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgHouseSyncS2C::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgHouseSyncS2C* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgHouseSyncS2C*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgHouseSyncS2C::MergeFrom(const MsgHouseSyncS2C& from) {
  GOOGLE_CHECK_NE(&from, this);
  data_.MergeFrom(from.data_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msgtype()) {
      set_msgtype(from.msgtype());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgHouseSyncS2C::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgHouseSyncS2C::CopyFrom(const MsgHouseSyncS2C& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgHouseSyncS2C::IsInitialized() const {

  return true;
}

void MsgHouseSyncS2C::Swap(MsgHouseSyncS2C* other) {
  if (other != this) {
    std::swap(msgtype_, other->msgtype_);
    data_.Swap(&other->data_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgHouseSyncS2C::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgHouseSyncS2C_descriptor_;
  metadata.reflection = MsgHouseSyncS2C_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgHouseUpdateS2C::kMsgTypeFieldNumber;
const int MsgHouseUpdateS2C::kDataFieldNumber;
#endif  // !_MSC_VER

MsgHouseUpdateS2C::MsgHouseUpdateS2C()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.MsgHouseUpdateS2C)
}

void MsgHouseUpdateS2C::InitAsDefaultInstance() {
  data_ = const_cast< ::MsgPB::MsgHouseData*>(&::MsgPB::MsgHouseData::default_instance());
}

MsgHouseUpdateS2C::MsgHouseUpdateS2C(const MsgHouseUpdateS2C& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.MsgHouseUpdateS2C)
}

void MsgHouseUpdateS2C::SharedCtor() {
  _cached_size_ = 0;
  msgtype_ = 5111;
  data_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgHouseUpdateS2C::~MsgHouseUpdateS2C() {
  // @@protoc_insertion_point(destructor:MsgPB.MsgHouseUpdateS2C)
  SharedDtor();
}

void MsgHouseUpdateS2C::SharedDtor() {
  if (this != default_instance_) {
    delete data_;
  }
}

void MsgHouseUpdateS2C::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgHouseUpdateS2C::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgHouseUpdateS2C_descriptor_;
}

const MsgHouseUpdateS2C& MsgHouseUpdateS2C::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgHouse_2eproto();
  return *default_instance_;
}

MsgHouseUpdateS2C* MsgHouseUpdateS2C::default_instance_ = NULL;

MsgHouseUpdateS2C* MsgHouseUpdateS2C::New() const {
  return new MsgHouseUpdateS2C;
}

void MsgHouseUpdateS2C::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    msgtype_ = 5111;
    if (has_data()) {
      if (data_ != NULL) data_->::MsgPB::MsgHouseData::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgHouseUpdateS2C::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.MsgHouseUpdateS2C)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_HOUSE_UPDATE_S2C];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::EMsgType_IsValid(value)) {
            set_msgtype(static_cast< ::MsgPB::EMsgType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_data;
        break;
      }

      // optional .MsgPB.MsgHouseData data = 2;
      case 2: {
        if (tag == 18) {
         parse_data:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_data()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.MsgHouseUpdateS2C)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.MsgHouseUpdateS2C)
  return false;
#undef DO_
}

void MsgHouseUpdateS2C::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.MsgHouseUpdateS2C)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_HOUSE_UPDATE_S2C];
  if (has_msgtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->msgtype(), output);
  }

  // optional .MsgPB.MsgHouseData data = 2;
  if (has_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->data(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.MsgHouseUpdateS2C)
}

::google::protobuf::uint8* MsgHouseUpdateS2C::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.MsgHouseUpdateS2C)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_HOUSE_UPDATE_S2C];
  if (has_msgtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->msgtype(), target);
  }

  // optional .MsgPB.MsgHouseData data = 2;
  if (has_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->data(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.MsgHouseUpdateS2C)
  return target;
}

int MsgHouseUpdateS2C::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_HOUSE_UPDATE_S2C];
    if (has_msgtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgtype());
    }

    // optional .MsgPB.MsgHouseData data = 2;
    if (has_data()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->data());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgHouseUpdateS2C::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgHouseUpdateS2C* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgHouseUpdateS2C*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgHouseUpdateS2C::MergeFrom(const MsgHouseUpdateS2C& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msgtype()) {
      set_msgtype(from.msgtype());
    }
    if (from.has_data()) {
      mutable_data()->::MsgPB::MsgHouseData::MergeFrom(from.data());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgHouseUpdateS2C::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgHouseUpdateS2C::CopyFrom(const MsgHouseUpdateS2C& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgHouseUpdateS2C::IsInitialized() const {

  return true;
}

void MsgHouseUpdateS2C::Swap(MsgHouseUpdateS2C* other) {
  if (other != this) {
    std::swap(msgtype_, other->msgtype_);
    std::swap(data_, other->data_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgHouseUpdateS2C::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgHouseUpdateS2C_descriptor_;
  metadata.reflection = MsgHouseUpdateS2C_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgHouseRemoveS2C::kMsgTypeFieldNumber;
const int MsgHouseRemoveS2C::kHouseIdFieldNumber;
#endif  // !_MSC_VER

MsgHouseRemoveS2C::MsgHouseRemoveS2C()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.MsgHouseRemoveS2C)
}

void MsgHouseRemoveS2C::InitAsDefaultInstance() {
}

MsgHouseRemoveS2C::MsgHouseRemoveS2C(const MsgHouseRemoveS2C& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.MsgHouseRemoveS2C)
}

void MsgHouseRemoveS2C::SharedCtor() {
  _cached_size_ = 0;
  msgtype_ = 5112;
  houseid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgHouseRemoveS2C::~MsgHouseRemoveS2C() {
  // @@protoc_insertion_point(destructor:MsgPB.MsgHouseRemoveS2C)
  SharedDtor();
}

void MsgHouseRemoveS2C::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgHouseRemoveS2C::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgHouseRemoveS2C::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgHouseRemoveS2C_descriptor_;
}

const MsgHouseRemoveS2C& MsgHouseRemoveS2C::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgHouse_2eproto();
  return *default_instance_;
}

MsgHouseRemoveS2C* MsgHouseRemoveS2C::default_instance_ = NULL;

MsgHouseRemoveS2C* MsgHouseRemoveS2C::New() const {
  return new MsgHouseRemoveS2C;
}

void MsgHouseRemoveS2C::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    msgtype_ = 5112;
    houseid_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgHouseRemoveS2C::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.MsgHouseRemoveS2C)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_HOUSE_REMOVE_S2C];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::EMsgType_IsValid(value)) {
            set_msgtype(static_cast< ::MsgPB::EMsgType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_houseId;
        break;
      }

      // optional int32 houseId = 2;
      case 2: {
        if (tag == 16) {
         parse_houseId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &houseid_)));
          set_has_houseid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.MsgHouseRemoveS2C)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.MsgHouseRemoveS2C)
  return false;
#undef DO_
}

void MsgHouseRemoveS2C::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.MsgHouseRemoveS2C)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_HOUSE_REMOVE_S2C];
  if (has_msgtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->msgtype(), output);
  }

  // optional int32 houseId = 2;
  if (has_houseid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->houseid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.MsgHouseRemoveS2C)
}

::google::protobuf::uint8* MsgHouseRemoveS2C::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.MsgHouseRemoveS2C)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_HOUSE_REMOVE_S2C];
  if (has_msgtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->msgtype(), target);
  }

  // optional int32 houseId = 2;
  if (has_houseid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->houseid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.MsgHouseRemoveS2C)
  return target;
}

int MsgHouseRemoveS2C::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_HOUSE_REMOVE_S2C];
    if (has_msgtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgtype());
    }

    // optional int32 houseId = 2;
    if (has_houseid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->houseid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgHouseRemoveS2C::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgHouseRemoveS2C* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgHouseRemoveS2C*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgHouseRemoveS2C::MergeFrom(const MsgHouseRemoveS2C& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msgtype()) {
      set_msgtype(from.msgtype());
    }
    if (from.has_houseid()) {
      set_houseid(from.houseid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgHouseRemoveS2C::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgHouseRemoveS2C::CopyFrom(const MsgHouseRemoveS2C& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgHouseRemoveS2C::IsInitialized() const {

  return true;
}

void MsgHouseRemoveS2C::Swap(MsgHouseRemoveS2C* other) {
  if (other != this) {
    std::swap(msgtype_, other->msgtype_);
    std::swap(houseid_, other->houseid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgHouseRemoveS2C::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgHouseRemoveS2C_descriptor_;
  metadata.reflection = MsgHouseRemoveS2C_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgHouseUpgradeC2S::kMsgTypeFieldNumber;
const int MsgHouseUpgradeC2S::kIggidFieldNumber;
const int MsgHouseUpgradeC2S::kHouseIdFieldNumber;
const int MsgHouseUpgradeC2S::kNextHouseTpyFieldNumber;
#endif  // !_MSC_VER

MsgHouseUpgradeC2S::MsgHouseUpgradeC2S()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.MsgHouseUpgradeC2S)
}

void MsgHouseUpgradeC2S::InitAsDefaultInstance() {
}

MsgHouseUpgradeC2S::MsgHouseUpgradeC2S(const MsgHouseUpgradeC2S& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.MsgHouseUpgradeC2S)
}

void MsgHouseUpgradeC2S::SharedCtor() {
  _cached_size_ = 0;
  msgtype_ = 5113;
  iggid_ = GOOGLE_LONGLONG(0);
  houseid_ = 0;
  next_house_tpy_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgHouseUpgradeC2S::~MsgHouseUpgradeC2S() {
  // @@protoc_insertion_point(destructor:MsgPB.MsgHouseUpgradeC2S)
  SharedDtor();
}

void MsgHouseUpgradeC2S::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgHouseUpgradeC2S::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgHouseUpgradeC2S::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgHouseUpgradeC2S_descriptor_;
}

const MsgHouseUpgradeC2S& MsgHouseUpgradeC2S::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgHouse_2eproto();
  return *default_instance_;
}

MsgHouseUpgradeC2S* MsgHouseUpgradeC2S::default_instance_ = NULL;

MsgHouseUpgradeC2S* MsgHouseUpgradeC2S::New() const {
  return new MsgHouseUpgradeC2S;
}

void MsgHouseUpgradeC2S::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<MsgHouseUpgradeC2S*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 15) {
    ZR_(houseid_, next_house_tpy_);
    msgtype_ = 5113;
    iggid_ = GOOGLE_LONGLONG(0);
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgHouseUpgradeC2S::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.MsgHouseUpgradeC2S)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_HOUSE_UPGRADE_C2S];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::EMsgType_IsValid(value)) {
            set_msgtype(static_cast< ::MsgPB::EMsgType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_iggid;
        break;
      }

      // optional int64 iggid = 2;
      case 2: {
        if (tag == 16) {
         parse_iggid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &iggid_)));
          set_has_iggid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_houseId;
        break;
      }

      // optional int32 houseId = 3;
      case 3: {
        if (tag == 24) {
         parse_houseId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &houseid_)));
          set_has_houseid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_next_house_tpy;
        break;
      }

      // optional int32 next_house_tpy = 4;
      case 4: {
        if (tag == 32) {
         parse_next_house_tpy:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &next_house_tpy_)));
          set_has_next_house_tpy();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.MsgHouseUpgradeC2S)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.MsgHouseUpgradeC2S)
  return false;
#undef DO_
}

void MsgHouseUpgradeC2S::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.MsgHouseUpgradeC2S)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_HOUSE_UPGRADE_C2S];
  if (has_msgtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->msgtype(), output);
  }

  // optional int64 iggid = 2;
  if (has_iggid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->iggid(), output);
  }

  // optional int32 houseId = 3;
  if (has_houseid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->houseid(), output);
  }

  // optional int32 next_house_tpy = 4;
  if (has_next_house_tpy()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->next_house_tpy(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.MsgHouseUpgradeC2S)
}

::google::protobuf::uint8* MsgHouseUpgradeC2S::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.MsgHouseUpgradeC2S)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_HOUSE_UPGRADE_C2S];
  if (has_msgtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->msgtype(), target);
  }

  // optional int64 iggid = 2;
  if (has_iggid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->iggid(), target);
  }

  // optional int32 houseId = 3;
  if (has_houseid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->houseid(), target);
  }

  // optional int32 next_house_tpy = 4;
  if (has_next_house_tpy()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->next_house_tpy(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.MsgHouseUpgradeC2S)
  return target;
}

int MsgHouseUpgradeC2S::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_HOUSE_UPGRADE_C2S];
    if (has_msgtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgtype());
    }

    // optional int64 iggid = 2;
    if (has_iggid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->iggid());
    }

    // optional int32 houseId = 3;
    if (has_houseid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->houseid());
    }

    // optional int32 next_house_tpy = 4;
    if (has_next_house_tpy()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->next_house_tpy());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgHouseUpgradeC2S::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgHouseUpgradeC2S* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgHouseUpgradeC2S*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgHouseUpgradeC2S::MergeFrom(const MsgHouseUpgradeC2S& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msgtype()) {
      set_msgtype(from.msgtype());
    }
    if (from.has_iggid()) {
      set_iggid(from.iggid());
    }
    if (from.has_houseid()) {
      set_houseid(from.houseid());
    }
    if (from.has_next_house_tpy()) {
      set_next_house_tpy(from.next_house_tpy());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgHouseUpgradeC2S::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgHouseUpgradeC2S::CopyFrom(const MsgHouseUpgradeC2S& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgHouseUpgradeC2S::IsInitialized() const {

  return true;
}

void MsgHouseUpgradeC2S::Swap(MsgHouseUpgradeC2S* other) {
  if (other != this) {
    std::swap(msgtype_, other->msgtype_);
    std::swap(iggid_, other->iggid_);
    std::swap(houseid_, other->houseid_);
    std::swap(next_house_tpy_, other->next_house_tpy_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgHouseUpgradeC2S::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgHouseUpgradeC2S_descriptor_;
  metadata.reflection = MsgHouseUpgradeC2S_reflection_;
  return metadata;
}


// ===================================================================

const ::google::protobuf::EnumDescriptor* MsgHouseUpgradeS2C_HOUSE_UP_RESULT_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgHouseUpgradeS2C_HOUSE_UP_RESULT_descriptor_;
}
bool MsgHouseUpgradeS2C_HOUSE_UP_RESULT_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const MsgHouseUpgradeS2C_HOUSE_UP_RESULT MsgHouseUpgradeS2C::ERR;
const MsgHouseUpgradeS2C_HOUSE_UP_RESULT MsgHouseUpgradeS2C::SUCC;
const MsgHouseUpgradeS2C_HOUSE_UP_RESULT MsgHouseUpgradeS2C::MATERIAL;
const MsgHouseUpgradeS2C_HOUSE_UP_RESULT MsgHouseUpgradeS2C::HOUSE_UP_RESULT_MIN;
const MsgHouseUpgradeS2C_HOUSE_UP_RESULT MsgHouseUpgradeS2C::HOUSE_UP_RESULT_MAX;
const int MsgHouseUpgradeS2C::HOUSE_UP_RESULT_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int MsgHouseUpgradeS2C::kMsgTypeFieldNumber;
const int MsgHouseUpgradeS2C::kIggidFieldNumber;
const int MsgHouseUpgradeS2C::kResultFieldNumber;
#endif  // !_MSC_VER

MsgHouseUpgradeS2C::MsgHouseUpgradeS2C()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.MsgHouseUpgradeS2C)
}

void MsgHouseUpgradeS2C::InitAsDefaultInstance() {
}

MsgHouseUpgradeS2C::MsgHouseUpgradeS2C(const MsgHouseUpgradeS2C& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.MsgHouseUpgradeS2C)
}

void MsgHouseUpgradeS2C::SharedCtor() {
  _cached_size_ = 0;
  msgtype_ = 5114;
  iggid_ = GOOGLE_LONGLONG(0);
  result_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgHouseUpgradeS2C::~MsgHouseUpgradeS2C() {
  // @@protoc_insertion_point(destructor:MsgPB.MsgHouseUpgradeS2C)
  SharedDtor();
}

void MsgHouseUpgradeS2C::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgHouseUpgradeS2C::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgHouseUpgradeS2C::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgHouseUpgradeS2C_descriptor_;
}

const MsgHouseUpgradeS2C& MsgHouseUpgradeS2C::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgHouse_2eproto();
  return *default_instance_;
}

MsgHouseUpgradeS2C* MsgHouseUpgradeS2C::default_instance_ = NULL;

MsgHouseUpgradeS2C* MsgHouseUpgradeS2C::New() const {
  return new MsgHouseUpgradeS2C;
}

void MsgHouseUpgradeS2C::Clear() {
  if (_has_bits_[0 / 32] & 7) {
    msgtype_ = 5114;
    iggid_ = GOOGLE_LONGLONG(0);
    result_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgHouseUpgradeS2C::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.MsgHouseUpgradeS2C)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_HOUSE_UPGRADE_S2C];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::EMsgType_IsValid(value)) {
            set_msgtype(static_cast< ::MsgPB::EMsgType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_iggid;
        break;
      }

      // optional int64 iggid = 2;
      case 2: {
        if (tag == 16) {
         parse_iggid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &iggid_)));
          set_has_iggid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_result;
        break;
      }

      // optional .MsgPB.MsgHouseUpgradeS2C.HOUSE_UP_RESULT result = 3;
      case 3: {
        if (tag == 24) {
         parse_result:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::MsgHouseUpgradeS2C_HOUSE_UP_RESULT_IsValid(value)) {
            set_result(static_cast< ::MsgPB::MsgHouseUpgradeS2C_HOUSE_UP_RESULT >(value));
          } else {
            mutable_unknown_fields()->AddVarint(3, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.MsgHouseUpgradeS2C)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.MsgHouseUpgradeS2C)
  return false;
#undef DO_
}

void MsgHouseUpgradeS2C::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.MsgHouseUpgradeS2C)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_HOUSE_UPGRADE_S2C];
  if (has_msgtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->msgtype(), output);
  }

  // optional int64 iggid = 2;
  if (has_iggid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->iggid(), output);
  }

  // optional .MsgPB.MsgHouseUpgradeS2C.HOUSE_UP_RESULT result = 3;
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->result(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.MsgHouseUpgradeS2C)
}

::google::protobuf::uint8* MsgHouseUpgradeS2C::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.MsgHouseUpgradeS2C)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_HOUSE_UPGRADE_S2C];
  if (has_msgtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->msgtype(), target);
  }

  // optional int64 iggid = 2;
  if (has_iggid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->iggid(), target);
  }

  // optional .MsgPB.MsgHouseUpgradeS2C.HOUSE_UP_RESULT result = 3;
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->result(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.MsgHouseUpgradeS2C)
  return target;
}

int MsgHouseUpgradeS2C::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_HOUSE_UPGRADE_S2C];
    if (has_msgtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgtype());
    }

    // optional int64 iggid = 2;
    if (has_iggid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->iggid());
    }

    // optional .MsgPB.MsgHouseUpgradeS2C.HOUSE_UP_RESULT result = 3;
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->result());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgHouseUpgradeS2C::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgHouseUpgradeS2C* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgHouseUpgradeS2C*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgHouseUpgradeS2C::MergeFrom(const MsgHouseUpgradeS2C& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msgtype()) {
      set_msgtype(from.msgtype());
    }
    if (from.has_iggid()) {
      set_iggid(from.iggid());
    }
    if (from.has_result()) {
      set_result(from.result());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgHouseUpgradeS2C::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgHouseUpgradeS2C::CopyFrom(const MsgHouseUpgradeS2C& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgHouseUpgradeS2C::IsInitialized() const {

  return true;
}

void MsgHouseUpgradeS2C::Swap(MsgHouseUpgradeS2C* other) {
  if (other != this) {
    std::swap(msgtype_, other->msgtype_);
    std::swap(iggid_, other->iggid_);
    std::swap(result_, other->result_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgHouseUpgradeS2C::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgHouseUpgradeS2C_descriptor_;
  metadata.reflection = MsgHouseUpgradeS2C_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgHouseHomeC2S::kMsgTypeFieldNumber;
const int MsgHouseHomeC2S::kIggidFieldNumber;
const int MsgHouseHomeC2S::kHouseIdFieldNumber;
const int MsgHouseHomeC2S::kProtectorIdFieldNumber;
const int MsgHouseHomeC2S::kBCheckInFieldNumber;
#endif  // !_MSC_VER

MsgHouseHomeC2S::MsgHouseHomeC2S()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.MsgHouseHomeC2S)
}

void MsgHouseHomeC2S::InitAsDefaultInstance() {
}

MsgHouseHomeC2S::MsgHouseHomeC2S(const MsgHouseHomeC2S& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.MsgHouseHomeC2S)
}

void MsgHouseHomeC2S::SharedCtor() {
  _cached_size_ = 0;
  msgtype_ = 5115;
  iggid_ = GOOGLE_LONGLONG(0);
  houseid_ = 0;
  protectorid_ = GOOGLE_LONGLONG(0);
  bcheckin_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgHouseHomeC2S::~MsgHouseHomeC2S() {
  // @@protoc_insertion_point(destructor:MsgPB.MsgHouseHomeC2S)
  SharedDtor();
}

void MsgHouseHomeC2S::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgHouseHomeC2S::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgHouseHomeC2S::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgHouseHomeC2S_descriptor_;
}

const MsgHouseHomeC2S& MsgHouseHomeC2S::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgHouse_2eproto();
  return *default_instance_;
}

MsgHouseHomeC2S* MsgHouseHomeC2S::default_instance_ = NULL;

MsgHouseHomeC2S* MsgHouseHomeC2S::New() const {
  return new MsgHouseHomeC2S;
}

void MsgHouseHomeC2S::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<MsgHouseHomeC2S*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 31) {
    ZR_(houseid_, bcheckin_);
    msgtype_ = 5115;
    iggid_ = GOOGLE_LONGLONG(0);
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgHouseHomeC2S::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.MsgHouseHomeC2S)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_HOUSE_NPC_HOME_C2S];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::EMsgType_IsValid(value)) {
            set_msgtype(static_cast< ::MsgPB::EMsgType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_iggid;
        break;
      }

      // optional int64 iggid = 2;
      case 2: {
        if (tag == 16) {
         parse_iggid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &iggid_)));
          set_has_iggid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_houseId;
        break;
      }

      // optional int32 houseId = 3;
      case 3: {
        if (tag == 24) {
         parse_houseId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &houseid_)));
          set_has_houseid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_protectorId;
        break;
      }

      // optional int64 protectorId = 4;
      case 4: {
        if (tag == 32) {
         parse_protectorId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &protectorid_)));
          set_has_protectorid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_bCheckIn;
        break;
      }

      // optional bool bCheckIn = 5;
      case 5: {
        if (tag == 40) {
         parse_bCheckIn:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &bcheckin_)));
          set_has_bcheckin();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.MsgHouseHomeC2S)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.MsgHouseHomeC2S)
  return false;
#undef DO_
}

void MsgHouseHomeC2S::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.MsgHouseHomeC2S)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_HOUSE_NPC_HOME_C2S];
  if (has_msgtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->msgtype(), output);
  }

  // optional int64 iggid = 2;
  if (has_iggid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->iggid(), output);
  }

  // optional int32 houseId = 3;
  if (has_houseid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->houseid(), output);
  }

  // optional int64 protectorId = 4;
  if (has_protectorid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->protectorid(), output);
  }

  // optional bool bCheckIn = 5;
  if (has_bcheckin()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->bcheckin(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.MsgHouseHomeC2S)
}

::google::protobuf::uint8* MsgHouseHomeC2S::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.MsgHouseHomeC2S)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_HOUSE_NPC_HOME_C2S];
  if (has_msgtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->msgtype(), target);
  }

  // optional int64 iggid = 2;
  if (has_iggid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->iggid(), target);
  }

  // optional int32 houseId = 3;
  if (has_houseid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->houseid(), target);
  }

  // optional int64 protectorId = 4;
  if (has_protectorid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->protectorid(), target);
  }

  // optional bool bCheckIn = 5;
  if (has_bcheckin()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->bcheckin(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.MsgHouseHomeC2S)
  return target;
}

int MsgHouseHomeC2S::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_HOUSE_NPC_HOME_C2S];
    if (has_msgtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgtype());
    }

    // optional int64 iggid = 2;
    if (has_iggid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->iggid());
    }

    // optional int32 houseId = 3;
    if (has_houseid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->houseid());
    }

    // optional int64 protectorId = 4;
    if (has_protectorid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->protectorid());
    }

    // optional bool bCheckIn = 5;
    if (has_bcheckin()) {
      total_size += 1 + 1;
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgHouseHomeC2S::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgHouseHomeC2S* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgHouseHomeC2S*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgHouseHomeC2S::MergeFrom(const MsgHouseHomeC2S& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msgtype()) {
      set_msgtype(from.msgtype());
    }
    if (from.has_iggid()) {
      set_iggid(from.iggid());
    }
    if (from.has_houseid()) {
      set_houseid(from.houseid());
    }
    if (from.has_protectorid()) {
      set_protectorid(from.protectorid());
    }
    if (from.has_bcheckin()) {
      set_bcheckin(from.bcheckin());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgHouseHomeC2S::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgHouseHomeC2S::CopyFrom(const MsgHouseHomeC2S& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgHouseHomeC2S::IsInitialized() const {

  return true;
}

void MsgHouseHomeC2S::Swap(MsgHouseHomeC2S* other) {
  if (other != this) {
    std::swap(msgtype_, other->msgtype_);
    std::swap(iggid_, other->iggid_);
    std::swap(houseid_, other->houseid_);
    std::swap(protectorid_, other->protectorid_);
    std::swap(bcheckin_, other->bcheckin_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgHouseHomeC2S::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgHouseHomeC2S_descriptor_;
  metadata.reflection = MsgHouseHomeC2S_reflection_;
  return metadata;
}


// ===================================================================

const ::google::protobuf::EnumDescriptor* MsgHouseHomeS2C_HOUSE_HOME_RESULT_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgHouseHomeS2C_HOUSE_HOME_RESULT_descriptor_;
}
bool MsgHouseHomeS2C_HOUSE_HOME_RESULT_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const MsgHouseHomeS2C_HOUSE_HOME_RESULT MsgHouseHomeS2C::ERR;
const MsgHouseHomeS2C_HOUSE_HOME_RESULT MsgHouseHomeS2C::SUCC;
const MsgHouseHomeS2C_HOUSE_HOME_RESULT MsgHouseHomeS2C::HOUSE_HOME_RESULT_MIN;
const MsgHouseHomeS2C_HOUSE_HOME_RESULT MsgHouseHomeS2C::HOUSE_HOME_RESULT_MAX;
const int MsgHouseHomeS2C::HOUSE_HOME_RESULT_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int MsgHouseHomeS2C::kMsgTypeFieldNumber;
const int MsgHouseHomeS2C::kIggidFieldNumber;
const int MsgHouseHomeS2C::kResultFieldNumber;
#endif  // !_MSC_VER

MsgHouseHomeS2C::MsgHouseHomeS2C()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.MsgHouseHomeS2C)
}

void MsgHouseHomeS2C::InitAsDefaultInstance() {
}

MsgHouseHomeS2C::MsgHouseHomeS2C(const MsgHouseHomeS2C& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.MsgHouseHomeS2C)
}

void MsgHouseHomeS2C::SharedCtor() {
  _cached_size_ = 0;
  msgtype_ = 5116;
  iggid_ = GOOGLE_LONGLONG(0);
  result_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgHouseHomeS2C::~MsgHouseHomeS2C() {
  // @@protoc_insertion_point(destructor:MsgPB.MsgHouseHomeS2C)
  SharedDtor();
}

void MsgHouseHomeS2C::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgHouseHomeS2C::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgHouseHomeS2C::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgHouseHomeS2C_descriptor_;
}

const MsgHouseHomeS2C& MsgHouseHomeS2C::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgHouse_2eproto();
  return *default_instance_;
}

MsgHouseHomeS2C* MsgHouseHomeS2C::default_instance_ = NULL;

MsgHouseHomeS2C* MsgHouseHomeS2C::New() const {
  return new MsgHouseHomeS2C;
}

void MsgHouseHomeS2C::Clear() {
  if (_has_bits_[0 / 32] & 7) {
    msgtype_ = 5116;
    iggid_ = GOOGLE_LONGLONG(0);
    result_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgHouseHomeS2C::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.MsgHouseHomeS2C)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_HOUSE_NPC_HOME_S2C];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::EMsgType_IsValid(value)) {
            set_msgtype(static_cast< ::MsgPB::EMsgType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_iggid;
        break;
      }

      // optional int64 iggid = 2;
      case 2: {
        if (tag == 16) {
         parse_iggid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &iggid_)));
          set_has_iggid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_result;
        break;
      }

      // optional .MsgPB.MsgHouseHomeS2C.HOUSE_HOME_RESULT result = 3;
      case 3: {
        if (tag == 24) {
         parse_result:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::MsgHouseHomeS2C_HOUSE_HOME_RESULT_IsValid(value)) {
            set_result(static_cast< ::MsgPB::MsgHouseHomeS2C_HOUSE_HOME_RESULT >(value));
          } else {
            mutable_unknown_fields()->AddVarint(3, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.MsgHouseHomeS2C)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.MsgHouseHomeS2C)
  return false;
#undef DO_
}

void MsgHouseHomeS2C::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.MsgHouseHomeS2C)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_HOUSE_NPC_HOME_S2C];
  if (has_msgtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->msgtype(), output);
  }

  // optional int64 iggid = 2;
  if (has_iggid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->iggid(), output);
  }

  // optional .MsgPB.MsgHouseHomeS2C.HOUSE_HOME_RESULT result = 3;
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->result(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.MsgHouseHomeS2C)
}

::google::protobuf::uint8* MsgHouseHomeS2C::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.MsgHouseHomeS2C)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_HOUSE_NPC_HOME_S2C];
  if (has_msgtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->msgtype(), target);
  }

  // optional int64 iggid = 2;
  if (has_iggid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->iggid(), target);
  }

  // optional .MsgPB.MsgHouseHomeS2C.HOUSE_HOME_RESULT result = 3;
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->result(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.MsgHouseHomeS2C)
  return target;
}

int MsgHouseHomeS2C::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_HOUSE_NPC_HOME_S2C];
    if (has_msgtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgtype());
    }

    // optional int64 iggid = 2;
    if (has_iggid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->iggid());
    }

    // optional .MsgPB.MsgHouseHomeS2C.HOUSE_HOME_RESULT result = 3;
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->result());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgHouseHomeS2C::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgHouseHomeS2C* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgHouseHomeS2C*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgHouseHomeS2C::MergeFrom(const MsgHouseHomeS2C& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msgtype()) {
      set_msgtype(from.msgtype());
    }
    if (from.has_iggid()) {
      set_iggid(from.iggid());
    }
    if (from.has_result()) {
      set_result(from.result());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgHouseHomeS2C::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgHouseHomeS2C::CopyFrom(const MsgHouseHomeS2C& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgHouseHomeS2C::IsInitialized() const {

  return true;
}

void MsgHouseHomeS2C::Swap(MsgHouseHomeS2C* other) {
  if (other != this) {
    std::swap(msgtype_, other->msgtype_);
    std::swap(iggid_, other->iggid_);
    std::swap(result_, other->result_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgHouseHomeS2C::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgHouseHomeS2C_descriptor_;
  metadata.reflection = MsgHouseHomeS2C_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace MsgPB

// @@protoc_insertion_point(global_scope)
