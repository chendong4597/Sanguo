// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MsgPlayerEvent.proto

#ifndef PROTOBUF_MsgPlayerEvent_2eproto__INCLUDED
#define PROTOBUF_MsgPlayerEvent_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "MsgType.pb.h"
// @@protoc_insertion_point(includes)

namespace MsgPB {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_MsgPlayerEvent_2eproto();
void protobuf_AssignDesc_MsgPlayerEvent_2eproto();
void protobuf_ShutdownFile_MsgPlayerEvent_2eproto();

class MsgTaskData;
class MsgPlayerEventTaskReport_C2S;
class MsgPlayerClientModeDead;

enum EN_PLAYER_EVT_TASK_TYPE {
  EN_PLAYER_EVT_TASK_TYPE_NONE = 0,
  EN_PLAYER_EVT_TASK_TYPE_ADVENTRUE_LOG = 1,
  EN_PLAYER_EVT_TASK_TYPE_MONTHLY_SUB = 2
};
bool EN_PLAYER_EVT_TASK_TYPE_IsValid(int value);
const EN_PLAYER_EVT_TASK_TYPE EN_PLAYER_EVT_TASK_TYPE_MIN = EN_PLAYER_EVT_TASK_TYPE_NONE;
const EN_PLAYER_EVT_TASK_TYPE EN_PLAYER_EVT_TASK_TYPE_MAX = EN_PLAYER_EVT_TASK_TYPE_MONTHLY_SUB;
const int EN_PLAYER_EVT_TASK_TYPE_ARRAYSIZE = EN_PLAYER_EVT_TASK_TYPE_MAX + 1;

const ::google::protobuf::EnumDescriptor* EN_PLAYER_EVT_TASK_TYPE_descriptor();
inline const ::std::string& EN_PLAYER_EVT_TASK_TYPE_Name(EN_PLAYER_EVT_TASK_TYPE value) {
  return ::google::protobuf::internal::NameOfEnum(
    EN_PLAYER_EVT_TASK_TYPE_descriptor(), value);
}
inline bool EN_PLAYER_EVT_TASK_TYPE_Parse(
    const ::std::string& name, EN_PLAYER_EVT_TASK_TYPE* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EN_PLAYER_EVT_TASK_TYPE>(
    EN_PLAYER_EVT_TASK_TYPE_descriptor(), name, value);
}
enum EN_PLAYER_EVT_TASK_STATUE {
  EN_PLAYER_EVT_TASK_STATUE_NONE = 0,
  EN_PLAYER_EVT_TASK_STATUE_RECEIVE = 1,
  EN_PLAYER_EVT_TASK_STATUE_COMPLETE = 2
};
bool EN_PLAYER_EVT_TASK_STATUE_IsValid(int value);
const EN_PLAYER_EVT_TASK_STATUE EN_PLAYER_EVT_TASK_STATUE_MIN = EN_PLAYER_EVT_TASK_STATUE_NONE;
const EN_PLAYER_EVT_TASK_STATUE EN_PLAYER_EVT_TASK_STATUE_MAX = EN_PLAYER_EVT_TASK_STATUE_COMPLETE;
const int EN_PLAYER_EVT_TASK_STATUE_ARRAYSIZE = EN_PLAYER_EVT_TASK_STATUE_MAX + 1;

const ::google::protobuf::EnumDescriptor* EN_PLAYER_EVT_TASK_STATUE_descriptor();
inline const ::std::string& EN_PLAYER_EVT_TASK_STATUE_Name(EN_PLAYER_EVT_TASK_STATUE value) {
  return ::google::protobuf::internal::NameOfEnum(
    EN_PLAYER_EVT_TASK_STATUE_descriptor(), value);
}
inline bool EN_PLAYER_EVT_TASK_STATUE_Parse(
    const ::std::string& name, EN_PLAYER_EVT_TASK_STATUE* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EN_PLAYER_EVT_TASK_STATUE>(
    EN_PLAYER_EVT_TASK_STATUE_descriptor(), name, value);
}
// ===================================================================

class MsgTaskData : public ::google::protobuf::Message {
 public:
  MsgTaskData();
  virtual ~MsgTaskData();

  MsgTaskData(const MsgTaskData& from);

  inline MsgTaskData& operator=(const MsgTaskData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgTaskData& default_instance();

  void Swap(MsgTaskData* other);

  // implements Message ----------------------------------------------

  MsgTaskData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgTaskData& from);
  void MergeFrom(const MsgTaskData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 task_id = 1;
  inline bool has_task_id() const;
  inline void clear_task_id();
  static const int kTaskIdFieldNumber = 1;
  inline ::google::protobuf::int32 task_id() const;
  inline void set_task_id(::google::protobuf::int32 value);

  // optional .MsgPB.EN_PLAYER_EVT_TASK_TYPE task_type = 2;
  inline bool has_task_type() const;
  inline void clear_task_type();
  static const int kTaskTypeFieldNumber = 2;
  inline ::MsgPB::EN_PLAYER_EVT_TASK_TYPE task_type() const;
  inline void set_task_type(::MsgPB::EN_PLAYER_EVT_TASK_TYPE value);

  // optional .MsgPB.EN_PLAYER_EVT_TASK_STATUE status = 3;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 3;
  inline ::MsgPB::EN_PLAYER_EVT_TASK_STATUE status() const;
  inline void set_status(::MsgPB::EN_PLAYER_EVT_TASK_STATUE value);

  // optional int32 count = 4;
  inline bool has_count() const;
  inline void clear_count();
  static const int kCountFieldNumber = 4;
  inline ::google::protobuf::int32 count() const;
  inline void set_count(::google::protobuf::int32 value);

  // optional int32 complete_count = 5;
  inline bool has_complete_count() const;
  inline void clear_complete_count();
  static const int kCompleteCountFieldNumber = 5;
  inline ::google::protobuf::int32 complete_count() const;
  inline void set_complete_count(::google::protobuf::int32 value);

  // repeated int32 source = 6;
  inline int source_size() const;
  inline void clear_source();
  static const int kSourceFieldNumber = 6;
  inline ::google::protobuf::int32 source(int index) const;
  inline void set_source(int index, ::google::protobuf::int32 value);
  inline void add_source(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      source() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_source();

  // @@protoc_insertion_point(class_scope:MsgPB.MsgTaskData)
 private:
  inline void set_has_task_id();
  inline void clear_has_task_id();
  inline void set_has_task_type();
  inline void clear_has_task_type();
  inline void set_has_status();
  inline void clear_has_status();
  inline void set_has_count();
  inline void clear_has_count();
  inline void set_has_complete_count();
  inline void clear_has_complete_count();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 task_id_;
  int task_type_;
  int status_;
  ::google::protobuf::int32 count_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > source_;
  ::google::protobuf::int32 complete_count_;
  friend void  protobuf_AddDesc_MsgPlayerEvent_2eproto();
  friend void protobuf_AssignDesc_MsgPlayerEvent_2eproto();
  friend void protobuf_ShutdownFile_MsgPlayerEvent_2eproto();

  void InitAsDefaultInstance();
  static MsgTaskData* default_instance_;
};
// -------------------------------------------------------------------

class MsgPlayerEventTaskReport_C2S : public ::google::protobuf::Message {
 public:
  MsgPlayerEventTaskReport_C2S();
  virtual ~MsgPlayerEventTaskReport_C2S();

  MsgPlayerEventTaskReport_C2S(const MsgPlayerEventTaskReport_C2S& from);

  inline MsgPlayerEventTaskReport_C2S& operator=(const MsgPlayerEventTaskReport_C2S& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgPlayerEventTaskReport_C2S& default_instance();

  void Swap(MsgPlayerEventTaskReport_C2S* other);

  // implements Message ----------------------------------------------

  MsgPlayerEventTaskReport_C2S* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgPlayerEventTaskReport_C2S& from);
  void MergeFrom(const MsgPlayerEventTaskReport_C2S& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_PLAYER_EVENT_TASK_REPORT_C2S];
  inline bool has_msgtype() const;
  inline void clear_msgtype();
  static const int kMsgTypeFieldNumber = 1;
  inline ::MsgPB::EMsgType msgtype() const;
  inline void set_msgtype(::MsgPB::EMsgType value);

  // optional int64 iggid = 2;
  inline bool has_iggid() const;
  inline void clear_iggid();
  static const int kIggidFieldNumber = 2;
  inline ::google::protobuf::int64 iggid() const;
  inline void set_iggid(::google::protobuf::int64 value);

  // optional .MsgPB.MsgTaskData task_data = 3;
  inline bool has_task_data() const;
  inline void clear_task_data();
  static const int kTaskDataFieldNumber = 3;
  inline const ::MsgPB::MsgTaskData& task_data() const;
  inline ::MsgPB::MsgTaskData* mutable_task_data();
  inline ::MsgPB::MsgTaskData* release_task_data();
  inline void set_allocated_task_data(::MsgPB::MsgTaskData* task_data);

  // @@protoc_insertion_point(class_scope:MsgPB.MsgPlayerEventTaskReport_C2S)
 private:
  inline void set_has_msgtype();
  inline void clear_has_msgtype();
  inline void set_has_iggid();
  inline void clear_has_iggid();
  inline void set_has_task_data();
  inline void clear_has_task_data();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 iggid_;
  ::MsgPB::MsgTaskData* task_data_;
  int msgtype_;
  friend void  protobuf_AddDesc_MsgPlayerEvent_2eproto();
  friend void protobuf_AssignDesc_MsgPlayerEvent_2eproto();
  friend void protobuf_ShutdownFile_MsgPlayerEvent_2eproto();

  void InitAsDefaultInstance();
  static MsgPlayerEventTaskReport_C2S* default_instance_;
};
// -------------------------------------------------------------------

class MsgPlayerClientModeDead : public ::google::protobuf::Message {
 public:
  MsgPlayerClientModeDead();
  virtual ~MsgPlayerClientModeDead();

  MsgPlayerClientModeDead(const MsgPlayerClientModeDead& from);

  inline MsgPlayerClientModeDead& operator=(const MsgPlayerClientModeDead& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgPlayerClientModeDead& default_instance();

  void Swap(MsgPlayerClientModeDead* other);

  // implements Message ----------------------------------------------

  MsgPlayerClientModeDead* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgPlayerClientModeDead& from);
  void MergeFrom(const MsgPlayerClientModeDead& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_PALYER_DIE_IN_CLIENT_MODE];
  inline bool has_msgtype() const;
  inline void clear_msgtype();
  static const int kMsgTypeFieldNumber = 1;
  inline ::MsgPB::EMsgType msgtype() const;
  inline void set_msgtype(::MsgPB::EMsgType value);

  // optional int64 iggid = 2;
  inline bool has_iggid() const;
  inline void clear_iggid();
  static const int kIggidFieldNumber = 2;
  inline ::google::protobuf::int64 iggid() const;
  inline void set_iggid(::google::protobuf::int64 value);

  // optional int32 mapid = 3;
  inline bool has_mapid() const;
  inline void clear_mapid();
  static const int kMapidFieldNumber = 3;
  inline ::google::protobuf::int32 mapid() const;
  inline void set_mapid(::google::protobuf::int32 value);

  // optional int32 level = 4;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 4;
  inline ::google::protobuf::int32 level() const;
  inline void set_level(::google::protobuf::int32 value);

  // optional int32 pos_x = 5;
  inline bool has_pos_x() const;
  inline void clear_pos_x();
  static const int kPosXFieldNumber = 5;
  inline ::google::protobuf::int32 pos_x() const;
  inline void set_pos_x(::google::protobuf::int32 value);

  // optional int32 pos_y = 6;
  inline bool has_pos_y() const;
  inline void clear_pos_y();
  static const int kPosYFieldNumber = 6;
  inline ::google::protobuf::int32 pos_y() const;
  inline void set_pos_y(::google::protobuf::int32 value);

  // optional string info = 7;
  inline bool has_info() const;
  inline void clear_info();
  static const int kInfoFieldNumber = 7;
  inline const ::std::string& info() const;
  inline void set_info(const ::std::string& value);
  inline void set_info(const char* value);
  inline void set_info(const char* value, size_t size);
  inline ::std::string* mutable_info();
  inline ::std::string* release_info();
  inline void set_allocated_info(::std::string* info);

  // @@protoc_insertion_point(class_scope:MsgPB.MsgPlayerClientModeDead)
 private:
  inline void set_has_msgtype();
  inline void clear_has_msgtype();
  inline void set_has_iggid();
  inline void clear_has_iggid();
  inline void set_has_mapid();
  inline void clear_has_mapid();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_pos_x();
  inline void clear_has_pos_x();
  inline void set_has_pos_y();
  inline void clear_has_pos_y();
  inline void set_has_info();
  inline void clear_has_info();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 iggid_;
  int msgtype_;
  ::google::protobuf::int32 mapid_;
  ::google::protobuf::int32 level_;
  ::google::protobuf::int32 pos_x_;
  ::std::string* info_;
  ::google::protobuf::int32 pos_y_;
  friend void  protobuf_AddDesc_MsgPlayerEvent_2eproto();
  friend void protobuf_AssignDesc_MsgPlayerEvent_2eproto();
  friend void protobuf_ShutdownFile_MsgPlayerEvent_2eproto();

  void InitAsDefaultInstance();
  static MsgPlayerClientModeDead* default_instance_;
};
// ===================================================================


// ===================================================================

// MsgTaskData

// optional int32 task_id = 1;
inline bool MsgTaskData::has_task_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgTaskData::set_has_task_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgTaskData::clear_has_task_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgTaskData::clear_task_id() {
  task_id_ = 0;
  clear_has_task_id();
}
inline ::google::protobuf::int32 MsgTaskData::task_id() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgTaskData.task_id)
  return task_id_;
}
inline void MsgTaskData::set_task_id(::google::protobuf::int32 value) {
  set_has_task_id();
  task_id_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgTaskData.task_id)
}

// optional .MsgPB.EN_PLAYER_EVT_TASK_TYPE task_type = 2;
inline bool MsgTaskData::has_task_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MsgTaskData::set_has_task_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MsgTaskData::clear_has_task_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MsgTaskData::clear_task_type() {
  task_type_ = 0;
  clear_has_task_type();
}
inline ::MsgPB::EN_PLAYER_EVT_TASK_TYPE MsgTaskData::task_type() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgTaskData.task_type)
  return static_cast< ::MsgPB::EN_PLAYER_EVT_TASK_TYPE >(task_type_);
}
inline void MsgTaskData::set_task_type(::MsgPB::EN_PLAYER_EVT_TASK_TYPE value) {
  assert(::MsgPB::EN_PLAYER_EVT_TASK_TYPE_IsValid(value));
  set_has_task_type();
  task_type_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgTaskData.task_type)
}

// optional .MsgPB.EN_PLAYER_EVT_TASK_STATUE status = 3;
inline bool MsgTaskData::has_status() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MsgTaskData::set_has_status() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MsgTaskData::clear_has_status() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MsgTaskData::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::MsgPB::EN_PLAYER_EVT_TASK_STATUE MsgTaskData::status() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgTaskData.status)
  return static_cast< ::MsgPB::EN_PLAYER_EVT_TASK_STATUE >(status_);
}
inline void MsgTaskData::set_status(::MsgPB::EN_PLAYER_EVT_TASK_STATUE value) {
  assert(::MsgPB::EN_PLAYER_EVT_TASK_STATUE_IsValid(value));
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgTaskData.status)
}

// optional int32 count = 4;
inline bool MsgTaskData::has_count() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MsgTaskData::set_has_count() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MsgTaskData::clear_has_count() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MsgTaskData::clear_count() {
  count_ = 0;
  clear_has_count();
}
inline ::google::protobuf::int32 MsgTaskData::count() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgTaskData.count)
  return count_;
}
inline void MsgTaskData::set_count(::google::protobuf::int32 value) {
  set_has_count();
  count_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgTaskData.count)
}

// optional int32 complete_count = 5;
inline bool MsgTaskData::has_complete_count() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void MsgTaskData::set_has_complete_count() {
  _has_bits_[0] |= 0x00000010u;
}
inline void MsgTaskData::clear_has_complete_count() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void MsgTaskData::clear_complete_count() {
  complete_count_ = 0;
  clear_has_complete_count();
}
inline ::google::protobuf::int32 MsgTaskData::complete_count() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgTaskData.complete_count)
  return complete_count_;
}
inline void MsgTaskData::set_complete_count(::google::protobuf::int32 value) {
  set_has_complete_count();
  complete_count_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgTaskData.complete_count)
}

// repeated int32 source = 6;
inline int MsgTaskData::source_size() const {
  return source_.size();
}
inline void MsgTaskData::clear_source() {
  source_.Clear();
}
inline ::google::protobuf::int32 MsgTaskData::source(int index) const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgTaskData.source)
  return source_.Get(index);
}
inline void MsgTaskData::set_source(int index, ::google::protobuf::int32 value) {
  source_.Set(index, value);
  // @@protoc_insertion_point(field_set:MsgPB.MsgTaskData.source)
}
inline void MsgTaskData::add_source(::google::protobuf::int32 value) {
  source_.Add(value);
  // @@protoc_insertion_point(field_add:MsgPB.MsgTaskData.source)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
MsgTaskData::source() const {
  // @@protoc_insertion_point(field_list:MsgPB.MsgTaskData.source)
  return source_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
MsgTaskData::mutable_source() {
  // @@protoc_insertion_point(field_mutable_list:MsgPB.MsgTaskData.source)
  return &source_;
}

// -------------------------------------------------------------------

// MsgPlayerEventTaskReport_C2S

// optional .MsgPB.EMsgType msgType = 1 [default = _MSG_PLAYER_EVENT_TASK_REPORT_C2S];
inline bool MsgPlayerEventTaskReport_C2S::has_msgtype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgPlayerEventTaskReport_C2S::set_has_msgtype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgPlayerEventTaskReport_C2S::clear_has_msgtype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgPlayerEventTaskReport_C2S::clear_msgtype() {
  msgtype_ = 7150;
  clear_has_msgtype();
}
inline ::MsgPB::EMsgType MsgPlayerEventTaskReport_C2S::msgtype() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgPlayerEventTaskReport_C2S.msgType)
  return static_cast< ::MsgPB::EMsgType >(msgtype_);
}
inline void MsgPlayerEventTaskReport_C2S::set_msgtype(::MsgPB::EMsgType value) {
  assert(::MsgPB::EMsgType_IsValid(value));
  set_has_msgtype();
  msgtype_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgPlayerEventTaskReport_C2S.msgType)
}

// optional int64 iggid = 2;
inline bool MsgPlayerEventTaskReport_C2S::has_iggid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MsgPlayerEventTaskReport_C2S::set_has_iggid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MsgPlayerEventTaskReport_C2S::clear_has_iggid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MsgPlayerEventTaskReport_C2S::clear_iggid() {
  iggid_ = GOOGLE_LONGLONG(0);
  clear_has_iggid();
}
inline ::google::protobuf::int64 MsgPlayerEventTaskReport_C2S::iggid() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgPlayerEventTaskReport_C2S.iggid)
  return iggid_;
}
inline void MsgPlayerEventTaskReport_C2S::set_iggid(::google::protobuf::int64 value) {
  set_has_iggid();
  iggid_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgPlayerEventTaskReport_C2S.iggid)
}

// optional .MsgPB.MsgTaskData task_data = 3;
inline bool MsgPlayerEventTaskReport_C2S::has_task_data() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MsgPlayerEventTaskReport_C2S::set_has_task_data() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MsgPlayerEventTaskReport_C2S::clear_has_task_data() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MsgPlayerEventTaskReport_C2S::clear_task_data() {
  if (task_data_ != NULL) task_data_->::MsgPB::MsgTaskData::Clear();
  clear_has_task_data();
}
inline const ::MsgPB::MsgTaskData& MsgPlayerEventTaskReport_C2S::task_data() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgPlayerEventTaskReport_C2S.task_data)
  return task_data_ != NULL ? *task_data_ : *default_instance_->task_data_;
}
inline ::MsgPB::MsgTaskData* MsgPlayerEventTaskReport_C2S::mutable_task_data() {
  set_has_task_data();
  if (task_data_ == NULL) task_data_ = new ::MsgPB::MsgTaskData;
  // @@protoc_insertion_point(field_mutable:MsgPB.MsgPlayerEventTaskReport_C2S.task_data)
  return task_data_;
}
inline ::MsgPB::MsgTaskData* MsgPlayerEventTaskReport_C2S::release_task_data() {
  clear_has_task_data();
  ::MsgPB::MsgTaskData* temp = task_data_;
  task_data_ = NULL;
  return temp;
}
inline void MsgPlayerEventTaskReport_C2S::set_allocated_task_data(::MsgPB::MsgTaskData* task_data) {
  delete task_data_;
  task_data_ = task_data;
  if (task_data) {
    set_has_task_data();
  } else {
    clear_has_task_data();
  }
  // @@protoc_insertion_point(field_set_allocated:MsgPB.MsgPlayerEventTaskReport_C2S.task_data)
}

// -------------------------------------------------------------------

// MsgPlayerClientModeDead

// optional .MsgPB.EMsgType msgType = 1 [default = _MSG_PALYER_DIE_IN_CLIENT_MODE];
inline bool MsgPlayerClientModeDead::has_msgtype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgPlayerClientModeDead::set_has_msgtype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgPlayerClientModeDead::clear_has_msgtype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgPlayerClientModeDead::clear_msgtype() {
  msgtype_ = 1168;
  clear_has_msgtype();
}
inline ::MsgPB::EMsgType MsgPlayerClientModeDead::msgtype() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgPlayerClientModeDead.msgType)
  return static_cast< ::MsgPB::EMsgType >(msgtype_);
}
inline void MsgPlayerClientModeDead::set_msgtype(::MsgPB::EMsgType value) {
  assert(::MsgPB::EMsgType_IsValid(value));
  set_has_msgtype();
  msgtype_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgPlayerClientModeDead.msgType)
}

// optional int64 iggid = 2;
inline bool MsgPlayerClientModeDead::has_iggid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MsgPlayerClientModeDead::set_has_iggid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MsgPlayerClientModeDead::clear_has_iggid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MsgPlayerClientModeDead::clear_iggid() {
  iggid_ = GOOGLE_LONGLONG(0);
  clear_has_iggid();
}
inline ::google::protobuf::int64 MsgPlayerClientModeDead::iggid() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgPlayerClientModeDead.iggid)
  return iggid_;
}
inline void MsgPlayerClientModeDead::set_iggid(::google::protobuf::int64 value) {
  set_has_iggid();
  iggid_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgPlayerClientModeDead.iggid)
}

// optional int32 mapid = 3;
inline bool MsgPlayerClientModeDead::has_mapid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MsgPlayerClientModeDead::set_has_mapid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MsgPlayerClientModeDead::clear_has_mapid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MsgPlayerClientModeDead::clear_mapid() {
  mapid_ = 0;
  clear_has_mapid();
}
inline ::google::protobuf::int32 MsgPlayerClientModeDead::mapid() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgPlayerClientModeDead.mapid)
  return mapid_;
}
inline void MsgPlayerClientModeDead::set_mapid(::google::protobuf::int32 value) {
  set_has_mapid();
  mapid_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgPlayerClientModeDead.mapid)
}

// optional int32 level = 4;
inline bool MsgPlayerClientModeDead::has_level() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MsgPlayerClientModeDead::set_has_level() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MsgPlayerClientModeDead::clear_has_level() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MsgPlayerClientModeDead::clear_level() {
  level_ = 0;
  clear_has_level();
}
inline ::google::protobuf::int32 MsgPlayerClientModeDead::level() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgPlayerClientModeDead.level)
  return level_;
}
inline void MsgPlayerClientModeDead::set_level(::google::protobuf::int32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgPlayerClientModeDead.level)
}

// optional int32 pos_x = 5;
inline bool MsgPlayerClientModeDead::has_pos_x() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void MsgPlayerClientModeDead::set_has_pos_x() {
  _has_bits_[0] |= 0x00000010u;
}
inline void MsgPlayerClientModeDead::clear_has_pos_x() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void MsgPlayerClientModeDead::clear_pos_x() {
  pos_x_ = 0;
  clear_has_pos_x();
}
inline ::google::protobuf::int32 MsgPlayerClientModeDead::pos_x() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgPlayerClientModeDead.pos_x)
  return pos_x_;
}
inline void MsgPlayerClientModeDead::set_pos_x(::google::protobuf::int32 value) {
  set_has_pos_x();
  pos_x_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgPlayerClientModeDead.pos_x)
}

// optional int32 pos_y = 6;
inline bool MsgPlayerClientModeDead::has_pos_y() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void MsgPlayerClientModeDead::set_has_pos_y() {
  _has_bits_[0] |= 0x00000020u;
}
inline void MsgPlayerClientModeDead::clear_has_pos_y() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void MsgPlayerClientModeDead::clear_pos_y() {
  pos_y_ = 0;
  clear_has_pos_y();
}
inline ::google::protobuf::int32 MsgPlayerClientModeDead::pos_y() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgPlayerClientModeDead.pos_y)
  return pos_y_;
}
inline void MsgPlayerClientModeDead::set_pos_y(::google::protobuf::int32 value) {
  set_has_pos_y();
  pos_y_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgPlayerClientModeDead.pos_y)
}

// optional string info = 7;
inline bool MsgPlayerClientModeDead::has_info() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void MsgPlayerClientModeDead::set_has_info() {
  _has_bits_[0] |= 0x00000040u;
}
inline void MsgPlayerClientModeDead::clear_has_info() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void MsgPlayerClientModeDead::clear_info() {
  if (info_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    info_->clear();
  }
  clear_has_info();
}
inline const ::std::string& MsgPlayerClientModeDead::info() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgPlayerClientModeDead.info)
  return *info_;
}
inline void MsgPlayerClientModeDead::set_info(const ::std::string& value) {
  set_has_info();
  if (info_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    info_ = new ::std::string;
  }
  info_->assign(value);
  // @@protoc_insertion_point(field_set:MsgPB.MsgPlayerClientModeDead.info)
}
inline void MsgPlayerClientModeDead::set_info(const char* value) {
  set_has_info();
  if (info_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    info_ = new ::std::string;
  }
  info_->assign(value);
  // @@protoc_insertion_point(field_set_char:MsgPB.MsgPlayerClientModeDead.info)
}
inline void MsgPlayerClientModeDead::set_info(const char* value, size_t size) {
  set_has_info();
  if (info_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    info_ = new ::std::string;
  }
  info_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:MsgPB.MsgPlayerClientModeDead.info)
}
inline ::std::string* MsgPlayerClientModeDead::mutable_info() {
  set_has_info();
  if (info_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    info_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:MsgPB.MsgPlayerClientModeDead.info)
  return info_;
}
inline ::std::string* MsgPlayerClientModeDead::release_info() {
  clear_has_info();
  if (info_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = info_;
    info_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void MsgPlayerClientModeDead::set_allocated_info(::std::string* info) {
  if (info_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete info_;
  }
  if (info) {
    set_has_info();
    info_ = info;
  } else {
    clear_has_info();
    info_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:MsgPB.MsgPlayerClientModeDead.info)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace MsgPB

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::MsgPB::EN_PLAYER_EVT_TASK_TYPE> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::MsgPB::EN_PLAYER_EVT_TASK_TYPE>() {
  return ::MsgPB::EN_PLAYER_EVT_TASK_TYPE_descriptor();
}
template <> struct is_proto_enum< ::MsgPB::EN_PLAYER_EVT_TASK_STATUE> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::MsgPB::EN_PLAYER_EVT_TASK_STATUE>() {
  return ::MsgPB::EN_PLAYER_EVT_TASK_STATUE_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_MsgPlayerEvent_2eproto__INCLUDED
