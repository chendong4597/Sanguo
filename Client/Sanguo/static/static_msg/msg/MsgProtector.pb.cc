// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MsgProtector.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "MsgProtector.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace MsgPB {

namespace {

const ::google::protobuf::Descriptor* ProtectorItemUseCount_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ProtectorItemUseCount_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgProtectorData_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgProtectorData_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgProtectorDataToClient_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgProtectorDataToClient_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgProtectorRentC2S_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgProtectorRentC2S_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgProtectorRentResultS2C_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgProtectorRentResultS2C_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* MsgProtectorRentResultS2C_RESULT_descriptor_ = NULL;
const ::google::protobuf::Descriptor* MsgProtectorReviveC2S_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgProtectorReviveC2S_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgProtectorReviveResultS2C_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgProtectorReviveResultS2C_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* MsgProtectorReviveResultS2C_RESULT_descriptor_ = NULL;
const ::google::protobuf::Descriptor* MsgProtectorPatrolC2S_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgProtectorPatrolC2S_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* MsgProtectorPatrolC2S_MODE_descriptor_ = NULL;
const ::google::protobuf::Descriptor* MsgProtectorPatrolResultS2C_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgProtectorPatrolResultS2C_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* MsgProtectorPatrolResultS2C_RESULT_descriptor_ = NULL;
const ::google::protobuf::Descriptor* MsgGetStatusC2S_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgGetStatusC2S_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgProtectorGetStatusResultS2C_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgProtectorGetStatusResultS2C_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgProtectorSyncS2C_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgProtectorSyncS2C_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgProtectorUpdateS2C_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgProtectorUpdateS2C_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgProtectorRemoveS2C_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgProtectorRemoveS2C_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgProtectorRemoveC2S_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgProtectorRemoveC2S_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgProtectorFadeOutS2C_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgProtectorFadeOutS2C_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgProtectorReplacementBadgeC2S_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgProtectorReplacementBadgeC2S_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgProtectorReplacementBadgeResultS2C_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgProtectorReplacementBadgeResultS2C_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* MsgProtectorReplacementBadgeResultS2C_RESULT_descriptor_ = NULL;
const ::google::protobuf::Descriptor* MsgProtectorCastSkillToPlayerC2S_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgProtectorCastSkillToPlayerC2S_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgProtectorCastSkillToPlayerResultS2C_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgProtectorCastSkillToPlayerResultS2C_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* MsgProtectorCastSkillToPlayerResultS2C_RESULT_descriptor_ = NULL;
const ::google::protobuf::Descriptor* MsgProtectorClientSyncRectTimeC2S_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgProtectorClientSyncRectTimeC2S_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgProtectorUseEssenceReqC2S_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgProtectorUseEssenceReqC2S_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgProtectorUseEssenceResS2C_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgProtectorUseEssenceResS2C_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* MsgProtectorUseEssenceResS2C_RESULT_descriptor_ = NULL;
const ::google::protobuf::Descriptor* MsgProtectorEquipReqC2S_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgProtectorEquipReqC2S_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgProtectorEquipResS2C_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgProtectorEquipResS2C_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* MsgProtectorEquipResS2C_RESULT_descriptor_ = NULL;
const ::google::protobuf::Descriptor* MsgProtectorRebornAtOnceC2S_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgProtectorRebornAtOnceC2S_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgProtectorRebornAtOnceS2C_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgProtectorRebornAtOnceS2C_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgProtectorMultiRentC2S_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgProtectorMultiRentC2S_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgProtectorMultiRentS2C_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgProtectorMultiRentS2C_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgProtectorEventC2S_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgProtectorEventC2S_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* MsgProtectorEventC2S_DOEVENT_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* NPC_EQUIP_POS_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_MsgProtector_2eproto() {
  protobuf_AddDesc_MsgProtector_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "MsgProtector.proto");
  GOOGLE_CHECK(file != NULL);
  ProtectorItemUseCount_descriptor_ = file->message_type(0);
  static const int ProtectorItemUseCount_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtectorItemUseCount, dataid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtectorItemUseCount, count_),
  };
  ProtectorItemUseCount_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ProtectorItemUseCount_descriptor_,
      ProtectorItemUseCount::default_instance_,
      ProtectorItemUseCount_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtectorItemUseCount, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtectorItemUseCount, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ProtectorItemUseCount));
  MsgProtectorData_descriptor_ = file->message_type(1);
  static const int MsgProtectorData_offsets_[18] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgProtectorData, uuid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgProtectorData, templateid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgProtectorData, mapobjectid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgProtectorData, itemid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgProtectorData, level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgProtectorData, nexp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgProtectorData, houseid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgProtectorData, hp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgProtectorData, mp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgProtectorData, status_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgProtectorData, rect_day_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgProtectorData, rent_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgProtectorData, required_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgProtectorData, comfort_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgProtectorData, equipid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgProtectorData, weaponid1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgProtectorData, weaponid2_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgProtectorData, follow_uuid_),
  };
  MsgProtectorData_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgProtectorData_descriptor_,
      MsgProtectorData::default_instance_,
      MsgProtectorData_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgProtectorData, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgProtectorData, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgProtectorData));
  MsgProtectorDataToClient_descriptor_ = file->message_type(2);
  static const int MsgProtectorDataToClient_offsets_[18] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgProtectorDataToClient, uuid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgProtectorDataToClient, templateid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgProtectorDataToClient, mapobjectid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgProtectorDataToClient, itemid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgProtectorDataToClient, level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgProtectorDataToClient, nexp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgProtectorDataToClient, houseid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgProtectorDataToClient, hp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgProtectorDataToClient, mp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgProtectorDataToClient, status_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgProtectorDataToClient, rect_day_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgProtectorDataToClient, rent_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgProtectorDataToClient, required_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgProtectorDataToClient, comfort_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgProtectorDataToClient, equipid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgProtectorDataToClient, weaponid1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgProtectorDataToClient, weaponid2_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgProtectorDataToClient, follow_uuid_),
  };
  MsgProtectorDataToClient_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgProtectorDataToClient_descriptor_,
      MsgProtectorDataToClient::default_instance_,
      MsgProtectorDataToClient_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgProtectorDataToClient, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgProtectorDataToClient, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgProtectorDataToClient));
  MsgProtectorRentC2S_descriptor_ = file->message_type(3);
  static const int MsgProtectorRentC2S_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgProtectorRentC2S, msgtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgProtectorRentC2S, uuid_),
  };
  MsgProtectorRentC2S_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgProtectorRentC2S_descriptor_,
      MsgProtectorRentC2S::default_instance_,
      MsgProtectorRentC2S_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgProtectorRentC2S, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgProtectorRentC2S, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgProtectorRentC2S));
  MsgProtectorRentResultS2C_descriptor_ = file->message_type(4);
  static const int MsgProtectorRentResultS2C_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgProtectorRentResultS2C, msgtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgProtectorRentResultS2C, result_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgProtectorRentResultS2C, coin_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgProtectorRentResultS2C, item_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgProtectorRentResultS2C, uuid_),
  };
  MsgProtectorRentResultS2C_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgProtectorRentResultS2C_descriptor_,
      MsgProtectorRentResultS2C::default_instance_,
      MsgProtectorRentResultS2C_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgProtectorRentResultS2C, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgProtectorRentResultS2C, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgProtectorRentResultS2C));
  MsgProtectorRentResultS2C_RESULT_descriptor_ = MsgProtectorRentResultS2C_descriptor_->enum_type(0);
  MsgProtectorReviveC2S_descriptor_ = file->message_type(5);
  static const int MsgProtectorReviveC2S_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgProtectorReviveC2S, msgtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgProtectorReviveC2S, iggid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgProtectorReviveC2S, uuid_),
  };
  MsgProtectorReviveC2S_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgProtectorReviveC2S_descriptor_,
      MsgProtectorReviveC2S::default_instance_,
      MsgProtectorReviveC2S_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgProtectorReviveC2S, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgProtectorReviveC2S, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgProtectorReviveC2S));
  MsgProtectorReviveResultS2C_descriptor_ = file->message_type(6);
  static const int MsgProtectorReviveResultS2C_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgProtectorReviveResultS2C, msgtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgProtectorReviveResultS2C, result_),
  };
  MsgProtectorReviveResultS2C_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgProtectorReviveResultS2C_descriptor_,
      MsgProtectorReviveResultS2C::default_instance_,
      MsgProtectorReviveResultS2C_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgProtectorReviveResultS2C, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgProtectorReviveResultS2C, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgProtectorReviveResultS2C));
  MsgProtectorReviveResultS2C_RESULT_descriptor_ = MsgProtectorReviveResultS2C_descriptor_->enum_type(0);
  MsgProtectorPatrolC2S_descriptor_ = file->message_type(7);
  static const int MsgProtectorPatrolC2S_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgProtectorPatrolC2S, msgtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgProtectorPatrolC2S, iggid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgProtectorPatrolC2S, uuid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgProtectorPatrolC2S, mode_),
  };
  MsgProtectorPatrolC2S_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgProtectorPatrolC2S_descriptor_,
      MsgProtectorPatrolC2S::default_instance_,
      MsgProtectorPatrolC2S_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgProtectorPatrolC2S, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgProtectorPatrolC2S, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgProtectorPatrolC2S));
  MsgProtectorPatrolC2S_MODE_descriptor_ = MsgProtectorPatrolC2S_descriptor_->enum_type(0);
  MsgProtectorPatrolResultS2C_descriptor_ = file->message_type(8);
  static const int MsgProtectorPatrolResultS2C_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgProtectorPatrolResultS2C, msgtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgProtectorPatrolResultS2C, iggid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgProtectorPatrolResultS2C, result_),
  };
  MsgProtectorPatrolResultS2C_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgProtectorPatrolResultS2C_descriptor_,
      MsgProtectorPatrolResultS2C::default_instance_,
      MsgProtectorPatrolResultS2C_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgProtectorPatrolResultS2C, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgProtectorPatrolResultS2C, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgProtectorPatrolResultS2C));
  MsgProtectorPatrolResultS2C_RESULT_descriptor_ = MsgProtectorPatrolResultS2C_descriptor_->enum_type(0);
  MsgGetStatusC2S_descriptor_ = file->message_type(9);
  static const int MsgGetStatusC2S_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgGetStatusC2S, msgtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgGetStatusC2S, uuid_),
  };
  MsgGetStatusC2S_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgGetStatusC2S_descriptor_,
      MsgGetStatusC2S::default_instance_,
      MsgGetStatusC2S_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgGetStatusC2S, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgGetStatusC2S, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgGetStatusC2S));
  MsgProtectorGetStatusResultS2C_descriptor_ = file->message_type(10);
  static const int MsgProtectorGetStatusResultS2C_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgProtectorGetStatusResultS2C, msgtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgProtectorGetStatusResultS2C, uuid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgProtectorGetStatusResultS2C, status_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgProtectorGetStatusResultS2C, required_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgProtectorGetStatusResultS2C, param_),
  };
  MsgProtectorGetStatusResultS2C_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgProtectorGetStatusResultS2C_descriptor_,
      MsgProtectorGetStatusResultS2C::default_instance_,
      MsgProtectorGetStatusResultS2C_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgProtectorGetStatusResultS2C, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgProtectorGetStatusResultS2C, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgProtectorGetStatusResultS2C));
  MsgProtectorSyncS2C_descriptor_ = file->message_type(11);
  static const int MsgProtectorSyncS2C_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgProtectorSyncS2C, msgtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgProtectorSyncS2C, data_),
  };
  MsgProtectorSyncS2C_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgProtectorSyncS2C_descriptor_,
      MsgProtectorSyncS2C::default_instance_,
      MsgProtectorSyncS2C_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgProtectorSyncS2C, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgProtectorSyncS2C, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgProtectorSyncS2C));
  MsgProtectorUpdateS2C_descriptor_ = file->message_type(12);
  static const int MsgProtectorUpdateS2C_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgProtectorUpdateS2C, msgtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgProtectorUpdateS2C, data_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgProtectorUpdateS2C, noaddtoshortbar_),
  };
  MsgProtectorUpdateS2C_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgProtectorUpdateS2C_descriptor_,
      MsgProtectorUpdateS2C::default_instance_,
      MsgProtectorUpdateS2C_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgProtectorUpdateS2C, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgProtectorUpdateS2C, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgProtectorUpdateS2C));
  MsgProtectorRemoveS2C_descriptor_ = file->message_type(13);
  static const int MsgProtectorRemoveS2C_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgProtectorRemoveS2C, msgtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgProtectorRemoveS2C, mapobjectid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgProtectorRemoveS2C, uuid_),
  };
  MsgProtectorRemoveS2C_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgProtectorRemoveS2C_descriptor_,
      MsgProtectorRemoveS2C::default_instance_,
      MsgProtectorRemoveS2C_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgProtectorRemoveS2C, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgProtectorRemoveS2C, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgProtectorRemoveS2C));
  MsgProtectorRemoveC2S_descriptor_ = file->message_type(14);
  static const int MsgProtectorRemoveC2S_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgProtectorRemoveC2S, msgtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgProtectorRemoveC2S, iggid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgProtectorRemoveC2S, uuid_),
  };
  MsgProtectorRemoveC2S_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgProtectorRemoveC2S_descriptor_,
      MsgProtectorRemoveC2S::default_instance_,
      MsgProtectorRemoveC2S_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgProtectorRemoveC2S, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgProtectorRemoveC2S, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgProtectorRemoveC2S));
  MsgProtectorFadeOutS2C_descriptor_ = file->message_type(15);
  static const int MsgProtectorFadeOutS2C_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgProtectorFadeOutS2C, msgtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgProtectorFadeOutS2C, mapobjectid_),
  };
  MsgProtectorFadeOutS2C_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgProtectorFadeOutS2C_descriptor_,
      MsgProtectorFadeOutS2C::default_instance_,
      MsgProtectorFadeOutS2C_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgProtectorFadeOutS2C, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgProtectorFadeOutS2C, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgProtectorFadeOutS2C));
  MsgProtectorReplacementBadgeC2S_descriptor_ = file->message_type(16);
  static const int MsgProtectorReplacementBadgeC2S_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgProtectorReplacementBadgeC2S, msgtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgProtectorReplacementBadgeC2S, uuid_),
  };
  MsgProtectorReplacementBadgeC2S_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgProtectorReplacementBadgeC2S_descriptor_,
      MsgProtectorReplacementBadgeC2S::default_instance_,
      MsgProtectorReplacementBadgeC2S_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgProtectorReplacementBadgeC2S, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgProtectorReplacementBadgeC2S, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgProtectorReplacementBadgeC2S));
  MsgProtectorReplacementBadgeResultS2C_descriptor_ = file->message_type(17);
  static const int MsgProtectorReplacementBadgeResultS2C_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgProtectorReplacementBadgeResultS2C, msgtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgProtectorReplacementBadgeResultS2C, result_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgProtectorReplacementBadgeResultS2C, uuid_),
  };
  MsgProtectorReplacementBadgeResultS2C_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgProtectorReplacementBadgeResultS2C_descriptor_,
      MsgProtectorReplacementBadgeResultS2C::default_instance_,
      MsgProtectorReplacementBadgeResultS2C_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgProtectorReplacementBadgeResultS2C, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgProtectorReplacementBadgeResultS2C, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgProtectorReplacementBadgeResultS2C));
  MsgProtectorReplacementBadgeResultS2C_RESULT_descriptor_ = MsgProtectorReplacementBadgeResultS2C_descriptor_->enum_type(0);
  MsgProtectorCastSkillToPlayerC2S_descriptor_ = file->message_type(18);
  static const int MsgProtectorCastSkillToPlayerC2S_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgProtectorCastSkillToPlayerC2S, msgtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgProtectorCastSkillToPlayerC2S, uuid_),
  };
  MsgProtectorCastSkillToPlayerC2S_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgProtectorCastSkillToPlayerC2S_descriptor_,
      MsgProtectorCastSkillToPlayerC2S::default_instance_,
      MsgProtectorCastSkillToPlayerC2S_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgProtectorCastSkillToPlayerC2S, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgProtectorCastSkillToPlayerC2S, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgProtectorCastSkillToPlayerC2S));
  MsgProtectorCastSkillToPlayerResultS2C_descriptor_ = file->message_type(19);
  static const int MsgProtectorCastSkillToPlayerResultS2C_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgProtectorCastSkillToPlayerResultS2C, msgtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgProtectorCastSkillToPlayerResultS2C, result_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgProtectorCastSkillToPlayerResultS2C, uuid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgProtectorCastSkillToPlayerResultS2C, buff_),
  };
  MsgProtectorCastSkillToPlayerResultS2C_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgProtectorCastSkillToPlayerResultS2C_descriptor_,
      MsgProtectorCastSkillToPlayerResultS2C::default_instance_,
      MsgProtectorCastSkillToPlayerResultS2C_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgProtectorCastSkillToPlayerResultS2C, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgProtectorCastSkillToPlayerResultS2C, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgProtectorCastSkillToPlayerResultS2C));
  MsgProtectorCastSkillToPlayerResultS2C_RESULT_descriptor_ = MsgProtectorCastSkillToPlayerResultS2C_descriptor_->enum_type(0);
  MsgProtectorClientSyncRectTimeC2S_descriptor_ = file->message_type(20);
  static const int MsgProtectorClientSyncRectTimeC2S_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgProtectorClientSyncRectTimeC2S, msgtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgProtectorClientSyncRectTimeC2S, uuid_),
  };
  MsgProtectorClientSyncRectTimeC2S_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgProtectorClientSyncRectTimeC2S_descriptor_,
      MsgProtectorClientSyncRectTimeC2S::default_instance_,
      MsgProtectorClientSyncRectTimeC2S_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgProtectorClientSyncRectTimeC2S, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgProtectorClientSyncRectTimeC2S, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgProtectorClientSyncRectTimeC2S));
  MsgProtectorUseEssenceReqC2S_descriptor_ = file->message_type(21);
  static const int MsgProtectorUseEssenceReqC2S_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgProtectorUseEssenceReqC2S, msgtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgProtectorUseEssenceReqC2S, uuid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgProtectorUseEssenceReqC2S, itemuuid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgProtectorUseEssenceReqC2S, use_count_),
  };
  MsgProtectorUseEssenceReqC2S_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgProtectorUseEssenceReqC2S_descriptor_,
      MsgProtectorUseEssenceReqC2S::default_instance_,
      MsgProtectorUseEssenceReqC2S_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgProtectorUseEssenceReqC2S, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgProtectorUseEssenceReqC2S, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgProtectorUseEssenceReqC2S));
  MsgProtectorUseEssenceResS2C_descriptor_ = file->message_type(22);
  static const int MsgProtectorUseEssenceResS2C_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgProtectorUseEssenceResS2C, msgtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgProtectorUseEssenceResS2C, result_),
  };
  MsgProtectorUseEssenceResS2C_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgProtectorUseEssenceResS2C_descriptor_,
      MsgProtectorUseEssenceResS2C::default_instance_,
      MsgProtectorUseEssenceResS2C_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgProtectorUseEssenceResS2C, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgProtectorUseEssenceResS2C, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgProtectorUseEssenceResS2C));
  MsgProtectorUseEssenceResS2C_RESULT_descriptor_ = MsgProtectorUseEssenceResS2C_descriptor_->enum_type(0);
  MsgProtectorEquipReqC2S_descriptor_ = file->message_type(23);
  static const int MsgProtectorEquipReqC2S_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgProtectorEquipReqC2S, msgtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgProtectorEquipReqC2S, iggid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgProtectorEquipReqC2S, uuid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgProtectorEquipReqC2S, itemuuid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgProtectorEquipReqC2S, pos_),
  };
  MsgProtectorEquipReqC2S_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgProtectorEquipReqC2S_descriptor_,
      MsgProtectorEquipReqC2S::default_instance_,
      MsgProtectorEquipReqC2S_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgProtectorEquipReqC2S, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgProtectorEquipReqC2S, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgProtectorEquipReqC2S));
  MsgProtectorEquipResS2C_descriptor_ = file->message_type(24);
  static const int MsgProtectorEquipResS2C_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgProtectorEquipResS2C, msgtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgProtectorEquipResS2C, result_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgProtectorEquipResS2C, iggid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgProtectorEquipResS2C, uuid_),
  };
  MsgProtectorEquipResS2C_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgProtectorEquipResS2C_descriptor_,
      MsgProtectorEquipResS2C::default_instance_,
      MsgProtectorEquipResS2C_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgProtectorEquipResS2C, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgProtectorEquipResS2C, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgProtectorEquipResS2C));
  MsgProtectorEquipResS2C_RESULT_descriptor_ = MsgProtectorEquipResS2C_descriptor_->enum_type(0);
  MsgProtectorRebornAtOnceC2S_descriptor_ = file->message_type(25);
  static const int MsgProtectorRebornAtOnceC2S_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgProtectorRebornAtOnceC2S, msgtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgProtectorRebornAtOnceC2S, iggid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgProtectorRebornAtOnceC2S, uuid_),
  };
  MsgProtectorRebornAtOnceC2S_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgProtectorRebornAtOnceC2S_descriptor_,
      MsgProtectorRebornAtOnceC2S::default_instance_,
      MsgProtectorRebornAtOnceC2S_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgProtectorRebornAtOnceC2S, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgProtectorRebornAtOnceC2S, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgProtectorRebornAtOnceC2S));
  MsgProtectorRebornAtOnceS2C_descriptor_ = file->message_type(26);
  static const int MsgProtectorRebornAtOnceS2C_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgProtectorRebornAtOnceS2C, msgtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgProtectorRebornAtOnceS2C, uuid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgProtectorRebornAtOnceS2C, result_),
  };
  MsgProtectorRebornAtOnceS2C_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgProtectorRebornAtOnceS2C_descriptor_,
      MsgProtectorRebornAtOnceS2C::default_instance_,
      MsgProtectorRebornAtOnceS2C_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgProtectorRebornAtOnceS2C, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgProtectorRebornAtOnceS2C, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgProtectorRebornAtOnceS2C));
  MsgProtectorMultiRentC2S_descriptor_ = file->message_type(27);
  static const int MsgProtectorMultiRentC2S_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgProtectorMultiRentC2S, msgtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgProtectorMultiRentC2S, uuid_),
  };
  MsgProtectorMultiRentC2S_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgProtectorMultiRentC2S_descriptor_,
      MsgProtectorMultiRentC2S::default_instance_,
      MsgProtectorMultiRentC2S_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgProtectorMultiRentC2S, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgProtectorMultiRentC2S, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgProtectorMultiRentC2S));
  MsgProtectorMultiRentS2C_descriptor_ = file->message_type(28);
  static const int MsgProtectorMultiRentS2C_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgProtectorMultiRentS2C, msgtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgProtectorMultiRentS2C, result_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgProtectorMultiRentS2C, coin_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgProtectorMultiRentS2C, item_),
  };
  MsgProtectorMultiRentS2C_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgProtectorMultiRentS2C_descriptor_,
      MsgProtectorMultiRentS2C::default_instance_,
      MsgProtectorMultiRentS2C_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgProtectorMultiRentS2C, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgProtectorMultiRentS2C, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgProtectorMultiRentS2C));
  MsgProtectorEventC2S_descriptor_ = file->message_type(29);
  static const int MsgProtectorEventC2S_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgProtectorEventC2S, msgtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgProtectorEventC2S, iggid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgProtectorEventC2S, uuid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgProtectorEventC2S, do_event_),
  };
  MsgProtectorEventC2S_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgProtectorEventC2S_descriptor_,
      MsgProtectorEventC2S::default_instance_,
      MsgProtectorEventC2S_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgProtectorEventC2S, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgProtectorEventC2S, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgProtectorEventC2S));
  MsgProtectorEventC2S_DOEVENT_descriptor_ = MsgProtectorEventC2S_descriptor_->enum_type(0);
  NPC_EQUIP_POS_descriptor_ = file->enum_type(0);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_MsgProtector_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ProtectorItemUseCount_descriptor_, &ProtectorItemUseCount::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgProtectorData_descriptor_, &MsgProtectorData::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgProtectorDataToClient_descriptor_, &MsgProtectorDataToClient::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgProtectorRentC2S_descriptor_, &MsgProtectorRentC2S::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgProtectorRentResultS2C_descriptor_, &MsgProtectorRentResultS2C::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgProtectorReviveC2S_descriptor_, &MsgProtectorReviveC2S::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgProtectorReviveResultS2C_descriptor_, &MsgProtectorReviveResultS2C::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgProtectorPatrolC2S_descriptor_, &MsgProtectorPatrolC2S::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgProtectorPatrolResultS2C_descriptor_, &MsgProtectorPatrolResultS2C::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgGetStatusC2S_descriptor_, &MsgGetStatusC2S::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgProtectorGetStatusResultS2C_descriptor_, &MsgProtectorGetStatusResultS2C::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgProtectorSyncS2C_descriptor_, &MsgProtectorSyncS2C::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgProtectorUpdateS2C_descriptor_, &MsgProtectorUpdateS2C::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgProtectorRemoveS2C_descriptor_, &MsgProtectorRemoveS2C::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgProtectorRemoveC2S_descriptor_, &MsgProtectorRemoveC2S::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgProtectorFadeOutS2C_descriptor_, &MsgProtectorFadeOutS2C::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgProtectorReplacementBadgeC2S_descriptor_, &MsgProtectorReplacementBadgeC2S::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgProtectorReplacementBadgeResultS2C_descriptor_, &MsgProtectorReplacementBadgeResultS2C::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgProtectorCastSkillToPlayerC2S_descriptor_, &MsgProtectorCastSkillToPlayerC2S::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgProtectorCastSkillToPlayerResultS2C_descriptor_, &MsgProtectorCastSkillToPlayerResultS2C::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgProtectorClientSyncRectTimeC2S_descriptor_, &MsgProtectorClientSyncRectTimeC2S::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgProtectorUseEssenceReqC2S_descriptor_, &MsgProtectorUseEssenceReqC2S::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgProtectorUseEssenceResS2C_descriptor_, &MsgProtectorUseEssenceResS2C::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgProtectorEquipReqC2S_descriptor_, &MsgProtectorEquipReqC2S::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgProtectorEquipResS2C_descriptor_, &MsgProtectorEquipResS2C::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgProtectorRebornAtOnceC2S_descriptor_, &MsgProtectorRebornAtOnceC2S::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgProtectorRebornAtOnceS2C_descriptor_, &MsgProtectorRebornAtOnceS2C::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgProtectorMultiRentC2S_descriptor_, &MsgProtectorMultiRentC2S::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgProtectorMultiRentS2C_descriptor_, &MsgProtectorMultiRentS2C::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgProtectorEventC2S_descriptor_, &MsgProtectorEventC2S::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_MsgProtector_2eproto() {
  delete ProtectorItemUseCount::default_instance_;
  delete ProtectorItemUseCount_reflection_;
  delete MsgProtectorData::default_instance_;
  delete MsgProtectorData_reflection_;
  delete MsgProtectorDataToClient::default_instance_;
  delete MsgProtectorDataToClient_reflection_;
  delete MsgProtectorRentC2S::default_instance_;
  delete MsgProtectorRentC2S_reflection_;
  delete MsgProtectorRentResultS2C::default_instance_;
  delete MsgProtectorRentResultS2C_reflection_;
  delete MsgProtectorReviveC2S::default_instance_;
  delete MsgProtectorReviveC2S_reflection_;
  delete MsgProtectorReviveResultS2C::default_instance_;
  delete MsgProtectorReviveResultS2C_reflection_;
  delete MsgProtectorPatrolC2S::default_instance_;
  delete MsgProtectorPatrolC2S_reflection_;
  delete MsgProtectorPatrolResultS2C::default_instance_;
  delete MsgProtectorPatrolResultS2C_reflection_;
  delete MsgGetStatusC2S::default_instance_;
  delete MsgGetStatusC2S_reflection_;
  delete MsgProtectorGetStatusResultS2C::default_instance_;
  delete MsgProtectorGetStatusResultS2C_reflection_;
  delete MsgProtectorSyncS2C::default_instance_;
  delete MsgProtectorSyncS2C_reflection_;
  delete MsgProtectorUpdateS2C::default_instance_;
  delete MsgProtectorUpdateS2C_reflection_;
  delete MsgProtectorRemoveS2C::default_instance_;
  delete MsgProtectorRemoveS2C_reflection_;
  delete MsgProtectorRemoveC2S::default_instance_;
  delete MsgProtectorRemoveC2S_reflection_;
  delete MsgProtectorFadeOutS2C::default_instance_;
  delete MsgProtectorFadeOutS2C_reflection_;
  delete MsgProtectorReplacementBadgeC2S::default_instance_;
  delete MsgProtectorReplacementBadgeC2S_reflection_;
  delete MsgProtectorReplacementBadgeResultS2C::default_instance_;
  delete MsgProtectorReplacementBadgeResultS2C_reflection_;
  delete MsgProtectorCastSkillToPlayerC2S::default_instance_;
  delete MsgProtectorCastSkillToPlayerC2S_reflection_;
  delete MsgProtectorCastSkillToPlayerResultS2C::default_instance_;
  delete MsgProtectorCastSkillToPlayerResultS2C_reflection_;
  delete MsgProtectorClientSyncRectTimeC2S::default_instance_;
  delete MsgProtectorClientSyncRectTimeC2S_reflection_;
  delete MsgProtectorUseEssenceReqC2S::default_instance_;
  delete MsgProtectorUseEssenceReqC2S_reflection_;
  delete MsgProtectorUseEssenceResS2C::default_instance_;
  delete MsgProtectorUseEssenceResS2C_reflection_;
  delete MsgProtectorEquipReqC2S::default_instance_;
  delete MsgProtectorEquipReqC2S_reflection_;
  delete MsgProtectorEquipResS2C::default_instance_;
  delete MsgProtectorEquipResS2C_reflection_;
  delete MsgProtectorRebornAtOnceC2S::default_instance_;
  delete MsgProtectorRebornAtOnceC2S_reflection_;
  delete MsgProtectorRebornAtOnceS2C::default_instance_;
  delete MsgProtectorRebornAtOnceS2C_reflection_;
  delete MsgProtectorMultiRentC2S::default_instance_;
  delete MsgProtectorMultiRentC2S_reflection_;
  delete MsgProtectorMultiRentS2C::default_instance_;
  delete MsgProtectorMultiRentS2C_reflection_;
  delete MsgProtectorEventC2S::default_instance_;
  delete MsgProtectorEventC2S_reflection_;
}

void protobuf_AddDesc_MsgProtector_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::MsgPB::protobuf_AddDesc_MsgType_2eproto();
  ::MsgPB::protobuf_AddDesc_MsgGameDef_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\022MsgProtector.proto\022\005MsgPB\032\rMsgType.pro"
    "to\032\020MsgGameDef.proto\"6\n\025ProtectorItemUse"
    "Count\022\016\n\006dataid\030\001 \001(\005\022\r\n\005count\030\002 \001(\005\"\201\003\n"
    "\020MsgProtectorData\022\014\n\004uuid\030\001 \001(\003\022\022\n\ntempl"
    "ateid\030\002 \001(\005\022\023\n\013mapobjectid\030\003 \001(\005\022\016\n\006item"
    "id\030\004 \001(\005\022\r\n\005level\030\005 \001(\005\022\014\n\004nExp\030\006 \001(\003\022\017\n"
    "\007houseId\030\007 \001(\005\022\n\n\002hp\030\010 \001(\005\022\n\n\002mp\030\t \001(\005\022\'"
    "\n\006status\030\n \001(\0162\027.MsgPB.PROTECTOR_STATUS\022"
    "\020\n\010rect_day\030\013 \001(\r\022\021\n\trent_time\030\014 \001(\003\0225\n\010"
    "required\030\r \001(\0162#.MsgPB.PROTECTOR_LESS_TH"
    "AN_REQUIRED\022\017\n\007comfort\030\016 \001(\005\022\017\n\007equipId\030"
    "\017 \001(\003\022\021\n\tweaponId1\030\020 \001(\003\022\021\n\tweaponId2\030\021 "
    "\001(\003\022\023\n\013follow_uuid\030\022 \001(\003\"\211\003\n\030MsgProtecto"
    "rDataToClient\022\014\n\004uuid\030\001 \001(\003\022\022\n\ntemplatei"
    "d\030\002 \001(\005\022\023\n\013mapobjectid\030\003 \001(\005\022\016\n\006itemid\030\004"
    " \001(\005\022\r\n\005level\030\005 \001(\005\022\014\n\004nExp\030\006 \001(\003\022\017\n\007hou"
    "seId\030\007 \001(\005\022\n\n\002hp\030\010 \001(\005\022\n\n\002mp\030\t \001(\005\022\'\n\006st"
    "atus\030\n \001(\0162\027.MsgPB.PROTECTOR_STATUS\022\020\n\010r"
    "ect_day\030\013 \001(\r\022\021\n\trent_time\030\014 \001(\003\0225\n\010requ"
    "ired\030\r \001(\0162#.MsgPB.PROTECTOR_LESS_THAN_R"
    "EQUIRED\022\017\n\007comfort\030\016 \001(\005\022\017\n\007equipId\030\017 \001("
    "\003\022\021\n\tweaponId1\030\020 \001(\003\022\021\n\tweaponId2\030\021 \001(\003\022"
    "\023\n\013follow_uuid\030\022 \001(\003\"^\n\023MsgProtectorRent"
    "C2S\0229\n\007msgType\030\001 \001(\0162\017.MsgPB.EMsgType:\027_"
    "MSG_PROTECTOR_RENT_C2S\022\014\n\004uuid\030\004 \001(\003\"\231\002\n"
    "\031MsgProtectorRentResultS2C\022@\n\007msgType\030\001 "
    "\001(\0162\017.MsgPB.EMsgType:\036_MSG_PROTECTOR_REN"
    "T_RESULT_S2C\0227\n\006result\030\002 \001(\0162\'.MsgPB.Msg"
    "ProtectorRentResultS2C.RESULT\022\014\n\004coin\030\003 "
    "\001(\005\022\037\n\004item\030\004 \003(\0132\021.MsgPB.ItemReward\022\014\n\004"
    "uuid\030\005 \001(\003\"D\n\006RESULT\022\024\n\007FAILURE\020\377\377\377\377\377\377\377\377"
    "\377\001\022\013\n\007SUCCESS\020\000\022\027\n\023FAILURE_PACKET_FULL\020\001"
    "\"q\n\025MsgProtectorReviveC2S\022;\n\007msgType\030\001 \001"
    "(\0162\017.MsgPB.EMsgType:\031_MSG_PROTECTOR_REVI"
    "VE_C2S\022\r\n\005iggid\030\002 \001(\003\022\014\n\004uuid\030\003 \001(\003\"\331\001\n\033"
    "MsgProtectorReviveResultS2C\022B\n\007msgType\030\001"
    " \001(\0162\017.MsgPB.EMsgType: _MSG_PROTECTOR_RE"
    "VIVE_RESULT_S2C\0229\n\006result\030\002 \001(\0162).MsgPB."
    "MsgProtectorReviveResultS2C.RESULT\";\n\006RE"
    "SULT\022\024\n\007FAILURE\020\377\377\377\377\377\377\377\377\377\001\022\013\n\007SUCCESS\020\000\022"
    "\016\n\nERROR_COIN\020\001\"\302\001\n\025MsgProtectorPatrolC2"
    "S\022;\n\007msgType\030\001 \001(\0162\017.MsgPB.EMsgType:\031_MS"
    "G_PROTECTOR_PATROL_C2S\022\r\n\005iggid\030\002 \001(\003\022\014\n"
    "\004uuid\030\003 \001(\003\022/\n\004mode\030\004 \001(\0162!.MsgPB.MsgPro"
    "tectorPatrolC2S.MODE\"\036\n\004MODE\022\n\n\006PATROL\020\000"
    "\022\n\n\006GOHOME\020\001\"\330\001\n\033MsgProtectorPatrolResul"
    "tS2C\022B\n\007msgType\030\001 \001(\0162\017.MsgPB.EMsgType: "
    "_MSG_PROTECTOR_PATROL_RESULT_S2C\022\r\n\005iggi"
    "d\030\002 \001(\003\0229\n\006result\030\003 \001(\0162).MsgPB.MsgProte"
    "ctorPatrolResultS2C.RESULT\"+\n\006RESULT\022\024\n\007"
    "FAILURE\020\377\377\377\377\377\377\377\377\377\001\022\013\n\007SUCCESS\020\000\"`\n\017MsgGe"
    "tStatusC2S\022\?\n\007msgType\030\001 \001(\0162\017.MsgPB.EMsg"
    "Type:\035_MSG_PROTECTOR_GET_STATUS_C2S\022\014\n\004u"
    "uid\030\002 \001(\003\"\345\001\n\036MsgProtectorGetStatusResul"
    "tS2C\022F\n\007msgType\030\001 \001(\0162\017.MsgPB.EMsgType:$"
    "_MSG_PROTECTOR_GET_STATUS_RESULT_S2C\022\014\n\004"
    "uuid\030\002 \001(\003\022\'\n\006status\030\003 \001(\0162\027.MsgPB.PROTE"
    "CTOR_STATUS\0225\n\010required\030\004 \001(\0162#.MsgPB.PR"
    "OTECTOR_LESS_THAN_REQUIRED\022\r\n\005param\030\005 \003("
    "\005\"\177\n\023MsgProtectorSyncS2C\0229\n\007msgType\030\001 \001("
    "\0162\017.MsgPB.EMsgType:\027_MSG_PROTECTOR_SYNC_"
    "S2C\022-\n\004data\030\002 \003(\0132\037.MsgPB.MsgProtectorDa"
    "taToClient\"\234\001\n\025MsgProtectorUpdateS2C\022;\n\007"
    "msgType\030\001 \001(\0162\017.MsgPB.EMsgType:\031_MSG_PRO"
    "TECTOR_UPDATE_S2C\022-\n\004data\030\002 \001(\0132\037.MsgPB."
    "MsgProtectorDataToClient\022\027\n\017noAddToShort"
    "Bar\030\003 \001(\005\"w\n\025MsgProtectorRemoveS2C\022;\n\007ms"
    "gType\030\001 \001(\0162\017.MsgPB.EMsgType:\031_MSG_PROTE"
    "CTOR_REMOVE_S2C\022\023\n\013mapObjectID\030\002 \001(\005\022\014\n\004"
    "uuid\030\003 \001(\003\"q\n\025MsgProtectorRemoveC2S\022;\n\007m"
    "sgType\030\001 \001(\0162\017.MsgPB.EMsgType:\031_MSG_PROT"
    "ECTOR_REMOVE_C2S\022\r\n\005iggid\030\002 \001(\003\022\014\n\004uuid\030"
    "\003 \001(\003\"l\n\026MsgProtectorFadeOutS2C\022=\n\007msgTy"
    "pe\030\001 \001(\0162\017.MsgPB.EMsgType:\033_MSG_PROTECTO"
    "R_FADE_OUT_S2C\022\023\n\013mapObjectID\030\002 \001(\005\"w\n\037M"
    "sgProtectorReplacementBadgeC2S\022F\n\007msgTyp"
    "e\030\001 \001(\0162\017.MsgPB.EMsgType:$_MSG_PROTECTOR"
    "_REPLACEMENT_BADGE_C2S\022\014\n\004uuid\030\002 \001(\003\"\202\002\n"
    "%MsgProtectorReplacementBadgeResultS2C\022M"
    "\n\007msgType\030\001 \001(\0162\017.MsgPB.EMsgType:+_MSG_P"
    "ROTECTOR_REPLACEMENT_BADGE_RESULT_S2C\022C\n"
    "\006result\030\002 \001(\01623.MsgPB.MsgProtectorReplac"
    "ementBadgeResultS2C.RESULT\022\014\n\004uuid\030\003 \001(\003"
    "\"7\n\006RESULT\022\024\n\007FAILURE\020\377\377\377\377\377\377\377\377\377\001\022\013\n\007SUCC"
    "ESS\020\000\022\n\n\006REPEAT\020\001\"{\n MsgProtectorCastSki"
    "llToPlayerC2S\022I\n\007msgType\030\001 \001(\0162\017.MsgPB.E"
    "MsgType:\'_MSG_PROTECTOR_CAST_SKILL_TO_PL"
    "AYER_C2S\022\014\n\004uuid\030\002 \001(\003\"\225\002\n&MsgProtectorC"
    "astSkillToPlayerResultS2C\022P\n\007msgType\030\001 \001"
    "(\0162\017.MsgPB.EMsgType:._MSG_PROTECTOR_CAST"
    "_SKILL_TO_PLAYER_RESULT_S2C\022D\n\006result\030\002 "
    "\001(\01624.MsgPB.MsgProtectorCastSkillToPlaye"
    "rResultS2C.RESULT\022\014\n\004uuid\030\003 \001(\003\022\014\n\004buff\030"
    "\004 \001(\005\"7\n\006RESULT\022\024\n\007FAILURE\020\377\377\377\377\377\377\377\377\377\001\022\013\n"
    "\007SUCCESS\020\000\022\n\n\006REPEAT\020\001\"}\n!MsgProtectorCl"
    "ientSyncRectTimeC2S\022J\n\007msgType\030\001 \001(\0162\017.M"
    "sgPB.EMsgType:(_MSG_PROTECTOR_CLIENT_SYN"
    "C_RECT_TIME_C2S\022\014\n\004uuid\030\002 \001(\003\"\226\001\n\034MsgPro"
    "tectorUseEssenceReqC2S\022@\n\007msgType\030\001 \001(\0162"
    "\017.MsgPB.EMsgType:\036_MSG_PROTECTOR_USE_ESS"
    "ENCE_C2S\022\014\n\004uuid\030\002 \001(\003\022\020\n\010itemuuid\030\003 \001(\003"
    "\022\024\n\tuse_count\030\004 \001(\005:\0011\"\360\001\n\034MsgProtectorU"
    "seEssenceResS2C\022@\n\007msgType\030\001 \001(\0162\017.MsgPB"
    ".EMsgType:\036_MSG_PROTECTOR_USE_ESSENCE_S2"
    "C\022:\n\006result\030\002 \001(\0162*.MsgPB.MsgProtectorUs"
    "eEssenceResS2C.RESULT\"R\n\006RESULT\022\013\n\007SUCCE"
    "SS\020\000\022\007\n\003ERR\020\001\022\032\n\026FAILURE_ITEM_NOT_EXIST\020"
    "\002\022\026\n\022FAILURE_OVER_LIMIT\020\003\"\247\001\n\027MsgProtect"
    "orEquipReqC2S\022:\n\007msgType\030\001 \001(\0162\017.MsgPB.E"
    "MsgType:\030_MSG_PROTECTOR_EQUIP_C2S\022\r\n\005igg"
    "id\030\002 \001(\003\022\014\n\004uuid\030\003 \001(\003\022\020\n\010itemuuid\030\004 \001(\003"
    "\022!\n\003pos\030\005 \001(\0162\024.MsgPB.NPC_EQUIP_POS\"\225\002\n\027"
    "MsgProtectorEquipResS2C\022:\n\007msgType\030\001 \001(\016"
    "2\017.MsgPB.EMsgType:\030_MSG_PROTECTOR_EQUIP_"
    "S2C\0225\n\006result\030\002 \001(\0162%.MsgPB.MsgProtector"
    "EquipResS2C.RESULT\022\r\n\005iggid\030\003 \001(\003\022\014\n\004uui"
    "d\030\004 \001(\003\"j\n\006RESULT\022\013\n\007SUCCESS\020\000\022\007\n\003ERR\020\001\022"
    "\032\n\026FAILURE_ITEM_NOT_EXIST\020\002\022\025\n\021FAILURE_P"
    "OS_ERROR\020\003\022\027\n\023FAILURE_PACKET_FULL\020\004\"\177\n\033M"
    "sgProtectorRebornAtOnceC2S\022C\n\007msgType\030\001 "
    "\001(\0162\017.MsgPB.EMsgType:!_MSG_PROTECTOR_REB"
    "ORN_AT_ONCE_C2S\022\r\n\005iggid\030\002 \001(\003\022\014\n\004uuid\030\003"
    " \001(\003\"\235\001\n\033MsgProtectorRebornAtOnceS2C\022C\n\007"
    "msgType\030\001 \001(\0162\017.MsgPB.EMsgType:!_MSG_PRO"
    "TECTOR_REBORN_AT_ONCE_S2C\022\014\n\004uuid\030\002 \001(\003\022"
    "+\n\006result\030\003 \001(\0162\022.MsgPB.E_ErrorCode:\007EC_"
    "Fail\"i\n\030MsgProtectorMultiRentC2S\022\?\n\007msgT"
    "ype\030\001 \001(\0162\017.MsgPB.EMsgType:\035_MSG_PROTECT"
    "OR_MULTI_RENT_C2S\022\014\n\004uuid\030\002 \003(\003\"\267\001\n\030MsgP"
    "rotectorMultiRentS2C\022\?\n\007msgType\030\001 \001(\0162\017."
    "MsgPB.EMsgType:\035_MSG_PROTECTOR_MULTI_REN"
    "T_S2C\022+\n\006result\030\002 \001(\0162\022.MsgPB.E_ErrorCod"
    "e:\007EC_Fail\022\014\n\004coin\030\003 \001(\005\022\037\n\004item\030\004 \003(\0132\021"
    ".MsgPB.ItemReward\"\325\001\n\024MsgProtectorEventC"
    "2S\022:\n\007msgType\030\001 \001(\0162\017.MsgPB.EMsgType:\030_M"
    "SG_PROTECTOR_EVENT_C2S\022\r\n\005iggid\030\002 \001(\003\022\014\n"
    "\004uuid\030\003 \001(\003\0225\n\010do_event\030\004 \001(\0162#.MsgPB.Ms"
    "gProtectorEventC2S.DOEVENT\"-\n\007DOEVENT\022\020\n"
    "\014DOEVENT_NONE\020\000\022\020\n\014DOEVENT_WOOD\020\001*e\n\rNPC"
    "_EQUIP_POS\022\022\n\016NPC_EQUIP_NULL\020\000\022\022\n\016NPC_EQ"
    "UIP_BODY\020\001\022\025\n\021NPC_EQUIP_WEAPON1\020\002\022\025\n\021NPC"
    "_EQUIP_WEAPON2\020\003", 5656);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "MsgProtector.proto", &protobuf_RegisterTypes);
  ProtectorItemUseCount::default_instance_ = new ProtectorItemUseCount();
  MsgProtectorData::default_instance_ = new MsgProtectorData();
  MsgProtectorDataToClient::default_instance_ = new MsgProtectorDataToClient();
  MsgProtectorRentC2S::default_instance_ = new MsgProtectorRentC2S();
  MsgProtectorRentResultS2C::default_instance_ = new MsgProtectorRentResultS2C();
  MsgProtectorReviveC2S::default_instance_ = new MsgProtectorReviveC2S();
  MsgProtectorReviveResultS2C::default_instance_ = new MsgProtectorReviveResultS2C();
  MsgProtectorPatrolC2S::default_instance_ = new MsgProtectorPatrolC2S();
  MsgProtectorPatrolResultS2C::default_instance_ = new MsgProtectorPatrolResultS2C();
  MsgGetStatusC2S::default_instance_ = new MsgGetStatusC2S();
  MsgProtectorGetStatusResultS2C::default_instance_ = new MsgProtectorGetStatusResultS2C();
  MsgProtectorSyncS2C::default_instance_ = new MsgProtectorSyncS2C();
  MsgProtectorUpdateS2C::default_instance_ = new MsgProtectorUpdateS2C();
  MsgProtectorRemoveS2C::default_instance_ = new MsgProtectorRemoveS2C();
  MsgProtectorRemoveC2S::default_instance_ = new MsgProtectorRemoveC2S();
  MsgProtectorFadeOutS2C::default_instance_ = new MsgProtectorFadeOutS2C();
  MsgProtectorReplacementBadgeC2S::default_instance_ = new MsgProtectorReplacementBadgeC2S();
  MsgProtectorReplacementBadgeResultS2C::default_instance_ = new MsgProtectorReplacementBadgeResultS2C();
  MsgProtectorCastSkillToPlayerC2S::default_instance_ = new MsgProtectorCastSkillToPlayerC2S();
  MsgProtectorCastSkillToPlayerResultS2C::default_instance_ = new MsgProtectorCastSkillToPlayerResultS2C();
  MsgProtectorClientSyncRectTimeC2S::default_instance_ = new MsgProtectorClientSyncRectTimeC2S();
  MsgProtectorUseEssenceReqC2S::default_instance_ = new MsgProtectorUseEssenceReqC2S();
  MsgProtectorUseEssenceResS2C::default_instance_ = new MsgProtectorUseEssenceResS2C();
  MsgProtectorEquipReqC2S::default_instance_ = new MsgProtectorEquipReqC2S();
  MsgProtectorEquipResS2C::default_instance_ = new MsgProtectorEquipResS2C();
  MsgProtectorRebornAtOnceC2S::default_instance_ = new MsgProtectorRebornAtOnceC2S();
  MsgProtectorRebornAtOnceS2C::default_instance_ = new MsgProtectorRebornAtOnceS2C();
  MsgProtectorMultiRentC2S::default_instance_ = new MsgProtectorMultiRentC2S();
  MsgProtectorMultiRentS2C::default_instance_ = new MsgProtectorMultiRentS2C();
  MsgProtectorEventC2S::default_instance_ = new MsgProtectorEventC2S();
  ProtectorItemUseCount::default_instance_->InitAsDefaultInstance();
  MsgProtectorData::default_instance_->InitAsDefaultInstance();
  MsgProtectorDataToClient::default_instance_->InitAsDefaultInstance();
  MsgProtectorRentC2S::default_instance_->InitAsDefaultInstance();
  MsgProtectorRentResultS2C::default_instance_->InitAsDefaultInstance();
  MsgProtectorReviveC2S::default_instance_->InitAsDefaultInstance();
  MsgProtectorReviveResultS2C::default_instance_->InitAsDefaultInstance();
  MsgProtectorPatrolC2S::default_instance_->InitAsDefaultInstance();
  MsgProtectorPatrolResultS2C::default_instance_->InitAsDefaultInstance();
  MsgGetStatusC2S::default_instance_->InitAsDefaultInstance();
  MsgProtectorGetStatusResultS2C::default_instance_->InitAsDefaultInstance();
  MsgProtectorSyncS2C::default_instance_->InitAsDefaultInstance();
  MsgProtectorUpdateS2C::default_instance_->InitAsDefaultInstance();
  MsgProtectorRemoveS2C::default_instance_->InitAsDefaultInstance();
  MsgProtectorRemoveC2S::default_instance_->InitAsDefaultInstance();
  MsgProtectorFadeOutS2C::default_instance_->InitAsDefaultInstance();
  MsgProtectorReplacementBadgeC2S::default_instance_->InitAsDefaultInstance();
  MsgProtectorReplacementBadgeResultS2C::default_instance_->InitAsDefaultInstance();
  MsgProtectorCastSkillToPlayerC2S::default_instance_->InitAsDefaultInstance();
  MsgProtectorCastSkillToPlayerResultS2C::default_instance_->InitAsDefaultInstance();
  MsgProtectorClientSyncRectTimeC2S::default_instance_->InitAsDefaultInstance();
  MsgProtectorUseEssenceReqC2S::default_instance_->InitAsDefaultInstance();
  MsgProtectorUseEssenceResS2C::default_instance_->InitAsDefaultInstance();
  MsgProtectorEquipReqC2S::default_instance_->InitAsDefaultInstance();
  MsgProtectorEquipResS2C::default_instance_->InitAsDefaultInstance();
  MsgProtectorRebornAtOnceC2S::default_instance_->InitAsDefaultInstance();
  MsgProtectorRebornAtOnceS2C::default_instance_->InitAsDefaultInstance();
  MsgProtectorMultiRentC2S::default_instance_->InitAsDefaultInstance();
  MsgProtectorMultiRentS2C::default_instance_->InitAsDefaultInstance();
  MsgProtectorEventC2S::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_MsgProtector_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_MsgProtector_2eproto {
  StaticDescriptorInitializer_MsgProtector_2eproto() {
    protobuf_AddDesc_MsgProtector_2eproto();
  }
} static_descriptor_initializer_MsgProtector_2eproto_;
const ::google::protobuf::EnumDescriptor* NPC_EQUIP_POS_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return NPC_EQUIP_POS_descriptor_;
}
bool NPC_EQUIP_POS_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#ifndef _MSC_VER
const int ProtectorItemUseCount::kDataidFieldNumber;
const int ProtectorItemUseCount::kCountFieldNumber;
#endif  // !_MSC_VER

ProtectorItemUseCount::ProtectorItemUseCount()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.ProtectorItemUseCount)
}

void ProtectorItemUseCount::InitAsDefaultInstance() {
}

ProtectorItemUseCount::ProtectorItemUseCount(const ProtectorItemUseCount& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.ProtectorItemUseCount)
}

void ProtectorItemUseCount::SharedCtor() {
  _cached_size_ = 0;
  dataid_ = 0;
  count_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ProtectorItemUseCount::~ProtectorItemUseCount() {
  // @@protoc_insertion_point(destructor:MsgPB.ProtectorItemUseCount)
  SharedDtor();
}

void ProtectorItemUseCount::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ProtectorItemUseCount::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ProtectorItemUseCount::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ProtectorItemUseCount_descriptor_;
}

const ProtectorItemUseCount& ProtectorItemUseCount::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgProtector_2eproto();
  return *default_instance_;
}

ProtectorItemUseCount* ProtectorItemUseCount::default_instance_ = NULL;

ProtectorItemUseCount* ProtectorItemUseCount::New() const {
  return new ProtectorItemUseCount;
}

void ProtectorItemUseCount::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<ProtectorItemUseCount*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(dataid_, count_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ProtectorItemUseCount::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.ProtectorItemUseCount)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 dataid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &dataid_)));
          set_has_dataid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_count;
        break;
      }

      // optional int32 count = 2;
      case 2: {
        if (tag == 16) {
         parse_count:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &count_)));
          set_has_count();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.ProtectorItemUseCount)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.ProtectorItemUseCount)
  return false;
#undef DO_
}

void ProtectorItemUseCount::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.ProtectorItemUseCount)
  // optional int32 dataid = 1;
  if (has_dataid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->dataid(), output);
  }

  // optional int32 count = 2;
  if (has_count()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->count(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.ProtectorItemUseCount)
}

::google::protobuf::uint8* ProtectorItemUseCount::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.ProtectorItemUseCount)
  // optional int32 dataid = 1;
  if (has_dataid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->dataid(), target);
  }

  // optional int32 count = 2;
  if (has_count()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->count(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.ProtectorItemUseCount)
  return target;
}

int ProtectorItemUseCount::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 dataid = 1;
    if (has_dataid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->dataid());
    }

    // optional int32 count = 2;
    if (has_count()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->count());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ProtectorItemUseCount::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ProtectorItemUseCount* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ProtectorItemUseCount*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ProtectorItemUseCount::MergeFrom(const ProtectorItemUseCount& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_dataid()) {
      set_dataid(from.dataid());
    }
    if (from.has_count()) {
      set_count(from.count());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ProtectorItemUseCount::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProtectorItemUseCount::CopyFrom(const ProtectorItemUseCount& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProtectorItemUseCount::IsInitialized() const {

  return true;
}

void ProtectorItemUseCount::Swap(ProtectorItemUseCount* other) {
  if (other != this) {
    std::swap(dataid_, other->dataid_);
    std::swap(count_, other->count_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ProtectorItemUseCount::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ProtectorItemUseCount_descriptor_;
  metadata.reflection = ProtectorItemUseCount_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgProtectorData::kUuidFieldNumber;
const int MsgProtectorData::kTemplateidFieldNumber;
const int MsgProtectorData::kMapobjectidFieldNumber;
const int MsgProtectorData::kItemidFieldNumber;
const int MsgProtectorData::kLevelFieldNumber;
const int MsgProtectorData::kNExpFieldNumber;
const int MsgProtectorData::kHouseIdFieldNumber;
const int MsgProtectorData::kHpFieldNumber;
const int MsgProtectorData::kMpFieldNumber;
const int MsgProtectorData::kStatusFieldNumber;
const int MsgProtectorData::kRectDayFieldNumber;
const int MsgProtectorData::kRentTimeFieldNumber;
const int MsgProtectorData::kRequiredFieldNumber;
const int MsgProtectorData::kComfortFieldNumber;
const int MsgProtectorData::kEquipIdFieldNumber;
const int MsgProtectorData::kWeaponId1FieldNumber;
const int MsgProtectorData::kWeaponId2FieldNumber;
const int MsgProtectorData::kFollowUuidFieldNumber;
#endif  // !_MSC_VER

MsgProtectorData::MsgProtectorData()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.MsgProtectorData)
}

void MsgProtectorData::InitAsDefaultInstance() {
}

MsgProtectorData::MsgProtectorData(const MsgProtectorData& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.MsgProtectorData)
}

void MsgProtectorData::SharedCtor() {
  _cached_size_ = 0;
  uuid_ = GOOGLE_LONGLONG(0);
  templateid_ = 0;
  mapobjectid_ = 0;
  itemid_ = 0;
  level_ = 0;
  nexp_ = GOOGLE_LONGLONG(0);
  houseid_ = 0;
  hp_ = 0;
  mp_ = 0;
  status_ = -1;
  rect_day_ = 0u;
  rent_time_ = GOOGLE_LONGLONG(0);
  required_ = 0;
  comfort_ = 0;
  equipid_ = GOOGLE_LONGLONG(0);
  weaponid1_ = GOOGLE_LONGLONG(0);
  weaponid2_ = GOOGLE_LONGLONG(0);
  follow_uuid_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgProtectorData::~MsgProtectorData() {
  // @@protoc_insertion_point(destructor:MsgPB.MsgProtectorData)
  SharedDtor();
}

void MsgProtectorData::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgProtectorData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgProtectorData::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgProtectorData_descriptor_;
}

const MsgProtectorData& MsgProtectorData::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgProtector_2eproto();
  return *default_instance_;
}

MsgProtectorData* MsgProtectorData::default_instance_ = NULL;

MsgProtectorData* MsgProtectorData::New() const {
  return new MsgProtectorData;
}

void MsgProtectorData::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<MsgProtectorData*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 255) {
    ZR_(uuid_, hp_);
  }
  if (_has_bits_[8 / 32] & 65280) {
    ZR_(rent_time_, weaponid1_);
    mp_ = 0;
    status_ = -1;
    comfort_ = 0;
  }
  ZR_(weaponid2_, follow_uuid_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgProtectorData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.MsgProtectorData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 uuid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &uuid_)));
          set_has_uuid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_templateid;
        break;
      }

      // optional int32 templateid = 2;
      case 2: {
        if (tag == 16) {
         parse_templateid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &templateid_)));
          set_has_templateid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_mapobjectid;
        break;
      }

      // optional int32 mapobjectid = 3;
      case 3: {
        if (tag == 24) {
         parse_mapobjectid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &mapobjectid_)));
          set_has_mapobjectid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_itemid;
        break;
      }

      // optional int32 itemid = 4;
      case 4: {
        if (tag == 32) {
         parse_itemid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &itemid_)));
          set_has_itemid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_level;
        break;
      }

      // optional int32 level = 5;
      case 5: {
        if (tag == 40) {
         parse_level:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &level_)));
          set_has_level();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_nExp;
        break;
      }

      // optional int64 nExp = 6;
      case 6: {
        if (tag == 48) {
         parse_nExp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &nexp_)));
          set_has_nexp();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_houseId;
        break;
      }

      // optional int32 houseId = 7;
      case 7: {
        if (tag == 56) {
         parse_houseId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &houseid_)));
          set_has_houseid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_hp;
        break;
      }

      // optional int32 hp = 8;
      case 8: {
        if (tag == 64) {
         parse_hp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &hp_)));
          set_has_hp();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_mp;
        break;
      }

      // optional int32 mp = 9;
      case 9: {
        if (tag == 72) {
         parse_mp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &mp_)));
          set_has_mp();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(80)) goto parse_status;
        break;
      }

      // optional .MsgPB.PROTECTOR_STATUS status = 10;
      case 10: {
        if (tag == 80) {
         parse_status:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::PROTECTOR_STATUS_IsValid(value)) {
            set_status(static_cast< ::MsgPB::PROTECTOR_STATUS >(value));
          } else {
            mutable_unknown_fields()->AddVarint(10, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(88)) goto parse_rect_day;
        break;
      }

      // optional uint32 rect_day = 11;
      case 11: {
        if (tag == 88) {
         parse_rect_day:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &rect_day_)));
          set_has_rect_day();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(96)) goto parse_rent_time;
        break;
      }

      // optional int64 rent_time = 12;
      case 12: {
        if (tag == 96) {
         parse_rent_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &rent_time_)));
          set_has_rent_time();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(104)) goto parse_required;
        break;
      }

      // optional .MsgPB.PROTECTOR_LESS_THAN_REQUIRED required = 13;
      case 13: {
        if (tag == 104) {
         parse_required:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::PROTECTOR_LESS_THAN_REQUIRED_IsValid(value)) {
            set_required(static_cast< ::MsgPB::PROTECTOR_LESS_THAN_REQUIRED >(value));
          } else {
            mutable_unknown_fields()->AddVarint(13, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(112)) goto parse_comfort;
        break;
      }

      // optional int32 comfort = 14;
      case 14: {
        if (tag == 112) {
         parse_comfort:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &comfort_)));
          set_has_comfort();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(120)) goto parse_equipId;
        break;
      }

      // optional int64 equipId = 15;
      case 15: {
        if (tag == 120) {
         parse_equipId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &equipid_)));
          set_has_equipid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(128)) goto parse_weaponId1;
        break;
      }

      // optional int64 weaponId1 = 16;
      case 16: {
        if (tag == 128) {
         parse_weaponId1:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &weaponid1_)));
          set_has_weaponid1();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(136)) goto parse_weaponId2;
        break;
      }

      // optional int64 weaponId2 = 17;
      case 17: {
        if (tag == 136) {
         parse_weaponId2:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &weaponid2_)));
          set_has_weaponid2();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(144)) goto parse_follow_uuid;
        break;
      }

      // optional int64 follow_uuid = 18;
      case 18: {
        if (tag == 144) {
         parse_follow_uuid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &follow_uuid_)));
          set_has_follow_uuid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.MsgProtectorData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.MsgProtectorData)
  return false;
#undef DO_
}

void MsgProtectorData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.MsgProtectorData)
  // optional int64 uuid = 1;
  if (has_uuid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->uuid(), output);
  }

  // optional int32 templateid = 2;
  if (has_templateid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->templateid(), output);
  }

  // optional int32 mapobjectid = 3;
  if (has_mapobjectid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->mapobjectid(), output);
  }

  // optional int32 itemid = 4;
  if (has_itemid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->itemid(), output);
  }

  // optional int32 level = 5;
  if (has_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->level(), output);
  }

  // optional int64 nExp = 6;
  if (has_nexp()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(6, this->nexp(), output);
  }

  // optional int32 houseId = 7;
  if (has_houseid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->houseid(), output);
  }

  // optional int32 hp = 8;
  if (has_hp()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->hp(), output);
  }

  // optional int32 mp = 9;
  if (has_mp()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->mp(), output);
  }

  // optional .MsgPB.PROTECTOR_STATUS status = 10;
  if (has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      10, this->status(), output);
  }

  // optional uint32 rect_day = 11;
  if (has_rect_day()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(11, this->rect_day(), output);
  }

  // optional int64 rent_time = 12;
  if (has_rent_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(12, this->rent_time(), output);
  }

  // optional .MsgPB.PROTECTOR_LESS_THAN_REQUIRED required = 13;
  if (has_required()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      13, this->required(), output);
  }

  // optional int32 comfort = 14;
  if (has_comfort()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(14, this->comfort(), output);
  }

  // optional int64 equipId = 15;
  if (has_equipid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(15, this->equipid(), output);
  }

  // optional int64 weaponId1 = 16;
  if (has_weaponid1()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(16, this->weaponid1(), output);
  }

  // optional int64 weaponId2 = 17;
  if (has_weaponid2()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(17, this->weaponid2(), output);
  }

  // optional int64 follow_uuid = 18;
  if (has_follow_uuid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(18, this->follow_uuid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.MsgProtectorData)
}

::google::protobuf::uint8* MsgProtectorData::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.MsgProtectorData)
  // optional int64 uuid = 1;
  if (has_uuid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->uuid(), target);
  }

  // optional int32 templateid = 2;
  if (has_templateid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->templateid(), target);
  }

  // optional int32 mapobjectid = 3;
  if (has_mapobjectid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->mapobjectid(), target);
  }

  // optional int32 itemid = 4;
  if (has_itemid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->itemid(), target);
  }

  // optional int32 level = 5;
  if (has_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->level(), target);
  }

  // optional int64 nExp = 6;
  if (has_nexp()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(6, this->nexp(), target);
  }

  // optional int32 houseId = 7;
  if (has_houseid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->houseid(), target);
  }

  // optional int32 hp = 8;
  if (has_hp()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->hp(), target);
  }

  // optional int32 mp = 9;
  if (has_mp()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->mp(), target);
  }

  // optional .MsgPB.PROTECTOR_STATUS status = 10;
  if (has_status()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      10, this->status(), target);
  }

  // optional uint32 rect_day = 11;
  if (has_rect_day()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(11, this->rect_day(), target);
  }

  // optional int64 rent_time = 12;
  if (has_rent_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(12, this->rent_time(), target);
  }

  // optional .MsgPB.PROTECTOR_LESS_THAN_REQUIRED required = 13;
  if (has_required()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      13, this->required(), target);
  }

  // optional int32 comfort = 14;
  if (has_comfort()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(14, this->comfort(), target);
  }

  // optional int64 equipId = 15;
  if (has_equipid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(15, this->equipid(), target);
  }

  // optional int64 weaponId1 = 16;
  if (has_weaponid1()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(16, this->weaponid1(), target);
  }

  // optional int64 weaponId2 = 17;
  if (has_weaponid2()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(17, this->weaponid2(), target);
  }

  // optional int64 follow_uuid = 18;
  if (has_follow_uuid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(18, this->follow_uuid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.MsgProtectorData)
  return target;
}

int MsgProtectorData::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 uuid = 1;
    if (has_uuid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->uuid());
    }

    // optional int32 templateid = 2;
    if (has_templateid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->templateid());
    }

    // optional int32 mapobjectid = 3;
    if (has_mapobjectid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->mapobjectid());
    }

    // optional int32 itemid = 4;
    if (has_itemid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->itemid());
    }

    // optional int32 level = 5;
    if (has_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->level());
    }

    // optional int64 nExp = 6;
    if (has_nexp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->nexp());
    }

    // optional int32 houseId = 7;
    if (has_houseid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->houseid());
    }

    // optional int32 hp = 8;
    if (has_hp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->hp());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional int32 mp = 9;
    if (has_mp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->mp());
    }

    // optional .MsgPB.PROTECTOR_STATUS status = 10;
    if (has_status()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->status());
    }

    // optional uint32 rect_day = 11;
    if (has_rect_day()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->rect_day());
    }

    // optional int64 rent_time = 12;
    if (has_rent_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->rent_time());
    }

    // optional .MsgPB.PROTECTOR_LESS_THAN_REQUIRED required = 13;
    if (has_required()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->required());
    }

    // optional int32 comfort = 14;
    if (has_comfort()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->comfort());
    }

    // optional int64 equipId = 15;
    if (has_equipid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->equipid());
    }

    // optional int64 weaponId1 = 16;
    if (has_weaponid1()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->weaponid1());
    }

  }
  if (_has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    // optional int64 weaponId2 = 17;
    if (has_weaponid2()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->weaponid2());
    }

    // optional int64 follow_uuid = 18;
    if (has_follow_uuid()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->follow_uuid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgProtectorData::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgProtectorData* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgProtectorData*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgProtectorData::MergeFrom(const MsgProtectorData& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_uuid()) {
      set_uuid(from.uuid());
    }
    if (from.has_templateid()) {
      set_templateid(from.templateid());
    }
    if (from.has_mapobjectid()) {
      set_mapobjectid(from.mapobjectid());
    }
    if (from.has_itemid()) {
      set_itemid(from.itemid());
    }
    if (from.has_level()) {
      set_level(from.level());
    }
    if (from.has_nexp()) {
      set_nexp(from.nexp());
    }
    if (from.has_houseid()) {
      set_houseid(from.houseid());
    }
    if (from.has_hp()) {
      set_hp(from.hp());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_mp()) {
      set_mp(from.mp());
    }
    if (from.has_status()) {
      set_status(from.status());
    }
    if (from.has_rect_day()) {
      set_rect_day(from.rect_day());
    }
    if (from.has_rent_time()) {
      set_rent_time(from.rent_time());
    }
    if (from.has_required()) {
      set_required(from.required());
    }
    if (from.has_comfort()) {
      set_comfort(from.comfort());
    }
    if (from.has_equipid()) {
      set_equipid(from.equipid());
    }
    if (from.has_weaponid1()) {
      set_weaponid1(from.weaponid1());
    }
  }
  if (from._has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    if (from.has_weaponid2()) {
      set_weaponid2(from.weaponid2());
    }
    if (from.has_follow_uuid()) {
      set_follow_uuid(from.follow_uuid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgProtectorData::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgProtectorData::CopyFrom(const MsgProtectorData& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgProtectorData::IsInitialized() const {

  return true;
}

void MsgProtectorData::Swap(MsgProtectorData* other) {
  if (other != this) {
    std::swap(uuid_, other->uuid_);
    std::swap(templateid_, other->templateid_);
    std::swap(mapobjectid_, other->mapobjectid_);
    std::swap(itemid_, other->itemid_);
    std::swap(level_, other->level_);
    std::swap(nexp_, other->nexp_);
    std::swap(houseid_, other->houseid_);
    std::swap(hp_, other->hp_);
    std::swap(mp_, other->mp_);
    std::swap(status_, other->status_);
    std::swap(rect_day_, other->rect_day_);
    std::swap(rent_time_, other->rent_time_);
    std::swap(required_, other->required_);
    std::swap(comfort_, other->comfort_);
    std::swap(equipid_, other->equipid_);
    std::swap(weaponid1_, other->weaponid1_);
    std::swap(weaponid2_, other->weaponid2_);
    std::swap(follow_uuid_, other->follow_uuid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgProtectorData::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgProtectorData_descriptor_;
  metadata.reflection = MsgProtectorData_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgProtectorDataToClient::kUuidFieldNumber;
const int MsgProtectorDataToClient::kTemplateidFieldNumber;
const int MsgProtectorDataToClient::kMapobjectidFieldNumber;
const int MsgProtectorDataToClient::kItemidFieldNumber;
const int MsgProtectorDataToClient::kLevelFieldNumber;
const int MsgProtectorDataToClient::kNExpFieldNumber;
const int MsgProtectorDataToClient::kHouseIdFieldNumber;
const int MsgProtectorDataToClient::kHpFieldNumber;
const int MsgProtectorDataToClient::kMpFieldNumber;
const int MsgProtectorDataToClient::kStatusFieldNumber;
const int MsgProtectorDataToClient::kRectDayFieldNumber;
const int MsgProtectorDataToClient::kRentTimeFieldNumber;
const int MsgProtectorDataToClient::kRequiredFieldNumber;
const int MsgProtectorDataToClient::kComfortFieldNumber;
const int MsgProtectorDataToClient::kEquipIdFieldNumber;
const int MsgProtectorDataToClient::kWeaponId1FieldNumber;
const int MsgProtectorDataToClient::kWeaponId2FieldNumber;
const int MsgProtectorDataToClient::kFollowUuidFieldNumber;
#endif  // !_MSC_VER

MsgProtectorDataToClient::MsgProtectorDataToClient()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.MsgProtectorDataToClient)
}

void MsgProtectorDataToClient::InitAsDefaultInstance() {
}

MsgProtectorDataToClient::MsgProtectorDataToClient(const MsgProtectorDataToClient& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.MsgProtectorDataToClient)
}

void MsgProtectorDataToClient::SharedCtor() {
  _cached_size_ = 0;
  uuid_ = GOOGLE_LONGLONG(0);
  templateid_ = 0;
  mapobjectid_ = 0;
  itemid_ = 0;
  level_ = 0;
  nexp_ = GOOGLE_LONGLONG(0);
  houseid_ = 0;
  hp_ = 0;
  mp_ = 0;
  status_ = -1;
  rect_day_ = 0u;
  rent_time_ = GOOGLE_LONGLONG(0);
  required_ = 0;
  comfort_ = 0;
  equipid_ = GOOGLE_LONGLONG(0);
  weaponid1_ = GOOGLE_LONGLONG(0);
  weaponid2_ = GOOGLE_LONGLONG(0);
  follow_uuid_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgProtectorDataToClient::~MsgProtectorDataToClient() {
  // @@protoc_insertion_point(destructor:MsgPB.MsgProtectorDataToClient)
  SharedDtor();
}

void MsgProtectorDataToClient::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgProtectorDataToClient::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgProtectorDataToClient::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgProtectorDataToClient_descriptor_;
}

const MsgProtectorDataToClient& MsgProtectorDataToClient::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgProtector_2eproto();
  return *default_instance_;
}

MsgProtectorDataToClient* MsgProtectorDataToClient::default_instance_ = NULL;

MsgProtectorDataToClient* MsgProtectorDataToClient::New() const {
  return new MsgProtectorDataToClient;
}

void MsgProtectorDataToClient::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<MsgProtectorDataToClient*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 255) {
    ZR_(uuid_, hp_);
  }
  if (_has_bits_[8 / 32] & 65280) {
    ZR_(rent_time_, weaponid1_);
    mp_ = 0;
    status_ = -1;
    comfort_ = 0;
  }
  ZR_(weaponid2_, follow_uuid_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgProtectorDataToClient::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.MsgProtectorDataToClient)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 uuid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &uuid_)));
          set_has_uuid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_templateid;
        break;
      }

      // optional int32 templateid = 2;
      case 2: {
        if (tag == 16) {
         parse_templateid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &templateid_)));
          set_has_templateid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_mapobjectid;
        break;
      }

      // optional int32 mapobjectid = 3;
      case 3: {
        if (tag == 24) {
         parse_mapobjectid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &mapobjectid_)));
          set_has_mapobjectid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_itemid;
        break;
      }

      // optional int32 itemid = 4;
      case 4: {
        if (tag == 32) {
         parse_itemid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &itemid_)));
          set_has_itemid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_level;
        break;
      }

      // optional int32 level = 5;
      case 5: {
        if (tag == 40) {
         parse_level:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &level_)));
          set_has_level();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_nExp;
        break;
      }

      // optional int64 nExp = 6;
      case 6: {
        if (tag == 48) {
         parse_nExp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &nexp_)));
          set_has_nexp();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_houseId;
        break;
      }

      // optional int32 houseId = 7;
      case 7: {
        if (tag == 56) {
         parse_houseId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &houseid_)));
          set_has_houseid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_hp;
        break;
      }

      // optional int32 hp = 8;
      case 8: {
        if (tag == 64) {
         parse_hp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &hp_)));
          set_has_hp();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_mp;
        break;
      }

      // optional int32 mp = 9;
      case 9: {
        if (tag == 72) {
         parse_mp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &mp_)));
          set_has_mp();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(80)) goto parse_status;
        break;
      }

      // optional .MsgPB.PROTECTOR_STATUS status = 10;
      case 10: {
        if (tag == 80) {
         parse_status:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::PROTECTOR_STATUS_IsValid(value)) {
            set_status(static_cast< ::MsgPB::PROTECTOR_STATUS >(value));
          } else {
            mutable_unknown_fields()->AddVarint(10, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(88)) goto parse_rect_day;
        break;
      }

      // optional uint32 rect_day = 11;
      case 11: {
        if (tag == 88) {
         parse_rect_day:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &rect_day_)));
          set_has_rect_day();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(96)) goto parse_rent_time;
        break;
      }

      // optional int64 rent_time = 12;
      case 12: {
        if (tag == 96) {
         parse_rent_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &rent_time_)));
          set_has_rent_time();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(104)) goto parse_required;
        break;
      }

      // optional .MsgPB.PROTECTOR_LESS_THAN_REQUIRED required = 13;
      case 13: {
        if (tag == 104) {
         parse_required:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::PROTECTOR_LESS_THAN_REQUIRED_IsValid(value)) {
            set_required(static_cast< ::MsgPB::PROTECTOR_LESS_THAN_REQUIRED >(value));
          } else {
            mutable_unknown_fields()->AddVarint(13, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(112)) goto parse_comfort;
        break;
      }

      // optional int32 comfort = 14;
      case 14: {
        if (tag == 112) {
         parse_comfort:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &comfort_)));
          set_has_comfort();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(120)) goto parse_equipId;
        break;
      }

      // optional int64 equipId = 15;
      case 15: {
        if (tag == 120) {
         parse_equipId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &equipid_)));
          set_has_equipid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(128)) goto parse_weaponId1;
        break;
      }

      // optional int64 weaponId1 = 16;
      case 16: {
        if (tag == 128) {
         parse_weaponId1:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &weaponid1_)));
          set_has_weaponid1();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(136)) goto parse_weaponId2;
        break;
      }

      // optional int64 weaponId2 = 17;
      case 17: {
        if (tag == 136) {
         parse_weaponId2:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &weaponid2_)));
          set_has_weaponid2();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(144)) goto parse_follow_uuid;
        break;
      }

      // optional int64 follow_uuid = 18;
      case 18: {
        if (tag == 144) {
         parse_follow_uuid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &follow_uuid_)));
          set_has_follow_uuid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.MsgProtectorDataToClient)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.MsgProtectorDataToClient)
  return false;
#undef DO_
}

void MsgProtectorDataToClient::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.MsgProtectorDataToClient)
  // optional int64 uuid = 1;
  if (has_uuid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->uuid(), output);
  }

  // optional int32 templateid = 2;
  if (has_templateid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->templateid(), output);
  }

  // optional int32 mapobjectid = 3;
  if (has_mapobjectid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->mapobjectid(), output);
  }

  // optional int32 itemid = 4;
  if (has_itemid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->itemid(), output);
  }

  // optional int32 level = 5;
  if (has_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->level(), output);
  }

  // optional int64 nExp = 6;
  if (has_nexp()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(6, this->nexp(), output);
  }

  // optional int32 houseId = 7;
  if (has_houseid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->houseid(), output);
  }

  // optional int32 hp = 8;
  if (has_hp()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->hp(), output);
  }

  // optional int32 mp = 9;
  if (has_mp()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->mp(), output);
  }

  // optional .MsgPB.PROTECTOR_STATUS status = 10;
  if (has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      10, this->status(), output);
  }

  // optional uint32 rect_day = 11;
  if (has_rect_day()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(11, this->rect_day(), output);
  }

  // optional int64 rent_time = 12;
  if (has_rent_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(12, this->rent_time(), output);
  }

  // optional .MsgPB.PROTECTOR_LESS_THAN_REQUIRED required = 13;
  if (has_required()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      13, this->required(), output);
  }

  // optional int32 comfort = 14;
  if (has_comfort()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(14, this->comfort(), output);
  }

  // optional int64 equipId = 15;
  if (has_equipid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(15, this->equipid(), output);
  }

  // optional int64 weaponId1 = 16;
  if (has_weaponid1()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(16, this->weaponid1(), output);
  }

  // optional int64 weaponId2 = 17;
  if (has_weaponid2()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(17, this->weaponid2(), output);
  }

  // optional int64 follow_uuid = 18;
  if (has_follow_uuid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(18, this->follow_uuid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.MsgProtectorDataToClient)
}

::google::protobuf::uint8* MsgProtectorDataToClient::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.MsgProtectorDataToClient)
  // optional int64 uuid = 1;
  if (has_uuid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->uuid(), target);
  }

  // optional int32 templateid = 2;
  if (has_templateid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->templateid(), target);
  }

  // optional int32 mapobjectid = 3;
  if (has_mapobjectid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->mapobjectid(), target);
  }

  // optional int32 itemid = 4;
  if (has_itemid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->itemid(), target);
  }

  // optional int32 level = 5;
  if (has_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->level(), target);
  }

  // optional int64 nExp = 6;
  if (has_nexp()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(6, this->nexp(), target);
  }

  // optional int32 houseId = 7;
  if (has_houseid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->houseid(), target);
  }

  // optional int32 hp = 8;
  if (has_hp()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->hp(), target);
  }

  // optional int32 mp = 9;
  if (has_mp()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->mp(), target);
  }

  // optional .MsgPB.PROTECTOR_STATUS status = 10;
  if (has_status()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      10, this->status(), target);
  }

  // optional uint32 rect_day = 11;
  if (has_rect_day()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(11, this->rect_day(), target);
  }

  // optional int64 rent_time = 12;
  if (has_rent_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(12, this->rent_time(), target);
  }

  // optional .MsgPB.PROTECTOR_LESS_THAN_REQUIRED required = 13;
  if (has_required()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      13, this->required(), target);
  }

  // optional int32 comfort = 14;
  if (has_comfort()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(14, this->comfort(), target);
  }

  // optional int64 equipId = 15;
  if (has_equipid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(15, this->equipid(), target);
  }

  // optional int64 weaponId1 = 16;
  if (has_weaponid1()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(16, this->weaponid1(), target);
  }

  // optional int64 weaponId2 = 17;
  if (has_weaponid2()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(17, this->weaponid2(), target);
  }

  // optional int64 follow_uuid = 18;
  if (has_follow_uuid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(18, this->follow_uuid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.MsgProtectorDataToClient)
  return target;
}

int MsgProtectorDataToClient::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 uuid = 1;
    if (has_uuid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->uuid());
    }

    // optional int32 templateid = 2;
    if (has_templateid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->templateid());
    }

    // optional int32 mapobjectid = 3;
    if (has_mapobjectid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->mapobjectid());
    }

    // optional int32 itemid = 4;
    if (has_itemid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->itemid());
    }

    // optional int32 level = 5;
    if (has_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->level());
    }

    // optional int64 nExp = 6;
    if (has_nexp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->nexp());
    }

    // optional int32 houseId = 7;
    if (has_houseid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->houseid());
    }

    // optional int32 hp = 8;
    if (has_hp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->hp());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional int32 mp = 9;
    if (has_mp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->mp());
    }

    // optional .MsgPB.PROTECTOR_STATUS status = 10;
    if (has_status()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->status());
    }

    // optional uint32 rect_day = 11;
    if (has_rect_day()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->rect_day());
    }

    // optional int64 rent_time = 12;
    if (has_rent_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->rent_time());
    }

    // optional .MsgPB.PROTECTOR_LESS_THAN_REQUIRED required = 13;
    if (has_required()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->required());
    }

    // optional int32 comfort = 14;
    if (has_comfort()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->comfort());
    }

    // optional int64 equipId = 15;
    if (has_equipid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->equipid());
    }

    // optional int64 weaponId1 = 16;
    if (has_weaponid1()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->weaponid1());
    }

  }
  if (_has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    // optional int64 weaponId2 = 17;
    if (has_weaponid2()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->weaponid2());
    }

    // optional int64 follow_uuid = 18;
    if (has_follow_uuid()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->follow_uuid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgProtectorDataToClient::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgProtectorDataToClient* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgProtectorDataToClient*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgProtectorDataToClient::MergeFrom(const MsgProtectorDataToClient& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_uuid()) {
      set_uuid(from.uuid());
    }
    if (from.has_templateid()) {
      set_templateid(from.templateid());
    }
    if (from.has_mapobjectid()) {
      set_mapobjectid(from.mapobjectid());
    }
    if (from.has_itemid()) {
      set_itemid(from.itemid());
    }
    if (from.has_level()) {
      set_level(from.level());
    }
    if (from.has_nexp()) {
      set_nexp(from.nexp());
    }
    if (from.has_houseid()) {
      set_houseid(from.houseid());
    }
    if (from.has_hp()) {
      set_hp(from.hp());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_mp()) {
      set_mp(from.mp());
    }
    if (from.has_status()) {
      set_status(from.status());
    }
    if (from.has_rect_day()) {
      set_rect_day(from.rect_day());
    }
    if (from.has_rent_time()) {
      set_rent_time(from.rent_time());
    }
    if (from.has_required()) {
      set_required(from.required());
    }
    if (from.has_comfort()) {
      set_comfort(from.comfort());
    }
    if (from.has_equipid()) {
      set_equipid(from.equipid());
    }
    if (from.has_weaponid1()) {
      set_weaponid1(from.weaponid1());
    }
  }
  if (from._has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    if (from.has_weaponid2()) {
      set_weaponid2(from.weaponid2());
    }
    if (from.has_follow_uuid()) {
      set_follow_uuid(from.follow_uuid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgProtectorDataToClient::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgProtectorDataToClient::CopyFrom(const MsgProtectorDataToClient& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgProtectorDataToClient::IsInitialized() const {

  return true;
}

void MsgProtectorDataToClient::Swap(MsgProtectorDataToClient* other) {
  if (other != this) {
    std::swap(uuid_, other->uuid_);
    std::swap(templateid_, other->templateid_);
    std::swap(mapobjectid_, other->mapobjectid_);
    std::swap(itemid_, other->itemid_);
    std::swap(level_, other->level_);
    std::swap(nexp_, other->nexp_);
    std::swap(houseid_, other->houseid_);
    std::swap(hp_, other->hp_);
    std::swap(mp_, other->mp_);
    std::swap(status_, other->status_);
    std::swap(rect_day_, other->rect_day_);
    std::swap(rent_time_, other->rent_time_);
    std::swap(required_, other->required_);
    std::swap(comfort_, other->comfort_);
    std::swap(equipid_, other->equipid_);
    std::swap(weaponid1_, other->weaponid1_);
    std::swap(weaponid2_, other->weaponid2_);
    std::swap(follow_uuid_, other->follow_uuid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgProtectorDataToClient::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgProtectorDataToClient_descriptor_;
  metadata.reflection = MsgProtectorDataToClient_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgProtectorRentC2S::kMsgTypeFieldNumber;
const int MsgProtectorRentC2S::kUuidFieldNumber;
#endif  // !_MSC_VER

MsgProtectorRentC2S::MsgProtectorRentC2S()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.MsgProtectorRentC2S)
}

void MsgProtectorRentC2S::InitAsDefaultInstance() {
}

MsgProtectorRentC2S::MsgProtectorRentC2S(const MsgProtectorRentC2S& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.MsgProtectorRentC2S)
}

void MsgProtectorRentC2S::SharedCtor() {
  _cached_size_ = 0;
  msgtype_ = 1570;
  uuid_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgProtectorRentC2S::~MsgProtectorRentC2S() {
  // @@protoc_insertion_point(destructor:MsgPB.MsgProtectorRentC2S)
  SharedDtor();
}

void MsgProtectorRentC2S::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgProtectorRentC2S::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgProtectorRentC2S::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgProtectorRentC2S_descriptor_;
}

const MsgProtectorRentC2S& MsgProtectorRentC2S::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgProtector_2eproto();
  return *default_instance_;
}

MsgProtectorRentC2S* MsgProtectorRentC2S::default_instance_ = NULL;

MsgProtectorRentC2S* MsgProtectorRentC2S::New() const {
  return new MsgProtectorRentC2S;
}

void MsgProtectorRentC2S::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    msgtype_ = 1570;
    uuid_ = GOOGLE_LONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgProtectorRentC2S::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.MsgProtectorRentC2S)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_PROTECTOR_RENT_C2S];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::EMsgType_IsValid(value)) {
            set_msgtype(static_cast< ::MsgPB::EMsgType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_uuid;
        break;
      }

      // optional int64 uuid = 4;
      case 4: {
        if (tag == 32) {
         parse_uuid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &uuid_)));
          set_has_uuid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.MsgProtectorRentC2S)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.MsgProtectorRentC2S)
  return false;
#undef DO_
}

void MsgProtectorRentC2S::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.MsgProtectorRentC2S)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_PROTECTOR_RENT_C2S];
  if (has_msgtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->msgtype(), output);
  }

  // optional int64 uuid = 4;
  if (has_uuid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->uuid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.MsgProtectorRentC2S)
}

::google::protobuf::uint8* MsgProtectorRentC2S::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.MsgProtectorRentC2S)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_PROTECTOR_RENT_C2S];
  if (has_msgtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->msgtype(), target);
  }

  // optional int64 uuid = 4;
  if (has_uuid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->uuid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.MsgProtectorRentC2S)
  return target;
}

int MsgProtectorRentC2S::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_PROTECTOR_RENT_C2S];
    if (has_msgtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgtype());
    }

    // optional int64 uuid = 4;
    if (has_uuid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->uuid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgProtectorRentC2S::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgProtectorRentC2S* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgProtectorRentC2S*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgProtectorRentC2S::MergeFrom(const MsgProtectorRentC2S& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msgtype()) {
      set_msgtype(from.msgtype());
    }
    if (from.has_uuid()) {
      set_uuid(from.uuid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgProtectorRentC2S::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgProtectorRentC2S::CopyFrom(const MsgProtectorRentC2S& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgProtectorRentC2S::IsInitialized() const {

  return true;
}

void MsgProtectorRentC2S::Swap(MsgProtectorRentC2S* other) {
  if (other != this) {
    std::swap(msgtype_, other->msgtype_);
    std::swap(uuid_, other->uuid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgProtectorRentC2S::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgProtectorRentC2S_descriptor_;
  metadata.reflection = MsgProtectorRentC2S_reflection_;
  return metadata;
}


// ===================================================================

const ::google::protobuf::EnumDescriptor* MsgProtectorRentResultS2C_RESULT_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgProtectorRentResultS2C_RESULT_descriptor_;
}
bool MsgProtectorRentResultS2C_RESULT_IsValid(int value) {
  switch(value) {
    case -1:
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const MsgProtectorRentResultS2C_RESULT MsgProtectorRentResultS2C::FAILURE;
const MsgProtectorRentResultS2C_RESULT MsgProtectorRentResultS2C::SUCCESS;
const MsgProtectorRentResultS2C_RESULT MsgProtectorRentResultS2C::FAILURE_PACKET_FULL;
const MsgProtectorRentResultS2C_RESULT MsgProtectorRentResultS2C::RESULT_MIN;
const MsgProtectorRentResultS2C_RESULT MsgProtectorRentResultS2C::RESULT_MAX;
const int MsgProtectorRentResultS2C::RESULT_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int MsgProtectorRentResultS2C::kMsgTypeFieldNumber;
const int MsgProtectorRentResultS2C::kResultFieldNumber;
const int MsgProtectorRentResultS2C::kCoinFieldNumber;
const int MsgProtectorRentResultS2C::kItemFieldNumber;
const int MsgProtectorRentResultS2C::kUuidFieldNumber;
#endif  // !_MSC_VER

MsgProtectorRentResultS2C::MsgProtectorRentResultS2C()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.MsgProtectorRentResultS2C)
}

void MsgProtectorRentResultS2C::InitAsDefaultInstance() {
}

MsgProtectorRentResultS2C::MsgProtectorRentResultS2C(const MsgProtectorRentResultS2C& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.MsgProtectorRentResultS2C)
}

void MsgProtectorRentResultS2C::SharedCtor() {
  _cached_size_ = 0;
  msgtype_ = 1571;
  result_ = -1;
  coin_ = 0;
  uuid_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgProtectorRentResultS2C::~MsgProtectorRentResultS2C() {
  // @@protoc_insertion_point(destructor:MsgPB.MsgProtectorRentResultS2C)
  SharedDtor();
}

void MsgProtectorRentResultS2C::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgProtectorRentResultS2C::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgProtectorRentResultS2C::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgProtectorRentResultS2C_descriptor_;
}

const MsgProtectorRentResultS2C& MsgProtectorRentResultS2C::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgProtector_2eproto();
  return *default_instance_;
}

MsgProtectorRentResultS2C* MsgProtectorRentResultS2C::default_instance_ = NULL;

MsgProtectorRentResultS2C* MsgProtectorRentResultS2C::New() const {
  return new MsgProtectorRentResultS2C;
}

void MsgProtectorRentResultS2C::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<MsgProtectorRentResultS2C*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 23) {
    ZR_(uuid_, coin_);
    msgtype_ = 1571;
    result_ = -1;
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  item_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgProtectorRentResultS2C::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.MsgProtectorRentResultS2C)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_PROTECTOR_RENT_RESULT_S2C];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::EMsgType_IsValid(value)) {
            set_msgtype(static_cast< ::MsgPB::EMsgType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_result;
        break;
      }

      // optional .MsgPB.MsgProtectorRentResultS2C.RESULT result = 2;
      case 2: {
        if (tag == 16) {
         parse_result:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::MsgProtectorRentResultS2C_RESULT_IsValid(value)) {
            set_result(static_cast< ::MsgPB::MsgProtectorRentResultS2C_RESULT >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_coin;
        break;
      }

      // optional int32 coin = 3;
      case 3: {
        if (tag == 24) {
         parse_coin:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &coin_)));
          set_has_coin();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_item;
        break;
      }

      // repeated .MsgPB.ItemReward item = 4;
      case 4: {
        if (tag == 34) {
         parse_item:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_item()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_item;
        if (input->ExpectTag(40)) goto parse_uuid;
        break;
      }

      // optional int64 uuid = 5;
      case 5: {
        if (tag == 40) {
         parse_uuid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &uuid_)));
          set_has_uuid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.MsgProtectorRentResultS2C)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.MsgProtectorRentResultS2C)
  return false;
#undef DO_
}

void MsgProtectorRentResultS2C::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.MsgProtectorRentResultS2C)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_PROTECTOR_RENT_RESULT_S2C];
  if (has_msgtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->msgtype(), output);
  }

  // optional .MsgPB.MsgProtectorRentResultS2C.RESULT result = 2;
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->result(), output);
  }

  // optional int32 coin = 3;
  if (has_coin()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->coin(), output);
  }

  // repeated .MsgPB.ItemReward item = 4;
  for (int i = 0; i < this->item_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->item(i), output);
  }

  // optional int64 uuid = 5;
  if (has_uuid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(5, this->uuid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.MsgProtectorRentResultS2C)
}

::google::protobuf::uint8* MsgProtectorRentResultS2C::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.MsgProtectorRentResultS2C)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_PROTECTOR_RENT_RESULT_S2C];
  if (has_msgtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->msgtype(), target);
  }

  // optional .MsgPB.MsgProtectorRentResultS2C.RESULT result = 2;
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->result(), target);
  }

  // optional int32 coin = 3;
  if (has_coin()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->coin(), target);
  }

  // repeated .MsgPB.ItemReward item = 4;
  for (int i = 0; i < this->item_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->item(i), target);
  }

  // optional int64 uuid = 5;
  if (has_uuid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(5, this->uuid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.MsgProtectorRentResultS2C)
  return target;
}

int MsgProtectorRentResultS2C::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_PROTECTOR_RENT_RESULT_S2C];
    if (has_msgtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgtype());
    }

    // optional .MsgPB.MsgProtectorRentResultS2C.RESULT result = 2;
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->result());
    }

    // optional int32 coin = 3;
    if (has_coin()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->coin());
    }

    // optional int64 uuid = 5;
    if (has_uuid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->uuid());
    }

  }
  // repeated .MsgPB.ItemReward item = 4;
  total_size += 1 * this->item_size();
  for (int i = 0; i < this->item_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->item(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgProtectorRentResultS2C::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgProtectorRentResultS2C* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgProtectorRentResultS2C*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgProtectorRentResultS2C::MergeFrom(const MsgProtectorRentResultS2C& from) {
  GOOGLE_CHECK_NE(&from, this);
  item_.MergeFrom(from.item_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msgtype()) {
      set_msgtype(from.msgtype());
    }
    if (from.has_result()) {
      set_result(from.result());
    }
    if (from.has_coin()) {
      set_coin(from.coin());
    }
    if (from.has_uuid()) {
      set_uuid(from.uuid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgProtectorRentResultS2C::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgProtectorRentResultS2C::CopyFrom(const MsgProtectorRentResultS2C& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgProtectorRentResultS2C::IsInitialized() const {

  return true;
}

void MsgProtectorRentResultS2C::Swap(MsgProtectorRentResultS2C* other) {
  if (other != this) {
    std::swap(msgtype_, other->msgtype_);
    std::swap(result_, other->result_);
    std::swap(coin_, other->coin_);
    item_.Swap(&other->item_);
    std::swap(uuid_, other->uuid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgProtectorRentResultS2C::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgProtectorRentResultS2C_descriptor_;
  metadata.reflection = MsgProtectorRentResultS2C_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgProtectorReviveC2S::kMsgTypeFieldNumber;
const int MsgProtectorReviveC2S::kIggidFieldNumber;
const int MsgProtectorReviveC2S::kUuidFieldNumber;
#endif  // !_MSC_VER

MsgProtectorReviveC2S::MsgProtectorReviveC2S()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.MsgProtectorReviveC2S)
}

void MsgProtectorReviveC2S::InitAsDefaultInstance() {
}

MsgProtectorReviveC2S::MsgProtectorReviveC2S(const MsgProtectorReviveC2S& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.MsgProtectorReviveC2S)
}

void MsgProtectorReviveC2S::SharedCtor() {
  _cached_size_ = 0;
  msgtype_ = 1572;
  iggid_ = GOOGLE_LONGLONG(0);
  uuid_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgProtectorReviveC2S::~MsgProtectorReviveC2S() {
  // @@protoc_insertion_point(destructor:MsgPB.MsgProtectorReviveC2S)
  SharedDtor();
}

void MsgProtectorReviveC2S::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgProtectorReviveC2S::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgProtectorReviveC2S::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgProtectorReviveC2S_descriptor_;
}

const MsgProtectorReviveC2S& MsgProtectorReviveC2S::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgProtector_2eproto();
  return *default_instance_;
}

MsgProtectorReviveC2S* MsgProtectorReviveC2S::default_instance_ = NULL;

MsgProtectorReviveC2S* MsgProtectorReviveC2S::New() const {
  return new MsgProtectorReviveC2S;
}

void MsgProtectorReviveC2S::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<MsgProtectorReviveC2S*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 7) {
    ZR_(iggid_, uuid_);
    msgtype_ = 1572;
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgProtectorReviveC2S::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.MsgProtectorReviveC2S)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_PROTECTOR_REVIVE_C2S];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::EMsgType_IsValid(value)) {
            set_msgtype(static_cast< ::MsgPB::EMsgType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_iggid;
        break;
      }

      // optional int64 iggid = 2;
      case 2: {
        if (tag == 16) {
         parse_iggid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &iggid_)));
          set_has_iggid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_uuid;
        break;
      }

      // optional int64 uuid = 3;
      case 3: {
        if (tag == 24) {
         parse_uuid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &uuid_)));
          set_has_uuid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.MsgProtectorReviveC2S)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.MsgProtectorReviveC2S)
  return false;
#undef DO_
}

void MsgProtectorReviveC2S::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.MsgProtectorReviveC2S)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_PROTECTOR_REVIVE_C2S];
  if (has_msgtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->msgtype(), output);
  }

  // optional int64 iggid = 2;
  if (has_iggid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->iggid(), output);
  }

  // optional int64 uuid = 3;
  if (has_uuid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->uuid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.MsgProtectorReviveC2S)
}

::google::protobuf::uint8* MsgProtectorReviveC2S::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.MsgProtectorReviveC2S)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_PROTECTOR_REVIVE_C2S];
  if (has_msgtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->msgtype(), target);
  }

  // optional int64 iggid = 2;
  if (has_iggid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->iggid(), target);
  }

  // optional int64 uuid = 3;
  if (has_uuid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->uuid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.MsgProtectorReviveC2S)
  return target;
}

int MsgProtectorReviveC2S::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_PROTECTOR_REVIVE_C2S];
    if (has_msgtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgtype());
    }

    // optional int64 iggid = 2;
    if (has_iggid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->iggid());
    }

    // optional int64 uuid = 3;
    if (has_uuid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->uuid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgProtectorReviveC2S::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgProtectorReviveC2S* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgProtectorReviveC2S*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgProtectorReviveC2S::MergeFrom(const MsgProtectorReviveC2S& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msgtype()) {
      set_msgtype(from.msgtype());
    }
    if (from.has_iggid()) {
      set_iggid(from.iggid());
    }
    if (from.has_uuid()) {
      set_uuid(from.uuid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgProtectorReviveC2S::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgProtectorReviveC2S::CopyFrom(const MsgProtectorReviveC2S& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgProtectorReviveC2S::IsInitialized() const {

  return true;
}

void MsgProtectorReviveC2S::Swap(MsgProtectorReviveC2S* other) {
  if (other != this) {
    std::swap(msgtype_, other->msgtype_);
    std::swap(iggid_, other->iggid_);
    std::swap(uuid_, other->uuid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgProtectorReviveC2S::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgProtectorReviveC2S_descriptor_;
  metadata.reflection = MsgProtectorReviveC2S_reflection_;
  return metadata;
}


// ===================================================================

const ::google::protobuf::EnumDescriptor* MsgProtectorReviveResultS2C_RESULT_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgProtectorReviveResultS2C_RESULT_descriptor_;
}
bool MsgProtectorReviveResultS2C_RESULT_IsValid(int value) {
  switch(value) {
    case -1:
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const MsgProtectorReviveResultS2C_RESULT MsgProtectorReviveResultS2C::FAILURE;
const MsgProtectorReviveResultS2C_RESULT MsgProtectorReviveResultS2C::SUCCESS;
const MsgProtectorReviveResultS2C_RESULT MsgProtectorReviveResultS2C::ERROR_COIN;
const MsgProtectorReviveResultS2C_RESULT MsgProtectorReviveResultS2C::RESULT_MIN;
const MsgProtectorReviveResultS2C_RESULT MsgProtectorReviveResultS2C::RESULT_MAX;
const int MsgProtectorReviveResultS2C::RESULT_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int MsgProtectorReviveResultS2C::kMsgTypeFieldNumber;
const int MsgProtectorReviveResultS2C::kResultFieldNumber;
#endif  // !_MSC_VER

MsgProtectorReviveResultS2C::MsgProtectorReviveResultS2C()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.MsgProtectorReviveResultS2C)
}

void MsgProtectorReviveResultS2C::InitAsDefaultInstance() {
}

MsgProtectorReviveResultS2C::MsgProtectorReviveResultS2C(const MsgProtectorReviveResultS2C& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.MsgProtectorReviveResultS2C)
}

void MsgProtectorReviveResultS2C::SharedCtor() {
  _cached_size_ = 0;
  msgtype_ = 1573;
  result_ = -1;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgProtectorReviveResultS2C::~MsgProtectorReviveResultS2C() {
  // @@protoc_insertion_point(destructor:MsgPB.MsgProtectorReviveResultS2C)
  SharedDtor();
}

void MsgProtectorReviveResultS2C::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgProtectorReviveResultS2C::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgProtectorReviveResultS2C::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgProtectorReviveResultS2C_descriptor_;
}

const MsgProtectorReviveResultS2C& MsgProtectorReviveResultS2C::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgProtector_2eproto();
  return *default_instance_;
}

MsgProtectorReviveResultS2C* MsgProtectorReviveResultS2C::default_instance_ = NULL;

MsgProtectorReviveResultS2C* MsgProtectorReviveResultS2C::New() const {
  return new MsgProtectorReviveResultS2C;
}

void MsgProtectorReviveResultS2C::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    msgtype_ = 1573;
    result_ = -1;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgProtectorReviveResultS2C::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.MsgProtectorReviveResultS2C)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_PROTECTOR_REVIVE_RESULT_S2C];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::EMsgType_IsValid(value)) {
            set_msgtype(static_cast< ::MsgPB::EMsgType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_result;
        break;
      }

      // optional .MsgPB.MsgProtectorReviveResultS2C.RESULT result = 2;
      case 2: {
        if (tag == 16) {
         parse_result:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::MsgProtectorReviveResultS2C_RESULT_IsValid(value)) {
            set_result(static_cast< ::MsgPB::MsgProtectorReviveResultS2C_RESULT >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.MsgProtectorReviveResultS2C)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.MsgProtectorReviveResultS2C)
  return false;
#undef DO_
}

void MsgProtectorReviveResultS2C::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.MsgProtectorReviveResultS2C)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_PROTECTOR_REVIVE_RESULT_S2C];
  if (has_msgtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->msgtype(), output);
  }

  // optional .MsgPB.MsgProtectorReviveResultS2C.RESULT result = 2;
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->result(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.MsgProtectorReviveResultS2C)
}

::google::protobuf::uint8* MsgProtectorReviveResultS2C::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.MsgProtectorReviveResultS2C)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_PROTECTOR_REVIVE_RESULT_S2C];
  if (has_msgtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->msgtype(), target);
  }

  // optional .MsgPB.MsgProtectorReviveResultS2C.RESULT result = 2;
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->result(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.MsgProtectorReviveResultS2C)
  return target;
}

int MsgProtectorReviveResultS2C::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_PROTECTOR_REVIVE_RESULT_S2C];
    if (has_msgtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgtype());
    }

    // optional .MsgPB.MsgProtectorReviveResultS2C.RESULT result = 2;
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->result());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgProtectorReviveResultS2C::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgProtectorReviveResultS2C* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgProtectorReviveResultS2C*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgProtectorReviveResultS2C::MergeFrom(const MsgProtectorReviveResultS2C& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msgtype()) {
      set_msgtype(from.msgtype());
    }
    if (from.has_result()) {
      set_result(from.result());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgProtectorReviveResultS2C::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgProtectorReviveResultS2C::CopyFrom(const MsgProtectorReviveResultS2C& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgProtectorReviveResultS2C::IsInitialized() const {

  return true;
}

void MsgProtectorReviveResultS2C::Swap(MsgProtectorReviveResultS2C* other) {
  if (other != this) {
    std::swap(msgtype_, other->msgtype_);
    std::swap(result_, other->result_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgProtectorReviveResultS2C::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgProtectorReviveResultS2C_descriptor_;
  metadata.reflection = MsgProtectorReviveResultS2C_reflection_;
  return metadata;
}


// ===================================================================

const ::google::protobuf::EnumDescriptor* MsgProtectorPatrolC2S_MODE_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgProtectorPatrolC2S_MODE_descriptor_;
}
bool MsgProtectorPatrolC2S_MODE_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const MsgProtectorPatrolC2S_MODE MsgProtectorPatrolC2S::PATROL;
const MsgProtectorPatrolC2S_MODE MsgProtectorPatrolC2S::GOHOME;
const MsgProtectorPatrolC2S_MODE MsgProtectorPatrolC2S::MODE_MIN;
const MsgProtectorPatrolC2S_MODE MsgProtectorPatrolC2S::MODE_MAX;
const int MsgProtectorPatrolC2S::MODE_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int MsgProtectorPatrolC2S::kMsgTypeFieldNumber;
const int MsgProtectorPatrolC2S::kIggidFieldNumber;
const int MsgProtectorPatrolC2S::kUuidFieldNumber;
const int MsgProtectorPatrolC2S::kModeFieldNumber;
#endif  // !_MSC_VER

MsgProtectorPatrolC2S::MsgProtectorPatrolC2S()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.MsgProtectorPatrolC2S)
}

void MsgProtectorPatrolC2S::InitAsDefaultInstance() {
}

MsgProtectorPatrolC2S::MsgProtectorPatrolC2S(const MsgProtectorPatrolC2S& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.MsgProtectorPatrolC2S)
}

void MsgProtectorPatrolC2S::SharedCtor() {
  _cached_size_ = 0;
  msgtype_ = 1574;
  iggid_ = GOOGLE_LONGLONG(0);
  uuid_ = GOOGLE_LONGLONG(0);
  mode_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgProtectorPatrolC2S::~MsgProtectorPatrolC2S() {
  // @@protoc_insertion_point(destructor:MsgPB.MsgProtectorPatrolC2S)
  SharedDtor();
}

void MsgProtectorPatrolC2S::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgProtectorPatrolC2S::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgProtectorPatrolC2S::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgProtectorPatrolC2S_descriptor_;
}

const MsgProtectorPatrolC2S& MsgProtectorPatrolC2S::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgProtector_2eproto();
  return *default_instance_;
}

MsgProtectorPatrolC2S* MsgProtectorPatrolC2S::default_instance_ = NULL;

MsgProtectorPatrolC2S* MsgProtectorPatrolC2S::New() const {
  return new MsgProtectorPatrolC2S;
}

void MsgProtectorPatrolC2S::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<MsgProtectorPatrolC2S*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 15) {
    ZR_(mode_, uuid_);
    msgtype_ = 1574;
    iggid_ = GOOGLE_LONGLONG(0);
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgProtectorPatrolC2S::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.MsgProtectorPatrolC2S)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_PROTECTOR_PATROL_C2S];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::EMsgType_IsValid(value)) {
            set_msgtype(static_cast< ::MsgPB::EMsgType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_iggid;
        break;
      }

      // optional int64 iggid = 2;
      case 2: {
        if (tag == 16) {
         parse_iggid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &iggid_)));
          set_has_iggid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_uuid;
        break;
      }

      // optional int64 uuid = 3;
      case 3: {
        if (tag == 24) {
         parse_uuid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &uuid_)));
          set_has_uuid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_mode;
        break;
      }

      // optional .MsgPB.MsgProtectorPatrolC2S.MODE mode = 4;
      case 4: {
        if (tag == 32) {
         parse_mode:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::MsgProtectorPatrolC2S_MODE_IsValid(value)) {
            set_mode(static_cast< ::MsgPB::MsgProtectorPatrolC2S_MODE >(value));
          } else {
            mutable_unknown_fields()->AddVarint(4, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.MsgProtectorPatrolC2S)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.MsgProtectorPatrolC2S)
  return false;
#undef DO_
}

void MsgProtectorPatrolC2S::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.MsgProtectorPatrolC2S)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_PROTECTOR_PATROL_C2S];
  if (has_msgtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->msgtype(), output);
  }

  // optional int64 iggid = 2;
  if (has_iggid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->iggid(), output);
  }

  // optional int64 uuid = 3;
  if (has_uuid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->uuid(), output);
  }

  // optional .MsgPB.MsgProtectorPatrolC2S.MODE mode = 4;
  if (has_mode()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->mode(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.MsgProtectorPatrolC2S)
}

::google::protobuf::uint8* MsgProtectorPatrolC2S::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.MsgProtectorPatrolC2S)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_PROTECTOR_PATROL_C2S];
  if (has_msgtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->msgtype(), target);
  }

  // optional int64 iggid = 2;
  if (has_iggid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->iggid(), target);
  }

  // optional int64 uuid = 3;
  if (has_uuid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->uuid(), target);
  }

  // optional .MsgPB.MsgProtectorPatrolC2S.MODE mode = 4;
  if (has_mode()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->mode(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.MsgProtectorPatrolC2S)
  return target;
}

int MsgProtectorPatrolC2S::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_PROTECTOR_PATROL_C2S];
    if (has_msgtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgtype());
    }

    // optional int64 iggid = 2;
    if (has_iggid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->iggid());
    }

    // optional int64 uuid = 3;
    if (has_uuid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->uuid());
    }

    // optional .MsgPB.MsgProtectorPatrolC2S.MODE mode = 4;
    if (has_mode()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->mode());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgProtectorPatrolC2S::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgProtectorPatrolC2S* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgProtectorPatrolC2S*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgProtectorPatrolC2S::MergeFrom(const MsgProtectorPatrolC2S& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msgtype()) {
      set_msgtype(from.msgtype());
    }
    if (from.has_iggid()) {
      set_iggid(from.iggid());
    }
    if (from.has_uuid()) {
      set_uuid(from.uuid());
    }
    if (from.has_mode()) {
      set_mode(from.mode());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgProtectorPatrolC2S::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgProtectorPatrolC2S::CopyFrom(const MsgProtectorPatrolC2S& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgProtectorPatrolC2S::IsInitialized() const {

  return true;
}

void MsgProtectorPatrolC2S::Swap(MsgProtectorPatrolC2S* other) {
  if (other != this) {
    std::swap(msgtype_, other->msgtype_);
    std::swap(iggid_, other->iggid_);
    std::swap(uuid_, other->uuid_);
    std::swap(mode_, other->mode_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgProtectorPatrolC2S::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgProtectorPatrolC2S_descriptor_;
  metadata.reflection = MsgProtectorPatrolC2S_reflection_;
  return metadata;
}


// ===================================================================

const ::google::protobuf::EnumDescriptor* MsgProtectorPatrolResultS2C_RESULT_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgProtectorPatrolResultS2C_RESULT_descriptor_;
}
bool MsgProtectorPatrolResultS2C_RESULT_IsValid(int value) {
  switch(value) {
    case -1:
    case 0:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const MsgProtectorPatrolResultS2C_RESULT MsgProtectorPatrolResultS2C::FAILURE;
const MsgProtectorPatrolResultS2C_RESULT MsgProtectorPatrolResultS2C::SUCCESS;
const MsgProtectorPatrolResultS2C_RESULT MsgProtectorPatrolResultS2C::RESULT_MIN;
const MsgProtectorPatrolResultS2C_RESULT MsgProtectorPatrolResultS2C::RESULT_MAX;
const int MsgProtectorPatrolResultS2C::RESULT_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int MsgProtectorPatrolResultS2C::kMsgTypeFieldNumber;
const int MsgProtectorPatrolResultS2C::kIggidFieldNumber;
const int MsgProtectorPatrolResultS2C::kResultFieldNumber;
#endif  // !_MSC_VER

MsgProtectorPatrolResultS2C::MsgProtectorPatrolResultS2C()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.MsgProtectorPatrolResultS2C)
}

void MsgProtectorPatrolResultS2C::InitAsDefaultInstance() {
}

MsgProtectorPatrolResultS2C::MsgProtectorPatrolResultS2C(const MsgProtectorPatrolResultS2C& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.MsgProtectorPatrolResultS2C)
}

void MsgProtectorPatrolResultS2C::SharedCtor() {
  _cached_size_ = 0;
  msgtype_ = 1575;
  iggid_ = GOOGLE_LONGLONG(0);
  result_ = -1;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgProtectorPatrolResultS2C::~MsgProtectorPatrolResultS2C() {
  // @@protoc_insertion_point(destructor:MsgPB.MsgProtectorPatrolResultS2C)
  SharedDtor();
}

void MsgProtectorPatrolResultS2C::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgProtectorPatrolResultS2C::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgProtectorPatrolResultS2C::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgProtectorPatrolResultS2C_descriptor_;
}

const MsgProtectorPatrolResultS2C& MsgProtectorPatrolResultS2C::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgProtector_2eproto();
  return *default_instance_;
}

MsgProtectorPatrolResultS2C* MsgProtectorPatrolResultS2C::default_instance_ = NULL;

MsgProtectorPatrolResultS2C* MsgProtectorPatrolResultS2C::New() const {
  return new MsgProtectorPatrolResultS2C;
}

void MsgProtectorPatrolResultS2C::Clear() {
  if (_has_bits_[0 / 32] & 7) {
    msgtype_ = 1575;
    iggid_ = GOOGLE_LONGLONG(0);
    result_ = -1;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgProtectorPatrolResultS2C::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.MsgProtectorPatrolResultS2C)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_PROTECTOR_PATROL_RESULT_S2C];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::EMsgType_IsValid(value)) {
            set_msgtype(static_cast< ::MsgPB::EMsgType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_iggid;
        break;
      }

      // optional int64 iggid = 2;
      case 2: {
        if (tag == 16) {
         parse_iggid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &iggid_)));
          set_has_iggid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_result;
        break;
      }

      // optional .MsgPB.MsgProtectorPatrolResultS2C.RESULT result = 3;
      case 3: {
        if (tag == 24) {
         parse_result:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::MsgProtectorPatrolResultS2C_RESULT_IsValid(value)) {
            set_result(static_cast< ::MsgPB::MsgProtectorPatrolResultS2C_RESULT >(value));
          } else {
            mutable_unknown_fields()->AddVarint(3, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.MsgProtectorPatrolResultS2C)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.MsgProtectorPatrolResultS2C)
  return false;
#undef DO_
}

void MsgProtectorPatrolResultS2C::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.MsgProtectorPatrolResultS2C)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_PROTECTOR_PATROL_RESULT_S2C];
  if (has_msgtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->msgtype(), output);
  }

  // optional int64 iggid = 2;
  if (has_iggid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->iggid(), output);
  }

  // optional .MsgPB.MsgProtectorPatrolResultS2C.RESULT result = 3;
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->result(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.MsgProtectorPatrolResultS2C)
}

::google::protobuf::uint8* MsgProtectorPatrolResultS2C::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.MsgProtectorPatrolResultS2C)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_PROTECTOR_PATROL_RESULT_S2C];
  if (has_msgtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->msgtype(), target);
  }

  // optional int64 iggid = 2;
  if (has_iggid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->iggid(), target);
  }

  // optional .MsgPB.MsgProtectorPatrolResultS2C.RESULT result = 3;
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->result(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.MsgProtectorPatrolResultS2C)
  return target;
}

int MsgProtectorPatrolResultS2C::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_PROTECTOR_PATROL_RESULT_S2C];
    if (has_msgtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgtype());
    }

    // optional int64 iggid = 2;
    if (has_iggid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->iggid());
    }

    // optional .MsgPB.MsgProtectorPatrolResultS2C.RESULT result = 3;
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->result());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgProtectorPatrolResultS2C::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgProtectorPatrolResultS2C* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgProtectorPatrolResultS2C*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgProtectorPatrolResultS2C::MergeFrom(const MsgProtectorPatrolResultS2C& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msgtype()) {
      set_msgtype(from.msgtype());
    }
    if (from.has_iggid()) {
      set_iggid(from.iggid());
    }
    if (from.has_result()) {
      set_result(from.result());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgProtectorPatrolResultS2C::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgProtectorPatrolResultS2C::CopyFrom(const MsgProtectorPatrolResultS2C& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgProtectorPatrolResultS2C::IsInitialized() const {

  return true;
}

void MsgProtectorPatrolResultS2C::Swap(MsgProtectorPatrolResultS2C* other) {
  if (other != this) {
    std::swap(msgtype_, other->msgtype_);
    std::swap(iggid_, other->iggid_);
    std::swap(result_, other->result_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgProtectorPatrolResultS2C::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgProtectorPatrolResultS2C_descriptor_;
  metadata.reflection = MsgProtectorPatrolResultS2C_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgGetStatusC2S::kMsgTypeFieldNumber;
const int MsgGetStatusC2S::kUuidFieldNumber;
#endif  // !_MSC_VER

MsgGetStatusC2S::MsgGetStatusC2S()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.MsgGetStatusC2S)
}

void MsgGetStatusC2S::InitAsDefaultInstance() {
}

MsgGetStatusC2S::MsgGetStatusC2S(const MsgGetStatusC2S& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.MsgGetStatusC2S)
}

void MsgGetStatusC2S::SharedCtor() {
  _cached_size_ = 0;
  msgtype_ = 1576;
  uuid_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgGetStatusC2S::~MsgGetStatusC2S() {
  // @@protoc_insertion_point(destructor:MsgPB.MsgGetStatusC2S)
  SharedDtor();
}

void MsgGetStatusC2S::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgGetStatusC2S::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgGetStatusC2S::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgGetStatusC2S_descriptor_;
}

const MsgGetStatusC2S& MsgGetStatusC2S::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgProtector_2eproto();
  return *default_instance_;
}

MsgGetStatusC2S* MsgGetStatusC2S::default_instance_ = NULL;

MsgGetStatusC2S* MsgGetStatusC2S::New() const {
  return new MsgGetStatusC2S;
}

void MsgGetStatusC2S::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    msgtype_ = 1576;
    uuid_ = GOOGLE_LONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgGetStatusC2S::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.MsgGetStatusC2S)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_PROTECTOR_GET_STATUS_C2S];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::EMsgType_IsValid(value)) {
            set_msgtype(static_cast< ::MsgPB::EMsgType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_uuid;
        break;
      }

      // optional int64 uuid = 2;
      case 2: {
        if (tag == 16) {
         parse_uuid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &uuid_)));
          set_has_uuid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.MsgGetStatusC2S)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.MsgGetStatusC2S)
  return false;
#undef DO_
}

void MsgGetStatusC2S::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.MsgGetStatusC2S)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_PROTECTOR_GET_STATUS_C2S];
  if (has_msgtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->msgtype(), output);
  }

  // optional int64 uuid = 2;
  if (has_uuid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->uuid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.MsgGetStatusC2S)
}

::google::protobuf::uint8* MsgGetStatusC2S::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.MsgGetStatusC2S)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_PROTECTOR_GET_STATUS_C2S];
  if (has_msgtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->msgtype(), target);
  }

  // optional int64 uuid = 2;
  if (has_uuid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->uuid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.MsgGetStatusC2S)
  return target;
}

int MsgGetStatusC2S::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_PROTECTOR_GET_STATUS_C2S];
    if (has_msgtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgtype());
    }

    // optional int64 uuid = 2;
    if (has_uuid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->uuid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgGetStatusC2S::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgGetStatusC2S* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgGetStatusC2S*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgGetStatusC2S::MergeFrom(const MsgGetStatusC2S& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msgtype()) {
      set_msgtype(from.msgtype());
    }
    if (from.has_uuid()) {
      set_uuid(from.uuid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgGetStatusC2S::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgGetStatusC2S::CopyFrom(const MsgGetStatusC2S& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgGetStatusC2S::IsInitialized() const {

  return true;
}

void MsgGetStatusC2S::Swap(MsgGetStatusC2S* other) {
  if (other != this) {
    std::swap(msgtype_, other->msgtype_);
    std::swap(uuid_, other->uuid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgGetStatusC2S::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgGetStatusC2S_descriptor_;
  metadata.reflection = MsgGetStatusC2S_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgProtectorGetStatusResultS2C::kMsgTypeFieldNumber;
const int MsgProtectorGetStatusResultS2C::kUuidFieldNumber;
const int MsgProtectorGetStatusResultS2C::kStatusFieldNumber;
const int MsgProtectorGetStatusResultS2C::kRequiredFieldNumber;
const int MsgProtectorGetStatusResultS2C::kParamFieldNumber;
#endif  // !_MSC_VER

MsgProtectorGetStatusResultS2C::MsgProtectorGetStatusResultS2C()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.MsgProtectorGetStatusResultS2C)
}

void MsgProtectorGetStatusResultS2C::InitAsDefaultInstance() {
}

MsgProtectorGetStatusResultS2C::MsgProtectorGetStatusResultS2C(const MsgProtectorGetStatusResultS2C& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.MsgProtectorGetStatusResultS2C)
}

void MsgProtectorGetStatusResultS2C::SharedCtor() {
  _cached_size_ = 0;
  msgtype_ = 1577;
  uuid_ = GOOGLE_LONGLONG(0);
  status_ = -1;
  required_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgProtectorGetStatusResultS2C::~MsgProtectorGetStatusResultS2C() {
  // @@protoc_insertion_point(destructor:MsgPB.MsgProtectorGetStatusResultS2C)
  SharedDtor();
}

void MsgProtectorGetStatusResultS2C::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgProtectorGetStatusResultS2C::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgProtectorGetStatusResultS2C::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgProtectorGetStatusResultS2C_descriptor_;
}

const MsgProtectorGetStatusResultS2C& MsgProtectorGetStatusResultS2C::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgProtector_2eproto();
  return *default_instance_;
}

MsgProtectorGetStatusResultS2C* MsgProtectorGetStatusResultS2C::default_instance_ = NULL;

MsgProtectorGetStatusResultS2C* MsgProtectorGetStatusResultS2C::New() const {
  return new MsgProtectorGetStatusResultS2C;
}

void MsgProtectorGetStatusResultS2C::Clear() {
  if (_has_bits_[0 / 32] & 15) {
    msgtype_ = 1577;
    uuid_ = GOOGLE_LONGLONG(0);
    status_ = -1;
    required_ = 0;
  }
  param_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgProtectorGetStatusResultS2C::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.MsgProtectorGetStatusResultS2C)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_PROTECTOR_GET_STATUS_RESULT_S2C];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::EMsgType_IsValid(value)) {
            set_msgtype(static_cast< ::MsgPB::EMsgType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_uuid;
        break;
      }

      // optional int64 uuid = 2;
      case 2: {
        if (tag == 16) {
         parse_uuid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &uuid_)));
          set_has_uuid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_status;
        break;
      }

      // optional .MsgPB.PROTECTOR_STATUS status = 3;
      case 3: {
        if (tag == 24) {
         parse_status:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::PROTECTOR_STATUS_IsValid(value)) {
            set_status(static_cast< ::MsgPB::PROTECTOR_STATUS >(value));
          } else {
            mutable_unknown_fields()->AddVarint(3, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_required;
        break;
      }

      // optional .MsgPB.PROTECTOR_LESS_THAN_REQUIRED required = 4;
      case 4: {
        if (tag == 32) {
         parse_required:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::PROTECTOR_LESS_THAN_REQUIRED_IsValid(value)) {
            set_required(static_cast< ::MsgPB::PROTECTOR_LESS_THAN_REQUIRED >(value));
          } else {
            mutable_unknown_fields()->AddVarint(4, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_param;
        break;
      }

      // repeated int32 param = 5;
      case 5: {
        if (tag == 40) {
         parse_param:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 40, input, this->mutable_param())));
        } else if (tag == 42) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_param())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_param;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.MsgProtectorGetStatusResultS2C)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.MsgProtectorGetStatusResultS2C)
  return false;
#undef DO_
}

void MsgProtectorGetStatusResultS2C::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.MsgProtectorGetStatusResultS2C)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_PROTECTOR_GET_STATUS_RESULT_S2C];
  if (has_msgtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->msgtype(), output);
  }

  // optional int64 uuid = 2;
  if (has_uuid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->uuid(), output);
  }

  // optional .MsgPB.PROTECTOR_STATUS status = 3;
  if (has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->status(), output);
  }

  // optional .MsgPB.PROTECTOR_LESS_THAN_REQUIRED required = 4;
  if (has_required()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->required(), output);
  }

  // repeated int32 param = 5;
  for (int i = 0; i < this->param_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      5, this->param(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.MsgProtectorGetStatusResultS2C)
}

::google::protobuf::uint8* MsgProtectorGetStatusResultS2C::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.MsgProtectorGetStatusResultS2C)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_PROTECTOR_GET_STATUS_RESULT_S2C];
  if (has_msgtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->msgtype(), target);
  }

  // optional int64 uuid = 2;
  if (has_uuid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->uuid(), target);
  }

  // optional .MsgPB.PROTECTOR_STATUS status = 3;
  if (has_status()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->status(), target);
  }

  // optional .MsgPB.PROTECTOR_LESS_THAN_REQUIRED required = 4;
  if (has_required()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->required(), target);
  }

  // repeated int32 param = 5;
  for (int i = 0; i < this->param_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(5, this->param(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.MsgProtectorGetStatusResultS2C)
  return target;
}

int MsgProtectorGetStatusResultS2C::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_PROTECTOR_GET_STATUS_RESULT_S2C];
    if (has_msgtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgtype());
    }

    // optional int64 uuid = 2;
    if (has_uuid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->uuid());
    }

    // optional .MsgPB.PROTECTOR_STATUS status = 3;
    if (has_status()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->status());
    }

    // optional .MsgPB.PROTECTOR_LESS_THAN_REQUIRED required = 4;
    if (has_required()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->required());
    }

  }
  // repeated int32 param = 5;
  {
    int data_size = 0;
    for (int i = 0; i < this->param_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->param(i));
    }
    total_size += 1 * this->param_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgProtectorGetStatusResultS2C::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgProtectorGetStatusResultS2C* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgProtectorGetStatusResultS2C*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgProtectorGetStatusResultS2C::MergeFrom(const MsgProtectorGetStatusResultS2C& from) {
  GOOGLE_CHECK_NE(&from, this);
  param_.MergeFrom(from.param_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msgtype()) {
      set_msgtype(from.msgtype());
    }
    if (from.has_uuid()) {
      set_uuid(from.uuid());
    }
    if (from.has_status()) {
      set_status(from.status());
    }
    if (from.has_required()) {
      set_required(from.required());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgProtectorGetStatusResultS2C::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgProtectorGetStatusResultS2C::CopyFrom(const MsgProtectorGetStatusResultS2C& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgProtectorGetStatusResultS2C::IsInitialized() const {

  return true;
}

void MsgProtectorGetStatusResultS2C::Swap(MsgProtectorGetStatusResultS2C* other) {
  if (other != this) {
    std::swap(msgtype_, other->msgtype_);
    std::swap(uuid_, other->uuid_);
    std::swap(status_, other->status_);
    std::swap(required_, other->required_);
    param_.Swap(&other->param_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgProtectorGetStatusResultS2C::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgProtectorGetStatusResultS2C_descriptor_;
  metadata.reflection = MsgProtectorGetStatusResultS2C_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgProtectorSyncS2C::kMsgTypeFieldNumber;
const int MsgProtectorSyncS2C::kDataFieldNumber;
#endif  // !_MSC_VER

MsgProtectorSyncS2C::MsgProtectorSyncS2C()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.MsgProtectorSyncS2C)
}

void MsgProtectorSyncS2C::InitAsDefaultInstance() {
}

MsgProtectorSyncS2C::MsgProtectorSyncS2C(const MsgProtectorSyncS2C& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.MsgProtectorSyncS2C)
}

void MsgProtectorSyncS2C::SharedCtor() {
  _cached_size_ = 0;
  msgtype_ = 1580;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgProtectorSyncS2C::~MsgProtectorSyncS2C() {
  // @@protoc_insertion_point(destructor:MsgPB.MsgProtectorSyncS2C)
  SharedDtor();
}

void MsgProtectorSyncS2C::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgProtectorSyncS2C::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgProtectorSyncS2C::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgProtectorSyncS2C_descriptor_;
}

const MsgProtectorSyncS2C& MsgProtectorSyncS2C::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgProtector_2eproto();
  return *default_instance_;
}

MsgProtectorSyncS2C* MsgProtectorSyncS2C::default_instance_ = NULL;

MsgProtectorSyncS2C* MsgProtectorSyncS2C::New() const {
  return new MsgProtectorSyncS2C;
}

void MsgProtectorSyncS2C::Clear() {
  msgtype_ = 1580;
  data_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgProtectorSyncS2C::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.MsgProtectorSyncS2C)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_PROTECTOR_SYNC_S2C];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::EMsgType_IsValid(value)) {
            set_msgtype(static_cast< ::MsgPB::EMsgType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_data;
        break;
      }

      // repeated .MsgPB.MsgProtectorDataToClient data = 2;
      case 2: {
        if (tag == 18) {
         parse_data:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_data()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_data;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.MsgProtectorSyncS2C)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.MsgProtectorSyncS2C)
  return false;
#undef DO_
}

void MsgProtectorSyncS2C::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.MsgProtectorSyncS2C)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_PROTECTOR_SYNC_S2C];
  if (has_msgtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->msgtype(), output);
  }

  // repeated .MsgPB.MsgProtectorDataToClient data = 2;
  for (int i = 0; i < this->data_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->data(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.MsgProtectorSyncS2C)
}

::google::protobuf::uint8* MsgProtectorSyncS2C::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.MsgProtectorSyncS2C)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_PROTECTOR_SYNC_S2C];
  if (has_msgtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->msgtype(), target);
  }

  // repeated .MsgPB.MsgProtectorDataToClient data = 2;
  for (int i = 0; i < this->data_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->data(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.MsgProtectorSyncS2C)
  return target;
}

int MsgProtectorSyncS2C::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_PROTECTOR_SYNC_S2C];
    if (has_msgtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgtype());
    }

  }
  // repeated .MsgPB.MsgProtectorDataToClient data = 2;
  total_size += 1 * this->data_size();
  for (int i = 0; i < this->data_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->data(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgProtectorSyncS2C::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgProtectorSyncS2C* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgProtectorSyncS2C*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgProtectorSyncS2C::MergeFrom(const MsgProtectorSyncS2C& from) {
  GOOGLE_CHECK_NE(&from, this);
  data_.MergeFrom(from.data_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msgtype()) {
      set_msgtype(from.msgtype());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgProtectorSyncS2C::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgProtectorSyncS2C::CopyFrom(const MsgProtectorSyncS2C& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgProtectorSyncS2C::IsInitialized() const {

  return true;
}

void MsgProtectorSyncS2C::Swap(MsgProtectorSyncS2C* other) {
  if (other != this) {
    std::swap(msgtype_, other->msgtype_);
    data_.Swap(&other->data_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgProtectorSyncS2C::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgProtectorSyncS2C_descriptor_;
  metadata.reflection = MsgProtectorSyncS2C_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgProtectorUpdateS2C::kMsgTypeFieldNumber;
const int MsgProtectorUpdateS2C::kDataFieldNumber;
const int MsgProtectorUpdateS2C::kNoAddToShortBarFieldNumber;
#endif  // !_MSC_VER

MsgProtectorUpdateS2C::MsgProtectorUpdateS2C()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.MsgProtectorUpdateS2C)
}

void MsgProtectorUpdateS2C::InitAsDefaultInstance() {
  data_ = const_cast< ::MsgPB::MsgProtectorDataToClient*>(&::MsgPB::MsgProtectorDataToClient::default_instance());
}

MsgProtectorUpdateS2C::MsgProtectorUpdateS2C(const MsgProtectorUpdateS2C& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.MsgProtectorUpdateS2C)
}

void MsgProtectorUpdateS2C::SharedCtor() {
  _cached_size_ = 0;
  msgtype_ = 1581;
  data_ = NULL;
  noaddtoshortbar_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgProtectorUpdateS2C::~MsgProtectorUpdateS2C() {
  // @@protoc_insertion_point(destructor:MsgPB.MsgProtectorUpdateS2C)
  SharedDtor();
}

void MsgProtectorUpdateS2C::SharedDtor() {
  if (this != default_instance_) {
    delete data_;
  }
}

void MsgProtectorUpdateS2C::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgProtectorUpdateS2C::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgProtectorUpdateS2C_descriptor_;
}

const MsgProtectorUpdateS2C& MsgProtectorUpdateS2C::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgProtector_2eproto();
  return *default_instance_;
}

MsgProtectorUpdateS2C* MsgProtectorUpdateS2C::default_instance_ = NULL;

MsgProtectorUpdateS2C* MsgProtectorUpdateS2C::New() const {
  return new MsgProtectorUpdateS2C;
}

void MsgProtectorUpdateS2C::Clear() {
  if (_has_bits_[0 / 32] & 7) {
    msgtype_ = 1581;
    if (has_data()) {
      if (data_ != NULL) data_->::MsgPB::MsgProtectorDataToClient::Clear();
    }
    noaddtoshortbar_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgProtectorUpdateS2C::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.MsgProtectorUpdateS2C)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_PROTECTOR_UPDATE_S2C];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::EMsgType_IsValid(value)) {
            set_msgtype(static_cast< ::MsgPB::EMsgType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_data;
        break;
      }

      // optional .MsgPB.MsgProtectorDataToClient data = 2;
      case 2: {
        if (tag == 18) {
         parse_data:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_data()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_noAddToShortBar;
        break;
      }

      // optional int32 noAddToShortBar = 3;
      case 3: {
        if (tag == 24) {
         parse_noAddToShortBar:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &noaddtoshortbar_)));
          set_has_noaddtoshortbar();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.MsgProtectorUpdateS2C)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.MsgProtectorUpdateS2C)
  return false;
#undef DO_
}

void MsgProtectorUpdateS2C::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.MsgProtectorUpdateS2C)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_PROTECTOR_UPDATE_S2C];
  if (has_msgtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->msgtype(), output);
  }

  // optional .MsgPB.MsgProtectorDataToClient data = 2;
  if (has_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->data(), output);
  }

  // optional int32 noAddToShortBar = 3;
  if (has_noaddtoshortbar()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->noaddtoshortbar(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.MsgProtectorUpdateS2C)
}

::google::protobuf::uint8* MsgProtectorUpdateS2C::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.MsgProtectorUpdateS2C)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_PROTECTOR_UPDATE_S2C];
  if (has_msgtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->msgtype(), target);
  }

  // optional .MsgPB.MsgProtectorDataToClient data = 2;
  if (has_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->data(), target);
  }

  // optional int32 noAddToShortBar = 3;
  if (has_noaddtoshortbar()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->noaddtoshortbar(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.MsgProtectorUpdateS2C)
  return target;
}

int MsgProtectorUpdateS2C::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_PROTECTOR_UPDATE_S2C];
    if (has_msgtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgtype());
    }

    // optional .MsgPB.MsgProtectorDataToClient data = 2;
    if (has_data()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->data());
    }

    // optional int32 noAddToShortBar = 3;
    if (has_noaddtoshortbar()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->noaddtoshortbar());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgProtectorUpdateS2C::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgProtectorUpdateS2C* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgProtectorUpdateS2C*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgProtectorUpdateS2C::MergeFrom(const MsgProtectorUpdateS2C& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msgtype()) {
      set_msgtype(from.msgtype());
    }
    if (from.has_data()) {
      mutable_data()->::MsgPB::MsgProtectorDataToClient::MergeFrom(from.data());
    }
    if (from.has_noaddtoshortbar()) {
      set_noaddtoshortbar(from.noaddtoshortbar());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgProtectorUpdateS2C::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgProtectorUpdateS2C::CopyFrom(const MsgProtectorUpdateS2C& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgProtectorUpdateS2C::IsInitialized() const {

  return true;
}

void MsgProtectorUpdateS2C::Swap(MsgProtectorUpdateS2C* other) {
  if (other != this) {
    std::swap(msgtype_, other->msgtype_);
    std::swap(data_, other->data_);
    std::swap(noaddtoshortbar_, other->noaddtoshortbar_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgProtectorUpdateS2C::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgProtectorUpdateS2C_descriptor_;
  metadata.reflection = MsgProtectorUpdateS2C_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgProtectorRemoveS2C::kMsgTypeFieldNumber;
const int MsgProtectorRemoveS2C::kMapObjectIDFieldNumber;
const int MsgProtectorRemoveS2C::kUuidFieldNumber;
#endif  // !_MSC_VER

MsgProtectorRemoveS2C::MsgProtectorRemoveS2C()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.MsgProtectorRemoveS2C)
}

void MsgProtectorRemoveS2C::InitAsDefaultInstance() {
}

MsgProtectorRemoveS2C::MsgProtectorRemoveS2C(const MsgProtectorRemoveS2C& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.MsgProtectorRemoveS2C)
}

void MsgProtectorRemoveS2C::SharedCtor() {
  _cached_size_ = 0;
  msgtype_ = 1582;
  mapobjectid_ = 0;
  uuid_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgProtectorRemoveS2C::~MsgProtectorRemoveS2C() {
  // @@protoc_insertion_point(destructor:MsgPB.MsgProtectorRemoveS2C)
  SharedDtor();
}

void MsgProtectorRemoveS2C::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgProtectorRemoveS2C::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgProtectorRemoveS2C::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgProtectorRemoveS2C_descriptor_;
}

const MsgProtectorRemoveS2C& MsgProtectorRemoveS2C::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgProtector_2eproto();
  return *default_instance_;
}

MsgProtectorRemoveS2C* MsgProtectorRemoveS2C::default_instance_ = NULL;

MsgProtectorRemoveS2C* MsgProtectorRemoveS2C::New() const {
  return new MsgProtectorRemoveS2C;
}

void MsgProtectorRemoveS2C::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<MsgProtectorRemoveS2C*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 7) {
    ZR_(mapobjectid_, uuid_);
    msgtype_ = 1582;
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgProtectorRemoveS2C::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.MsgProtectorRemoveS2C)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_PROTECTOR_REMOVE_S2C];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::EMsgType_IsValid(value)) {
            set_msgtype(static_cast< ::MsgPB::EMsgType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_mapObjectID;
        break;
      }

      // optional int32 mapObjectID = 2;
      case 2: {
        if (tag == 16) {
         parse_mapObjectID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &mapobjectid_)));
          set_has_mapobjectid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_uuid;
        break;
      }

      // optional int64 uuid = 3;
      case 3: {
        if (tag == 24) {
         parse_uuid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &uuid_)));
          set_has_uuid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.MsgProtectorRemoveS2C)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.MsgProtectorRemoveS2C)
  return false;
#undef DO_
}

void MsgProtectorRemoveS2C::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.MsgProtectorRemoveS2C)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_PROTECTOR_REMOVE_S2C];
  if (has_msgtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->msgtype(), output);
  }

  // optional int32 mapObjectID = 2;
  if (has_mapobjectid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->mapobjectid(), output);
  }

  // optional int64 uuid = 3;
  if (has_uuid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->uuid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.MsgProtectorRemoveS2C)
}

::google::protobuf::uint8* MsgProtectorRemoveS2C::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.MsgProtectorRemoveS2C)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_PROTECTOR_REMOVE_S2C];
  if (has_msgtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->msgtype(), target);
  }

  // optional int32 mapObjectID = 2;
  if (has_mapobjectid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->mapobjectid(), target);
  }

  // optional int64 uuid = 3;
  if (has_uuid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->uuid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.MsgProtectorRemoveS2C)
  return target;
}

int MsgProtectorRemoveS2C::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_PROTECTOR_REMOVE_S2C];
    if (has_msgtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgtype());
    }

    // optional int32 mapObjectID = 2;
    if (has_mapobjectid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->mapobjectid());
    }

    // optional int64 uuid = 3;
    if (has_uuid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->uuid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgProtectorRemoveS2C::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgProtectorRemoveS2C* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgProtectorRemoveS2C*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgProtectorRemoveS2C::MergeFrom(const MsgProtectorRemoveS2C& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msgtype()) {
      set_msgtype(from.msgtype());
    }
    if (from.has_mapobjectid()) {
      set_mapobjectid(from.mapobjectid());
    }
    if (from.has_uuid()) {
      set_uuid(from.uuid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgProtectorRemoveS2C::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgProtectorRemoveS2C::CopyFrom(const MsgProtectorRemoveS2C& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgProtectorRemoveS2C::IsInitialized() const {

  return true;
}

void MsgProtectorRemoveS2C::Swap(MsgProtectorRemoveS2C* other) {
  if (other != this) {
    std::swap(msgtype_, other->msgtype_);
    std::swap(mapobjectid_, other->mapobjectid_);
    std::swap(uuid_, other->uuid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgProtectorRemoveS2C::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgProtectorRemoveS2C_descriptor_;
  metadata.reflection = MsgProtectorRemoveS2C_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgProtectorRemoveC2S::kMsgTypeFieldNumber;
const int MsgProtectorRemoveC2S::kIggidFieldNumber;
const int MsgProtectorRemoveC2S::kUuidFieldNumber;
#endif  // !_MSC_VER

MsgProtectorRemoveC2S::MsgProtectorRemoveC2S()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.MsgProtectorRemoveC2S)
}

void MsgProtectorRemoveC2S::InitAsDefaultInstance() {
}

MsgProtectorRemoveC2S::MsgProtectorRemoveC2S(const MsgProtectorRemoveC2S& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.MsgProtectorRemoveC2S)
}

void MsgProtectorRemoveC2S::SharedCtor() {
  _cached_size_ = 0;
  msgtype_ = 1584;
  iggid_ = GOOGLE_LONGLONG(0);
  uuid_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgProtectorRemoveC2S::~MsgProtectorRemoveC2S() {
  // @@protoc_insertion_point(destructor:MsgPB.MsgProtectorRemoveC2S)
  SharedDtor();
}

void MsgProtectorRemoveC2S::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgProtectorRemoveC2S::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgProtectorRemoveC2S::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgProtectorRemoveC2S_descriptor_;
}

const MsgProtectorRemoveC2S& MsgProtectorRemoveC2S::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgProtector_2eproto();
  return *default_instance_;
}

MsgProtectorRemoveC2S* MsgProtectorRemoveC2S::default_instance_ = NULL;

MsgProtectorRemoveC2S* MsgProtectorRemoveC2S::New() const {
  return new MsgProtectorRemoveC2S;
}

void MsgProtectorRemoveC2S::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<MsgProtectorRemoveC2S*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 7) {
    ZR_(iggid_, uuid_);
    msgtype_ = 1584;
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgProtectorRemoveC2S::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.MsgProtectorRemoveC2S)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_PROTECTOR_REMOVE_C2S];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::EMsgType_IsValid(value)) {
            set_msgtype(static_cast< ::MsgPB::EMsgType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_iggid;
        break;
      }

      // optional int64 iggid = 2;
      case 2: {
        if (tag == 16) {
         parse_iggid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &iggid_)));
          set_has_iggid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_uuid;
        break;
      }

      // optional int64 uuid = 3;
      case 3: {
        if (tag == 24) {
         parse_uuid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &uuid_)));
          set_has_uuid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.MsgProtectorRemoveC2S)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.MsgProtectorRemoveC2S)
  return false;
#undef DO_
}

void MsgProtectorRemoveC2S::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.MsgProtectorRemoveC2S)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_PROTECTOR_REMOVE_C2S];
  if (has_msgtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->msgtype(), output);
  }

  // optional int64 iggid = 2;
  if (has_iggid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->iggid(), output);
  }

  // optional int64 uuid = 3;
  if (has_uuid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->uuid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.MsgProtectorRemoveC2S)
}

::google::protobuf::uint8* MsgProtectorRemoveC2S::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.MsgProtectorRemoveC2S)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_PROTECTOR_REMOVE_C2S];
  if (has_msgtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->msgtype(), target);
  }

  // optional int64 iggid = 2;
  if (has_iggid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->iggid(), target);
  }

  // optional int64 uuid = 3;
  if (has_uuid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->uuid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.MsgProtectorRemoveC2S)
  return target;
}

int MsgProtectorRemoveC2S::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_PROTECTOR_REMOVE_C2S];
    if (has_msgtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgtype());
    }

    // optional int64 iggid = 2;
    if (has_iggid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->iggid());
    }

    // optional int64 uuid = 3;
    if (has_uuid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->uuid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgProtectorRemoveC2S::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgProtectorRemoveC2S* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgProtectorRemoveC2S*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgProtectorRemoveC2S::MergeFrom(const MsgProtectorRemoveC2S& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msgtype()) {
      set_msgtype(from.msgtype());
    }
    if (from.has_iggid()) {
      set_iggid(from.iggid());
    }
    if (from.has_uuid()) {
      set_uuid(from.uuid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgProtectorRemoveC2S::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgProtectorRemoveC2S::CopyFrom(const MsgProtectorRemoveC2S& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgProtectorRemoveC2S::IsInitialized() const {

  return true;
}

void MsgProtectorRemoveC2S::Swap(MsgProtectorRemoveC2S* other) {
  if (other != this) {
    std::swap(msgtype_, other->msgtype_);
    std::swap(iggid_, other->iggid_);
    std::swap(uuid_, other->uuid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgProtectorRemoveC2S::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgProtectorRemoveC2S_descriptor_;
  metadata.reflection = MsgProtectorRemoveC2S_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgProtectorFadeOutS2C::kMsgTypeFieldNumber;
const int MsgProtectorFadeOutS2C::kMapObjectIDFieldNumber;
#endif  // !_MSC_VER

MsgProtectorFadeOutS2C::MsgProtectorFadeOutS2C()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.MsgProtectorFadeOutS2C)
}

void MsgProtectorFadeOutS2C::InitAsDefaultInstance() {
}

MsgProtectorFadeOutS2C::MsgProtectorFadeOutS2C(const MsgProtectorFadeOutS2C& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.MsgProtectorFadeOutS2C)
}

void MsgProtectorFadeOutS2C::SharedCtor() {
  _cached_size_ = 0;
  msgtype_ = 1583;
  mapobjectid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgProtectorFadeOutS2C::~MsgProtectorFadeOutS2C() {
  // @@protoc_insertion_point(destructor:MsgPB.MsgProtectorFadeOutS2C)
  SharedDtor();
}

void MsgProtectorFadeOutS2C::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgProtectorFadeOutS2C::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgProtectorFadeOutS2C::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgProtectorFadeOutS2C_descriptor_;
}

const MsgProtectorFadeOutS2C& MsgProtectorFadeOutS2C::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgProtector_2eproto();
  return *default_instance_;
}

MsgProtectorFadeOutS2C* MsgProtectorFadeOutS2C::default_instance_ = NULL;

MsgProtectorFadeOutS2C* MsgProtectorFadeOutS2C::New() const {
  return new MsgProtectorFadeOutS2C;
}

void MsgProtectorFadeOutS2C::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    msgtype_ = 1583;
    mapobjectid_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgProtectorFadeOutS2C::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.MsgProtectorFadeOutS2C)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_PROTECTOR_FADE_OUT_S2C];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::EMsgType_IsValid(value)) {
            set_msgtype(static_cast< ::MsgPB::EMsgType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_mapObjectID;
        break;
      }

      // optional int32 mapObjectID = 2;
      case 2: {
        if (tag == 16) {
         parse_mapObjectID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &mapobjectid_)));
          set_has_mapobjectid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.MsgProtectorFadeOutS2C)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.MsgProtectorFadeOutS2C)
  return false;
#undef DO_
}

void MsgProtectorFadeOutS2C::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.MsgProtectorFadeOutS2C)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_PROTECTOR_FADE_OUT_S2C];
  if (has_msgtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->msgtype(), output);
  }

  // optional int32 mapObjectID = 2;
  if (has_mapobjectid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->mapobjectid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.MsgProtectorFadeOutS2C)
}

::google::protobuf::uint8* MsgProtectorFadeOutS2C::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.MsgProtectorFadeOutS2C)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_PROTECTOR_FADE_OUT_S2C];
  if (has_msgtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->msgtype(), target);
  }

  // optional int32 mapObjectID = 2;
  if (has_mapobjectid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->mapobjectid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.MsgProtectorFadeOutS2C)
  return target;
}

int MsgProtectorFadeOutS2C::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_PROTECTOR_FADE_OUT_S2C];
    if (has_msgtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgtype());
    }

    // optional int32 mapObjectID = 2;
    if (has_mapobjectid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->mapobjectid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgProtectorFadeOutS2C::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgProtectorFadeOutS2C* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgProtectorFadeOutS2C*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgProtectorFadeOutS2C::MergeFrom(const MsgProtectorFadeOutS2C& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msgtype()) {
      set_msgtype(from.msgtype());
    }
    if (from.has_mapobjectid()) {
      set_mapobjectid(from.mapobjectid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgProtectorFadeOutS2C::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgProtectorFadeOutS2C::CopyFrom(const MsgProtectorFadeOutS2C& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgProtectorFadeOutS2C::IsInitialized() const {

  return true;
}

void MsgProtectorFadeOutS2C::Swap(MsgProtectorFadeOutS2C* other) {
  if (other != this) {
    std::swap(msgtype_, other->msgtype_);
    std::swap(mapobjectid_, other->mapobjectid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgProtectorFadeOutS2C::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgProtectorFadeOutS2C_descriptor_;
  metadata.reflection = MsgProtectorFadeOutS2C_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgProtectorReplacementBadgeC2S::kMsgTypeFieldNumber;
const int MsgProtectorReplacementBadgeC2S::kUuidFieldNumber;
#endif  // !_MSC_VER

MsgProtectorReplacementBadgeC2S::MsgProtectorReplacementBadgeC2S()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.MsgProtectorReplacementBadgeC2S)
}

void MsgProtectorReplacementBadgeC2S::InitAsDefaultInstance() {
}

MsgProtectorReplacementBadgeC2S::MsgProtectorReplacementBadgeC2S(const MsgProtectorReplacementBadgeC2S& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.MsgProtectorReplacementBadgeC2S)
}

void MsgProtectorReplacementBadgeC2S::SharedCtor() {
  _cached_size_ = 0;
  msgtype_ = 1590;
  uuid_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgProtectorReplacementBadgeC2S::~MsgProtectorReplacementBadgeC2S() {
  // @@protoc_insertion_point(destructor:MsgPB.MsgProtectorReplacementBadgeC2S)
  SharedDtor();
}

void MsgProtectorReplacementBadgeC2S::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgProtectorReplacementBadgeC2S::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgProtectorReplacementBadgeC2S::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgProtectorReplacementBadgeC2S_descriptor_;
}

const MsgProtectorReplacementBadgeC2S& MsgProtectorReplacementBadgeC2S::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgProtector_2eproto();
  return *default_instance_;
}

MsgProtectorReplacementBadgeC2S* MsgProtectorReplacementBadgeC2S::default_instance_ = NULL;

MsgProtectorReplacementBadgeC2S* MsgProtectorReplacementBadgeC2S::New() const {
  return new MsgProtectorReplacementBadgeC2S;
}

void MsgProtectorReplacementBadgeC2S::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    msgtype_ = 1590;
    uuid_ = GOOGLE_LONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgProtectorReplacementBadgeC2S::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.MsgProtectorReplacementBadgeC2S)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_PROTECTOR_REPLACEMENT_BADGE_C2S];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::EMsgType_IsValid(value)) {
            set_msgtype(static_cast< ::MsgPB::EMsgType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_uuid;
        break;
      }

      // optional int64 uuid = 2;
      case 2: {
        if (tag == 16) {
         parse_uuid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &uuid_)));
          set_has_uuid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.MsgProtectorReplacementBadgeC2S)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.MsgProtectorReplacementBadgeC2S)
  return false;
#undef DO_
}

void MsgProtectorReplacementBadgeC2S::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.MsgProtectorReplacementBadgeC2S)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_PROTECTOR_REPLACEMENT_BADGE_C2S];
  if (has_msgtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->msgtype(), output);
  }

  // optional int64 uuid = 2;
  if (has_uuid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->uuid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.MsgProtectorReplacementBadgeC2S)
}

::google::protobuf::uint8* MsgProtectorReplacementBadgeC2S::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.MsgProtectorReplacementBadgeC2S)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_PROTECTOR_REPLACEMENT_BADGE_C2S];
  if (has_msgtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->msgtype(), target);
  }

  // optional int64 uuid = 2;
  if (has_uuid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->uuid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.MsgProtectorReplacementBadgeC2S)
  return target;
}

int MsgProtectorReplacementBadgeC2S::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_PROTECTOR_REPLACEMENT_BADGE_C2S];
    if (has_msgtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgtype());
    }

    // optional int64 uuid = 2;
    if (has_uuid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->uuid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgProtectorReplacementBadgeC2S::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgProtectorReplacementBadgeC2S* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgProtectorReplacementBadgeC2S*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgProtectorReplacementBadgeC2S::MergeFrom(const MsgProtectorReplacementBadgeC2S& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msgtype()) {
      set_msgtype(from.msgtype());
    }
    if (from.has_uuid()) {
      set_uuid(from.uuid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgProtectorReplacementBadgeC2S::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgProtectorReplacementBadgeC2S::CopyFrom(const MsgProtectorReplacementBadgeC2S& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgProtectorReplacementBadgeC2S::IsInitialized() const {

  return true;
}

void MsgProtectorReplacementBadgeC2S::Swap(MsgProtectorReplacementBadgeC2S* other) {
  if (other != this) {
    std::swap(msgtype_, other->msgtype_);
    std::swap(uuid_, other->uuid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgProtectorReplacementBadgeC2S::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgProtectorReplacementBadgeC2S_descriptor_;
  metadata.reflection = MsgProtectorReplacementBadgeC2S_reflection_;
  return metadata;
}


// ===================================================================

const ::google::protobuf::EnumDescriptor* MsgProtectorReplacementBadgeResultS2C_RESULT_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgProtectorReplacementBadgeResultS2C_RESULT_descriptor_;
}
bool MsgProtectorReplacementBadgeResultS2C_RESULT_IsValid(int value) {
  switch(value) {
    case -1:
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const MsgProtectorReplacementBadgeResultS2C_RESULT MsgProtectorReplacementBadgeResultS2C::FAILURE;
const MsgProtectorReplacementBadgeResultS2C_RESULT MsgProtectorReplacementBadgeResultS2C::SUCCESS;
const MsgProtectorReplacementBadgeResultS2C_RESULT MsgProtectorReplacementBadgeResultS2C::REPEAT;
const MsgProtectorReplacementBadgeResultS2C_RESULT MsgProtectorReplacementBadgeResultS2C::RESULT_MIN;
const MsgProtectorReplacementBadgeResultS2C_RESULT MsgProtectorReplacementBadgeResultS2C::RESULT_MAX;
const int MsgProtectorReplacementBadgeResultS2C::RESULT_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int MsgProtectorReplacementBadgeResultS2C::kMsgTypeFieldNumber;
const int MsgProtectorReplacementBadgeResultS2C::kResultFieldNumber;
const int MsgProtectorReplacementBadgeResultS2C::kUuidFieldNumber;
#endif  // !_MSC_VER

MsgProtectorReplacementBadgeResultS2C::MsgProtectorReplacementBadgeResultS2C()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.MsgProtectorReplacementBadgeResultS2C)
}

void MsgProtectorReplacementBadgeResultS2C::InitAsDefaultInstance() {
}

MsgProtectorReplacementBadgeResultS2C::MsgProtectorReplacementBadgeResultS2C(const MsgProtectorReplacementBadgeResultS2C& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.MsgProtectorReplacementBadgeResultS2C)
}

void MsgProtectorReplacementBadgeResultS2C::SharedCtor() {
  _cached_size_ = 0;
  msgtype_ = 1591;
  result_ = -1;
  uuid_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgProtectorReplacementBadgeResultS2C::~MsgProtectorReplacementBadgeResultS2C() {
  // @@protoc_insertion_point(destructor:MsgPB.MsgProtectorReplacementBadgeResultS2C)
  SharedDtor();
}

void MsgProtectorReplacementBadgeResultS2C::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgProtectorReplacementBadgeResultS2C::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgProtectorReplacementBadgeResultS2C::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgProtectorReplacementBadgeResultS2C_descriptor_;
}

const MsgProtectorReplacementBadgeResultS2C& MsgProtectorReplacementBadgeResultS2C::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgProtector_2eproto();
  return *default_instance_;
}

MsgProtectorReplacementBadgeResultS2C* MsgProtectorReplacementBadgeResultS2C::default_instance_ = NULL;

MsgProtectorReplacementBadgeResultS2C* MsgProtectorReplacementBadgeResultS2C::New() const {
  return new MsgProtectorReplacementBadgeResultS2C;
}

void MsgProtectorReplacementBadgeResultS2C::Clear() {
  if (_has_bits_[0 / 32] & 7) {
    msgtype_ = 1591;
    result_ = -1;
    uuid_ = GOOGLE_LONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgProtectorReplacementBadgeResultS2C::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.MsgProtectorReplacementBadgeResultS2C)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_PROTECTOR_REPLACEMENT_BADGE_RESULT_S2C];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::EMsgType_IsValid(value)) {
            set_msgtype(static_cast< ::MsgPB::EMsgType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_result;
        break;
      }

      // optional .MsgPB.MsgProtectorReplacementBadgeResultS2C.RESULT result = 2;
      case 2: {
        if (tag == 16) {
         parse_result:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::MsgProtectorReplacementBadgeResultS2C_RESULT_IsValid(value)) {
            set_result(static_cast< ::MsgPB::MsgProtectorReplacementBadgeResultS2C_RESULT >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_uuid;
        break;
      }

      // optional int64 uuid = 3;
      case 3: {
        if (tag == 24) {
         parse_uuid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &uuid_)));
          set_has_uuid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.MsgProtectorReplacementBadgeResultS2C)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.MsgProtectorReplacementBadgeResultS2C)
  return false;
#undef DO_
}

void MsgProtectorReplacementBadgeResultS2C::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.MsgProtectorReplacementBadgeResultS2C)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_PROTECTOR_REPLACEMENT_BADGE_RESULT_S2C];
  if (has_msgtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->msgtype(), output);
  }

  // optional .MsgPB.MsgProtectorReplacementBadgeResultS2C.RESULT result = 2;
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->result(), output);
  }

  // optional int64 uuid = 3;
  if (has_uuid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->uuid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.MsgProtectorReplacementBadgeResultS2C)
}

::google::protobuf::uint8* MsgProtectorReplacementBadgeResultS2C::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.MsgProtectorReplacementBadgeResultS2C)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_PROTECTOR_REPLACEMENT_BADGE_RESULT_S2C];
  if (has_msgtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->msgtype(), target);
  }

  // optional .MsgPB.MsgProtectorReplacementBadgeResultS2C.RESULT result = 2;
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->result(), target);
  }

  // optional int64 uuid = 3;
  if (has_uuid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->uuid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.MsgProtectorReplacementBadgeResultS2C)
  return target;
}

int MsgProtectorReplacementBadgeResultS2C::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_PROTECTOR_REPLACEMENT_BADGE_RESULT_S2C];
    if (has_msgtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgtype());
    }

    // optional .MsgPB.MsgProtectorReplacementBadgeResultS2C.RESULT result = 2;
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->result());
    }

    // optional int64 uuid = 3;
    if (has_uuid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->uuid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgProtectorReplacementBadgeResultS2C::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgProtectorReplacementBadgeResultS2C* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgProtectorReplacementBadgeResultS2C*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgProtectorReplacementBadgeResultS2C::MergeFrom(const MsgProtectorReplacementBadgeResultS2C& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msgtype()) {
      set_msgtype(from.msgtype());
    }
    if (from.has_result()) {
      set_result(from.result());
    }
    if (from.has_uuid()) {
      set_uuid(from.uuid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgProtectorReplacementBadgeResultS2C::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgProtectorReplacementBadgeResultS2C::CopyFrom(const MsgProtectorReplacementBadgeResultS2C& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgProtectorReplacementBadgeResultS2C::IsInitialized() const {

  return true;
}

void MsgProtectorReplacementBadgeResultS2C::Swap(MsgProtectorReplacementBadgeResultS2C* other) {
  if (other != this) {
    std::swap(msgtype_, other->msgtype_);
    std::swap(result_, other->result_);
    std::swap(uuid_, other->uuid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgProtectorReplacementBadgeResultS2C::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgProtectorReplacementBadgeResultS2C_descriptor_;
  metadata.reflection = MsgProtectorReplacementBadgeResultS2C_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgProtectorCastSkillToPlayerC2S::kMsgTypeFieldNumber;
const int MsgProtectorCastSkillToPlayerC2S::kUuidFieldNumber;
#endif  // !_MSC_VER

MsgProtectorCastSkillToPlayerC2S::MsgProtectorCastSkillToPlayerC2S()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.MsgProtectorCastSkillToPlayerC2S)
}

void MsgProtectorCastSkillToPlayerC2S::InitAsDefaultInstance() {
}

MsgProtectorCastSkillToPlayerC2S::MsgProtectorCastSkillToPlayerC2S(const MsgProtectorCastSkillToPlayerC2S& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.MsgProtectorCastSkillToPlayerC2S)
}

void MsgProtectorCastSkillToPlayerC2S::SharedCtor() {
  _cached_size_ = 0;
  msgtype_ = 1592;
  uuid_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgProtectorCastSkillToPlayerC2S::~MsgProtectorCastSkillToPlayerC2S() {
  // @@protoc_insertion_point(destructor:MsgPB.MsgProtectorCastSkillToPlayerC2S)
  SharedDtor();
}

void MsgProtectorCastSkillToPlayerC2S::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgProtectorCastSkillToPlayerC2S::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgProtectorCastSkillToPlayerC2S::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgProtectorCastSkillToPlayerC2S_descriptor_;
}

const MsgProtectorCastSkillToPlayerC2S& MsgProtectorCastSkillToPlayerC2S::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgProtector_2eproto();
  return *default_instance_;
}

MsgProtectorCastSkillToPlayerC2S* MsgProtectorCastSkillToPlayerC2S::default_instance_ = NULL;

MsgProtectorCastSkillToPlayerC2S* MsgProtectorCastSkillToPlayerC2S::New() const {
  return new MsgProtectorCastSkillToPlayerC2S;
}

void MsgProtectorCastSkillToPlayerC2S::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    msgtype_ = 1592;
    uuid_ = GOOGLE_LONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgProtectorCastSkillToPlayerC2S::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.MsgProtectorCastSkillToPlayerC2S)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_PROTECTOR_CAST_SKILL_TO_PLAYER_C2S];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::EMsgType_IsValid(value)) {
            set_msgtype(static_cast< ::MsgPB::EMsgType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_uuid;
        break;
      }

      // optional int64 uuid = 2;
      case 2: {
        if (tag == 16) {
         parse_uuid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &uuid_)));
          set_has_uuid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.MsgProtectorCastSkillToPlayerC2S)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.MsgProtectorCastSkillToPlayerC2S)
  return false;
#undef DO_
}

void MsgProtectorCastSkillToPlayerC2S::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.MsgProtectorCastSkillToPlayerC2S)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_PROTECTOR_CAST_SKILL_TO_PLAYER_C2S];
  if (has_msgtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->msgtype(), output);
  }

  // optional int64 uuid = 2;
  if (has_uuid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->uuid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.MsgProtectorCastSkillToPlayerC2S)
}

::google::protobuf::uint8* MsgProtectorCastSkillToPlayerC2S::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.MsgProtectorCastSkillToPlayerC2S)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_PROTECTOR_CAST_SKILL_TO_PLAYER_C2S];
  if (has_msgtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->msgtype(), target);
  }

  // optional int64 uuid = 2;
  if (has_uuid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->uuid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.MsgProtectorCastSkillToPlayerC2S)
  return target;
}

int MsgProtectorCastSkillToPlayerC2S::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_PROTECTOR_CAST_SKILL_TO_PLAYER_C2S];
    if (has_msgtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgtype());
    }

    // optional int64 uuid = 2;
    if (has_uuid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->uuid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgProtectorCastSkillToPlayerC2S::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgProtectorCastSkillToPlayerC2S* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgProtectorCastSkillToPlayerC2S*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgProtectorCastSkillToPlayerC2S::MergeFrom(const MsgProtectorCastSkillToPlayerC2S& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msgtype()) {
      set_msgtype(from.msgtype());
    }
    if (from.has_uuid()) {
      set_uuid(from.uuid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgProtectorCastSkillToPlayerC2S::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgProtectorCastSkillToPlayerC2S::CopyFrom(const MsgProtectorCastSkillToPlayerC2S& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgProtectorCastSkillToPlayerC2S::IsInitialized() const {

  return true;
}

void MsgProtectorCastSkillToPlayerC2S::Swap(MsgProtectorCastSkillToPlayerC2S* other) {
  if (other != this) {
    std::swap(msgtype_, other->msgtype_);
    std::swap(uuid_, other->uuid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgProtectorCastSkillToPlayerC2S::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgProtectorCastSkillToPlayerC2S_descriptor_;
  metadata.reflection = MsgProtectorCastSkillToPlayerC2S_reflection_;
  return metadata;
}


// ===================================================================

const ::google::protobuf::EnumDescriptor* MsgProtectorCastSkillToPlayerResultS2C_RESULT_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgProtectorCastSkillToPlayerResultS2C_RESULT_descriptor_;
}
bool MsgProtectorCastSkillToPlayerResultS2C_RESULT_IsValid(int value) {
  switch(value) {
    case -1:
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const MsgProtectorCastSkillToPlayerResultS2C_RESULT MsgProtectorCastSkillToPlayerResultS2C::FAILURE;
const MsgProtectorCastSkillToPlayerResultS2C_RESULT MsgProtectorCastSkillToPlayerResultS2C::SUCCESS;
const MsgProtectorCastSkillToPlayerResultS2C_RESULT MsgProtectorCastSkillToPlayerResultS2C::REPEAT;
const MsgProtectorCastSkillToPlayerResultS2C_RESULT MsgProtectorCastSkillToPlayerResultS2C::RESULT_MIN;
const MsgProtectorCastSkillToPlayerResultS2C_RESULT MsgProtectorCastSkillToPlayerResultS2C::RESULT_MAX;
const int MsgProtectorCastSkillToPlayerResultS2C::RESULT_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int MsgProtectorCastSkillToPlayerResultS2C::kMsgTypeFieldNumber;
const int MsgProtectorCastSkillToPlayerResultS2C::kResultFieldNumber;
const int MsgProtectorCastSkillToPlayerResultS2C::kUuidFieldNumber;
const int MsgProtectorCastSkillToPlayerResultS2C::kBuffFieldNumber;
#endif  // !_MSC_VER

MsgProtectorCastSkillToPlayerResultS2C::MsgProtectorCastSkillToPlayerResultS2C()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.MsgProtectorCastSkillToPlayerResultS2C)
}

void MsgProtectorCastSkillToPlayerResultS2C::InitAsDefaultInstance() {
}

MsgProtectorCastSkillToPlayerResultS2C::MsgProtectorCastSkillToPlayerResultS2C(const MsgProtectorCastSkillToPlayerResultS2C& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.MsgProtectorCastSkillToPlayerResultS2C)
}

void MsgProtectorCastSkillToPlayerResultS2C::SharedCtor() {
  _cached_size_ = 0;
  msgtype_ = 1593;
  result_ = -1;
  uuid_ = GOOGLE_LONGLONG(0);
  buff_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgProtectorCastSkillToPlayerResultS2C::~MsgProtectorCastSkillToPlayerResultS2C() {
  // @@protoc_insertion_point(destructor:MsgPB.MsgProtectorCastSkillToPlayerResultS2C)
  SharedDtor();
}

void MsgProtectorCastSkillToPlayerResultS2C::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgProtectorCastSkillToPlayerResultS2C::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgProtectorCastSkillToPlayerResultS2C::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgProtectorCastSkillToPlayerResultS2C_descriptor_;
}

const MsgProtectorCastSkillToPlayerResultS2C& MsgProtectorCastSkillToPlayerResultS2C::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgProtector_2eproto();
  return *default_instance_;
}

MsgProtectorCastSkillToPlayerResultS2C* MsgProtectorCastSkillToPlayerResultS2C::default_instance_ = NULL;

MsgProtectorCastSkillToPlayerResultS2C* MsgProtectorCastSkillToPlayerResultS2C::New() const {
  return new MsgProtectorCastSkillToPlayerResultS2C;
}

void MsgProtectorCastSkillToPlayerResultS2C::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<MsgProtectorCastSkillToPlayerResultS2C*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 15) {
    ZR_(uuid_, buff_);
    msgtype_ = 1593;
    result_ = -1;
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgProtectorCastSkillToPlayerResultS2C::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.MsgProtectorCastSkillToPlayerResultS2C)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_PROTECTOR_CAST_SKILL_TO_PLAYER_RESULT_S2C];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::EMsgType_IsValid(value)) {
            set_msgtype(static_cast< ::MsgPB::EMsgType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_result;
        break;
      }

      // optional .MsgPB.MsgProtectorCastSkillToPlayerResultS2C.RESULT result = 2;
      case 2: {
        if (tag == 16) {
         parse_result:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::MsgProtectorCastSkillToPlayerResultS2C_RESULT_IsValid(value)) {
            set_result(static_cast< ::MsgPB::MsgProtectorCastSkillToPlayerResultS2C_RESULT >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_uuid;
        break;
      }

      // optional int64 uuid = 3;
      case 3: {
        if (tag == 24) {
         parse_uuid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &uuid_)));
          set_has_uuid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_buff;
        break;
      }

      // optional int32 buff = 4;
      case 4: {
        if (tag == 32) {
         parse_buff:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &buff_)));
          set_has_buff();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.MsgProtectorCastSkillToPlayerResultS2C)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.MsgProtectorCastSkillToPlayerResultS2C)
  return false;
#undef DO_
}

void MsgProtectorCastSkillToPlayerResultS2C::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.MsgProtectorCastSkillToPlayerResultS2C)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_PROTECTOR_CAST_SKILL_TO_PLAYER_RESULT_S2C];
  if (has_msgtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->msgtype(), output);
  }

  // optional .MsgPB.MsgProtectorCastSkillToPlayerResultS2C.RESULT result = 2;
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->result(), output);
  }

  // optional int64 uuid = 3;
  if (has_uuid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->uuid(), output);
  }

  // optional int32 buff = 4;
  if (has_buff()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->buff(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.MsgProtectorCastSkillToPlayerResultS2C)
}

::google::protobuf::uint8* MsgProtectorCastSkillToPlayerResultS2C::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.MsgProtectorCastSkillToPlayerResultS2C)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_PROTECTOR_CAST_SKILL_TO_PLAYER_RESULT_S2C];
  if (has_msgtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->msgtype(), target);
  }

  // optional .MsgPB.MsgProtectorCastSkillToPlayerResultS2C.RESULT result = 2;
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->result(), target);
  }

  // optional int64 uuid = 3;
  if (has_uuid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->uuid(), target);
  }

  // optional int32 buff = 4;
  if (has_buff()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->buff(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.MsgProtectorCastSkillToPlayerResultS2C)
  return target;
}

int MsgProtectorCastSkillToPlayerResultS2C::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_PROTECTOR_CAST_SKILL_TO_PLAYER_RESULT_S2C];
    if (has_msgtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgtype());
    }

    // optional .MsgPB.MsgProtectorCastSkillToPlayerResultS2C.RESULT result = 2;
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->result());
    }

    // optional int64 uuid = 3;
    if (has_uuid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->uuid());
    }

    // optional int32 buff = 4;
    if (has_buff()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->buff());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgProtectorCastSkillToPlayerResultS2C::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgProtectorCastSkillToPlayerResultS2C* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgProtectorCastSkillToPlayerResultS2C*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgProtectorCastSkillToPlayerResultS2C::MergeFrom(const MsgProtectorCastSkillToPlayerResultS2C& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msgtype()) {
      set_msgtype(from.msgtype());
    }
    if (from.has_result()) {
      set_result(from.result());
    }
    if (from.has_uuid()) {
      set_uuid(from.uuid());
    }
    if (from.has_buff()) {
      set_buff(from.buff());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgProtectorCastSkillToPlayerResultS2C::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgProtectorCastSkillToPlayerResultS2C::CopyFrom(const MsgProtectorCastSkillToPlayerResultS2C& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgProtectorCastSkillToPlayerResultS2C::IsInitialized() const {

  return true;
}

void MsgProtectorCastSkillToPlayerResultS2C::Swap(MsgProtectorCastSkillToPlayerResultS2C* other) {
  if (other != this) {
    std::swap(msgtype_, other->msgtype_);
    std::swap(result_, other->result_);
    std::swap(uuid_, other->uuid_);
    std::swap(buff_, other->buff_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgProtectorCastSkillToPlayerResultS2C::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgProtectorCastSkillToPlayerResultS2C_descriptor_;
  metadata.reflection = MsgProtectorCastSkillToPlayerResultS2C_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgProtectorClientSyncRectTimeC2S::kMsgTypeFieldNumber;
const int MsgProtectorClientSyncRectTimeC2S::kUuidFieldNumber;
#endif  // !_MSC_VER

MsgProtectorClientSyncRectTimeC2S::MsgProtectorClientSyncRectTimeC2S()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.MsgProtectorClientSyncRectTimeC2S)
}

void MsgProtectorClientSyncRectTimeC2S::InitAsDefaultInstance() {
}

MsgProtectorClientSyncRectTimeC2S::MsgProtectorClientSyncRectTimeC2S(const MsgProtectorClientSyncRectTimeC2S& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.MsgProtectorClientSyncRectTimeC2S)
}

void MsgProtectorClientSyncRectTimeC2S::SharedCtor() {
  _cached_size_ = 0;
  msgtype_ = 1594;
  uuid_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgProtectorClientSyncRectTimeC2S::~MsgProtectorClientSyncRectTimeC2S() {
  // @@protoc_insertion_point(destructor:MsgPB.MsgProtectorClientSyncRectTimeC2S)
  SharedDtor();
}

void MsgProtectorClientSyncRectTimeC2S::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgProtectorClientSyncRectTimeC2S::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgProtectorClientSyncRectTimeC2S::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgProtectorClientSyncRectTimeC2S_descriptor_;
}

const MsgProtectorClientSyncRectTimeC2S& MsgProtectorClientSyncRectTimeC2S::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgProtector_2eproto();
  return *default_instance_;
}

MsgProtectorClientSyncRectTimeC2S* MsgProtectorClientSyncRectTimeC2S::default_instance_ = NULL;

MsgProtectorClientSyncRectTimeC2S* MsgProtectorClientSyncRectTimeC2S::New() const {
  return new MsgProtectorClientSyncRectTimeC2S;
}

void MsgProtectorClientSyncRectTimeC2S::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    msgtype_ = 1594;
    uuid_ = GOOGLE_LONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgProtectorClientSyncRectTimeC2S::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.MsgProtectorClientSyncRectTimeC2S)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_PROTECTOR_CLIENT_SYNC_RECT_TIME_C2S];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::EMsgType_IsValid(value)) {
            set_msgtype(static_cast< ::MsgPB::EMsgType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_uuid;
        break;
      }

      // optional int64 uuid = 2;
      case 2: {
        if (tag == 16) {
         parse_uuid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &uuid_)));
          set_has_uuid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.MsgProtectorClientSyncRectTimeC2S)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.MsgProtectorClientSyncRectTimeC2S)
  return false;
#undef DO_
}

void MsgProtectorClientSyncRectTimeC2S::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.MsgProtectorClientSyncRectTimeC2S)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_PROTECTOR_CLIENT_SYNC_RECT_TIME_C2S];
  if (has_msgtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->msgtype(), output);
  }

  // optional int64 uuid = 2;
  if (has_uuid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->uuid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.MsgProtectorClientSyncRectTimeC2S)
}

::google::protobuf::uint8* MsgProtectorClientSyncRectTimeC2S::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.MsgProtectorClientSyncRectTimeC2S)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_PROTECTOR_CLIENT_SYNC_RECT_TIME_C2S];
  if (has_msgtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->msgtype(), target);
  }

  // optional int64 uuid = 2;
  if (has_uuid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->uuid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.MsgProtectorClientSyncRectTimeC2S)
  return target;
}

int MsgProtectorClientSyncRectTimeC2S::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_PROTECTOR_CLIENT_SYNC_RECT_TIME_C2S];
    if (has_msgtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgtype());
    }

    // optional int64 uuid = 2;
    if (has_uuid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->uuid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgProtectorClientSyncRectTimeC2S::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgProtectorClientSyncRectTimeC2S* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgProtectorClientSyncRectTimeC2S*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgProtectorClientSyncRectTimeC2S::MergeFrom(const MsgProtectorClientSyncRectTimeC2S& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msgtype()) {
      set_msgtype(from.msgtype());
    }
    if (from.has_uuid()) {
      set_uuid(from.uuid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgProtectorClientSyncRectTimeC2S::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgProtectorClientSyncRectTimeC2S::CopyFrom(const MsgProtectorClientSyncRectTimeC2S& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgProtectorClientSyncRectTimeC2S::IsInitialized() const {

  return true;
}

void MsgProtectorClientSyncRectTimeC2S::Swap(MsgProtectorClientSyncRectTimeC2S* other) {
  if (other != this) {
    std::swap(msgtype_, other->msgtype_);
    std::swap(uuid_, other->uuid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgProtectorClientSyncRectTimeC2S::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgProtectorClientSyncRectTimeC2S_descriptor_;
  metadata.reflection = MsgProtectorClientSyncRectTimeC2S_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgProtectorUseEssenceReqC2S::kMsgTypeFieldNumber;
const int MsgProtectorUseEssenceReqC2S::kUuidFieldNumber;
const int MsgProtectorUseEssenceReqC2S::kItemuuidFieldNumber;
const int MsgProtectorUseEssenceReqC2S::kUseCountFieldNumber;
#endif  // !_MSC_VER

MsgProtectorUseEssenceReqC2S::MsgProtectorUseEssenceReqC2S()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.MsgProtectorUseEssenceReqC2S)
}

void MsgProtectorUseEssenceReqC2S::InitAsDefaultInstance() {
}

MsgProtectorUseEssenceReqC2S::MsgProtectorUseEssenceReqC2S(const MsgProtectorUseEssenceReqC2S& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.MsgProtectorUseEssenceReqC2S)
}

void MsgProtectorUseEssenceReqC2S::SharedCtor() {
  _cached_size_ = 0;
  msgtype_ = 1595;
  uuid_ = GOOGLE_LONGLONG(0);
  itemuuid_ = GOOGLE_LONGLONG(0);
  use_count_ = 1;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgProtectorUseEssenceReqC2S::~MsgProtectorUseEssenceReqC2S() {
  // @@protoc_insertion_point(destructor:MsgPB.MsgProtectorUseEssenceReqC2S)
  SharedDtor();
}

void MsgProtectorUseEssenceReqC2S::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgProtectorUseEssenceReqC2S::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgProtectorUseEssenceReqC2S::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgProtectorUseEssenceReqC2S_descriptor_;
}

const MsgProtectorUseEssenceReqC2S& MsgProtectorUseEssenceReqC2S::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgProtector_2eproto();
  return *default_instance_;
}

MsgProtectorUseEssenceReqC2S* MsgProtectorUseEssenceReqC2S::default_instance_ = NULL;

MsgProtectorUseEssenceReqC2S* MsgProtectorUseEssenceReqC2S::New() const {
  return new MsgProtectorUseEssenceReqC2S;
}

void MsgProtectorUseEssenceReqC2S::Clear() {
  if (_has_bits_[0 / 32] & 15) {
    msgtype_ = 1595;
    uuid_ = GOOGLE_LONGLONG(0);
    itemuuid_ = GOOGLE_LONGLONG(0);
    use_count_ = 1;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgProtectorUseEssenceReqC2S::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.MsgProtectorUseEssenceReqC2S)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_PROTECTOR_USE_ESSENCE_C2S];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::EMsgType_IsValid(value)) {
            set_msgtype(static_cast< ::MsgPB::EMsgType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_uuid;
        break;
      }

      // optional int64 uuid = 2;
      case 2: {
        if (tag == 16) {
         parse_uuid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &uuid_)));
          set_has_uuid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_itemuuid;
        break;
      }

      // optional int64 itemuuid = 3;
      case 3: {
        if (tag == 24) {
         parse_itemuuid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &itemuuid_)));
          set_has_itemuuid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_use_count;
        break;
      }

      // optional int32 use_count = 4 [default = 1];
      case 4: {
        if (tag == 32) {
         parse_use_count:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &use_count_)));
          set_has_use_count();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.MsgProtectorUseEssenceReqC2S)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.MsgProtectorUseEssenceReqC2S)
  return false;
#undef DO_
}

void MsgProtectorUseEssenceReqC2S::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.MsgProtectorUseEssenceReqC2S)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_PROTECTOR_USE_ESSENCE_C2S];
  if (has_msgtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->msgtype(), output);
  }

  // optional int64 uuid = 2;
  if (has_uuid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->uuid(), output);
  }

  // optional int64 itemuuid = 3;
  if (has_itemuuid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->itemuuid(), output);
  }

  // optional int32 use_count = 4 [default = 1];
  if (has_use_count()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->use_count(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.MsgProtectorUseEssenceReqC2S)
}

::google::protobuf::uint8* MsgProtectorUseEssenceReqC2S::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.MsgProtectorUseEssenceReqC2S)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_PROTECTOR_USE_ESSENCE_C2S];
  if (has_msgtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->msgtype(), target);
  }

  // optional int64 uuid = 2;
  if (has_uuid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->uuid(), target);
  }

  // optional int64 itemuuid = 3;
  if (has_itemuuid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->itemuuid(), target);
  }

  // optional int32 use_count = 4 [default = 1];
  if (has_use_count()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->use_count(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.MsgProtectorUseEssenceReqC2S)
  return target;
}

int MsgProtectorUseEssenceReqC2S::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_PROTECTOR_USE_ESSENCE_C2S];
    if (has_msgtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgtype());
    }

    // optional int64 uuid = 2;
    if (has_uuid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->uuid());
    }

    // optional int64 itemuuid = 3;
    if (has_itemuuid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->itemuuid());
    }

    // optional int32 use_count = 4 [default = 1];
    if (has_use_count()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->use_count());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgProtectorUseEssenceReqC2S::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgProtectorUseEssenceReqC2S* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgProtectorUseEssenceReqC2S*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgProtectorUseEssenceReqC2S::MergeFrom(const MsgProtectorUseEssenceReqC2S& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msgtype()) {
      set_msgtype(from.msgtype());
    }
    if (from.has_uuid()) {
      set_uuid(from.uuid());
    }
    if (from.has_itemuuid()) {
      set_itemuuid(from.itemuuid());
    }
    if (from.has_use_count()) {
      set_use_count(from.use_count());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgProtectorUseEssenceReqC2S::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgProtectorUseEssenceReqC2S::CopyFrom(const MsgProtectorUseEssenceReqC2S& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgProtectorUseEssenceReqC2S::IsInitialized() const {

  return true;
}

void MsgProtectorUseEssenceReqC2S::Swap(MsgProtectorUseEssenceReqC2S* other) {
  if (other != this) {
    std::swap(msgtype_, other->msgtype_);
    std::swap(uuid_, other->uuid_);
    std::swap(itemuuid_, other->itemuuid_);
    std::swap(use_count_, other->use_count_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgProtectorUseEssenceReqC2S::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgProtectorUseEssenceReqC2S_descriptor_;
  metadata.reflection = MsgProtectorUseEssenceReqC2S_reflection_;
  return metadata;
}


// ===================================================================

const ::google::protobuf::EnumDescriptor* MsgProtectorUseEssenceResS2C_RESULT_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgProtectorUseEssenceResS2C_RESULT_descriptor_;
}
bool MsgProtectorUseEssenceResS2C_RESULT_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const MsgProtectorUseEssenceResS2C_RESULT MsgProtectorUseEssenceResS2C::SUCCESS;
const MsgProtectorUseEssenceResS2C_RESULT MsgProtectorUseEssenceResS2C::ERR;
const MsgProtectorUseEssenceResS2C_RESULT MsgProtectorUseEssenceResS2C::FAILURE_ITEM_NOT_EXIST;
const MsgProtectorUseEssenceResS2C_RESULT MsgProtectorUseEssenceResS2C::FAILURE_OVER_LIMIT;
const MsgProtectorUseEssenceResS2C_RESULT MsgProtectorUseEssenceResS2C::RESULT_MIN;
const MsgProtectorUseEssenceResS2C_RESULT MsgProtectorUseEssenceResS2C::RESULT_MAX;
const int MsgProtectorUseEssenceResS2C::RESULT_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int MsgProtectorUseEssenceResS2C::kMsgTypeFieldNumber;
const int MsgProtectorUseEssenceResS2C::kResultFieldNumber;
#endif  // !_MSC_VER

MsgProtectorUseEssenceResS2C::MsgProtectorUseEssenceResS2C()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.MsgProtectorUseEssenceResS2C)
}

void MsgProtectorUseEssenceResS2C::InitAsDefaultInstance() {
}

MsgProtectorUseEssenceResS2C::MsgProtectorUseEssenceResS2C(const MsgProtectorUseEssenceResS2C& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.MsgProtectorUseEssenceResS2C)
}

void MsgProtectorUseEssenceResS2C::SharedCtor() {
  _cached_size_ = 0;
  msgtype_ = 1596;
  result_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgProtectorUseEssenceResS2C::~MsgProtectorUseEssenceResS2C() {
  // @@protoc_insertion_point(destructor:MsgPB.MsgProtectorUseEssenceResS2C)
  SharedDtor();
}

void MsgProtectorUseEssenceResS2C::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgProtectorUseEssenceResS2C::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgProtectorUseEssenceResS2C::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgProtectorUseEssenceResS2C_descriptor_;
}

const MsgProtectorUseEssenceResS2C& MsgProtectorUseEssenceResS2C::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgProtector_2eproto();
  return *default_instance_;
}

MsgProtectorUseEssenceResS2C* MsgProtectorUseEssenceResS2C::default_instance_ = NULL;

MsgProtectorUseEssenceResS2C* MsgProtectorUseEssenceResS2C::New() const {
  return new MsgProtectorUseEssenceResS2C;
}

void MsgProtectorUseEssenceResS2C::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    msgtype_ = 1596;
    result_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgProtectorUseEssenceResS2C::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.MsgProtectorUseEssenceResS2C)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_PROTECTOR_USE_ESSENCE_S2C];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::EMsgType_IsValid(value)) {
            set_msgtype(static_cast< ::MsgPB::EMsgType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_result;
        break;
      }

      // optional .MsgPB.MsgProtectorUseEssenceResS2C.RESULT result = 2;
      case 2: {
        if (tag == 16) {
         parse_result:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::MsgProtectorUseEssenceResS2C_RESULT_IsValid(value)) {
            set_result(static_cast< ::MsgPB::MsgProtectorUseEssenceResS2C_RESULT >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.MsgProtectorUseEssenceResS2C)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.MsgProtectorUseEssenceResS2C)
  return false;
#undef DO_
}

void MsgProtectorUseEssenceResS2C::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.MsgProtectorUseEssenceResS2C)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_PROTECTOR_USE_ESSENCE_S2C];
  if (has_msgtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->msgtype(), output);
  }

  // optional .MsgPB.MsgProtectorUseEssenceResS2C.RESULT result = 2;
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->result(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.MsgProtectorUseEssenceResS2C)
}

::google::protobuf::uint8* MsgProtectorUseEssenceResS2C::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.MsgProtectorUseEssenceResS2C)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_PROTECTOR_USE_ESSENCE_S2C];
  if (has_msgtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->msgtype(), target);
  }

  // optional .MsgPB.MsgProtectorUseEssenceResS2C.RESULT result = 2;
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->result(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.MsgProtectorUseEssenceResS2C)
  return target;
}

int MsgProtectorUseEssenceResS2C::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_PROTECTOR_USE_ESSENCE_S2C];
    if (has_msgtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgtype());
    }

    // optional .MsgPB.MsgProtectorUseEssenceResS2C.RESULT result = 2;
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->result());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgProtectorUseEssenceResS2C::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgProtectorUseEssenceResS2C* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgProtectorUseEssenceResS2C*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgProtectorUseEssenceResS2C::MergeFrom(const MsgProtectorUseEssenceResS2C& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msgtype()) {
      set_msgtype(from.msgtype());
    }
    if (from.has_result()) {
      set_result(from.result());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgProtectorUseEssenceResS2C::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgProtectorUseEssenceResS2C::CopyFrom(const MsgProtectorUseEssenceResS2C& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgProtectorUseEssenceResS2C::IsInitialized() const {

  return true;
}

void MsgProtectorUseEssenceResS2C::Swap(MsgProtectorUseEssenceResS2C* other) {
  if (other != this) {
    std::swap(msgtype_, other->msgtype_);
    std::swap(result_, other->result_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgProtectorUseEssenceResS2C::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgProtectorUseEssenceResS2C_descriptor_;
  metadata.reflection = MsgProtectorUseEssenceResS2C_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgProtectorEquipReqC2S::kMsgTypeFieldNumber;
const int MsgProtectorEquipReqC2S::kIggidFieldNumber;
const int MsgProtectorEquipReqC2S::kUuidFieldNumber;
const int MsgProtectorEquipReqC2S::kItemuuidFieldNumber;
const int MsgProtectorEquipReqC2S::kPosFieldNumber;
#endif  // !_MSC_VER

MsgProtectorEquipReqC2S::MsgProtectorEquipReqC2S()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.MsgProtectorEquipReqC2S)
}

void MsgProtectorEquipReqC2S::InitAsDefaultInstance() {
}

MsgProtectorEquipReqC2S::MsgProtectorEquipReqC2S(const MsgProtectorEquipReqC2S& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.MsgProtectorEquipReqC2S)
}

void MsgProtectorEquipReqC2S::SharedCtor() {
  _cached_size_ = 0;
  msgtype_ = 1597;
  iggid_ = GOOGLE_LONGLONG(0);
  uuid_ = GOOGLE_LONGLONG(0);
  itemuuid_ = GOOGLE_LONGLONG(0);
  pos_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgProtectorEquipReqC2S::~MsgProtectorEquipReqC2S() {
  // @@protoc_insertion_point(destructor:MsgPB.MsgProtectorEquipReqC2S)
  SharedDtor();
}

void MsgProtectorEquipReqC2S::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgProtectorEquipReqC2S::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgProtectorEquipReqC2S::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgProtectorEquipReqC2S_descriptor_;
}

const MsgProtectorEquipReqC2S& MsgProtectorEquipReqC2S::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgProtector_2eproto();
  return *default_instance_;
}

MsgProtectorEquipReqC2S* MsgProtectorEquipReqC2S::default_instance_ = NULL;

MsgProtectorEquipReqC2S* MsgProtectorEquipReqC2S::New() const {
  return new MsgProtectorEquipReqC2S;
}

void MsgProtectorEquipReqC2S::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<MsgProtectorEquipReqC2S*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 31) {
    ZR_(iggid_, uuid_);
    ZR_(pos_, itemuuid_);
    msgtype_ = 1597;
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgProtectorEquipReqC2S::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.MsgProtectorEquipReqC2S)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_PROTECTOR_EQUIP_C2S];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::EMsgType_IsValid(value)) {
            set_msgtype(static_cast< ::MsgPB::EMsgType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_iggid;
        break;
      }

      // optional int64 iggid = 2;
      case 2: {
        if (tag == 16) {
         parse_iggid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &iggid_)));
          set_has_iggid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_uuid;
        break;
      }

      // optional int64 uuid = 3;
      case 3: {
        if (tag == 24) {
         parse_uuid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &uuid_)));
          set_has_uuid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_itemuuid;
        break;
      }

      // optional int64 itemuuid = 4;
      case 4: {
        if (tag == 32) {
         parse_itemuuid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &itemuuid_)));
          set_has_itemuuid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_pos;
        break;
      }

      // optional .MsgPB.NPC_EQUIP_POS pos = 5;
      case 5: {
        if (tag == 40) {
         parse_pos:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::NPC_EQUIP_POS_IsValid(value)) {
            set_pos(static_cast< ::MsgPB::NPC_EQUIP_POS >(value));
          } else {
            mutable_unknown_fields()->AddVarint(5, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.MsgProtectorEquipReqC2S)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.MsgProtectorEquipReqC2S)
  return false;
#undef DO_
}

void MsgProtectorEquipReqC2S::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.MsgProtectorEquipReqC2S)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_PROTECTOR_EQUIP_C2S];
  if (has_msgtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->msgtype(), output);
  }

  // optional int64 iggid = 2;
  if (has_iggid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->iggid(), output);
  }

  // optional int64 uuid = 3;
  if (has_uuid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->uuid(), output);
  }

  // optional int64 itemuuid = 4;
  if (has_itemuuid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->itemuuid(), output);
  }

  // optional .MsgPB.NPC_EQUIP_POS pos = 5;
  if (has_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      5, this->pos(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.MsgProtectorEquipReqC2S)
}

::google::protobuf::uint8* MsgProtectorEquipReqC2S::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.MsgProtectorEquipReqC2S)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_PROTECTOR_EQUIP_C2S];
  if (has_msgtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->msgtype(), target);
  }

  // optional int64 iggid = 2;
  if (has_iggid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->iggid(), target);
  }

  // optional int64 uuid = 3;
  if (has_uuid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->uuid(), target);
  }

  // optional int64 itemuuid = 4;
  if (has_itemuuid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->itemuuid(), target);
  }

  // optional .MsgPB.NPC_EQUIP_POS pos = 5;
  if (has_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      5, this->pos(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.MsgProtectorEquipReqC2S)
  return target;
}

int MsgProtectorEquipReqC2S::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_PROTECTOR_EQUIP_C2S];
    if (has_msgtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgtype());
    }

    // optional int64 iggid = 2;
    if (has_iggid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->iggid());
    }

    // optional int64 uuid = 3;
    if (has_uuid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->uuid());
    }

    // optional int64 itemuuid = 4;
    if (has_itemuuid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->itemuuid());
    }

    // optional .MsgPB.NPC_EQUIP_POS pos = 5;
    if (has_pos()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->pos());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgProtectorEquipReqC2S::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgProtectorEquipReqC2S* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgProtectorEquipReqC2S*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgProtectorEquipReqC2S::MergeFrom(const MsgProtectorEquipReqC2S& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msgtype()) {
      set_msgtype(from.msgtype());
    }
    if (from.has_iggid()) {
      set_iggid(from.iggid());
    }
    if (from.has_uuid()) {
      set_uuid(from.uuid());
    }
    if (from.has_itemuuid()) {
      set_itemuuid(from.itemuuid());
    }
    if (from.has_pos()) {
      set_pos(from.pos());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgProtectorEquipReqC2S::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgProtectorEquipReqC2S::CopyFrom(const MsgProtectorEquipReqC2S& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgProtectorEquipReqC2S::IsInitialized() const {

  return true;
}

void MsgProtectorEquipReqC2S::Swap(MsgProtectorEquipReqC2S* other) {
  if (other != this) {
    std::swap(msgtype_, other->msgtype_);
    std::swap(iggid_, other->iggid_);
    std::swap(uuid_, other->uuid_);
    std::swap(itemuuid_, other->itemuuid_);
    std::swap(pos_, other->pos_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgProtectorEquipReqC2S::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgProtectorEquipReqC2S_descriptor_;
  metadata.reflection = MsgProtectorEquipReqC2S_reflection_;
  return metadata;
}


// ===================================================================

const ::google::protobuf::EnumDescriptor* MsgProtectorEquipResS2C_RESULT_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgProtectorEquipResS2C_RESULT_descriptor_;
}
bool MsgProtectorEquipResS2C_RESULT_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const MsgProtectorEquipResS2C_RESULT MsgProtectorEquipResS2C::SUCCESS;
const MsgProtectorEquipResS2C_RESULT MsgProtectorEquipResS2C::ERR;
const MsgProtectorEquipResS2C_RESULT MsgProtectorEquipResS2C::FAILURE_ITEM_NOT_EXIST;
const MsgProtectorEquipResS2C_RESULT MsgProtectorEquipResS2C::FAILURE_POS_ERROR;
const MsgProtectorEquipResS2C_RESULT MsgProtectorEquipResS2C::FAILURE_PACKET_FULL;
const MsgProtectorEquipResS2C_RESULT MsgProtectorEquipResS2C::RESULT_MIN;
const MsgProtectorEquipResS2C_RESULT MsgProtectorEquipResS2C::RESULT_MAX;
const int MsgProtectorEquipResS2C::RESULT_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int MsgProtectorEquipResS2C::kMsgTypeFieldNumber;
const int MsgProtectorEquipResS2C::kResultFieldNumber;
const int MsgProtectorEquipResS2C::kIggidFieldNumber;
const int MsgProtectorEquipResS2C::kUuidFieldNumber;
#endif  // !_MSC_VER

MsgProtectorEquipResS2C::MsgProtectorEquipResS2C()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.MsgProtectorEquipResS2C)
}

void MsgProtectorEquipResS2C::InitAsDefaultInstance() {
}

MsgProtectorEquipResS2C::MsgProtectorEquipResS2C(const MsgProtectorEquipResS2C& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.MsgProtectorEquipResS2C)
}

void MsgProtectorEquipResS2C::SharedCtor() {
  _cached_size_ = 0;
  msgtype_ = 1598;
  result_ = 0;
  iggid_ = GOOGLE_LONGLONG(0);
  uuid_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgProtectorEquipResS2C::~MsgProtectorEquipResS2C() {
  // @@protoc_insertion_point(destructor:MsgPB.MsgProtectorEquipResS2C)
  SharedDtor();
}

void MsgProtectorEquipResS2C::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgProtectorEquipResS2C::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgProtectorEquipResS2C::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgProtectorEquipResS2C_descriptor_;
}

const MsgProtectorEquipResS2C& MsgProtectorEquipResS2C::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgProtector_2eproto();
  return *default_instance_;
}

MsgProtectorEquipResS2C* MsgProtectorEquipResS2C::default_instance_ = NULL;

MsgProtectorEquipResS2C* MsgProtectorEquipResS2C::New() const {
  return new MsgProtectorEquipResS2C;
}

void MsgProtectorEquipResS2C::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<MsgProtectorEquipResS2C*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 15) {
    ZR_(result_, uuid_);
    msgtype_ = 1598;
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgProtectorEquipResS2C::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.MsgProtectorEquipResS2C)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_PROTECTOR_EQUIP_S2C];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::EMsgType_IsValid(value)) {
            set_msgtype(static_cast< ::MsgPB::EMsgType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_result;
        break;
      }

      // optional .MsgPB.MsgProtectorEquipResS2C.RESULT result = 2;
      case 2: {
        if (tag == 16) {
         parse_result:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::MsgProtectorEquipResS2C_RESULT_IsValid(value)) {
            set_result(static_cast< ::MsgPB::MsgProtectorEquipResS2C_RESULT >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_iggid;
        break;
      }

      // optional int64 iggid = 3;
      case 3: {
        if (tag == 24) {
         parse_iggid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &iggid_)));
          set_has_iggid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_uuid;
        break;
      }

      // optional int64 uuid = 4;
      case 4: {
        if (tag == 32) {
         parse_uuid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &uuid_)));
          set_has_uuid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.MsgProtectorEquipResS2C)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.MsgProtectorEquipResS2C)
  return false;
#undef DO_
}

void MsgProtectorEquipResS2C::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.MsgProtectorEquipResS2C)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_PROTECTOR_EQUIP_S2C];
  if (has_msgtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->msgtype(), output);
  }

  // optional .MsgPB.MsgProtectorEquipResS2C.RESULT result = 2;
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->result(), output);
  }

  // optional int64 iggid = 3;
  if (has_iggid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->iggid(), output);
  }

  // optional int64 uuid = 4;
  if (has_uuid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->uuid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.MsgProtectorEquipResS2C)
}

::google::protobuf::uint8* MsgProtectorEquipResS2C::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.MsgProtectorEquipResS2C)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_PROTECTOR_EQUIP_S2C];
  if (has_msgtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->msgtype(), target);
  }

  // optional .MsgPB.MsgProtectorEquipResS2C.RESULT result = 2;
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->result(), target);
  }

  // optional int64 iggid = 3;
  if (has_iggid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->iggid(), target);
  }

  // optional int64 uuid = 4;
  if (has_uuid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->uuid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.MsgProtectorEquipResS2C)
  return target;
}

int MsgProtectorEquipResS2C::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_PROTECTOR_EQUIP_S2C];
    if (has_msgtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgtype());
    }

    // optional .MsgPB.MsgProtectorEquipResS2C.RESULT result = 2;
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->result());
    }

    // optional int64 iggid = 3;
    if (has_iggid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->iggid());
    }

    // optional int64 uuid = 4;
    if (has_uuid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->uuid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgProtectorEquipResS2C::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgProtectorEquipResS2C* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgProtectorEquipResS2C*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgProtectorEquipResS2C::MergeFrom(const MsgProtectorEquipResS2C& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msgtype()) {
      set_msgtype(from.msgtype());
    }
    if (from.has_result()) {
      set_result(from.result());
    }
    if (from.has_iggid()) {
      set_iggid(from.iggid());
    }
    if (from.has_uuid()) {
      set_uuid(from.uuid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgProtectorEquipResS2C::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgProtectorEquipResS2C::CopyFrom(const MsgProtectorEquipResS2C& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgProtectorEquipResS2C::IsInitialized() const {

  return true;
}

void MsgProtectorEquipResS2C::Swap(MsgProtectorEquipResS2C* other) {
  if (other != this) {
    std::swap(msgtype_, other->msgtype_);
    std::swap(result_, other->result_);
    std::swap(iggid_, other->iggid_);
    std::swap(uuid_, other->uuid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgProtectorEquipResS2C::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgProtectorEquipResS2C_descriptor_;
  metadata.reflection = MsgProtectorEquipResS2C_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgProtectorRebornAtOnceC2S::kMsgTypeFieldNumber;
const int MsgProtectorRebornAtOnceC2S::kIggidFieldNumber;
const int MsgProtectorRebornAtOnceC2S::kUuidFieldNumber;
#endif  // !_MSC_VER

MsgProtectorRebornAtOnceC2S::MsgProtectorRebornAtOnceC2S()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.MsgProtectorRebornAtOnceC2S)
}

void MsgProtectorRebornAtOnceC2S::InitAsDefaultInstance() {
}

MsgProtectorRebornAtOnceC2S::MsgProtectorRebornAtOnceC2S(const MsgProtectorRebornAtOnceC2S& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.MsgProtectorRebornAtOnceC2S)
}

void MsgProtectorRebornAtOnceC2S::SharedCtor() {
  _cached_size_ = 0;
  msgtype_ = 1588;
  iggid_ = GOOGLE_LONGLONG(0);
  uuid_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgProtectorRebornAtOnceC2S::~MsgProtectorRebornAtOnceC2S() {
  // @@protoc_insertion_point(destructor:MsgPB.MsgProtectorRebornAtOnceC2S)
  SharedDtor();
}

void MsgProtectorRebornAtOnceC2S::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgProtectorRebornAtOnceC2S::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgProtectorRebornAtOnceC2S::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgProtectorRebornAtOnceC2S_descriptor_;
}

const MsgProtectorRebornAtOnceC2S& MsgProtectorRebornAtOnceC2S::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgProtector_2eproto();
  return *default_instance_;
}

MsgProtectorRebornAtOnceC2S* MsgProtectorRebornAtOnceC2S::default_instance_ = NULL;

MsgProtectorRebornAtOnceC2S* MsgProtectorRebornAtOnceC2S::New() const {
  return new MsgProtectorRebornAtOnceC2S;
}

void MsgProtectorRebornAtOnceC2S::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<MsgProtectorRebornAtOnceC2S*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 7) {
    ZR_(iggid_, uuid_);
    msgtype_ = 1588;
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgProtectorRebornAtOnceC2S::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.MsgProtectorRebornAtOnceC2S)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_PROTECTOR_REBORN_AT_ONCE_C2S];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::EMsgType_IsValid(value)) {
            set_msgtype(static_cast< ::MsgPB::EMsgType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_iggid;
        break;
      }

      // optional int64 iggid = 2;
      case 2: {
        if (tag == 16) {
         parse_iggid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &iggid_)));
          set_has_iggid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_uuid;
        break;
      }

      // optional int64 uuid = 3;
      case 3: {
        if (tag == 24) {
         parse_uuid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &uuid_)));
          set_has_uuid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.MsgProtectorRebornAtOnceC2S)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.MsgProtectorRebornAtOnceC2S)
  return false;
#undef DO_
}

void MsgProtectorRebornAtOnceC2S::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.MsgProtectorRebornAtOnceC2S)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_PROTECTOR_REBORN_AT_ONCE_C2S];
  if (has_msgtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->msgtype(), output);
  }

  // optional int64 iggid = 2;
  if (has_iggid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->iggid(), output);
  }

  // optional int64 uuid = 3;
  if (has_uuid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->uuid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.MsgProtectorRebornAtOnceC2S)
}

::google::protobuf::uint8* MsgProtectorRebornAtOnceC2S::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.MsgProtectorRebornAtOnceC2S)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_PROTECTOR_REBORN_AT_ONCE_C2S];
  if (has_msgtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->msgtype(), target);
  }

  // optional int64 iggid = 2;
  if (has_iggid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->iggid(), target);
  }

  // optional int64 uuid = 3;
  if (has_uuid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->uuid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.MsgProtectorRebornAtOnceC2S)
  return target;
}

int MsgProtectorRebornAtOnceC2S::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_PROTECTOR_REBORN_AT_ONCE_C2S];
    if (has_msgtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgtype());
    }

    // optional int64 iggid = 2;
    if (has_iggid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->iggid());
    }

    // optional int64 uuid = 3;
    if (has_uuid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->uuid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgProtectorRebornAtOnceC2S::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgProtectorRebornAtOnceC2S* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgProtectorRebornAtOnceC2S*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgProtectorRebornAtOnceC2S::MergeFrom(const MsgProtectorRebornAtOnceC2S& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msgtype()) {
      set_msgtype(from.msgtype());
    }
    if (from.has_iggid()) {
      set_iggid(from.iggid());
    }
    if (from.has_uuid()) {
      set_uuid(from.uuid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgProtectorRebornAtOnceC2S::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgProtectorRebornAtOnceC2S::CopyFrom(const MsgProtectorRebornAtOnceC2S& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgProtectorRebornAtOnceC2S::IsInitialized() const {

  return true;
}

void MsgProtectorRebornAtOnceC2S::Swap(MsgProtectorRebornAtOnceC2S* other) {
  if (other != this) {
    std::swap(msgtype_, other->msgtype_);
    std::swap(iggid_, other->iggid_);
    std::swap(uuid_, other->uuid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgProtectorRebornAtOnceC2S::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgProtectorRebornAtOnceC2S_descriptor_;
  metadata.reflection = MsgProtectorRebornAtOnceC2S_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgProtectorRebornAtOnceS2C::kMsgTypeFieldNumber;
const int MsgProtectorRebornAtOnceS2C::kUuidFieldNumber;
const int MsgProtectorRebornAtOnceS2C::kResultFieldNumber;
#endif  // !_MSC_VER

MsgProtectorRebornAtOnceS2C::MsgProtectorRebornAtOnceS2C()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.MsgProtectorRebornAtOnceS2C)
}

void MsgProtectorRebornAtOnceS2C::InitAsDefaultInstance() {
}

MsgProtectorRebornAtOnceS2C::MsgProtectorRebornAtOnceS2C(const MsgProtectorRebornAtOnceS2C& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.MsgProtectorRebornAtOnceS2C)
}

void MsgProtectorRebornAtOnceS2C::SharedCtor() {
  _cached_size_ = 0;
  msgtype_ = 1589;
  uuid_ = GOOGLE_LONGLONG(0);
  result_ = 1;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgProtectorRebornAtOnceS2C::~MsgProtectorRebornAtOnceS2C() {
  // @@protoc_insertion_point(destructor:MsgPB.MsgProtectorRebornAtOnceS2C)
  SharedDtor();
}

void MsgProtectorRebornAtOnceS2C::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgProtectorRebornAtOnceS2C::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgProtectorRebornAtOnceS2C::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgProtectorRebornAtOnceS2C_descriptor_;
}

const MsgProtectorRebornAtOnceS2C& MsgProtectorRebornAtOnceS2C::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgProtector_2eproto();
  return *default_instance_;
}

MsgProtectorRebornAtOnceS2C* MsgProtectorRebornAtOnceS2C::default_instance_ = NULL;

MsgProtectorRebornAtOnceS2C* MsgProtectorRebornAtOnceS2C::New() const {
  return new MsgProtectorRebornAtOnceS2C;
}

void MsgProtectorRebornAtOnceS2C::Clear() {
  if (_has_bits_[0 / 32] & 7) {
    msgtype_ = 1589;
    uuid_ = GOOGLE_LONGLONG(0);
    result_ = 1;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgProtectorRebornAtOnceS2C::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.MsgProtectorRebornAtOnceS2C)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_PROTECTOR_REBORN_AT_ONCE_S2C];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::EMsgType_IsValid(value)) {
            set_msgtype(static_cast< ::MsgPB::EMsgType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_uuid;
        break;
      }

      // optional int64 uuid = 2;
      case 2: {
        if (tag == 16) {
         parse_uuid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &uuid_)));
          set_has_uuid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_result;
        break;
      }

      // optional .MsgPB.E_ErrorCode result = 3 [default = EC_Fail];
      case 3: {
        if (tag == 24) {
         parse_result:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::E_ErrorCode_IsValid(value)) {
            set_result(static_cast< ::MsgPB::E_ErrorCode >(value));
          } else {
            mutable_unknown_fields()->AddVarint(3, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.MsgProtectorRebornAtOnceS2C)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.MsgProtectorRebornAtOnceS2C)
  return false;
#undef DO_
}

void MsgProtectorRebornAtOnceS2C::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.MsgProtectorRebornAtOnceS2C)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_PROTECTOR_REBORN_AT_ONCE_S2C];
  if (has_msgtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->msgtype(), output);
  }

  // optional int64 uuid = 2;
  if (has_uuid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->uuid(), output);
  }

  // optional .MsgPB.E_ErrorCode result = 3 [default = EC_Fail];
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->result(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.MsgProtectorRebornAtOnceS2C)
}

::google::protobuf::uint8* MsgProtectorRebornAtOnceS2C::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.MsgProtectorRebornAtOnceS2C)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_PROTECTOR_REBORN_AT_ONCE_S2C];
  if (has_msgtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->msgtype(), target);
  }

  // optional int64 uuid = 2;
  if (has_uuid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->uuid(), target);
  }

  // optional .MsgPB.E_ErrorCode result = 3 [default = EC_Fail];
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->result(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.MsgProtectorRebornAtOnceS2C)
  return target;
}

int MsgProtectorRebornAtOnceS2C::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_PROTECTOR_REBORN_AT_ONCE_S2C];
    if (has_msgtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgtype());
    }

    // optional int64 uuid = 2;
    if (has_uuid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->uuid());
    }

    // optional .MsgPB.E_ErrorCode result = 3 [default = EC_Fail];
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->result());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgProtectorRebornAtOnceS2C::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgProtectorRebornAtOnceS2C* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgProtectorRebornAtOnceS2C*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgProtectorRebornAtOnceS2C::MergeFrom(const MsgProtectorRebornAtOnceS2C& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msgtype()) {
      set_msgtype(from.msgtype());
    }
    if (from.has_uuid()) {
      set_uuid(from.uuid());
    }
    if (from.has_result()) {
      set_result(from.result());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgProtectorRebornAtOnceS2C::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgProtectorRebornAtOnceS2C::CopyFrom(const MsgProtectorRebornAtOnceS2C& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgProtectorRebornAtOnceS2C::IsInitialized() const {

  return true;
}

void MsgProtectorRebornAtOnceS2C::Swap(MsgProtectorRebornAtOnceS2C* other) {
  if (other != this) {
    std::swap(msgtype_, other->msgtype_);
    std::swap(uuid_, other->uuid_);
    std::swap(result_, other->result_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgProtectorRebornAtOnceS2C::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgProtectorRebornAtOnceS2C_descriptor_;
  metadata.reflection = MsgProtectorRebornAtOnceS2C_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgProtectorMultiRentC2S::kMsgTypeFieldNumber;
const int MsgProtectorMultiRentC2S::kUuidFieldNumber;
#endif  // !_MSC_VER

MsgProtectorMultiRentC2S::MsgProtectorMultiRentC2S()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.MsgProtectorMultiRentC2S)
}

void MsgProtectorMultiRentC2S::InitAsDefaultInstance() {
}

MsgProtectorMultiRentC2S::MsgProtectorMultiRentC2S(const MsgProtectorMultiRentC2S& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.MsgProtectorMultiRentC2S)
}

void MsgProtectorMultiRentC2S::SharedCtor() {
  _cached_size_ = 0;
  msgtype_ = 1578;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgProtectorMultiRentC2S::~MsgProtectorMultiRentC2S() {
  // @@protoc_insertion_point(destructor:MsgPB.MsgProtectorMultiRentC2S)
  SharedDtor();
}

void MsgProtectorMultiRentC2S::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgProtectorMultiRentC2S::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgProtectorMultiRentC2S::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgProtectorMultiRentC2S_descriptor_;
}

const MsgProtectorMultiRentC2S& MsgProtectorMultiRentC2S::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgProtector_2eproto();
  return *default_instance_;
}

MsgProtectorMultiRentC2S* MsgProtectorMultiRentC2S::default_instance_ = NULL;

MsgProtectorMultiRentC2S* MsgProtectorMultiRentC2S::New() const {
  return new MsgProtectorMultiRentC2S;
}

void MsgProtectorMultiRentC2S::Clear() {
  msgtype_ = 1578;
  uuid_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgProtectorMultiRentC2S::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.MsgProtectorMultiRentC2S)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_PROTECTOR_MULTI_RENT_C2S];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::EMsgType_IsValid(value)) {
            set_msgtype(static_cast< ::MsgPB::EMsgType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_uuid;
        break;
      }

      // repeated int64 uuid = 2;
      case 2: {
        if (tag == 16) {
         parse_uuid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 16, input, this->mutable_uuid())));
        } else if (tag == 18) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_uuid())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_uuid;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.MsgProtectorMultiRentC2S)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.MsgProtectorMultiRentC2S)
  return false;
#undef DO_
}

void MsgProtectorMultiRentC2S::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.MsgProtectorMultiRentC2S)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_PROTECTOR_MULTI_RENT_C2S];
  if (has_msgtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->msgtype(), output);
  }

  // repeated int64 uuid = 2;
  for (int i = 0; i < this->uuid_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(
      2, this->uuid(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.MsgProtectorMultiRentC2S)
}

::google::protobuf::uint8* MsgProtectorMultiRentC2S::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.MsgProtectorMultiRentC2S)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_PROTECTOR_MULTI_RENT_C2S];
  if (has_msgtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->msgtype(), target);
  }

  // repeated int64 uuid = 2;
  for (int i = 0; i < this->uuid_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64ToArray(2, this->uuid(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.MsgProtectorMultiRentC2S)
  return target;
}

int MsgProtectorMultiRentC2S::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_PROTECTOR_MULTI_RENT_C2S];
    if (has_msgtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgtype());
    }

  }
  // repeated int64 uuid = 2;
  {
    int data_size = 0;
    for (int i = 0; i < this->uuid_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int64Size(this->uuid(i));
    }
    total_size += 1 * this->uuid_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgProtectorMultiRentC2S::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgProtectorMultiRentC2S* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgProtectorMultiRentC2S*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgProtectorMultiRentC2S::MergeFrom(const MsgProtectorMultiRentC2S& from) {
  GOOGLE_CHECK_NE(&from, this);
  uuid_.MergeFrom(from.uuid_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msgtype()) {
      set_msgtype(from.msgtype());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgProtectorMultiRentC2S::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgProtectorMultiRentC2S::CopyFrom(const MsgProtectorMultiRentC2S& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgProtectorMultiRentC2S::IsInitialized() const {

  return true;
}

void MsgProtectorMultiRentC2S::Swap(MsgProtectorMultiRentC2S* other) {
  if (other != this) {
    std::swap(msgtype_, other->msgtype_);
    uuid_.Swap(&other->uuid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgProtectorMultiRentC2S::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgProtectorMultiRentC2S_descriptor_;
  metadata.reflection = MsgProtectorMultiRentC2S_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgProtectorMultiRentS2C::kMsgTypeFieldNumber;
const int MsgProtectorMultiRentS2C::kResultFieldNumber;
const int MsgProtectorMultiRentS2C::kCoinFieldNumber;
const int MsgProtectorMultiRentS2C::kItemFieldNumber;
#endif  // !_MSC_VER

MsgProtectorMultiRentS2C::MsgProtectorMultiRentS2C()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.MsgProtectorMultiRentS2C)
}

void MsgProtectorMultiRentS2C::InitAsDefaultInstance() {
}

MsgProtectorMultiRentS2C::MsgProtectorMultiRentS2C(const MsgProtectorMultiRentS2C& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.MsgProtectorMultiRentS2C)
}

void MsgProtectorMultiRentS2C::SharedCtor() {
  _cached_size_ = 0;
  msgtype_ = 1579;
  result_ = 1;
  coin_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgProtectorMultiRentS2C::~MsgProtectorMultiRentS2C() {
  // @@protoc_insertion_point(destructor:MsgPB.MsgProtectorMultiRentS2C)
  SharedDtor();
}

void MsgProtectorMultiRentS2C::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgProtectorMultiRentS2C::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgProtectorMultiRentS2C::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgProtectorMultiRentS2C_descriptor_;
}

const MsgProtectorMultiRentS2C& MsgProtectorMultiRentS2C::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgProtector_2eproto();
  return *default_instance_;
}

MsgProtectorMultiRentS2C* MsgProtectorMultiRentS2C::default_instance_ = NULL;

MsgProtectorMultiRentS2C* MsgProtectorMultiRentS2C::New() const {
  return new MsgProtectorMultiRentS2C;
}

void MsgProtectorMultiRentS2C::Clear() {
  if (_has_bits_[0 / 32] & 7) {
    msgtype_ = 1579;
    result_ = 1;
    coin_ = 0;
  }
  item_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgProtectorMultiRentS2C::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.MsgProtectorMultiRentS2C)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_PROTECTOR_MULTI_RENT_S2C];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::EMsgType_IsValid(value)) {
            set_msgtype(static_cast< ::MsgPB::EMsgType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_result;
        break;
      }

      // optional .MsgPB.E_ErrorCode result = 2 [default = EC_Fail];
      case 2: {
        if (tag == 16) {
         parse_result:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::E_ErrorCode_IsValid(value)) {
            set_result(static_cast< ::MsgPB::E_ErrorCode >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_coin;
        break;
      }

      // optional int32 coin = 3;
      case 3: {
        if (tag == 24) {
         parse_coin:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &coin_)));
          set_has_coin();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_item;
        break;
      }

      // repeated .MsgPB.ItemReward item = 4;
      case 4: {
        if (tag == 34) {
         parse_item:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_item()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_item;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.MsgProtectorMultiRentS2C)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.MsgProtectorMultiRentS2C)
  return false;
#undef DO_
}

void MsgProtectorMultiRentS2C::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.MsgProtectorMultiRentS2C)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_PROTECTOR_MULTI_RENT_S2C];
  if (has_msgtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->msgtype(), output);
  }

  // optional .MsgPB.E_ErrorCode result = 2 [default = EC_Fail];
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->result(), output);
  }

  // optional int32 coin = 3;
  if (has_coin()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->coin(), output);
  }

  // repeated .MsgPB.ItemReward item = 4;
  for (int i = 0; i < this->item_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->item(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.MsgProtectorMultiRentS2C)
}

::google::protobuf::uint8* MsgProtectorMultiRentS2C::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.MsgProtectorMultiRentS2C)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_PROTECTOR_MULTI_RENT_S2C];
  if (has_msgtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->msgtype(), target);
  }

  // optional .MsgPB.E_ErrorCode result = 2 [default = EC_Fail];
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->result(), target);
  }

  // optional int32 coin = 3;
  if (has_coin()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->coin(), target);
  }

  // repeated .MsgPB.ItemReward item = 4;
  for (int i = 0; i < this->item_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->item(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.MsgProtectorMultiRentS2C)
  return target;
}

int MsgProtectorMultiRentS2C::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_PROTECTOR_MULTI_RENT_S2C];
    if (has_msgtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgtype());
    }

    // optional .MsgPB.E_ErrorCode result = 2 [default = EC_Fail];
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->result());
    }

    // optional int32 coin = 3;
    if (has_coin()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->coin());
    }

  }
  // repeated .MsgPB.ItemReward item = 4;
  total_size += 1 * this->item_size();
  for (int i = 0; i < this->item_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->item(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgProtectorMultiRentS2C::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgProtectorMultiRentS2C* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgProtectorMultiRentS2C*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgProtectorMultiRentS2C::MergeFrom(const MsgProtectorMultiRentS2C& from) {
  GOOGLE_CHECK_NE(&from, this);
  item_.MergeFrom(from.item_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msgtype()) {
      set_msgtype(from.msgtype());
    }
    if (from.has_result()) {
      set_result(from.result());
    }
    if (from.has_coin()) {
      set_coin(from.coin());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgProtectorMultiRentS2C::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgProtectorMultiRentS2C::CopyFrom(const MsgProtectorMultiRentS2C& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgProtectorMultiRentS2C::IsInitialized() const {

  return true;
}

void MsgProtectorMultiRentS2C::Swap(MsgProtectorMultiRentS2C* other) {
  if (other != this) {
    std::swap(msgtype_, other->msgtype_);
    std::swap(result_, other->result_);
    std::swap(coin_, other->coin_);
    item_.Swap(&other->item_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgProtectorMultiRentS2C::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgProtectorMultiRentS2C_descriptor_;
  metadata.reflection = MsgProtectorMultiRentS2C_reflection_;
  return metadata;
}


// ===================================================================

const ::google::protobuf::EnumDescriptor* MsgProtectorEventC2S_DOEVENT_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgProtectorEventC2S_DOEVENT_descriptor_;
}
bool MsgProtectorEventC2S_DOEVENT_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const MsgProtectorEventC2S_DOEVENT MsgProtectorEventC2S::DOEVENT_NONE;
const MsgProtectorEventC2S_DOEVENT MsgProtectorEventC2S::DOEVENT_WOOD;
const MsgProtectorEventC2S_DOEVENT MsgProtectorEventC2S::DOEVENT_MIN;
const MsgProtectorEventC2S_DOEVENT MsgProtectorEventC2S::DOEVENT_MAX;
const int MsgProtectorEventC2S::DOEVENT_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int MsgProtectorEventC2S::kMsgTypeFieldNumber;
const int MsgProtectorEventC2S::kIggidFieldNumber;
const int MsgProtectorEventC2S::kUuidFieldNumber;
const int MsgProtectorEventC2S::kDoEventFieldNumber;
#endif  // !_MSC_VER

MsgProtectorEventC2S::MsgProtectorEventC2S()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.MsgProtectorEventC2S)
}

void MsgProtectorEventC2S::InitAsDefaultInstance() {
}

MsgProtectorEventC2S::MsgProtectorEventC2S(const MsgProtectorEventC2S& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.MsgProtectorEventC2S)
}

void MsgProtectorEventC2S::SharedCtor() {
  _cached_size_ = 0;
  msgtype_ = 1585;
  iggid_ = GOOGLE_LONGLONG(0);
  uuid_ = GOOGLE_LONGLONG(0);
  do_event_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgProtectorEventC2S::~MsgProtectorEventC2S() {
  // @@protoc_insertion_point(destructor:MsgPB.MsgProtectorEventC2S)
  SharedDtor();
}

void MsgProtectorEventC2S::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgProtectorEventC2S::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgProtectorEventC2S::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgProtectorEventC2S_descriptor_;
}

const MsgProtectorEventC2S& MsgProtectorEventC2S::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgProtector_2eproto();
  return *default_instance_;
}

MsgProtectorEventC2S* MsgProtectorEventC2S::default_instance_ = NULL;

MsgProtectorEventC2S* MsgProtectorEventC2S::New() const {
  return new MsgProtectorEventC2S;
}

void MsgProtectorEventC2S::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<MsgProtectorEventC2S*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 15) {
    ZR_(do_event_, uuid_);
    msgtype_ = 1585;
    iggid_ = GOOGLE_LONGLONG(0);
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgProtectorEventC2S::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.MsgProtectorEventC2S)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_PROTECTOR_EVENT_C2S];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::EMsgType_IsValid(value)) {
            set_msgtype(static_cast< ::MsgPB::EMsgType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_iggid;
        break;
      }

      // optional int64 iggid = 2;
      case 2: {
        if (tag == 16) {
         parse_iggid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &iggid_)));
          set_has_iggid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_uuid;
        break;
      }

      // optional int64 uuid = 3;
      case 3: {
        if (tag == 24) {
         parse_uuid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &uuid_)));
          set_has_uuid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_do_event;
        break;
      }

      // optional .MsgPB.MsgProtectorEventC2S.DOEVENT do_event = 4;
      case 4: {
        if (tag == 32) {
         parse_do_event:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::MsgProtectorEventC2S_DOEVENT_IsValid(value)) {
            set_do_event(static_cast< ::MsgPB::MsgProtectorEventC2S_DOEVENT >(value));
          } else {
            mutable_unknown_fields()->AddVarint(4, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.MsgProtectorEventC2S)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.MsgProtectorEventC2S)
  return false;
#undef DO_
}

void MsgProtectorEventC2S::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.MsgProtectorEventC2S)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_PROTECTOR_EVENT_C2S];
  if (has_msgtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->msgtype(), output);
  }

  // optional int64 iggid = 2;
  if (has_iggid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->iggid(), output);
  }

  // optional int64 uuid = 3;
  if (has_uuid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->uuid(), output);
  }

  // optional .MsgPB.MsgProtectorEventC2S.DOEVENT do_event = 4;
  if (has_do_event()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->do_event(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.MsgProtectorEventC2S)
}

::google::protobuf::uint8* MsgProtectorEventC2S::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.MsgProtectorEventC2S)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_PROTECTOR_EVENT_C2S];
  if (has_msgtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->msgtype(), target);
  }

  // optional int64 iggid = 2;
  if (has_iggid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->iggid(), target);
  }

  // optional int64 uuid = 3;
  if (has_uuid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->uuid(), target);
  }

  // optional .MsgPB.MsgProtectorEventC2S.DOEVENT do_event = 4;
  if (has_do_event()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->do_event(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.MsgProtectorEventC2S)
  return target;
}

int MsgProtectorEventC2S::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_PROTECTOR_EVENT_C2S];
    if (has_msgtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgtype());
    }

    // optional int64 iggid = 2;
    if (has_iggid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->iggid());
    }

    // optional int64 uuid = 3;
    if (has_uuid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->uuid());
    }

    // optional .MsgPB.MsgProtectorEventC2S.DOEVENT do_event = 4;
    if (has_do_event()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->do_event());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgProtectorEventC2S::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgProtectorEventC2S* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgProtectorEventC2S*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgProtectorEventC2S::MergeFrom(const MsgProtectorEventC2S& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msgtype()) {
      set_msgtype(from.msgtype());
    }
    if (from.has_iggid()) {
      set_iggid(from.iggid());
    }
    if (from.has_uuid()) {
      set_uuid(from.uuid());
    }
    if (from.has_do_event()) {
      set_do_event(from.do_event());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgProtectorEventC2S::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgProtectorEventC2S::CopyFrom(const MsgProtectorEventC2S& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgProtectorEventC2S::IsInitialized() const {

  return true;
}

void MsgProtectorEventC2S::Swap(MsgProtectorEventC2S* other) {
  if (other != this) {
    std::swap(msgtype_, other->msgtype_);
    std::swap(iggid_, other->iggid_);
    std::swap(uuid_, other->uuid_);
    std::swap(do_event_, other->do_event_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgProtectorEventC2S::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgProtectorEventC2S_descriptor_;
  metadata.reflection = MsgProtectorEventC2S_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace MsgPB

// @@protoc_insertion_point(global_scope)
