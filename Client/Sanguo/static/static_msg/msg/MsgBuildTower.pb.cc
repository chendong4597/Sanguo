// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MsgBuildTower.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "MsgBuildTower.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace MsgPB {

namespace {

const ::google::protobuf::Descriptor* MsgBuildTowerMsgErrMS2C_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgBuildTowerMsgErrMS2C_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgBuildTowerRepairC2MS_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgBuildTowerRepairC2MS_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgBuildTowerRepairMS2C_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgBuildTowerRepairMS2C_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgBuildTowerAppearanceMS2C_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgBuildTowerAppearanceMS2C_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgBuildTowerRepairSkipC2MS_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgBuildTowerRepairSkipC2MS_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgBuildTowerRepairSkipMS2C_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgBuildTowerRepairSkipMS2C_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgBuildTowerFunctionDataSummon_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgBuildTowerFunctionDataSummon_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgBuildTowerFunctionDataCrystalBuff_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgBuildTowerFunctionDataCrystalBuff_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgBuildTowerFunctionData_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgBuildTowerFunctionData_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgBuildTowerData_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgBuildTowerData_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgBuildTowerUpdate_C2MS_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgBuildTowerUpdate_C2MS_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgBuildTowerUpdateRes_MS2C_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgBuildTowerUpdateRes_MS2C_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgBuildTowerReform_C2MS_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgBuildTowerReform_C2MS_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgBuildTowerReformRes_MS2C_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgBuildTowerReformRes_MS2C_reflection_ = NULL;
const ::google::protobuf::Descriptor* TowerData2Client_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TowerData2Client_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgBuildTowerInfoListS2C_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgBuildTowerInfoListS2C_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgBuildTowerSetSoul_S2C_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgBuildTowerSetSoul_S2C_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgBuildTowerSetSoul_C2S_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgBuildTowerSetSoul_C2S_reflection_ = NULL;
const ::google::protobuf::Descriptor* TowerBuildSummonData_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TowerBuildSummonData_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgBuildTowerMotion_S2C_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgBuildTowerMotion_S2C_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgBuildTowerCollectSummon_S2C_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgBuildTowerCollectSummon_S2C_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgBuildTowerCrystalTran_CS2_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgBuildTowerCrystalTran_CS2_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgBuildTowerCrystalBuffUnlock_C2S_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgBuildTowerCrystalBuffUnlock_C2S_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgBuildTowerCrystalBuffUnlock_S2C_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgBuildTowerCrystalBuffUnlock_S2C_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgBuildTowerUpdateTowerPVPAirShip_C2MS_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgBuildTowerUpdateTowerPVPAirShip_C2MS_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgBuildTowerUpdateTowerPVPAirShip_MS2C_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgBuildTowerUpdateTowerPVPAirShip_MS2C_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgBuildTowerAdd_C2MS_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgBuildTowerAdd_C2MS_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgBuildTowerDel_C2MS_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgBuildTowerDel_C2MS_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgBuildTowerEvtReport_C2S_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgBuildTowerEvtReport_C2S_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgBuildTowerDelTowerData_C2S_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgBuildTowerDelTowerData_C2S_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgBuildTowerDelTowerData_S2C_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgBuildTowerDelTowerData_S2C_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgBuildTowerDelTowerData_MS2GS_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgBuildTowerDelTowerData_MS2GS_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgBuildTowerAddTowerData_C2S_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgBuildTowerAddTowerData_C2S_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgBuildTowerAddTowerData_S2C_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgBuildTowerAddTowerData_S2C_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgBuildTowerRecycleTowerData_C2S_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgBuildTowerRecycleTowerData_C2S_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgBuildTowerRecycleTowerData_S2C_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgBuildTowerRecycleTowerData_S2C_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* TOWERBUILDING_RESULT_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* TOWER_BUILD_STATE_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* TOWER_BUILD_FUNCTION_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* TOWER_EVT_TYPE_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_MsgBuildTower_2eproto() {
  protobuf_AddDesc_MsgBuildTower_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "MsgBuildTower.proto");
  GOOGLE_CHECK(file != NULL);
  MsgBuildTowerMsgErrMS2C_descriptor_ = file->message_type(0);
  static const int MsgBuildTowerMsgErrMS2C_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBuildTowerMsgErrMS2C, msgtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBuildTowerMsgErrMS2C, iggid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBuildTowerMsgErrMS2C, res_),
  };
  MsgBuildTowerMsgErrMS2C_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgBuildTowerMsgErrMS2C_descriptor_,
      MsgBuildTowerMsgErrMS2C::default_instance_,
      MsgBuildTowerMsgErrMS2C_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBuildTowerMsgErrMS2C, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBuildTowerMsgErrMS2C, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgBuildTowerMsgErrMS2C));
  MsgBuildTowerRepairC2MS_descriptor_ = file->message_type(1);
  static const int MsgBuildTowerRepairC2MS_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBuildTowerRepairC2MS, msgtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBuildTowerRepairC2MS, iggid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBuildTowerRepairC2MS, pos_x_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBuildTowerRepairC2MS, pos_y_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBuildTowerRepairC2MS, tower_uuid_),
  };
  MsgBuildTowerRepairC2MS_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgBuildTowerRepairC2MS_descriptor_,
      MsgBuildTowerRepairC2MS::default_instance_,
      MsgBuildTowerRepairC2MS_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBuildTowerRepairC2MS, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBuildTowerRepairC2MS, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgBuildTowerRepairC2MS));
  MsgBuildTowerRepairMS2C_descriptor_ = file->message_type(2);
  static const int MsgBuildTowerRepairMS2C_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBuildTowerRepairMS2C, msgtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBuildTowerRepairMS2C, iggid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBuildTowerRepairMS2C, pos_x_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBuildTowerRepairMS2C, pos_y_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBuildTowerRepairMS2C, tower_uuid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBuildTowerRepairMS2C, repair_time_),
  };
  MsgBuildTowerRepairMS2C_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgBuildTowerRepairMS2C_descriptor_,
      MsgBuildTowerRepairMS2C::default_instance_,
      MsgBuildTowerRepairMS2C_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBuildTowerRepairMS2C, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBuildTowerRepairMS2C, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgBuildTowerRepairMS2C));
  MsgBuildTowerAppearanceMS2C_descriptor_ = file->message_type(3);
  static const int MsgBuildTowerAppearanceMS2C_offsets_[17] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBuildTowerAppearanceMS2C, msgtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBuildTowerAppearanceMS2C, mapobjectid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBuildTowerAppearanceMS2C, posx_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBuildTowerAppearanceMS2C, posy_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBuildTowerAppearanceMS2C, estate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBuildTowerAppearanceMS2C, hp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBuildTowerAppearanceMS2C, repairbegin_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBuildTowerAppearanceMS2C, repairend_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBuildTowerAppearanceMS2C, pos_grid_x_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBuildTowerAppearanceMS2C, pos_grid_y_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBuildTowerAppearanceMS2C, level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBuildTowerAppearanceMS2C, group_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBuildTowerAppearanceMS2C, soul_uuid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBuildTowerAppearanceMS2C, owner_iggid_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBuildTowerAppearanceMS2C, tower_uuid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBuildTowerAppearanceMS2C, crystal_buff_cfgid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBuildTowerAppearanceMS2C, crystal_buff_start_time_),
  };
  MsgBuildTowerAppearanceMS2C_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgBuildTowerAppearanceMS2C_descriptor_,
      MsgBuildTowerAppearanceMS2C::default_instance_,
      MsgBuildTowerAppearanceMS2C_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBuildTowerAppearanceMS2C, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBuildTowerAppearanceMS2C, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgBuildTowerAppearanceMS2C));
  MsgBuildTowerRepairSkipC2MS_descriptor_ = file->message_type(4);
  static const int MsgBuildTowerRepairSkipC2MS_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBuildTowerRepairSkipC2MS, msgtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBuildTowerRepairSkipC2MS, iggid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBuildTowerRepairSkipC2MS, pos_x_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBuildTowerRepairSkipC2MS, pos_y_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBuildTowerRepairSkipC2MS, cash_left_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBuildTowerRepairSkipC2MS, tower_uuid_),
  };
  MsgBuildTowerRepairSkipC2MS_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgBuildTowerRepairSkipC2MS_descriptor_,
      MsgBuildTowerRepairSkipC2MS::default_instance_,
      MsgBuildTowerRepairSkipC2MS_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBuildTowerRepairSkipC2MS, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBuildTowerRepairSkipC2MS, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgBuildTowerRepairSkipC2MS));
  MsgBuildTowerRepairSkipMS2C_descriptor_ = file->message_type(5);
  static const int MsgBuildTowerRepairSkipMS2C_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBuildTowerRepairSkipMS2C, msgtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBuildTowerRepairSkipMS2C, iggid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBuildTowerRepairSkipMS2C, pos_x_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBuildTowerRepairSkipMS2C, pos_y_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBuildTowerRepairSkipMS2C, cash_cost_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBuildTowerRepairSkipMS2C, tower_uuid_),
  };
  MsgBuildTowerRepairSkipMS2C_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgBuildTowerRepairSkipMS2C_descriptor_,
      MsgBuildTowerRepairSkipMS2C::default_instance_,
      MsgBuildTowerRepairSkipMS2C_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBuildTowerRepairSkipMS2C, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBuildTowerRepairSkipMS2C, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgBuildTowerRepairSkipMS2C));
  MsgBuildTowerFunctionDataSummon_descriptor_ = file->message_type(6);
  static const int MsgBuildTowerFunctionDataSummon_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBuildTowerFunctionDataSummon, soul_uuid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBuildTowerFunctionDataSummon, soul_level_),
  };
  MsgBuildTowerFunctionDataSummon_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgBuildTowerFunctionDataSummon_descriptor_,
      MsgBuildTowerFunctionDataSummon::default_instance_,
      MsgBuildTowerFunctionDataSummon_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBuildTowerFunctionDataSummon, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBuildTowerFunctionDataSummon, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgBuildTowerFunctionDataSummon));
  MsgBuildTowerFunctionDataCrystalBuff_descriptor_ = file->message_type(7);
  static const int MsgBuildTowerFunctionDataCrystalBuff_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBuildTowerFunctionDataCrystalBuff, buff_start_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBuildTowerFunctionDataCrystalBuff, crystal_buff_cfgid_),
  };
  MsgBuildTowerFunctionDataCrystalBuff_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgBuildTowerFunctionDataCrystalBuff_descriptor_,
      MsgBuildTowerFunctionDataCrystalBuff::default_instance_,
      MsgBuildTowerFunctionDataCrystalBuff_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBuildTowerFunctionDataCrystalBuff, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBuildTowerFunctionDataCrystalBuff, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgBuildTowerFunctionDataCrystalBuff));
  MsgBuildTowerFunctionData_descriptor_ = file->message_type(8);
  static const int MsgBuildTowerFunctionData_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBuildTowerFunctionData, summon_data_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBuildTowerFunctionData, crystal_buff_),
  };
  MsgBuildTowerFunctionData_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgBuildTowerFunctionData_descriptor_,
      MsgBuildTowerFunctionData::default_instance_,
      MsgBuildTowerFunctionData_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBuildTowerFunctionData, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBuildTowerFunctionData, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgBuildTowerFunctionData));
  MsgBuildTowerData_descriptor_ = file->message_type(9);
  static const int MsgBuildTowerData_offsets_[15] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBuildTowerData, uuid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBuildTowerData, mapid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBuildTowerData, templateid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBuildTowerData, pos_x_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBuildTowerData, pos_y_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBuildTowerData, hp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBuildTowerData, mp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBuildTowerData, repair_begin_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBuildTowerData, repair_end_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBuildTowerData, repair_hp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBuildTowerData, tower_attr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBuildTowerData, level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBuildTowerData, level_info_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBuildTowerData, function_data_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBuildTowerData, dirty_),
  };
  MsgBuildTowerData_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgBuildTowerData_descriptor_,
      MsgBuildTowerData::default_instance_,
      MsgBuildTowerData_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBuildTowerData, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBuildTowerData, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgBuildTowerData));
  MsgBuildTowerUpdate_C2MS_descriptor_ = file->message_type(10);
  static const int MsgBuildTowerUpdate_C2MS_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBuildTowerUpdate_C2MS, msgtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBuildTowerUpdate_C2MS, iggid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBuildTowerUpdate_C2MS, pos_x_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBuildTowerUpdate_C2MS, pos_y_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBuildTowerUpdate_C2MS, level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBuildTowerUpdate_C2MS, tower_uuid_),
  };
  MsgBuildTowerUpdate_C2MS_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgBuildTowerUpdate_C2MS_descriptor_,
      MsgBuildTowerUpdate_C2MS::default_instance_,
      MsgBuildTowerUpdate_C2MS_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBuildTowerUpdate_C2MS, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBuildTowerUpdate_C2MS, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgBuildTowerUpdate_C2MS));
  MsgBuildTowerUpdateRes_MS2C_descriptor_ = file->message_type(11);
  static const int MsgBuildTowerUpdateRes_MS2C_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBuildTowerUpdateRes_MS2C, msgtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBuildTowerUpdateRes_MS2C, iggid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBuildTowerUpdateRes_MS2C, pos_x_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBuildTowerUpdateRes_MS2C, pos_y_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBuildTowerUpdateRes_MS2C, templateid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBuildTowerUpdateRes_MS2C, tower_uuid_),
  };
  MsgBuildTowerUpdateRes_MS2C_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgBuildTowerUpdateRes_MS2C_descriptor_,
      MsgBuildTowerUpdateRes_MS2C::default_instance_,
      MsgBuildTowerUpdateRes_MS2C_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBuildTowerUpdateRes_MS2C, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBuildTowerUpdateRes_MS2C, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgBuildTowerUpdateRes_MS2C));
  MsgBuildTowerReform_C2MS_descriptor_ = file->message_type(12);
  static const int MsgBuildTowerReform_C2MS_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBuildTowerReform_C2MS, msgtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBuildTowerReform_C2MS, iggid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBuildTowerReform_C2MS, pos_x_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBuildTowerReform_C2MS, pos_y_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBuildTowerReform_C2MS, build_type_reform_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBuildTowerReform_C2MS, tower_uuid_),
  };
  MsgBuildTowerReform_C2MS_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgBuildTowerReform_C2MS_descriptor_,
      MsgBuildTowerReform_C2MS::default_instance_,
      MsgBuildTowerReform_C2MS_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBuildTowerReform_C2MS, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBuildTowerReform_C2MS, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgBuildTowerReform_C2MS));
  MsgBuildTowerReformRes_MS2C_descriptor_ = file->message_type(13);
  static const int MsgBuildTowerReformRes_MS2C_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBuildTowerReformRes_MS2C, msgtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBuildTowerReformRes_MS2C, iggid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBuildTowerReformRes_MS2C, pos_x_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBuildTowerReformRes_MS2C, pos_y_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBuildTowerReformRes_MS2C, build_type_reform_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBuildTowerReformRes_MS2C, reform_level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBuildTowerReformRes_MS2C, tower_uuid_),
  };
  MsgBuildTowerReformRes_MS2C_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgBuildTowerReformRes_MS2C_descriptor_,
      MsgBuildTowerReformRes_MS2C::default_instance_,
      MsgBuildTowerReformRes_MS2C_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBuildTowerReformRes_MS2C, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBuildTowerReformRes_MS2C, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgBuildTowerReformRes_MS2C));
  TowerData2Client_descriptor_ = file->message_type(14);
  static const int TowerData2Client_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TowerData2Client, mapobjectid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TowerData2Client, tower_data_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TowerData2Client, is_towerpvp_ship_),
  };
  TowerData2Client_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TowerData2Client_descriptor_,
      TowerData2Client::default_instance_,
      TowerData2Client_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TowerData2Client, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TowerData2Client, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TowerData2Client));
  MsgBuildTowerInfoListS2C_descriptor_ = file->message_type(15);
  static const int MsgBuildTowerInfoListS2C_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBuildTowerInfoListS2C, msgtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBuildTowerInfoListS2C, iggid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBuildTowerInfoListS2C, tower_data_lst_),
  };
  MsgBuildTowerInfoListS2C_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgBuildTowerInfoListS2C_descriptor_,
      MsgBuildTowerInfoListS2C::default_instance_,
      MsgBuildTowerInfoListS2C_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBuildTowerInfoListS2C, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBuildTowerInfoListS2C, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgBuildTowerInfoListS2C));
  MsgBuildTowerSetSoul_S2C_descriptor_ = file->message_type(16);
  static const int MsgBuildTowerSetSoul_S2C_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBuildTowerSetSoul_S2C, msgtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBuildTowerSetSoul_S2C, iggid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBuildTowerSetSoul_S2C, pos_x_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBuildTowerSetSoul_S2C, pos_y_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBuildTowerSetSoul_S2C, soul_uuid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBuildTowerSetSoul_S2C, tower_uuid_),
  };
  MsgBuildTowerSetSoul_S2C_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgBuildTowerSetSoul_S2C_descriptor_,
      MsgBuildTowerSetSoul_S2C::default_instance_,
      MsgBuildTowerSetSoul_S2C_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBuildTowerSetSoul_S2C, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBuildTowerSetSoul_S2C, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgBuildTowerSetSoul_S2C));
  MsgBuildTowerSetSoul_C2S_descriptor_ = file->message_type(17);
  static const int MsgBuildTowerSetSoul_C2S_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBuildTowerSetSoul_C2S, msgtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBuildTowerSetSoul_C2S, iggid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBuildTowerSetSoul_C2S, pos_x_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBuildTowerSetSoul_C2S, pos_y_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBuildTowerSetSoul_C2S, soul_uuid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBuildTowerSetSoul_C2S, tower_uuid_),
  };
  MsgBuildTowerSetSoul_C2S_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgBuildTowerSetSoul_C2S_descriptor_,
      MsgBuildTowerSetSoul_C2S::default_instance_,
      MsgBuildTowerSetSoul_C2S_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBuildTowerSetSoul_C2S, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBuildTowerSetSoul_C2S, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgBuildTowerSetSoul_C2S));
  TowerBuildSummonData_descriptor_ = file->message_type(18);
  static const int TowerBuildSummonData_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TowerBuildSummonData, map_obj_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TowerBuildSummonData, resummon_cd_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TowerBuildSummonData, total_mob_count_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TowerBuildSummonData, cur_mob_count_),
  };
  TowerBuildSummonData_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TowerBuildSummonData_descriptor_,
      TowerBuildSummonData::default_instance_,
      TowerBuildSummonData_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TowerBuildSummonData, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TowerBuildSummonData, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TowerBuildSummonData));
  MsgBuildTowerMotion_S2C_descriptor_ = file->message_type(19);
  static const int MsgBuildTowerMotion_S2C_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBuildTowerMotion_S2C, msgtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBuildTowerMotion_S2C, iggid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBuildTowerMotion_S2C, tower_uuid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBuildTowerMotion_S2C, mapobjectid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBuildTowerMotion_S2C, pos_x_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBuildTowerMotion_S2C, pos_y_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBuildTowerMotion_S2C, summon_data_),
  };
  MsgBuildTowerMotion_S2C_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgBuildTowerMotion_S2C_descriptor_,
      MsgBuildTowerMotion_S2C::default_instance_,
      MsgBuildTowerMotion_S2C_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBuildTowerMotion_S2C, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBuildTowerMotion_S2C, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgBuildTowerMotion_S2C));
  MsgBuildTowerCollectSummon_S2C_descriptor_ = file->message_type(20);
  static const int MsgBuildTowerCollectSummon_S2C_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBuildTowerCollectSummon_S2C, msgtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBuildTowerCollectSummon_S2C, iggid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBuildTowerCollectSummon_S2C, tower_uuid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBuildTowerCollectSummon_S2C, mapobjectid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBuildTowerCollectSummon_S2C, pos_x_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBuildTowerCollectSummon_S2C, pos_y_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBuildTowerCollectSummon_S2C, mob_obj_id_),
  };
  MsgBuildTowerCollectSummon_S2C_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgBuildTowerCollectSummon_S2C_descriptor_,
      MsgBuildTowerCollectSummon_S2C::default_instance_,
      MsgBuildTowerCollectSummon_S2C_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBuildTowerCollectSummon_S2C, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBuildTowerCollectSummon_S2C, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgBuildTowerCollectSummon_S2C));
  MsgBuildTowerCrystalTran_CS2_descriptor_ = file->message_type(21);
  static const int MsgBuildTowerCrystalTran_CS2_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBuildTowerCrystalTran_CS2, msgtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBuildTowerCrystalTran_CS2, iggid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBuildTowerCrystalTran_CS2, mapid_),
  };
  MsgBuildTowerCrystalTran_CS2_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgBuildTowerCrystalTran_CS2_descriptor_,
      MsgBuildTowerCrystalTran_CS2::default_instance_,
      MsgBuildTowerCrystalTran_CS2_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBuildTowerCrystalTran_CS2, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBuildTowerCrystalTran_CS2, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgBuildTowerCrystalTran_CS2));
  MsgBuildTowerCrystalBuffUnlock_C2S_descriptor_ = file->message_type(22);
  static const int MsgBuildTowerCrystalBuffUnlock_C2S_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBuildTowerCrystalBuffUnlock_C2S, msgtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBuildTowerCrystalBuffUnlock_C2S, iggid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBuildTowerCrystalBuffUnlock_C2S, pos_x_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBuildTowerCrystalBuffUnlock_C2S, pos_y_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBuildTowerCrystalBuffUnlock_C2S, tower_uuid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBuildTowerCrystalBuffUnlock_C2S, crystal_buff_cfgid_),
  };
  MsgBuildTowerCrystalBuffUnlock_C2S_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgBuildTowerCrystalBuffUnlock_C2S_descriptor_,
      MsgBuildTowerCrystalBuffUnlock_C2S::default_instance_,
      MsgBuildTowerCrystalBuffUnlock_C2S_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBuildTowerCrystalBuffUnlock_C2S, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBuildTowerCrystalBuffUnlock_C2S, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgBuildTowerCrystalBuffUnlock_C2S));
  MsgBuildTowerCrystalBuffUnlock_S2C_descriptor_ = file->message_type(23);
  static const int MsgBuildTowerCrystalBuffUnlock_S2C_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBuildTowerCrystalBuffUnlock_S2C, msgtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBuildTowerCrystalBuffUnlock_S2C, iggid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBuildTowerCrystalBuffUnlock_S2C, pos_x_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBuildTowerCrystalBuffUnlock_S2C, pos_y_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBuildTowerCrystalBuffUnlock_S2C, tower_uuid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBuildTowerCrystalBuffUnlock_S2C, crystal_buff_cfgid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBuildTowerCrystalBuffUnlock_S2C, crystal_buff_start_time_),
  };
  MsgBuildTowerCrystalBuffUnlock_S2C_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgBuildTowerCrystalBuffUnlock_S2C_descriptor_,
      MsgBuildTowerCrystalBuffUnlock_S2C::default_instance_,
      MsgBuildTowerCrystalBuffUnlock_S2C_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBuildTowerCrystalBuffUnlock_S2C, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBuildTowerCrystalBuffUnlock_S2C, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgBuildTowerCrystalBuffUnlock_S2C));
  MsgBuildTowerUpdateTowerPVPAirShip_C2MS_descriptor_ = file->message_type(24);
  static const int MsgBuildTowerUpdateTowerPVPAirShip_C2MS_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBuildTowerUpdateTowerPVPAirShip_C2MS, msgtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBuildTowerUpdateTowerPVPAirShip_C2MS, iggid_),
  };
  MsgBuildTowerUpdateTowerPVPAirShip_C2MS_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgBuildTowerUpdateTowerPVPAirShip_C2MS_descriptor_,
      MsgBuildTowerUpdateTowerPVPAirShip_C2MS::default_instance_,
      MsgBuildTowerUpdateTowerPVPAirShip_C2MS_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBuildTowerUpdateTowerPVPAirShip_C2MS, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBuildTowerUpdateTowerPVPAirShip_C2MS, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgBuildTowerUpdateTowerPVPAirShip_C2MS));
  MsgBuildTowerUpdateTowerPVPAirShip_MS2C_descriptor_ = file->message_type(25);
  static const int MsgBuildTowerUpdateTowerPVPAirShip_MS2C_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBuildTowerUpdateTowerPVPAirShip_MS2C, msgtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBuildTowerUpdateTowerPVPAirShip_MS2C, iggid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBuildTowerUpdateTowerPVPAirShip_MS2C, new_level_),
  };
  MsgBuildTowerUpdateTowerPVPAirShip_MS2C_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgBuildTowerUpdateTowerPVPAirShip_MS2C_descriptor_,
      MsgBuildTowerUpdateTowerPVPAirShip_MS2C::default_instance_,
      MsgBuildTowerUpdateTowerPVPAirShip_MS2C_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBuildTowerUpdateTowerPVPAirShip_MS2C, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBuildTowerUpdateTowerPVPAirShip_MS2C, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgBuildTowerUpdateTowerPVPAirShip_MS2C));
  MsgBuildTowerAdd_C2MS_descriptor_ = file->message_type(26);
  static const int MsgBuildTowerAdd_C2MS_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBuildTowerAdd_C2MS, msgtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBuildTowerAdd_C2MS, iggid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBuildTowerAdd_C2MS, tower_),
  };
  MsgBuildTowerAdd_C2MS_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgBuildTowerAdd_C2MS_descriptor_,
      MsgBuildTowerAdd_C2MS::default_instance_,
      MsgBuildTowerAdd_C2MS_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBuildTowerAdd_C2MS, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBuildTowerAdd_C2MS, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgBuildTowerAdd_C2MS));
  MsgBuildTowerDel_C2MS_descriptor_ = file->message_type(27);
  static const int MsgBuildTowerDel_C2MS_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBuildTowerDel_C2MS, msgtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBuildTowerDel_C2MS, iggid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBuildTowerDel_C2MS, tower_),
  };
  MsgBuildTowerDel_C2MS_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgBuildTowerDel_C2MS_descriptor_,
      MsgBuildTowerDel_C2MS::default_instance_,
      MsgBuildTowerDel_C2MS_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBuildTowerDel_C2MS, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBuildTowerDel_C2MS, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgBuildTowerDel_C2MS));
  MsgBuildTowerEvtReport_C2S_descriptor_ = file->message_type(28);
  static const int MsgBuildTowerEvtReport_C2S_offsets_[11] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBuildTowerEvtReport_C2S, msgtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBuildTowerEvtReport_C2S, iggid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBuildTowerEvtReport_C2S, evt_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBuildTowerEvtReport_C2S, evt_long_data_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBuildTowerEvtReport_C2S, evt_data_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBuildTowerEvtReport_C2S, uuid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBuildTowerEvtReport_C2S, mapid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBuildTowerEvtReport_C2S, templateid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBuildTowerEvtReport_C2S, build_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBuildTowerEvtReport_C2S, pos_x_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBuildTowerEvtReport_C2S, pos_y_),
  };
  MsgBuildTowerEvtReport_C2S_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgBuildTowerEvtReport_C2S_descriptor_,
      MsgBuildTowerEvtReport_C2S::default_instance_,
      MsgBuildTowerEvtReport_C2S_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBuildTowerEvtReport_C2S, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBuildTowerEvtReport_C2S, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgBuildTowerEvtReport_C2S));
  MsgBuildTowerDelTowerData_C2S_descriptor_ = file->message_type(29);
  static const int MsgBuildTowerDelTowerData_C2S_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBuildTowerDelTowerData_C2S, msgtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBuildTowerDelTowerData_C2S, iggid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBuildTowerDelTowerData_C2S, uuid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBuildTowerDelTowerData_C2S, digid_),
  };
  MsgBuildTowerDelTowerData_C2S_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgBuildTowerDelTowerData_C2S_descriptor_,
      MsgBuildTowerDelTowerData_C2S::default_instance_,
      MsgBuildTowerDelTowerData_C2S_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBuildTowerDelTowerData_C2S, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBuildTowerDelTowerData_C2S, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgBuildTowerDelTowerData_C2S));
  MsgBuildTowerDelTowerData_S2C_descriptor_ = file->message_type(30);
  static const int MsgBuildTowerDelTowerData_S2C_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBuildTowerDelTowerData_S2C, msgtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBuildTowerDelTowerData_S2C, iggid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBuildTowerDelTowerData_S2C, uuid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBuildTowerDelTowerData_S2C, res_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBuildTowerDelTowerData_S2C, pos_x_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBuildTowerDelTowerData_S2C, pos_y_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBuildTowerDelTowerData_S2C, digid_),
  };
  MsgBuildTowerDelTowerData_S2C_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgBuildTowerDelTowerData_S2C_descriptor_,
      MsgBuildTowerDelTowerData_S2C::default_instance_,
      MsgBuildTowerDelTowerData_S2C_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBuildTowerDelTowerData_S2C, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBuildTowerDelTowerData_S2C, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgBuildTowerDelTowerData_S2C));
  MsgBuildTowerDelTowerData_MS2GS_descriptor_ = file->message_type(31);
  static const int MsgBuildTowerDelTowerData_MS2GS_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBuildTowerDelTowerData_MS2GS, msgtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBuildTowerDelTowerData_MS2GS, iggid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBuildTowerDelTowerData_MS2GS, uuid_),
  };
  MsgBuildTowerDelTowerData_MS2GS_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgBuildTowerDelTowerData_MS2GS_descriptor_,
      MsgBuildTowerDelTowerData_MS2GS::default_instance_,
      MsgBuildTowerDelTowerData_MS2GS_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBuildTowerDelTowerData_MS2GS, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBuildTowerDelTowerData_MS2GS, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgBuildTowerDelTowerData_MS2GS));
  MsgBuildTowerAddTowerData_C2S_descriptor_ = file->message_type(32);
  static const int MsgBuildTowerAddTowerData_C2S_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBuildTowerAddTowerData_C2S, msgtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBuildTowerAddTowerData_C2S, iggid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBuildTowerAddTowerData_C2S, item_uuid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBuildTowerAddTowerData_C2S, pos_x_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBuildTowerAddTowerData_C2S, pos_y_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBuildTowerAddTowerData_C2S, tower_templateid_),
  };
  MsgBuildTowerAddTowerData_C2S_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgBuildTowerAddTowerData_C2S_descriptor_,
      MsgBuildTowerAddTowerData_C2S::default_instance_,
      MsgBuildTowerAddTowerData_C2S_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBuildTowerAddTowerData_C2S, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBuildTowerAddTowerData_C2S, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgBuildTowerAddTowerData_C2S));
  MsgBuildTowerAddTowerData_S2C_descriptor_ = file->message_type(33);
  static const int MsgBuildTowerAddTowerData_S2C_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBuildTowerAddTowerData_S2C, msgtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBuildTowerAddTowerData_S2C, iggid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBuildTowerAddTowerData_S2C, tower_uuid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBuildTowerAddTowerData_S2C, tower_data_),
  };
  MsgBuildTowerAddTowerData_S2C_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgBuildTowerAddTowerData_S2C_descriptor_,
      MsgBuildTowerAddTowerData_S2C::default_instance_,
      MsgBuildTowerAddTowerData_S2C_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBuildTowerAddTowerData_S2C, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBuildTowerAddTowerData_S2C, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgBuildTowerAddTowerData_S2C));
  MsgBuildTowerRecycleTowerData_C2S_descriptor_ = file->message_type(34);
  static const int MsgBuildTowerRecycleTowerData_C2S_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBuildTowerRecycleTowerData_C2S, msgtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBuildTowerRecycleTowerData_C2S, iggid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBuildTowerRecycleTowerData_C2S, uuid_),
  };
  MsgBuildTowerRecycleTowerData_C2S_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgBuildTowerRecycleTowerData_C2S_descriptor_,
      MsgBuildTowerRecycleTowerData_C2S::default_instance_,
      MsgBuildTowerRecycleTowerData_C2S_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBuildTowerRecycleTowerData_C2S, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBuildTowerRecycleTowerData_C2S, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgBuildTowerRecycleTowerData_C2S));
  MsgBuildTowerRecycleTowerData_S2C_descriptor_ = file->message_type(35);
  static const int MsgBuildTowerRecycleTowerData_S2C_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBuildTowerRecycleTowerData_S2C, msgtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBuildTowerRecycleTowerData_S2C, iggid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBuildTowerRecycleTowerData_S2C, uuid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBuildTowerRecycleTowerData_S2C, res_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBuildTowerRecycleTowerData_S2C, pos_x_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBuildTowerRecycleTowerData_S2C, pos_y_),
  };
  MsgBuildTowerRecycleTowerData_S2C_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgBuildTowerRecycleTowerData_S2C_descriptor_,
      MsgBuildTowerRecycleTowerData_S2C::default_instance_,
      MsgBuildTowerRecycleTowerData_S2C_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBuildTowerRecycleTowerData_S2C, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBuildTowerRecycleTowerData_S2C, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgBuildTowerRecycleTowerData_S2C));
  TOWERBUILDING_RESULT_descriptor_ = file->enum_type(0);
  TOWER_BUILD_STATE_descriptor_ = file->enum_type(1);
  TOWER_BUILD_FUNCTION_descriptor_ = file->enum_type(2);
  TOWER_EVT_TYPE_descriptor_ = file->enum_type(3);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_MsgBuildTower_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgBuildTowerMsgErrMS2C_descriptor_, &MsgBuildTowerMsgErrMS2C::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgBuildTowerRepairC2MS_descriptor_, &MsgBuildTowerRepairC2MS::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgBuildTowerRepairMS2C_descriptor_, &MsgBuildTowerRepairMS2C::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgBuildTowerAppearanceMS2C_descriptor_, &MsgBuildTowerAppearanceMS2C::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgBuildTowerRepairSkipC2MS_descriptor_, &MsgBuildTowerRepairSkipC2MS::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgBuildTowerRepairSkipMS2C_descriptor_, &MsgBuildTowerRepairSkipMS2C::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgBuildTowerFunctionDataSummon_descriptor_, &MsgBuildTowerFunctionDataSummon::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgBuildTowerFunctionDataCrystalBuff_descriptor_, &MsgBuildTowerFunctionDataCrystalBuff::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgBuildTowerFunctionData_descriptor_, &MsgBuildTowerFunctionData::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgBuildTowerData_descriptor_, &MsgBuildTowerData::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgBuildTowerUpdate_C2MS_descriptor_, &MsgBuildTowerUpdate_C2MS::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgBuildTowerUpdateRes_MS2C_descriptor_, &MsgBuildTowerUpdateRes_MS2C::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgBuildTowerReform_C2MS_descriptor_, &MsgBuildTowerReform_C2MS::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgBuildTowerReformRes_MS2C_descriptor_, &MsgBuildTowerReformRes_MS2C::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TowerData2Client_descriptor_, &TowerData2Client::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgBuildTowerInfoListS2C_descriptor_, &MsgBuildTowerInfoListS2C::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgBuildTowerSetSoul_S2C_descriptor_, &MsgBuildTowerSetSoul_S2C::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgBuildTowerSetSoul_C2S_descriptor_, &MsgBuildTowerSetSoul_C2S::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TowerBuildSummonData_descriptor_, &TowerBuildSummonData::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgBuildTowerMotion_S2C_descriptor_, &MsgBuildTowerMotion_S2C::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgBuildTowerCollectSummon_S2C_descriptor_, &MsgBuildTowerCollectSummon_S2C::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgBuildTowerCrystalTran_CS2_descriptor_, &MsgBuildTowerCrystalTran_CS2::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgBuildTowerCrystalBuffUnlock_C2S_descriptor_, &MsgBuildTowerCrystalBuffUnlock_C2S::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgBuildTowerCrystalBuffUnlock_S2C_descriptor_, &MsgBuildTowerCrystalBuffUnlock_S2C::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgBuildTowerUpdateTowerPVPAirShip_C2MS_descriptor_, &MsgBuildTowerUpdateTowerPVPAirShip_C2MS::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgBuildTowerUpdateTowerPVPAirShip_MS2C_descriptor_, &MsgBuildTowerUpdateTowerPVPAirShip_MS2C::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgBuildTowerAdd_C2MS_descriptor_, &MsgBuildTowerAdd_C2MS::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgBuildTowerDel_C2MS_descriptor_, &MsgBuildTowerDel_C2MS::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgBuildTowerEvtReport_C2S_descriptor_, &MsgBuildTowerEvtReport_C2S::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgBuildTowerDelTowerData_C2S_descriptor_, &MsgBuildTowerDelTowerData_C2S::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgBuildTowerDelTowerData_S2C_descriptor_, &MsgBuildTowerDelTowerData_S2C::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgBuildTowerDelTowerData_MS2GS_descriptor_, &MsgBuildTowerDelTowerData_MS2GS::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgBuildTowerAddTowerData_C2S_descriptor_, &MsgBuildTowerAddTowerData_C2S::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgBuildTowerAddTowerData_S2C_descriptor_, &MsgBuildTowerAddTowerData_S2C::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgBuildTowerRecycleTowerData_C2S_descriptor_, &MsgBuildTowerRecycleTowerData_C2S::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgBuildTowerRecycleTowerData_S2C_descriptor_, &MsgBuildTowerRecycleTowerData_S2C::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_MsgBuildTower_2eproto() {
  delete MsgBuildTowerMsgErrMS2C::default_instance_;
  delete MsgBuildTowerMsgErrMS2C_reflection_;
  delete MsgBuildTowerRepairC2MS::default_instance_;
  delete MsgBuildTowerRepairC2MS_reflection_;
  delete MsgBuildTowerRepairMS2C::default_instance_;
  delete MsgBuildTowerRepairMS2C_reflection_;
  delete MsgBuildTowerAppearanceMS2C::default_instance_;
  delete MsgBuildTowerAppearanceMS2C_reflection_;
  delete MsgBuildTowerRepairSkipC2MS::default_instance_;
  delete MsgBuildTowerRepairSkipC2MS_reflection_;
  delete MsgBuildTowerRepairSkipMS2C::default_instance_;
  delete MsgBuildTowerRepairSkipMS2C_reflection_;
  delete MsgBuildTowerFunctionDataSummon::default_instance_;
  delete MsgBuildTowerFunctionDataSummon_reflection_;
  delete MsgBuildTowerFunctionDataCrystalBuff::default_instance_;
  delete MsgBuildTowerFunctionDataCrystalBuff_reflection_;
  delete MsgBuildTowerFunctionData::default_instance_;
  delete MsgBuildTowerFunctionData_reflection_;
  delete MsgBuildTowerData::default_instance_;
  delete MsgBuildTowerData_reflection_;
  delete MsgBuildTowerUpdate_C2MS::default_instance_;
  delete MsgBuildTowerUpdate_C2MS_reflection_;
  delete MsgBuildTowerUpdateRes_MS2C::default_instance_;
  delete MsgBuildTowerUpdateRes_MS2C_reflection_;
  delete MsgBuildTowerReform_C2MS::default_instance_;
  delete MsgBuildTowerReform_C2MS_reflection_;
  delete MsgBuildTowerReformRes_MS2C::default_instance_;
  delete MsgBuildTowerReformRes_MS2C_reflection_;
  delete TowerData2Client::default_instance_;
  delete TowerData2Client_reflection_;
  delete MsgBuildTowerInfoListS2C::default_instance_;
  delete MsgBuildTowerInfoListS2C_reflection_;
  delete MsgBuildTowerSetSoul_S2C::default_instance_;
  delete MsgBuildTowerSetSoul_S2C_reflection_;
  delete MsgBuildTowerSetSoul_C2S::default_instance_;
  delete MsgBuildTowerSetSoul_C2S_reflection_;
  delete TowerBuildSummonData::default_instance_;
  delete TowerBuildSummonData_reflection_;
  delete MsgBuildTowerMotion_S2C::default_instance_;
  delete MsgBuildTowerMotion_S2C_reflection_;
  delete MsgBuildTowerCollectSummon_S2C::default_instance_;
  delete MsgBuildTowerCollectSummon_S2C_reflection_;
  delete MsgBuildTowerCrystalTran_CS2::default_instance_;
  delete MsgBuildTowerCrystalTran_CS2_reflection_;
  delete MsgBuildTowerCrystalBuffUnlock_C2S::default_instance_;
  delete MsgBuildTowerCrystalBuffUnlock_C2S_reflection_;
  delete MsgBuildTowerCrystalBuffUnlock_S2C::default_instance_;
  delete MsgBuildTowerCrystalBuffUnlock_S2C_reflection_;
  delete MsgBuildTowerUpdateTowerPVPAirShip_C2MS::default_instance_;
  delete MsgBuildTowerUpdateTowerPVPAirShip_C2MS_reflection_;
  delete MsgBuildTowerUpdateTowerPVPAirShip_MS2C::default_instance_;
  delete MsgBuildTowerUpdateTowerPVPAirShip_MS2C_reflection_;
  delete MsgBuildTowerAdd_C2MS::default_instance_;
  delete MsgBuildTowerAdd_C2MS_reflection_;
  delete MsgBuildTowerDel_C2MS::default_instance_;
  delete MsgBuildTowerDel_C2MS_reflection_;
  delete MsgBuildTowerEvtReport_C2S::default_instance_;
  delete MsgBuildTowerEvtReport_C2S_reflection_;
  delete MsgBuildTowerDelTowerData_C2S::default_instance_;
  delete MsgBuildTowerDelTowerData_C2S_reflection_;
  delete MsgBuildTowerDelTowerData_S2C::default_instance_;
  delete MsgBuildTowerDelTowerData_S2C_reflection_;
  delete MsgBuildTowerDelTowerData_MS2GS::default_instance_;
  delete MsgBuildTowerDelTowerData_MS2GS_reflection_;
  delete MsgBuildTowerAddTowerData_C2S::default_instance_;
  delete MsgBuildTowerAddTowerData_C2S_reflection_;
  delete MsgBuildTowerAddTowerData_S2C::default_instance_;
  delete MsgBuildTowerAddTowerData_S2C_reflection_;
  delete MsgBuildTowerRecycleTowerData_C2S::default_instance_;
  delete MsgBuildTowerRecycleTowerData_C2S_reflection_;
  delete MsgBuildTowerRecycleTowerData_S2C::default_instance_;
  delete MsgBuildTowerRecycleTowerData_S2C_reflection_;
}

void protobuf_AddDesc_MsgBuildTower_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::MsgPB::protobuf_AddDesc_MsgType_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\023MsgBuildTower.proto\022\005MsgPB\032\rMsgType.pr"
    "oto\"\221\001\n\027MsgBuildTowerMsgErrMS2C\022=\n\007msgTy"
    "pe\030\001 \001(\0162\017.MsgPB.EMsgType:\033_MSG_BUILDTOW"
    "ER_MSGERR_MS2C\022\r\n\005iggid\030\002 \001(\003\022(\n\003res\030\003 \001"
    "(\0162\033.MsgPB.TOWERBUILDING_RESULT\"\231\001\n\027MsgB"
    "uildTowerRepairC2MS\022=\n\007msgType\030\001 \001(\0162\017.M"
    "sgPB.EMsgType:\033_MSG_BUILDTOWER_REPAIR_C2"
    "MS\022\r\n\005iggid\030\002 \001(\003\022\r\n\005pos_x\030\003 \001(\005\022\r\n\005pos_"
    "y\030\004 \001(\005\022\022\n\ntower_uuid\030\005 \001(\003\"\256\001\n\027MsgBuild"
    "TowerRepairMS2C\022=\n\007msgType\030\001 \001(\0162\017.MsgPB"
    ".EMsgType:\033_MSG_BUILDTOWER_REPAIR_MS2C\022\r"
    "\n\005iggid\030\002 \001(\003\022\r\n\005pos_x\030\003 \001(\005\022\r\n\005pos_y\030\004 "
    "\001(\005\022\022\n\ntower_uuid\030\005 \001(\003\022\023\n\013repair_time\030\006"
    " \001(\005\"\264\003\n\033MsgBuildTowerAppearanceMS2C\022A\n\007"
    "msgType\030\001 \001(\0162\017.MsgPB.EMsgType:\037_MSG_BUI"
    "LDTOWER_APPEARANCE_MS2C\022\023\n\013mapobjectid\030\003"
    " \001(\005\022\014\n\004posx\030\004 \001(\005\022\014\n\004posy\030\005 \001(\005\022(\n\006esta"
    "te\030\006 \001(\0162\030.MsgPB.TOWER_BUILD_STATE\022\n\n\002hp"
    "\030\007 \001(\005\022\023\n\013repairbegin\030\010 \001(\003\022\021\n\trepairend"
    "\030\t \001(\003\022\022\n\npos_grid_x\030\n \001(\005\022\022\n\npos_grid_y"
    "\030\013 \001(\005\022\r\n\005level\030\014 \001(\005\022\020\n\010group_id\030\r \001(\005\022"
    "\021\n\tsoul_uuid\030\016 \001(\003\022\026\n\016owner_iggid_id\030\017 \001"
    "(\003\022\022\n\ntower_uuid\030\020 \001(\003\022\032\n\022crystal_buff_c"
    "fgid\030\021 \001(\005\022\037\n\027crystal_buff_start_time\030\022 "
    "\001(\003\"\265\001\n\033MsgBuildTowerRepairSkipC2MS\022B\n\007m"
    "sgType\030\001 \001(\0162\017.MsgPB.EMsgType: _MSG_BUIL"
    "DTOWER_REPAIR_SKIP_C2MS\022\r\n\005iggid\030\002 \001(\003\022\r"
    "\n\005pos_x\030\003 \001(\005\022\r\n\005pos_y\030\004 \001(\005\022\021\n\tcash_lef"
    "t\030\005 \001(\005\022\022\n\ntower_uuid\030\006 \001(\003\"\265\001\n\033MsgBuild"
    "TowerRepairSkipMS2C\022B\n\007msgType\030\001 \001(\0162\017.M"
    "sgPB.EMsgType: _MSG_BUILDTOWER_REPAIR_SK"
    "IP_MS2C\022\r\n\005iggid\030\002 \001(\003\022\r\n\005pos_x\030\003 \001(\005\022\r\n"
    "\005pos_y\030\004 \001(\005\022\021\n\tcash_cost\030\005 \001(\005\022\022\n\ntower"
    "_uuid\030\006 \001(\003\"P\n\037MsgBuildTowerFunctionData"
    "Summon\022\025\n\tsoul_uuid\030\001 \001(\003:\002-1\022\026\n\nsoul_le"
    "vel\030\002 \001(\005:\002-1\"c\n$MsgBuildTowerFunctionDa"
    "taCrystalBuff\022\033\n\017buff_start_time\030\001 \001(\003:\002"
    "-1\022\036\n\022crystal_buff_cfgid\030\002 \001(\005:\002-1\"\233\001\n\031M"
    "sgBuildTowerFunctionData\022;\n\013summon_data\030"
    "\001 \001(\0132&.MsgPB.MsgBuildTowerFunctionDataS"
    "ummon\022A\n\014crystal_buff\030\002 \001(\0132+.MsgPB.MsgB"
    "uildTowerFunctionDataCrystalBuff\"\266\002\n\021Msg"
    "BuildTowerData\022\014\n\004uuid\030\001 \001(\003\022\r\n\005mapid\030\002 "
    "\001(\005\022\022\n\ntemplateid\030\003 \001(\005\022\r\n\005pos_x\030\004 \001(\005\022\r"
    "\n\005pos_y\030\005 \001(\005\022\n\n\002hp\030\006 \001(\005\022\n\n\002mp\030\007 \001(\005\022\024\n"
    "\014repair_begin\030\010 \001(\003\022\022\n\nrepair_end\030\t \001(\003\022"
    "\021\n\trepair_hp\030\n \001(\005\022\022\n\ntower_attr\030\013 \001(\t\022\r"
    "\n\005level\030\014 \001(\005\022\022\n\nlevel_info\030\r \001(\t\0227\n\rfun"
    "ction_data\030\016 \001(\0132 .MsgPB.MsgBuildTowerFu"
    "nctionData\022\r\n\005dirty\030\017 \001(\003\"\251\001\n\030MsgBuildTo"
    "werUpdate_C2MS\022=\n\007msgType\030\001 \001(\0162\017.MsgPB."
    "EMsgType:\033_MSG_BUILDTOWER_UPDATE_C2MS\022\r\n"
    "\005iggid\030\002 \001(\003\022\r\n\005pos_x\030\003 \001(\005\022\r\n\005pos_y\030\004 \001"
    "(\005\022\r\n\005level\030\005 \001(\005\022\022\n\ntower_uuid\030\006 \001(\003\"\265\001"
    "\n\033MsgBuildTowerUpdateRes_MS2C\022A\n\007msgType"
    "\030\001 \001(\0162\017.MsgPB.EMsgType:\037_MSG_BUILDTOWER"
    "_UPDATE_RES_MS2C\022\r\n\005iggid\030\002 \001(\003\022\r\n\005pos_x"
    "\030\003 \001(\005\022\r\n\005pos_y\030\004 \001(\005\022\022\n\ntemplateid\030\005 \001("
    "\005\022\022\n\ntower_uuid\030\006 \001(\003\"\265\001\n\030MsgBuildTowerR"
    "eform_C2MS\022=\n\007msgType\030\001 \001(\0162\017.MsgPB.EMsg"
    "Type:\033_MSG_BUILDTOWER_REFORM_C2MS\022\r\n\005igg"
    "id\030\002 \001(\003\022\r\n\005pos_x\030\003 \001(\005\022\r\n\005pos_y\030\004 \001(\005\022\031"
    "\n\021build_type_reform\030\005 \001(\005\022\022\n\ntower_uuid\030"
    "\006 \001(\003\"\322\001\n\033MsgBuildTowerReformRes_MS2C\022A\n"
    "\007msgType\030\001 \001(\0162\017.MsgPB.EMsgType:\037_MSG_BU"
    "ILDTOWER_REFORM_RES_MS2C\022\r\n\005iggid\030\002 \001(\003\022"
    "\r\n\005pos_x\030\003 \001(\005\022\r\n\005pos_y\030\004 \001(\005\022\031\n\021build_t"
    "ype_reform\030\005 \001(\005\022\024\n\014reform_level\030\006 \001(\005\022\022"
    "\n\ntower_uuid\030\007 \001(\003\"o\n\020TowerData2Client\022\023"
    "\n\013mapobjectid\030\001 \001(\005\022,\n\ntower_data\030\004 \001(\0132"
    "\030.MsgPB.MsgBuildTowerData\022\030\n\020is_towerpvp"
    "_ship\030\005 \001(\005\"\233\001\n\030MsgBuildTowerInfoListS2C"
    "\022\?\n\007msgType\030\001 \001(\0162\017.MsgPB.EMsgType:\035_MSG"
    "_BUILDTOWER_INFO_LIST_S2C\022\r\n\005iggid\030\002 \001(\003"
    "\022/\n\016tower_data_lst\030\003 \003(\0132\027.MsgPB.TowerDa"
    "ta2Client\"\256\001\n\030MsgBuildTowerSetSoul_S2C\022>"
    "\n\007msgType\030\001 \001(\0162\017.MsgPB.EMsgType:\034_MSG_B"
    "UILDTOWER_SET_SOUL_S2C\022\r\n\005iggid\030\002 \001(\003\022\r\n"
    "\005pos_x\030\003 \001(\005\022\r\n\005pos_y\030\004 \001(\005\022\021\n\tsoul_uuid"
    "\030\005 \001(\003\022\022\n\ntower_uuid\030\006 \001(\003\"\256\001\n\030MsgBuildT"
    "owerSetSoul_C2S\022>\n\007msgType\030\001 \001(\0162\017.MsgPB"
    ".EMsgType:\034_MSG_BUILDTOWER_SET_SOUL_C2S\022"
    "\r\n\005iggid\030\002 \001(\003\022\r\n\005pos_x\030\003 \001(\005\022\r\n\005pos_y\030\004"
    " \001(\005\022\021\n\tsoul_uuid\030\005 \001(\003\022\022\n\ntower_uuid\030\006 "
    "\001(\003\"o\n\024TowerBuildSummonData\022\022\n\nmap_obj_i"
    "d\030\001 \003(\005\022\023\n\013resummon_cd\030\002 \001(\005\022\027\n\017total_mo"
    "b_count\030\003 \001(\005\022\025\n\rcur_mob_count\030\004 \001(\005\"\337\001\n"
    "\027MsgBuildTowerMotion_S2C\022<\n\007msgType\030\001 \001("
    "\0162\017.MsgPB.EMsgType:\032_MSG_BUILDTOWER_MOTI"
    "ON_S2C\022\r\n\005iggid\030\002 \001(\003\022\022\n\ntower_uuid\030\003 \001("
    "\003\022\023\n\013mapobjectid\030\004 \001(\005\022\r\n\005pos_x\030\005 \001(\005\022\r\n"
    "\005pos_y\030\006 \001(\005\0220\n\013summon_data\030\007 \001(\0132\033.MsgP"
    "B.TowerBuildSummonData\"\320\001\n\036MsgBuildTower"
    "CollectSummon_S2C\022D\n\007msgType\030\001 \001(\0162\017.Msg"
    "PB.EMsgType:\"_MSG_BUILDTOWER_COLLECT_SUM"
    "MON_S2C\022\r\n\005iggid\030\002 \001(\003\022\022\n\ntower_uuid\030\003 \001"
    "(\003\022\023\n\013mapobjectid\030\004 \001(\005\022\r\n\005pos_x\030\005 \001(\005\022\r"
    "\n\005pos_y\030\006 \001(\005\022\022\n\nmob_obj_id\030\007 \003(\005\"\200\001\n\034Ms"
    "gBuildTowerCrystalTran_CS2\022B\n\007msgType\030\001 "
    "\001(\0162\017.MsgPB.EMsgType: _MSG_BUILDTOWER_CR"
    "YSTAL_TRAN_CS2\022\r\n\005iggid\030\002 \001(\003\022\r\n\005mapid\030\003"
    " \001(\005\"\314\001\n\"MsgBuildTowerCrystalBuffUnlock_"
    "C2S\022I\n\007msgType\030\001 \001(\0162\017.MsgPB.EMsgType:\'_"
    "MSG_BUILDTOWER_CRYSTAL_BUFF_UNLOCK_C2S\022\r"
    "\n\005iggid\030\002 \001(\003\022\r\n\005pos_x\030\003 \001(\005\022\r\n\005pos_y\030\004 "
    "\001(\005\022\022\n\ntower_uuid\030\005 \001(\003\022\032\n\022crystal_buff_"
    "cfgid\030\006 \001(\005\"\355\001\n\"MsgBuildTowerCrystalBuff"
    "Unlock_S2C\022I\n\007msgType\030\001 \001(\0162\017.MsgPB.EMsg"
    "Type:\'_MSG_BUILDTOWER_CRYSTAL_BUFF_UNLOC"
    "K_S2C\022\r\n\005iggid\030\002 \001(\003\022\r\n\005pos_x\030\003 \001(\005\022\r\n\005p"
    "os_y\030\004 \001(\005\022\022\n\ntower_uuid\030\005 \001(\003\022\032\n\022crysta"
    "l_buff_cfgid\030\006 \001(\005\022\037\n\027crystal_buff_start"
    "_time\030\007 \001(\003\"\210\001\n\'MsgBuildTowerUpdateTower"
    "PVPAirShip_C2MS\022N\n\007msgType\030\001 \001(\0162\017.MsgPB"
    ".EMsgType:,_MSG_BUILDTOWER_UPDATE_TOWERP"
    "VP_AIRSHIP_C2MS\022\r\n\005iggid\030\002 \001(\003\"\233\001\n\'MsgBu"
    "ildTowerUpdateTowerPVPAirShip_MS2C\022N\n\007ms"
    "gType\030\001 \001(\0162\017.MsgPB.EMsgType:,_MSG_BUILD"
    "TOWER_UPDATE_TOWERPVP_AIRSHIP_MS2C\022\r\n\005ig"
    "gid\030\002 \001(\003\022\021\n\tnew_level\030\003 \001(\005\"\213\001\n\025MsgBuil"
    "dTowerAdd_C2MS\022:\n\007msgType\030\001 \001(\0162\017.MsgPB."
    "EMsgType:\030_MSG_BUILDTOWER_ADD_C2MS\022\r\n\005ig"
    "gid\030\002 \001(\003\022\'\n\005tower\030\003 \001(\0132\030.MsgPB.MsgBuil"
    "dTowerData\"\213\001\n\025MsgBuildTowerDel_C2MS\022:\n\007"
    "msgType\030\001 \001(\0162\017.MsgPB.EMsgType:\030_MSG_BUI"
    "LDTOWER_DEL_C2MS\022\r\n\005iggid\030\002 \001(\003\022\'\n\005tower"
    "\030\003 \001(\0132\030.MsgPB.MsgBuildTowerData\"\242\002\n\032Msg"
    "BuildTowerEvtReport_C2S\022@\n\007msgType\030\001 \001(\016"
    "2\017.MsgPB.EMsgType:\036_MSG_BUILDTOWER_EVT_R"
    "EPORT_C2S\022\r\n\005iggid\030\002 \001(\003\022\'\n\010evt_type\030\003 \001"
    "(\0162\025.MsgPB.TOWER_EVT_TYPE\022\025\n\revt_long_da"
    "ta\030\004 \001(\003\022\020\n\010evt_data\030\005 \001(\005\022\014\n\004uuid\030\006 \001(\003"
    "\022\r\n\005mapid\030\007 \001(\005\022\022\n\ntemplateid\030\010 \001(\005\022\022\n\nb"
    "uild_type\030\t \001(\005\022\r\n\005pos_x\030\n \001(\005\022\r\n\005pos_y\030"
    "\013 \001(\005\"\220\001\n\035MsgBuildTowerDelTowerData_C2S\022"
    "C\n\007msgType\030\001 \001(\0162\017.MsgPB.EMsgType:!_MSG_"
    "BUILDTOWER_DEL_TOWERDATA_C2S\022\r\n\005iggid\030\002 "
    "\001(\003\022\014\n\004uuid\030\003 \001(\003\022\r\n\005digid\030\004 \001(\003\"\330\001\n\035Msg"
    "BuildTowerDelTowerData_S2C\022C\n\007msgType\030\001 "
    "\001(\0162\017.MsgPB.EMsgType:!_MSG_BUILDTOWER_DE"
    "L_TOWERDATA_S2C\022\r\n\005iggid\030\002 \001(\003\022\014\n\004uuid\030\003"
    " \001(\003\022(\n\003res\030\004 \001(\0162\033.MsgPB.TOWERBUILDING_"
    "RESULT\022\r\n\005pos_x\030\005 \001(\005\022\r\n\005pos_y\030\006 \001(\005\022\r\n\005"
    "digid\030\007 \001(\003\"\205\001\n\037MsgBuildTowerDelTowerDat"
    "a_MS2GS\022E\n\007msgType\030\001 \001(\0162\017.MsgPB.EMsgTyp"
    "e:#_MSG_BUILDTOWER_DEL_TOWERDATA_MS2GS\022\r"
    "\n\005iggid\030\002 \001(\003\022\014\n\004uuid\030\003 \001(\003\"\276\001\n\035MsgBuild"
    "TowerAddTowerData_C2S\022C\n\007msgType\030\001 \001(\0162\017"
    ".MsgPB.EMsgType:!_MSG_BUILDTOWER_ADD_TOW"
    "ERDATA_C2S\022\r\n\005iggid\030\002 \001(\003\022\021\n\titem_uuid\030\003"
    " \001(\003\022\r\n\005pos_x\030\004 \001(\005\022\r\n\005pos_y\030\005 \001(\005\022\030\n\020to"
    "wer_templateid\030\006 \001(\005\"\265\001\n\035MsgBuildTowerAd"
    "dTowerData_S2C\022C\n\007msgType\030\001 \001(\0162\017.MsgPB."
    "EMsgType:!_MSG_BUILDTOWER_ADD_TOWERDATA_"
    "S2C\022\r\n\005iggid\030\002 \001(\003\022\022\n\ntower_uuid\030\003 \001(\003\022,"
    "\n\ntower_data\030\004 \001(\0132\030.MsgPB.MsgBuildTower"
    "Data\"\211\001\n!MsgBuildTowerRecycleTowerData_C"
    "2S\022G\n\007msgType\030\001 \001(\0162\017.MsgPB.EMsgType:%_M"
    "SG_BUILDTOWER_RECYCLE_TOWERDATA_C2S\022\r\n\005i"
    "ggid\030\002 \001(\003\022\014\n\004uuid\030\003 \001(\003\"\321\001\n!MsgBuildTow"
    "erRecycleTowerData_S2C\022G\n\007msgType\030\001 \001(\0162"
    "\017.MsgPB.EMsgType:%_MSG_BUILDTOWER_RECYCL"
    "E_TOWERDATA_S2C\022\r\n\005iggid\030\002 \001(\003\022\014\n\004uuid\030\003"
    " \001(\003\022(\n\003res\030\004 \001(\0162\033.MsgPB.TOWERBUILDING_"
    "RESULT\022\r\n\005pos_x\030\005 \001(\005\022\r\n\005pos_y\030\006 \001(\005*\337\t\n"
    "\024TOWERBUILDING_RESULT\022\036\n\032TOWERBUILDING_R"
    "ESULT_ERROR\020\000\022\033\n\027TOWERBUILDING_RESULT_OK"
    "\020\001\022#\n\037TOWERBUILDING_RESULT_NoMaterial\020\002\022"
    "!\n\035TOWERBUILDING_RESULT_IsRepair\020\003\022\037\n\033TO"
    "WERBUILDING_RESULT_NoCash\020\004\022\"\n\036TOWERBUIL"
    "DING_RESULT_MAX_LEVEL\020\005\022\"\n\036TOWERBUILDING"
    "_RESULT_NO_PLAYER\020\006\022!\n\035TOWREBUILDING_RES"
    "ULT_NO_BUILD\020\007\022&\n\"TOWERBUILDING_RESULT_N"
    "O_UPDATE_CFG\020\010\022&\n\"TOWERBUILDING_RESULT_N"
    "O_REFORM_CFG\020\t\022 \n\034TOWERBUILDING_RESULT_N"
    "O_COIN\020\n\022\"\n\036TOWERBUILDING_RESULT_ERR_LEV"
    "EL\020\013\022%\n!TOWERBUILDING_RESULT_NO_BUILD_CF"
    "G\020\014\022!\n\035TOWERBUILDING_RESULT_NO_SOULD\020\r\022$"
    "\n TOWERBUILDING_RESULT_WRONG_SOULD\020\016\022+\n\'"
    "TOWERBUILDING_RESULT_NO_TOWER_BUILD_CFG\020"
    "\017\022#\n\037TOWERBUILDING_RESULT_NO_MOB_CFG\020\020\022*"
    "\n&TOWERBUILDING_RESULT_NO_WRONG_MOB_SOUL"
    "\020\021\022#\n\037TOWERBUILDING_RESULT_NO_CRYSTAL\020\022\022"
    "\'\n#TOWERBUILDING_RESULT_REPAIR_FULL_HP\020\023"
    "\022#\n\037TOWERBUILDING_RESULT_REPAIR_CFG\020\024\022)\n"
    "%TOWERBUILDING_RESULT_ERR_PLAYER_LEVEL\020\025"
    "\022&\n\"TOWERBUILDING_RESULT_ERR_MapID_Err\020\026"
    "\022\'\n#TOWERBUILDING_RESULT_ERR_PacketFull\020"
    "\027\022(\n$TOWERBUILDING_RESULT_ERR_NoTowerDat"
    "a\020\030\022!\n\035TOWERBUILDING_RESULT_ERR_Grid\020\031\022&"
    "\n\"TOWERBUILDING_RESULT_ERR_NoGridCfg\020\032\022)"
    "\n%TOWERBUILDING_RESULT_ERR_BuildTypeErr\020"
    "\033\022)\n%TOWERBUILDING_RESULT_ERR_ADDPacketE"
    "rr\020\034\022#\n\037TOWERBUILDING_RESULT_ERR_NoItem\020"
    "\035\022(\n$TOWERBUILDING_RESULT_ERR_GridHasIte"
    "m\020\036\022)\n%TOWERBUILDING_RESULT_ERR_GridHasB"
    "lock\020\037*\260\001\n\021TOWER_BUILD_STATE\022\032\n\026TOWER_BU"
    "ILD_STATE_NONE\020\000\022\032\n\026TOWER_BUILD_STATE_WO"
    "RK\020\001\022\034\n\030TOWER_BUILD_STATE_REPAIR\020\002\022\035\n\031TO"
    "WER_BUILD_STATE_DAMAGED\020\003\022&\n\"TOWER_BUILD"
    "_STATE_NONE_MIN_CRYSTAL\020\004*\324\001\n\024TOWER_BUIL"
    "D_FUNCTION\022\035\n\031TOWER_BUILD_FUNCTION_NONE\020"
    "\000\022$\n TOWER_BUILD_FUNCTION_SUMMON_SOUL\020\001\022"
    "#\n\037TOWER_BUILD_FUNCTION_SUMMON_MOB\020\002\022)\n%"
    "TOWER_BUILD_FUNCTION_SUMMON_TRANSFORM\020\003\022"
    "\'\n#TOWER_BUILD_FUNCTION_DO_INTERACTIVE\020\004"
    "*\317\001\n\016TOWER_EVT_TYPE\022\027\n\023TOWER_EVT_TYPE_NO"
    "NE\020\000\022\037\n\033TOWER_EVT_TYPE_CHECK_PICKUP\020\001\022\035\n"
    "\031TOWER_EVT_TYPE_CHECK_DATA\020\002\022\036\n\032TOWER_EV"
    "T_TYPE_CHECK_BLOCK\020\003\022\036\n\032TOWER_EVT_TYPE_R"
    "EPAIR_OVER\020\004\022$\n TOWER_EVT_TYPE_TOWER_DAT"
    "AFIX_ERR\020\005", 8450);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "MsgBuildTower.proto", &protobuf_RegisterTypes);
  MsgBuildTowerMsgErrMS2C::default_instance_ = new MsgBuildTowerMsgErrMS2C();
  MsgBuildTowerRepairC2MS::default_instance_ = new MsgBuildTowerRepairC2MS();
  MsgBuildTowerRepairMS2C::default_instance_ = new MsgBuildTowerRepairMS2C();
  MsgBuildTowerAppearanceMS2C::default_instance_ = new MsgBuildTowerAppearanceMS2C();
  MsgBuildTowerRepairSkipC2MS::default_instance_ = new MsgBuildTowerRepairSkipC2MS();
  MsgBuildTowerRepairSkipMS2C::default_instance_ = new MsgBuildTowerRepairSkipMS2C();
  MsgBuildTowerFunctionDataSummon::default_instance_ = new MsgBuildTowerFunctionDataSummon();
  MsgBuildTowerFunctionDataCrystalBuff::default_instance_ = new MsgBuildTowerFunctionDataCrystalBuff();
  MsgBuildTowerFunctionData::default_instance_ = new MsgBuildTowerFunctionData();
  MsgBuildTowerData::default_instance_ = new MsgBuildTowerData();
  MsgBuildTowerUpdate_C2MS::default_instance_ = new MsgBuildTowerUpdate_C2MS();
  MsgBuildTowerUpdateRes_MS2C::default_instance_ = new MsgBuildTowerUpdateRes_MS2C();
  MsgBuildTowerReform_C2MS::default_instance_ = new MsgBuildTowerReform_C2MS();
  MsgBuildTowerReformRes_MS2C::default_instance_ = new MsgBuildTowerReformRes_MS2C();
  TowerData2Client::default_instance_ = new TowerData2Client();
  MsgBuildTowerInfoListS2C::default_instance_ = new MsgBuildTowerInfoListS2C();
  MsgBuildTowerSetSoul_S2C::default_instance_ = new MsgBuildTowerSetSoul_S2C();
  MsgBuildTowerSetSoul_C2S::default_instance_ = new MsgBuildTowerSetSoul_C2S();
  TowerBuildSummonData::default_instance_ = new TowerBuildSummonData();
  MsgBuildTowerMotion_S2C::default_instance_ = new MsgBuildTowerMotion_S2C();
  MsgBuildTowerCollectSummon_S2C::default_instance_ = new MsgBuildTowerCollectSummon_S2C();
  MsgBuildTowerCrystalTran_CS2::default_instance_ = new MsgBuildTowerCrystalTran_CS2();
  MsgBuildTowerCrystalBuffUnlock_C2S::default_instance_ = new MsgBuildTowerCrystalBuffUnlock_C2S();
  MsgBuildTowerCrystalBuffUnlock_S2C::default_instance_ = new MsgBuildTowerCrystalBuffUnlock_S2C();
  MsgBuildTowerUpdateTowerPVPAirShip_C2MS::default_instance_ = new MsgBuildTowerUpdateTowerPVPAirShip_C2MS();
  MsgBuildTowerUpdateTowerPVPAirShip_MS2C::default_instance_ = new MsgBuildTowerUpdateTowerPVPAirShip_MS2C();
  MsgBuildTowerAdd_C2MS::default_instance_ = new MsgBuildTowerAdd_C2MS();
  MsgBuildTowerDel_C2MS::default_instance_ = new MsgBuildTowerDel_C2MS();
  MsgBuildTowerEvtReport_C2S::default_instance_ = new MsgBuildTowerEvtReport_C2S();
  MsgBuildTowerDelTowerData_C2S::default_instance_ = new MsgBuildTowerDelTowerData_C2S();
  MsgBuildTowerDelTowerData_S2C::default_instance_ = new MsgBuildTowerDelTowerData_S2C();
  MsgBuildTowerDelTowerData_MS2GS::default_instance_ = new MsgBuildTowerDelTowerData_MS2GS();
  MsgBuildTowerAddTowerData_C2S::default_instance_ = new MsgBuildTowerAddTowerData_C2S();
  MsgBuildTowerAddTowerData_S2C::default_instance_ = new MsgBuildTowerAddTowerData_S2C();
  MsgBuildTowerRecycleTowerData_C2S::default_instance_ = new MsgBuildTowerRecycleTowerData_C2S();
  MsgBuildTowerRecycleTowerData_S2C::default_instance_ = new MsgBuildTowerRecycleTowerData_S2C();
  MsgBuildTowerMsgErrMS2C::default_instance_->InitAsDefaultInstance();
  MsgBuildTowerRepairC2MS::default_instance_->InitAsDefaultInstance();
  MsgBuildTowerRepairMS2C::default_instance_->InitAsDefaultInstance();
  MsgBuildTowerAppearanceMS2C::default_instance_->InitAsDefaultInstance();
  MsgBuildTowerRepairSkipC2MS::default_instance_->InitAsDefaultInstance();
  MsgBuildTowerRepairSkipMS2C::default_instance_->InitAsDefaultInstance();
  MsgBuildTowerFunctionDataSummon::default_instance_->InitAsDefaultInstance();
  MsgBuildTowerFunctionDataCrystalBuff::default_instance_->InitAsDefaultInstance();
  MsgBuildTowerFunctionData::default_instance_->InitAsDefaultInstance();
  MsgBuildTowerData::default_instance_->InitAsDefaultInstance();
  MsgBuildTowerUpdate_C2MS::default_instance_->InitAsDefaultInstance();
  MsgBuildTowerUpdateRes_MS2C::default_instance_->InitAsDefaultInstance();
  MsgBuildTowerReform_C2MS::default_instance_->InitAsDefaultInstance();
  MsgBuildTowerReformRes_MS2C::default_instance_->InitAsDefaultInstance();
  TowerData2Client::default_instance_->InitAsDefaultInstance();
  MsgBuildTowerInfoListS2C::default_instance_->InitAsDefaultInstance();
  MsgBuildTowerSetSoul_S2C::default_instance_->InitAsDefaultInstance();
  MsgBuildTowerSetSoul_C2S::default_instance_->InitAsDefaultInstance();
  TowerBuildSummonData::default_instance_->InitAsDefaultInstance();
  MsgBuildTowerMotion_S2C::default_instance_->InitAsDefaultInstance();
  MsgBuildTowerCollectSummon_S2C::default_instance_->InitAsDefaultInstance();
  MsgBuildTowerCrystalTran_CS2::default_instance_->InitAsDefaultInstance();
  MsgBuildTowerCrystalBuffUnlock_C2S::default_instance_->InitAsDefaultInstance();
  MsgBuildTowerCrystalBuffUnlock_S2C::default_instance_->InitAsDefaultInstance();
  MsgBuildTowerUpdateTowerPVPAirShip_C2MS::default_instance_->InitAsDefaultInstance();
  MsgBuildTowerUpdateTowerPVPAirShip_MS2C::default_instance_->InitAsDefaultInstance();
  MsgBuildTowerAdd_C2MS::default_instance_->InitAsDefaultInstance();
  MsgBuildTowerDel_C2MS::default_instance_->InitAsDefaultInstance();
  MsgBuildTowerEvtReport_C2S::default_instance_->InitAsDefaultInstance();
  MsgBuildTowerDelTowerData_C2S::default_instance_->InitAsDefaultInstance();
  MsgBuildTowerDelTowerData_S2C::default_instance_->InitAsDefaultInstance();
  MsgBuildTowerDelTowerData_MS2GS::default_instance_->InitAsDefaultInstance();
  MsgBuildTowerAddTowerData_C2S::default_instance_->InitAsDefaultInstance();
  MsgBuildTowerAddTowerData_S2C::default_instance_->InitAsDefaultInstance();
  MsgBuildTowerRecycleTowerData_C2S::default_instance_->InitAsDefaultInstance();
  MsgBuildTowerRecycleTowerData_S2C::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_MsgBuildTower_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_MsgBuildTower_2eproto {
  StaticDescriptorInitializer_MsgBuildTower_2eproto() {
    protobuf_AddDesc_MsgBuildTower_2eproto();
  }
} static_descriptor_initializer_MsgBuildTower_2eproto_;
const ::google::protobuf::EnumDescriptor* TOWERBUILDING_RESULT_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TOWERBUILDING_RESULT_descriptor_;
}
bool TOWERBUILDING_RESULT_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
    case 18:
    case 19:
    case 20:
    case 21:
    case 22:
    case 23:
    case 24:
    case 25:
    case 26:
    case 27:
    case 28:
    case 29:
    case 30:
    case 31:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* TOWER_BUILD_STATE_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TOWER_BUILD_STATE_descriptor_;
}
bool TOWER_BUILD_STATE_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* TOWER_BUILD_FUNCTION_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TOWER_BUILD_FUNCTION_descriptor_;
}
bool TOWER_BUILD_FUNCTION_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* TOWER_EVT_TYPE_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TOWER_EVT_TYPE_descriptor_;
}
bool TOWER_EVT_TYPE_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#ifndef _MSC_VER
const int MsgBuildTowerMsgErrMS2C::kMsgTypeFieldNumber;
const int MsgBuildTowerMsgErrMS2C::kIggidFieldNumber;
const int MsgBuildTowerMsgErrMS2C::kResFieldNumber;
#endif  // !_MSC_VER

MsgBuildTowerMsgErrMS2C::MsgBuildTowerMsgErrMS2C()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.MsgBuildTowerMsgErrMS2C)
}

void MsgBuildTowerMsgErrMS2C::InitAsDefaultInstance() {
}

MsgBuildTowerMsgErrMS2C::MsgBuildTowerMsgErrMS2C(const MsgBuildTowerMsgErrMS2C& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.MsgBuildTowerMsgErrMS2C)
}

void MsgBuildTowerMsgErrMS2C::SharedCtor() {
  _cached_size_ = 0;
  msgtype_ = 2401;
  iggid_ = GOOGLE_LONGLONG(0);
  res_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgBuildTowerMsgErrMS2C::~MsgBuildTowerMsgErrMS2C() {
  // @@protoc_insertion_point(destructor:MsgPB.MsgBuildTowerMsgErrMS2C)
  SharedDtor();
}

void MsgBuildTowerMsgErrMS2C::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgBuildTowerMsgErrMS2C::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgBuildTowerMsgErrMS2C::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgBuildTowerMsgErrMS2C_descriptor_;
}

const MsgBuildTowerMsgErrMS2C& MsgBuildTowerMsgErrMS2C::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgBuildTower_2eproto();
  return *default_instance_;
}

MsgBuildTowerMsgErrMS2C* MsgBuildTowerMsgErrMS2C::default_instance_ = NULL;

MsgBuildTowerMsgErrMS2C* MsgBuildTowerMsgErrMS2C::New() const {
  return new MsgBuildTowerMsgErrMS2C;
}

void MsgBuildTowerMsgErrMS2C::Clear() {
  if (_has_bits_[0 / 32] & 7) {
    msgtype_ = 2401;
    iggid_ = GOOGLE_LONGLONG(0);
    res_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgBuildTowerMsgErrMS2C::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.MsgBuildTowerMsgErrMS2C)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_BUILDTOWER_MSGERR_MS2C];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::EMsgType_IsValid(value)) {
            set_msgtype(static_cast< ::MsgPB::EMsgType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_iggid;
        break;
      }

      // optional int64 iggid = 2;
      case 2: {
        if (tag == 16) {
         parse_iggid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &iggid_)));
          set_has_iggid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_res;
        break;
      }

      // optional .MsgPB.TOWERBUILDING_RESULT res = 3;
      case 3: {
        if (tag == 24) {
         parse_res:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::TOWERBUILDING_RESULT_IsValid(value)) {
            set_res(static_cast< ::MsgPB::TOWERBUILDING_RESULT >(value));
          } else {
            mutable_unknown_fields()->AddVarint(3, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.MsgBuildTowerMsgErrMS2C)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.MsgBuildTowerMsgErrMS2C)
  return false;
#undef DO_
}

void MsgBuildTowerMsgErrMS2C::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.MsgBuildTowerMsgErrMS2C)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_BUILDTOWER_MSGERR_MS2C];
  if (has_msgtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->msgtype(), output);
  }

  // optional int64 iggid = 2;
  if (has_iggid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->iggid(), output);
  }

  // optional .MsgPB.TOWERBUILDING_RESULT res = 3;
  if (has_res()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->res(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.MsgBuildTowerMsgErrMS2C)
}

::google::protobuf::uint8* MsgBuildTowerMsgErrMS2C::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.MsgBuildTowerMsgErrMS2C)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_BUILDTOWER_MSGERR_MS2C];
  if (has_msgtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->msgtype(), target);
  }

  // optional int64 iggid = 2;
  if (has_iggid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->iggid(), target);
  }

  // optional .MsgPB.TOWERBUILDING_RESULT res = 3;
  if (has_res()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->res(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.MsgBuildTowerMsgErrMS2C)
  return target;
}

int MsgBuildTowerMsgErrMS2C::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_BUILDTOWER_MSGERR_MS2C];
    if (has_msgtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgtype());
    }

    // optional int64 iggid = 2;
    if (has_iggid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->iggid());
    }

    // optional .MsgPB.TOWERBUILDING_RESULT res = 3;
    if (has_res()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->res());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgBuildTowerMsgErrMS2C::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgBuildTowerMsgErrMS2C* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgBuildTowerMsgErrMS2C*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgBuildTowerMsgErrMS2C::MergeFrom(const MsgBuildTowerMsgErrMS2C& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msgtype()) {
      set_msgtype(from.msgtype());
    }
    if (from.has_iggid()) {
      set_iggid(from.iggid());
    }
    if (from.has_res()) {
      set_res(from.res());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgBuildTowerMsgErrMS2C::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgBuildTowerMsgErrMS2C::CopyFrom(const MsgBuildTowerMsgErrMS2C& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgBuildTowerMsgErrMS2C::IsInitialized() const {

  return true;
}

void MsgBuildTowerMsgErrMS2C::Swap(MsgBuildTowerMsgErrMS2C* other) {
  if (other != this) {
    std::swap(msgtype_, other->msgtype_);
    std::swap(iggid_, other->iggid_);
    std::swap(res_, other->res_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgBuildTowerMsgErrMS2C::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgBuildTowerMsgErrMS2C_descriptor_;
  metadata.reflection = MsgBuildTowerMsgErrMS2C_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgBuildTowerRepairC2MS::kMsgTypeFieldNumber;
const int MsgBuildTowerRepairC2MS::kIggidFieldNumber;
const int MsgBuildTowerRepairC2MS::kPosXFieldNumber;
const int MsgBuildTowerRepairC2MS::kPosYFieldNumber;
const int MsgBuildTowerRepairC2MS::kTowerUuidFieldNumber;
#endif  // !_MSC_VER

MsgBuildTowerRepairC2MS::MsgBuildTowerRepairC2MS()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.MsgBuildTowerRepairC2MS)
}

void MsgBuildTowerRepairC2MS::InitAsDefaultInstance() {
}

MsgBuildTowerRepairC2MS::MsgBuildTowerRepairC2MS(const MsgBuildTowerRepairC2MS& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.MsgBuildTowerRepairC2MS)
}

void MsgBuildTowerRepairC2MS::SharedCtor() {
  _cached_size_ = 0;
  msgtype_ = 2402;
  iggid_ = GOOGLE_LONGLONG(0);
  pos_x_ = 0;
  pos_y_ = 0;
  tower_uuid_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgBuildTowerRepairC2MS::~MsgBuildTowerRepairC2MS() {
  // @@protoc_insertion_point(destructor:MsgPB.MsgBuildTowerRepairC2MS)
  SharedDtor();
}

void MsgBuildTowerRepairC2MS::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgBuildTowerRepairC2MS::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgBuildTowerRepairC2MS::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgBuildTowerRepairC2MS_descriptor_;
}

const MsgBuildTowerRepairC2MS& MsgBuildTowerRepairC2MS::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgBuildTower_2eproto();
  return *default_instance_;
}

MsgBuildTowerRepairC2MS* MsgBuildTowerRepairC2MS::default_instance_ = NULL;

MsgBuildTowerRepairC2MS* MsgBuildTowerRepairC2MS::New() const {
  return new MsgBuildTowerRepairC2MS;
}

void MsgBuildTowerRepairC2MS::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<MsgBuildTowerRepairC2MS*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 31) {
    ZR_(pos_x_, pos_y_);
    msgtype_ = 2402;
    iggid_ = GOOGLE_LONGLONG(0);
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgBuildTowerRepairC2MS::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.MsgBuildTowerRepairC2MS)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_BUILDTOWER_REPAIR_C2MS];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::EMsgType_IsValid(value)) {
            set_msgtype(static_cast< ::MsgPB::EMsgType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_iggid;
        break;
      }

      // optional int64 iggid = 2;
      case 2: {
        if (tag == 16) {
         parse_iggid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &iggid_)));
          set_has_iggid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_pos_x;
        break;
      }

      // optional int32 pos_x = 3;
      case 3: {
        if (tag == 24) {
         parse_pos_x:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pos_x_)));
          set_has_pos_x();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_pos_y;
        break;
      }

      // optional int32 pos_y = 4;
      case 4: {
        if (tag == 32) {
         parse_pos_y:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pos_y_)));
          set_has_pos_y();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_tower_uuid;
        break;
      }

      // optional int64 tower_uuid = 5;
      case 5: {
        if (tag == 40) {
         parse_tower_uuid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &tower_uuid_)));
          set_has_tower_uuid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.MsgBuildTowerRepairC2MS)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.MsgBuildTowerRepairC2MS)
  return false;
#undef DO_
}

void MsgBuildTowerRepairC2MS::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.MsgBuildTowerRepairC2MS)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_BUILDTOWER_REPAIR_C2MS];
  if (has_msgtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->msgtype(), output);
  }

  // optional int64 iggid = 2;
  if (has_iggid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->iggid(), output);
  }

  // optional int32 pos_x = 3;
  if (has_pos_x()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->pos_x(), output);
  }

  // optional int32 pos_y = 4;
  if (has_pos_y()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->pos_y(), output);
  }

  // optional int64 tower_uuid = 5;
  if (has_tower_uuid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(5, this->tower_uuid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.MsgBuildTowerRepairC2MS)
}

::google::protobuf::uint8* MsgBuildTowerRepairC2MS::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.MsgBuildTowerRepairC2MS)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_BUILDTOWER_REPAIR_C2MS];
  if (has_msgtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->msgtype(), target);
  }

  // optional int64 iggid = 2;
  if (has_iggid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->iggid(), target);
  }

  // optional int32 pos_x = 3;
  if (has_pos_x()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->pos_x(), target);
  }

  // optional int32 pos_y = 4;
  if (has_pos_y()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->pos_y(), target);
  }

  // optional int64 tower_uuid = 5;
  if (has_tower_uuid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(5, this->tower_uuid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.MsgBuildTowerRepairC2MS)
  return target;
}

int MsgBuildTowerRepairC2MS::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_BUILDTOWER_REPAIR_C2MS];
    if (has_msgtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgtype());
    }

    // optional int64 iggid = 2;
    if (has_iggid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->iggid());
    }

    // optional int32 pos_x = 3;
    if (has_pos_x()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pos_x());
    }

    // optional int32 pos_y = 4;
    if (has_pos_y()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pos_y());
    }

    // optional int64 tower_uuid = 5;
    if (has_tower_uuid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->tower_uuid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgBuildTowerRepairC2MS::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgBuildTowerRepairC2MS* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgBuildTowerRepairC2MS*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgBuildTowerRepairC2MS::MergeFrom(const MsgBuildTowerRepairC2MS& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msgtype()) {
      set_msgtype(from.msgtype());
    }
    if (from.has_iggid()) {
      set_iggid(from.iggid());
    }
    if (from.has_pos_x()) {
      set_pos_x(from.pos_x());
    }
    if (from.has_pos_y()) {
      set_pos_y(from.pos_y());
    }
    if (from.has_tower_uuid()) {
      set_tower_uuid(from.tower_uuid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgBuildTowerRepairC2MS::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgBuildTowerRepairC2MS::CopyFrom(const MsgBuildTowerRepairC2MS& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgBuildTowerRepairC2MS::IsInitialized() const {

  return true;
}

void MsgBuildTowerRepairC2MS::Swap(MsgBuildTowerRepairC2MS* other) {
  if (other != this) {
    std::swap(msgtype_, other->msgtype_);
    std::swap(iggid_, other->iggid_);
    std::swap(pos_x_, other->pos_x_);
    std::swap(pos_y_, other->pos_y_);
    std::swap(tower_uuid_, other->tower_uuid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgBuildTowerRepairC2MS::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgBuildTowerRepairC2MS_descriptor_;
  metadata.reflection = MsgBuildTowerRepairC2MS_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgBuildTowerRepairMS2C::kMsgTypeFieldNumber;
const int MsgBuildTowerRepairMS2C::kIggidFieldNumber;
const int MsgBuildTowerRepairMS2C::kPosXFieldNumber;
const int MsgBuildTowerRepairMS2C::kPosYFieldNumber;
const int MsgBuildTowerRepairMS2C::kTowerUuidFieldNumber;
const int MsgBuildTowerRepairMS2C::kRepairTimeFieldNumber;
#endif  // !_MSC_VER

MsgBuildTowerRepairMS2C::MsgBuildTowerRepairMS2C()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.MsgBuildTowerRepairMS2C)
}

void MsgBuildTowerRepairMS2C::InitAsDefaultInstance() {
}

MsgBuildTowerRepairMS2C::MsgBuildTowerRepairMS2C(const MsgBuildTowerRepairMS2C& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.MsgBuildTowerRepairMS2C)
}

void MsgBuildTowerRepairMS2C::SharedCtor() {
  _cached_size_ = 0;
  msgtype_ = 2459;
  iggid_ = GOOGLE_LONGLONG(0);
  pos_x_ = 0;
  pos_y_ = 0;
  tower_uuid_ = GOOGLE_LONGLONG(0);
  repair_time_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgBuildTowerRepairMS2C::~MsgBuildTowerRepairMS2C() {
  // @@protoc_insertion_point(destructor:MsgPB.MsgBuildTowerRepairMS2C)
  SharedDtor();
}

void MsgBuildTowerRepairMS2C::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgBuildTowerRepairMS2C::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgBuildTowerRepairMS2C::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgBuildTowerRepairMS2C_descriptor_;
}

const MsgBuildTowerRepairMS2C& MsgBuildTowerRepairMS2C::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgBuildTower_2eproto();
  return *default_instance_;
}

MsgBuildTowerRepairMS2C* MsgBuildTowerRepairMS2C::default_instance_ = NULL;

MsgBuildTowerRepairMS2C* MsgBuildTowerRepairMS2C::New() const {
  return new MsgBuildTowerRepairMS2C;
}

void MsgBuildTowerRepairMS2C::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<MsgBuildTowerRepairMS2C*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 63) {
    ZR_(pos_x_, repair_time_);
    msgtype_ = 2459;
    iggid_ = GOOGLE_LONGLONG(0);
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgBuildTowerRepairMS2C::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.MsgBuildTowerRepairMS2C)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_BUILDTOWER_REPAIR_MS2C];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::EMsgType_IsValid(value)) {
            set_msgtype(static_cast< ::MsgPB::EMsgType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_iggid;
        break;
      }

      // optional int64 iggid = 2;
      case 2: {
        if (tag == 16) {
         parse_iggid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &iggid_)));
          set_has_iggid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_pos_x;
        break;
      }

      // optional int32 pos_x = 3;
      case 3: {
        if (tag == 24) {
         parse_pos_x:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pos_x_)));
          set_has_pos_x();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_pos_y;
        break;
      }

      // optional int32 pos_y = 4;
      case 4: {
        if (tag == 32) {
         parse_pos_y:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pos_y_)));
          set_has_pos_y();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_tower_uuid;
        break;
      }

      // optional int64 tower_uuid = 5;
      case 5: {
        if (tag == 40) {
         parse_tower_uuid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &tower_uuid_)));
          set_has_tower_uuid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_repair_time;
        break;
      }

      // optional int32 repair_time = 6;
      case 6: {
        if (tag == 48) {
         parse_repair_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &repair_time_)));
          set_has_repair_time();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.MsgBuildTowerRepairMS2C)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.MsgBuildTowerRepairMS2C)
  return false;
#undef DO_
}

void MsgBuildTowerRepairMS2C::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.MsgBuildTowerRepairMS2C)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_BUILDTOWER_REPAIR_MS2C];
  if (has_msgtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->msgtype(), output);
  }

  // optional int64 iggid = 2;
  if (has_iggid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->iggid(), output);
  }

  // optional int32 pos_x = 3;
  if (has_pos_x()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->pos_x(), output);
  }

  // optional int32 pos_y = 4;
  if (has_pos_y()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->pos_y(), output);
  }

  // optional int64 tower_uuid = 5;
  if (has_tower_uuid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(5, this->tower_uuid(), output);
  }

  // optional int32 repair_time = 6;
  if (has_repair_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->repair_time(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.MsgBuildTowerRepairMS2C)
}

::google::protobuf::uint8* MsgBuildTowerRepairMS2C::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.MsgBuildTowerRepairMS2C)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_BUILDTOWER_REPAIR_MS2C];
  if (has_msgtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->msgtype(), target);
  }

  // optional int64 iggid = 2;
  if (has_iggid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->iggid(), target);
  }

  // optional int32 pos_x = 3;
  if (has_pos_x()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->pos_x(), target);
  }

  // optional int32 pos_y = 4;
  if (has_pos_y()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->pos_y(), target);
  }

  // optional int64 tower_uuid = 5;
  if (has_tower_uuid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(5, this->tower_uuid(), target);
  }

  // optional int32 repair_time = 6;
  if (has_repair_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->repair_time(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.MsgBuildTowerRepairMS2C)
  return target;
}

int MsgBuildTowerRepairMS2C::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_BUILDTOWER_REPAIR_MS2C];
    if (has_msgtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgtype());
    }

    // optional int64 iggid = 2;
    if (has_iggid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->iggid());
    }

    // optional int32 pos_x = 3;
    if (has_pos_x()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pos_x());
    }

    // optional int32 pos_y = 4;
    if (has_pos_y()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pos_y());
    }

    // optional int64 tower_uuid = 5;
    if (has_tower_uuid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->tower_uuid());
    }

    // optional int32 repair_time = 6;
    if (has_repair_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->repair_time());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgBuildTowerRepairMS2C::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgBuildTowerRepairMS2C* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgBuildTowerRepairMS2C*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgBuildTowerRepairMS2C::MergeFrom(const MsgBuildTowerRepairMS2C& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msgtype()) {
      set_msgtype(from.msgtype());
    }
    if (from.has_iggid()) {
      set_iggid(from.iggid());
    }
    if (from.has_pos_x()) {
      set_pos_x(from.pos_x());
    }
    if (from.has_pos_y()) {
      set_pos_y(from.pos_y());
    }
    if (from.has_tower_uuid()) {
      set_tower_uuid(from.tower_uuid());
    }
    if (from.has_repair_time()) {
      set_repair_time(from.repair_time());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgBuildTowerRepairMS2C::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgBuildTowerRepairMS2C::CopyFrom(const MsgBuildTowerRepairMS2C& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgBuildTowerRepairMS2C::IsInitialized() const {

  return true;
}

void MsgBuildTowerRepairMS2C::Swap(MsgBuildTowerRepairMS2C* other) {
  if (other != this) {
    std::swap(msgtype_, other->msgtype_);
    std::swap(iggid_, other->iggid_);
    std::swap(pos_x_, other->pos_x_);
    std::swap(pos_y_, other->pos_y_);
    std::swap(tower_uuid_, other->tower_uuid_);
    std::swap(repair_time_, other->repair_time_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgBuildTowerRepairMS2C::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgBuildTowerRepairMS2C_descriptor_;
  metadata.reflection = MsgBuildTowerRepairMS2C_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgBuildTowerAppearanceMS2C::kMsgTypeFieldNumber;
const int MsgBuildTowerAppearanceMS2C::kMapobjectidFieldNumber;
const int MsgBuildTowerAppearanceMS2C::kPosxFieldNumber;
const int MsgBuildTowerAppearanceMS2C::kPosyFieldNumber;
const int MsgBuildTowerAppearanceMS2C::kEstateFieldNumber;
const int MsgBuildTowerAppearanceMS2C::kHpFieldNumber;
const int MsgBuildTowerAppearanceMS2C::kRepairbeginFieldNumber;
const int MsgBuildTowerAppearanceMS2C::kRepairendFieldNumber;
const int MsgBuildTowerAppearanceMS2C::kPosGridXFieldNumber;
const int MsgBuildTowerAppearanceMS2C::kPosGridYFieldNumber;
const int MsgBuildTowerAppearanceMS2C::kLevelFieldNumber;
const int MsgBuildTowerAppearanceMS2C::kGroupIdFieldNumber;
const int MsgBuildTowerAppearanceMS2C::kSoulUuidFieldNumber;
const int MsgBuildTowerAppearanceMS2C::kOwnerIggidIdFieldNumber;
const int MsgBuildTowerAppearanceMS2C::kTowerUuidFieldNumber;
const int MsgBuildTowerAppearanceMS2C::kCrystalBuffCfgidFieldNumber;
const int MsgBuildTowerAppearanceMS2C::kCrystalBuffStartTimeFieldNumber;
#endif  // !_MSC_VER

MsgBuildTowerAppearanceMS2C::MsgBuildTowerAppearanceMS2C()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.MsgBuildTowerAppearanceMS2C)
}

void MsgBuildTowerAppearanceMS2C::InitAsDefaultInstance() {
}

MsgBuildTowerAppearanceMS2C::MsgBuildTowerAppearanceMS2C(const MsgBuildTowerAppearanceMS2C& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.MsgBuildTowerAppearanceMS2C)
}

void MsgBuildTowerAppearanceMS2C::SharedCtor() {
  _cached_size_ = 0;
  msgtype_ = 2400;
  mapobjectid_ = 0;
  posx_ = 0;
  posy_ = 0;
  estate_ = 0;
  hp_ = 0;
  repairbegin_ = GOOGLE_LONGLONG(0);
  repairend_ = GOOGLE_LONGLONG(0);
  pos_grid_x_ = 0;
  pos_grid_y_ = 0;
  level_ = 0;
  group_id_ = 0;
  soul_uuid_ = GOOGLE_LONGLONG(0);
  owner_iggid_id_ = GOOGLE_LONGLONG(0);
  tower_uuid_ = GOOGLE_LONGLONG(0);
  crystal_buff_cfgid_ = 0;
  crystal_buff_start_time_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgBuildTowerAppearanceMS2C::~MsgBuildTowerAppearanceMS2C() {
  // @@protoc_insertion_point(destructor:MsgPB.MsgBuildTowerAppearanceMS2C)
  SharedDtor();
}

void MsgBuildTowerAppearanceMS2C::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgBuildTowerAppearanceMS2C::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgBuildTowerAppearanceMS2C::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgBuildTowerAppearanceMS2C_descriptor_;
}

const MsgBuildTowerAppearanceMS2C& MsgBuildTowerAppearanceMS2C::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgBuildTower_2eproto();
  return *default_instance_;
}

MsgBuildTowerAppearanceMS2C* MsgBuildTowerAppearanceMS2C::default_instance_ = NULL;

MsgBuildTowerAppearanceMS2C* MsgBuildTowerAppearanceMS2C::New() const {
  return new MsgBuildTowerAppearanceMS2C;
}

void MsgBuildTowerAppearanceMS2C::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<MsgBuildTowerAppearanceMS2C*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 255) {
    ZR_(mapobjectid_, repairend_);
    msgtype_ = 2400;
  }
  if (_has_bits_[8 / 32] & 65280) {
    ZR_(pos_grid_x_, tower_uuid_);
    crystal_buff_cfgid_ = 0;
  }
  crystal_buff_start_time_ = GOOGLE_LONGLONG(0);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgBuildTowerAppearanceMS2C::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.MsgBuildTowerAppearanceMS2C)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_BUILDTOWER_APPEARANCE_MS2C];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::EMsgType_IsValid(value)) {
            set_msgtype(static_cast< ::MsgPB::EMsgType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_mapobjectid;
        break;
      }

      // optional int32 mapobjectid = 3;
      case 3: {
        if (tag == 24) {
         parse_mapobjectid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &mapobjectid_)));
          set_has_mapobjectid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_posx;
        break;
      }

      // optional int32 posx = 4;
      case 4: {
        if (tag == 32) {
         parse_posx:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &posx_)));
          set_has_posx();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_posy;
        break;
      }

      // optional int32 posy = 5;
      case 5: {
        if (tag == 40) {
         parse_posy:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &posy_)));
          set_has_posy();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_estate;
        break;
      }

      // optional .MsgPB.TOWER_BUILD_STATE estate = 6;
      case 6: {
        if (tag == 48) {
         parse_estate:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::TOWER_BUILD_STATE_IsValid(value)) {
            set_estate(static_cast< ::MsgPB::TOWER_BUILD_STATE >(value));
          } else {
            mutable_unknown_fields()->AddVarint(6, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_hp;
        break;
      }

      // optional int32 hp = 7;
      case 7: {
        if (tag == 56) {
         parse_hp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &hp_)));
          set_has_hp();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_repairbegin;
        break;
      }

      // optional int64 repairbegin = 8;
      case 8: {
        if (tag == 64) {
         parse_repairbegin:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &repairbegin_)));
          set_has_repairbegin();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_repairend;
        break;
      }

      // optional int64 repairend = 9;
      case 9: {
        if (tag == 72) {
         parse_repairend:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &repairend_)));
          set_has_repairend();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(80)) goto parse_pos_grid_x;
        break;
      }

      // optional int32 pos_grid_x = 10;
      case 10: {
        if (tag == 80) {
         parse_pos_grid_x:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pos_grid_x_)));
          set_has_pos_grid_x();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(88)) goto parse_pos_grid_y;
        break;
      }

      // optional int32 pos_grid_y = 11;
      case 11: {
        if (tag == 88) {
         parse_pos_grid_y:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pos_grid_y_)));
          set_has_pos_grid_y();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(96)) goto parse_level;
        break;
      }

      // optional int32 level = 12;
      case 12: {
        if (tag == 96) {
         parse_level:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &level_)));
          set_has_level();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(104)) goto parse_group_id;
        break;
      }

      // optional int32 group_id = 13;
      case 13: {
        if (tag == 104) {
         parse_group_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &group_id_)));
          set_has_group_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(112)) goto parse_soul_uuid;
        break;
      }

      // optional int64 soul_uuid = 14;
      case 14: {
        if (tag == 112) {
         parse_soul_uuid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &soul_uuid_)));
          set_has_soul_uuid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(120)) goto parse_owner_iggid_id;
        break;
      }

      // optional int64 owner_iggid_id = 15;
      case 15: {
        if (tag == 120) {
         parse_owner_iggid_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &owner_iggid_id_)));
          set_has_owner_iggid_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(128)) goto parse_tower_uuid;
        break;
      }

      // optional int64 tower_uuid = 16;
      case 16: {
        if (tag == 128) {
         parse_tower_uuid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &tower_uuid_)));
          set_has_tower_uuid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(136)) goto parse_crystal_buff_cfgid;
        break;
      }

      // optional int32 crystal_buff_cfgid = 17;
      case 17: {
        if (tag == 136) {
         parse_crystal_buff_cfgid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &crystal_buff_cfgid_)));
          set_has_crystal_buff_cfgid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(144)) goto parse_crystal_buff_start_time;
        break;
      }

      // optional int64 crystal_buff_start_time = 18;
      case 18: {
        if (tag == 144) {
         parse_crystal_buff_start_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &crystal_buff_start_time_)));
          set_has_crystal_buff_start_time();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.MsgBuildTowerAppearanceMS2C)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.MsgBuildTowerAppearanceMS2C)
  return false;
#undef DO_
}

void MsgBuildTowerAppearanceMS2C::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.MsgBuildTowerAppearanceMS2C)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_BUILDTOWER_APPEARANCE_MS2C];
  if (has_msgtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->msgtype(), output);
  }

  // optional int32 mapobjectid = 3;
  if (has_mapobjectid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->mapobjectid(), output);
  }

  // optional int32 posx = 4;
  if (has_posx()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->posx(), output);
  }

  // optional int32 posy = 5;
  if (has_posy()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->posy(), output);
  }

  // optional .MsgPB.TOWER_BUILD_STATE estate = 6;
  if (has_estate()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      6, this->estate(), output);
  }

  // optional int32 hp = 7;
  if (has_hp()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->hp(), output);
  }

  // optional int64 repairbegin = 8;
  if (has_repairbegin()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(8, this->repairbegin(), output);
  }

  // optional int64 repairend = 9;
  if (has_repairend()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(9, this->repairend(), output);
  }

  // optional int32 pos_grid_x = 10;
  if (has_pos_grid_x()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->pos_grid_x(), output);
  }

  // optional int32 pos_grid_y = 11;
  if (has_pos_grid_y()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->pos_grid_y(), output);
  }

  // optional int32 level = 12;
  if (has_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(12, this->level(), output);
  }

  // optional int32 group_id = 13;
  if (has_group_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(13, this->group_id(), output);
  }

  // optional int64 soul_uuid = 14;
  if (has_soul_uuid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(14, this->soul_uuid(), output);
  }

  // optional int64 owner_iggid_id = 15;
  if (has_owner_iggid_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(15, this->owner_iggid_id(), output);
  }

  // optional int64 tower_uuid = 16;
  if (has_tower_uuid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(16, this->tower_uuid(), output);
  }

  // optional int32 crystal_buff_cfgid = 17;
  if (has_crystal_buff_cfgid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(17, this->crystal_buff_cfgid(), output);
  }

  // optional int64 crystal_buff_start_time = 18;
  if (has_crystal_buff_start_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(18, this->crystal_buff_start_time(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.MsgBuildTowerAppearanceMS2C)
}

::google::protobuf::uint8* MsgBuildTowerAppearanceMS2C::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.MsgBuildTowerAppearanceMS2C)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_BUILDTOWER_APPEARANCE_MS2C];
  if (has_msgtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->msgtype(), target);
  }

  // optional int32 mapobjectid = 3;
  if (has_mapobjectid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->mapobjectid(), target);
  }

  // optional int32 posx = 4;
  if (has_posx()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->posx(), target);
  }

  // optional int32 posy = 5;
  if (has_posy()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->posy(), target);
  }

  // optional .MsgPB.TOWER_BUILD_STATE estate = 6;
  if (has_estate()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      6, this->estate(), target);
  }

  // optional int32 hp = 7;
  if (has_hp()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->hp(), target);
  }

  // optional int64 repairbegin = 8;
  if (has_repairbegin()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(8, this->repairbegin(), target);
  }

  // optional int64 repairend = 9;
  if (has_repairend()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(9, this->repairend(), target);
  }

  // optional int32 pos_grid_x = 10;
  if (has_pos_grid_x()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->pos_grid_x(), target);
  }

  // optional int32 pos_grid_y = 11;
  if (has_pos_grid_y()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->pos_grid_y(), target);
  }

  // optional int32 level = 12;
  if (has_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(12, this->level(), target);
  }

  // optional int32 group_id = 13;
  if (has_group_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(13, this->group_id(), target);
  }

  // optional int64 soul_uuid = 14;
  if (has_soul_uuid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(14, this->soul_uuid(), target);
  }

  // optional int64 owner_iggid_id = 15;
  if (has_owner_iggid_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(15, this->owner_iggid_id(), target);
  }

  // optional int64 tower_uuid = 16;
  if (has_tower_uuid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(16, this->tower_uuid(), target);
  }

  // optional int32 crystal_buff_cfgid = 17;
  if (has_crystal_buff_cfgid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(17, this->crystal_buff_cfgid(), target);
  }

  // optional int64 crystal_buff_start_time = 18;
  if (has_crystal_buff_start_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(18, this->crystal_buff_start_time(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.MsgBuildTowerAppearanceMS2C)
  return target;
}

int MsgBuildTowerAppearanceMS2C::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_BUILDTOWER_APPEARANCE_MS2C];
    if (has_msgtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgtype());
    }

    // optional int32 mapobjectid = 3;
    if (has_mapobjectid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->mapobjectid());
    }

    // optional int32 posx = 4;
    if (has_posx()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->posx());
    }

    // optional int32 posy = 5;
    if (has_posy()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->posy());
    }

    // optional .MsgPB.TOWER_BUILD_STATE estate = 6;
    if (has_estate()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->estate());
    }

    // optional int32 hp = 7;
    if (has_hp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->hp());
    }

    // optional int64 repairbegin = 8;
    if (has_repairbegin()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->repairbegin());
    }

    // optional int64 repairend = 9;
    if (has_repairend()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->repairend());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional int32 pos_grid_x = 10;
    if (has_pos_grid_x()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pos_grid_x());
    }

    // optional int32 pos_grid_y = 11;
    if (has_pos_grid_y()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pos_grid_y());
    }

    // optional int32 level = 12;
    if (has_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->level());
    }

    // optional int32 group_id = 13;
    if (has_group_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->group_id());
    }

    // optional int64 soul_uuid = 14;
    if (has_soul_uuid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->soul_uuid());
    }

    // optional int64 owner_iggid_id = 15;
    if (has_owner_iggid_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->owner_iggid_id());
    }

    // optional int64 tower_uuid = 16;
    if (has_tower_uuid()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->tower_uuid());
    }

    // optional int32 crystal_buff_cfgid = 17;
    if (has_crystal_buff_cfgid()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->crystal_buff_cfgid());
    }

  }
  if (_has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    // optional int64 crystal_buff_start_time = 18;
    if (has_crystal_buff_start_time()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->crystal_buff_start_time());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgBuildTowerAppearanceMS2C::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgBuildTowerAppearanceMS2C* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgBuildTowerAppearanceMS2C*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgBuildTowerAppearanceMS2C::MergeFrom(const MsgBuildTowerAppearanceMS2C& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msgtype()) {
      set_msgtype(from.msgtype());
    }
    if (from.has_mapobjectid()) {
      set_mapobjectid(from.mapobjectid());
    }
    if (from.has_posx()) {
      set_posx(from.posx());
    }
    if (from.has_posy()) {
      set_posy(from.posy());
    }
    if (from.has_estate()) {
      set_estate(from.estate());
    }
    if (from.has_hp()) {
      set_hp(from.hp());
    }
    if (from.has_repairbegin()) {
      set_repairbegin(from.repairbegin());
    }
    if (from.has_repairend()) {
      set_repairend(from.repairend());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_pos_grid_x()) {
      set_pos_grid_x(from.pos_grid_x());
    }
    if (from.has_pos_grid_y()) {
      set_pos_grid_y(from.pos_grid_y());
    }
    if (from.has_level()) {
      set_level(from.level());
    }
    if (from.has_group_id()) {
      set_group_id(from.group_id());
    }
    if (from.has_soul_uuid()) {
      set_soul_uuid(from.soul_uuid());
    }
    if (from.has_owner_iggid_id()) {
      set_owner_iggid_id(from.owner_iggid_id());
    }
    if (from.has_tower_uuid()) {
      set_tower_uuid(from.tower_uuid());
    }
    if (from.has_crystal_buff_cfgid()) {
      set_crystal_buff_cfgid(from.crystal_buff_cfgid());
    }
  }
  if (from._has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    if (from.has_crystal_buff_start_time()) {
      set_crystal_buff_start_time(from.crystal_buff_start_time());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgBuildTowerAppearanceMS2C::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgBuildTowerAppearanceMS2C::CopyFrom(const MsgBuildTowerAppearanceMS2C& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgBuildTowerAppearanceMS2C::IsInitialized() const {

  return true;
}

void MsgBuildTowerAppearanceMS2C::Swap(MsgBuildTowerAppearanceMS2C* other) {
  if (other != this) {
    std::swap(msgtype_, other->msgtype_);
    std::swap(mapobjectid_, other->mapobjectid_);
    std::swap(posx_, other->posx_);
    std::swap(posy_, other->posy_);
    std::swap(estate_, other->estate_);
    std::swap(hp_, other->hp_);
    std::swap(repairbegin_, other->repairbegin_);
    std::swap(repairend_, other->repairend_);
    std::swap(pos_grid_x_, other->pos_grid_x_);
    std::swap(pos_grid_y_, other->pos_grid_y_);
    std::swap(level_, other->level_);
    std::swap(group_id_, other->group_id_);
    std::swap(soul_uuid_, other->soul_uuid_);
    std::swap(owner_iggid_id_, other->owner_iggid_id_);
    std::swap(tower_uuid_, other->tower_uuid_);
    std::swap(crystal_buff_cfgid_, other->crystal_buff_cfgid_);
    std::swap(crystal_buff_start_time_, other->crystal_buff_start_time_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgBuildTowerAppearanceMS2C::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgBuildTowerAppearanceMS2C_descriptor_;
  metadata.reflection = MsgBuildTowerAppearanceMS2C_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgBuildTowerRepairSkipC2MS::kMsgTypeFieldNumber;
const int MsgBuildTowerRepairSkipC2MS::kIggidFieldNumber;
const int MsgBuildTowerRepairSkipC2MS::kPosXFieldNumber;
const int MsgBuildTowerRepairSkipC2MS::kPosYFieldNumber;
const int MsgBuildTowerRepairSkipC2MS::kCashLeftFieldNumber;
const int MsgBuildTowerRepairSkipC2MS::kTowerUuidFieldNumber;
#endif  // !_MSC_VER

MsgBuildTowerRepairSkipC2MS::MsgBuildTowerRepairSkipC2MS()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.MsgBuildTowerRepairSkipC2MS)
}

void MsgBuildTowerRepairSkipC2MS::InitAsDefaultInstance() {
}

MsgBuildTowerRepairSkipC2MS::MsgBuildTowerRepairSkipC2MS(const MsgBuildTowerRepairSkipC2MS& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.MsgBuildTowerRepairSkipC2MS)
}

void MsgBuildTowerRepairSkipC2MS::SharedCtor() {
  _cached_size_ = 0;
  msgtype_ = 2403;
  iggid_ = GOOGLE_LONGLONG(0);
  pos_x_ = 0;
  pos_y_ = 0;
  cash_left_ = 0;
  tower_uuid_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgBuildTowerRepairSkipC2MS::~MsgBuildTowerRepairSkipC2MS() {
  // @@protoc_insertion_point(destructor:MsgPB.MsgBuildTowerRepairSkipC2MS)
  SharedDtor();
}

void MsgBuildTowerRepairSkipC2MS::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgBuildTowerRepairSkipC2MS::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgBuildTowerRepairSkipC2MS::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgBuildTowerRepairSkipC2MS_descriptor_;
}

const MsgBuildTowerRepairSkipC2MS& MsgBuildTowerRepairSkipC2MS::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgBuildTower_2eproto();
  return *default_instance_;
}

MsgBuildTowerRepairSkipC2MS* MsgBuildTowerRepairSkipC2MS::default_instance_ = NULL;

MsgBuildTowerRepairSkipC2MS* MsgBuildTowerRepairSkipC2MS::New() const {
  return new MsgBuildTowerRepairSkipC2MS;
}

void MsgBuildTowerRepairSkipC2MS::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<MsgBuildTowerRepairSkipC2MS*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 63) {
    ZR_(pos_x_, tower_uuid_);
    msgtype_ = 2403;
    iggid_ = GOOGLE_LONGLONG(0);
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgBuildTowerRepairSkipC2MS::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.MsgBuildTowerRepairSkipC2MS)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_BUILDTOWER_REPAIR_SKIP_C2MS];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::EMsgType_IsValid(value)) {
            set_msgtype(static_cast< ::MsgPB::EMsgType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_iggid;
        break;
      }

      // optional int64 iggid = 2;
      case 2: {
        if (tag == 16) {
         parse_iggid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &iggid_)));
          set_has_iggid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_pos_x;
        break;
      }

      // optional int32 pos_x = 3;
      case 3: {
        if (tag == 24) {
         parse_pos_x:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pos_x_)));
          set_has_pos_x();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_pos_y;
        break;
      }

      // optional int32 pos_y = 4;
      case 4: {
        if (tag == 32) {
         parse_pos_y:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pos_y_)));
          set_has_pos_y();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_cash_left;
        break;
      }

      // optional int32 cash_left = 5;
      case 5: {
        if (tag == 40) {
         parse_cash_left:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cash_left_)));
          set_has_cash_left();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_tower_uuid;
        break;
      }

      // optional int64 tower_uuid = 6;
      case 6: {
        if (tag == 48) {
         parse_tower_uuid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &tower_uuid_)));
          set_has_tower_uuid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.MsgBuildTowerRepairSkipC2MS)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.MsgBuildTowerRepairSkipC2MS)
  return false;
#undef DO_
}

void MsgBuildTowerRepairSkipC2MS::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.MsgBuildTowerRepairSkipC2MS)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_BUILDTOWER_REPAIR_SKIP_C2MS];
  if (has_msgtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->msgtype(), output);
  }

  // optional int64 iggid = 2;
  if (has_iggid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->iggid(), output);
  }

  // optional int32 pos_x = 3;
  if (has_pos_x()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->pos_x(), output);
  }

  // optional int32 pos_y = 4;
  if (has_pos_y()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->pos_y(), output);
  }

  // optional int32 cash_left = 5;
  if (has_cash_left()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->cash_left(), output);
  }

  // optional int64 tower_uuid = 6;
  if (has_tower_uuid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(6, this->tower_uuid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.MsgBuildTowerRepairSkipC2MS)
}

::google::protobuf::uint8* MsgBuildTowerRepairSkipC2MS::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.MsgBuildTowerRepairSkipC2MS)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_BUILDTOWER_REPAIR_SKIP_C2MS];
  if (has_msgtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->msgtype(), target);
  }

  // optional int64 iggid = 2;
  if (has_iggid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->iggid(), target);
  }

  // optional int32 pos_x = 3;
  if (has_pos_x()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->pos_x(), target);
  }

  // optional int32 pos_y = 4;
  if (has_pos_y()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->pos_y(), target);
  }

  // optional int32 cash_left = 5;
  if (has_cash_left()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->cash_left(), target);
  }

  // optional int64 tower_uuid = 6;
  if (has_tower_uuid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(6, this->tower_uuid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.MsgBuildTowerRepairSkipC2MS)
  return target;
}

int MsgBuildTowerRepairSkipC2MS::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_BUILDTOWER_REPAIR_SKIP_C2MS];
    if (has_msgtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgtype());
    }

    // optional int64 iggid = 2;
    if (has_iggid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->iggid());
    }

    // optional int32 pos_x = 3;
    if (has_pos_x()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pos_x());
    }

    // optional int32 pos_y = 4;
    if (has_pos_y()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pos_y());
    }

    // optional int32 cash_left = 5;
    if (has_cash_left()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->cash_left());
    }

    // optional int64 tower_uuid = 6;
    if (has_tower_uuid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->tower_uuid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgBuildTowerRepairSkipC2MS::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgBuildTowerRepairSkipC2MS* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgBuildTowerRepairSkipC2MS*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgBuildTowerRepairSkipC2MS::MergeFrom(const MsgBuildTowerRepairSkipC2MS& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msgtype()) {
      set_msgtype(from.msgtype());
    }
    if (from.has_iggid()) {
      set_iggid(from.iggid());
    }
    if (from.has_pos_x()) {
      set_pos_x(from.pos_x());
    }
    if (from.has_pos_y()) {
      set_pos_y(from.pos_y());
    }
    if (from.has_cash_left()) {
      set_cash_left(from.cash_left());
    }
    if (from.has_tower_uuid()) {
      set_tower_uuid(from.tower_uuid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgBuildTowerRepairSkipC2MS::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgBuildTowerRepairSkipC2MS::CopyFrom(const MsgBuildTowerRepairSkipC2MS& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgBuildTowerRepairSkipC2MS::IsInitialized() const {

  return true;
}

void MsgBuildTowerRepairSkipC2MS::Swap(MsgBuildTowerRepairSkipC2MS* other) {
  if (other != this) {
    std::swap(msgtype_, other->msgtype_);
    std::swap(iggid_, other->iggid_);
    std::swap(pos_x_, other->pos_x_);
    std::swap(pos_y_, other->pos_y_);
    std::swap(cash_left_, other->cash_left_);
    std::swap(tower_uuid_, other->tower_uuid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgBuildTowerRepairSkipC2MS::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgBuildTowerRepairSkipC2MS_descriptor_;
  metadata.reflection = MsgBuildTowerRepairSkipC2MS_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgBuildTowerRepairSkipMS2C::kMsgTypeFieldNumber;
const int MsgBuildTowerRepairSkipMS2C::kIggidFieldNumber;
const int MsgBuildTowerRepairSkipMS2C::kPosXFieldNumber;
const int MsgBuildTowerRepairSkipMS2C::kPosYFieldNumber;
const int MsgBuildTowerRepairSkipMS2C::kCashCostFieldNumber;
const int MsgBuildTowerRepairSkipMS2C::kTowerUuidFieldNumber;
#endif  // !_MSC_VER

MsgBuildTowerRepairSkipMS2C::MsgBuildTowerRepairSkipMS2C()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.MsgBuildTowerRepairSkipMS2C)
}

void MsgBuildTowerRepairSkipMS2C::InitAsDefaultInstance() {
}

MsgBuildTowerRepairSkipMS2C::MsgBuildTowerRepairSkipMS2C(const MsgBuildTowerRepairSkipMS2C& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.MsgBuildTowerRepairSkipMS2C)
}

void MsgBuildTowerRepairSkipMS2C::SharedCtor() {
  _cached_size_ = 0;
  msgtype_ = 2404;
  iggid_ = GOOGLE_LONGLONG(0);
  pos_x_ = 0;
  pos_y_ = 0;
  cash_cost_ = 0;
  tower_uuid_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgBuildTowerRepairSkipMS2C::~MsgBuildTowerRepairSkipMS2C() {
  // @@protoc_insertion_point(destructor:MsgPB.MsgBuildTowerRepairSkipMS2C)
  SharedDtor();
}

void MsgBuildTowerRepairSkipMS2C::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgBuildTowerRepairSkipMS2C::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgBuildTowerRepairSkipMS2C::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgBuildTowerRepairSkipMS2C_descriptor_;
}

const MsgBuildTowerRepairSkipMS2C& MsgBuildTowerRepairSkipMS2C::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgBuildTower_2eproto();
  return *default_instance_;
}

MsgBuildTowerRepairSkipMS2C* MsgBuildTowerRepairSkipMS2C::default_instance_ = NULL;

MsgBuildTowerRepairSkipMS2C* MsgBuildTowerRepairSkipMS2C::New() const {
  return new MsgBuildTowerRepairSkipMS2C;
}

void MsgBuildTowerRepairSkipMS2C::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<MsgBuildTowerRepairSkipMS2C*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 63) {
    ZR_(pos_x_, tower_uuid_);
    msgtype_ = 2404;
    iggid_ = GOOGLE_LONGLONG(0);
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgBuildTowerRepairSkipMS2C::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.MsgBuildTowerRepairSkipMS2C)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_BUILDTOWER_REPAIR_SKIP_MS2C];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::EMsgType_IsValid(value)) {
            set_msgtype(static_cast< ::MsgPB::EMsgType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_iggid;
        break;
      }

      // optional int64 iggid = 2;
      case 2: {
        if (tag == 16) {
         parse_iggid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &iggid_)));
          set_has_iggid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_pos_x;
        break;
      }

      // optional int32 pos_x = 3;
      case 3: {
        if (tag == 24) {
         parse_pos_x:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pos_x_)));
          set_has_pos_x();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_pos_y;
        break;
      }

      // optional int32 pos_y = 4;
      case 4: {
        if (tag == 32) {
         parse_pos_y:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pos_y_)));
          set_has_pos_y();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_cash_cost;
        break;
      }

      // optional int32 cash_cost = 5;
      case 5: {
        if (tag == 40) {
         parse_cash_cost:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cash_cost_)));
          set_has_cash_cost();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_tower_uuid;
        break;
      }

      // optional int64 tower_uuid = 6;
      case 6: {
        if (tag == 48) {
         parse_tower_uuid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &tower_uuid_)));
          set_has_tower_uuid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.MsgBuildTowerRepairSkipMS2C)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.MsgBuildTowerRepairSkipMS2C)
  return false;
#undef DO_
}

void MsgBuildTowerRepairSkipMS2C::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.MsgBuildTowerRepairSkipMS2C)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_BUILDTOWER_REPAIR_SKIP_MS2C];
  if (has_msgtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->msgtype(), output);
  }

  // optional int64 iggid = 2;
  if (has_iggid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->iggid(), output);
  }

  // optional int32 pos_x = 3;
  if (has_pos_x()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->pos_x(), output);
  }

  // optional int32 pos_y = 4;
  if (has_pos_y()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->pos_y(), output);
  }

  // optional int32 cash_cost = 5;
  if (has_cash_cost()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->cash_cost(), output);
  }

  // optional int64 tower_uuid = 6;
  if (has_tower_uuid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(6, this->tower_uuid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.MsgBuildTowerRepairSkipMS2C)
}

::google::protobuf::uint8* MsgBuildTowerRepairSkipMS2C::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.MsgBuildTowerRepairSkipMS2C)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_BUILDTOWER_REPAIR_SKIP_MS2C];
  if (has_msgtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->msgtype(), target);
  }

  // optional int64 iggid = 2;
  if (has_iggid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->iggid(), target);
  }

  // optional int32 pos_x = 3;
  if (has_pos_x()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->pos_x(), target);
  }

  // optional int32 pos_y = 4;
  if (has_pos_y()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->pos_y(), target);
  }

  // optional int32 cash_cost = 5;
  if (has_cash_cost()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->cash_cost(), target);
  }

  // optional int64 tower_uuid = 6;
  if (has_tower_uuid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(6, this->tower_uuid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.MsgBuildTowerRepairSkipMS2C)
  return target;
}

int MsgBuildTowerRepairSkipMS2C::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_BUILDTOWER_REPAIR_SKIP_MS2C];
    if (has_msgtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgtype());
    }

    // optional int64 iggid = 2;
    if (has_iggid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->iggid());
    }

    // optional int32 pos_x = 3;
    if (has_pos_x()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pos_x());
    }

    // optional int32 pos_y = 4;
    if (has_pos_y()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pos_y());
    }

    // optional int32 cash_cost = 5;
    if (has_cash_cost()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->cash_cost());
    }

    // optional int64 tower_uuid = 6;
    if (has_tower_uuid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->tower_uuid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgBuildTowerRepairSkipMS2C::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgBuildTowerRepairSkipMS2C* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgBuildTowerRepairSkipMS2C*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgBuildTowerRepairSkipMS2C::MergeFrom(const MsgBuildTowerRepairSkipMS2C& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msgtype()) {
      set_msgtype(from.msgtype());
    }
    if (from.has_iggid()) {
      set_iggid(from.iggid());
    }
    if (from.has_pos_x()) {
      set_pos_x(from.pos_x());
    }
    if (from.has_pos_y()) {
      set_pos_y(from.pos_y());
    }
    if (from.has_cash_cost()) {
      set_cash_cost(from.cash_cost());
    }
    if (from.has_tower_uuid()) {
      set_tower_uuid(from.tower_uuid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgBuildTowerRepairSkipMS2C::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgBuildTowerRepairSkipMS2C::CopyFrom(const MsgBuildTowerRepairSkipMS2C& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgBuildTowerRepairSkipMS2C::IsInitialized() const {

  return true;
}

void MsgBuildTowerRepairSkipMS2C::Swap(MsgBuildTowerRepairSkipMS2C* other) {
  if (other != this) {
    std::swap(msgtype_, other->msgtype_);
    std::swap(iggid_, other->iggid_);
    std::swap(pos_x_, other->pos_x_);
    std::swap(pos_y_, other->pos_y_);
    std::swap(cash_cost_, other->cash_cost_);
    std::swap(tower_uuid_, other->tower_uuid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgBuildTowerRepairSkipMS2C::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgBuildTowerRepairSkipMS2C_descriptor_;
  metadata.reflection = MsgBuildTowerRepairSkipMS2C_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgBuildTowerFunctionDataSummon::kSoulUuidFieldNumber;
const int MsgBuildTowerFunctionDataSummon::kSoulLevelFieldNumber;
#endif  // !_MSC_VER

MsgBuildTowerFunctionDataSummon::MsgBuildTowerFunctionDataSummon()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.MsgBuildTowerFunctionDataSummon)
}

void MsgBuildTowerFunctionDataSummon::InitAsDefaultInstance() {
}

MsgBuildTowerFunctionDataSummon::MsgBuildTowerFunctionDataSummon(const MsgBuildTowerFunctionDataSummon& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.MsgBuildTowerFunctionDataSummon)
}

void MsgBuildTowerFunctionDataSummon::SharedCtor() {
  _cached_size_ = 0;
  soul_uuid_ = GOOGLE_LONGLONG(-1);
  soul_level_ = -1;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgBuildTowerFunctionDataSummon::~MsgBuildTowerFunctionDataSummon() {
  // @@protoc_insertion_point(destructor:MsgPB.MsgBuildTowerFunctionDataSummon)
  SharedDtor();
}

void MsgBuildTowerFunctionDataSummon::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgBuildTowerFunctionDataSummon::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgBuildTowerFunctionDataSummon::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgBuildTowerFunctionDataSummon_descriptor_;
}

const MsgBuildTowerFunctionDataSummon& MsgBuildTowerFunctionDataSummon::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgBuildTower_2eproto();
  return *default_instance_;
}

MsgBuildTowerFunctionDataSummon* MsgBuildTowerFunctionDataSummon::default_instance_ = NULL;

MsgBuildTowerFunctionDataSummon* MsgBuildTowerFunctionDataSummon::New() const {
  return new MsgBuildTowerFunctionDataSummon;
}

void MsgBuildTowerFunctionDataSummon::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    soul_uuid_ = GOOGLE_LONGLONG(-1);
    soul_level_ = -1;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgBuildTowerFunctionDataSummon::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.MsgBuildTowerFunctionDataSummon)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 soul_uuid = 1 [default = -1];
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &soul_uuid_)));
          set_has_soul_uuid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_soul_level;
        break;
      }

      // optional int32 soul_level = 2 [default = -1];
      case 2: {
        if (tag == 16) {
         parse_soul_level:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &soul_level_)));
          set_has_soul_level();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.MsgBuildTowerFunctionDataSummon)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.MsgBuildTowerFunctionDataSummon)
  return false;
#undef DO_
}

void MsgBuildTowerFunctionDataSummon::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.MsgBuildTowerFunctionDataSummon)
  // optional int64 soul_uuid = 1 [default = -1];
  if (has_soul_uuid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->soul_uuid(), output);
  }

  // optional int32 soul_level = 2 [default = -1];
  if (has_soul_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->soul_level(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.MsgBuildTowerFunctionDataSummon)
}

::google::protobuf::uint8* MsgBuildTowerFunctionDataSummon::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.MsgBuildTowerFunctionDataSummon)
  // optional int64 soul_uuid = 1 [default = -1];
  if (has_soul_uuid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->soul_uuid(), target);
  }

  // optional int32 soul_level = 2 [default = -1];
  if (has_soul_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->soul_level(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.MsgBuildTowerFunctionDataSummon)
  return target;
}

int MsgBuildTowerFunctionDataSummon::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 soul_uuid = 1 [default = -1];
    if (has_soul_uuid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->soul_uuid());
    }

    // optional int32 soul_level = 2 [default = -1];
    if (has_soul_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->soul_level());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgBuildTowerFunctionDataSummon::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgBuildTowerFunctionDataSummon* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgBuildTowerFunctionDataSummon*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgBuildTowerFunctionDataSummon::MergeFrom(const MsgBuildTowerFunctionDataSummon& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_soul_uuid()) {
      set_soul_uuid(from.soul_uuid());
    }
    if (from.has_soul_level()) {
      set_soul_level(from.soul_level());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgBuildTowerFunctionDataSummon::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgBuildTowerFunctionDataSummon::CopyFrom(const MsgBuildTowerFunctionDataSummon& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgBuildTowerFunctionDataSummon::IsInitialized() const {

  return true;
}

void MsgBuildTowerFunctionDataSummon::Swap(MsgBuildTowerFunctionDataSummon* other) {
  if (other != this) {
    std::swap(soul_uuid_, other->soul_uuid_);
    std::swap(soul_level_, other->soul_level_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgBuildTowerFunctionDataSummon::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgBuildTowerFunctionDataSummon_descriptor_;
  metadata.reflection = MsgBuildTowerFunctionDataSummon_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgBuildTowerFunctionDataCrystalBuff::kBuffStartTimeFieldNumber;
const int MsgBuildTowerFunctionDataCrystalBuff::kCrystalBuffCfgidFieldNumber;
#endif  // !_MSC_VER

MsgBuildTowerFunctionDataCrystalBuff::MsgBuildTowerFunctionDataCrystalBuff()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.MsgBuildTowerFunctionDataCrystalBuff)
}

void MsgBuildTowerFunctionDataCrystalBuff::InitAsDefaultInstance() {
}

MsgBuildTowerFunctionDataCrystalBuff::MsgBuildTowerFunctionDataCrystalBuff(const MsgBuildTowerFunctionDataCrystalBuff& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.MsgBuildTowerFunctionDataCrystalBuff)
}

void MsgBuildTowerFunctionDataCrystalBuff::SharedCtor() {
  _cached_size_ = 0;
  buff_start_time_ = GOOGLE_LONGLONG(-1);
  crystal_buff_cfgid_ = -1;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgBuildTowerFunctionDataCrystalBuff::~MsgBuildTowerFunctionDataCrystalBuff() {
  // @@protoc_insertion_point(destructor:MsgPB.MsgBuildTowerFunctionDataCrystalBuff)
  SharedDtor();
}

void MsgBuildTowerFunctionDataCrystalBuff::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgBuildTowerFunctionDataCrystalBuff::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgBuildTowerFunctionDataCrystalBuff::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgBuildTowerFunctionDataCrystalBuff_descriptor_;
}

const MsgBuildTowerFunctionDataCrystalBuff& MsgBuildTowerFunctionDataCrystalBuff::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgBuildTower_2eproto();
  return *default_instance_;
}

MsgBuildTowerFunctionDataCrystalBuff* MsgBuildTowerFunctionDataCrystalBuff::default_instance_ = NULL;

MsgBuildTowerFunctionDataCrystalBuff* MsgBuildTowerFunctionDataCrystalBuff::New() const {
  return new MsgBuildTowerFunctionDataCrystalBuff;
}

void MsgBuildTowerFunctionDataCrystalBuff::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    buff_start_time_ = GOOGLE_LONGLONG(-1);
    crystal_buff_cfgid_ = -1;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgBuildTowerFunctionDataCrystalBuff::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.MsgBuildTowerFunctionDataCrystalBuff)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 buff_start_time = 1 [default = -1];
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &buff_start_time_)));
          set_has_buff_start_time();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_crystal_buff_cfgid;
        break;
      }

      // optional int32 crystal_buff_cfgid = 2 [default = -1];
      case 2: {
        if (tag == 16) {
         parse_crystal_buff_cfgid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &crystal_buff_cfgid_)));
          set_has_crystal_buff_cfgid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.MsgBuildTowerFunctionDataCrystalBuff)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.MsgBuildTowerFunctionDataCrystalBuff)
  return false;
#undef DO_
}

void MsgBuildTowerFunctionDataCrystalBuff::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.MsgBuildTowerFunctionDataCrystalBuff)
  // optional int64 buff_start_time = 1 [default = -1];
  if (has_buff_start_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->buff_start_time(), output);
  }

  // optional int32 crystal_buff_cfgid = 2 [default = -1];
  if (has_crystal_buff_cfgid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->crystal_buff_cfgid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.MsgBuildTowerFunctionDataCrystalBuff)
}

::google::protobuf::uint8* MsgBuildTowerFunctionDataCrystalBuff::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.MsgBuildTowerFunctionDataCrystalBuff)
  // optional int64 buff_start_time = 1 [default = -1];
  if (has_buff_start_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->buff_start_time(), target);
  }

  // optional int32 crystal_buff_cfgid = 2 [default = -1];
  if (has_crystal_buff_cfgid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->crystal_buff_cfgid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.MsgBuildTowerFunctionDataCrystalBuff)
  return target;
}

int MsgBuildTowerFunctionDataCrystalBuff::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 buff_start_time = 1 [default = -1];
    if (has_buff_start_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->buff_start_time());
    }

    // optional int32 crystal_buff_cfgid = 2 [default = -1];
    if (has_crystal_buff_cfgid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->crystal_buff_cfgid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgBuildTowerFunctionDataCrystalBuff::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgBuildTowerFunctionDataCrystalBuff* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgBuildTowerFunctionDataCrystalBuff*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgBuildTowerFunctionDataCrystalBuff::MergeFrom(const MsgBuildTowerFunctionDataCrystalBuff& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_buff_start_time()) {
      set_buff_start_time(from.buff_start_time());
    }
    if (from.has_crystal_buff_cfgid()) {
      set_crystal_buff_cfgid(from.crystal_buff_cfgid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgBuildTowerFunctionDataCrystalBuff::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgBuildTowerFunctionDataCrystalBuff::CopyFrom(const MsgBuildTowerFunctionDataCrystalBuff& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgBuildTowerFunctionDataCrystalBuff::IsInitialized() const {

  return true;
}

void MsgBuildTowerFunctionDataCrystalBuff::Swap(MsgBuildTowerFunctionDataCrystalBuff* other) {
  if (other != this) {
    std::swap(buff_start_time_, other->buff_start_time_);
    std::swap(crystal_buff_cfgid_, other->crystal_buff_cfgid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgBuildTowerFunctionDataCrystalBuff::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgBuildTowerFunctionDataCrystalBuff_descriptor_;
  metadata.reflection = MsgBuildTowerFunctionDataCrystalBuff_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgBuildTowerFunctionData::kSummonDataFieldNumber;
const int MsgBuildTowerFunctionData::kCrystalBuffFieldNumber;
#endif  // !_MSC_VER

MsgBuildTowerFunctionData::MsgBuildTowerFunctionData()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.MsgBuildTowerFunctionData)
}

void MsgBuildTowerFunctionData::InitAsDefaultInstance() {
  summon_data_ = const_cast< ::MsgPB::MsgBuildTowerFunctionDataSummon*>(&::MsgPB::MsgBuildTowerFunctionDataSummon::default_instance());
  crystal_buff_ = const_cast< ::MsgPB::MsgBuildTowerFunctionDataCrystalBuff*>(&::MsgPB::MsgBuildTowerFunctionDataCrystalBuff::default_instance());
}

MsgBuildTowerFunctionData::MsgBuildTowerFunctionData(const MsgBuildTowerFunctionData& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.MsgBuildTowerFunctionData)
}

void MsgBuildTowerFunctionData::SharedCtor() {
  _cached_size_ = 0;
  summon_data_ = NULL;
  crystal_buff_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgBuildTowerFunctionData::~MsgBuildTowerFunctionData() {
  // @@protoc_insertion_point(destructor:MsgPB.MsgBuildTowerFunctionData)
  SharedDtor();
}

void MsgBuildTowerFunctionData::SharedDtor() {
  if (this != default_instance_) {
    delete summon_data_;
    delete crystal_buff_;
  }
}

void MsgBuildTowerFunctionData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgBuildTowerFunctionData::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgBuildTowerFunctionData_descriptor_;
}

const MsgBuildTowerFunctionData& MsgBuildTowerFunctionData::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgBuildTower_2eproto();
  return *default_instance_;
}

MsgBuildTowerFunctionData* MsgBuildTowerFunctionData::default_instance_ = NULL;

MsgBuildTowerFunctionData* MsgBuildTowerFunctionData::New() const {
  return new MsgBuildTowerFunctionData;
}

void MsgBuildTowerFunctionData::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    if (has_summon_data()) {
      if (summon_data_ != NULL) summon_data_->::MsgPB::MsgBuildTowerFunctionDataSummon::Clear();
    }
    if (has_crystal_buff()) {
      if (crystal_buff_ != NULL) crystal_buff_->::MsgPB::MsgBuildTowerFunctionDataCrystalBuff::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgBuildTowerFunctionData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.MsgBuildTowerFunctionData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .MsgPB.MsgBuildTowerFunctionDataSummon summon_data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_summon_data()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_crystal_buff;
        break;
      }

      // optional .MsgPB.MsgBuildTowerFunctionDataCrystalBuff crystal_buff = 2;
      case 2: {
        if (tag == 18) {
         parse_crystal_buff:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_crystal_buff()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.MsgBuildTowerFunctionData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.MsgBuildTowerFunctionData)
  return false;
#undef DO_
}

void MsgBuildTowerFunctionData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.MsgBuildTowerFunctionData)
  // optional .MsgPB.MsgBuildTowerFunctionDataSummon summon_data = 1;
  if (has_summon_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->summon_data(), output);
  }

  // optional .MsgPB.MsgBuildTowerFunctionDataCrystalBuff crystal_buff = 2;
  if (has_crystal_buff()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->crystal_buff(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.MsgBuildTowerFunctionData)
}

::google::protobuf::uint8* MsgBuildTowerFunctionData::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.MsgBuildTowerFunctionData)
  // optional .MsgPB.MsgBuildTowerFunctionDataSummon summon_data = 1;
  if (has_summon_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->summon_data(), target);
  }

  // optional .MsgPB.MsgBuildTowerFunctionDataCrystalBuff crystal_buff = 2;
  if (has_crystal_buff()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->crystal_buff(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.MsgBuildTowerFunctionData)
  return target;
}

int MsgBuildTowerFunctionData::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .MsgPB.MsgBuildTowerFunctionDataSummon summon_data = 1;
    if (has_summon_data()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->summon_data());
    }

    // optional .MsgPB.MsgBuildTowerFunctionDataCrystalBuff crystal_buff = 2;
    if (has_crystal_buff()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->crystal_buff());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgBuildTowerFunctionData::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgBuildTowerFunctionData* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgBuildTowerFunctionData*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgBuildTowerFunctionData::MergeFrom(const MsgBuildTowerFunctionData& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_summon_data()) {
      mutable_summon_data()->::MsgPB::MsgBuildTowerFunctionDataSummon::MergeFrom(from.summon_data());
    }
    if (from.has_crystal_buff()) {
      mutable_crystal_buff()->::MsgPB::MsgBuildTowerFunctionDataCrystalBuff::MergeFrom(from.crystal_buff());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgBuildTowerFunctionData::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgBuildTowerFunctionData::CopyFrom(const MsgBuildTowerFunctionData& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgBuildTowerFunctionData::IsInitialized() const {

  return true;
}

void MsgBuildTowerFunctionData::Swap(MsgBuildTowerFunctionData* other) {
  if (other != this) {
    std::swap(summon_data_, other->summon_data_);
    std::swap(crystal_buff_, other->crystal_buff_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgBuildTowerFunctionData::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgBuildTowerFunctionData_descriptor_;
  metadata.reflection = MsgBuildTowerFunctionData_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgBuildTowerData::kUuidFieldNumber;
const int MsgBuildTowerData::kMapidFieldNumber;
const int MsgBuildTowerData::kTemplateidFieldNumber;
const int MsgBuildTowerData::kPosXFieldNumber;
const int MsgBuildTowerData::kPosYFieldNumber;
const int MsgBuildTowerData::kHpFieldNumber;
const int MsgBuildTowerData::kMpFieldNumber;
const int MsgBuildTowerData::kRepairBeginFieldNumber;
const int MsgBuildTowerData::kRepairEndFieldNumber;
const int MsgBuildTowerData::kRepairHpFieldNumber;
const int MsgBuildTowerData::kTowerAttrFieldNumber;
const int MsgBuildTowerData::kLevelFieldNumber;
const int MsgBuildTowerData::kLevelInfoFieldNumber;
const int MsgBuildTowerData::kFunctionDataFieldNumber;
const int MsgBuildTowerData::kDirtyFieldNumber;
#endif  // !_MSC_VER

MsgBuildTowerData::MsgBuildTowerData()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.MsgBuildTowerData)
}

void MsgBuildTowerData::InitAsDefaultInstance() {
  function_data_ = const_cast< ::MsgPB::MsgBuildTowerFunctionData*>(&::MsgPB::MsgBuildTowerFunctionData::default_instance());
}

MsgBuildTowerData::MsgBuildTowerData(const MsgBuildTowerData& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.MsgBuildTowerData)
}

void MsgBuildTowerData::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  uuid_ = GOOGLE_LONGLONG(0);
  mapid_ = 0;
  templateid_ = 0;
  pos_x_ = 0;
  pos_y_ = 0;
  hp_ = 0;
  mp_ = 0;
  repair_begin_ = GOOGLE_LONGLONG(0);
  repair_end_ = GOOGLE_LONGLONG(0);
  repair_hp_ = 0;
  tower_attr_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  level_ = 0;
  level_info_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  function_data_ = NULL;
  dirty_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgBuildTowerData::~MsgBuildTowerData() {
  // @@protoc_insertion_point(destructor:MsgPB.MsgBuildTowerData)
  SharedDtor();
}

void MsgBuildTowerData::SharedDtor() {
  if (tower_attr_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete tower_attr_;
  }
  if (level_info_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete level_info_;
  }
  if (this != default_instance_) {
    delete function_data_;
  }
}

void MsgBuildTowerData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgBuildTowerData::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgBuildTowerData_descriptor_;
}

const MsgBuildTowerData& MsgBuildTowerData::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgBuildTower_2eproto();
  return *default_instance_;
}

MsgBuildTowerData* MsgBuildTowerData::default_instance_ = NULL;

MsgBuildTowerData* MsgBuildTowerData::New() const {
  return new MsgBuildTowerData;
}

void MsgBuildTowerData::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<MsgBuildTowerData*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 255) {
    ZR_(uuid_, repair_begin_);
  }
  if (_has_bits_[8 / 32] & 32512) {
    ZR_(repair_hp_, level_);
    repair_end_ = GOOGLE_LONGLONG(0);
    if (has_tower_attr()) {
      if (tower_attr_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        tower_attr_->clear();
      }
    }
    if (has_level_info()) {
      if (level_info_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        level_info_->clear();
      }
    }
    if (has_function_data()) {
      if (function_data_ != NULL) function_data_->::MsgPB::MsgBuildTowerFunctionData::Clear();
    }
    dirty_ = GOOGLE_LONGLONG(0);
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgBuildTowerData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.MsgBuildTowerData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 uuid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &uuid_)));
          set_has_uuid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_mapid;
        break;
      }

      // optional int32 mapid = 2;
      case 2: {
        if (tag == 16) {
         parse_mapid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &mapid_)));
          set_has_mapid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_templateid;
        break;
      }

      // optional int32 templateid = 3;
      case 3: {
        if (tag == 24) {
         parse_templateid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &templateid_)));
          set_has_templateid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_pos_x;
        break;
      }

      // optional int32 pos_x = 4;
      case 4: {
        if (tag == 32) {
         parse_pos_x:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pos_x_)));
          set_has_pos_x();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_pos_y;
        break;
      }

      // optional int32 pos_y = 5;
      case 5: {
        if (tag == 40) {
         parse_pos_y:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pos_y_)));
          set_has_pos_y();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_hp;
        break;
      }

      // optional int32 hp = 6;
      case 6: {
        if (tag == 48) {
         parse_hp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &hp_)));
          set_has_hp();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_mp;
        break;
      }

      // optional int32 mp = 7;
      case 7: {
        if (tag == 56) {
         parse_mp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &mp_)));
          set_has_mp();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_repair_begin;
        break;
      }

      // optional int64 repair_begin = 8;
      case 8: {
        if (tag == 64) {
         parse_repair_begin:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &repair_begin_)));
          set_has_repair_begin();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_repair_end;
        break;
      }

      // optional int64 repair_end = 9;
      case 9: {
        if (tag == 72) {
         parse_repair_end:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &repair_end_)));
          set_has_repair_end();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(80)) goto parse_repair_hp;
        break;
      }

      // optional int32 repair_hp = 10;
      case 10: {
        if (tag == 80) {
         parse_repair_hp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &repair_hp_)));
          set_has_repair_hp();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(90)) goto parse_tower_attr;
        break;
      }

      // optional string tower_attr = 11;
      case 11: {
        if (tag == 90) {
         parse_tower_attr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_tower_attr()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->tower_attr().data(), this->tower_attr().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tower_attr");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(96)) goto parse_level;
        break;
      }

      // optional int32 level = 12;
      case 12: {
        if (tag == 96) {
         parse_level:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &level_)));
          set_has_level();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(106)) goto parse_level_info;
        break;
      }

      // optional string level_info = 13;
      case 13: {
        if (tag == 106) {
         parse_level_info:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_level_info()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->level_info().data(), this->level_info().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "level_info");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(114)) goto parse_function_data;
        break;
      }

      // optional .MsgPB.MsgBuildTowerFunctionData function_data = 14;
      case 14: {
        if (tag == 114) {
         parse_function_data:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_function_data()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(120)) goto parse_dirty;
        break;
      }

      // optional int64 dirty = 15;
      case 15: {
        if (tag == 120) {
         parse_dirty:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &dirty_)));
          set_has_dirty();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.MsgBuildTowerData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.MsgBuildTowerData)
  return false;
#undef DO_
}

void MsgBuildTowerData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.MsgBuildTowerData)
  // optional int64 uuid = 1;
  if (has_uuid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->uuid(), output);
  }

  // optional int32 mapid = 2;
  if (has_mapid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->mapid(), output);
  }

  // optional int32 templateid = 3;
  if (has_templateid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->templateid(), output);
  }

  // optional int32 pos_x = 4;
  if (has_pos_x()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->pos_x(), output);
  }

  // optional int32 pos_y = 5;
  if (has_pos_y()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->pos_y(), output);
  }

  // optional int32 hp = 6;
  if (has_hp()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->hp(), output);
  }

  // optional int32 mp = 7;
  if (has_mp()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->mp(), output);
  }

  // optional int64 repair_begin = 8;
  if (has_repair_begin()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(8, this->repair_begin(), output);
  }

  // optional int64 repair_end = 9;
  if (has_repair_end()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(9, this->repair_end(), output);
  }

  // optional int32 repair_hp = 10;
  if (has_repair_hp()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->repair_hp(), output);
  }

  // optional string tower_attr = 11;
  if (has_tower_attr()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->tower_attr().data(), this->tower_attr().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tower_attr");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->tower_attr(), output);
  }

  // optional int32 level = 12;
  if (has_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(12, this->level(), output);
  }

  // optional string level_info = 13;
  if (has_level_info()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->level_info().data(), this->level_info().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "level_info");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      13, this->level_info(), output);
  }

  // optional .MsgPB.MsgBuildTowerFunctionData function_data = 14;
  if (has_function_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      14, this->function_data(), output);
  }

  // optional int64 dirty = 15;
  if (has_dirty()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(15, this->dirty(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.MsgBuildTowerData)
}

::google::protobuf::uint8* MsgBuildTowerData::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.MsgBuildTowerData)
  // optional int64 uuid = 1;
  if (has_uuid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->uuid(), target);
  }

  // optional int32 mapid = 2;
  if (has_mapid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->mapid(), target);
  }

  // optional int32 templateid = 3;
  if (has_templateid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->templateid(), target);
  }

  // optional int32 pos_x = 4;
  if (has_pos_x()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->pos_x(), target);
  }

  // optional int32 pos_y = 5;
  if (has_pos_y()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->pos_y(), target);
  }

  // optional int32 hp = 6;
  if (has_hp()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->hp(), target);
  }

  // optional int32 mp = 7;
  if (has_mp()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->mp(), target);
  }

  // optional int64 repair_begin = 8;
  if (has_repair_begin()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(8, this->repair_begin(), target);
  }

  // optional int64 repair_end = 9;
  if (has_repair_end()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(9, this->repair_end(), target);
  }

  // optional int32 repair_hp = 10;
  if (has_repair_hp()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->repair_hp(), target);
  }

  // optional string tower_attr = 11;
  if (has_tower_attr()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->tower_attr().data(), this->tower_attr().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tower_attr");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->tower_attr(), target);
  }

  // optional int32 level = 12;
  if (has_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(12, this->level(), target);
  }

  // optional string level_info = 13;
  if (has_level_info()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->level_info().data(), this->level_info().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "level_info");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        13, this->level_info(), target);
  }

  // optional .MsgPB.MsgBuildTowerFunctionData function_data = 14;
  if (has_function_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        14, this->function_data(), target);
  }

  // optional int64 dirty = 15;
  if (has_dirty()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(15, this->dirty(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.MsgBuildTowerData)
  return target;
}

int MsgBuildTowerData::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 uuid = 1;
    if (has_uuid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->uuid());
    }

    // optional int32 mapid = 2;
    if (has_mapid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->mapid());
    }

    // optional int32 templateid = 3;
    if (has_templateid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->templateid());
    }

    // optional int32 pos_x = 4;
    if (has_pos_x()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pos_x());
    }

    // optional int32 pos_y = 5;
    if (has_pos_y()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pos_y());
    }

    // optional int32 hp = 6;
    if (has_hp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->hp());
    }

    // optional int32 mp = 7;
    if (has_mp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->mp());
    }

    // optional int64 repair_begin = 8;
    if (has_repair_begin()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->repair_begin());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional int64 repair_end = 9;
    if (has_repair_end()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->repair_end());
    }

    // optional int32 repair_hp = 10;
    if (has_repair_hp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->repair_hp());
    }

    // optional string tower_attr = 11;
    if (has_tower_attr()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->tower_attr());
    }

    // optional int32 level = 12;
    if (has_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->level());
    }

    // optional string level_info = 13;
    if (has_level_info()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->level_info());
    }

    // optional .MsgPB.MsgBuildTowerFunctionData function_data = 14;
    if (has_function_data()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->function_data());
    }

    // optional int64 dirty = 15;
    if (has_dirty()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->dirty());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgBuildTowerData::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgBuildTowerData* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgBuildTowerData*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgBuildTowerData::MergeFrom(const MsgBuildTowerData& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_uuid()) {
      set_uuid(from.uuid());
    }
    if (from.has_mapid()) {
      set_mapid(from.mapid());
    }
    if (from.has_templateid()) {
      set_templateid(from.templateid());
    }
    if (from.has_pos_x()) {
      set_pos_x(from.pos_x());
    }
    if (from.has_pos_y()) {
      set_pos_y(from.pos_y());
    }
    if (from.has_hp()) {
      set_hp(from.hp());
    }
    if (from.has_mp()) {
      set_mp(from.mp());
    }
    if (from.has_repair_begin()) {
      set_repair_begin(from.repair_begin());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_repair_end()) {
      set_repair_end(from.repair_end());
    }
    if (from.has_repair_hp()) {
      set_repair_hp(from.repair_hp());
    }
    if (from.has_tower_attr()) {
      set_tower_attr(from.tower_attr());
    }
    if (from.has_level()) {
      set_level(from.level());
    }
    if (from.has_level_info()) {
      set_level_info(from.level_info());
    }
    if (from.has_function_data()) {
      mutable_function_data()->::MsgPB::MsgBuildTowerFunctionData::MergeFrom(from.function_data());
    }
    if (from.has_dirty()) {
      set_dirty(from.dirty());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgBuildTowerData::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgBuildTowerData::CopyFrom(const MsgBuildTowerData& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgBuildTowerData::IsInitialized() const {

  return true;
}

void MsgBuildTowerData::Swap(MsgBuildTowerData* other) {
  if (other != this) {
    std::swap(uuid_, other->uuid_);
    std::swap(mapid_, other->mapid_);
    std::swap(templateid_, other->templateid_);
    std::swap(pos_x_, other->pos_x_);
    std::swap(pos_y_, other->pos_y_);
    std::swap(hp_, other->hp_);
    std::swap(mp_, other->mp_);
    std::swap(repair_begin_, other->repair_begin_);
    std::swap(repair_end_, other->repair_end_);
    std::swap(repair_hp_, other->repair_hp_);
    std::swap(tower_attr_, other->tower_attr_);
    std::swap(level_, other->level_);
    std::swap(level_info_, other->level_info_);
    std::swap(function_data_, other->function_data_);
    std::swap(dirty_, other->dirty_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgBuildTowerData::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgBuildTowerData_descriptor_;
  metadata.reflection = MsgBuildTowerData_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgBuildTowerUpdate_C2MS::kMsgTypeFieldNumber;
const int MsgBuildTowerUpdate_C2MS::kIggidFieldNumber;
const int MsgBuildTowerUpdate_C2MS::kPosXFieldNumber;
const int MsgBuildTowerUpdate_C2MS::kPosYFieldNumber;
const int MsgBuildTowerUpdate_C2MS::kLevelFieldNumber;
const int MsgBuildTowerUpdate_C2MS::kTowerUuidFieldNumber;
#endif  // !_MSC_VER

MsgBuildTowerUpdate_C2MS::MsgBuildTowerUpdate_C2MS()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.MsgBuildTowerUpdate_C2MS)
}

void MsgBuildTowerUpdate_C2MS::InitAsDefaultInstance() {
}

MsgBuildTowerUpdate_C2MS::MsgBuildTowerUpdate_C2MS(const MsgBuildTowerUpdate_C2MS& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.MsgBuildTowerUpdate_C2MS)
}

void MsgBuildTowerUpdate_C2MS::SharedCtor() {
  _cached_size_ = 0;
  msgtype_ = 2450;
  iggid_ = GOOGLE_LONGLONG(0);
  pos_x_ = 0;
  pos_y_ = 0;
  level_ = 0;
  tower_uuid_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgBuildTowerUpdate_C2MS::~MsgBuildTowerUpdate_C2MS() {
  // @@protoc_insertion_point(destructor:MsgPB.MsgBuildTowerUpdate_C2MS)
  SharedDtor();
}

void MsgBuildTowerUpdate_C2MS::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgBuildTowerUpdate_C2MS::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgBuildTowerUpdate_C2MS::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgBuildTowerUpdate_C2MS_descriptor_;
}

const MsgBuildTowerUpdate_C2MS& MsgBuildTowerUpdate_C2MS::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgBuildTower_2eproto();
  return *default_instance_;
}

MsgBuildTowerUpdate_C2MS* MsgBuildTowerUpdate_C2MS::default_instance_ = NULL;

MsgBuildTowerUpdate_C2MS* MsgBuildTowerUpdate_C2MS::New() const {
  return new MsgBuildTowerUpdate_C2MS;
}

void MsgBuildTowerUpdate_C2MS::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<MsgBuildTowerUpdate_C2MS*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 63) {
    ZR_(pos_x_, tower_uuid_);
    msgtype_ = 2450;
    iggid_ = GOOGLE_LONGLONG(0);
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgBuildTowerUpdate_C2MS::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.MsgBuildTowerUpdate_C2MS)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_BUILDTOWER_UPDATE_C2MS];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::EMsgType_IsValid(value)) {
            set_msgtype(static_cast< ::MsgPB::EMsgType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_iggid;
        break;
      }

      // optional int64 iggid = 2;
      case 2: {
        if (tag == 16) {
         parse_iggid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &iggid_)));
          set_has_iggid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_pos_x;
        break;
      }

      // optional int32 pos_x = 3;
      case 3: {
        if (tag == 24) {
         parse_pos_x:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pos_x_)));
          set_has_pos_x();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_pos_y;
        break;
      }

      // optional int32 pos_y = 4;
      case 4: {
        if (tag == 32) {
         parse_pos_y:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pos_y_)));
          set_has_pos_y();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_level;
        break;
      }

      // optional int32 level = 5;
      case 5: {
        if (tag == 40) {
         parse_level:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &level_)));
          set_has_level();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_tower_uuid;
        break;
      }

      // optional int64 tower_uuid = 6;
      case 6: {
        if (tag == 48) {
         parse_tower_uuid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &tower_uuid_)));
          set_has_tower_uuid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.MsgBuildTowerUpdate_C2MS)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.MsgBuildTowerUpdate_C2MS)
  return false;
#undef DO_
}

void MsgBuildTowerUpdate_C2MS::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.MsgBuildTowerUpdate_C2MS)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_BUILDTOWER_UPDATE_C2MS];
  if (has_msgtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->msgtype(), output);
  }

  // optional int64 iggid = 2;
  if (has_iggid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->iggid(), output);
  }

  // optional int32 pos_x = 3;
  if (has_pos_x()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->pos_x(), output);
  }

  // optional int32 pos_y = 4;
  if (has_pos_y()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->pos_y(), output);
  }

  // optional int32 level = 5;
  if (has_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->level(), output);
  }

  // optional int64 tower_uuid = 6;
  if (has_tower_uuid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(6, this->tower_uuid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.MsgBuildTowerUpdate_C2MS)
}

::google::protobuf::uint8* MsgBuildTowerUpdate_C2MS::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.MsgBuildTowerUpdate_C2MS)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_BUILDTOWER_UPDATE_C2MS];
  if (has_msgtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->msgtype(), target);
  }

  // optional int64 iggid = 2;
  if (has_iggid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->iggid(), target);
  }

  // optional int32 pos_x = 3;
  if (has_pos_x()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->pos_x(), target);
  }

  // optional int32 pos_y = 4;
  if (has_pos_y()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->pos_y(), target);
  }

  // optional int32 level = 5;
  if (has_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->level(), target);
  }

  // optional int64 tower_uuid = 6;
  if (has_tower_uuid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(6, this->tower_uuid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.MsgBuildTowerUpdate_C2MS)
  return target;
}

int MsgBuildTowerUpdate_C2MS::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_BUILDTOWER_UPDATE_C2MS];
    if (has_msgtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgtype());
    }

    // optional int64 iggid = 2;
    if (has_iggid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->iggid());
    }

    // optional int32 pos_x = 3;
    if (has_pos_x()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pos_x());
    }

    // optional int32 pos_y = 4;
    if (has_pos_y()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pos_y());
    }

    // optional int32 level = 5;
    if (has_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->level());
    }

    // optional int64 tower_uuid = 6;
    if (has_tower_uuid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->tower_uuid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgBuildTowerUpdate_C2MS::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgBuildTowerUpdate_C2MS* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgBuildTowerUpdate_C2MS*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgBuildTowerUpdate_C2MS::MergeFrom(const MsgBuildTowerUpdate_C2MS& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msgtype()) {
      set_msgtype(from.msgtype());
    }
    if (from.has_iggid()) {
      set_iggid(from.iggid());
    }
    if (from.has_pos_x()) {
      set_pos_x(from.pos_x());
    }
    if (from.has_pos_y()) {
      set_pos_y(from.pos_y());
    }
    if (from.has_level()) {
      set_level(from.level());
    }
    if (from.has_tower_uuid()) {
      set_tower_uuid(from.tower_uuid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgBuildTowerUpdate_C2MS::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgBuildTowerUpdate_C2MS::CopyFrom(const MsgBuildTowerUpdate_C2MS& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgBuildTowerUpdate_C2MS::IsInitialized() const {

  return true;
}

void MsgBuildTowerUpdate_C2MS::Swap(MsgBuildTowerUpdate_C2MS* other) {
  if (other != this) {
    std::swap(msgtype_, other->msgtype_);
    std::swap(iggid_, other->iggid_);
    std::swap(pos_x_, other->pos_x_);
    std::swap(pos_y_, other->pos_y_);
    std::swap(level_, other->level_);
    std::swap(tower_uuid_, other->tower_uuid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgBuildTowerUpdate_C2MS::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgBuildTowerUpdate_C2MS_descriptor_;
  metadata.reflection = MsgBuildTowerUpdate_C2MS_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgBuildTowerUpdateRes_MS2C::kMsgTypeFieldNumber;
const int MsgBuildTowerUpdateRes_MS2C::kIggidFieldNumber;
const int MsgBuildTowerUpdateRes_MS2C::kPosXFieldNumber;
const int MsgBuildTowerUpdateRes_MS2C::kPosYFieldNumber;
const int MsgBuildTowerUpdateRes_MS2C::kTemplateidFieldNumber;
const int MsgBuildTowerUpdateRes_MS2C::kTowerUuidFieldNumber;
#endif  // !_MSC_VER

MsgBuildTowerUpdateRes_MS2C::MsgBuildTowerUpdateRes_MS2C()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.MsgBuildTowerUpdateRes_MS2C)
}

void MsgBuildTowerUpdateRes_MS2C::InitAsDefaultInstance() {
}

MsgBuildTowerUpdateRes_MS2C::MsgBuildTowerUpdateRes_MS2C(const MsgBuildTowerUpdateRes_MS2C& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.MsgBuildTowerUpdateRes_MS2C)
}

void MsgBuildTowerUpdateRes_MS2C::SharedCtor() {
  _cached_size_ = 0;
  msgtype_ = 2451;
  iggid_ = GOOGLE_LONGLONG(0);
  pos_x_ = 0;
  pos_y_ = 0;
  templateid_ = 0;
  tower_uuid_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgBuildTowerUpdateRes_MS2C::~MsgBuildTowerUpdateRes_MS2C() {
  // @@protoc_insertion_point(destructor:MsgPB.MsgBuildTowerUpdateRes_MS2C)
  SharedDtor();
}

void MsgBuildTowerUpdateRes_MS2C::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgBuildTowerUpdateRes_MS2C::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgBuildTowerUpdateRes_MS2C::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgBuildTowerUpdateRes_MS2C_descriptor_;
}

const MsgBuildTowerUpdateRes_MS2C& MsgBuildTowerUpdateRes_MS2C::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgBuildTower_2eproto();
  return *default_instance_;
}

MsgBuildTowerUpdateRes_MS2C* MsgBuildTowerUpdateRes_MS2C::default_instance_ = NULL;

MsgBuildTowerUpdateRes_MS2C* MsgBuildTowerUpdateRes_MS2C::New() const {
  return new MsgBuildTowerUpdateRes_MS2C;
}

void MsgBuildTowerUpdateRes_MS2C::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<MsgBuildTowerUpdateRes_MS2C*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 63) {
    ZR_(pos_x_, tower_uuid_);
    msgtype_ = 2451;
    iggid_ = GOOGLE_LONGLONG(0);
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgBuildTowerUpdateRes_MS2C::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.MsgBuildTowerUpdateRes_MS2C)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_BUILDTOWER_UPDATE_RES_MS2C];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::EMsgType_IsValid(value)) {
            set_msgtype(static_cast< ::MsgPB::EMsgType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_iggid;
        break;
      }

      // optional int64 iggid = 2;
      case 2: {
        if (tag == 16) {
         parse_iggid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &iggid_)));
          set_has_iggid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_pos_x;
        break;
      }

      // optional int32 pos_x = 3;
      case 3: {
        if (tag == 24) {
         parse_pos_x:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pos_x_)));
          set_has_pos_x();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_pos_y;
        break;
      }

      // optional int32 pos_y = 4;
      case 4: {
        if (tag == 32) {
         parse_pos_y:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pos_y_)));
          set_has_pos_y();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_templateid;
        break;
      }

      // optional int32 templateid = 5;
      case 5: {
        if (tag == 40) {
         parse_templateid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &templateid_)));
          set_has_templateid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_tower_uuid;
        break;
      }

      // optional int64 tower_uuid = 6;
      case 6: {
        if (tag == 48) {
         parse_tower_uuid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &tower_uuid_)));
          set_has_tower_uuid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.MsgBuildTowerUpdateRes_MS2C)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.MsgBuildTowerUpdateRes_MS2C)
  return false;
#undef DO_
}

void MsgBuildTowerUpdateRes_MS2C::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.MsgBuildTowerUpdateRes_MS2C)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_BUILDTOWER_UPDATE_RES_MS2C];
  if (has_msgtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->msgtype(), output);
  }

  // optional int64 iggid = 2;
  if (has_iggid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->iggid(), output);
  }

  // optional int32 pos_x = 3;
  if (has_pos_x()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->pos_x(), output);
  }

  // optional int32 pos_y = 4;
  if (has_pos_y()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->pos_y(), output);
  }

  // optional int32 templateid = 5;
  if (has_templateid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->templateid(), output);
  }

  // optional int64 tower_uuid = 6;
  if (has_tower_uuid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(6, this->tower_uuid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.MsgBuildTowerUpdateRes_MS2C)
}

::google::protobuf::uint8* MsgBuildTowerUpdateRes_MS2C::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.MsgBuildTowerUpdateRes_MS2C)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_BUILDTOWER_UPDATE_RES_MS2C];
  if (has_msgtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->msgtype(), target);
  }

  // optional int64 iggid = 2;
  if (has_iggid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->iggid(), target);
  }

  // optional int32 pos_x = 3;
  if (has_pos_x()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->pos_x(), target);
  }

  // optional int32 pos_y = 4;
  if (has_pos_y()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->pos_y(), target);
  }

  // optional int32 templateid = 5;
  if (has_templateid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->templateid(), target);
  }

  // optional int64 tower_uuid = 6;
  if (has_tower_uuid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(6, this->tower_uuid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.MsgBuildTowerUpdateRes_MS2C)
  return target;
}

int MsgBuildTowerUpdateRes_MS2C::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_BUILDTOWER_UPDATE_RES_MS2C];
    if (has_msgtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgtype());
    }

    // optional int64 iggid = 2;
    if (has_iggid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->iggid());
    }

    // optional int32 pos_x = 3;
    if (has_pos_x()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pos_x());
    }

    // optional int32 pos_y = 4;
    if (has_pos_y()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pos_y());
    }

    // optional int32 templateid = 5;
    if (has_templateid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->templateid());
    }

    // optional int64 tower_uuid = 6;
    if (has_tower_uuid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->tower_uuid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgBuildTowerUpdateRes_MS2C::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgBuildTowerUpdateRes_MS2C* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgBuildTowerUpdateRes_MS2C*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgBuildTowerUpdateRes_MS2C::MergeFrom(const MsgBuildTowerUpdateRes_MS2C& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msgtype()) {
      set_msgtype(from.msgtype());
    }
    if (from.has_iggid()) {
      set_iggid(from.iggid());
    }
    if (from.has_pos_x()) {
      set_pos_x(from.pos_x());
    }
    if (from.has_pos_y()) {
      set_pos_y(from.pos_y());
    }
    if (from.has_templateid()) {
      set_templateid(from.templateid());
    }
    if (from.has_tower_uuid()) {
      set_tower_uuid(from.tower_uuid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgBuildTowerUpdateRes_MS2C::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgBuildTowerUpdateRes_MS2C::CopyFrom(const MsgBuildTowerUpdateRes_MS2C& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgBuildTowerUpdateRes_MS2C::IsInitialized() const {

  return true;
}

void MsgBuildTowerUpdateRes_MS2C::Swap(MsgBuildTowerUpdateRes_MS2C* other) {
  if (other != this) {
    std::swap(msgtype_, other->msgtype_);
    std::swap(iggid_, other->iggid_);
    std::swap(pos_x_, other->pos_x_);
    std::swap(pos_y_, other->pos_y_);
    std::swap(templateid_, other->templateid_);
    std::swap(tower_uuid_, other->tower_uuid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgBuildTowerUpdateRes_MS2C::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgBuildTowerUpdateRes_MS2C_descriptor_;
  metadata.reflection = MsgBuildTowerUpdateRes_MS2C_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgBuildTowerReform_C2MS::kMsgTypeFieldNumber;
const int MsgBuildTowerReform_C2MS::kIggidFieldNumber;
const int MsgBuildTowerReform_C2MS::kPosXFieldNumber;
const int MsgBuildTowerReform_C2MS::kPosYFieldNumber;
const int MsgBuildTowerReform_C2MS::kBuildTypeReformFieldNumber;
const int MsgBuildTowerReform_C2MS::kTowerUuidFieldNumber;
#endif  // !_MSC_VER

MsgBuildTowerReform_C2MS::MsgBuildTowerReform_C2MS()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.MsgBuildTowerReform_C2MS)
}

void MsgBuildTowerReform_C2MS::InitAsDefaultInstance() {
}

MsgBuildTowerReform_C2MS::MsgBuildTowerReform_C2MS(const MsgBuildTowerReform_C2MS& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.MsgBuildTowerReform_C2MS)
}

void MsgBuildTowerReform_C2MS::SharedCtor() {
  _cached_size_ = 0;
  msgtype_ = 2452;
  iggid_ = GOOGLE_LONGLONG(0);
  pos_x_ = 0;
  pos_y_ = 0;
  build_type_reform_ = 0;
  tower_uuid_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgBuildTowerReform_C2MS::~MsgBuildTowerReform_C2MS() {
  // @@protoc_insertion_point(destructor:MsgPB.MsgBuildTowerReform_C2MS)
  SharedDtor();
}

void MsgBuildTowerReform_C2MS::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgBuildTowerReform_C2MS::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgBuildTowerReform_C2MS::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgBuildTowerReform_C2MS_descriptor_;
}

const MsgBuildTowerReform_C2MS& MsgBuildTowerReform_C2MS::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgBuildTower_2eproto();
  return *default_instance_;
}

MsgBuildTowerReform_C2MS* MsgBuildTowerReform_C2MS::default_instance_ = NULL;

MsgBuildTowerReform_C2MS* MsgBuildTowerReform_C2MS::New() const {
  return new MsgBuildTowerReform_C2MS;
}

void MsgBuildTowerReform_C2MS::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<MsgBuildTowerReform_C2MS*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 63) {
    ZR_(pos_x_, tower_uuid_);
    msgtype_ = 2452;
    iggid_ = GOOGLE_LONGLONG(0);
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgBuildTowerReform_C2MS::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.MsgBuildTowerReform_C2MS)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_BUILDTOWER_REFORM_C2MS];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::EMsgType_IsValid(value)) {
            set_msgtype(static_cast< ::MsgPB::EMsgType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_iggid;
        break;
      }

      // optional int64 iggid = 2;
      case 2: {
        if (tag == 16) {
         parse_iggid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &iggid_)));
          set_has_iggid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_pos_x;
        break;
      }

      // optional int32 pos_x = 3;
      case 3: {
        if (tag == 24) {
         parse_pos_x:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pos_x_)));
          set_has_pos_x();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_pos_y;
        break;
      }

      // optional int32 pos_y = 4;
      case 4: {
        if (tag == 32) {
         parse_pos_y:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pos_y_)));
          set_has_pos_y();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_build_type_reform;
        break;
      }

      // optional int32 build_type_reform = 5;
      case 5: {
        if (tag == 40) {
         parse_build_type_reform:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &build_type_reform_)));
          set_has_build_type_reform();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_tower_uuid;
        break;
      }

      // optional int64 tower_uuid = 6;
      case 6: {
        if (tag == 48) {
         parse_tower_uuid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &tower_uuid_)));
          set_has_tower_uuid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.MsgBuildTowerReform_C2MS)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.MsgBuildTowerReform_C2MS)
  return false;
#undef DO_
}

void MsgBuildTowerReform_C2MS::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.MsgBuildTowerReform_C2MS)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_BUILDTOWER_REFORM_C2MS];
  if (has_msgtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->msgtype(), output);
  }

  // optional int64 iggid = 2;
  if (has_iggid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->iggid(), output);
  }

  // optional int32 pos_x = 3;
  if (has_pos_x()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->pos_x(), output);
  }

  // optional int32 pos_y = 4;
  if (has_pos_y()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->pos_y(), output);
  }

  // optional int32 build_type_reform = 5;
  if (has_build_type_reform()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->build_type_reform(), output);
  }

  // optional int64 tower_uuid = 6;
  if (has_tower_uuid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(6, this->tower_uuid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.MsgBuildTowerReform_C2MS)
}

::google::protobuf::uint8* MsgBuildTowerReform_C2MS::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.MsgBuildTowerReform_C2MS)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_BUILDTOWER_REFORM_C2MS];
  if (has_msgtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->msgtype(), target);
  }

  // optional int64 iggid = 2;
  if (has_iggid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->iggid(), target);
  }

  // optional int32 pos_x = 3;
  if (has_pos_x()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->pos_x(), target);
  }

  // optional int32 pos_y = 4;
  if (has_pos_y()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->pos_y(), target);
  }

  // optional int32 build_type_reform = 5;
  if (has_build_type_reform()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->build_type_reform(), target);
  }

  // optional int64 tower_uuid = 6;
  if (has_tower_uuid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(6, this->tower_uuid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.MsgBuildTowerReform_C2MS)
  return target;
}

int MsgBuildTowerReform_C2MS::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_BUILDTOWER_REFORM_C2MS];
    if (has_msgtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgtype());
    }

    // optional int64 iggid = 2;
    if (has_iggid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->iggid());
    }

    // optional int32 pos_x = 3;
    if (has_pos_x()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pos_x());
    }

    // optional int32 pos_y = 4;
    if (has_pos_y()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pos_y());
    }

    // optional int32 build_type_reform = 5;
    if (has_build_type_reform()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->build_type_reform());
    }

    // optional int64 tower_uuid = 6;
    if (has_tower_uuid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->tower_uuid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgBuildTowerReform_C2MS::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgBuildTowerReform_C2MS* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgBuildTowerReform_C2MS*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgBuildTowerReform_C2MS::MergeFrom(const MsgBuildTowerReform_C2MS& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msgtype()) {
      set_msgtype(from.msgtype());
    }
    if (from.has_iggid()) {
      set_iggid(from.iggid());
    }
    if (from.has_pos_x()) {
      set_pos_x(from.pos_x());
    }
    if (from.has_pos_y()) {
      set_pos_y(from.pos_y());
    }
    if (from.has_build_type_reform()) {
      set_build_type_reform(from.build_type_reform());
    }
    if (from.has_tower_uuid()) {
      set_tower_uuid(from.tower_uuid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgBuildTowerReform_C2MS::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgBuildTowerReform_C2MS::CopyFrom(const MsgBuildTowerReform_C2MS& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgBuildTowerReform_C2MS::IsInitialized() const {

  return true;
}

void MsgBuildTowerReform_C2MS::Swap(MsgBuildTowerReform_C2MS* other) {
  if (other != this) {
    std::swap(msgtype_, other->msgtype_);
    std::swap(iggid_, other->iggid_);
    std::swap(pos_x_, other->pos_x_);
    std::swap(pos_y_, other->pos_y_);
    std::swap(build_type_reform_, other->build_type_reform_);
    std::swap(tower_uuid_, other->tower_uuid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgBuildTowerReform_C2MS::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgBuildTowerReform_C2MS_descriptor_;
  metadata.reflection = MsgBuildTowerReform_C2MS_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgBuildTowerReformRes_MS2C::kMsgTypeFieldNumber;
const int MsgBuildTowerReformRes_MS2C::kIggidFieldNumber;
const int MsgBuildTowerReformRes_MS2C::kPosXFieldNumber;
const int MsgBuildTowerReformRes_MS2C::kPosYFieldNumber;
const int MsgBuildTowerReformRes_MS2C::kBuildTypeReformFieldNumber;
const int MsgBuildTowerReformRes_MS2C::kReformLevelFieldNumber;
const int MsgBuildTowerReformRes_MS2C::kTowerUuidFieldNumber;
#endif  // !_MSC_VER

MsgBuildTowerReformRes_MS2C::MsgBuildTowerReformRes_MS2C()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.MsgBuildTowerReformRes_MS2C)
}

void MsgBuildTowerReformRes_MS2C::InitAsDefaultInstance() {
}

MsgBuildTowerReformRes_MS2C::MsgBuildTowerReformRes_MS2C(const MsgBuildTowerReformRes_MS2C& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.MsgBuildTowerReformRes_MS2C)
}

void MsgBuildTowerReformRes_MS2C::SharedCtor() {
  _cached_size_ = 0;
  msgtype_ = 2453;
  iggid_ = GOOGLE_LONGLONG(0);
  pos_x_ = 0;
  pos_y_ = 0;
  build_type_reform_ = 0;
  reform_level_ = 0;
  tower_uuid_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgBuildTowerReformRes_MS2C::~MsgBuildTowerReformRes_MS2C() {
  // @@protoc_insertion_point(destructor:MsgPB.MsgBuildTowerReformRes_MS2C)
  SharedDtor();
}

void MsgBuildTowerReformRes_MS2C::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgBuildTowerReformRes_MS2C::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgBuildTowerReformRes_MS2C::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgBuildTowerReformRes_MS2C_descriptor_;
}

const MsgBuildTowerReformRes_MS2C& MsgBuildTowerReformRes_MS2C::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgBuildTower_2eproto();
  return *default_instance_;
}

MsgBuildTowerReformRes_MS2C* MsgBuildTowerReformRes_MS2C::default_instance_ = NULL;

MsgBuildTowerReformRes_MS2C* MsgBuildTowerReformRes_MS2C::New() const {
  return new MsgBuildTowerReformRes_MS2C;
}

void MsgBuildTowerReformRes_MS2C::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<MsgBuildTowerReformRes_MS2C*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 127) {
    ZR_(pos_x_, reform_level_);
    msgtype_ = 2453;
    iggid_ = GOOGLE_LONGLONG(0);
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgBuildTowerReformRes_MS2C::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.MsgBuildTowerReformRes_MS2C)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_BUILDTOWER_REFORM_RES_MS2C];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::EMsgType_IsValid(value)) {
            set_msgtype(static_cast< ::MsgPB::EMsgType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_iggid;
        break;
      }

      // optional int64 iggid = 2;
      case 2: {
        if (tag == 16) {
         parse_iggid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &iggid_)));
          set_has_iggid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_pos_x;
        break;
      }

      // optional int32 pos_x = 3;
      case 3: {
        if (tag == 24) {
         parse_pos_x:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pos_x_)));
          set_has_pos_x();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_pos_y;
        break;
      }

      // optional int32 pos_y = 4;
      case 4: {
        if (tag == 32) {
         parse_pos_y:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pos_y_)));
          set_has_pos_y();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_build_type_reform;
        break;
      }

      // optional int32 build_type_reform = 5;
      case 5: {
        if (tag == 40) {
         parse_build_type_reform:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &build_type_reform_)));
          set_has_build_type_reform();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_reform_level;
        break;
      }

      // optional int32 reform_level = 6;
      case 6: {
        if (tag == 48) {
         parse_reform_level:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &reform_level_)));
          set_has_reform_level();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_tower_uuid;
        break;
      }

      // optional int64 tower_uuid = 7;
      case 7: {
        if (tag == 56) {
         parse_tower_uuid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &tower_uuid_)));
          set_has_tower_uuid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.MsgBuildTowerReformRes_MS2C)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.MsgBuildTowerReformRes_MS2C)
  return false;
#undef DO_
}

void MsgBuildTowerReformRes_MS2C::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.MsgBuildTowerReformRes_MS2C)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_BUILDTOWER_REFORM_RES_MS2C];
  if (has_msgtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->msgtype(), output);
  }

  // optional int64 iggid = 2;
  if (has_iggid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->iggid(), output);
  }

  // optional int32 pos_x = 3;
  if (has_pos_x()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->pos_x(), output);
  }

  // optional int32 pos_y = 4;
  if (has_pos_y()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->pos_y(), output);
  }

  // optional int32 build_type_reform = 5;
  if (has_build_type_reform()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->build_type_reform(), output);
  }

  // optional int32 reform_level = 6;
  if (has_reform_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->reform_level(), output);
  }

  // optional int64 tower_uuid = 7;
  if (has_tower_uuid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(7, this->tower_uuid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.MsgBuildTowerReformRes_MS2C)
}

::google::protobuf::uint8* MsgBuildTowerReformRes_MS2C::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.MsgBuildTowerReformRes_MS2C)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_BUILDTOWER_REFORM_RES_MS2C];
  if (has_msgtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->msgtype(), target);
  }

  // optional int64 iggid = 2;
  if (has_iggid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->iggid(), target);
  }

  // optional int32 pos_x = 3;
  if (has_pos_x()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->pos_x(), target);
  }

  // optional int32 pos_y = 4;
  if (has_pos_y()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->pos_y(), target);
  }

  // optional int32 build_type_reform = 5;
  if (has_build_type_reform()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->build_type_reform(), target);
  }

  // optional int32 reform_level = 6;
  if (has_reform_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->reform_level(), target);
  }

  // optional int64 tower_uuid = 7;
  if (has_tower_uuid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(7, this->tower_uuid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.MsgBuildTowerReformRes_MS2C)
  return target;
}

int MsgBuildTowerReformRes_MS2C::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_BUILDTOWER_REFORM_RES_MS2C];
    if (has_msgtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgtype());
    }

    // optional int64 iggid = 2;
    if (has_iggid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->iggid());
    }

    // optional int32 pos_x = 3;
    if (has_pos_x()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pos_x());
    }

    // optional int32 pos_y = 4;
    if (has_pos_y()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pos_y());
    }

    // optional int32 build_type_reform = 5;
    if (has_build_type_reform()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->build_type_reform());
    }

    // optional int32 reform_level = 6;
    if (has_reform_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->reform_level());
    }

    // optional int64 tower_uuid = 7;
    if (has_tower_uuid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->tower_uuid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgBuildTowerReformRes_MS2C::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgBuildTowerReformRes_MS2C* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgBuildTowerReformRes_MS2C*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgBuildTowerReformRes_MS2C::MergeFrom(const MsgBuildTowerReformRes_MS2C& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msgtype()) {
      set_msgtype(from.msgtype());
    }
    if (from.has_iggid()) {
      set_iggid(from.iggid());
    }
    if (from.has_pos_x()) {
      set_pos_x(from.pos_x());
    }
    if (from.has_pos_y()) {
      set_pos_y(from.pos_y());
    }
    if (from.has_build_type_reform()) {
      set_build_type_reform(from.build_type_reform());
    }
    if (from.has_reform_level()) {
      set_reform_level(from.reform_level());
    }
    if (from.has_tower_uuid()) {
      set_tower_uuid(from.tower_uuid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgBuildTowerReformRes_MS2C::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgBuildTowerReformRes_MS2C::CopyFrom(const MsgBuildTowerReformRes_MS2C& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgBuildTowerReformRes_MS2C::IsInitialized() const {

  return true;
}

void MsgBuildTowerReformRes_MS2C::Swap(MsgBuildTowerReformRes_MS2C* other) {
  if (other != this) {
    std::swap(msgtype_, other->msgtype_);
    std::swap(iggid_, other->iggid_);
    std::swap(pos_x_, other->pos_x_);
    std::swap(pos_y_, other->pos_y_);
    std::swap(build_type_reform_, other->build_type_reform_);
    std::swap(reform_level_, other->reform_level_);
    std::swap(tower_uuid_, other->tower_uuid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgBuildTowerReformRes_MS2C::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgBuildTowerReformRes_MS2C_descriptor_;
  metadata.reflection = MsgBuildTowerReformRes_MS2C_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TowerData2Client::kMapobjectidFieldNumber;
const int TowerData2Client::kTowerDataFieldNumber;
const int TowerData2Client::kIsTowerpvpShipFieldNumber;
#endif  // !_MSC_VER

TowerData2Client::TowerData2Client()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.TowerData2Client)
}

void TowerData2Client::InitAsDefaultInstance() {
  tower_data_ = const_cast< ::MsgPB::MsgBuildTowerData*>(&::MsgPB::MsgBuildTowerData::default_instance());
}

TowerData2Client::TowerData2Client(const TowerData2Client& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.TowerData2Client)
}

void TowerData2Client::SharedCtor() {
  _cached_size_ = 0;
  mapobjectid_ = 0;
  tower_data_ = NULL;
  is_towerpvp_ship_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TowerData2Client::~TowerData2Client() {
  // @@protoc_insertion_point(destructor:MsgPB.TowerData2Client)
  SharedDtor();
}

void TowerData2Client::SharedDtor() {
  if (this != default_instance_) {
    delete tower_data_;
  }
}

void TowerData2Client::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TowerData2Client::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TowerData2Client_descriptor_;
}

const TowerData2Client& TowerData2Client::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgBuildTower_2eproto();
  return *default_instance_;
}

TowerData2Client* TowerData2Client::default_instance_ = NULL;

TowerData2Client* TowerData2Client::New() const {
  return new TowerData2Client;
}

void TowerData2Client::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TowerData2Client*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 7) {
    ZR_(mapobjectid_, is_towerpvp_ship_);
    if (has_tower_data()) {
      if (tower_data_ != NULL) tower_data_->::MsgPB::MsgBuildTowerData::Clear();
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TowerData2Client::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.TowerData2Client)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 mapobjectid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &mapobjectid_)));
          set_has_mapobjectid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_tower_data;
        break;
      }

      // optional .MsgPB.MsgBuildTowerData tower_data = 4;
      case 4: {
        if (tag == 34) {
         parse_tower_data:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_tower_data()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_is_towerpvp_ship;
        break;
      }

      // optional int32 is_towerpvp_ship = 5;
      case 5: {
        if (tag == 40) {
         parse_is_towerpvp_ship:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &is_towerpvp_ship_)));
          set_has_is_towerpvp_ship();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.TowerData2Client)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.TowerData2Client)
  return false;
#undef DO_
}

void TowerData2Client::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.TowerData2Client)
  // optional int32 mapobjectid = 1;
  if (has_mapobjectid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->mapobjectid(), output);
  }

  // optional .MsgPB.MsgBuildTowerData tower_data = 4;
  if (has_tower_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->tower_data(), output);
  }

  // optional int32 is_towerpvp_ship = 5;
  if (has_is_towerpvp_ship()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->is_towerpvp_ship(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.TowerData2Client)
}

::google::protobuf::uint8* TowerData2Client::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.TowerData2Client)
  // optional int32 mapobjectid = 1;
  if (has_mapobjectid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->mapobjectid(), target);
  }

  // optional .MsgPB.MsgBuildTowerData tower_data = 4;
  if (has_tower_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->tower_data(), target);
  }

  // optional int32 is_towerpvp_ship = 5;
  if (has_is_towerpvp_ship()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->is_towerpvp_ship(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.TowerData2Client)
  return target;
}

int TowerData2Client::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 mapobjectid = 1;
    if (has_mapobjectid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->mapobjectid());
    }

    // optional .MsgPB.MsgBuildTowerData tower_data = 4;
    if (has_tower_data()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->tower_data());
    }

    // optional int32 is_towerpvp_ship = 5;
    if (has_is_towerpvp_ship()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->is_towerpvp_ship());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TowerData2Client::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TowerData2Client* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TowerData2Client*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TowerData2Client::MergeFrom(const TowerData2Client& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_mapobjectid()) {
      set_mapobjectid(from.mapobjectid());
    }
    if (from.has_tower_data()) {
      mutable_tower_data()->::MsgPB::MsgBuildTowerData::MergeFrom(from.tower_data());
    }
    if (from.has_is_towerpvp_ship()) {
      set_is_towerpvp_ship(from.is_towerpvp_ship());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TowerData2Client::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TowerData2Client::CopyFrom(const TowerData2Client& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TowerData2Client::IsInitialized() const {

  return true;
}

void TowerData2Client::Swap(TowerData2Client* other) {
  if (other != this) {
    std::swap(mapobjectid_, other->mapobjectid_);
    std::swap(tower_data_, other->tower_data_);
    std::swap(is_towerpvp_ship_, other->is_towerpvp_ship_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TowerData2Client::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TowerData2Client_descriptor_;
  metadata.reflection = TowerData2Client_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgBuildTowerInfoListS2C::kMsgTypeFieldNumber;
const int MsgBuildTowerInfoListS2C::kIggidFieldNumber;
const int MsgBuildTowerInfoListS2C::kTowerDataLstFieldNumber;
#endif  // !_MSC_VER

MsgBuildTowerInfoListS2C::MsgBuildTowerInfoListS2C()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.MsgBuildTowerInfoListS2C)
}

void MsgBuildTowerInfoListS2C::InitAsDefaultInstance() {
}

MsgBuildTowerInfoListS2C::MsgBuildTowerInfoListS2C(const MsgBuildTowerInfoListS2C& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.MsgBuildTowerInfoListS2C)
}

void MsgBuildTowerInfoListS2C::SharedCtor() {
  _cached_size_ = 0;
  msgtype_ = 2454;
  iggid_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgBuildTowerInfoListS2C::~MsgBuildTowerInfoListS2C() {
  // @@protoc_insertion_point(destructor:MsgPB.MsgBuildTowerInfoListS2C)
  SharedDtor();
}

void MsgBuildTowerInfoListS2C::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgBuildTowerInfoListS2C::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgBuildTowerInfoListS2C::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgBuildTowerInfoListS2C_descriptor_;
}

const MsgBuildTowerInfoListS2C& MsgBuildTowerInfoListS2C::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgBuildTower_2eproto();
  return *default_instance_;
}

MsgBuildTowerInfoListS2C* MsgBuildTowerInfoListS2C::default_instance_ = NULL;

MsgBuildTowerInfoListS2C* MsgBuildTowerInfoListS2C::New() const {
  return new MsgBuildTowerInfoListS2C;
}

void MsgBuildTowerInfoListS2C::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    msgtype_ = 2454;
    iggid_ = GOOGLE_LONGLONG(0);
  }
  tower_data_lst_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgBuildTowerInfoListS2C::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.MsgBuildTowerInfoListS2C)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_BUILDTOWER_INFO_LIST_S2C];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::EMsgType_IsValid(value)) {
            set_msgtype(static_cast< ::MsgPB::EMsgType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_iggid;
        break;
      }

      // optional int64 iggid = 2;
      case 2: {
        if (tag == 16) {
         parse_iggid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &iggid_)));
          set_has_iggid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_tower_data_lst;
        break;
      }

      // repeated .MsgPB.TowerData2Client tower_data_lst = 3;
      case 3: {
        if (tag == 26) {
         parse_tower_data_lst:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_tower_data_lst()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_tower_data_lst;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.MsgBuildTowerInfoListS2C)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.MsgBuildTowerInfoListS2C)
  return false;
#undef DO_
}

void MsgBuildTowerInfoListS2C::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.MsgBuildTowerInfoListS2C)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_BUILDTOWER_INFO_LIST_S2C];
  if (has_msgtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->msgtype(), output);
  }

  // optional int64 iggid = 2;
  if (has_iggid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->iggid(), output);
  }

  // repeated .MsgPB.TowerData2Client tower_data_lst = 3;
  for (int i = 0; i < this->tower_data_lst_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->tower_data_lst(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.MsgBuildTowerInfoListS2C)
}

::google::protobuf::uint8* MsgBuildTowerInfoListS2C::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.MsgBuildTowerInfoListS2C)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_BUILDTOWER_INFO_LIST_S2C];
  if (has_msgtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->msgtype(), target);
  }

  // optional int64 iggid = 2;
  if (has_iggid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->iggid(), target);
  }

  // repeated .MsgPB.TowerData2Client tower_data_lst = 3;
  for (int i = 0; i < this->tower_data_lst_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->tower_data_lst(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.MsgBuildTowerInfoListS2C)
  return target;
}

int MsgBuildTowerInfoListS2C::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_BUILDTOWER_INFO_LIST_S2C];
    if (has_msgtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgtype());
    }

    // optional int64 iggid = 2;
    if (has_iggid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->iggid());
    }

  }
  // repeated .MsgPB.TowerData2Client tower_data_lst = 3;
  total_size += 1 * this->tower_data_lst_size();
  for (int i = 0; i < this->tower_data_lst_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->tower_data_lst(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgBuildTowerInfoListS2C::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgBuildTowerInfoListS2C* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgBuildTowerInfoListS2C*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgBuildTowerInfoListS2C::MergeFrom(const MsgBuildTowerInfoListS2C& from) {
  GOOGLE_CHECK_NE(&from, this);
  tower_data_lst_.MergeFrom(from.tower_data_lst_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msgtype()) {
      set_msgtype(from.msgtype());
    }
    if (from.has_iggid()) {
      set_iggid(from.iggid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgBuildTowerInfoListS2C::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgBuildTowerInfoListS2C::CopyFrom(const MsgBuildTowerInfoListS2C& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgBuildTowerInfoListS2C::IsInitialized() const {

  return true;
}

void MsgBuildTowerInfoListS2C::Swap(MsgBuildTowerInfoListS2C* other) {
  if (other != this) {
    std::swap(msgtype_, other->msgtype_);
    std::swap(iggid_, other->iggid_);
    tower_data_lst_.Swap(&other->tower_data_lst_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgBuildTowerInfoListS2C::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgBuildTowerInfoListS2C_descriptor_;
  metadata.reflection = MsgBuildTowerInfoListS2C_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgBuildTowerSetSoul_S2C::kMsgTypeFieldNumber;
const int MsgBuildTowerSetSoul_S2C::kIggidFieldNumber;
const int MsgBuildTowerSetSoul_S2C::kPosXFieldNumber;
const int MsgBuildTowerSetSoul_S2C::kPosYFieldNumber;
const int MsgBuildTowerSetSoul_S2C::kSoulUuidFieldNumber;
const int MsgBuildTowerSetSoul_S2C::kTowerUuidFieldNumber;
#endif  // !_MSC_VER

MsgBuildTowerSetSoul_S2C::MsgBuildTowerSetSoul_S2C()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.MsgBuildTowerSetSoul_S2C)
}

void MsgBuildTowerSetSoul_S2C::InitAsDefaultInstance() {
}

MsgBuildTowerSetSoul_S2C::MsgBuildTowerSetSoul_S2C(const MsgBuildTowerSetSoul_S2C& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.MsgBuildTowerSetSoul_S2C)
}

void MsgBuildTowerSetSoul_S2C::SharedCtor() {
  _cached_size_ = 0;
  msgtype_ = 2456;
  iggid_ = GOOGLE_LONGLONG(0);
  pos_x_ = 0;
  pos_y_ = 0;
  soul_uuid_ = GOOGLE_LONGLONG(0);
  tower_uuid_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgBuildTowerSetSoul_S2C::~MsgBuildTowerSetSoul_S2C() {
  // @@protoc_insertion_point(destructor:MsgPB.MsgBuildTowerSetSoul_S2C)
  SharedDtor();
}

void MsgBuildTowerSetSoul_S2C::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgBuildTowerSetSoul_S2C::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgBuildTowerSetSoul_S2C::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgBuildTowerSetSoul_S2C_descriptor_;
}

const MsgBuildTowerSetSoul_S2C& MsgBuildTowerSetSoul_S2C::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgBuildTower_2eproto();
  return *default_instance_;
}

MsgBuildTowerSetSoul_S2C* MsgBuildTowerSetSoul_S2C::default_instance_ = NULL;

MsgBuildTowerSetSoul_S2C* MsgBuildTowerSetSoul_S2C::New() const {
  return new MsgBuildTowerSetSoul_S2C;
}

void MsgBuildTowerSetSoul_S2C::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<MsgBuildTowerSetSoul_S2C*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 63) {
    ZR_(pos_x_, pos_y_);
    msgtype_ = 2456;
    iggid_ = GOOGLE_LONGLONG(0);
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgBuildTowerSetSoul_S2C::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.MsgBuildTowerSetSoul_S2C)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_BUILDTOWER_SET_SOUL_S2C];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::EMsgType_IsValid(value)) {
            set_msgtype(static_cast< ::MsgPB::EMsgType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_iggid;
        break;
      }

      // optional int64 iggid = 2;
      case 2: {
        if (tag == 16) {
         parse_iggid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &iggid_)));
          set_has_iggid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_pos_x;
        break;
      }

      // optional int32 pos_x = 3;
      case 3: {
        if (tag == 24) {
         parse_pos_x:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pos_x_)));
          set_has_pos_x();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_pos_y;
        break;
      }

      // optional int32 pos_y = 4;
      case 4: {
        if (tag == 32) {
         parse_pos_y:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pos_y_)));
          set_has_pos_y();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_soul_uuid;
        break;
      }

      // optional int64 soul_uuid = 5;
      case 5: {
        if (tag == 40) {
         parse_soul_uuid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &soul_uuid_)));
          set_has_soul_uuid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_tower_uuid;
        break;
      }

      // optional int64 tower_uuid = 6;
      case 6: {
        if (tag == 48) {
         parse_tower_uuid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &tower_uuid_)));
          set_has_tower_uuid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.MsgBuildTowerSetSoul_S2C)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.MsgBuildTowerSetSoul_S2C)
  return false;
#undef DO_
}

void MsgBuildTowerSetSoul_S2C::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.MsgBuildTowerSetSoul_S2C)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_BUILDTOWER_SET_SOUL_S2C];
  if (has_msgtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->msgtype(), output);
  }

  // optional int64 iggid = 2;
  if (has_iggid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->iggid(), output);
  }

  // optional int32 pos_x = 3;
  if (has_pos_x()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->pos_x(), output);
  }

  // optional int32 pos_y = 4;
  if (has_pos_y()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->pos_y(), output);
  }

  // optional int64 soul_uuid = 5;
  if (has_soul_uuid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(5, this->soul_uuid(), output);
  }

  // optional int64 tower_uuid = 6;
  if (has_tower_uuid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(6, this->tower_uuid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.MsgBuildTowerSetSoul_S2C)
}

::google::protobuf::uint8* MsgBuildTowerSetSoul_S2C::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.MsgBuildTowerSetSoul_S2C)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_BUILDTOWER_SET_SOUL_S2C];
  if (has_msgtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->msgtype(), target);
  }

  // optional int64 iggid = 2;
  if (has_iggid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->iggid(), target);
  }

  // optional int32 pos_x = 3;
  if (has_pos_x()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->pos_x(), target);
  }

  // optional int32 pos_y = 4;
  if (has_pos_y()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->pos_y(), target);
  }

  // optional int64 soul_uuid = 5;
  if (has_soul_uuid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(5, this->soul_uuid(), target);
  }

  // optional int64 tower_uuid = 6;
  if (has_tower_uuid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(6, this->tower_uuid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.MsgBuildTowerSetSoul_S2C)
  return target;
}

int MsgBuildTowerSetSoul_S2C::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_BUILDTOWER_SET_SOUL_S2C];
    if (has_msgtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgtype());
    }

    // optional int64 iggid = 2;
    if (has_iggid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->iggid());
    }

    // optional int32 pos_x = 3;
    if (has_pos_x()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pos_x());
    }

    // optional int32 pos_y = 4;
    if (has_pos_y()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pos_y());
    }

    // optional int64 soul_uuid = 5;
    if (has_soul_uuid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->soul_uuid());
    }

    // optional int64 tower_uuid = 6;
    if (has_tower_uuid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->tower_uuid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgBuildTowerSetSoul_S2C::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgBuildTowerSetSoul_S2C* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgBuildTowerSetSoul_S2C*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgBuildTowerSetSoul_S2C::MergeFrom(const MsgBuildTowerSetSoul_S2C& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msgtype()) {
      set_msgtype(from.msgtype());
    }
    if (from.has_iggid()) {
      set_iggid(from.iggid());
    }
    if (from.has_pos_x()) {
      set_pos_x(from.pos_x());
    }
    if (from.has_pos_y()) {
      set_pos_y(from.pos_y());
    }
    if (from.has_soul_uuid()) {
      set_soul_uuid(from.soul_uuid());
    }
    if (from.has_tower_uuid()) {
      set_tower_uuid(from.tower_uuid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgBuildTowerSetSoul_S2C::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgBuildTowerSetSoul_S2C::CopyFrom(const MsgBuildTowerSetSoul_S2C& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgBuildTowerSetSoul_S2C::IsInitialized() const {

  return true;
}

void MsgBuildTowerSetSoul_S2C::Swap(MsgBuildTowerSetSoul_S2C* other) {
  if (other != this) {
    std::swap(msgtype_, other->msgtype_);
    std::swap(iggid_, other->iggid_);
    std::swap(pos_x_, other->pos_x_);
    std::swap(pos_y_, other->pos_y_);
    std::swap(soul_uuid_, other->soul_uuid_);
    std::swap(tower_uuid_, other->tower_uuid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgBuildTowerSetSoul_S2C::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgBuildTowerSetSoul_S2C_descriptor_;
  metadata.reflection = MsgBuildTowerSetSoul_S2C_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgBuildTowerSetSoul_C2S::kMsgTypeFieldNumber;
const int MsgBuildTowerSetSoul_C2S::kIggidFieldNumber;
const int MsgBuildTowerSetSoul_C2S::kPosXFieldNumber;
const int MsgBuildTowerSetSoul_C2S::kPosYFieldNumber;
const int MsgBuildTowerSetSoul_C2S::kSoulUuidFieldNumber;
const int MsgBuildTowerSetSoul_C2S::kTowerUuidFieldNumber;
#endif  // !_MSC_VER

MsgBuildTowerSetSoul_C2S::MsgBuildTowerSetSoul_C2S()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.MsgBuildTowerSetSoul_C2S)
}

void MsgBuildTowerSetSoul_C2S::InitAsDefaultInstance() {
}

MsgBuildTowerSetSoul_C2S::MsgBuildTowerSetSoul_C2S(const MsgBuildTowerSetSoul_C2S& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.MsgBuildTowerSetSoul_C2S)
}

void MsgBuildTowerSetSoul_C2S::SharedCtor() {
  _cached_size_ = 0;
  msgtype_ = 2455;
  iggid_ = GOOGLE_LONGLONG(0);
  pos_x_ = 0;
  pos_y_ = 0;
  soul_uuid_ = GOOGLE_LONGLONG(0);
  tower_uuid_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgBuildTowerSetSoul_C2S::~MsgBuildTowerSetSoul_C2S() {
  // @@protoc_insertion_point(destructor:MsgPB.MsgBuildTowerSetSoul_C2S)
  SharedDtor();
}

void MsgBuildTowerSetSoul_C2S::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgBuildTowerSetSoul_C2S::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgBuildTowerSetSoul_C2S::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgBuildTowerSetSoul_C2S_descriptor_;
}

const MsgBuildTowerSetSoul_C2S& MsgBuildTowerSetSoul_C2S::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgBuildTower_2eproto();
  return *default_instance_;
}

MsgBuildTowerSetSoul_C2S* MsgBuildTowerSetSoul_C2S::default_instance_ = NULL;

MsgBuildTowerSetSoul_C2S* MsgBuildTowerSetSoul_C2S::New() const {
  return new MsgBuildTowerSetSoul_C2S;
}

void MsgBuildTowerSetSoul_C2S::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<MsgBuildTowerSetSoul_C2S*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 63) {
    ZR_(pos_x_, pos_y_);
    msgtype_ = 2455;
    iggid_ = GOOGLE_LONGLONG(0);
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgBuildTowerSetSoul_C2S::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.MsgBuildTowerSetSoul_C2S)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_BUILDTOWER_SET_SOUL_C2S];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::EMsgType_IsValid(value)) {
            set_msgtype(static_cast< ::MsgPB::EMsgType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_iggid;
        break;
      }

      // optional int64 iggid = 2;
      case 2: {
        if (tag == 16) {
         parse_iggid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &iggid_)));
          set_has_iggid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_pos_x;
        break;
      }

      // optional int32 pos_x = 3;
      case 3: {
        if (tag == 24) {
         parse_pos_x:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pos_x_)));
          set_has_pos_x();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_pos_y;
        break;
      }

      // optional int32 pos_y = 4;
      case 4: {
        if (tag == 32) {
         parse_pos_y:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pos_y_)));
          set_has_pos_y();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_soul_uuid;
        break;
      }

      // optional int64 soul_uuid = 5;
      case 5: {
        if (tag == 40) {
         parse_soul_uuid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &soul_uuid_)));
          set_has_soul_uuid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_tower_uuid;
        break;
      }

      // optional int64 tower_uuid = 6;
      case 6: {
        if (tag == 48) {
         parse_tower_uuid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &tower_uuid_)));
          set_has_tower_uuid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.MsgBuildTowerSetSoul_C2S)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.MsgBuildTowerSetSoul_C2S)
  return false;
#undef DO_
}

void MsgBuildTowerSetSoul_C2S::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.MsgBuildTowerSetSoul_C2S)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_BUILDTOWER_SET_SOUL_C2S];
  if (has_msgtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->msgtype(), output);
  }

  // optional int64 iggid = 2;
  if (has_iggid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->iggid(), output);
  }

  // optional int32 pos_x = 3;
  if (has_pos_x()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->pos_x(), output);
  }

  // optional int32 pos_y = 4;
  if (has_pos_y()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->pos_y(), output);
  }

  // optional int64 soul_uuid = 5;
  if (has_soul_uuid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(5, this->soul_uuid(), output);
  }

  // optional int64 tower_uuid = 6;
  if (has_tower_uuid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(6, this->tower_uuid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.MsgBuildTowerSetSoul_C2S)
}

::google::protobuf::uint8* MsgBuildTowerSetSoul_C2S::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.MsgBuildTowerSetSoul_C2S)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_BUILDTOWER_SET_SOUL_C2S];
  if (has_msgtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->msgtype(), target);
  }

  // optional int64 iggid = 2;
  if (has_iggid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->iggid(), target);
  }

  // optional int32 pos_x = 3;
  if (has_pos_x()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->pos_x(), target);
  }

  // optional int32 pos_y = 4;
  if (has_pos_y()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->pos_y(), target);
  }

  // optional int64 soul_uuid = 5;
  if (has_soul_uuid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(5, this->soul_uuid(), target);
  }

  // optional int64 tower_uuid = 6;
  if (has_tower_uuid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(6, this->tower_uuid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.MsgBuildTowerSetSoul_C2S)
  return target;
}

int MsgBuildTowerSetSoul_C2S::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_BUILDTOWER_SET_SOUL_C2S];
    if (has_msgtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgtype());
    }

    // optional int64 iggid = 2;
    if (has_iggid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->iggid());
    }

    // optional int32 pos_x = 3;
    if (has_pos_x()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pos_x());
    }

    // optional int32 pos_y = 4;
    if (has_pos_y()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pos_y());
    }

    // optional int64 soul_uuid = 5;
    if (has_soul_uuid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->soul_uuid());
    }

    // optional int64 tower_uuid = 6;
    if (has_tower_uuid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->tower_uuid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgBuildTowerSetSoul_C2S::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgBuildTowerSetSoul_C2S* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgBuildTowerSetSoul_C2S*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgBuildTowerSetSoul_C2S::MergeFrom(const MsgBuildTowerSetSoul_C2S& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msgtype()) {
      set_msgtype(from.msgtype());
    }
    if (from.has_iggid()) {
      set_iggid(from.iggid());
    }
    if (from.has_pos_x()) {
      set_pos_x(from.pos_x());
    }
    if (from.has_pos_y()) {
      set_pos_y(from.pos_y());
    }
    if (from.has_soul_uuid()) {
      set_soul_uuid(from.soul_uuid());
    }
    if (from.has_tower_uuid()) {
      set_tower_uuid(from.tower_uuid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgBuildTowerSetSoul_C2S::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgBuildTowerSetSoul_C2S::CopyFrom(const MsgBuildTowerSetSoul_C2S& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgBuildTowerSetSoul_C2S::IsInitialized() const {

  return true;
}

void MsgBuildTowerSetSoul_C2S::Swap(MsgBuildTowerSetSoul_C2S* other) {
  if (other != this) {
    std::swap(msgtype_, other->msgtype_);
    std::swap(iggid_, other->iggid_);
    std::swap(pos_x_, other->pos_x_);
    std::swap(pos_y_, other->pos_y_);
    std::swap(soul_uuid_, other->soul_uuid_);
    std::swap(tower_uuid_, other->tower_uuid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgBuildTowerSetSoul_C2S::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgBuildTowerSetSoul_C2S_descriptor_;
  metadata.reflection = MsgBuildTowerSetSoul_C2S_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TowerBuildSummonData::kMapObjIdFieldNumber;
const int TowerBuildSummonData::kResummonCdFieldNumber;
const int TowerBuildSummonData::kTotalMobCountFieldNumber;
const int TowerBuildSummonData::kCurMobCountFieldNumber;
#endif  // !_MSC_VER

TowerBuildSummonData::TowerBuildSummonData()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.TowerBuildSummonData)
}

void TowerBuildSummonData::InitAsDefaultInstance() {
}

TowerBuildSummonData::TowerBuildSummonData(const TowerBuildSummonData& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.TowerBuildSummonData)
}

void TowerBuildSummonData::SharedCtor() {
  _cached_size_ = 0;
  resummon_cd_ = 0;
  total_mob_count_ = 0;
  cur_mob_count_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TowerBuildSummonData::~TowerBuildSummonData() {
  // @@protoc_insertion_point(destructor:MsgPB.TowerBuildSummonData)
  SharedDtor();
}

void TowerBuildSummonData::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TowerBuildSummonData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TowerBuildSummonData::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TowerBuildSummonData_descriptor_;
}

const TowerBuildSummonData& TowerBuildSummonData::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgBuildTower_2eproto();
  return *default_instance_;
}

TowerBuildSummonData* TowerBuildSummonData::default_instance_ = NULL;

TowerBuildSummonData* TowerBuildSummonData::New() const {
  return new TowerBuildSummonData;
}

void TowerBuildSummonData::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TowerBuildSummonData*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(resummon_cd_, cur_mob_count_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  map_obj_id_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TowerBuildSummonData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.TowerBuildSummonData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int32 map_obj_id = 1;
      case 1: {
        if (tag == 8) {
         parse_map_obj_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 8, input, this->mutable_map_obj_id())));
        } else if (tag == 10) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_map_obj_id())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(8)) goto parse_map_obj_id;
        if (input->ExpectTag(16)) goto parse_resummon_cd;
        break;
      }

      // optional int32 resummon_cd = 2;
      case 2: {
        if (tag == 16) {
         parse_resummon_cd:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &resummon_cd_)));
          set_has_resummon_cd();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_total_mob_count;
        break;
      }

      // optional int32 total_mob_count = 3;
      case 3: {
        if (tag == 24) {
         parse_total_mob_count:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &total_mob_count_)));
          set_has_total_mob_count();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_cur_mob_count;
        break;
      }

      // optional int32 cur_mob_count = 4;
      case 4: {
        if (tag == 32) {
         parse_cur_mob_count:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cur_mob_count_)));
          set_has_cur_mob_count();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.TowerBuildSummonData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.TowerBuildSummonData)
  return false;
#undef DO_
}

void TowerBuildSummonData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.TowerBuildSummonData)
  // repeated int32 map_obj_id = 1;
  for (int i = 0; i < this->map_obj_id_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      1, this->map_obj_id(i), output);
  }

  // optional int32 resummon_cd = 2;
  if (has_resummon_cd()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->resummon_cd(), output);
  }

  // optional int32 total_mob_count = 3;
  if (has_total_mob_count()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->total_mob_count(), output);
  }

  // optional int32 cur_mob_count = 4;
  if (has_cur_mob_count()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->cur_mob_count(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.TowerBuildSummonData)
}

::google::protobuf::uint8* TowerBuildSummonData::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.TowerBuildSummonData)
  // repeated int32 map_obj_id = 1;
  for (int i = 0; i < this->map_obj_id_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(1, this->map_obj_id(i), target);
  }

  // optional int32 resummon_cd = 2;
  if (has_resummon_cd()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->resummon_cd(), target);
  }

  // optional int32 total_mob_count = 3;
  if (has_total_mob_count()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->total_mob_count(), target);
  }

  // optional int32 cur_mob_count = 4;
  if (has_cur_mob_count()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->cur_mob_count(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.TowerBuildSummonData)
  return target;
}

int TowerBuildSummonData::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // optional int32 resummon_cd = 2;
    if (has_resummon_cd()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->resummon_cd());
    }

    // optional int32 total_mob_count = 3;
    if (has_total_mob_count()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->total_mob_count());
    }

    // optional int32 cur_mob_count = 4;
    if (has_cur_mob_count()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->cur_mob_count());
    }

  }
  // repeated int32 map_obj_id = 1;
  {
    int data_size = 0;
    for (int i = 0; i < this->map_obj_id_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->map_obj_id(i));
    }
    total_size += 1 * this->map_obj_id_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TowerBuildSummonData::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TowerBuildSummonData* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TowerBuildSummonData*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TowerBuildSummonData::MergeFrom(const TowerBuildSummonData& from) {
  GOOGLE_CHECK_NE(&from, this);
  map_obj_id_.MergeFrom(from.map_obj_id_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_resummon_cd()) {
      set_resummon_cd(from.resummon_cd());
    }
    if (from.has_total_mob_count()) {
      set_total_mob_count(from.total_mob_count());
    }
    if (from.has_cur_mob_count()) {
      set_cur_mob_count(from.cur_mob_count());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TowerBuildSummonData::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TowerBuildSummonData::CopyFrom(const TowerBuildSummonData& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TowerBuildSummonData::IsInitialized() const {

  return true;
}

void TowerBuildSummonData::Swap(TowerBuildSummonData* other) {
  if (other != this) {
    map_obj_id_.Swap(&other->map_obj_id_);
    std::swap(resummon_cd_, other->resummon_cd_);
    std::swap(total_mob_count_, other->total_mob_count_);
    std::swap(cur_mob_count_, other->cur_mob_count_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TowerBuildSummonData::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TowerBuildSummonData_descriptor_;
  metadata.reflection = TowerBuildSummonData_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgBuildTowerMotion_S2C::kMsgTypeFieldNumber;
const int MsgBuildTowerMotion_S2C::kIggidFieldNumber;
const int MsgBuildTowerMotion_S2C::kTowerUuidFieldNumber;
const int MsgBuildTowerMotion_S2C::kMapobjectidFieldNumber;
const int MsgBuildTowerMotion_S2C::kPosXFieldNumber;
const int MsgBuildTowerMotion_S2C::kPosYFieldNumber;
const int MsgBuildTowerMotion_S2C::kSummonDataFieldNumber;
#endif  // !_MSC_VER

MsgBuildTowerMotion_S2C::MsgBuildTowerMotion_S2C()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.MsgBuildTowerMotion_S2C)
}

void MsgBuildTowerMotion_S2C::InitAsDefaultInstance() {
  summon_data_ = const_cast< ::MsgPB::TowerBuildSummonData*>(&::MsgPB::TowerBuildSummonData::default_instance());
}

MsgBuildTowerMotion_S2C::MsgBuildTowerMotion_S2C(const MsgBuildTowerMotion_S2C& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.MsgBuildTowerMotion_S2C)
}

void MsgBuildTowerMotion_S2C::SharedCtor() {
  _cached_size_ = 0;
  msgtype_ = 2457;
  iggid_ = GOOGLE_LONGLONG(0);
  tower_uuid_ = GOOGLE_LONGLONG(0);
  mapobjectid_ = 0;
  pos_x_ = 0;
  pos_y_ = 0;
  summon_data_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgBuildTowerMotion_S2C::~MsgBuildTowerMotion_S2C() {
  // @@protoc_insertion_point(destructor:MsgPB.MsgBuildTowerMotion_S2C)
  SharedDtor();
}

void MsgBuildTowerMotion_S2C::SharedDtor() {
  if (this != default_instance_) {
    delete summon_data_;
  }
}

void MsgBuildTowerMotion_S2C::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgBuildTowerMotion_S2C::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgBuildTowerMotion_S2C_descriptor_;
}

const MsgBuildTowerMotion_S2C& MsgBuildTowerMotion_S2C::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgBuildTower_2eproto();
  return *default_instance_;
}

MsgBuildTowerMotion_S2C* MsgBuildTowerMotion_S2C::default_instance_ = NULL;

MsgBuildTowerMotion_S2C* MsgBuildTowerMotion_S2C::New() const {
  return new MsgBuildTowerMotion_S2C;
}

void MsgBuildTowerMotion_S2C::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<MsgBuildTowerMotion_S2C*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 127) {
    ZR_(mapobjectid_, pos_y_);
    msgtype_ = 2457;
    iggid_ = GOOGLE_LONGLONG(0);
    if (has_summon_data()) {
      if (summon_data_ != NULL) summon_data_->::MsgPB::TowerBuildSummonData::Clear();
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgBuildTowerMotion_S2C::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.MsgBuildTowerMotion_S2C)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_BUILDTOWER_MOTION_S2C];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::EMsgType_IsValid(value)) {
            set_msgtype(static_cast< ::MsgPB::EMsgType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_iggid;
        break;
      }

      // optional int64 iggid = 2;
      case 2: {
        if (tag == 16) {
         parse_iggid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &iggid_)));
          set_has_iggid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_tower_uuid;
        break;
      }

      // optional int64 tower_uuid = 3;
      case 3: {
        if (tag == 24) {
         parse_tower_uuid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &tower_uuid_)));
          set_has_tower_uuid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_mapobjectid;
        break;
      }

      // optional int32 mapobjectid = 4;
      case 4: {
        if (tag == 32) {
         parse_mapobjectid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &mapobjectid_)));
          set_has_mapobjectid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_pos_x;
        break;
      }

      // optional int32 pos_x = 5;
      case 5: {
        if (tag == 40) {
         parse_pos_x:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pos_x_)));
          set_has_pos_x();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_pos_y;
        break;
      }

      // optional int32 pos_y = 6;
      case 6: {
        if (tag == 48) {
         parse_pos_y:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pos_y_)));
          set_has_pos_y();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_summon_data;
        break;
      }

      // optional .MsgPB.TowerBuildSummonData summon_data = 7;
      case 7: {
        if (tag == 58) {
         parse_summon_data:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_summon_data()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.MsgBuildTowerMotion_S2C)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.MsgBuildTowerMotion_S2C)
  return false;
#undef DO_
}

void MsgBuildTowerMotion_S2C::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.MsgBuildTowerMotion_S2C)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_BUILDTOWER_MOTION_S2C];
  if (has_msgtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->msgtype(), output);
  }

  // optional int64 iggid = 2;
  if (has_iggid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->iggid(), output);
  }

  // optional int64 tower_uuid = 3;
  if (has_tower_uuid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->tower_uuid(), output);
  }

  // optional int32 mapobjectid = 4;
  if (has_mapobjectid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->mapobjectid(), output);
  }

  // optional int32 pos_x = 5;
  if (has_pos_x()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->pos_x(), output);
  }

  // optional int32 pos_y = 6;
  if (has_pos_y()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->pos_y(), output);
  }

  // optional .MsgPB.TowerBuildSummonData summon_data = 7;
  if (has_summon_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->summon_data(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.MsgBuildTowerMotion_S2C)
}

::google::protobuf::uint8* MsgBuildTowerMotion_S2C::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.MsgBuildTowerMotion_S2C)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_BUILDTOWER_MOTION_S2C];
  if (has_msgtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->msgtype(), target);
  }

  // optional int64 iggid = 2;
  if (has_iggid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->iggid(), target);
  }

  // optional int64 tower_uuid = 3;
  if (has_tower_uuid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->tower_uuid(), target);
  }

  // optional int32 mapobjectid = 4;
  if (has_mapobjectid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->mapobjectid(), target);
  }

  // optional int32 pos_x = 5;
  if (has_pos_x()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->pos_x(), target);
  }

  // optional int32 pos_y = 6;
  if (has_pos_y()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->pos_y(), target);
  }

  // optional .MsgPB.TowerBuildSummonData summon_data = 7;
  if (has_summon_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        7, this->summon_data(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.MsgBuildTowerMotion_S2C)
  return target;
}

int MsgBuildTowerMotion_S2C::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_BUILDTOWER_MOTION_S2C];
    if (has_msgtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgtype());
    }

    // optional int64 iggid = 2;
    if (has_iggid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->iggid());
    }

    // optional int64 tower_uuid = 3;
    if (has_tower_uuid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->tower_uuid());
    }

    // optional int32 mapobjectid = 4;
    if (has_mapobjectid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->mapobjectid());
    }

    // optional int32 pos_x = 5;
    if (has_pos_x()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pos_x());
    }

    // optional int32 pos_y = 6;
    if (has_pos_y()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pos_y());
    }

    // optional .MsgPB.TowerBuildSummonData summon_data = 7;
    if (has_summon_data()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->summon_data());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgBuildTowerMotion_S2C::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgBuildTowerMotion_S2C* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgBuildTowerMotion_S2C*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgBuildTowerMotion_S2C::MergeFrom(const MsgBuildTowerMotion_S2C& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msgtype()) {
      set_msgtype(from.msgtype());
    }
    if (from.has_iggid()) {
      set_iggid(from.iggid());
    }
    if (from.has_tower_uuid()) {
      set_tower_uuid(from.tower_uuid());
    }
    if (from.has_mapobjectid()) {
      set_mapobjectid(from.mapobjectid());
    }
    if (from.has_pos_x()) {
      set_pos_x(from.pos_x());
    }
    if (from.has_pos_y()) {
      set_pos_y(from.pos_y());
    }
    if (from.has_summon_data()) {
      mutable_summon_data()->::MsgPB::TowerBuildSummonData::MergeFrom(from.summon_data());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgBuildTowerMotion_S2C::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgBuildTowerMotion_S2C::CopyFrom(const MsgBuildTowerMotion_S2C& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgBuildTowerMotion_S2C::IsInitialized() const {

  return true;
}

void MsgBuildTowerMotion_S2C::Swap(MsgBuildTowerMotion_S2C* other) {
  if (other != this) {
    std::swap(msgtype_, other->msgtype_);
    std::swap(iggid_, other->iggid_);
    std::swap(tower_uuid_, other->tower_uuid_);
    std::swap(mapobjectid_, other->mapobjectid_);
    std::swap(pos_x_, other->pos_x_);
    std::swap(pos_y_, other->pos_y_);
    std::swap(summon_data_, other->summon_data_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgBuildTowerMotion_S2C::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgBuildTowerMotion_S2C_descriptor_;
  metadata.reflection = MsgBuildTowerMotion_S2C_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgBuildTowerCollectSummon_S2C::kMsgTypeFieldNumber;
const int MsgBuildTowerCollectSummon_S2C::kIggidFieldNumber;
const int MsgBuildTowerCollectSummon_S2C::kTowerUuidFieldNumber;
const int MsgBuildTowerCollectSummon_S2C::kMapobjectidFieldNumber;
const int MsgBuildTowerCollectSummon_S2C::kPosXFieldNumber;
const int MsgBuildTowerCollectSummon_S2C::kPosYFieldNumber;
const int MsgBuildTowerCollectSummon_S2C::kMobObjIdFieldNumber;
#endif  // !_MSC_VER

MsgBuildTowerCollectSummon_S2C::MsgBuildTowerCollectSummon_S2C()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.MsgBuildTowerCollectSummon_S2C)
}

void MsgBuildTowerCollectSummon_S2C::InitAsDefaultInstance() {
}

MsgBuildTowerCollectSummon_S2C::MsgBuildTowerCollectSummon_S2C(const MsgBuildTowerCollectSummon_S2C& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.MsgBuildTowerCollectSummon_S2C)
}

void MsgBuildTowerCollectSummon_S2C::SharedCtor() {
  _cached_size_ = 0;
  msgtype_ = 2458;
  iggid_ = GOOGLE_LONGLONG(0);
  tower_uuid_ = GOOGLE_LONGLONG(0);
  mapobjectid_ = 0;
  pos_x_ = 0;
  pos_y_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgBuildTowerCollectSummon_S2C::~MsgBuildTowerCollectSummon_S2C() {
  // @@protoc_insertion_point(destructor:MsgPB.MsgBuildTowerCollectSummon_S2C)
  SharedDtor();
}

void MsgBuildTowerCollectSummon_S2C::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgBuildTowerCollectSummon_S2C::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgBuildTowerCollectSummon_S2C::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgBuildTowerCollectSummon_S2C_descriptor_;
}

const MsgBuildTowerCollectSummon_S2C& MsgBuildTowerCollectSummon_S2C::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgBuildTower_2eproto();
  return *default_instance_;
}

MsgBuildTowerCollectSummon_S2C* MsgBuildTowerCollectSummon_S2C::default_instance_ = NULL;

MsgBuildTowerCollectSummon_S2C* MsgBuildTowerCollectSummon_S2C::New() const {
  return new MsgBuildTowerCollectSummon_S2C;
}

void MsgBuildTowerCollectSummon_S2C::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<MsgBuildTowerCollectSummon_S2C*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 63) {
    ZR_(mapobjectid_, pos_y_);
    msgtype_ = 2458;
    iggid_ = GOOGLE_LONGLONG(0);
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  mob_obj_id_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgBuildTowerCollectSummon_S2C::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.MsgBuildTowerCollectSummon_S2C)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_BUILDTOWER_COLLECT_SUMMON_S2C];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::EMsgType_IsValid(value)) {
            set_msgtype(static_cast< ::MsgPB::EMsgType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_iggid;
        break;
      }

      // optional int64 iggid = 2;
      case 2: {
        if (tag == 16) {
         parse_iggid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &iggid_)));
          set_has_iggid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_tower_uuid;
        break;
      }

      // optional int64 tower_uuid = 3;
      case 3: {
        if (tag == 24) {
         parse_tower_uuid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &tower_uuid_)));
          set_has_tower_uuid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_mapobjectid;
        break;
      }

      // optional int32 mapobjectid = 4;
      case 4: {
        if (tag == 32) {
         parse_mapobjectid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &mapobjectid_)));
          set_has_mapobjectid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_pos_x;
        break;
      }

      // optional int32 pos_x = 5;
      case 5: {
        if (tag == 40) {
         parse_pos_x:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pos_x_)));
          set_has_pos_x();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_pos_y;
        break;
      }

      // optional int32 pos_y = 6;
      case 6: {
        if (tag == 48) {
         parse_pos_y:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pos_y_)));
          set_has_pos_y();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_mob_obj_id;
        break;
      }

      // repeated int32 mob_obj_id = 7;
      case 7: {
        if (tag == 56) {
         parse_mob_obj_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 56, input, this->mutable_mob_obj_id())));
        } else if (tag == 58) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_mob_obj_id())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_mob_obj_id;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.MsgBuildTowerCollectSummon_S2C)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.MsgBuildTowerCollectSummon_S2C)
  return false;
#undef DO_
}

void MsgBuildTowerCollectSummon_S2C::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.MsgBuildTowerCollectSummon_S2C)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_BUILDTOWER_COLLECT_SUMMON_S2C];
  if (has_msgtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->msgtype(), output);
  }

  // optional int64 iggid = 2;
  if (has_iggid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->iggid(), output);
  }

  // optional int64 tower_uuid = 3;
  if (has_tower_uuid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->tower_uuid(), output);
  }

  // optional int32 mapobjectid = 4;
  if (has_mapobjectid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->mapobjectid(), output);
  }

  // optional int32 pos_x = 5;
  if (has_pos_x()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->pos_x(), output);
  }

  // optional int32 pos_y = 6;
  if (has_pos_y()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->pos_y(), output);
  }

  // repeated int32 mob_obj_id = 7;
  for (int i = 0; i < this->mob_obj_id_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      7, this->mob_obj_id(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.MsgBuildTowerCollectSummon_S2C)
}

::google::protobuf::uint8* MsgBuildTowerCollectSummon_S2C::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.MsgBuildTowerCollectSummon_S2C)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_BUILDTOWER_COLLECT_SUMMON_S2C];
  if (has_msgtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->msgtype(), target);
  }

  // optional int64 iggid = 2;
  if (has_iggid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->iggid(), target);
  }

  // optional int64 tower_uuid = 3;
  if (has_tower_uuid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->tower_uuid(), target);
  }

  // optional int32 mapobjectid = 4;
  if (has_mapobjectid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->mapobjectid(), target);
  }

  // optional int32 pos_x = 5;
  if (has_pos_x()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->pos_x(), target);
  }

  // optional int32 pos_y = 6;
  if (has_pos_y()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->pos_y(), target);
  }

  // repeated int32 mob_obj_id = 7;
  for (int i = 0; i < this->mob_obj_id_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(7, this->mob_obj_id(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.MsgBuildTowerCollectSummon_S2C)
  return target;
}

int MsgBuildTowerCollectSummon_S2C::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_BUILDTOWER_COLLECT_SUMMON_S2C];
    if (has_msgtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgtype());
    }

    // optional int64 iggid = 2;
    if (has_iggid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->iggid());
    }

    // optional int64 tower_uuid = 3;
    if (has_tower_uuid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->tower_uuid());
    }

    // optional int32 mapobjectid = 4;
    if (has_mapobjectid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->mapobjectid());
    }

    // optional int32 pos_x = 5;
    if (has_pos_x()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pos_x());
    }

    // optional int32 pos_y = 6;
    if (has_pos_y()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pos_y());
    }

  }
  // repeated int32 mob_obj_id = 7;
  {
    int data_size = 0;
    for (int i = 0; i < this->mob_obj_id_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->mob_obj_id(i));
    }
    total_size += 1 * this->mob_obj_id_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgBuildTowerCollectSummon_S2C::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgBuildTowerCollectSummon_S2C* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgBuildTowerCollectSummon_S2C*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgBuildTowerCollectSummon_S2C::MergeFrom(const MsgBuildTowerCollectSummon_S2C& from) {
  GOOGLE_CHECK_NE(&from, this);
  mob_obj_id_.MergeFrom(from.mob_obj_id_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msgtype()) {
      set_msgtype(from.msgtype());
    }
    if (from.has_iggid()) {
      set_iggid(from.iggid());
    }
    if (from.has_tower_uuid()) {
      set_tower_uuid(from.tower_uuid());
    }
    if (from.has_mapobjectid()) {
      set_mapobjectid(from.mapobjectid());
    }
    if (from.has_pos_x()) {
      set_pos_x(from.pos_x());
    }
    if (from.has_pos_y()) {
      set_pos_y(from.pos_y());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgBuildTowerCollectSummon_S2C::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgBuildTowerCollectSummon_S2C::CopyFrom(const MsgBuildTowerCollectSummon_S2C& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgBuildTowerCollectSummon_S2C::IsInitialized() const {

  return true;
}

void MsgBuildTowerCollectSummon_S2C::Swap(MsgBuildTowerCollectSummon_S2C* other) {
  if (other != this) {
    std::swap(msgtype_, other->msgtype_);
    std::swap(iggid_, other->iggid_);
    std::swap(tower_uuid_, other->tower_uuid_);
    std::swap(mapobjectid_, other->mapobjectid_);
    std::swap(pos_x_, other->pos_x_);
    std::swap(pos_y_, other->pos_y_);
    mob_obj_id_.Swap(&other->mob_obj_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgBuildTowerCollectSummon_S2C::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgBuildTowerCollectSummon_S2C_descriptor_;
  metadata.reflection = MsgBuildTowerCollectSummon_S2C_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgBuildTowerCrystalTran_CS2::kMsgTypeFieldNumber;
const int MsgBuildTowerCrystalTran_CS2::kIggidFieldNumber;
const int MsgBuildTowerCrystalTran_CS2::kMapidFieldNumber;
#endif  // !_MSC_VER

MsgBuildTowerCrystalTran_CS2::MsgBuildTowerCrystalTran_CS2()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.MsgBuildTowerCrystalTran_CS2)
}

void MsgBuildTowerCrystalTran_CS2::InitAsDefaultInstance() {
}

MsgBuildTowerCrystalTran_CS2::MsgBuildTowerCrystalTran_CS2(const MsgBuildTowerCrystalTran_CS2& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.MsgBuildTowerCrystalTran_CS2)
}

void MsgBuildTowerCrystalTran_CS2::SharedCtor() {
  _cached_size_ = 0;
  msgtype_ = 2460;
  iggid_ = GOOGLE_LONGLONG(0);
  mapid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgBuildTowerCrystalTran_CS2::~MsgBuildTowerCrystalTran_CS2() {
  // @@protoc_insertion_point(destructor:MsgPB.MsgBuildTowerCrystalTran_CS2)
  SharedDtor();
}

void MsgBuildTowerCrystalTran_CS2::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgBuildTowerCrystalTran_CS2::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgBuildTowerCrystalTran_CS2::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgBuildTowerCrystalTran_CS2_descriptor_;
}

const MsgBuildTowerCrystalTran_CS2& MsgBuildTowerCrystalTran_CS2::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgBuildTower_2eproto();
  return *default_instance_;
}

MsgBuildTowerCrystalTran_CS2* MsgBuildTowerCrystalTran_CS2::default_instance_ = NULL;

MsgBuildTowerCrystalTran_CS2* MsgBuildTowerCrystalTran_CS2::New() const {
  return new MsgBuildTowerCrystalTran_CS2;
}

void MsgBuildTowerCrystalTran_CS2::Clear() {
  if (_has_bits_[0 / 32] & 7) {
    msgtype_ = 2460;
    iggid_ = GOOGLE_LONGLONG(0);
    mapid_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgBuildTowerCrystalTran_CS2::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.MsgBuildTowerCrystalTran_CS2)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_BUILDTOWER_CRYSTAL_TRAN_CS2];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::EMsgType_IsValid(value)) {
            set_msgtype(static_cast< ::MsgPB::EMsgType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_iggid;
        break;
      }

      // optional int64 iggid = 2;
      case 2: {
        if (tag == 16) {
         parse_iggid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &iggid_)));
          set_has_iggid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_mapid;
        break;
      }

      // optional int32 mapid = 3;
      case 3: {
        if (tag == 24) {
         parse_mapid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &mapid_)));
          set_has_mapid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.MsgBuildTowerCrystalTran_CS2)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.MsgBuildTowerCrystalTran_CS2)
  return false;
#undef DO_
}

void MsgBuildTowerCrystalTran_CS2::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.MsgBuildTowerCrystalTran_CS2)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_BUILDTOWER_CRYSTAL_TRAN_CS2];
  if (has_msgtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->msgtype(), output);
  }

  // optional int64 iggid = 2;
  if (has_iggid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->iggid(), output);
  }

  // optional int32 mapid = 3;
  if (has_mapid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->mapid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.MsgBuildTowerCrystalTran_CS2)
}

::google::protobuf::uint8* MsgBuildTowerCrystalTran_CS2::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.MsgBuildTowerCrystalTran_CS2)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_BUILDTOWER_CRYSTAL_TRAN_CS2];
  if (has_msgtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->msgtype(), target);
  }

  // optional int64 iggid = 2;
  if (has_iggid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->iggid(), target);
  }

  // optional int32 mapid = 3;
  if (has_mapid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->mapid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.MsgBuildTowerCrystalTran_CS2)
  return target;
}

int MsgBuildTowerCrystalTran_CS2::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_BUILDTOWER_CRYSTAL_TRAN_CS2];
    if (has_msgtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgtype());
    }

    // optional int64 iggid = 2;
    if (has_iggid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->iggid());
    }

    // optional int32 mapid = 3;
    if (has_mapid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->mapid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgBuildTowerCrystalTran_CS2::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgBuildTowerCrystalTran_CS2* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgBuildTowerCrystalTran_CS2*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgBuildTowerCrystalTran_CS2::MergeFrom(const MsgBuildTowerCrystalTran_CS2& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msgtype()) {
      set_msgtype(from.msgtype());
    }
    if (from.has_iggid()) {
      set_iggid(from.iggid());
    }
    if (from.has_mapid()) {
      set_mapid(from.mapid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgBuildTowerCrystalTran_CS2::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgBuildTowerCrystalTran_CS2::CopyFrom(const MsgBuildTowerCrystalTran_CS2& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgBuildTowerCrystalTran_CS2::IsInitialized() const {

  return true;
}

void MsgBuildTowerCrystalTran_CS2::Swap(MsgBuildTowerCrystalTran_CS2* other) {
  if (other != this) {
    std::swap(msgtype_, other->msgtype_);
    std::swap(iggid_, other->iggid_);
    std::swap(mapid_, other->mapid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgBuildTowerCrystalTran_CS2::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgBuildTowerCrystalTran_CS2_descriptor_;
  metadata.reflection = MsgBuildTowerCrystalTran_CS2_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgBuildTowerCrystalBuffUnlock_C2S::kMsgTypeFieldNumber;
const int MsgBuildTowerCrystalBuffUnlock_C2S::kIggidFieldNumber;
const int MsgBuildTowerCrystalBuffUnlock_C2S::kPosXFieldNumber;
const int MsgBuildTowerCrystalBuffUnlock_C2S::kPosYFieldNumber;
const int MsgBuildTowerCrystalBuffUnlock_C2S::kTowerUuidFieldNumber;
const int MsgBuildTowerCrystalBuffUnlock_C2S::kCrystalBuffCfgidFieldNumber;
#endif  // !_MSC_VER

MsgBuildTowerCrystalBuffUnlock_C2S::MsgBuildTowerCrystalBuffUnlock_C2S()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.MsgBuildTowerCrystalBuffUnlock_C2S)
}

void MsgBuildTowerCrystalBuffUnlock_C2S::InitAsDefaultInstance() {
}

MsgBuildTowerCrystalBuffUnlock_C2S::MsgBuildTowerCrystalBuffUnlock_C2S(const MsgBuildTowerCrystalBuffUnlock_C2S& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.MsgBuildTowerCrystalBuffUnlock_C2S)
}

void MsgBuildTowerCrystalBuffUnlock_C2S::SharedCtor() {
  _cached_size_ = 0;
  msgtype_ = 2461;
  iggid_ = GOOGLE_LONGLONG(0);
  pos_x_ = 0;
  pos_y_ = 0;
  tower_uuid_ = GOOGLE_LONGLONG(0);
  crystal_buff_cfgid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgBuildTowerCrystalBuffUnlock_C2S::~MsgBuildTowerCrystalBuffUnlock_C2S() {
  // @@protoc_insertion_point(destructor:MsgPB.MsgBuildTowerCrystalBuffUnlock_C2S)
  SharedDtor();
}

void MsgBuildTowerCrystalBuffUnlock_C2S::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgBuildTowerCrystalBuffUnlock_C2S::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgBuildTowerCrystalBuffUnlock_C2S::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgBuildTowerCrystalBuffUnlock_C2S_descriptor_;
}

const MsgBuildTowerCrystalBuffUnlock_C2S& MsgBuildTowerCrystalBuffUnlock_C2S::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgBuildTower_2eproto();
  return *default_instance_;
}

MsgBuildTowerCrystalBuffUnlock_C2S* MsgBuildTowerCrystalBuffUnlock_C2S::default_instance_ = NULL;

MsgBuildTowerCrystalBuffUnlock_C2S* MsgBuildTowerCrystalBuffUnlock_C2S::New() const {
  return new MsgBuildTowerCrystalBuffUnlock_C2S;
}

void MsgBuildTowerCrystalBuffUnlock_C2S::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<MsgBuildTowerCrystalBuffUnlock_C2S*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 63) {
    ZR_(pos_x_, crystal_buff_cfgid_);
    msgtype_ = 2461;
    iggid_ = GOOGLE_LONGLONG(0);
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgBuildTowerCrystalBuffUnlock_C2S::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.MsgBuildTowerCrystalBuffUnlock_C2S)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_BUILDTOWER_CRYSTAL_BUFF_UNLOCK_C2S];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::EMsgType_IsValid(value)) {
            set_msgtype(static_cast< ::MsgPB::EMsgType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_iggid;
        break;
      }

      // optional int64 iggid = 2;
      case 2: {
        if (tag == 16) {
         parse_iggid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &iggid_)));
          set_has_iggid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_pos_x;
        break;
      }

      // optional int32 pos_x = 3;
      case 3: {
        if (tag == 24) {
         parse_pos_x:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pos_x_)));
          set_has_pos_x();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_pos_y;
        break;
      }

      // optional int32 pos_y = 4;
      case 4: {
        if (tag == 32) {
         parse_pos_y:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pos_y_)));
          set_has_pos_y();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_tower_uuid;
        break;
      }

      // optional int64 tower_uuid = 5;
      case 5: {
        if (tag == 40) {
         parse_tower_uuid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &tower_uuid_)));
          set_has_tower_uuid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_crystal_buff_cfgid;
        break;
      }

      // optional int32 crystal_buff_cfgid = 6;
      case 6: {
        if (tag == 48) {
         parse_crystal_buff_cfgid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &crystal_buff_cfgid_)));
          set_has_crystal_buff_cfgid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.MsgBuildTowerCrystalBuffUnlock_C2S)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.MsgBuildTowerCrystalBuffUnlock_C2S)
  return false;
#undef DO_
}

void MsgBuildTowerCrystalBuffUnlock_C2S::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.MsgBuildTowerCrystalBuffUnlock_C2S)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_BUILDTOWER_CRYSTAL_BUFF_UNLOCK_C2S];
  if (has_msgtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->msgtype(), output);
  }

  // optional int64 iggid = 2;
  if (has_iggid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->iggid(), output);
  }

  // optional int32 pos_x = 3;
  if (has_pos_x()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->pos_x(), output);
  }

  // optional int32 pos_y = 4;
  if (has_pos_y()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->pos_y(), output);
  }

  // optional int64 tower_uuid = 5;
  if (has_tower_uuid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(5, this->tower_uuid(), output);
  }

  // optional int32 crystal_buff_cfgid = 6;
  if (has_crystal_buff_cfgid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->crystal_buff_cfgid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.MsgBuildTowerCrystalBuffUnlock_C2S)
}

::google::protobuf::uint8* MsgBuildTowerCrystalBuffUnlock_C2S::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.MsgBuildTowerCrystalBuffUnlock_C2S)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_BUILDTOWER_CRYSTAL_BUFF_UNLOCK_C2S];
  if (has_msgtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->msgtype(), target);
  }

  // optional int64 iggid = 2;
  if (has_iggid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->iggid(), target);
  }

  // optional int32 pos_x = 3;
  if (has_pos_x()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->pos_x(), target);
  }

  // optional int32 pos_y = 4;
  if (has_pos_y()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->pos_y(), target);
  }

  // optional int64 tower_uuid = 5;
  if (has_tower_uuid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(5, this->tower_uuid(), target);
  }

  // optional int32 crystal_buff_cfgid = 6;
  if (has_crystal_buff_cfgid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->crystal_buff_cfgid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.MsgBuildTowerCrystalBuffUnlock_C2S)
  return target;
}

int MsgBuildTowerCrystalBuffUnlock_C2S::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_BUILDTOWER_CRYSTAL_BUFF_UNLOCK_C2S];
    if (has_msgtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgtype());
    }

    // optional int64 iggid = 2;
    if (has_iggid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->iggid());
    }

    // optional int32 pos_x = 3;
    if (has_pos_x()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pos_x());
    }

    // optional int32 pos_y = 4;
    if (has_pos_y()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pos_y());
    }

    // optional int64 tower_uuid = 5;
    if (has_tower_uuid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->tower_uuid());
    }

    // optional int32 crystal_buff_cfgid = 6;
    if (has_crystal_buff_cfgid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->crystal_buff_cfgid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgBuildTowerCrystalBuffUnlock_C2S::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgBuildTowerCrystalBuffUnlock_C2S* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgBuildTowerCrystalBuffUnlock_C2S*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgBuildTowerCrystalBuffUnlock_C2S::MergeFrom(const MsgBuildTowerCrystalBuffUnlock_C2S& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msgtype()) {
      set_msgtype(from.msgtype());
    }
    if (from.has_iggid()) {
      set_iggid(from.iggid());
    }
    if (from.has_pos_x()) {
      set_pos_x(from.pos_x());
    }
    if (from.has_pos_y()) {
      set_pos_y(from.pos_y());
    }
    if (from.has_tower_uuid()) {
      set_tower_uuid(from.tower_uuid());
    }
    if (from.has_crystal_buff_cfgid()) {
      set_crystal_buff_cfgid(from.crystal_buff_cfgid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgBuildTowerCrystalBuffUnlock_C2S::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgBuildTowerCrystalBuffUnlock_C2S::CopyFrom(const MsgBuildTowerCrystalBuffUnlock_C2S& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgBuildTowerCrystalBuffUnlock_C2S::IsInitialized() const {

  return true;
}

void MsgBuildTowerCrystalBuffUnlock_C2S::Swap(MsgBuildTowerCrystalBuffUnlock_C2S* other) {
  if (other != this) {
    std::swap(msgtype_, other->msgtype_);
    std::swap(iggid_, other->iggid_);
    std::swap(pos_x_, other->pos_x_);
    std::swap(pos_y_, other->pos_y_);
    std::swap(tower_uuid_, other->tower_uuid_);
    std::swap(crystal_buff_cfgid_, other->crystal_buff_cfgid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgBuildTowerCrystalBuffUnlock_C2S::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgBuildTowerCrystalBuffUnlock_C2S_descriptor_;
  metadata.reflection = MsgBuildTowerCrystalBuffUnlock_C2S_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgBuildTowerCrystalBuffUnlock_S2C::kMsgTypeFieldNumber;
const int MsgBuildTowerCrystalBuffUnlock_S2C::kIggidFieldNumber;
const int MsgBuildTowerCrystalBuffUnlock_S2C::kPosXFieldNumber;
const int MsgBuildTowerCrystalBuffUnlock_S2C::kPosYFieldNumber;
const int MsgBuildTowerCrystalBuffUnlock_S2C::kTowerUuidFieldNumber;
const int MsgBuildTowerCrystalBuffUnlock_S2C::kCrystalBuffCfgidFieldNumber;
const int MsgBuildTowerCrystalBuffUnlock_S2C::kCrystalBuffStartTimeFieldNumber;
#endif  // !_MSC_VER

MsgBuildTowerCrystalBuffUnlock_S2C::MsgBuildTowerCrystalBuffUnlock_S2C()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.MsgBuildTowerCrystalBuffUnlock_S2C)
}

void MsgBuildTowerCrystalBuffUnlock_S2C::InitAsDefaultInstance() {
}

MsgBuildTowerCrystalBuffUnlock_S2C::MsgBuildTowerCrystalBuffUnlock_S2C(const MsgBuildTowerCrystalBuffUnlock_S2C& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.MsgBuildTowerCrystalBuffUnlock_S2C)
}

void MsgBuildTowerCrystalBuffUnlock_S2C::SharedCtor() {
  _cached_size_ = 0;
  msgtype_ = 2462;
  iggid_ = GOOGLE_LONGLONG(0);
  pos_x_ = 0;
  pos_y_ = 0;
  tower_uuid_ = GOOGLE_LONGLONG(0);
  crystal_buff_cfgid_ = 0;
  crystal_buff_start_time_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgBuildTowerCrystalBuffUnlock_S2C::~MsgBuildTowerCrystalBuffUnlock_S2C() {
  // @@protoc_insertion_point(destructor:MsgPB.MsgBuildTowerCrystalBuffUnlock_S2C)
  SharedDtor();
}

void MsgBuildTowerCrystalBuffUnlock_S2C::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgBuildTowerCrystalBuffUnlock_S2C::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgBuildTowerCrystalBuffUnlock_S2C::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgBuildTowerCrystalBuffUnlock_S2C_descriptor_;
}

const MsgBuildTowerCrystalBuffUnlock_S2C& MsgBuildTowerCrystalBuffUnlock_S2C::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgBuildTower_2eproto();
  return *default_instance_;
}

MsgBuildTowerCrystalBuffUnlock_S2C* MsgBuildTowerCrystalBuffUnlock_S2C::default_instance_ = NULL;

MsgBuildTowerCrystalBuffUnlock_S2C* MsgBuildTowerCrystalBuffUnlock_S2C::New() const {
  return new MsgBuildTowerCrystalBuffUnlock_S2C;
}

void MsgBuildTowerCrystalBuffUnlock_S2C::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<MsgBuildTowerCrystalBuffUnlock_S2C*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 127) {
    ZR_(pos_x_, crystal_buff_start_time_);
    msgtype_ = 2462;
    iggid_ = GOOGLE_LONGLONG(0);
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgBuildTowerCrystalBuffUnlock_S2C::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.MsgBuildTowerCrystalBuffUnlock_S2C)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_BUILDTOWER_CRYSTAL_BUFF_UNLOCK_S2C];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::EMsgType_IsValid(value)) {
            set_msgtype(static_cast< ::MsgPB::EMsgType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_iggid;
        break;
      }

      // optional int64 iggid = 2;
      case 2: {
        if (tag == 16) {
         parse_iggid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &iggid_)));
          set_has_iggid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_pos_x;
        break;
      }

      // optional int32 pos_x = 3;
      case 3: {
        if (tag == 24) {
         parse_pos_x:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pos_x_)));
          set_has_pos_x();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_pos_y;
        break;
      }

      // optional int32 pos_y = 4;
      case 4: {
        if (tag == 32) {
         parse_pos_y:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pos_y_)));
          set_has_pos_y();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_tower_uuid;
        break;
      }

      // optional int64 tower_uuid = 5;
      case 5: {
        if (tag == 40) {
         parse_tower_uuid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &tower_uuid_)));
          set_has_tower_uuid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_crystal_buff_cfgid;
        break;
      }

      // optional int32 crystal_buff_cfgid = 6;
      case 6: {
        if (tag == 48) {
         parse_crystal_buff_cfgid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &crystal_buff_cfgid_)));
          set_has_crystal_buff_cfgid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_crystal_buff_start_time;
        break;
      }

      // optional int64 crystal_buff_start_time = 7;
      case 7: {
        if (tag == 56) {
         parse_crystal_buff_start_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &crystal_buff_start_time_)));
          set_has_crystal_buff_start_time();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.MsgBuildTowerCrystalBuffUnlock_S2C)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.MsgBuildTowerCrystalBuffUnlock_S2C)
  return false;
#undef DO_
}

void MsgBuildTowerCrystalBuffUnlock_S2C::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.MsgBuildTowerCrystalBuffUnlock_S2C)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_BUILDTOWER_CRYSTAL_BUFF_UNLOCK_S2C];
  if (has_msgtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->msgtype(), output);
  }

  // optional int64 iggid = 2;
  if (has_iggid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->iggid(), output);
  }

  // optional int32 pos_x = 3;
  if (has_pos_x()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->pos_x(), output);
  }

  // optional int32 pos_y = 4;
  if (has_pos_y()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->pos_y(), output);
  }

  // optional int64 tower_uuid = 5;
  if (has_tower_uuid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(5, this->tower_uuid(), output);
  }

  // optional int32 crystal_buff_cfgid = 6;
  if (has_crystal_buff_cfgid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->crystal_buff_cfgid(), output);
  }

  // optional int64 crystal_buff_start_time = 7;
  if (has_crystal_buff_start_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(7, this->crystal_buff_start_time(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.MsgBuildTowerCrystalBuffUnlock_S2C)
}

::google::protobuf::uint8* MsgBuildTowerCrystalBuffUnlock_S2C::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.MsgBuildTowerCrystalBuffUnlock_S2C)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_BUILDTOWER_CRYSTAL_BUFF_UNLOCK_S2C];
  if (has_msgtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->msgtype(), target);
  }

  // optional int64 iggid = 2;
  if (has_iggid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->iggid(), target);
  }

  // optional int32 pos_x = 3;
  if (has_pos_x()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->pos_x(), target);
  }

  // optional int32 pos_y = 4;
  if (has_pos_y()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->pos_y(), target);
  }

  // optional int64 tower_uuid = 5;
  if (has_tower_uuid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(5, this->tower_uuid(), target);
  }

  // optional int32 crystal_buff_cfgid = 6;
  if (has_crystal_buff_cfgid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->crystal_buff_cfgid(), target);
  }

  // optional int64 crystal_buff_start_time = 7;
  if (has_crystal_buff_start_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(7, this->crystal_buff_start_time(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.MsgBuildTowerCrystalBuffUnlock_S2C)
  return target;
}

int MsgBuildTowerCrystalBuffUnlock_S2C::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_BUILDTOWER_CRYSTAL_BUFF_UNLOCK_S2C];
    if (has_msgtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgtype());
    }

    // optional int64 iggid = 2;
    if (has_iggid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->iggid());
    }

    // optional int32 pos_x = 3;
    if (has_pos_x()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pos_x());
    }

    // optional int32 pos_y = 4;
    if (has_pos_y()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pos_y());
    }

    // optional int64 tower_uuid = 5;
    if (has_tower_uuid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->tower_uuid());
    }

    // optional int32 crystal_buff_cfgid = 6;
    if (has_crystal_buff_cfgid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->crystal_buff_cfgid());
    }

    // optional int64 crystal_buff_start_time = 7;
    if (has_crystal_buff_start_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->crystal_buff_start_time());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgBuildTowerCrystalBuffUnlock_S2C::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgBuildTowerCrystalBuffUnlock_S2C* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgBuildTowerCrystalBuffUnlock_S2C*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgBuildTowerCrystalBuffUnlock_S2C::MergeFrom(const MsgBuildTowerCrystalBuffUnlock_S2C& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msgtype()) {
      set_msgtype(from.msgtype());
    }
    if (from.has_iggid()) {
      set_iggid(from.iggid());
    }
    if (from.has_pos_x()) {
      set_pos_x(from.pos_x());
    }
    if (from.has_pos_y()) {
      set_pos_y(from.pos_y());
    }
    if (from.has_tower_uuid()) {
      set_tower_uuid(from.tower_uuid());
    }
    if (from.has_crystal_buff_cfgid()) {
      set_crystal_buff_cfgid(from.crystal_buff_cfgid());
    }
    if (from.has_crystal_buff_start_time()) {
      set_crystal_buff_start_time(from.crystal_buff_start_time());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgBuildTowerCrystalBuffUnlock_S2C::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgBuildTowerCrystalBuffUnlock_S2C::CopyFrom(const MsgBuildTowerCrystalBuffUnlock_S2C& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgBuildTowerCrystalBuffUnlock_S2C::IsInitialized() const {

  return true;
}

void MsgBuildTowerCrystalBuffUnlock_S2C::Swap(MsgBuildTowerCrystalBuffUnlock_S2C* other) {
  if (other != this) {
    std::swap(msgtype_, other->msgtype_);
    std::swap(iggid_, other->iggid_);
    std::swap(pos_x_, other->pos_x_);
    std::swap(pos_y_, other->pos_y_);
    std::swap(tower_uuid_, other->tower_uuid_);
    std::swap(crystal_buff_cfgid_, other->crystal_buff_cfgid_);
    std::swap(crystal_buff_start_time_, other->crystal_buff_start_time_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgBuildTowerCrystalBuffUnlock_S2C::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgBuildTowerCrystalBuffUnlock_S2C_descriptor_;
  metadata.reflection = MsgBuildTowerCrystalBuffUnlock_S2C_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgBuildTowerUpdateTowerPVPAirShip_C2MS::kMsgTypeFieldNumber;
const int MsgBuildTowerUpdateTowerPVPAirShip_C2MS::kIggidFieldNumber;
#endif  // !_MSC_VER

MsgBuildTowerUpdateTowerPVPAirShip_C2MS::MsgBuildTowerUpdateTowerPVPAirShip_C2MS()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.MsgBuildTowerUpdateTowerPVPAirShip_C2MS)
}

void MsgBuildTowerUpdateTowerPVPAirShip_C2MS::InitAsDefaultInstance() {
}

MsgBuildTowerUpdateTowerPVPAirShip_C2MS::MsgBuildTowerUpdateTowerPVPAirShip_C2MS(const MsgBuildTowerUpdateTowerPVPAirShip_C2MS& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.MsgBuildTowerUpdateTowerPVPAirShip_C2MS)
}

void MsgBuildTowerUpdateTowerPVPAirShip_C2MS::SharedCtor() {
  _cached_size_ = 0;
  msgtype_ = 2463;
  iggid_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgBuildTowerUpdateTowerPVPAirShip_C2MS::~MsgBuildTowerUpdateTowerPVPAirShip_C2MS() {
  // @@protoc_insertion_point(destructor:MsgPB.MsgBuildTowerUpdateTowerPVPAirShip_C2MS)
  SharedDtor();
}

void MsgBuildTowerUpdateTowerPVPAirShip_C2MS::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgBuildTowerUpdateTowerPVPAirShip_C2MS::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgBuildTowerUpdateTowerPVPAirShip_C2MS::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgBuildTowerUpdateTowerPVPAirShip_C2MS_descriptor_;
}

const MsgBuildTowerUpdateTowerPVPAirShip_C2MS& MsgBuildTowerUpdateTowerPVPAirShip_C2MS::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgBuildTower_2eproto();
  return *default_instance_;
}

MsgBuildTowerUpdateTowerPVPAirShip_C2MS* MsgBuildTowerUpdateTowerPVPAirShip_C2MS::default_instance_ = NULL;

MsgBuildTowerUpdateTowerPVPAirShip_C2MS* MsgBuildTowerUpdateTowerPVPAirShip_C2MS::New() const {
  return new MsgBuildTowerUpdateTowerPVPAirShip_C2MS;
}

void MsgBuildTowerUpdateTowerPVPAirShip_C2MS::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    msgtype_ = 2463;
    iggid_ = GOOGLE_LONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgBuildTowerUpdateTowerPVPAirShip_C2MS::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.MsgBuildTowerUpdateTowerPVPAirShip_C2MS)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_BUILDTOWER_UPDATE_TOWERPVP_AIRSHIP_C2MS];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::EMsgType_IsValid(value)) {
            set_msgtype(static_cast< ::MsgPB::EMsgType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_iggid;
        break;
      }

      // optional int64 iggid = 2;
      case 2: {
        if (tag == 16) {
         parse_iggid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &iggid_)));
          set_has_iggid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.MsgBuildTowerUpdateTowerPVPAirShip_C2MS)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.MsgBuildTowerUpdateTowerPVPAirShip_C2MS)
  return false;
#undef DO_
}

void MsgBuildTowerUpdateTowerPVPAirShip_C2MS::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.MsgBuildTowerUpdateTowerPVPAirShip_C2MS)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_BUILDTOWER_UPDATE_TOWERPVP_AIRSHIP_C2MS];
  if (has_msgtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->msgtype(), output);
  }

  // optional int64 iggid = 2;
  if (has_iggid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->iggid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.MsgBuildTowerUpdateTowerPVPAirShip_C2MS)
}

::google::protobuf::uint8* MsgBuildTowerUpdateTowerPVPAirShip_C2MS::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.MsgBuildTowerUpdateTowerPVPAirShip_C2MS)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_BUILDTOWER_UPDATE_TOWERPVP_AIRSHIP_C2MS];
  if (has_msgtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->msgtype(), target);
  }

  // optional int64 iggid = 2;
  if (has_iggid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->iggid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.MsgBuildTowerUpdateTowerPVPAirShip_C2MS)
  return target;
}

int MsgBuildTowerUpdateTowerPVPAirShip_C2MS::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_BUILDTOWER_UPDATE_TOWERPVP_AIRSHIP_C2MS];
    if (has_msgtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgtype());
    }

    // optional int64 iggid = 2;
    if (has_iggid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->iggid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgBuildTowerUpdateTowerPVPAirShip_C2MS::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgBuildTowerUpdateTowerPVPAirShip_C2MS* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgBuildTowerUpdateTowerPVPAirShip_C2MS*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgBuildTowerUpdateTowerPVPAirShip_C2MS::MergeFrom(const MsgBuildTowerUpdateTowerPVPAirShip_C2MS& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msgtype()) {
      set_msgtype(from.msgtype());
    }
    if (from.has_iggid()) {
      set_iggid(from.iggid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgBuildTowerUpdateTowerPVPAirShip_C2MS::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgBuildTowerUpdateTowerPVPAirShip_C2MS::CopyFrom(const MsgBuildTowerUpdateTowerPVPAirShip_C2MS& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgBuildTowerUpdateTowerPVPAirShip_C2MS::IsInitialized() const {

  return true;
}

void MsgBuildTowerUpdateTowerPVPAirShip_C2MS::Swap(MsgBuildTowerUpdateTowerPVPAirShip_C2MS* other) {
  if (other != this) {
    std::swap(msgtype_, other->msgtype_);
    std::swap(iggid_, other->iggid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgBuildTowerUpdateTowerPVPAirShip_C2MS::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgBuildTowerUpdateTowerPVPAirShip_C2MS_descriptor_;
  metadata.reflection = MsgBuildTowerUpdateTowerPVPAirShip_C2MS_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgBuildTowerUpdateTowerPVPAirShip_MS2C::kMsgTypeFieldNumber;
const int MsgBuildTowerUpdateTowerPVPAirShip_MS2C::kIggidFieldNumber;
const int MsgBuildTowerUpdateTowerPVPAirShip_MS2C::kNewLevelFieldNumber;
#endif  // !_MSC_VER

MsgBuildTowerUpdateTowerPVPAirShip_MS2C::MsgBuildTowerUpdateTowerPVPAirShip_MS2C()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.MsgBuildTowerUpdateTowerPVPAirShip_MS2C)
}

void MsgBuildTowerUpdateTowerPVPAirShip_MS2C::InitAsDefaultInstance() {
}

MsgBuildTowerUpdateTowerPVPAirShip_MS2C::MsgBuildTowerUpdateTowerPVPAirShip_MS2C(const MsgBuildTowerUpdateTowerPVPAirShip_MS2C& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.MsgBuildTowerUpdateTowerPVPAirShip_MS2C)
}

void MsgBuildTowerUpdateTowerPVPAirShip_MS2C::SharedCtor() {
  _cached_size_ = 0;
  msgtype_ = 2464;
  iggid_ = GOOGLE_LONGLONG(0);
  new_level_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgBuildTowerUpdateTowerPVPAirShip_MS2C::~MsgBuildTowerUpdateTowerPVPAirShip_MS2C() {
  // @@protoc_insertion_point(destructor:MsgPB.MsgBuildTowerUpdateTowerPVPAirShip_MS2C)
  SharedDtor();
}

void MsgBuildTowerUpdateTowerPVPAirShip_MS2C::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgBuildTowerUpdateTowerPVPAirShip_MS2C::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgBuildTowerUpdateTowerPVPAirShip_MS2C::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgBuildTowerUpdateTowerPVPAirShip_MS2C_descriptor_;
}

const MsgBuildTowerUpdateTowerPVPAirShip_MS2C& MsgBuildTowerUpdateTowerPVPAirShip_MS2C::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgBuildTower_2eproto();
  return *default_instance_;
}

MsgBuildTowerUpdateTowerPVPAirShip_MS2C* MsgBuildTowerUpdateTowerPVPAirShip_MS2C::default_instance_ = NULL;

MsgBuildTowerUpdateTowerPVPAirShip_MS2C* MsgBuildTowerUpdateTowerPVPAirShip_MS2C::New() const {
  return new MsgBuildTowerUpdateTowerPVPAirShip_MS2C;
}

void MsgBuildTowerUpdateTowerPVPAirShip_MS2C::Clear() {
  if (_has_bits_[0 / 32] & 7) {
    msgtype_ = 2464;
    iggid_ = GOOGLE_LONGLONG(0);
    new_level_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgBuildTowerUpdateTowerPVPAirShip_MS2C::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.MsgBuildTowerUpdateTowerPVPAirShip_MS2C)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_BUILDTOWER_UPDATE_TOWERPVP_AIRSHIP_MS2C];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::EMsgType_IsValid(value)) {
            set_msgtype(static_cast< ::MsgPB::EMsgType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_iggid;
        break;
      }

      // optional int64 iggid = 2;
      case 2: {
        if (tag == 16) {
         parse_iggid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &iggid_)));
          set_has_iggid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_new_level;
        break;
      }

      // optional int32 new_level = 3;
      case 3: {
        if (tag == 24) {
         parse_new_level:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &new_level_)));
          set_has_new_level();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.MsgBuildTowerUpdateTowerPVPAirShip_MS2C)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.MsgBuildTowerUpdateTowerPVPAirShip_MS2C)
  return false;
#undef DO_
}

void MsgBuildTowerUpdateTowerPVPAirShip_MS2C::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.MsgBuildTowerUpdateTowerPVPAirShip_MS2C)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_BUILDTOWER_UPDATE_TOWERPVP_AIRSHIP_MS2C];
  if (has_msgtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->msgtype(), output);
  }

  // optional int64 iggid = 2;
  if (has_iggid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->iggid(), output);
  }

  // optional int32 new_level = 3;
  if (has_new_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->new_level(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.MsgBuildTowerUpdateTowerPVPAirShip_MS2C)
}

::google::protobuf::uint8* MsgBuildTowerUpdateTowerPVPAirShip_MS2C::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.MsgBuildTowerUpdateTowerPVPAirShip_MS2C)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_BUILDTOWER_UPDATE_TOWERPVP_AIRSHIP_MS2C];
  if (has_msgtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->msgtype(), target);
  }

  // optional int64 iggid = 2;
  if (has_iggid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->iggid(), target);
  }

  // optional int32 new_level = 3;
  if (has_new_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->new_level(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.MsgBuildTowerUpdateTowerPVPAirShip_MS2C)
  return target;
}

int MsgBuildTowerUpdateTowerPVPAirShip_MS2C::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_BUILDTOWER_UPDATE_TOWERPVP_AIRSHIP_MS2C];
    if (has_msgtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgtype());
    }

    // optional int64 iggid = 2;
    if (has_iggid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->iggid());
    }

    // optional int32 new_level = 3;
    if (has_new_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->new_level());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgBuildTowerUpdateTowerPVPAirShip_MS2C::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgBuildTowerUpdateTowerPVPAirShip_MS2C* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgBuildTowerUpdateTowerPVPAirShip_MS2C*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgBuildTowerUpdateTowerPVPAirShip_MS2C::MergeFrom(const MsgBuildTowerUpdateTowerPVPAirShip_MS2C& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msgtype()) {
      set_msgtype(from.msgtype());
    }
    if (from.has_iggid()) {
      set_iggid(from.iggid());
    }
    if (from.has_new_level()) {
      set_new_level(from.new_level());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgBuildTowerUpdateTowerPVPAirShip_MS2C::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgBuildTowerUpdateTowerPVPAirShip_MS2C::CopyFrom(const MsgBuildTowerUpdateTowerPVPAirShip_MS2C& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgBuildTowerUpdateTowerPVPAirShip_MS2C::IsInitialized() const {

  return true;
}

void MsgBuildTowerUpdateTowerPVPAirShip_MS2C::Swap(MsgBuildTowerUpdateTowerPVPAirShip_MS2C* other) {
  if (other != this) {
    std::swap(msgtype_, other->msgtype_);
    std::swap(iggid_, other->iggid_);
    std::swap(new_level_, other->new_level_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgBuildTowerUpdateTowerPVPAirShip_MS2C::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgBuildTowerUpdateTowerPVPAirShip_MS2C_descriptor_;
  metadata.reflection = MsgBuildTowerUpdateTowerPVPAirShip_MS2C_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgBuildTowerAdd_C2MS::kMsgTypeFieldNumber;
const int MsgBuildTowerAdd_C2MS::kIggidFieldNumber;
const int MsgBuildTowerAdd_C2MS::kTowerFieldNumber;
#endif  // !_MSC_VER

MsgBuildTowerAdd_C2MS::MsgBuildTowerAdd_C2MS()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.MsgBuildTowerAdd_C2MS)
}

void MsgBuildTowerAdd_C2MS::InitAsDefaultInstance() {
  tower_ = const_cast< ::MsgPB::MsgBuildTowerData*>(&::MsgPB::MsgBuildTowerData::default_instance());
}

MsgBuildTowerAdd_C2MS::MsgBuildTowerAdd_C2MS(const MsgBuildTowerAdd_C2MS& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.MsgBuildTowerAdd_C2MS)
}

void MsgBuildTowerAdd_C2MS::SharedCtor() {
  _cached_size_ = 0;
  msgtype_ = 2465;
  iggid_ = GOOGLE_LONGLONG(0);
  tower_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgBuildTowerAdd_C2MS::~MsgBuildTowerAdd_C2MS() {
  // @@protoc_insertion_point(destructor:MsgPB.MsgBuildTowerAdd_C2MS)
  SharedDtor();
}

void MsgBuildTowerAdd_C2MS::SharedDtor() {
  if (this != default_instance_) {
    delete tower_;
  }
}

void MsgBuildTowerAdd_C2MS::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgBuildTowerAdd_C2MS::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgBuildTowerAdd_C2MS_descriptor_;
}

const MsgBuildTowerAdd_C2MS& MsgBuildTowerAdd_C2MS::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgBuildTower_2eproto();
  return *default_instance_;
}

MsgBuildTowerAdd_C2MS* MsgBuildTowerAdd_C2MS::default_instance_ = NULL;

MsgBuildTowerAdd_C2MS* MsgBuildTowerAdd_C2MS::New() const {
  return new MsgBuildTowerAdd_C2MS;
}

void MsgBuildTowerAdd_C2MS::Clear() {
  if (_has_bits_[0 / 32] & 7) {
    msgtype_ = 2465;
    iggid_ = GOOGLE_LONGLONG(0);
    if (has_tower()) {
      if (tower_ != NULL) tower_->::MsgPB::MsgBuildTowerData::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgBuildTowerAdd_C2MS::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.MsgBuildTowerAdd_C2MS)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_BUILDTOWER_ADD_C2MS];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::EMsgType_IsValid(value)) {
            set_msgtype(static_cast< ::MsgPB::EMsgType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_iggid;
        break;
      }

      // optional int64 iggid = 2;
      case 2: {
        if (tag == 16) {
         parse_iggid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &iggid_)));
          set_has_iggid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_tower;
        break;
      }

      // optional .MsgPB.MsgBuildTowerData tower = 3;
      case 3: {
        if (tag == 26) {
         parse_tower:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_tower()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.MsgBuildTowerAdd_C2MS)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.MsgBuildTowerAdd_C2MS)
  return false;
#undef DO_
}

void MsgBuildTowerAdd_C2MS::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.MsgBuildTowerAdd_C2MS)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_BUILDTOWER_ADD_C2MS];
  if (has_msgtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->msgtype(), output);
  }

  // optional int64 iggid = 2;
  if (has_iggid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->iggid(), output);
  }

  // optional .MsgPB.MsgBuildTowerData tower = 3;
  if (has_tower()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->tower(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.MsgBuildTowerAdd_C2MS)
}

::google::protobuf::uint8* MsgBuildTowerAdd_C2MS::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.MsgBuildTowerAdd_C2MS)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_BUILDTOWER_ADD_C2MS];
  if (has_msgtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->msgtype(), target);
  }

  // optional int64 iggid = 2;
  if (has_iggid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->iggid(), target);
  }

  // optional .MsgPB.MsgBuildTowerData tower = 3;
  if (has_tower()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->tower(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.MsgBuildTowerAdd_C2MS)
  return target;
}

int MsgBuildTowerAdd_C2MS::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_BUILDTOWER_ADD_C2MS];
    if (has_msgtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgtype());
    }

    // optional int64 iggid = 2;
    if (has_iggid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->iggid());
    }

    // optional .MsgPB.MsgBuildTowerData tower = 3;
    if (has_tower()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->tower());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgBuildTowerAdd_C2MS::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgBuildTowerAdd_C2MS* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgBuildTowerAdd_C2MS*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgBuildTowerAdd_C2MS::MergeFrom(const MsgBuildTowerAdd_C2MS& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msgtype()) {
      set_msgtype(from.msgtype());
    }
    if (from.has_iggid()) {
      set_iggid(from.iggid());
    }
    if (from.has_tower()) {
      mutable_tower()->::MsgPB::MsgBuildTowerData::MergeFrom(from.tower());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgBuildTowerAdd_C2MS::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgBuildTowerAdd_C2MS::CopyFrom(const MsgBuildTowerAdd_C2MS& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgBuildTowerAdd_C2MS::IsInitialized() const {

  return true;
}

void MsgBuildTowerAdd_C2MS::Swap(MsgBuildTowerAdd_C2MS* other) {
  if (other != this) {
    std::swap(msgtype_, other->msgtype_);
    std::swap(iggid_, other->iggid_);
    std::swap(tower_, other->tower_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgBuildTowerAdd_C2MS::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgBuildTowerAdd_C2MS_descriptor_;
  metadata.reflection = MsgBuildTowerAdd_C2MS_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgBuildTowerDel_C2MS::kMsgTypeFieldNumber;
const int MsgBuildTowerDel_C2MS::kIggidFieldNumber;
const int MsgBuildTowerDel_C2MS::kTowerFieldNumber;
#endif  // !_MSC_VER

MsgBuildTowerDel_C2MS::MsgBuildTowerDel_C2MS()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.MsgBuildTowerDel_C2MS)
}

void MsgBuildTowerDel_C2MS::InitAsDefaultInstance() {
  tower_ = const_cast< ::MsgPB::MsgBuildTowerData*>(&::MsgPB::MsgBuildTowerData::default_instance());
}

MsgBuildTowerDel_C2MS::MsgBuildTowerDel_C2MS(const MsgBuildTowerDel_C2MS& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.MsgBuildTowerDel_C2MS)
}

void MsgBuildTowerDel_C2MS::SharedCtor() {
  _cached_size_ = 0;
  msgtype_ = 2466;
  iggid_ = GOOGLE_LONGLONG(0);
  tower_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgBuildTowerDel_C2MS::~MsgBuildTowerDel_C2MS() {
  // @@protoc_insertion_point(destructor:MsgPB.MsgBuildTowerDel_C2MS)
  SharedDtor();
}

void MsgBuildTowerDel_C2MS::SharedDtor() {
  if (this != default_instance_) {
    delete tower_;
  }
}

void MsgBuildTowerDel_C2MS::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgBuildTowerDel_C2MS::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgBuildTowerDel_C2MS_descriptor_;
}

const MsgBuildTowerDel_C2MS& MsgBuildTowerDel_C2MS::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgBuildTower_2eproto();
  return *default_instance_;
}

MsgBuildTowerDel_C2MS* MsgBuildTowerDel_C2MS::default_instance_ = NULL;

MsgBuildTowerDel_C2MS* MsgBuildTowerDel_C2MS::New() const {
  return new MsgBuildTowerDel_C2MS;
}

void MsgBuildTowerDel_C2MS::Clear() {
  if (_has_bits_[0 / 32] & 7) {
    msgtype_ = 2466;
    iggid_ = GOOGLE_LONGLONG(0);
    if (has_tower()) {
      if (tower_ != NULL) tower_->::MsgPB::MsgBuildTowerData::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgBuildTowerDel_C2MS::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.MsgBuildTowerDel_C2MS)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_BUILDTOWER_DEL_C2MS];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::EMsgType_IsValid(value)) {
            set_msgtype(static_cast< ::MsgPB::EMsgType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_iggid;
        break;
      }

      // optional int64 iggid = 2;
      case 2: {
        if (tag == 16) {
         parse_iggid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &iggid_)));
          set_has_iggid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_tower;
        break;
      }

      // optional .MsgPB.MsgBuildTowerData tower = 3;
      case 3: {
        if (tag == 26) {
         parse_tower:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_tower()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.MsgBuildTowerDel_C2MS)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.MsgBuildTowerDel_C2MS)
  return false;
#undef DO_
}

void MsgBuildTowerDel_C2MS::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.MsgBuildTowerDel_C2MS)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_BUILDTOWER_DEL_C2MS];
  if (has_msgtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->msgtype(), output);
  }

  // optional int64 iggid = 2;
  if (has_iggid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->iggid(), output);
  }

  // optional .MsgPB.MsgBuildTowerData tower = 3;
  if (has_tower()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->tower(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.MsgBuildTowerDel_C2MS)
}

::google::protobuf::uint8* MsgBuildTowerDel_C2MS::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.MsgBuildTowerDel_C2MS)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_BUILDTOWER_DEL_C2MS];
  if (has_msgtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->msgtype(), target);
  }

  // optional int64 iggid = 2;
  if (has_iggid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->iggid(), target);
  }

  // optional .MsgPB.MsgBuildTowerData tower = 3;
  if (has_tower()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->tower(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.MsgBuildTowerDel_C2MS)
  return target;
}

int MsgBuildTowerDel_C2MS::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_BUILDTOWER_DEL_C2MS];
    if (has_msgtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgtype());
    }

    // optional int64 iggid = 2;
    if (has_iggid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->iggid());
    }

    // optional .MsgPB.MsgBuildTowerData tower = 3;
    if (has_tower()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->tower());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgBuildTowerDel_C2MS::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgBuildTowerDel_C2MS* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgBuildTowerDel_C2MS*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgBuildTowerDel_C2MS::MergeFrom(const MsgBuildTowerDel_C2MS& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msgtype()) {
      set_msgtype(from.msgtype());
    }
    if (from.has_iggid()) {
      set_iggid(from.iggid());
    }
    if (from.has_tower()) {
      mutable_tower()->::MsgPB::MsgBuildTowerData::MergeFrom(from.tower());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgBuildTowerDel_C2MS::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgBuildTowerDel_C2MS::CopyFrom(const MsgBuildTowerDel_C2MS& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgBuildTowerDel_C2MS::IsInitialized() const {

  return true;
}

void MsgBuildTowerDel_C2MS::Swap(MsgBuildTowerDel_C2MS* other) {
  if (other != this) {
    std::swap(msgtype_, other->msgtype_);
    std::swap(iggid_, other->iggid_);
    std::swap(tower_, other->tower_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgBuildTowerDel_C2MS::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgBuildTowerDel_C2MS_descriptor_;
  metadata.reflection = MsgBuildTowerDel_C2MS_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgBuildTowerEvtReport_C2S::kMsgTypeFieldNumber;
const int MsgBuildTowerEvtReport_C2S::kIggidFieldNumber;
const int MsgBuildTowerEvtReport_C2S::kEvtTypeFieldNumber;
const int MsgBuildTowerEvtReport_C2S::kEvtLongDataFieldNumber;
const int MsgBuildTowerEvtReport_C2S::kEvtDataFieldNumber;
const int MsgBuildTowerEvtReport_C2S::kUuidFieldNumber;
const int MsgBuildTowerEvtReport_C2S::kMapidFieldNumber;
const int MsgBuildTowerEvtReport_C2S::kTemplateidFieldNumber;
const int MsgBuildTowerEvtReport_C2S::kBuildTypeFieldNumber;
const int MsgBuildTowerEvtReport_C2S::kPosXFieldNumber;
const int MsgBuildTowerEvtReport_C2S::kPosYFieldNumber;
#endif  // !_MSC_VER

MsgBuildTowerEvtReport_C2S::MsgBuildTowerEvtReport_C2S()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.MsgBuildTowerEvtReport_C2S)
}

void MsgBuildTowerEvtReport_C2S::InitAsDefaultInstance() {
}

MsgBuildTowerEvtReport_C2S::MsgBuildTowerEvtReport_C2S(const MsgBuildTowerEvtReport_C2S& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.MsgBuildTowerEvtReport_C2S)
}

void MsgBuildTowerEvtReport_C2S::SharedCtor() {
  _cached_size_ = 0;
  msgtype_ = 2467;
  iggid_ = GOOGLE_LONGLONG(0);
  evt_type_ = 0;
  evt_long_data_ = GOOGLE_LONGLONG(0);
  evt_data_ = 0;
  uuid_ = GOOGLE_LONGLONG(0);
  mapid_ = 0;
  templateid_ = 0;
  build_type_ = 0;
  pos_x_ = 0;
  pos_y_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgBuildTowerEvtReport_C2S::~MsgBuildTowerEvtReport_C2S() {
  // @@protoc_insertion_point(destructor:MsgPB.MsgBuildTowerEvtReport_C2S)
  SharedDtor();
}

void MsgBuildTowerEvtReport_C2S::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgBuildTowerEvtReport_C2S::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgBuildTowerEvtReport_C2S::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgBuildTowerEvtReport_C2S_descriptor_;
}

const MsgBuildTowerEvtReport_C2S& MsgBuildTowerEvtReport_C2S::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgBuildTower_2eproto();
  return *default_instance_;
}

MsgBuildTowerEvtReport_C2S* MsgBuildTowerEvtReport_C2S::default_instance_ = NULL;

MsgBuildTowerEvtReport_C2S* MsgBuildTowerEvtReport_C2S::New() const {
  return new MsgBuildTowerEvtReport_C2S;
}

void MsgBuildTowerEvtReport_C2S::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<MsgBuildTowerEvtReport_C2S*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 255) {
    ZR_(evt_type_, templateid_);
    msgtype_ = 2467;
    iggid_ = GOOGLE_LONGLONG(0);
  }
  ZR_(build_type_, pos_y_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgBuildTowerEvtReport_C2S::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.MsgBuildTowerEvtReport_C2S)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_BUILDTOWER_EVT_REPORT_C2S];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::EMsgType_IsValid(value)) {
            set_msgtype(static_cast< ::MsgPB::EMsgType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_iggid;
        break;
      }

      // optional int64 iggid = 2;
      case 2: {
        if (tag == 16) {
         parse_iggid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &iggid_)));
          set_has_iggid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_evt_type;
        break;
      }

      // optional .MsgPB.TOWER_EVT_TYPE evt_type = 3;
      case 3: {
        if (tag == 24) {
         parse_evt_type:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::TOWER_EVT_TYPE_IsValid(value)) {
            set_evt_type(static_cast< ::MsgPB::TOWER_EVT_TYPE >(value));
          } else {
            mutable_unknown_fields()->AddVarint(3, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_evt_long_data;
        break;
      }

      // optional int64 evt_long_data = 4;
      case 4: {
        if (tag == 32) {
         parse_evt_long_data:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &evt_long_data_)));
          set_has_evt_long_data();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_evt_data;
        break;
      }

      // optional int32 evt_data = 5;
      case 5: {
        if (tag == 40) {
         parse_evt_data:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &evt_data_)));
          set_has_evt_data();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_uuid;
        break;
      }

      // optional int64 uuid = 6;
      case 6: {
        if (tag == 48) {
         parse_uuid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &uuid_)));
          set_has_uuid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_mapid;
        break;
      }

      // optional int32 mapid = 7;
      case 7: {
        if (tag == 56) {
         parse_mapid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &mapid_)));
          set_has_mapid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_templateid;
        break;
      }

      // optional int32 templateid = 8;
      case 8: {
        if (tag == 64) {
         parse_templateid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &templateid_)));
          set_has_templateid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_build_type;
        break;
      }

      // optional int32 build_type = 9;
      case 9: {
        if (tag == 72) {
         parse_build_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &build_type_)));
          set_has_build_type();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(80)) goto parse_pos_x;
        break;
      }

      // optional int32 pos_x = 10;
      case 10: {
        if (tag == 80) {
         parse_pos_x:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pos_x_)));
          set_has_pos_x();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(88)) goto parse_pos_y;
        break;
      }

      // optional int32 pos_y = 11;
      case 11: {
        if (tag == 88) {
         parse_pos_y:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pos_y_)));
          set_has_pos_y();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.MsgBuildTowerEvtReport_C2S)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.MsgBuildTowerEvtReport_C2S)
  return false;
#undef DO_
}

void MsgBuildTowerEvtReport_C2S::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.MsgBuildTowerEvtReport_C2S)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_BUILDTOWER_EVT_REPORT_C2S];
  if (has_msgtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->msgtype(), output);
  }

  // optional int64 iggid = 2;
  if (has_iggid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->iggid(), output);
  }

  // optional .MsgPB.TOWER_EVT_TYPE evt_type = 3;
  if (has_evt_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->evt_type(), output);
  }

  // optional int64 evt_long_data = 4;
  if (has_evt_long_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->evt_long_data(), output);
  }

  // optional int32 evt_data = 5;
  if (has_evt_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->evt_data(), output);
  }

  // optional int64 uuid = 6;
  if (has_uuid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(6, this->uuid(), output);
  }

  // optional int32 mapid = 7;
  if (has_mapid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->mapid(), output);
  }

  // optional int32 templateid = 8;
  if (has_templateid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->templateid(), output);
  }

  // optional int32 build_type = 9;
  if (has_build_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->build_type(), output);
  }

  // optional int32 pos_x = 10;
  if (has_pos_x()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->pos_x(), output);
  }

  // optional int32 pos_y = 11;
  if (has_pos_y()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->pos_y(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.MsgBuildTowerEvtReport_C2S)
}

::google::protobuf::uint8* MsgBuildTowerEvtReport_C2S::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.MsgBuildTowerEvtReport_C2S)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_BUILDTOWER_EVT_REPORT_C2S];
  if (has_msgtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->msgtype(), target);
  }

  // optional int64 iggid = 2;
  if (has_iggid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->iggid(), target);
  }

  // optional .MsgPB.TOWER_EVT_TYPE evt_type = 3;
  if (has_evt_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->evt_type(), target);
  }

  // optional int64 evt_long_data = 4;
  if (has_evt_long_data()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->evt_long_data(), target);
  }

  // optional int32 evt_data = 5;
  if (has_evt_data()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->evt_data(), target);
  }

  // optional int64 uuid = 6;
  if (has_uuid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(6, this->uuid(), target);
  }

  // optional int32 mapid = 7;
  if (has_mapid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->mapid(), target);
  }

  // optional int32 templateid = 8;
  if (has_templateid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->templateid(), target);
  }

  // optional int32 build_type = 9;
  if (has_build_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->build_type(), target);
  }

  // optional int32 pos_x = 10;
  if (has_pos_x()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->pos_x(), target);
  }

  // optional int32 pos_y = 11;
  if (has_pos_y()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->pos_y(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.MsgBuildTowerEvtReport_C2S)
  return target;
}

int MsgBuildTowerEvtReport_C2S::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_BUILDTOWER_EVT_REPORT_C2S];
    if (has_msgtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgtype());
    }

    // optional int64 iggid = 2;
    if (has_iggid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->iggid());
    }

    // optional .MsgPB.TOWER_EVT_TYPE evt_type = 3;
    if (has_evt_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->evt_type());
    }

    // optional int64 evt_long_data = 4;
    if (has_evt_long_data()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->evt_long_data());
    }

    // optional int32 evt_data = 5;
    if (has_evt_data()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->evt_data());
    }

    // optional int64 uuid = 6;
    if (has_uuid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->uuid());
    }

    // optional int32 mapid = 7;
    if (has_mapid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->mapid());
    }

    // optional int32 templateid = 8;
    if (has_templateid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->templateid());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional int32 build_type = 9;
    if (has_build_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->build_type());
    }

    // optional int32 pos_x = 10;
    if (has_pos_x()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pos_x());
    }

    // optional int32 pos_y = 11;
    if (has_pos_y()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pos_y());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgBuildTowerEvtReport_C2S::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgBuildTowerEvtReport_C2S* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgBuildTowerEvtReport_C2S*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgBuildTowerEvtReport_C2S::MergeFrom(const MsgBuildTowerEvtReport_C2S& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msgtype()) {
      set_msgtype(from.msgtype());
    }
    if (from.has_iggid()) {
      set_iggid(from.iggid());
    }
    if (from.has_evt_type()) {
      set_evt_type(from.evt_type());
    }
    if (from.has_evt_long_data()) {
      set_evt_long_data(from.evt_long_data());
    }
    if (from.has_evt_data()) {
      set_evt_data(from.evt_data());
    }
    if (from.has_uuid()) {
      set_uuid(from.uuid());
    }
    if (from.has_mapid()) {
      set_mapid(from.mapid());
    }
    if (from.has_templateid()) {
      set_templateid(from.templateid());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_build_type()) {
      set_build_type(from.build_type());
    }
    if (from.has_pos_x()) {
      set_pos_x(from.pos_x());
    }
    if (from.has_pos_y()) {
      set_pos_y(from.pos_y());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgBuildTowerEvtReport_C2S::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgBuildTowerEvtReport_C2S::CopyFrom(const MsgBuildTowerEvtReport_C2S& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgBuildTowerEvtReport_C2S::IsInitialized() const {

  return true;
}

void MsgBuildTowerEvtReport_C2S::Swap(MsgBuildTowerEvtReport_C2S* other) {
  if (other != this) {
    std::swap(msgtype_, other->msgtype_);
    std::swap(iggid_, other->iggid_);
    std::swap(evt_type_, other->evt_type_);
    std::swap(evt_long_data_, other->evt_long_data_);
    std::swap(evt_data_, other->evt_data_);
    std::swap(uuid_, other->uuid_);
    std::swap(mapid_, other->mapid_);
    std::swap(templateid_, other->templateid_);
    std::swap(build_type_, other->build_type_);
    std::swap(pos_x_, other->pos_x_);
    std::swap(pos_y_, other->pos_y_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgBuildTowerEvtReport_C2S::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgBuildTowerEvtReport_C2S_descriptor_;
  metadata.reflection = MsgBuildTowerEvtReport_C2S_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgBuildTowerDelTowerData_C2S::kMsgTypeFieldNumber;
const int MsgBuildTowerDelTowerData_C2S::kIggidFieldNumber;
const int MsgBuildTowerDelTowerData_C2S::kUuidFieldNumber;
const int MsgBuildTowerDelTowerData_C2S::kDigidFieldNumber;
#endif  // !_MSC_VER

MsgBuildTowerDelTowerData_C2S::MsgBuildTowerDelTowerData_C2S()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.MsgBuildTowerDelTowerData_C2S)
}

void MsgBuildTowerDelTowerData_C2S::InitAsDefaultInstance() {
}

MsgBuildTowerDelTowerData_C2S::MsgBuildTowerDelTowerData_C2S(const MsgBuildTowerDelTowerData_C2S& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.MsgBuildTowerDelTowerData_C2S)
}

void MsgBuildTowerDelTowerData_C2S::SharedCtor() {
  _cached_size_ = 0;
  msgtype_ = 2468;
  iggid_ = GOOGLE_LONGLONG(0);
  uuid_ = GOOGLE_LONGLONG(0);
  digid_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgBuildTowerDelTowerData_C2S::~MsgBuildTowerDelTowerData_C2S() {
  // @@protoc_insertion_point(destructor:MsgPB.MsgBuildTowerDelTowerData_C2S)
  SharedDtor();
}

void MsgBuildTowerDelTowerData_C2S::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgBuildTowerDelTowerData_C2S::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgBuildTowerDelTowerData_C2S::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgBuildTowerDelTowerData_C2S_descriptor_;
}

const MsgBuildTowerDelTowerData_C2S& MsgBuildTowerDelTowerData_C2S::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgBuildTower_2eproto();
  return *default_instance_;
}

MsgBuildTowerDelTowerData_C2S* MsgBuildTowerDelTowerData_C2S::default_instance_ = NULL;

MsgBuildTowerDelTowerData_C2S* MsgBuildTowerDelTowerData_C2S::New() const {
  return new MsgBuildTowerDelTowerData_C2S;
}

void MsgBuildTowerDelTowerData_C2S::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<MsgBuildTowerDelTowerData_C2S*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 15) {
    ZR_(iggid_, digid_);
    msgtype_ = 2468;
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgBuildTowerDelTowerData_C2S::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.MsgBuildTowerDelTowerData_C2S)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_BUILDTOWER_DEL_TOWERDATA_C2S];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::EMsgType_IsValid(value)) {
            set_msgtype(static_cast< ::MsgPB::EMsgType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_iggid;
        break;
      }

      // optional int64 iggid = 2;
      case 2: {
        if (tag == 16) {
         parse_iggid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &iggid_)));
          set_has_iggid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_uuid;
        break;
      }

      // optional int64 uuid = 3;
      case 3: {
        if (tag == 24) {
         parse_uuid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &uuid_)));
          set_has_uuid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_digid;
        break;
      }

      // optional int64 digid = 4;
      case 4: {
        if (tag == 32) {
         parse_digid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &digid_)));
          set_has_digid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.MsgBuildTowerDelTowerData_C2S)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.MsgBuildTowerDelTowerData_C2S)
  return false;
#undef DO_
}

void MsgBuildTowerDelTowerData_C2S::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.MsgBuildTowerDelTowerData_C2S)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_BUILDTOWER_DEL_TOWERDATA_C2S];
  if (has_msgtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->msgtype(), output);
  }

  // optional int64 iggid = 2;
  if (has_iggid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->iggid(), output);
  }

  // optional int64 uuid = 3;
  if (has_uuid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->uuid(), output);
  }

  // optional int64 digid = 4;
  if (has_digid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->digid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.MsgBuildTowerDelTowerData_C2S)
}

::google::protobuf::uint8* MsgBuildTowerDelTowerData_C2S::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.MsgBuildTowerDelTowerData_C2S)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_BUILDTOWER_DEL_TOWERDATA_C2S];
  if (has_msgtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->msgtype(), target);
  }

  // optional int64 iggid = 2;
  if (has_iggid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->iggid(), target);
  }

  // optional int64 uuid = 3;
  if (has_uuid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->uuid(), target);
  }

  // optional int64 digid = 4;
  if (has_digid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->digid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.MsgBuildTowerDelTowerData_C2S)
  return target;
}

int MsgBuildTowerDelTowerData_C2S::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_BUILDTOWER_DEL_TOWERDATA_C2S];
    if (has_msgtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgtype());
    }

    // optional int64 iggid = 2;
    if (has_iggid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->iggid());
    }

    // optional int64 uuid = 3;
    if (has_uuid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->uuid());
    }

    // optional int64 digid = 4;
    if (has_digid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->digid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgBuildTowerDelTowerData_C2S::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgBuildTowerDelTowerData_C2S* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgBuildTowerDelTowerData_C2S*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgBuildTowerDelTowerData_C2S::MergeFrom(const MsgBuildTowerDelTowerData_C2S& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msgtype()) {
      set_msgtype(from.msgtype());
    }
    if (from.has_iggid()) {
      set_iggid(from.iggid());
    }
    if (from.has_uuid()) {
      set_uuid(from.uuid());
    }
    if (from.has_digid()) {
      set_digid(from.digid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgBuildTowerDelTowerData_C2S::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgBuildTowerDelTowerData_C2S::CopyFrom(const MsgBuildTowerDelTowerData_C2S& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgBuildTowerDelTowerData_C2S::IsInitialized() const {

  return true;
}

void MsgBuildTowerDelTowerData_C2S::Swap(MsgBuildTowerDelTowerData_C2S* other) {
  if (other != this) {
    std::swap(msgtype_, other->msgtype_);
    std::swap(iggid_, other->iggid_);
    std::swap(uuid_, other->uuid_);
    std::swap(digid_, other->digid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgBuildTowerDelTowerData_C2S::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgBuildTowerDelTowerData_C2S_descriptor_;
  metadata.reflection = MsgBuildTowerDelTowerData_C2S_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgBuildTowerDelTowerData_S2C::kMsgTypeFieldNumber;
const int MsgBuildTowerDelTowerData_S2C::kIggidFieldNumber;
const int MsgBuildTowerDelTowerData_S2C::kUuidFieldNumber;
const int MsgBuildTowerDelTowerData_S2C::kResFieldNumber;
const int MsgBuildTowerDelTowerData_S2C::kPosXFieldNumber;
const int MsgBuildTowerDelTowerData_S2C::kPosYFieldNumber;
const int MsgBuildTowerDelTowerData_S2C::kDigidFieldNumber;
#endif  // !_MSC_VER

MsgBuildTowerDelTowerData_S2C::MsgBuildTowerDelTowerData_S2C()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.MsgBuildTowerDelTowerData_S2C)
}

void MsgBuildTowerDelTowerData_S2C::InitAsDefaultInstance() {
}

MsgBuildTowerDelTowerData_S2C::MsgBuildTowerDelTowerData_S2C(const MsgBuildTowerDelTowerData_S2C& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.MsgBuildTowerDelTowerData_S2C)
}

void MsgBuildTowerDelTowerData_S2C::SharedCtor() {
  _cached_size_ = 0;
  msgtype_ = 2469;
  iggid_ = GOOGLE_LONGLONG(0);
  uuid_ = GOOGLE_LONGLONG(0);
  res_ = 0;
  pos_x_ = 0;
  pos_y_ = 0;
  digid_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgBuildTowerDelTowerData_S2C::~MsgBuildTowerDelTowerData_S2C() {
  // @@protoc_insertion_point(destructor:MsgPB.MsgBuildTowerDelTowerData_S2C)
  SharedDtor();
}

void MsgBuildTowerDelTowerData_S2C::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgBuildTowerDelTowerData_S2C::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgBuildTowerDelTowerData_S2C::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgBuildTowerDelTowerData_S2C_descriptor_;
}

const MsgBuildTowerDelTowerData_S2C& MsgBuildTowerDelTowerData_S2C::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgBuildTower_2eproto();
  return *default_instance_;
}

MsgBuildTowerDelTowerData_S2C* MsgBuildTowerDelTowerData_S2C::default_instance_ = NULL;

MsgBuildTowerDelTowerData_S2C* MsgBuildTowerDelTowerData_S2C::New() const {
  return new MsgBuildTowerDelTowerData_S2C;
}

void MsgBuildTowerDelTowerData_S2C::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<MsgBuildTowerDelTowerData_S2C*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 127) {
    ZR_(res_, digid_);
    msgtype_ = 2469;
    iggid_ = GOOGLE_LONGLONG(0);
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgBuildTowerDelTowerData_S2C::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.MsgBuildTowerDelTowerData_S2C)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_BUILDTOWER_DEL_TOWERDATA_S2C];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::EMsgType_IsValid(value)) {
            set_msgtype(static_cast< ::MsgPB::EMsgType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_iggid;
        break;
      }

      // optional int64 iggid = 2;
      case 2: {
        if (tag == 16) {
         parse_iggid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &iggid_)));
          set_has_iggid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_uuid;
        break;
      }

      // optional int64 uuid = 3;
      case 3: {
        if (tag == 24) {
         parse_uuid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &uuid_)));
          set_has_uuid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_res;
        break;
      }

      // optional .MsgPB.TOWERBUILDING_RESULT res = 4;
      case 4: {
        if (tag == 32) {
         parse_res:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::TOWERBUILDING_RESULT_IsValid(value)) {
            set_res(static_cast< ::MsgPB::TOWERBUILDING_RESULT >(value));
          } else {
            mutable_unknown_fields()->AddVarint(4, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_pos_x;
        break;
      }

      // optional int32 pos_x = 5;
      case 5: {
        if (tag == 40) {
         parse_pos_x:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pos_x_)));
          set_has_pos_x();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_pos_y;
        break;
      }

      // optional int32 pos_y = 6;
      case 6: {
        if (tag == 48) {
         parse_pos_y:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pos_y_)));
          set_has_pos_y();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_digid;
        break;
      }

      // optional int64 digid = 7;
      case 7: {
        if (tag == 56) {
         parse_digid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &digid_)));
          set_has_digid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.MsgBuildTowerDelTowerData_S2C)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.MsgBuildTowerDelTowerData_S2C)
  return false;
#undef DO_
}

void MsgBuildTowerDelTowerData_S2C::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.MsgBuildTowerDelTowerData_S2C)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_BUILDTOWER_DEL_TOWERDATA_S2C];
  if (has_msgtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->msgtype(), output);
  }

  // optional int64 iggid = 2;
  if (has_iggid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->iggid(), output);
  }

  // optional int64 uuid = 3;
  if (has_uuid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->uuid(), output);
  }

  // optional .MsgPB.TOWERBUILDING_RESULT res = 4;
  if (has_res()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->res(), output);
  }

  // optional int32 pos_x = 5;
  if (has_pos_x()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->pos_x(), output);
  }

  // optional int32 pos_y = 6;
  if (has_pos_y()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->pos_y(), output);
  }

  // optional int64 digid = 7;
  if (has_digid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(7, this->digid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.MsgBuildTowerDelTowerData_S2C)
}

::google::protobuf::uint8* MsgBuildTowerDelTowerData_S2C::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.MsgBuildTowerDelTowerData_S2C)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_BUILDTOWER_DEL_TOWERDATA_S2C];
  if (has_msgtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->msgtype(), target);
  }

  // optional int64 iggid = 2;
  if (has_iggid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->iggid(), target);
  }

  // optional int64 uuid = 3;
  if (has_uuid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->uuid(), target);
  }

  // optional .MsgPB.TOWERBUILDING_RESULT res = 4;
  if (has_res()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->res(), target);
  }

  // optional int32 pos_x = 5;
  if (has_pos_x()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->pos_x(), target);
  }

  // optional int32 pos_y = 6;
  if (has_pos_y()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->pos_y(), target);
  }

  // optional int64 digid = 7;
  if (has_digid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(7, this->digid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.MsgBuildTowerDelTowerData_S2C)
  return target;
}

int MsgBuildTowerDelTowerData_S2C::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_BUILDTOWER_DEL_TOWERDATA_S2C];
    if (has_msgtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgtype());
    }

    // optional int64 iggid = 2;
    if (has_iggid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->iggid());
    }

    // optional int64 uuid = 3;
    if (has_uuid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->uuid());
    }

    // optional .MsgPB.TOWERBUILDING_RESULT res = 4;
    if (has_res()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->res());
    }

    // optional int32 pos_x = 5;
    if (has_pos_x()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pos_x());
    }

    // optional int32 pos_y = 6;
    if (has_pos_y()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pos_y());
    }

    // optional int64 digid = 7;
    if (has_digid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->digid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgBuildTowerDelTowerData_S2C::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgBuildTowerDelTowerData_S2C* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgBuildTowerDelTowerData_S2C*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgBuildTowerDelTowerData_S2C::MergeFrom(const MsgBuildTowerDelTowerData_S2C& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msgtype()) {
      set_msgtype(from.msgtype());
    }
    if (from.has_iggid()) {
      set_iggid(from.iggid());
    }
    if (from.has_uuid()) {
      set_uuid(from.uuid());
    }
    if (from.has_res()) {
      set_res(from.res());
    }
    if (from.has_pos_x()) {
      set_pos_x(from.pos_x());
    }
    if (from.has_pos_y()) {
      set_pos_y(from.pos_y());
    }
    if (from.has_digid()) {
      set_digid(from.digid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgBuildTowerDelTowerData_S2C::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgBuildTowerDelTowerData_S2C::CopyFrom(const MsgBuildTowerDelTowerData_S2C& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgBuildTowerDelTowerData_S2C::IsInitialized() const {

  return true;
}

void MsgBuildTowerDelTowerData_S2C::Swap(MsgBuildTowerDelTowerData_S2C* other) {
  if (other != this) {
    std::swap(msgtype_, other->msgtype_);
    std::swap(iggid_, other->iggid_);
    std::swap(uuid_, other->uuid_);
    std::swap(res_, other->res_);
    std::swap(pos_x_, other->pos_x_);
    std::swap(pos_y_, other->pos_y_);
    std::swap(digid_, other->digid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgBuildTowerDelTowerData_S2C::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgBuildTowerDelTowerData_S2C_descriptor_;
  metadata.reflection = MsgBuildTowerDelTowerData_S2C_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgBuildTowerDelTowerData_MS2GS::kMsgTypeFieldNumber;
const int MsgBuildTowerDelTowerData_MS2GS::kIggidFieldNumber;
const int MsgBuildTowerDelTowerData_MS2GS::kUuidFieldNumber;
#endif  // !_MSC_VER

MsgBuildTowerDelTowerData_MS2GS::MsgBuildTowerDelTowerData_MS2GS()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.MsgBuildTowerDelTowerData_MS2GS)
}

void MsgBuildTowerDelTowerData_MS2GS::InitAsDefaultInstance() {
}

MsgBuildTowerDelTowerData_MS2GS::MsgBuildTowerDelTowerData_MS2GS(const MsgBuildTowerDelTowerData_MS2GS& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.MsgBuildTowerDelTowerData_MS2GS)
}

void MsgBuildTowerDelTowerData_MS2GS::SharedCtor() {
  _cached_size_ = 0;
  msgtype_ = 2474;
  iggid_ = GOOGLE_LONGLONG(0);
  uuid_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgBuildTowerDelTowerData_MS2GS::~MsgBuildTowerDelTowerData_MS2GS() {
  // @@protoc_insertion_point(destructor:MsgPB.MsgBuildTowerDelTowerData_MS2GS)
  SharedDtor();
}

void MsgBuildTowerDelTowerData_MS2GS::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgBuildTowerDelTowerData_MS2GS::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgBuildTowerDelTowerData_MS2GS::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgBuildTowerDelTowerData_MS2GS_descriptor_;
}

const MsgBuildTowerDelTowerData_MS2GS& MsgBuildTowerDelTowerData_MS2GS::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgBuildTower_2eproto();
  return *default_instance_;
}

MsgBuildTowerDelTowerData_MS2GS* MsgBuildTowerDelTowerData_MS2GS::default_instance_ = NULL;

MsgBuildTowerDelTowerData_MS2GS* MsgBuildTowerDelTowerData_MS2GS::New() const {
  return new MsgBuildTowerDelTowerData_MS2GS;
}

void MsgBuildTowerDelTowerData_MS2GS::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<MsgBuildTowerDelTowerData_MS2GS*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 7) {
    ZR_(iggid_, uuid_);
    msgtype_ = 2474;
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgBuildTowerDelTowerData_MS2GS::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.MsgBuildTowerDelTowerData_MS2GS)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_BUILDTOWER_DEL_TOWERDATA_MS2GS];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::EMsgType_IsValid(value)) {
            set_msgtype(static_cast< ::MsgPB::EMsgType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_iggid;
        break;
      }

      // optional int64 iggid = 2;
      case 2: {
        if (tag == 16) {
         parse_iggid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &iggid_)));
          set_has_iggid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_uuid;
        break;
      }

      // optional int64 uuid = 3;
      case 3: {
        if (tag == 24) {
         parse_uuid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &uuid_)));
          set_has_uuid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.MsgBuildTowerDelTowerData_MS2GS)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.MsgBuildTowerDelTowerData_MS2GS)
  return false;
#undef DO_
}

void MsgBuildTowerDelTowerData_MS2GS::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.MsgBuildTowerDelTowerData_MS2GS)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_BUILDTOWER_DEL_TOWERDATA_MS2GS];
  if (has_msgtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->msgtype(), output);
  }

  // optional int64 iggid = 2;
  if (has_iggid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->iggid(), output);
  }

  // optional int64 uuid = 3;
  if (has_uuid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->uuid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.MsgBuildTowerDelTowerData_MS2GS)
}

::google::protobuf::uint8* MsgBuildTowerDelTowerData_MS2GS::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.MsgBuildTowerDelTowerData_MS2GS)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_BUILDTOWER_DEL_TOWERDATA_MS2GS];
  if (has_msgtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->msgtype(), target);
  }

  // optional int64 iggid = 2;
  if (has_iggid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->iggid(), target);
  }

  // optional int64 uuid = 3;
  if (has_uuid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->uuid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.MsgBuildTowerDelTowerData_MS2GS)
  return target;
}

int MsgBuildTowerDelTowerData_MS2GS::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_BUILDTOWER_DEL_TOWERDATA_MS2GS];
    if (has_msgtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgtype());
    }

    // optional int64 iggid = 2;
    if (has_iggid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->iggid());
    }

    // optional int64 uuid = 3;
    if (has_uuid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->uuid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgBuildTowerDelTowerData_MS2GS::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgBuildTowerDelTowerData_MS2GS* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgBuildTowerDelTowerData_MS2GS*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgBuildTowerDelTowerData_MS2GS::MergeFrom(const MsgBuildTowerDelTowerData_MS2GS& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msgtype()) {
      set_msgtype(from.msgtype());
    }
    if (from.has_iggid()) {
      set_iggid(from.iggid());
    }
    if (from.has_uuid()) {
      set_uuid(from.uuid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgBuildTowerDelTowerData_MS2GS::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgBuildTowerDelTowerData_MS2GS::CopyFrom(const MsgBuildTowerDelTowerData_MS2GS& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgBuildTowerDelTowerData_MS2GS::IsInitialized() const {

  return true;
}

void MsgBuildTowerDelTowerData_MS2GS::Swap(MsgBuildTowerDelTowerData_MS2GS* other) {
  if (other != this) {
    std::swap(msgtype_, other->msgtype_);
    std::swap(iggid_, other->iggid_);
    std::swap(uuid_, other->uuid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgBuildTowerDelTowerData_MS2GS::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgBuildTowerDelTowerData_MS2GS_descriptor_;
  metadata.reflection = MsgBuildTowerDelTowerData_MS2GS_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgBuildTowerAddTowerData_C2S::kMsgTypeFieldNumber;
const int MsgBuildTowerAddTowerData_C2S::kIggidFieldNumber;
const int MsgBuildTowerAddTowerData_C2S::kItemUuidFieldNumber;
const int MsgBuildTowerAddTowerData_C2S::kPosXFieldNumber;
const int MsgBuildTowerAddTowerData_C2S::kPosYFieldNumber;
const int MsgBuildTowerAddTowerData_C2S::kTowerTemplateidFieldNumber;
#endif  // !_MSC_VER

MsgBuildTowerAddTowerData_C2S::MsgBuildTowerAddTowerData_C2S()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.MsgBuildTowerAddTowerData_C2S)
}

void MsgBuildTowerAddTowerData_C2S::InitAsDefaultInstance() {
}

MsgBuildTowerAddTowerData_C2S::MsgBuildTowerAddTowerData_C2S(const MsgBuildTowerAddTowerData_C2S& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.MsgBuildTowerAddTowerData_C2S)
}

void MsgBuildTowerAddTowerData_C2S::SharedCtor() {
  _cached_size_ = 0;
  msgtype_ = 2470;
  iggid_ = GOOGLE_LONGLONG(0);
  item_uuid_ = GOOGLE_LONGLONG(0);
  pos_x_ = 0;
  pos_y_ = 0;
  tower_templateid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgBuildTowerAddTowerData_C2S::~MsgBuildTowerAddTowerData_C2S() {
  // @@protoc_insertion_point(destructor:MsgPB.MsgBuildTowerAddTowerData_C2S)
  SharedDtor();
}

void MsgBuildTowerAddTowerData_C2S::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgBuildTowerAddTowerData_C2S::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgBuildTowerAddTowerData_C2S::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgBuildTowerAddTowerData_C2S_descriptor_;
}

const MsgBuildTowerAddTowerData_C2S& MsgBuildTowerAddTowerData_C2S::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgBuildTower_2eproto();
  return *default_instance_;
}

MsgBuildTowerAddTowerData_C2S* MsgBuildTowerAddTowerData_C2S::default_instance_ = NULL;

MsgBuildTowerAddTowerData_C2S* MsgBuildTowerAddTowerData_C2S::New() const {
  return new MsgBuildTowerAddTowerData_C2S;
}

void MsgBuildTowerAddTowerData_C2S::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<MsgBuildTowerAddTowerData_C2S*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 63) {
    ZR_(pos_x_, tower_templateid_);
    msgtype_ = 2470;
    iggid_ = GOOGLE_LONGLONG(0);
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgBuildTowerAddTowerData_C2S::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.MsgBuildTowerAddTowerData_C2S)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_BUILDTOWER_ADD_TOWERDATA_C2S];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::EMsgType_IsValid(value)) {
            set_msgtype(static_cast< ::MsgPB::EMsgType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_iggid;
        break;
      }

      // optional int64 iggid = 2;
      case 2: {
        if (tag == 16) {
         parse_iggid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &iggid_)));
          set_has_iggid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_item_uuid;
        break;
      }

      // optional int64 item_uuid = 3;
      case 3: {
        if (tag == 24) {
         parse_item_uuid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &item_uuid_)));
          set_has_item_uuid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_pos_x;
        break;
      }

      // optional int32 pos_x = 4;
      case 4: {
        if (tag == 32) {
         parse_pos_x:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pos_x_)));
          set_has_pos_x();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_pos_y;
        break;
      }

      // optional int32 pos_y = 5;
      case 5: {
        if (tag == 40) {
         parse_pos_y:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pos_y_)));
          set_has_pos_y();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_tower_templateid;
        break;
      }

      // optional int32 tower_templateid = 6;
      case 6: {
        if (tag == 48) {
         parse_tower_templateid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &tower_templateid_)));
          set_has_tower_templateid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.MsgBuildTowerAddTowerData_C2S)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.MsgBuildTowerAddTowerData_C2S)
  return false;
#undef DO_
}

void MsgBuildTowerAddTowerData_C2S::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.MsgBuildTowerAddTowerData_C2S)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_BUILDTOWER_ADD_TOWERDATA_C2S];
  if (has_msgtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->msgtype(), output);
  }

  // optional int64 iggid = 2;
  if (has_iggid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->iggid(), output);
  }

  // optional int64 item_uuid = 3;
  if (has_item_uuid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->item_uuid(), output);
  }

  // optional int32 pos_x = 4;
  if (has_pos_x()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->pos_x(), output);
  }

  // optional int32 pos_y = 5;
  if (has_pos_y()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->pos_y(), output);
  }

  // optional int32 tower_templateid = 6;
  if (has_tower_templateid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->tower_templateid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.MsgBuildTowerAddTowerData_C2S)
}

::google::protobuf::uint8* MsgBuildTowerAddTowerData_C2S::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.MsgBuildTowerAddTowerData_C2S)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_BUILDTOWER_ADD_TOWERDATA_C2S];
  if (has_msgtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->msgtype(), target);
  }

  // optional int64 iggid = 2;
  if (has_iggid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->iggid(), target);
  }

  // optional int64 item_uuid = 3;
  if (has_item_uuid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->item_uuid(), target);
  }

  // optional int32 pos_x = 4;
  if (has_pos_x()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->pos_x(), target);
  }

  // optional int32 pos_y = 5;
  if (has_pos_y()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->pos_y(), target);
  }

  // optional int32 tower_templateid = 6;
  if (has_tower_templateid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->tower_templateid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.MsgBuildTowerAddTowerData_C2S)
  return target;
}

int MsgBuildTowerAddTowerData_C2S::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_BUILDTOWER_ADD_TOWERDATA_C2S];
    if (has_msgtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgtype());
    }

    // optional int64 iggid = 2;
    if (has_iggid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->iggid());
    }

    // optional int64 item_uuid = 3;
    if (has_item_uuid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->item_uuid());
    }

    // optional int32 pos_x = 4;
    if (has_pos_x()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pos_x());
    }

    // optional int32 pos_y = 5;
    if (has_pos_y()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pos_y());
    }

    // optional int32 tower_templateid = 6;
    if (has_tower_templateid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->tower_templateid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgBuildTowerAddTowerData_C2S::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgBuildTowerAddTowerData_C2S* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgBuildTowerAddTowerData_C2S*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgBuildTowerAddTowerData_C2S::MergeFrom(const MsgBuildTowerAddTowerData_C2S& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msgtype()) {
      set_msgtype(from.msgtype());
    }
    if (from.has_iggid()) {
      set_iggid(from.iggid());
    }
    if (from.has_item_uuid()) {
      set_item_uuid(from.item_uuid());
    }
    if (from.has_pos_x()) {
      set_pos_x(from.pos_x());
    }
    if (from.has_pos_y()) {
      set_pos_y(from.pos_y());
    }
    if (from.has_tower_templateid()) {
      set_tower_templateid(from.tower_templateid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgBuildTowerAddTowerData_C2S::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgBuildTowerAddTowerData_C2S::CopyFrom(const MsgBuildTowerAddTowerData_C2S& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgBuildTowerAddTowerData_C2S::IsInitialized() const {

  return true;
}

void MsgBuildTowerAddTowerData_C2S::Swap(MsgBuildTowerAddTowerData_C2S* other) {
  if (other != this) {
    std::swap(msgtype_, other->msgtype_);
    std::swap(iggid_, other->iggid_);
    std::swap(item_uuid_, other->item_uuid_);
    std::swap(pos_x_, other->pos_x_);
    std::swap(pos_y_, other->pos_y_);
    std::swap(tower_templateid_, other->tower_templateid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgBuildTowerAddTowerData_C2S::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgBuildTowerAddTowerData_C2S_descriptor_;
  metadata.reflection = MsgBuildTowerAddTowerData_C2S_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgBuildTowerAddTowerData_S2C::kMsgTypeFieldNumber;
const int MsgBuildTowerAddTowerData_S2C::kIggidFieldNumber;
const int MsgBuildTowerAddTowerData_S2C::kTowerUuidFieldNumber;
const int MsgBuildTowerAddTowerData_S2C::kTowerDataFieldNumber;
#endif  // !_MSC_VER

MsgBuildTowerAddTowerData_S2C::MsgBuildTowerAddTowerData_S2C()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.MsgBuildTowerAddTowerData_S2C)
}

void MsgBuildTowerAddTowerData_S2C::InitAsDefaultInstance() {
  tower_data_ = const_cast< ::MsgPB::MsgBuildTowerData*>(&::MsgPB::MsgBuildTowerData::default_instance());
}

MsgBuildTowerAddTowerData_S2C::MsgBuildTowerAddTowerData_S2C(const MsgBuildTowerAddTowerData_S2C& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.MsgBuildTowerAddTowerData_S2C)
}

void MsgBuildTowerAddTowerData_S2C::SharedCtor() {
  _cached_size_ = 0;
  msgtype_ = 2471;
  iggid_ = GOOGLE_LONGLONG(0);
  tower_uuid_ = GOOGLE_LONGLONG(0);
  tower_data_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgBuildTowerAddTowerData_S2C::~MsgBuildTowerAddTowerData_S2C() {
  // @@protoc_insertion_point(destructor:MsgPB.MsgBuildTowerAddTowerData_S2C)
  SharedDtor();
}

void MsgBuildTowerAddTowerData_S2C::SharedDtor() {
  if (this != default_instance_) {
    delete tower_data_;
  }
}

void MsgBuildTowerAddTowerData_S2C::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgBuildTowerAddTowerData_S2C::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgBuildTowerAddTowerData_S2C_descriptor_;
}

const MsgBuildTowerAddTowerData_S2C& MsgBuildTowerAddTowerData_S2C::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgBuildTower_2eproto();
  return *default_instance_;
}

MsgBuildTowerAddTowerData_S2C* MsgBuildTowerAddTowerData_S2C::default_instance_ = NULL;

MsgBuildTowerAddTowerData_S2C* MsgBuildTowerAddTowerData_S2C::New() const {
  return new MsgBuildTowerAddTowerData_S2C;
}

void MsgBuildTowerAddTowerData_S2C::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<MsgBuildTowerAddTowerData_S2C*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 15) {
    ZR_(iggid_, tower_uuid_);
    msgtype_ = 2471;
    if (has_tower_data()) {
      if (tower_data_ != NULL) tower_data_->::MsgPB::MsgBuildTowerData::Clear();
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgBuildTowerAddTowerData_S2C::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.MsgBuildTowerAddTowerData_S2C)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_BUILDTOWER_ADD_TOWERDATA_S2C];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::EMsgType_IsValid(value)) {
            set_msgtype(static_cast< ::MsgPB::EMsgType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_iggid;
        break;
      }

      // optional int64 iggid = 2;
      case 2: {
        if (tag == 16) {
         parse_iggid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &iggid_)));
          set_has_iggid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_tower_uuid;
        break;
      }

      // optional int64 tower_uuid = 3;
      case 3: {
        if (tag == 24) {
         parse_tower_uuid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &tower_uuid_)));
          set_has_tower_uuid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_tower_data;
        break;
      }

      // optional .MsgPB.MsgBuildTowerData tower_data = 4;
      case 4: {
        if (tag == 34) {
         parse_tower_data:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_tower_data()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.MsgBuildTowerAddTowerData_S2C)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.MsgBuildTowerAddTowerData_S2C)
  return false;
#undef DO_
}

void MsgBuildTowerAddTowerData_S2C::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.MsgBuildTowerAddTowerData_S2C)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_BUILDTOWER_ADD_TOWERDATA_S2C];
  if (has_msgtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->msgtype(), output);
  }

  // optional int64 iggid = 2;
  if (has_iggid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->iggid(), output);
  }

  // optional int64 tower_uuid = 3;
  if (has_tower_uuid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->tower_uuid(), output);
  }

  // optional .MsgPB.MsgBuildTowerData tower_data = 4;
  if (has_tower_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->tower_data(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.MsgBuildTowerAddTowerData_S2C)
}

::google::protobuf::uint8* MsgBuildTowerAddTowerData_S2C::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.MsgBuildTowerAddTowerData_S2C)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_BUILDTOWER_ADD_TOWERDATA_S2C];
  if (has_msgtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->msgtype(), target);
  }

  // optional int64 iggid = 2;
  if (has_iggid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->iggid(), target);
  }

  // optional int64 tower_uuid = 3;
  if (has_tower_uuid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->tower_uuid(), target);
  }

  // optional .MsgPB.MsgBuildTowerData tower_data = 4;
  if (has_tower_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->tower_data(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.MsgBuildTowerAddTowerData_S2C)
  return target;
}

int MsgBuildTowerAddTowerData_S2C::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_BUILDTOWER_ADD_TOWERDATA_S2C];
    if (has_msgtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgtype());
    }

    // optional int64 iggid = 2;
    if (has_iggid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->iggid());
    }

    // optional int64 tower_uuid = 3;
    if (has_tower_uuid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->tower_uuid());
    }

    // optional .MsgPB.MsgBuildTowerData tower_data = 4;
    if (has_tower_data()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->tower_data());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgBuildTowerAddTowerData_S2C::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgBuildTowerAddTowerData_S2C* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgBuildTowerAddTowerData_S2C*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgBuildTowerAddTowerData_S2C::MergeFrom(const MsgBuildTowerAddTowerData_S2C& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msgtype()) {
      set_msgtype(from.msgtype());
    }
    if (from.has_iggid()) {
      set_iggid(from.iggid());
    }
    if (from.has_tower_uuid()) {
      set_tower_uuid(from.tower_uuid());
    }
    if (from.has_tower_data()) {
      mutable_tower_data()->::MsgPB::MsgBuildTowerData::MergeFrom(from.tower_data());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgBuildTowerAddTowerData_S2C::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgBuildTowerAddTowerData_S2C::CopyFrom(const MsgBuildTowerAddTowerData_S2C& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgBuildTowerAddTowerData_S2C::IsInitialized() const {

  return true;
}

void MsgBuildTowerAddTowerData_S2C::Swap(MsgBuildTowerAddTowerData_S2C* other) {
  if (other != this) {
    std::swap(msgtype_, other->msgtype_);
    std::swap(iggid_, other->iggid_);
    std::swap(tower_uuid_, other->tower_uuid_);
    std::swap(tower_data_, other->tower_data_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgBuildTowerAddTowerData_S2C::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgBuildTowerAddTowerData_S2C_descriptor_;
  metadata.reflection = MsgBuildTowerAddTowerData_S2C_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgBuildTowerRecycleTowerData_C2S::kMsgTypeFieldNumber;
const int MsgBuildTowerRecycleTowerData_C2S::kIggidFieldNumber;
const int MsgBuildTowerRecycleTowerData_C2S::kUuidFieldNumber;
#endif  // !_MSC_VER

MsgBuildTowerRecycleTowerData_C2S::MsgBuildTowerRecycleTowerData_C2S()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.MsgBuildTowerRecycleTowerData_C2S)
}

void MsgBuildTowerRecycleTowerData_C2S::InitAsDefaultInstance() {
}

MsgBuildTowerRecycleTowerData_C2S::MsgBuildTowerRecycleTowerData_C2S(const MsgBuildTowerRecycleTowerData_C2S& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.MsgBuildTowerRecycleTowerData_C2S)
}

void MsgBuildTowerRecycleTowerData_C2S::SharedCtor() {
  _cached_size_ = 0;
  msgtype_ = 2472;
  iggid_ = GOOGLE_LONGLONG(0);
  uuid_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgBuildTowerRecycleTowerData_C2S::~MsgBuildTowerRecycleTowerData_C2S() {
  // @@protoc_insertion_point(destructor:MsgPB.MsgBuildTowerRecycleTowerData_C2S)
  SharedDtor();
}

void MsgBuildTowerRecycleTowerData_C2S::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgBuildTowerRecycleTowerData_C2S::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgBuildTowerRecycleTowerData_C2S::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgBuildTowerRecycleTowerData_C2S_descriptor_;
}

const MsgBuildTowerRecycleTowerData_C2S& MsgBuildTowerRecycleTowerData_C2S::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgBuildTower_2eproto();
  return *default_instance_;
}

MsgBuildTowerRecycleTowerData_C2S* MsgBuildTowerRecycleTowerData_C2S::default_instance_ = NULL;

MsgBuildTowerRecycleTowerData_C2S* MsgBuildTowerRecycleTowerData_C2S::New() const {
  return new MsgBuildTowerRecycleTowerData_C2S;
}

void MsgBuildTowerRecycleTowerData_C2S::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<MsgBuildTowerRecycleTowerData_C2S*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 7) {
    ZR_(iggid_, uuid_);
    msgtype_ = 2472;
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgBuildTowerRecycleTowerData_C2S::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.MsgBuildTowerRecycleTowerData_C2S)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_BUILDTOWER_RECYCLE_TOWERDATA_C2S];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::EMsgType_IsValid(value)) {
            set_msgtype(static_cast< ::MsgPB::EMsgType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_iggid;
        break;
      }

      // optional int64 iggid = 2;
      case 2: {
        if (tag == 16) {
         parse_iggid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &iggid_)));
          set_has_iggid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_uuid;
        break;
      }

      // optional int64 uuid = 3;
      case 3: {
        if (tag == 24) {
         parse_uuid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &uuid_)));
          set_has_uuid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.MsgBuildTowerRecycleTowerData_C2S)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.MsgBuildTowerRecycleTowerData_C2S)
  return false;
#undef DO_
}

void MsgBuildTowerRecycleTowerData_C2S::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.MsgBuildTowerRecycleTowerData_C2S)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_BUILDTOWER_RECYCLE_TOWERDATA_C2S];
  if (has_msgtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->msgtype(), output);
  }

  // optional int64 iggid = 2;
  if (has_iggid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->iggid(), output);
  }

  // optional int64 uuid = 3;
  if (has_uuid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->uuid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.MsgBuildTowerRecycleTowerData_C2S)
}

::google::protobuf::uint8* MsgBuildTowerRecycleTowerData_C2S::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.MsgBuildTowerRecycleTowerData_C2S)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_BUILDTOWER_RECYCLE_TOWERDATA_C2S];
  if (has_msgtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->msgtype(), target);
  }

  // optional int64 iggid = 2;
  if (has_iggid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->iggid(), target);
  }

  // optional int64 uuid = 3;
  if (has_uuid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->uuid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.MsgBuildTowerRecycleTowerData_C2S)
  return target;
}

int MsgBuildTowerRecycleTowerData_C2S::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_BUILDTOWER_RECYCLE_TOWERDATA_C2S];
    if (has_msgtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgtype());
    }

    // optional int64 iggid = 2;
    if (has_iggid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->iggid());
    }

    // optional int64 uuid = 3;
    if (has_uuid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->uuid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgBuildTowerRecycleTowerData_C2S::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgBuildTowerRecycleTowerData_C2S* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgBuildTowerRecycleTowerData_C2S*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgBuildTowerRecycleTowerData_C2S::MergeFrom(const MsgBuildTowerRecycleTowerData_C2S& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msgtype()) {
      set_msgtype(from.msgtype());
    }
    if (from.has_iggid()) {
      set_iggid(from.iggid());
    }
    if (from.has_uuid()) {
      set_uuid(from.uuid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgBuildTowerRecycleTowerData_C2S::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgBuildTowerRecycleTowerData_C2S::CopyFrom(const MsgBuildTowerRecycleTowerData_C2S& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgBuildTowerRecycleTowerData_C2S::IsInitialized() const {

  return true;
}

void MsgBuildTowerRecycleTowerData_C2S::Swap(MsgBuildTowerRecycleTowerData_C2S* other) {
  if (other != this) {
    std::swap(msgtype_, other->msgtype_);
    std::swap(iggid_, other->iggid_);
    std::swap(uuid_, other->uuid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgBuildTowerRecycleTowerData_C2S::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgBuildTowerRecycleTowerData_C2S_descriptor_;
  metadata.reflection = MsgBuildTowerRecycleTowerData_C2S_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgBuildTowerRecycleTowerData_S2C::kMsgTypeFieldNumber;
const int MsgBuildTowerRecycleTowerData_S2C::kIggidFieldNumber;
const int MsgBuildTowerRecycleTowerData_S2C::kUuidFieldNumber;
const int MsgBuildTowerRecycleTowerData_S2C::kResFieldNumber;
const int MsgBuildTowerRecycleTowerData_S2C::kPosXFieldNumber;
const int MsgBuildTowerRecycleTowerData_S2C::kPosYFieldNumber;
#endif  // !_MSC_VER

MsgBuildTowerRecycleTowerData_S2C::MsgBuildTowerRecycleTowerData_S2C()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.MsgBuildTowerRecycleTowerData_S2C)
}

void MsgBuildTowerRecycleTowerData_S2C::InitAsDefaultInstance() {
}

MsgBuildTowerRecycleTowerData_S2C::MsgBuildTowerRecycleTowerData_S2C(const MsgBuildTowerRecycleTowerData_S2C& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.MsgBuildTowerRecycleTowerData_S2C)
}

void MsgBuildTowerRecycleTowerData_S2C::SharedCtor() {
  _cached_size_ = 0;
  msgtype_ = 2473;
  iggid_ = GOOGLE_LONGLONG(0);
  uuid_ = GOOGLE_LONGLONG(0);
  res_ = 0;
  pos_x_ = 0;
  pos_y_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgBuildTowerRecycleTowerData_S2C::~MsgBuildTowerRecycleTowerData_S2C() {
  // @@protoc_insertion_point(destructor:MsgPB.MsgBuildTowerRecycleTowerData_S2C)
  SharedDtor();
}

void MsgBuildTowerRecycleTowerData_S2C::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgBuildTowerRecycleTowerData_S2C::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgBuildTowerRecycleTowerData_S2C::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgBuildTowerRecycleTowerData_S2C_descriptor_;
}

const MsgBuildTowerRecycleTowerData_S2C& MsgBuildTowerRecycleTowerData_S2C::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgBuildTower_2eproto();
  return *default_instance_;
}

MsgBuildTowerRecycleTowerData_S2C* MsgBuildTowerRecycleTowerData_S2C::default_instance_ = NULL;

MsgBuildTowerRecycleTowerData_S2C* MsgBuildTowerRecycleTowerData_S2C::New() const {
  return new MsgBuildTowerRecycleTowerData_S2C;
}

void MsgBuildTowerRecycleTowerData_S2C::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<MsgBuildTowerRecycleTowerData_S2C*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 63) {
    ZR_(res_, pos_y_);
    msgtype_ = 2473;
    iggid_ = GOOGLE_LONGLONG(0);
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgBuildTowerRecycleTowerData_S2C::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.MsgBuildTowerRecycleTowerData_S2C)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_BUILDTOWER_RECYCLE_TOWERDATA_S2C];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::EMsgType_IsValid(value)) {
            set_msgtype(static_cast< ::MsgPB::EMsgType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_iggid;
        break;
      }

      // optional int64 iggid = 2;
      case 2: {
        if (tag == 16) {
         parse_iggid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &iggid_)));
          set_has_iggid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_uuid;
        break;
      }

      // optional int64 uuid = 3;
      case 3: {
        if (tag == 24) {
         parse_uuid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &uuid_)));
          set_has_uuid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_res;
        break;
      }

      // optional .MsgPB.TOWERBUILDING_RESULT res = 4;
      case 4: {
        if (tag == 32) {
         parse_res:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::TOWERBUILDING_RESULT_IsValid(value)) {
            set_res(static_cast< ::MsgPB::TOWERBUILDING_RESULT >(value));
          } else {
            mutable_unknown_fields()->AddVarint(4, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_pos_x;
        break;
      }

      // optional int32 pos_x = 5;
      case 5: {
        if (tag == 40) {
         parse_pos_x:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pos_x_)));
          set_has_pos_x();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_pos_y;
        break;
      }

      // optional int32 pos_y = 6;
      case 6: {
        if (tag == 48) {
         parse_pos_y:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pos_y_)));
          set_has_pos_y();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.MsgBuildTowerRecycleTowerData_S2C)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.MsgBuildTowerRecycleTowerData_S2C)
  return false;
#undef DO_
}

void MsgBuildTowerRecycleTowerData_S2C::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.MsgBuildTowerRecycleTowerData_S2C)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_BUILDTOWER_RECYCLE_TOWERDATA_S2C];
  if (has_msgtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->msgtype(), output);
  }

  // optional int64 iggid = 2;
  if (has_iggid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->iggid(), output);
  }

  // optional int64 uuid = 3;
  if (has_uuid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->uuid(), output);
  }

  // optional .MsgPB.TOWERBUILDING_RESULT res = 4;
  if (has_res()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->res(), output);
  }

  // optional int32 pos_x = 5;
  if (has_pos_x()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->pos_x(), output);
  }

  // optional int32 pos_y = 6;
  if (has_pos_y()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->pos_y(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.MsgBuildTowerRecycleTowerData_S2C)
}

::google::protobuf::uint8* MsgBuildTowerRecycleTowerData_S2C::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.MsgBuildTowerRecycleTowerData_S2C)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_BUILDTOWER_RECYCLE_TOWERDATA_S2C];
  if (has_msgtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->msgtype(), target);
  }

  // optional int64 iggid = 2;
  if (has_iggid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->iggid(), target);
  }

  // optional int64 uuid = 3;
  if (has_uuid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->uuid(), target);
  }

  // optional .MsgPB.TOWERBUILDING_RESULT res = 4;
  if (has_res()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->res(), target);
  }

  // optional int32 pos_x = 5;
  if (has_pos_x()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->pos_x(), target);
  }

  // optional int32 pos_y = 6;
  if (has_pos_y()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->pos_y(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.MsgBuildTowerRecycleTowerData_S2C)
  return target;
}

int MsgBuildTowerRecycleTowerData_S2C::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_BUILDTOWER_RECYCLE_TOWERDATA_S2C];
    if (has_msgtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgtype());
    }

    // optional int64 iggid = 2;
    if (has_iggid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->iggid());
    }

    // optional int64 uuid = 3;
    if (has_uuid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->uuid());
    }

    // optional .MsgPB.TOWERBUILDING_RESULT res = 4;
    if (has_res()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->res());
    }

    // optional int32 pos_x = 5;
    if (has_pos_x()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pos_x());
    }

    // optional int32 pos_y = 6;
    if (has_pos_y()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pos_y());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgBuildTowerRecycleTowerData_S2C::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgBuildTowerRecycleTowerData_S2C* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgBuildTowerRecycleTowerData_S2C*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgBuildTowerRecycleTowerData_S2C::MergeFrom(const MsgBuildTowerRecycleTowerData_S2C& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msgtype()) {
      set_msgtype(from.msgtype());
    }
    if (from.has_iggid()) {
      set_iggid(from.iggid());
    }
    if (from.has_uuid()) {
      set_uuid(from.uuid());
    }
    if (from.has_res()) {
      set_res(from.res());
    }
    if (from.has_pos_x()) {
      set_pos_x(from.pos_x());
    }
    if (from.has_pos_y()) {
      set_pos_y(from.pos_y());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgBuildTowerRecycleTowerData_S2C::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgBuildTowerRecycleTowerData_S2C::CopyFrom(const MsgBuildTowerRecycleTowerData_S2C& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgBuildTowerRecycleTowerData_S2C::IsInitialized() const {

  return true;
}

void MsgBuildTowerRecycleTowerData_S2C::Swap(MsgBuildTowerRecycleTowerData_S2C* other) {
  if (other != this) {
    std::swap(msgtype_, other->msgtype_);
    std::swap(iggid_, other->iggid_);
    std::swap(uuid_, other->uuid_);
    std::swap(res_, other->res_);
    std::swap(pos_x_, other->pos_x_);
    std::swap(pos_y_, other->pos_y_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgBuildTowerRecycleTowerData_S2C::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgBuildTowerRecycleTowerData_S2C_descriptor_;
  metadata.reflection = MsgBuildTowerRecycleTowerData_S2C_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace MsgPB

// @@protoc_insertion_point(global_scope)
