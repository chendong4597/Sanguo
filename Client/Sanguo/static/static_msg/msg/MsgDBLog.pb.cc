// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MsgDBLog.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "MsgDBLog.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace MsgPB {

namespace {

const ::google::protobuf::Descriptor* MsgMoneyChangeLog_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgMoneyChangeLog_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgLoginoutLog_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgLoginoutLog_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgEventLog_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgEventLog_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* EEventLogType_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* LOG_TYPE_TO_LOGSERVER_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_MsgDBLog_2eproto() {
  protobuf_AddDesc_MsgDBLog_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "MsgDBLog.proto");
  GOOGLE_CHECK(file != NULL);
  MsgMoneyChangeLog_descriptor_ = file->message_type(0);
  static const int MsgMoneyChangeLog_offsets_[11] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMoneyChangeLog, msgtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMoneyChangeLog, iggid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMoneyChangeLog, money_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMoneyChangeLog, expend_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMoneyChangeLog, change_type_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMoneyChangeLog, change_num_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMoneyChangeLog, left_num_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMoneyChangeLog, param1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMoneyChangeLog, param2_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMoneyChangeLog, param3_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMoneyChangeLog, insert_time_),
  };
  MsgMoneyChangeLog_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgMoneyChangeLog_descriptor_,
      MsgMoneyChangeLog::default_instance_,
      MsgMoneyChangeLog_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMoneyChangeLog, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMoneyChangeLog, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgMoneyChangeLog));
  MsgLoginoutLog_descriptor_ = file->message_type(1);
  static const int MsgLoginoutLog_offsets_[9] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgLoginoutLog, msgtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgLoginoutLog, iggid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgLoginoutLog, ip_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgLoginoutLog, mac_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgLoginoutLog, game_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgLoginoutLog, server_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgLoginoutLog, log_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgLoginoutLog, is_login_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgLoginoutLog, online_time_),
  };
  MsgLoginoutLog_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgLoginoutLog_descriptor_,
      MsgLoginoutLog::default_instance_,
      MsgLoginoutLog_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgLoginoutLog, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgLoginoutLog, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgLoginoutLog));
  MsgEventLog_descriptor_ = file->message_type(2);
  static const int MsgEventLog_offsets_[16] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgEventLog, msgtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgEventLog, iggid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgEventLog, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgEventLog, level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgEventLog, recharge_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgEventLog, emoney_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgEventLog, event_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgEventLog, channel_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgEventLog, param1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgEventLog, param2_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgEventLog, param3_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgEventLog, param4_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgEventLog, param5_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgEventLog, param6_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgEventLog, param7_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgEventLog, param8_),
  };
  MsgEventLog_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgEventLog_descriptor_,
      MsgEventLog::default_instance_,
      MsgEventLog_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgEventLog, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgEventLog, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgEventLog));
  EEventLogType_descriptor_ = file->enum_type(0);
  LOG_TYPE_TO_LOGSERVER_descriptor_ = file->enum_type(1);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_MsgDBLog_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgMoneyChangeLog_descriptor_, &MsgMoneyChangeLog::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgLoginoutLog_descriptor_, &MsgLoginoutLog::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgEventLog_descriptor_, &MsgEventLog::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_MsgDBLog_2eproto() {
  delete MsgMoneyChangeLog::default_instance_;
  delete MsgMoneyChangeLog_reflection_;
  delete MsgLoginoutLog::default_instance_;
  delete MsgLoginoutLog_reflection_;
  delete MsgEventLog::default_instance_;
  delete MsgEventLog_reflection_;
}

void protobuf_AddDesc_MsgDBLog_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::MsgPB::protobuf_AddDesc_MsgType_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\016MsgDBLog.proto\022\005MsgPB\032\rMsgType.proto\"\207"
    "\002\n\021MsgMoneyChangeLog\0227\n\007msgType\030\001 \001(\0162\017."
    "MsgPB.EMsgType:\025_MSG_MONEY_CHANGE_LOG\022\r\n"
    "\005iggid\030\002 \001(\003\022\022\n\nmoney_type\030\003 \001(\005\022\023\n\013expe"
    "nd_type\030\004 \001(\005\022\026\n\016change_type_id\030\005 \001(\005\022\022\n"
    "\nchange_num\030\006 \001(\003\022\020\n\010left_num\030\007 \001(\003\022\016\n\006p"
    "aram1\030\010 \001(\005\022\016\n\006param2\030\t \001(\005\022\016\n\006param3\030\n "
    "\001(\005\022\023\n\013insert_time\030\013 \001(\005\"\312\001\n\016MsgLoginout"
    "Log\0223\n\007msgType\030\001 \001(\0162\017.MsgPB.EMsgType:\021_"
    "MSG_LOGINOUT_LOG\022\r\n\005iggid\030\002 \001(\003\022\n\n\002ip\030\003 "
    "\001(\t\022\013\n\003mac\030\004 \001(\t\022\017\n\007game_id\030\005 \001(\t\022\021\n\tser"
    "ver_id\030\006 \001(\005\022\020\n\010log_time\030\007 \001(\003\022\020\n\010is_log"
    "in\030\010 \001(\010\022\023\n\013online_time\030\t \001(\005\"\262\002\n\013MsgEve"
    "ntLog\0220\n\007msgType\030\001 \001(\0162\017.MsgPB.EMsgType:"
    "\016_MSG_EVENT_LOG\022\r\n\005iggid\030\005 \001(\003\022\014\n\004name\030\006"
    " \001(\t\022\r\n\005level\030\007 \001(\005\022\020\n\010recharge\030\010 \001(\003\022\016\n"
    "\006emoney\030\t \001(\005\022\022\n\nevent_type\030\n \001(\005\022\017\n\007cha"
    "nnel\030\013 \001(\005\022\016\n\006param1\030\014 \001(\t\022\016\n\006param2\030\r \001"
    "(\t\022\016\n\006param3\030\016 \001(\t\022\016\n\006param4\030\017 \001(\t\022\016\n\006pa"
    "ram5\030\020 \001(\t\022\016\n\006param6\030\021 \001(\t\022\016\n\006param7\030\022 \001"
    "(\t\022\016\n\006param8\030\023 \001(\t*,\n\rEEventLogType\022\033\n\027E"
    "VENT_LOG_TYPE_LEVEL_UP\020\001*\242\005\n\025LOG_TYPE_TO"
    "_LOGSERVER\022\022\n\016objectlog_item\020\000\022\023\n\017object"
    "log_money\020\001\022\030\n\024objectlog_item_craft\020\002\022\026\n"
    "\022objectlog_mob_drop\020\003\022\023\n\017objectlog_equip"
    "\020\004\022\027\n\023objectlog_equip_fix\020\005\022\030\n\024objectlog"
    "_equip_wash\020\006\022\027\n\023objectlog_protector\020\007\022#"
    "\n\037objectlog_protector_comfort_lev\020\010\022\021\n\ro"
    "bjectlog_pet\020\t\022\033\n\027objectlog_equip_upgrad"
    "e\020\n\022\026\n\022playerlog_loginout\020e\022\023\n\017playerlog"
    "_death\020f\022\024\n\020playerlog_relive\020g\022\021\n\rplayer"
    "log_exp\020h\022\026\n\022playerlog_recharge\020i\022\031\n\025pla"
    "yerlog_achievement\020j\022\033\n\027playerlog_task_n"
    "pc_repo\020k\022\032\n\026playerlog_loading_step\020x\022\024\n"
    "\017anti_cheat_item\020\226\001\022\024\n\017dungeonlog_team\020\310"
    "\001\022\026\n\021dungeonlog_player\020\311\001\022\026\n\021dungeonlog_"
    "bounty\020\312\001\022\024\n\017monster_product\020\255\002\022\024\n\017monst"
    "er_recycle\020\256\002\022\030\n\023monster_offline_die\020\257\002\022"
    "\024\n\017objectlog_plant\020\221\003", 1541);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "MsgDBLog.proto", &protobuf_RegisterTypes);
  MsgMoneyChangeLog::default_instance_ = new MsgMoneyChangeLog();
  MsgLoginoutLog::default_instance_ = new MsgLoginoutLog();
  MsgEventLog::default_instance_ = new MsgEventLog();
  MsgMoneyChangeLog::default_instance_->InitAsDefaultInstance();
  MsgLoginoutLog::default_instance_->InitAsDefaultInstance();
  MsgEventLog::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_MsgDBLog_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_MsgDBLog_2eproto {
  StaticDescriptorInitializer_MsgDBLog_2eproto() {
    protobuf_AddDesc_MsgDBLog_2eproto();
  }
} static_descriptor_initializer_MsgDBLog_2eproto_;
const ::google::protobuf::EnumDescriptor* EEventLogType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EEventLogType_descriptor_;
}
bool EEventLogType_IsValid(int value) {
  switch(value) {
    case 1:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* LOG_TYPE_TO_LOGSERVER_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return LOG_TYPE_TO_LOGSERVER_descriptor_;
}
bool LOG_TYPE_TO_LOGSERVER_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 101:
    case 102:
    case 103:
    case 104:
    case 105:
    case 106:
    case 107:
    case 120:
    case 150:
    case 200:
    case 201:
    case 202:
    case 301:
    case 302:
    case 303:
    case 401:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#ifndef _MSC_VER
const int MsgMoneyChangeLog::kMsgTypeFieldNumber;
const int MsgMoneyChangeLog::kIggidFieldNumber;
const int MsgMoneyChangeLog::kMoneyTypeFieldNumber;
const int MsgMoneyChangeLog::kExpendTypeFieldNumber;
const int MsgMoneyChangeLog::kChangeTypeIdFieldNumber;
const int MsgMoneyChangeLog::kChangeNumFieldNumber;
const int MsgMoneyChangeLog::kLeftNumFieldNumber;
const int MsgMoneyChangeLog::kParam1FieldNumber;
const int MsgMoneyChangeLog::kParam2FieldNumber;
const int MsgMoneyChangeLog::kParam3FieldNumber;
const int MsgMoneyChangeLog::kInsertTimeFieldNumber;
#endif  // !_MSC_VER

MsgMoneyChangeLog::MsgMoneyChangeLog()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.MsgMoneyChangeLog)
}

void MsgMoneyChangeLog::InitAsDefaultInstance() {
}

MsgMoneyChangeLog::MsgMoneyChangeLog(const MsgMoneyChangeLog& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.MsgMoneyChangeLog)
}

void MsgMoneyChangeLog::SharedCtor() {
  _cached_size_ = 0;
  msgtype_ = 5800;
  iggid_ = GOOGLE_LONGLONG(0);
  money_type_ = 0;
  expend_type_ = 0;
  change_type_id_ = 0;
  change_num_ = GOOGLE_LONGLONG(0);
  left_num_ = GOOGLE_LONGLONG(0);
  param1_ = 0;
  param2_ = 0;
  param3_ = 0;
  insert_time_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgMoneyChangeLog::~MsgMoneyChangeLog() {
  // @@protoc_insertion_point(destructor:MsgPB.MsgMoneyChangeLog)
  SharedDtor();
}

void MsgMoneyChangeLog::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgMoneyChangeLog::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgMoneyChangeLog::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgMoneyChangeLog_descriptor_;
}

const MsgMoneyChangeLog& MsgMoneyChangeLog::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgDBLog_2eproto();
  return *default_instance_;
}

MsgMoneyChangeLog* MsgMoneyChangeLog::default_instance_ = NULL;

MsgMoneyChangeLog* MsgMoneyChangeLog::New() const {
  return new MsgMoneyChangeLog;
}

void MsgMoneyChangeLog::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<MsgMoneyChangeLog*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 255) {
    ZR_(money_type_, param1_);
    msgtype_ = 5800;
    iggid_ = GOOGLE_LONGLONG(0);
  }
  ZR_(param2_, insert_time_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgMoneyChangeLog::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.MsgMoneyChangeLog)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_MONEY_CHANGE_LOG];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::EMsgType_IsValid(value)) {
            set_msgtype(static_cast< ::MsgPB::EMsgType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_iggid;
        break;
      }

      // optional int64 iggid = 2;
      case 2: {
        if (tag == 16) {
         parse_iggid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &iggid_)));
          set_has_iggid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_money_type;
        break;
      }

      // optional int32 money_type = 3;
      case 3: {
        if (tag == 24) {
         parse_money_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &money_type_)));
          set_has_money_type();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_expend_type;
        break;
      }

      // optional int32 expend_type = 4;
      case 4: {
        if (tag == 32) {
         parse_expend_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &expend_type_)));
          set_has_expend_type();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_change_type_id;
        break;
      }

      // optional int32 change_type_id = 5;
      case 5: {
        if (tag == 40) {
         parse_change_type_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &change_type_id_)));
          set_has_change_type_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_change_num;
        break;
      }

      // optional int64 change_num = 6;
      case 6: {
        if (tag == 48) {
         parse_change_num:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &change_num_)));
          set_has_change_num();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_left_num;
        break;
      }

      // optional int64 left_num = 7;
      case 7: {
        if (tag == 56) {
         parse_left_num:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &left_num_)));
          set_has_left_num();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_param1;
        break;
      }

      // optional int32 param1 = 8;
      case 8: {
        if (tag == 64) {
         parse_param1:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &param1_)));
          set_has_param1();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_param2;
        break;
      }

      // optional int32 param2 = 9;
      case 9: {
        if (tag == 72) {
         parse_param2:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &param2_)));
          set_has_param2();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(80)) goto parse_param3;
        break;
      }

      // optional int32 param3 = 10;
      case 10: {
        if (tag == 80) {
         parse_param3:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &param3_)));
          set_has_param3();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(88)) goto parse_insert_time;
        break;
      }

      // optional int32 insert_time = 11;
      case 11: {
        if (tag == 88) {
         parse_insert_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &insert_time_)));
          set_has_insert_time();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.MsgMoneyChangeLog)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.MsgMoneyChangeLog)
  return false;
#undef DO_
}

void MsgMoneyChangeLog::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.MsgMoneyChangeLog)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_MONEY_CHANGE_LOG];
  if (has_msgtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->msgtype(), output);
  }

  // optional int64 iggid = 2;
  if (has_iggid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->iggid(), output);
  }

  // optional int32 money_type = 3;
  if (has_money_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->money_type(), output);
  }

  // optional int32 expend_type = 4;
  if (has_expend_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->expend_type(), output);
  }

  // optional int32 change_type_id = 5;
  if (has_change_type_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->change_type_id(), output);
  }

  // optional int64 change_num = 6;
  if (has_change_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(6, this->change_num(), output);
  }

  // optional int64 left_num = 7;
  if (has_left_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(7, this->left_num(), output);
  }

  // optional int32 param1 = 8;
  if (has_param1()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->param1(), output);
  }

  // optional int32 param2 = 9;
  if (has_param2()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->param2(), output);
  }

  // optional int32 param3 = 10;
  if (has_param3()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->param3(), output);
  }

  // optional int32 insert_time = 11;
  if (has_insert_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->insert_time(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.MsgMoneyChangeLog)
}

::google::protobuf::uint8* MsgMoneyChangeLog::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.MsgMoneyChangeLog)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_MONEY_CHANGE_LOG];
  if (has_msgtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->msgtype(), target);
  }

  // optional int64 iggid = 2;
  if (has_iggid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->iggid(), target);
  }

  // optional int32 money_type = 3;
  if (has_money_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->money_type(), target);
  }

  // optional int32 expend_type = 4;
  if (has_expend_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->expend_type(), target);
  }

  // optional int32 change_type_id = 5;
  if (has_change_type_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->change_type_id(), target);
  }

  // optional int64 change_num = 6;
  if (has_change_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(6, this->change_num(), target);
  }

  // optional int64 left_num = 7;
  if (has_left_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(7, this->left_num(), target);
  }

  // optional int32 param1 = 8;
  if (has_param1()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->param1(), target);
  }

  // optional int32 param2 = 9;
  if (has_param2()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->param2(), target);
  }

  // optional int32 param3 = 10;
  if (has_param3()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->param3(), target);
  }

  // optional int32 insert_time = 11;
  if (has_insert_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->insert_time(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.MsgMoneyChangeLog)
  return target;
}

int MsgMoneyChangeLog::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_MONEY_CHANGE_LOG];
    if (has_msgtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgtype());
    }

    // optional int64 iggid = 2;
    if (has_iggid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->iggid());
    }

    // optional int32 money_type = 3;
    if (has_money_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->money_type());
    }

    // optional int32 expend_type = 4;
    if (has_expend_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->expend_type());
    }

    // optional int32 change_type_id = 5;
    if (has_change_type_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->change_type_id());
    }

    // optional int64 change_num = 6;
    if (has_change_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->change_num());
    }

    // optional int64 left_num = 7;
    if (has_left_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->left_num());
    }

    // optional int32 param1 = 8;
    if (has_param1()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->param1());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional int32 param2 = 9;
    if (has_param2()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->param2());
    }

    // optional int32 param3 = 10;
    if (has_param3()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->param3());
    }

    // optional int32 insert_time = 11;
    if (has_insert_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->insert_time());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgMoneyChangeLog::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgMoneyChangeLog* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgMoneyChangeLog*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgMoneyChangeLog::MergeFrom(const MsgMoneyChangeLog& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msgtype()) {
      set_msgtype(from.msgtype());
    }
    if (from.has_iggid()) {
      set_iggid(from.iggid());
    }
    if (from.has_money_type()) {
      set_money_type(from.money_type());
    }
    if (from.has_expend_type()) {
      set_expend_type(from.expend_type());
    }
    if (from.has_change_type_id()) {
      set_change_type_id(from.change_type_id());
    }
    if (from.has_change_num()) {
      set_change_num(from.change_num());
    }
    if (from.has_left_num()) {
      set_left_num(from.left_num());
    }
    if (from.has_param1()) {
      set_param1(from.param1());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_param2()) {
      set_param2(from.param2());
    }
    if (from.has_param3()) {
      set_param3(from.param3());
    }
    if (from.has_insert_time()) {
      set_insert_time(from.insert_time());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgMoneyChangeLog::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgMoneyChangeLog::CopyFrom(const MsgMoneyChangeLog& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgMoneyChangeLog::IsInitialized() const {

  return true;
}

void MsgMoneyChangeLog::Swap(MsgMoneyChangeLog* other) {
  if (other != this) {
    std::swap(msgtype_, other->msgtype_);
    std::swap(iggid_, other->iggid_);
    std::swap(money_type_, other->money_type_);
    std::swap(expend_type_, other->expend_type_);
    std::swap(change_type_id_, other->change_type_id_);
    std::swap(change_num_, other->change_num_);
    std::swap(left_num_, other->left_num_);
    std::swap(param1_, other->param1_);
    std::swap(param2_, other->param2_);
    std::swap(param3_, other->param3_);
    std::swap(insert_time_, other->insert_time_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgMoneyChangeLog::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgMoneyChangeLog_descriptor_;
  metadata.reflection = MsgMoneyChangeLog_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgLoginoutLog::kMsgTypeFieldNumber;
const int MsgLoginoutLog::kIggidFieldNumber;
const int MsgLoginoutLog::kIpFieldNumber;
const int MsgLoginoutLog::kMacFieldNumber;
const int MsgLoginoutLog::kGameIdFieldNumber;
const int MsgLoginoutLog::kServerIdFieldNumber;
const int MsgLoginoutLog::kLogTimeFieldNumber;
const int MsgLoginoutLog::kIsLoginFieldNumber;
const int MsgLoginoutLog::kOnlineTimeFieldNumber;
#endif  // !_MSC_VER

MsgLoginoutLog::MsgLoginoutLog()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.MsgLoginoutLog)
}

void MsgLoginoutLog::InitAsDefaultInstance() {
}

MsgLoginoutLog::MsgLoginoutLog(const MsgLoginoutLog& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.MsgLoginoutLog)
}

void MsgLoginoutLog::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  msgtype_ = 5810;
  iggid_ = GOOGLE_LONGLONG(0);
  ip_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mac_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  game_id_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  server_id_ = 0;
  log_time_ = GOOGLE_LONGLONG(0);
  is_login_ = false;
  online_time_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgLoginoutLog::~MsgLoginoutLog() {
  // @@protoc_insertion_point(destructor:MsgPB.MsgLoginoutLog)
  SharedDtor();
}

void MsgLoginoutLog::SharedDtor() {
  if (ip_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete ip_;
  }
  if (mac_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete mac_;
  }
  if (game_id_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete game_id_;
  }
  if (this != default_instance_) {
  }
}

void MsgLoginoutLog::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgLoginoutLog::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgLoginoutLog_descriptor_;
}

const MsgLoginoutLog& MsgLoginoutLog::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgDBLog_2eproto();
  return *default_instance_;
}

MsgLoginoutLog* MsgLoginoutLog::default_instance_ = NULL;

MsgLoginoutLog* MsgLoginoutLog::New() const {
  return new MsgLoginoutLog;
}

void MsgLoginoutLog::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<MsgLoginoutLog*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 255) {
    ZR_(log_time_, is_login_);
    msgtype_ = 5810;
    iggid_ = GOOGLE_LONGLONG(0);
    if (has_ip()) {
      if (ip_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        ip_->clear();
      }
    }
    if (has_mac()) {
      if (mac_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        mac_->clear();
      }
    }
    if (has_game_id()) {
      if (game_id_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        game_id_->clear();
      }
    }
    server_id_ = 0;
  }
  online_time_ = 0;

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgLoginoutLog::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.MsgLoginoutLog)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_LOGINOUT_LOG];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::EMsgType_IsValid(value)) {
            set_msgtype(static_cast< ::MsgPB::EMsgType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_iggid;
        break;
      }

      // optional int64 iggid = 2;
      case 2: {
        if (tag == 16) {
         parse_iggid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &iggid_)));
          set_has_iggid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_ip;
        break;
      }

      // optional string ip = 3;
      case 3: {
        if (tag == 26) {
         parse_ip:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ip()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->ip().data(), this->ip().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ip");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_mac;
        break;
      }

      // optional string mac = 4;
      case 4: {
        if (tag == 34) {
         parse_mac:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_mac()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->mac().data(), this->mac().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "mac");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_game_id;
        break;
      }

      // optional string game_id = 5;
      case 5: {
        if (tag == 42) {
         parse_game_id:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_game_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->game_id().data(), this->game_id().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "game_id");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_server_id;
        break;
      }

      // optional int32 server_id = 6;
      case 6: {
        if (tag == 48) {
         parse_server_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &server_id_)));
          set_has_server_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_log_time;
        break;
      }

      // optional int64 log_time = 7;
      case 7: {
        if (tag == 56) {
         parse_log_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &log_time_)));
          set_has_log_time();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_is_login;
        break;
      }

      // optional bool is_login = 8;
      case 8: {
        if (tag == 64) {
         parse_is_login:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_login_)));
          set_has_is_login();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_online_time;
        break;
      }

      // optional int32 online_time = 9;
      case 9: {
        if (tag == 72) {
         parse_online_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &online_time_)));
          set_has_online_time();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.MsgLoginoutLog)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.MsgLoginoutLog)
  return false;
#undef DO_
}

void MsgLoginoutLog::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.MsgLoginoutLog)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_LOGINOUT_LOG];
  if (has_msgtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->msgtype(), output);
  }

  // optional int64 iggid = 2;
  if (has_iggid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->iggid(), output);
  }

  // optional string ip = 3;
  if (has_ip()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->ip().data(), this->ip().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ip");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->ip(), output);
  }

  // optional string mac = 4;
  if (has_mac()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->mac().data(), this->mac().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "mac");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->mac(), output);
  }

  // optional string game_id = 5;
  if (has_game_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->game_id().data(), this->game_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "game_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->game_id(), output);
  }

  // optional int32 server_id = 6;
  if (has_server_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->server_id(), output);
  }

  // optional int64 log_time = 7;
  if (has_log_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(7, this->log_time(), output);
  }

  // optional bool is_login = 8;
  if (has_is_login()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(8, this->is_login(), output);
  }

  // optional int32 online_time = 9;
  if (has_online_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->online_time(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.MsgLoginoutLog)
}

::google::protobuf::uint8* MsgLoginoutLog::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.MsgLoginoutLog)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_LOGINOUT_LOG];
  if (has_msgtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->msgtype(), target);
  }

  // optional int64 iggid = 2;
  if (has_iggid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->iggid(), target);
  }

  // optional string ip = 3;
  if (has_ip()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->ip().data(), this->ip().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ip");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->ip(), target);
  }

  // optional string mac = 4;
  if (has_mac()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->mac().data(), this->mac().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "mac");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->mac(), target);
  }

  // optional string game_id = 5;
  if (has_game_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->game_id().data(), this->game_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "game_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->game_id(), target);
  }

  // optional int32 server_id = 6;
  if (has_server_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->server_id(), target);
  }

  // optional int64 log_time = 7;
  if (has_log_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(7, this->log_time(), target);
  }

  // optional bool is_login = 8;
  if (has_is_login()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(8, this->is_login(), target);
  }

  // optional int32 online_time = 9;
  if (has_online_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->online_time(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.MsgLoginoutLog)
  return target;
}

int MsgLoginoutLog::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_LOGINOUT_LOG];
    if (has_msgtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgtype());
    }

    // optional int64 iggid = 2;
    if (has_iggid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->iggid());
    }

    // optional string ip = 3;
    if (has_ip()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->ip());
    }

    // optional string mac = 4;
    if (has_mac()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->mac());
    }

    // optional string game_id = 5;
    if (has_game_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->game_id());
    }

    // optional int32 server_id = 6;
    if (has_server_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->server_id());
    }

    // optional int64 log_time = 7;
    if (has_log_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->log_time());
    }

    // optional bool is_login = 8;
    if (has_is_login()) {
      total_size += 1 + 1;
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional int32 online_time = 9;
    if (has_online_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->online_time());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgLoginoutLog::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgLoginoutLog* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgLoginoutLog*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgLoginoutLog::MergeFrom(const MsgLoginoutLog& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msgtype()) {
      set_msgtype(from.msgtype());
    }
    if (from.has_iggid()) {
      set_iggid(from.iggid());
    }
    if (from.has_ip()) {
      set_ip(from.ip());
    }
    if (from.has_mac()) {
      set_mac(from.mac());
    }
    if (from.has_game_id()) {
      set_game_id(from.game_id());
    }
    if (from.has_server_id()) {
      set_server_id(from.server_id());
    }
    if (from.has_log_time()) {
      set_log_time(from.log_time());
    }
    if (from.has_is_login()) {
      set_is_login(from.is_login());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_online_time()) {
      set_online_time(from.online_time());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgLoginoutLog::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgLoginoutLog::CopyFrom(const MsgLoginoutLog& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgLoginoutLog::IsInitialized() const {

  return true;
}

void MsgLoginoutLog::Swap(MsgLoginoutLog* other) {
  if (other != this) {
    std::swap(msgtype_, other->msgtype_);
    std::swap(iggid_, other->iggid_);
    std::swap(ip_, other->ip_);
    std::swap(mac_, other->mac_);
    std::swap(game_id_, other->game_id_);
    std::swap(server_id_, other->server_id_);
    std::swap(log_time_, other->log_time_);
    std::swap(is_login_, other->is_login_);
    std::swap(online_time_, other->online_time_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgLoginoutLog::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgLoginoutLog_descriptor_;
  metadata.reflection = MsgLoginoutLog_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgEventLog::kMsgTypeFieldNumber;
const int MsgEventLog::kIggidFieldNumber;
const int MsgEventLog::kNameFieldNumber;
const int MsgEventLog::kLevelFieldNumber;
const int MsgEventLog::kRechargeFieldNumber;
const int MsgEventLog::kEmoneyFieldNumber;
const int MsgEventLog::kEventTypeFieldNumber;
const int MsgEventLog::kChannelFieldNumber;
const int MsgEventLog::kParam1FieldNumber;
const int MsgEventLog::kParam2FieldNumber;
const int MsgEventLog::kParam3FieldNumber;
const int MsgEventLog::kParam4FieldNumber;
const int MsgEventLog::kParam5FieldNumber;
const int MsgEventLog::kParam6FieldNumber;
const int MsgEventLog::kParam7FieldNumber;
const int MsgEventLog::kParam8FieldNumber;
#endif  // !_MSC_VER

MsgEventLog::MsgEventLog()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.MsgEventLog)
}

void MsgEventLog::InitAsDefaultInstance() {
}

MsgEventLog::MsgEventLog(const MsgEventLog& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.MsgEventLog)
}

void MsgEventLog::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  msgtype_ = 5811;
  iggid_ = GOOGLE_LONGLONG(0);
  name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  level_ = 0;
  recharge_ = GOOGLE_LONGLONG(0);
  emoney_ = 0;
  event_type_ = 0;
  channel_ = 0;
  param1_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  param2_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  param3_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  param4_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  param5_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  param6_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  param7_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  param8_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgEventLog::~MsgEventLog() {
  // @@protoc_insertion_point(destructor:MsgPB.MsgEventLog)
  SharedDtor();
}

void MsgEventLog::SharedDtor() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (param1_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete param1_;
  }
  if (param2_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete param2_;
  }
  if (param3_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete param3_;
  }
  if (param4_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete param4_;
  }
  if (param5_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete param5_;
  }
  if (param6_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete param6_;
  }
  if (param7_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete param7_;
  }
  if (param8_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete param8_;
  }
  if (this != default_instance_) {
  }
}

void MsgEventLog::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgEventLog::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgEventLog_descriptor_;
}

const MsgEventLog& MsgEventLog::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgDBLog_2eproto();
  return *default_instance_;
}

MsgEventLog* MsgEventLog::default_instance_ = NULL;

MsgEventLog* MsgEventLog::New() const {
  return new MsgEventLog;
}

void MsgEventLog::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<MsgEventLog*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 255) {
    ZR_(recharge_, event_type_);
    msgtype_ = 5811;
    iggid_ = GOOGLE_LONGLONG(0);
    if (has_name()) {
      if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        name_->clear();
      }
    }
    level_ = 0;
    channel_ = 0;
  }
  if (_has_bits_[8 / 32] & 65280) {
    if (has_param1()) {
      if (param1_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        param1_->clear();
      }
    }
    if (has_param2()) {
      if (param2_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        param2_->clear();
      }
    }
    if (has_param3()) {
      if (param3_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        param3_->clear();
      }
    }
    if (has_param4()) {
      if (param4_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        param4_->clear();
      }
    }
    if (has_param5()) {
      if (param5_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        param5_->clear();
      }
    }
    if (has_param6()) {
      if (param6_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        param6_->clear();
      }
    }
    if (has_param7()) {
      if (param7_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        param7_->clear();
      }
    }
    if (has_param8()) {
      if (param8_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        param8_->clear();
      }
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgEventLog::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.MsgEventLog)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_EVENT_LOG];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::EMsgType_IsValid(value)) {
            set_msgtype(static_cast< ::MsgPB::EMsgType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_iggid;
        break;
      }

      // optional int64 iggid = 5;
      case 5: {
        if (tag == 40) {
         parse_iggid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &iggid_)));
          set_has_iggid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_name;
        break;
      }

      // optional string name = 6;
      case 6: {
        if (tag == 50) {
         parse_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_level;
        break;
      }

      // optional int32 level = 7;
      case 7: {
        if (tag == 56) {
         parse_level:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &level_)));
          set_has_level();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_recharge;
        break;
      }

      // optional int64 recharge = 8;
      case 8: {
        if (tag == 64) {
         parse_recharge:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &recharge_)));
          set_has_recharge();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_emoney;
        break;
      }

      // optional int32 emoney = 9;
      case 9: {
        if (tag == 72) {
         parse_emoney:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &emoney_)));
          set_has_emoney();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(80)) goto parse_event_type;
        break;
      }

      // optional int32 event_type = 10;
      case 10: {
        if (tag == 80) {
         parse_event_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &event_type_)));
          set_has_event_type();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(88)) goto parse_channel;
        break;
      }

      // optional int32 channel = 11;
      case 11: {
        if (tag == 88) {
         parse_channel:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &channel_)));
          set_has_channel();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(98)) goto parse_param1;
        break;
      }

      // optional string param1 = 12;
      case 12: {
        if (tag == 98) {
         parse_param1:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_param1()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->param1().data(), this->param1().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "param1");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(106)) goto parse_param2;
        break;
      }

      // optional string param2 = 13;
      case 13: {
        if (tag == 106) {
         parse_param2:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_param2()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->param2().data(), this->param2().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "param2");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(114)) goto parse_param3;
        break;
      }

      // optional string param3 = 14;
      case 14: {
        if (tag == 114) {
         parse_param3:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_param3()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->param3().data(), this->param3().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "param3");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(122)) goto parse_param4;
        break;
      }

      // optional string param4 = 15;
      case 15: {
        if (tag == 122) {
         parse_param4:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_param4()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->param4().data(), this->param4().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "param4");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(130)) goto parse_param5;
        break;
      }

      // optional string param5 = 16;
      case 16: {
        if (tag == 130) {
         parse_param5:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_param5()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->param5().data(), this->param5().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "param5");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(138)) goto parse_param6;
        break;
      }

      // optional string param6 = 17;
      case 17: {
        if (tag == 138) {
         parse_param6:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_param6()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->param6().data(), this->param6().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "param6");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(146)) goto parse_param7;
        break;
      }

      // optional string param7 = 18;
      case 18: {
        if (tag == 146) {
         parse_param7:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_param7()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->param7().data(), this->param7().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "param7");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(154)) goto parse_param8;
        break;
      }

      // optional string param8 = 19;
      case 19: {
        if (tag == 154) {
         parse_param8:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_param8()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->param8().data(), this->param8().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "param8");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.MsgEventLog)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.MsgEventLog)
  return false;
#undef DO_
}

void MsgEventLog::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.MsgEventLog)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_EVENT_LOG];
  if (has_msgtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->msgtype(), output);
  }

  // optional int64 iggid = 5;
  if (has_iggid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(5, this->iggid(), output);
  }

  // optional string name = 6;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->name(), output);
  }

  // optional int32 level = 7;
  if (has_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->level(), output);
  }

  // optional int64 recharge = 8;
  if (has_recharge()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(8, this->recharge(), output);
  }

  // optional int32 emoney = 9;
  if (has_emoney()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->emoney(), output);
  }

  // optional int32 event_type = 10;
  if (has_event_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->event_type(), output);
  }

  // optional int32 channel = 11;
  if (has_channel()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->channel(), output);
  }

  // optional string param1 = 12;
  if (has_param1()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->param1().data(), this->param1().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "param1");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      12, this->param1(), output);
  }

  // optional string param2 = 13;
  if (has_param2()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->param2().data(), this->param2().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "param2");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      13, this->param2(), output);
  }

  // optional string param3 = 14;
  if (has_param3()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->param3().data(), this->param3().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "param3");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      14, this->param3(), output);
  }

  // optional string param4 = 15;
  if (has_param4()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->param4().data(), this->param4().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "param4");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      15, this->param4(), output);
  }

  // optional string param5 = 16;
  if (has_param5()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->param5().data(), this->param5().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "param5");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      16, this->param5(), output);
  }

  // optional string param6 = 17;
  if (has_param6()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->param6().data(), this->param6().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "param6");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      17, this->param6(), output);
  }

  // optional string param7 = 18;
  if (has_param7()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->param7().data(), this->param7().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "param7");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      18, this->param7(), output);
  }

  // optional string param8 = 19;
  if (has_param8()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->param8().data(), this->param8().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "param8");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      19, this->param8(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.MsgEventLog)
}

::google::protobuf::uint8* MsgEventLog::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.MsgEventLog)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_EVENT_LOG];
  if (has_msgtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->msgtype(), target);
  }

  // optional int64 iggid = 5;
  if (has_iggid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(5, this->iggid(), target);
  }

  // optional string name = 6;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->name(), target);
  }

  // optional int32 level = 7;
  if (has_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->level(), target);
  }

  // optional int64 recharge = 8;
  if (has_recharge()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(8, this->recharge(), target);
  }

  // optional int32 emoney = 9;
  if (has_emoney()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->emoney(), target);
  }

  // optional int32 event_type = 10;
  if (has_event_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->event_type(), target);
  }

  // optional int32 channel = 11;
  if (has_channel()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->channel(), target);
  }

  // optional string param1 = 12;
  if (has_param1()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->param1().data(), this->param1().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "param1");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->param1(), target);
  }

  // optional string param2 = 13;
  if (has_param2()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->param2().data(), this->param2().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "param2");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        13, this->param2(), target);
  }

  // optional string param3 = 14;
  if (has_param3()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->param3().data(), this->param3().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "param3");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        14, this->param3(), target);
  }

  // optional string param4 = 15;
  if (has_param4()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->param4().data(), this->param4().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "param4");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        15, this->param4(), target);
  }

  // optional string param5 = 16;
  if (has_param5()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->param5().data(), this->param5().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "param5");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        16, this->param5(), target);
  }

  // optional string param6 = 17;
  if (has_param6()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->param6().data(), this->param6().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "param6");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        17, this->param6(), target);
  }

  // optional string param7 = 18;
  if (has_param7()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->param7().data(), this->param7().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "param7");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        18, this->param7(), target);
  }

  // optional string param8 = 19;
  if (has_param8()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->param8().data(), this->param8().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "param8");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        19, this->param8(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.MsgEventLog)
  return target;
}

int MsgEventLog::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_EVENT_LOG];
    if (has_msgtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgtype());
    }

    // optional int64 iggid = 5;
    if (has_iggid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->iggid());
    }

    // optional string name = 6;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional int32 level = 7;
    if (has_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->level());
    }

    // optional int64 recharge = 8;
    if (has_recharge()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->recharge());
    }

    // optional int32 emoney = 9;
    if (has_emoney()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->emoney());
    }

    // optional int32 event_type = 10;
    if (has_event_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->event_type());
    }

    // optional int32 channel = 11;
    if (has_channel()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->channel());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional string param1 = 12;
    if (has_param1()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->param1());
    }

    // optional string param2 = 13;
    if (has_param2()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->param2());
    }

    // optional string param3 = 14;
    if (has_param3()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->param3());
    }

    // optional string param4 = 15;
    if (has_param4()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->param4());
    }

    // optional string param5 = 16;
    if (has_param5()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->param5());
    }

    // optional string param6 = 17;
    if (has_param6()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->param6());
    }

    // optional string param7 = 18;
    if (has_param7()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->param7());
    }

    // optional string param8 = 19;
    if (has_param8()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->param8());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgEventLog::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgEventLog* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgEventLog*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgEventLog::MergeFrom(const MsgEventLog& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msgtype()) {
      set_msgtype(from.msgtype());
    }
    if (from.has_iggid()) {
      set_iggid(from.iggid());
    }
    if (from.has_name()) {
      set_name(from.name());
    }
    if (from.has_level()) {
      set_level(from.level());
    }
    if (from.has_recharge()) {
      set_recharge(from.recharge());
    }
    if (from.has_emoney()) {
      set_emoney(from.emoney());
    }
    if (from.has_event_type()) {
      set_event_type(from.event_type());
    }
    if (from.has_channel()) {
      set_channel(from.channel());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_param1()) {
      set_param1(from.param1());
    }
    if (from.has_param2()) {
      set_param2(from.param2());
    }
    if (from.has_param3()) {
      set_param3(from.param3());
    }
    if (from.has_param4()) {
      set_param4(from.param4());
    }
    if (from.has_param5()) {
      set_param5(from.param5());
    }
    if (from.has_param6()) {
      set_param6(from.param6());
    }
    if (from.has_param7()) {
      set_param7(from.param7());
    }
    if (from.has_param8()) {
      set_param8(from.param8());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgEventLog::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgEventLog::CopyFrom(const MsgEventLog& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgEventLog::IsInitialized() const {

  return true;
}

void MsgEventLog::Swap(MsgEventLog* other) {
  if (other != this) {
    std::swap(msgtype_, other->msgtype_);
    std::swap(iggid_, other->iggid_);
    std::swap(name_, other->name_);
    std::swap(level_, other->level_);
    std::swap(recharge_, other->recharge_);
    std::swap(emoney_, other->emoney_);
    std::swap(event_type_, other->event_type_);
    std::swap(channel_, other->channel_);
    std::swap(param1_, other->param1_);
    std::swap(param2_, other->param2_);
    std::swap(param3_, other->param3_);
    std::swap(param4_, other->param4_);
    std::swap(param5_, other->param5_);
    std::swap(param6_, other->param6_);
    std::swap(param7_, other->param7_);
    std::swap(param8_, other->param8_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgEventLog::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgEventLog_descriptor_;
  metadata.reflection = MsgEventLog_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace MsgPB

// @@protoc_insertion_point(global_scope)
