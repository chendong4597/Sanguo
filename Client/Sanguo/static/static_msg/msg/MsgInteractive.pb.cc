// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MsgInteractive.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "MsgInteractive.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace MsgPB {

namespace {

const ::google::protobuf::Descriptor* MsgInteractiveCallUIS2C_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgInteractiveCallUIS2C_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgInteractiveDropS2C_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgInteractiveDropS2C_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgInteractiveFailS2C_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgInteractiveFailS2C_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* MsgInteractiveFailS2C_FAILURE_descriptor_ = NULL;
const ::google::protobuf::Descriptor* MsgInteractiveAtmosphereS2C_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgInteractiveAtmosphereS2C_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgInteractiveDramaS2C_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgInteractiveDramaS2C_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgInteractiveChestGetS2C_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgInteractiveChestGetS2C_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgInteractiveChestGetS2C_ItemData_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgInteractiveChestGetS2C_ItemData_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_MsgInteractive_2eproto() {
  protobuf_AddDesc_MsgInteractive_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "MsgInteractive.proto");
  GOOGLE_CHECK(file != NULL);
  MsgInteractiveCallUIS2C_descriptor_ = file->message_type(0);
  static const int MsgInteractiveCallUIS2C_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgInteractiveCallUIS2C, msgtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgInteractiveCallUIS2C, iggid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgInteractiveCallUIS2C, uiid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgInteractiveCallUIS2C, mapobjectid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgInteractiveCallUIS2C, posx_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgInteractiveCallUIS2C, posy_),
  };
  MsgInteractiveCallUIS2C_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgInteractiveCallUIS2C_descriptor_,
      MsgInteractiveCallUIS2C::default_instance_,
      MsgInteractiveCallUIS2C_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgInteractiveCallUIS2C, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgInteractiveCallUIS2C, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgInteractiveCallUIS2C));
  MsgInteractiveDropS2C_descriptor_ = file->message_type(1);
  static const int MsgInteractiveDropS2C_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgInteractiveDropS2C, msgtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgInteractiveDropS2C, iggid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgInteractiveDropS2C, mapobjectid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgInteractiveDropS2C, gridpos_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgInteractiveDropS2C, drop_info_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgInteractiveDropS2C, is_client_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgInteractiveDropS2C, interactiveid_),
  };
  MsgInteractiveDropS2C_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgInteractiveDropS2C_descriptor_,
      MsgInteractiveDropS2C::default_instance_,
      MsgInteractiveDropS2C_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgInteractiveDropS2C, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgInteractiveDropS2C, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgInteractiveDropS2C));
  MsgInteractiveFailS2C_descriptor_ = file->message_type(2);
  static const int MsgInteractiveFailS2C_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgInteractiveFailS2C, msgtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgInteractiveFailS2C, mapobjectid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgInteractiveFailS2C, failur_),
  };
  MsgInteractiveFailS2C_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgInteractiveFailS2C_descriptor_,
      MsgInteractiveFailS2C::default_instance_,
      MsgInteractiveFailS2C_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgInteractiveFailS2C, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgInteractiveFailS2C, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgInteractiveFailS2C));
  MsgInteractiveFailS2C_FAILURE_descriptor_ = MsgInteractiveFailS2C_descriptor_->enum_type(0);
  MsgInteractiveAtmosphereS2C_descriptor_ = file->message_type(3);
  static const int MsgInteractiveAtmosphereS2C_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgInteractiveAtmosphereS2C, msgtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgInteractiveAtmosphereS2C, id_),
  };
  MsgInteractiveAtmosphereS2C_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgInteractiveAtmosphereS2C_descriptor_,
      MsgInteractiveAtmosphereS2C::default_instance_,
      MsgInteractiveAtmosphereS2C_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgInteractiveAtmosphereS2C, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgInteractiveAtmosphereS2C, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgInteractiveAtmosphereS2C));
  MsgInteractiveDramaS2C_descriptor_ = file->message_type(4);
  static const int MsgInteractiveDramaS2C_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgInteractiveDramaS2C, msgtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgInteractiveDramaS2C, id_),
  };
  MsgInteractiveDramaS2C_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgInteractiveDramaS2C_descriptor_,
      MsgInteractiveDramaS2C::default_instance_,
      MsgInteractiveDramaS2C_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgInteractiveDramaS2C, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgInteractiveDramaS2C, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgInteractiveDramaS2C));
  MsgInteractiveChestGetS2C_descriptor_ = file->message_type(5);
  static const int MsgInteractiveChestGetS2C_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgInteractiveChestGetS2C, msgtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgInteractiveChestGetS2C, datas_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgInteractiveChestGetS2C, pos_x_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgInteractiveChestGetS2C, pos_y_),
  };
  MsgInteractiveChestGetS2C_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgInteractiveChestGetS2C_descriptor_,
      MsgInteractiveChestGetS2C::default_instance_,
      MsgInteractiveChestGetS2C_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgInteractiveChestGetS2C, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgInteractiveChestGetS2C, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgInteractiveChestGetS2C));
  MsgInteractiveChestGetS2C_ItemData_descriptor_ = MsgInteractiveChestGetS2C_descriptor_->nested_type(0);
  static const int MsgInteractiveChestGetS2C_ItemData_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgInteractiveChestGetS2C_ItemData, dataid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgInteractiveChestGetS2C_ItemData, count_),
  };
  MsgInteractiveChestGetS2C_ItemData_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgInteractiveChestGetS2C_ItemData_descriptor_,
      MsgInteractiveChestGetS2C_ItemData::default_instance_,
      MsgInteractiveChestGetS2C_ItemData_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgInteractiveChestGetS2C_ItemData, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgInteractiveChestGetS2C_ItemData, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgInteractiveChestGetS2C_ItemData));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_MsgInteractive_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgInteractiveCallUIS2C_descriptor_, &MsgInteractiveCallUIS2C::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgInteractiveDropS2C_descriptor_, &MsgInteractiveDropS2C::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgInteractiveFailS2C_descriptor_, &MsgInteractiveFailS2C::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgInteractiveAtmosphereS2C_descriptor_, &MsgInteractiveAtmosphereS2C::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgInteractiveDramaS2C_descriptor_, &MsgInteractiveDramaS2C::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgInteractiveChestGetS2C_descriptor_, &MsgInteractiveChestGetS2C::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgInteractiveChestGetS2C_ItemData_descriptor_, &MsgInteractiveChestGetS2C_ItemData::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_MsgInteractive_2eproto() {
  delete MsgInteractiveCallUIS2C::default_instance_;
  delete MsgInteractiveCallUIS2C_reflection_;
  delete MsgInteractiveDropS2C::default_instance_;
  delete MsgInteractiveDropS2C_reflection_;
  delete MsgInteractiveFailS2C::default_instance_;
  delete MsgInteractiveFailS2C_reflection_;
  delete MsgInteractiveAtmosphereS2C::default_instance_;
  delete MsgInteractiveAtmosphereS2C_reflection_;
  delete MsgInteractiveDramaS2C::default_instance_;
  delete MsgInteractiveDramaS2C_reflection_;
  delete MsgInteractiveChestGetS2C::default_instance_;
  delete MsgInteractiveChestGetS2C_reflection_;
  delete MsgInteractiveChestGetS2C_ItemData::default_instance_;
  delete MsgInteractiveChestGetS2C_ItemData_reflection_;
}

void protobuf_AddDesc_MsgInteractive_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::MsgPB::protobuf_AddDesc_MsgType_2eproto();
  ::MsgPB::protobuf_AddDesc_MsgGameDef_2eproto();
  ::MsgPB::protobuf_AddDesc_MsgPacketDrop_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\024MsgInteractive.proto\022\005MsgPB\032\rMsgType.p"
    "roto\032\020MsgGameDef.proto\032\023MsgPacketDrop.pr"
    "oto\"\247\001\n\027MsgInteractiveCallUIS2C\022>\n\007msgTy"
    "pe\030\001 \001(\0162\017.MsgPB.EMsgType:\034_MSG_INTERACT"
    "IVE_CALL_UI_S2C\022\r\n\005iggid\030\002 \001(\003\022\014\n\004uiid\030\003"
    " \001(\005\022\023\n\013mapObjectId\030\004 \001(\005\022\014\n\004posx\030\005 \001(\005\022"
    "\014\n\004posy\030\006 \001(\005\"\361\001\n\025MsgInteractiveDropS2C\022"
    ";\n\007msgType\030\001 \001(\0162\017.MsgPB.EMsgType:\031_MSG_"
    "INTERACTIVE_DROP_S2C\022\r\n\005iggid\030\002 \001(\003\022\023\n\013m"
    "apObjectId\030\003 \001(\005\022 \n\007gridPos\030\004 \001(\0132\017.MsgP"
    "B.MsgPoint\022$\n\tdrop_info\030\005 \003(\0132\021.MsgPB.PB"
    "DropInfo\022\030\n\tis_client\030\006 \001(\010:\005false\022\025\n\rin"
    "teractiveId\030\007 \001(\005\"\264\001\n\025MsgInteractiveFail"
    "S2C\022;\n\007msgType\030\001 \001(\0162\017.MsgPB.EMsgType:\031_"
    "MSG_INTERACTIVE_FAIL_S2C\022\023\n\013mapObjectId\030"
    "\002 \001(\005\0224\n\006failur\030\003 \001(\0162$.MsgPB.MsgInterac"
    "tiveFailS2C.FAILURE\"\023\n\007FAILURE\022\010\n\004NONE\020\000"
    "\"l\n\033MsgInteractiveAtmosphereS2C\022A\n\007msgTy"
    "pe\030\001 \001(\0162\017.MsgPB.EMsgType:\037_MSG_INTERACT"
    "IVE_ATMOSPHERE_S2C\022\n\n\002id\030\002 \001(\005\"b\n\026MsgInt"
    "eractiveDramaS2C\022<\n\007msgType\030\001 \001(\0162\017.MsgP"
    "B.EMsgType:\032_MSG_INTERACTIVE_DRAMA_S2C\022\n"
    "\n\002id\030\002 \001(\005\"\340\001\n\031MsgInteractiveChestGetS2C"
    "\022@\n\007msgType\030\001 \001(\0162\017.MsgPB.EMsgType:\036_MSG"
    "_INTERACTIVE_CHEST_GET_S2C\0228\n\005datas\030\002 \003("
    "\0132).MsgPB.MsgInteractiveChestGetS2C.Item"
    "Data\022\r\n\005pos_x\030\003 \001(\005\022\r\n\005pos_y\030\004 \001(\005\032)\n\010It"
    "emData\022\016\n\006dataid\030\001 \001(\005\022\r\n\005count\030\002 \001(\005", 1117);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "MsgInteractive.proto", &protobuf_RegisterTypes);
  MsgInteractiveCallUIS2C::default_instance_ = new MsgInteractiveCallUIS2C();
  MsgInteractiveDropS2C::default_instance_ = new MsgInteractiveDropS2C();
  MsgInteractiveFailS2C::default_instance_ = new MsgInteractiveFailS2C();
  MsgInteractiveAtmosphereS2C::default_instance_ = new MsgInteractiveAtmosphereS2C();
  MsgInteractiveDramaS2C::default_instance_ = new MsgInteractiveDramaS2C();
  MsgInteractiveChestGetS2C::default_instance_ = new MsgInteractiveChestGetS2C();
  MsgInteractiveChestGetS2C_ItemData::default_instance_ = new MsgInteractiveChestGetS2C_ItemData();
  MsgInteractiveCallUIS2C::default_instance_->InitAsDefaultInstance();
  MsgInteractiveDropS2C::default_instance_->InitAsDefaultInstance();
  MsgInteractiveFailS2C::default_instance_->InitAsDefaultInstance();
  MsgInteractiveAtmosphereS2C::default_instance_->InitAsDefaultInstance();
  MsgInteractiveDramaS2C::default_instance_->InitAsDefaultInstance();
  MsgInteractiveChestGetS2C::default_instance_->InitAsDefaultInstance();
  MsgInteractiveChestGetS2C_ItemData::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_MsgInteractive_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_MsgInteractive_2eproto {
  StaticDescriptorInitializer_MsgInteractive_2eproto() {
    protobuf_AddDesc_MsgInteractive_2eproto();
  }
} static_descriptor_initializer_MsgInteractive_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int MsgInteractiveCallUIS2C::kMsgTypeFieldNumber;
const int MsgInteractiveCallUIS2C::kIggidFieldNumber;
const int MsgInteractiveCallUIS2C::kUiidFieldNumber;
const int MsgInteractiveCallUIS2C::kMapObjectIdFieldNumber;
const int MsgInteractiveCallUIS2C::kPosxFieldNumber;
const int MsgInteractiveCallUIS2C::kPosyFieldNumber;
#endif  // !_MSC_VER

MsgInteractiveCallUIS2C::MsgInteractiveCallUIS2C()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.MsgInteractiveCallUIS2C)
}

void MsgInteractiveCallUIS2C::InitAsDefaultInstance() {
}

MsgInteractiveCallUIS2C::MsgInteractiveCallUIS2C(const MsgInteractiveCallUIS2C& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.MsgInteractiveCallUIS2C)
}

void MsgInteractiveCallUIS2C::SharedCtor() {
  _cached_size_ = 0;
  msgtype_ = 2750;
  iggid_ = GOOGLE_LONGLONG(0);
  uiid_ = 0;
  mapobjectid_ = 0;
  posx_ = 0;
  posy_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgInteractiveCallUIS2C::~MsgInteractiveCallUIS2C() {
  // @@protoc_insertion_point(destructor:MsgPB.MsgInteractiveCallUIS2C)
  SharedDtor();
}

void MsgInteractiveCallUIS2C::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgInteractiveCallUIS2C::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgInteractiveCallUIS2C::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgInteractiveCallUIS2C_descriptor_;
}

const MsgInteractiveCallUIS2C& MsgInteractiveCallUIS2C::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgInteractive_2eproto();
  return *default_instance_;
}

MsgInteractiveCallUIS2C* MsgInteractiveCallUIS2C::default_instance_ = NULL;

MsgInteractiveCallUIS2C* MsgInteractiveCallUIS2C::New() const {
  return new MsgInteractiveCallUIS2C;
}

void MsgInteractiveCallUIS2C::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<MsgInteractiveCallUIS2C*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 63) {
    ZR_(uiid_, posy_);
    msgtype_ = 2750;
    iggid_ = GOOGLE_LONGLONG(0);
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgInteractiveCallUIS2C::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.MsgInteractiveCallUIS2C)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_INTERACTIVE_CALL_UI_S2C];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::EMsgType_IsValid(value)) {
            set_msgtype(static_cast< ::MsgPB::EMsgType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_iggid;
        break;
      }

      // optional int64 iggid = 2;
      case 2: {
        if (tag == 16) {
         parse_iggid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &iggid_)));
          set_has_iggid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_uiid;
        break;
      }

      // optional int32 uiid = 3;
      case 3: {
        if (tag == 24) {
         parse_uiid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &uiid_)));
          set_has_uiid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_mapObjectId;
        break;
      }

      // optional int32 mapObjectId = 4;
      case 4: {
        if (tag == 32) {
         parse_mapObjectId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &mapobjectid_)));
          set_has_mapobjectid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_posx;
        break;
      }

      // optional int32 posx = 5;
      case 5: {
        if (tag == 40) {
         parse_posx:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &posx_)));
          set_has_posx();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_posy;
        break;
      }

      // optional int32 posy = 6;
      case 6: {
        if (tag == 48) {
         parse_posy:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &posy_)));
          set_has_posy();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.MsgInteractiveCallUIS2C)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.MsgInteractiveCallUIS2C)
  return false;
#undef DO_
}

void MsgInteractiveCallUIS2C::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.MsgInteractiveCallUIS2C)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_INTERACTIVE_CALL_UI_S2C];
  if (has_msgtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->msgtype(), output);
  }

  // optional int64 iggid = 2;
  if (has_iggid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->iggid(), output);
  }

  // optional int32 uiid = 3;
  if (has_uiid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->uiid(), output);
  }

  // optional int32 mapObjectId = 4;
  if (has_mapobjectid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->mapobjectid(), output);
  }

  // optional int32 posx = 5;
  if (has_posx()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->posx(), output);
  }

  // optional int32 posy = 6;
  if (has_posy()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->posy(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.MsgInteractiveCallUIS2C)
}

::google::protobuf::uint8* MsgInteractiveCallUIS2C::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.MsgInteractiveCallUIS2C)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_INTERACTIVE_CALL_UI_S2C];
  if (has_msgtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->msgtype(), target);
  }

  // optional int64 iggid = 2;
  if (has_iggid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->iggid(), target);
  }

  // optional int32 uiid = 3;
  if (has_uiid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->uiid(), target);
  }

  // optional int32 mapObjectId = 4;
  if (has_mapobjectid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->mapobjectid(), target);
  }

  // optional int32 posx = 5;
  if (has_posx()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->posx(), target);
  }

  // optional int32 posy = 6;
  if (has_posy()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->posy(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.MsgInteractiveCallUIS2C)
  return target;
}

int MsgInteractiveCallUIS2C::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_INTERACTIVE_CALL_UI_S2C];
    if (has_msgtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgtype());
    }

    // optional int64 iggid = 2;
    if (has_iggid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->iggid());
    }

    // optional int32 uiid = 3;
    if (has_uiid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->uiid());
    }

    // optional int32 mapObjectId = 4;
    if (has_mapobjectid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->mapobjectid());
    }

    // optional int32 posx = 5;
    if (has_posx()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->posx());
    }

    // optional int32 posy = 6;
    if (has_posy()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->posy());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgInteractiveCallUIS2C::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgInteractiveCallUIS2C* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgInteractiveCallUIS2C*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgInteractiveCallUIS2C::MergeFrom(const MsgInteractiveCallUIS2C& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msgtype()) {
      set_msgtype(from.msgtype());
    }
    if (from.has_iggid()) {
      set_iggid(from.iggid());
    }
    if (from.has_uiid()) {
      set_uiid(from.uiid());
    }
    if (from.has_mapobjectid()) {
      set_mapobjectid(from.mapobjectid());
    }
    if (from.has_posx()) {
      set_posx(from.posx());
    }
    if (from.has_posy()) {
      set_posy(from.posy());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgInteractiveCallUIS2C::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgInteractiveCallUIS2C::CopyFrom(const MsgInteractiveCallUIS2C& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgInteractiveCallUIS2C::IsInitialized() const {

  return true;
}

void MsgInteractiveCallUIS2C::Swap(MsgInteractiveCallUIS2C* other) {
  if (other != this) {
    std::swap(msgtype_, other->msgtype_);
    std::swap(iggid_, other->iggid_);
    std::swap(uiid_, other->uiid_);
    std::swap(mapobjectid_, other->mapobjectid_);
    std::swap(posx_, other->posx_);
    std::swap(posy_, other->posy_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgInteractiveCallUIS2C::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgInteractiveCallUIS2C_descriptor_;
  metadata.reflection = MsgInteractiveCallUIS2C_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgInteractiveDropS2C::kMsgTypeFieldNumber;
const int MsgInteractiveDropS2C::kIggidFieldNumber;
const int MsgInteractiveDropS2C::kMapObjectIdFieldNumber;
const int MsgInteractiveDropS2C::kGridPosFieldNumber;
const int MsgInteractiveDropS2C::kDropInfoFieldNumber;
const int MsgInteractiveDropS2C::kIsClientFieldNumber;
const int MsgInteractiveDropS2C::kInteractiveIdFieldNumber;
#endif  // !_MSC_VER

MsgInteractiveDropS2C::MsgInteractiveDropS2C()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.MsgInteractiveDropS2C)
}

void MsgInteractiveDropS2C::InitAsDefaultInstance() {
  gridpos_ = const_cast< ::MsgPB::MsgPoint*>(&::MsgPB::MsgPoint::default_instance());
}

MsgInteractiveDropS2C::MsgInteractiveDropS2C(const MsgInteractiveDropS2C& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.MsgInteractiveDropS2C)
}

void MsgInteractiveDropS2C::SharedCtor() {
  _cached_size_ = 0;
  msgtype_ = 2751;
  iggid_ = GOOGLE_LONGLONG(0);
  mapobjectid_ = 0;
  gridpos_ = NULL;
  is_client_ = false;
  interactiveid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgInteractiveDropS2C::~MsgInteractiveDropS2C() {
  // @@protoc_insertion_point(destructor:MsgPB.MsgInteractiveDropS2C)
  SharedDtor();
}

void MsgInteractiveDropS2C::SharedDtor() {
  if (this != default_instance_) {
    delete gridpos_;
  }
}

void MsgInteractiveDropS2C::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgInteractiveDropS2C::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgInteractiveDropS2C_descriptor_;
}

const MsgInteractiveDropS2C& MsgInteractiveDropS2C::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgInteractive_2eproto();
  return *default_instance_;
}

MsgInteractiveDropS2C* MsgInteractiveDropS2C::default_instance_ = NULL;

MsgInteractiveDropS2C* MsgInteractiveDropS2C::New() const {
  return new MsgInteractiveDropS2C;
}

void MsgInteractiveDropS2C::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<MsgInteractiveDropS2C*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 111) {
    ZR_(is_client_, interactiveid_);
    msgtype_ = 2751;
    iggid_ = GOOGLE_LONGLONG(0);
    mapobjectid_ = 0;
    if (has_gridpos()) {
      if (gridpos_ != NULL) gridpos_->::MsgPB::MsgPoint::Clear();
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  drop_info_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgInteractiveDropS2C::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.MsgInteractiveDropS2C)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_INTERACTIVE_DROP_S2C];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::EMsgType_IsValid(value)) {
            set_msgtype(static_cast< ::MsgPB::EMsgType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_iggid;
        break;
      }

      // optional int64 iggid = 2;
      case 2: {
        if (tag == 16) {
         parse_iggid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &iggid_)));
          set_has_iggid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_mapObjectId;
        break;
      }

      // optional int32 mapObjectId = 3;
      case 3: {
        if (tag == 24) {
         parse_mapObjectId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &mapobjectid_)));
          set_has_mapobjectid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_gridPos;
        break;
      }

      // optional .MsgPB.MsgPoint gridPos = 4;
      case 4: {
        if (tag == 34) {
         parse_gridPos:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_gridpos()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_drop_info;
        break;
      }

      // repeated .MsgPB.PBDropInfo drop_info = 5;
      case 5: {
        if (tag == 42) {
         parse_drop_info:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_drop_info()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_drop_info;
        if (input->ExpectTag(48)) goto parse_is_client;
        break;
      }

      // optional bool is_client = 6 [default = false];
      case 6: {
        if (tag == 48) {
         parse_is_client:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_client_)));
          set_has_is_client();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_interactiveId;
        break;
      }

      // optional int32 interactiveId = 7;
      case 7: {
        if (tag == 56) {
         parse_interactiveId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &interactiveid_)));
          set_has_interactiveid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.MsgInteractiveDropS2C)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.MsgInteractiveDropS2C)
  return false;
#undef DO_
}

void MsgInteractiveDropS2C::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.MsgInteractiveDropS2C)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_INTERACTIVE_DROP_S2C];
  if (has_msgtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->msgtype(), output);
  }

  // optional int64 iggid = 2;
  if (has_iggid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->iggid(), output);
  }

  // optional int32 mapObjectId = 3;
  if (has_mapobjectid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->mapobjectid(), output);
  }

  // optional .MsgPB.MsgPoint gridPos = 4;
  if (has_gridpos()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->gridpos(), output);
  }

  // repeated .MsgPB.PBDropInfo drop_info = 5;
  for (int i = 0; i < this->drop_info_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->drop_info(i), output);
  }

  // optional bool is_client = 6 [default = false];
  if (has_is_client()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->is_client(), output);
  }

  // optional int32 interactiveId = 7;
  if (has_interactiveid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->interactiveid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.MsgInteractiveDropS2C)
}

::google::protobuf::uint8* MsgInteractiveDropS2C::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.MsgInteractiveDropS2C)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_INTERACTIVE_DROP_S2C];
  if (has_msgtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->msgtype(), target);
  }

  // optional int64 iggid = 2;
  if (has_iggid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->iggid(), target);
  }

  // optional int32 mapObjectId = 3;
  if (has_mapobjectid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->mapobjectid(), target);
  }

  // optional .MsgPB.MsgPoint gridPos = 4;
  if (has_gridpos()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->gridpos(), target);
  }

  // repeated .MsgPB.PBDropInfo drop_info = 5;
  for (int i = 0; i < this->drop_info_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->drop_info(i), target);
  }

  // optional bool is_client = 6 [default = false];
  if (has_is_client()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->is_client(), target);
  }

  // optional int32 interactiveId = 7;
  if (has_interactiveid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->interactiveid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.MsgInteractiveDropS2C)
  return target;
}

int MsgInteractiveDropS2C::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_INTERACTIVE_DROP_S2C];
    if (has_msgtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgtype());
    }

    // optional int64 iggid = 2;
    if (has_iggid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->iggid());
    }

    // optional int32 mapObjectId = 3;
    if (has_mapobjectid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->mapobjectid());
    }

    // optional .MsgPB.MsgPoint gridPos = 4;
    if (has_gridpos()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->gridpos());
    }

    // optional bool is_client = 6 [default = false];
    if (has_is_client()) {
      total_size += 1 + 1;
    }

    // optional int32 interactiveId = 7;
    if (has_interactiveid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->interactiveid());
    }

  }
  // repeated .MsgPB.PBDropInfo drop_info = 5;
  total_size += 1 * this->drop_info_size();
  for (int i = 0; i < this->drop_info_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->drop_info(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgInteractiveDropS2C::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgInteractiveDropS2C* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgInteractiveDropS2C*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgInteractiveDropS2C::MergeFrom(const MsgInteractiveDropS2C& from) {
  GOOGLE_CHECK_NE(&from, this);
  drop_info_.MergeFrom(from.drop_info_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msgtype()) {
      set_msgtype(from.msgtype());
    }
    if (from.has_iggid()) {
      set_iggid(from.iggid());
    }
    if (from.has_mapobjectid()) {
      set_mapobjectid(from.mapobjectid());
    }
    if (from.has_gridpos()) {
      mutable_gridpos()->::MsgPB::MsgPoint::MergeFrom(from.gridpos());
    }
    if (from.has_is_client()) {
      set_is_client(from.is_client());
    }
    if (from.has_interactiveid()) {
      set_interactiveid(from.interactiveid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgInteractiveDropS2C::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgInteractiveDropS2C::CopyFrom(const MsgInteractiveDropS2C& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgInteractiveDropS2C::IsInitialized() const {

  return true;
}

void MsgInteractiveDropS2C::Swap(MsgInteractiveDropS2C* other) {
  if (other != this) {
    std::swap(msgtype_, other->msgtype_);
    std::swap(iggid_, other->iggid_);
    std::swap(mapobjectid_, other->mapobjectid_);
    std::swap(gridpos_, other->gridpos_);
    drop_info_.Swap(&other->drop_info_);
    std::swap(is_client_, other->is_client_);
    std::swap(interactiveid_, other->interactiveid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgInteractiveDropS2C::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgInteractiveDropS2C_descriptor_;
  metadata.reflection = MsgInteractiveDropS2C_reflection_;
  return metadata;
}


// ===================================================================

const ::google::protobuf::EnumDescriptor* MsgInteractiveFailS2C_FAILURE_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgInteractiveFailS2C_FAILURE_descriptor_;
}
bool MsgInteractiveFailS2C_FAILURE_IsValid(int value) {
  switch(value) {
    case 0:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const MsgInteractiveFailS2C_FAILURE MsgInteractiveFailS2C::NONE;
const MsgInteractiveFailS2C_FAILURE MsgInteractiveFailS2C::FAILURE_MIN;
const MsgInteractiveFailS2C_FAILURE MsgInteractiveFailS2C::FAILURE_MAX;
const int MsgInteractiveFailS2C::FAILURE_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int MsgInteractiveFailS2C::kMsgTypeFieldNumber;
const int MsgInteractiveFailS2C::kMapObjectIdFieldNumber;
const int MsgInteractiveFailS2C::kFailurFieldNumber;
#endif  // !_MSC_VER

MsgInteractiveFailS2C::MsgInteractiveFailS2C()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.MsgInteractiveFailS2C)
}

void MsgInteractiveFailS2C::InitAsDefaultInstance() {
}

MsgInteractiveFailS2C::MsgInteractiveFailS2C(const MsgInteractiveFailS2C& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.MsgInteractiveFailS2C)
}

void MsgInteractiveFailS2C::SharedCtor() {
  _cached_size_ = 0;
  msgtype_ = 2752;
  mapobjectid_ = 0;
  failur_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgInteractiveFailS2C::~MsgInteractiveFailS2C() {
  // @@protoc_insertion_point(destructor:MsgPB.MsgInteractiveFailS2C)
  SharedDtor();
}

void MsgInteractiveFailS2C::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgInteractiveFailS2C::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgInteractiveFailS2C::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgInteractiveFailS2C_descriptor_;
}

const MsgInteractiveFailS2C& MsgInteractiveFailS2C::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgInteractive_2eproto();
  return *default_instance_;
}

MsgInteractiveFailS2C* MsgInteractiveFailS2C::default_instance_ = NULL;

MsgInteractiveFailS2C* MsgInteractiveFailS2C::New() const {
  return new MsgInteractiveFailS2C;
}

void MsgInteractiveFailS2C::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<MsgInteractiveFailS2C*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 7) {
    ZR_(mapobjectid_, failur_);
    msgtype_ = 2752;
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgInteractiveFailS2C::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.MsgInteractiveFailS2C)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_INTERACTIVE_FAIL_S2C];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::EMsgType_IsValid(value)) {
            set_msgtype(static_cast< ::MsgPB::EMsgType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_mapObjectId;
        break;
      }

      // optional int32 mapObjectId = 2;
      case 2: {
        if (tag == 16) {
         parse_mapObjectId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &mapobjectid_)));
          set_has_mapobjectid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_failur;
        break;
      }

      // optional .MsgPB.MsgInteractiveFailS2C.FAILURE failur = 3;
      case 3: {
        if (tag == 24) {
         parse_failur:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::MsgInteractiveFailS2C_FAILURE_IsValid(value)) {
            set_failur(static_cast< ::MsgPB::MsgInteractiveFailS2C_FAILURE >(value));
          } else {
            mutable_unknown_fields()->AddVarint(3, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.MsgInteractiveFailS2C)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.MsgInteractiveFailS2C)
  return false;
#undef DO_
}

void MsgInteractiveFailS2C::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.MsgInteractiveFailS2C)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_INTERACTIVE_FAIL_S2C];
  if (has_msgtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->msgtype(), output);
  }

  // optional int32 mapObjectId = 2;
  if (has_mapobjectid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->mapobjectid(), output);
  }

  // optional .MsgPB.MsgInteractiveFailS2C.FAILURE failur = 3;
  if (has_failur()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->failur(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.MsgInteractiveFailS2C)
}

::google::protobuf::uint8* MsgInteractiveFailS2C::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.MsgInteractiveFailS2C)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_INTERACTIVE_FAIL_S2C];
  if (has_msgtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->msgtype(), target);
  }

  // optional int32 mapObjectId = 2;
  if (has_mapobjectid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->mapobjectid(), target);
  }

  // optional .MsgPB.MsgInteractiveFailS2C.FAILURE failur = 3;
  if (has_failur()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->failur(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.MsgInteractiveFailS2C)
  return target;
}

int MsgInteractiveFailS2C::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_INTERACTIVE_FAIL_S2C];
    if (has_msgtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgtype());
    }

    // optional int32 mapObjectId = 2;
    if (has_mapobjectid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->mapobjectid());
    }

    // optional .MsgPB.MsgInteractiveFailS2C.FAILURE failur = 3;
    if (has_failur()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->failur());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgInteractiveFailS2C::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgInteractiveFailS2C* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgInteractiveFailS2C*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgInteractiveFailS2C::MergeFrom(const MsgInteractiveFailS2C& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msgtype()) {
      set_msgtype(from.msgtype());
    }
    if (from.has_mapobjectid()) {
      set_mapobjectid(from.mapobjectid());
    }
    if (from.has_failur()) {
      set_failur(from.failur());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgInteractiveFailS2C::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgInteractiveFailS2C::CopyFrom(const MsgInteractiveFailS2C& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgInteractiveFailS2C::IsInitialized() const {

  return true;
}

void MsgInteractiveFailS2C::Swap(MsgInteractiveFailS2C* other) {
  if (other != this) {
    std::swap(msgtype_, other->msgtype_);
    std::swap(mapobjectid_, other->mapobjectid_);
    std::swap(failur_, other->failur_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgInteractiveFailS2C::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgInteractiveFailS2C_descriptor_;
  metadata.reflection = MsgInteractiveFailS2C_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgInteractiveAtmosphereS2C::kMsgTypeFieldNumber;
const int MsgInteractiveAtmosphereS2C::kIdFieldNumber;
#endif  // !_MSC_VER

MsgInteractiveAtmosphereS2C::MsgInteractiveAtmosphereS2C()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.MsgInteractiveAtmosphereS2C)
}

void MsgInteractiveAtmosphereS2C::InitAsDefaultInstance() {
}

MsgInteractiveAtmosphereS2C::MsgInteractiveAtmosphereS2C(const MsgInteractiveAtmosphereS2C& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.MsgInteractiveAtmosphereS2C)
}

void MsgInteractiveAtmosphereS2C::SharedCtor() {
  _cached_size_ = 0;
  msgtype_ = 2753;
  id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgInteractiveAtmosphereS2C::~MsgInteractiveAtmosphereS2C() {
  // @@protoc_insertion_point(destructor:MsgPB.MsgInteractiveAtmosphereS2C)
  SharedDtor();
}

void MsgInteractiveAtmosphereS2C::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgInteractiveAtmosphereS2C::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgInteractiveAtmosphereS2C::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgInteractiveAtmosphereS2C_descriptor_;
}

const MsgInteractiveAtmosphereS2C& MsgInteractiveAtmosphereS2C::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgInteractive_2eproto();
  return *default_instance_;
}

MsgInteractiveAtmosphereS2C* MsgInteractiveAtmosphereS2C::default_instance_ = NULL;

MsgInteractiveAtmosphereS2C* MsgInteractiveAtmosphereS2C::New() const {
  return new MsgInteractiveAtmosphereS2C;
}

void MsgInteractiveAtmosphereS2C::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    msgtype_ = 2753;
    id_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgInteractiveAtmosphereS2C::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.MsgInteractiveAtmosphereS2C)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_INTERACTIVE_ATMOSPHERE_S2C];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::EMsgType_IsValid(value)) {
            set_msgtype(static_cast< ::MsgPB::EMsgType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_id;
        break;
      }

      // optional int32 id = 2;
      case 2: {
        if (tag == 16) {
         parse_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.MsgInteractiveAtmosphereS2C)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.MsgInteractiveAtmosphereS2C)
  return false;
#undef DO_
}

void MsgInteractiveAtmosphereS2C::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.MsgInteractiveAtmosphereS2C)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_INTERACTIVE_ATMOSPHERE_S2C];
  if (has_msgtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->msgtype(), output);
  }

  // optional int32 id = 2;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->id(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.MsgInteractiveAtmosphereS2C)
}

::google::protobuf::uint8* MsgInteractiveAtmosphereS2C::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.MsgInteractiveAtmosphereS2C)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_INTERACTIVE_ATMOSPHERE_S2C];
  if (has_msgtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->msgtype(), target);
  }

  // optional int32 id = 2;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->id(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.MsgInteractiveAtmosphereS2C)
  return target;
}

int MsgInteractiveAtmosphereS2C::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_INTERACTIVE_ATMOSPHERE_S2C];
    if (has_msgtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgtype());
    }

    // optional int32 id = 2;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->id());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgInteractiveAtmosphereS2C::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgInteractiveAtmosphereS2C* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgInteractiveAtmosphereS2C*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgInteractiveAtmosphereS2C::MergeFrom(const MsgInteractiveAtmosphereS2C& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msgtype()) {
      set_msgtype(from.msgtype());
    }
    if (from.has_id()) {
      set_id(from.id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgInteractiveAtmosphereS2C::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgInteractiveAtmosphereS2C::CopyFrom(const MsgInteractiveAtmosphereS2C& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgInteractiveAtmosphereS2C::IsInitialized() const {

  return true;
}

void MsgInteractiveAtmosphereS2C::Swap(MsgInteractiveAtmosphereS2C* other) {
  if (other != this) {
    std::swap(msgtype_, other->msgtype_);
    std::swap(id_, other->id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgInteractiveAtmosphereS2C::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgInteractiveAtmosphereS2C_descriptor_;
  metadata.reflection = MsgInteractiveAtmosphereS2C_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgInteractiveDramaS2C::kMsgTypeFieldNumber;
const int MsgInteractiveDramaS2C::kIdFieldNumber;
#endif  // !_MSC_VER

MsgInteractiveDramaS2C::MsgInteractiveDramaS2C()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.MsgInteractiveDramaS2C)
}

void MsgInteractiveDramaS2C::InitAsDefaultInstance() {
}

MsgInteractiveDramaS2C::MsgInteractiveDramaS2C(const MsgInteractiveDramaS2C& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.MsgInteractiveDramaS2C)
}

void MsgInteractiveDramaS2C::SharedCtor() {
  _cached_size_ = 0;
  msgtype_ = 2754;
  id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgInteractiveDramaS2C::~MsgInteractiveDramaS2C() {
  // @@protoc_insertion_point(destructor:MsgPB.MsgInteractiveDramaS2C)
  SharedDtor();
}

void MsgInteractiveDramaS2C::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgInteractiveDramaS2C::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgInteractiveDramaS2C::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgInteractiveDramaS2C_descriptor_;
}

const MsgInteractiveDramaS2C& MsgInteractiveDramaS2C::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgInteractive_2eproto();
  return *default_instance_;
}

MsgInteractiveDramaS2C* MsgInteractiveDramaS2C::default_instance_ = NULL;

MsgInteractiveDramaS2C* MsgInteractiveDramaS2C::New() const {
  return new MsgInteractiveDramaS2C;
}

void MsgInteractiveDramaS2C::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    msgtype_ = 2754;
    id_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgInteractiveDramaS2C::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.MsgInteractiveDramaS2C)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_INTERACTIVE_DRAMA_S2C];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::EMsgType_IsValid(value)) {
            set_msgtype(static_cast< ::MsgPB::EMsgType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_id;
        break;
      }

      // optional int32 id = 2;
      case 2: {
        if (tag == 16) {
         parse_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.MsgInteractiveDramaS2C)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.MsgInteractiveDramaS2C)
  return false;
#undef DO_
}

void MsgInteractiveDramaS2C::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.MsgInteractiveDramaS2C)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_INTERACTIVE_DRAMA_S2C];
  if (has_msgtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->msgtype(), output);
  }

  // optional int32 id = 2;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->id(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.MsgInteractiveDramaS2C)
}

::google::protobuf::uint8* MsgInteractiveDramaS2C::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.MsgInteractiveDramaS2C)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_INTERACTIVE_DRAMA_S2C];
  if (has_msgtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->msgtype(), target);
  }

  // optional int32 id = 2;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->id(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.MsgInteractiveDramaS2C)
  return target;
}

int MsgInteractiveDramaS2C::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_INTERACTIVE_DRAMA_S2C];
    if (has_msgtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgtype());
    }

    // optional int32 id = 2;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->id());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgInteractiveDramaS2C::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgInteractiveDramaS2C* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgInteractiveDramaS2C*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgInteractiveDramaS2C::MergeFrom(const MsgInteractiveDramaS2C& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msgtype()) {
      set_msgtype(from.msgtype());
    }
    if (from.has_id()) {
      set_id(from.id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgInteractiveDramaS2C::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgInteractiveDramaS2C::CopyFrom(const MsgInteractiveDramaS2C& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgInteractiveDramaS2C::IsInitialized() const {

  return true;
}

void MsgInteractiveDramaS2C::Swap(MsgInteractiveDramaS2C* other) {
  if (other != this) {
    std::swap(msgtype_, other->msgtype_);
    std::swap(id_, other->id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgInteractiveDramaS2C::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgInteractiveDramaS2C_descriptor_;
  metadata.reflection = MsgInteractiveDramaS2C_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgInteractiveChestGetS2C_ItemData::kDataidFieldNumber;
const int MsgInteractiveChestGetS2C_ItemData::kCountFieldNumber;
#endif  // !_MSC_VER

MsgInteractiveChestGetS2C_ItemData::MsgInteractiveChestGetS2C_ItemData()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.MsgInteractiveChestGetS2C.ItemData)
}

void MsgInteractiveChestGetS2C_ItemData::InitAsDefaultInstance() {
}

MsgInteractiveChestGetS2C_ItemData::MsgInteractiveChestGetS2C_ItemData(const MsgInteractiveChestGetS2C_ItemData& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.MsgInteractiveChestGetS2C.ItemData)
}

void MsgInteractiveChestGetS2C_ItemData::SharedCtor() {
  _cached_size_ = 0;
  dataid_ = 0;
  count_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgInteractiveChestGetS2C_ItemData::~MsgInteractiveChestGetS2C_ItemData() {
  // @@protoc_insertion_point(destructor:MsgPB.MsgInteractiveChestGetS2C.ItemData)
  SharedDtor();
}

void MsgInteractiveChestGetS2C_ItemData::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgInteractiveChestGetS2C_ItemData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgInteractiveChestGetS2C_ItemData::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgInteractiveChestGetS2C_ItemData_descriptor_;
}

const MsgInteractiveChestGetS2C_ItemData& MsgInteractiveChestGetS2C_ItemData::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgInteractive_2eproto();
  return *default_instance_;
}

MsgInteractiveChestGetS2C_ItemData* MsgInteractiveChestGetS2C_ItemData::default_instance_ = NULL;

MsgInteractiveChestGetS2C_ItemData* MsgInteractiveChestGetS2C_ItemData::New() const {
  return new MsgInteractiveChestGetS2C_ItemData;
}

void MsgInteractiveChestGetS2C_ItemData::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<MsgInteractiveChestGetS2C_ItemData*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(dataid_, count_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgInteractiveChestGetS2C_ItemData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.MsgInteractiveChestGetS2C.ItemData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 dataid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &dataid_)));
          set_has_dataid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_count;
        break;
      }

      // optional int32 count = 2;
      case 2: {
        if (tag == 16) {
         parse_count:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &count_)));
          set_has_count();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.MsgInteractiveChestGetS2C.ItemData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.MsgInteractiveChestGetS2C.ItemData)
  return false;
#undef DO_
}

void MsgInteractiveChestGetS2C_ItemData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.MsgInteractiveChestGetS2C.ItemData)
  // optional int32 dataid = 1;
  if (has_dataid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->dataid(), output);
  }

  // optional int32 count = 2;
  if (has_count()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->count(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.MsgInteractiveChestGetS2C.ItemData)
}

::google::protobuf::uint8* MsgInteractiveChestGetS2C_ItemData::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.MsgInteractiveChestGetS2C.ItemData)
  // optional int32 dataid = 1;
  if (has_dataid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->dataid(), target);
  }

  // optional int32 count = 2;
  if (has_count()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->count(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.MsgInteractiveChestGetS2C.ItemData)
  return target;
}

int MsgInteractiveChestGetS2C_ItemData::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 dataid = 1;
    if (has_dataid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->dataid());
    }

    // optional int32 count = 2;
    if (has_count()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->count());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgInteractiveChestGetS2C_ItemData::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgInteractiveChestGetS2C_ItemData* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgInteractiveChestGetS2C_ItemData*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgInteractiveChestGetS2C_ItemData::MergeFrom(const MsgInteractiveChestGetS2C_ItemData& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_dataid()) {
      set_dataid(from.dataid());
    }
    if (from.has_count()) {
      set_count(from.count());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgInteractiveChestGetS2C_ItemData::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgInteractiveChestGetS2C_ItemData::CopyFrom(const MsgInteractiveChestGetS2C_ItemData& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgInteractiveChestGetS2C_ItemData::IsInitialized() const {

  return true;
}

void MsgInteractiveChestGetS2C_ItemData::Swap(MsgInteractiveChestGetS2C_ItemData* other) {
  if (other != this) {
    std::swap(dataid_, other->dataid_);
    std::swap(count_, other->count_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgInteractiveChestGetS2C_ItemData::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgInteractiveChestGetS2C_ItemData_descriptor_;
  metadata.reflection = MsgInteractiveChestGetS2C_ItemData_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int MsgInteractiveChestGetS2C::kMsgTypeFieldNumber;
const int MsgInteractiveChestGetS2C::kDatasFieldNumber;
const int MsgInteractiveChestGetS2C::kPosXFieldNumber;
const int MsgInteractiveChestGetS2C::kPosYFieldNumber;
#endif  // !_MSC_VER

MsgInteractiveChestGetS2C::MsgInteractiveChestGetS2C()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.MsgInteractiveChestGetS2C)
}

void MsgInteractiveChestGetS2C::InitAsDefaultInstance() {
}

MsgInteractiveChestGetS2C::MsgInteractiveChestGetS2C(const MsgInteractiveChestGetS2C& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.MsgInteractiveChestGetS2C)
}

void MsgInteractiveChestGetS2C::SharedCtor() {
  _cached_size_ = 0;
  msgtype_ = 2755;
  pos_x_ = 0;
  pos_y_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgInteractiveChestGetS2C::~MsgInteractiveChestGetS2C() {
  // @@protoc_insertion_point(destructor:MsgPB.MsgInteractiveChestGetS2C)
  SharedDtor();
}

void MsgInteractiveChestGetS2C::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgInteractiveChestGetS2C::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgInteractiveChestGetS2C::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgInteractiveChestGetS2C_descriptor_;
}

const MsgInteractiveChestGetS2C& MsgInteractiveChestGetS2C::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgInteractive_2eproto();
  return *default_instance_;
}

MsgInteractiveChestGetS2C* MsgInteractiveChestGetS2C::default_instance_ = NULL;

MsgInteractiveChestGetS2C* MsgInteractiveChestGetS2C::New() const {
  return new MsgInteractiveChestGetS2C;
}

void MsgInteractiveChestGetS2C::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<MsgInteractiveChestGetS2C*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 13) {
    ZR_(pos_x_, pos_y_);
    msgtype_ = 2755;
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  datas_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgInteractiveChestGetS2C::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.MsgInteractiveChestGetS2C)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_INTERACTIVE_CHEST_GET_S2C];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::EMsgType_IsValid(value)) {
            set_msgtype(static_cast< ::MsgPB::EMsgType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_datas;
        break;
      }

      // repeated .MsgPB.MsgInteractiveChestGetS2C.ItemData datas = 2;
      case 2: {
        if (tag == 18) {
         parse_datas:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_datas()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_datas;
        if (input->ExpectTag(24)) goto parse_pos_x;
        break;
      }

      // optional int32 pos_x = 3;
      case 3: {
        if (tag == 24) {
         parse_pos_x:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pos_x_)));
          set_has_pos_x();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_pos_y;
        break;
      }

      // optional int32 pos_y = 4;
      case 4: {
        if (tag == 32) {
         parse_pos_y:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pos_y_)));
          set_has_pos_y();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.MsgInteractiveChestGetS2C)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.MsgInteractiveChestGetS2C)
  return false;
#undef DO_
}

void MsgInteractiveChestGetS2C::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.MsgInteractiveChestGetS2C)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_INTERACTIVE_CHEST_GET_S2C];
  if (has_msgtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->msgtype(), output);
  }

  // repeated .MsgPB.MsgInteractiveChestGetS2C.ItemData datas = 2;
  for (int i = 0; i < this->datas_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->datas(i), output);
  }

  // optional int32 pos_x = 3;
  if (has_pos_x()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->pos_x(), output);
  }

  // optional int32 pos_y = 4;
  if (has_pos_y()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->pos_y(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.MsgInteractiveChestGetS2C)
}

::google::protobuf::uint8* MsgInteractiveChestGetS2C::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.MsgInteractiveChestGetS2C)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_INTERACTIVE_CHEST_GET_S2C];
  if (has_msgtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->msgtype(), target);
  }

  // repeated .MsgPB.MsgInteractiveChestGetS2C.ItemData datas = 2;
  for (int i = 0; i < this->datas_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->datas(i), target);
  }

  // optional int32 pos_x = 3;
  if (has_pos_x()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->pos_x(), target);
  }

  // optional int32 pos_y = 4;
  if (has_pos_y()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->pos_y(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.MsgInteractiveChestGetS2C)
  return target;
}

int MsgInteractiveChestGetS2C::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_INTERACTIVE_CHEST_GET_S2C];
    if (has_msgtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgtype());
    }

    // optional int32 pos_x = 3;
    if (has_pos_x()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pos_x());
    }

    // optional int32 pos_y = 4;
    if (has_pos_y()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pos_y());
    }

  }
  // repeated .MsgPB.MsgInteractiveChestGetS2C.ItemData datas = 2;
  total_size += 1 * this->datas_size();
  for (int i = 0; i < this->datas_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->datas(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgInteractiveChestGetS2C::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgInteractiveChestGetS2C* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgInteractiveChestGetS2C*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgInteractiveChestGetS2C::MergeFrom(const MsgInteractiveChestGetS2C& from) {
  GOOGLE_CHECK_NE(&from, this);
  datas_.MergeFrom(from.datas_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msgtype()) {
      set_msgtype(from.msgtype());
    }
    if (from.has_pos_x()) {
      set_pos_x(from.pos_x());
    }
    if (from.has_pos_y()) {
      set_pos_y(from.pos_y());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgInteractiveChestGetS2C::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgInteractiveChestGetS2C::CopyFrom(const MsgInteractiveChestGetS2C& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgInteractiveChestGetS2C::IsInitialized() const {

  return true;
}

void MsgInteractiveChestGetS2C::Swap(MsgInteractiveChestGetS2C* other) {
  if (other != this) {
    std::swap(msgtype_, other->msgtype_);
    datas_.Swap(&other->datas_);
    std::swap(pos_x_, other->pos_x_);
    std::swap(pos_y_, other->pos_y_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgInteractiveChestGetS2C::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgInteractiveChestGetS2C_descriptor_;
  metadata.reflection = MsgInteractiveChestGetS2C_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace MsgPB

// @@protoc_insertion_point(global_scope)
