// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MsgTest.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "MsgTest.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace MsgPB {

namespace {

const ::google::protobuf::Descriptor* MsgThirdTestC2S_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgThirdTestC2S_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_MsgTest_2eproto() {
  protobuf_AddDesc_MsgTest_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "MsgTest.proto");
  GOOGLE_CHECK(file != NULL);
  MsgThirdTestC2S_descriptor_ = file->message_type(0);
  static const int MsgThirdTestC2S_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgThirdTestC2S, msgtype_),
  };
  MsgThirdTestC2S_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgThirdTestC2S_descriptor_,
      MsgThirdTestC2S::default_instance_,
      MsgThirdTestC2S_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgThirdTestC2S, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgThirdTestC2S, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgThirdTestC2S));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_MsgTest_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgThirdTestC2S_descriptor_, &MsgThirdTestC2S::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_MsgTest_2eproto() {
  delete MsgThirdTestC2S::default_instance_;
  delete MsgThirdTestC2S_reflection_;
}

void protobuf_AddDesc_MsgTest_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::MsgPB::protobuf_AddDesc_MsgType_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\rMsgTest.proto\022\005MsgPB\032\rMsgType.proto\"H\n"
    "\017MsgThirdTestC2S\0225\n\007msgType\030\001 \001(\0162\017.MsgP"
    "B.EMsgType:\023_MSG_THIRD_TEST_C2S", 111);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "MsgTest.proto", &protobuf_RegisterTypes);
  MsgThirdTestC2S::default_instance_ = new MsgThirdTestC2S();
  MsgThirdTestC2S::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_MsgTest_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_MsgTest_2eproto {
  StaticDescriptorInitializer_MsgTest_2eproto() {
    protobuf_AddDesc_MsgTest_2eproto();
  }
} static_descriptor_initializer_MsgTest_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int MsgThirdTestC2S::kMsgTypeFieldNumber;
#endif  // !_MSC_VER

MsgThirdTestC2S::MsgThirdTestC2S()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.MsgThirdTestC2S)
}

void MsgThirdTestC2S::InitAsDefaultInstance() {
}

MsgThirdTestC2S::MsgThirdTestC2S(const MsgThirdTestC2S& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.MsgThirdTestC2S)
}

void MsgThirdTestC2S::SharedCtor() {
  _cached_size_ = 0;
  msgtype_ = 500;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgThirdTestC2S::~MsgThirdTestC2S() {
  // @@protoc_insertion_point(destructor:MsgPB.MsgThirdTestC2S)
  SharedDtor();
}

void MsgThirdTestC2S::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgThirdTestC2S::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgThirdTestC2S::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgThirdTestC2S_descriptor_;
}

const MsgThirdTestC2S& MsgThirdTestC2S::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgTest_2eproto();
  return *default_instance_;
}

MsgThirdTestC2S* MsgThirdTestC2S::default_instance_ = NULL;

MsgThirdTestC2S* MsgThirdTestC2S::New() const {
  return new MsgThirdTestC2S;
}

void MsgThirdTestC2S::Clear() {
  msgtype_ = 500;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgThirdTestC2S::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.MsgThirdTestC2S)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_THIRD_TEST_C2S];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::EMsgType_IsValid(value)) {
            set_msgtype(static_cast< ::MsgPB::EMsgType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.MsgThirdTestC2S)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.MsgThirdTestC2S)
  return false;
#undef DO_
}

void MsgThirdTestC2S::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.MsgThirdTestC2S)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_THIRD_TEST_C2S];
  if (has_msgtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->msgtype(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.MsgThirdTestC2S)
}

::google::protobuf::uint8* MsgThirdTestC2S::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.MsgThirdTestC2S)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_THIRD_TEST_C2S];
  if (has_msgtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->msgtype(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.MsgThirdTestC2S)
  return target;
}

int MsgThirdTestC2S::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_THIRD_TEST_C2S];
    if (has_msgtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgtype());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgThirdTestC2S::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgThirdTestC2S* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgThirdTestC2S*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgThirdTestC2S::MergeFrom(const MsgThirdTestC2S& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msgtype()) {
      set_msgtype(from.msgtype());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgThirdTestC2S::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgThirdTestC2S::CopyFrom(const MsgThirdTestC2S& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgThirdTestC2S::IsInitialized() const {

  return true;
}

void MsgThirdTestC2S::Swap(MsgThirdTestC2S* other) {
  if (other != this) {
    std::swap(msgtype_, other->msgtype_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgThirdTestC2S::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgThirdTestC2S_descriptor_;
  metadata.reflection = MsgThirdTestC2S_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace MsgPB

// @@protoc_insertion_point(global_scope)
