// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MsgPublicMap.proto

#ifndef PROTOBUF_MsgPublicMap_2eproto__INCLUDED
#define PROTOBUF_MsgPublicMap_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "MsgType.pb.h"
// @@protoc_insertion_point(includes)

namespace MsgPB {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_MsgPublicMap_2eproto();
void protobuf_AssignDesc_MsgPublicMap_2eproto();
void protobuf_ShutdownFile_MsgPublicMap_2eproto();

class MsgPublicMapChangeMap_C2S;
class MsgPublicMapChangeMapRs_S2C;
class MsgPublicMapCreate_S2MS;
class MsgPublicMapCreateRs_MS2S;

enum CHANGE_MAP_TYPE {
  CHANGE_MAP_TYPE_NULL = 0,
  CHANGE_MAP_TYPE_PRIVATE_TO_PUBLIC = 1,
  CHANGE_MAP_TYPE_PUBLIC_TO_PRIVATE = 2
};
bool CHANGE_MAP_TYPE_IsValid(int value);
const CHANGE_MAP_TYPE CHANGE_MAP_TYPE_MIN = CHANGE_MAP_TYPE_NULL;
const CHANGE_MAP_TYPE CHANGE_MAP_TYPE_MAX = CHANGE_MAP_TYPE_PUBLIC_TO_PRIVATE;
const int CHANGE_MAP_TYPE_ARRAYSIZE = CHANGE_MAP_TYPE_MAX + 1;

const ::google::protobuf::EnumDescriptor* CHANGE_MAP_TYPE_descriptor();
inline const ::std::string& CHANGE_MAP_TYPE_Name(CHANGE_MAP_TYPE value) {
  return ::google::protobuf::internal::NameOfEnum(
    CHANGE_MAP_TYPE_descriptor(), value);
}
inline bool CHANGE_MAP_TYPE_Parse(
    const ::std::string& name, CHANGE_MAP_TYPE* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CHANGE_MAP_TYPE>(
    CHANGE_MAP_TYPE_descriptor(), name, value);
}
enum CHANGE_MAP_RESULT {
  CHANGE_MAP_RESULT_NULL = 0,
  CHANGE_MAP_RESULT_SUCCESS = 1,
  CHANGE_MAP_RESULT_TYPE_ERROR = 2,
  CHANGE_MAP_RESULT_NOT_IN_PRIVATE_MAP = 3,
  CHANGE_MAP_RESULT_NOT_IN_PUBLIC_MAP = 4,
  CHANGE_MAP_RESULT_CREATE_MAP_ERROR = 5,
  CHANGE_MAP_RESULT_CREATEING = 6,
  CHANGE_MAP_RESULT_MAP_DISABLE = 7,
  CHANGE_MAP_RESULT_NO_MAPSERVER_ERR = 8,
  CHANGE_MAP_RESULT_MAPSERVER_ERR = 9
};
bool CHANGE_MAP_RESULT_IsValid(int value);
const CHANGE_MAP_RESULT CHANGE_MAP_RESULT_MIN = CHANGE_MAP_RESULT_NULL;
const CHANGE_MAP_RESULT CHANGE_MAP_RESULT_MAX = CHANGE_MAP_RESULT_MAPSERVER_ERR;
const int CHANGE_MAP_RESULT_ARRAYSIZE = CHANGE_MAP_RESULT_MAX + 1;

const ::google::protobuf::EnumDescriptor* CHANGE_MAP_RESULT_descriptor();
inline const ::std::string& CHANGE_MAP_RESULT_Name(CHANGE_MAP_RESULT value) {
  return ::google::protobuf::internal::NameOfEnum(
    CHANGE_MAP_RESULT_descriptor(), value);
}
inline bool CHANGE_MAP_RESULT_Parse(
    const ::std::string& name, CHANGE_MAP_RESULT* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CHANGE_MAP_RESULT>(
    CHANGE_MAP_RESULT_descriptor(), name, value);
}
enum ENUM_CREATEPUBLIC_RESULT {
  CREATEPUBLIC_NULL = 0,
  CREATEPUBLIC_SUCCESS = 1,
  CREATEPUBLIC_MAPMGR_ERROR = 2,
  CREATEPUBLIC_MAPID_ERROR = 3,
  CREATEPUBLIC_CREATE_MAP_ERROR = 4
};
bool ENUM_CREATEPUBLIC_RESULT_IsValid(int value);
const ENUM_CREATEPUBLIC_RESULT ENUM_CREATEPUBLIC_RESULT_MIN = CREATEPUBLIC_NULL;
const ENUM_CREATEPUBLIC_RESULT ENUM_CREATEPUBLIC_RESULT_MAX = CREATEPUBLIC_CREATE_MAP_ERROR;
const int ENUM_CREATEPUBLIC_RESULT_ARRAYSIZE = ENUM_CREATEPUBLIC_RESULT_MAX + 1;

const ::google::protobuf::EnumDescriptor* ENUM_CREATEPUBLIC_RESULT_descriptor();
inline const ::std::string& ENUM_CREATEPUBLIC_RESULT_Name(ENUM_CREATEPUBLIC_RESULT value) {
  return ::google::protobuf::internal::NameOfEnum(
    ENUM_CREATEPUBLIC_RESULT_descriptor(), value);
}
inline bool ENUM_CREATEPUBLIC_RESULT_Parse(
    const ::std::string& name, ENUM_CREATEPUBLIC_RESULT* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ENUM_CREATEPUBLIC_RESULT>(
    ENUM_CREATEPUBLIC_RESULT_descriptor(), name, value);
}
// ===================================================================

class MsgPublicMapChangeMap_C2S : public ::google::protobuf::Message {
 public:
  MsgPublicMapChangeMap_C2S();
  virtual ~MsgPublicMapChangeMap_C2S();

  MsgPublicMapChangeMap_C2S(const MsgPublicMapChangeMap_C2S& from);

  inline MsgPublicMapChangeMap_C2S& operator=(const MsgPublicMapChangeMap_C2S& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgPublicMapChangeMap_C2S& default_instance();

  void Swap(MsgPublicMapChangeMap_C2S* other);

  // implements Message ----------------------------------------------

  MsgPublicMapChangeMap_C2S* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgPublicMapChangeMap_C2S& from);
  void MergeFrom(const MsgPublicMapChangeMap_C2S& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 SerialID = 1;
  inline bool has_serialid() const;
  inline void clear_serialid();
  static const int kSerialIDFieldNumber = 1;
  inline ::google::protobuf::int32 serialid() const;
  inline void set_serialid(::google::protobuf::int32 value);

  // optional .MsgPB.EMsgType msgType = 2 [default = _MSG_PUBLIC_MAP_CHANGE_MAP_C2GS];
  inline bool has_msgtype() const;
  inline void clear_msgtype();
  static const int kMsgTypeFieldNumber = 2;
  inline ::MsgPB::EMsgType msgtype() const;
  inline void set_msgtype(::MsgPB::EMsgType value);

  // optional .MsgPB.CHANGE_MAP_TYPE type = 3;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 3;
  inline ::MsgPB::CHANGE_MAP_TYPE type() const;
  inline void set_type(::MsgPB::CHANGE_MAP_TYPE value);

  // @@protoc_insertion_point(class_scope:MsgPB.MsgPublicMapChangeMap_C2S)
 private:
  inline void set_has_serialid();
  inline void clear_has_serialid();
  inline void set_has_msgtype();
  inline void clear_has_msgtype();
  inline void set_has_type();
  inline void clear_has_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 serialid_;
  int msgtype_;
  int type_;
  friend void  protobuf_AddDesc_MsgPublicMap_2eproto();
  friend void protobuf_AssignDesc_MsgPublicMap_2eproto();
  friend void protobuf_ShutdownFile_MsgPublicMap_2eproto();

  void InitAsDefaultInstance();
  static MsgPublicMapChangeMap_C2S* default_instance_;
};
// -------------------------------------------------------------------

class MsgPublicMapChangeMapRs_S2C : public ::google::protobuf::Message {
 public:
  MsgPublicMapChangeMapRs_S2C();
  virtual ~MsgPublicMapChangeMapRs_S2C();

  MsgPublicMapChangeMapRs_S2C(const MsgPublicMapChangeMapRs_S2C& from);

  inline MsgPublicMapChangeMapRs_S2C& operator=(const MsgPublicMapChangeMapRs_S2C& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgPublicMapChangeMapRs_S2C& default_instance();

  void Swap(MsgPublicMapChangeMapRs_S2C* other);

  // implements Message ----------------------------------------------

  MsgPublicMapChangeMapRs_S2C* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgPublicMapChangeMapRs_S2C& from);
  void MergeFrom(const MsgPublicMapChangeMapRs_S2C& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 SerialID = 1;
  inline bool has_serialid() const;
  inline void clear_serialid();
  static const int kSerialIDFieldNumber = 1;
  inline ::google::protobuf::int32 serialid() const;
  inline void set_serialid(::google::protobuf::int32 value);

  // optional .MsgPB.EMsgType msgType = 2 [default = _MSG_PUBLIC_MAP_CHANGE_MAP_RS_GS2C];
  inline bool has_msgtype() const;
  inline void clear_msgtype();
  static const int kMsgTypeFieldNumber = 2;
  inline ::MsgPB::EMsgType msgtype() const;
  inline void set_msgtype(::MsgPB::EMsgType value);

  // optional int64 iggid = 3;
  inline bool has_iggid() const;
  inline void clear_iggid();
  static const int kIggidFieldNumber = 3;
  inline ::google::protobuf::int64 iggid() const;
  inline void set_iggid(::google::protobuf::int64 value);

  // optional .MsgPB.CHANGE_MAP_RESULT result = 4;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 4;
  inline ::MsgPB::CHANGE_MAP_RESULT result() const;
  inline void set_result(::MsgPB::CHANGE_MAP_RESULT value);

  // @@protoc_insertion_point(class_scope:MsgPB.MsgPublicMapChangeMapRs_S2C)
 private:
  inline void set_has_serialid();
  inline void clear_has_serialid();
  inline void set_has_msgtype();
  inline void clear_has_msgtype();
  inline void set_has_iggid();
  inline void clear_has_iggid();
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 serialid_;
  int msgtype_;
  ::google::protobuf::int64 iggid_;
  int result_;
  friend void  protobuf_AddDesc_MsgPublicMap_2eproto();
  friend void protobuf_AssignDesc_MsgPublicMap_2eproto();
  friend void protobuf_ShutdownFile_MsgPublicMap_2eproto();

  void InitAsDefaultInstance();
  static MsgPublicMapChangeMapRs_S2C* default_instance_;
};
// -------------------------------------------------------------------

class MsgPublicMapCreate_S2MS : public ::google::protobuf::Message {
 public:
  MsgPublicMapCreate_S2MS();
  virtual ~MsgPublicMapCreate_S2MS();

  MsgPublicMapCreate_S2MS(const MsgPublicMapCreate_S2MS& from);

  inline MsgPublicMapCreate_S2MS& operator=(const MsgPublicMapCreate_S2MS& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgPublicMapCreate_S2MS& default_instance();

  void Swap(MsgPublicMapCreate_S2MS* other);

  // implements Message ----------------------------------------------

  MsgPublicMapCreate_S2MS* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgPublicMapCreate_S2MS& from);
  void MergeFrom(const MsgPublicMapCreate_S2MS& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_PUBLIC_MAP_CREATED_S2MS];
  inline bool has_msgtype() const;
  inline void clear_msgtype();
  static const int kMsgTypeFieldNumber = 1;
  inline ::MsgPB::EMsgType msgtype() const;
  inline void set_msgtype(::MsgPB::EMsgType value);

  // @@protoc_insertion_point(class_scope:MsgPB.MsgPublicMapCreate_S2MS)
 private:
  inline void set_has_msgtype();
  inline void clear_has_msgtype();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int msgtype_;
  friend void  protobuf_AddDesc_MsgPublicMap_2eproto();
  friend void protobuf_AssignDesc_MsgPublicMap_2eproto();
  friend void protobuf_ShutdownFile_MsgPublicMap_2eproto();

  void InitAsDefaultInstance();
  static MsgPublicMapCreate_S2MS* default_instance_;
};
// -------------------------------------------------------------------

class MsgPublicMapCreateRs_MS2S : public ::google::protobuf::Message {
 public:
  MsgPublicMapCreateRs_MS2S();
  virtual ~MsgPublicMapCreateRs_MS2S();

  MsgPublicMapCreateRs_MS2S(const MsgPublicMapCreateRs_MS2S& from);

  inline MsgPublicMapCreateRs_MS2S& operator=(const MsgPublicMapCreateRs_MS2S& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgPublicMapCreateRs_MS2S& default_instance();

  void Swap(MsgPublicMapCreateRs_MS2S* other);

  // implements Message ----------------------------------------------

  MsgPublicMapCreateRs_MS2S* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgPublicMapCreateRs_MS2S& from);
  void MergeFrom(const MsgPublicMapCreateRs_MS2S& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_PUBLIC_MAP_CREATED_RS_MS2S];
  inline bool has_msgtype() const;
  inline void clear_msgtype();
  static const int kMsgTypeFieldNumber = 1;
  inline ::MsgPB::EMsgType msgtype() const;
  inline void set_msgtype(::MsgPB::EMsgType value);

  // optional .MsgPB.ENUM_CREATEPUBLIC_RESULT result = 2;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 2;
  inline ::MsgPB::ENUM_CREATEPUBLIC_RESULT result() const;
  inline void set_result(::MsgPB::ENUM_CREATEPUBLIC_RESULT value);

  // optional int64 map_uuid = 3;
  inline bool has_map_uuid() const;
  inline void clear_map_uuid();
  static const int kMapUuidFieldNumber = 3;
  inline ::google::protobuf::int64 map_uuid() const;
  inline void set_map_uuid(::google::protobuf::int64 value);

  // optional int32 map_id = 4;
  inline bool has_map_id() const;
  inline void clear_map_id();
  static const int kMapIdFieldNumber = 4;
  inline ::google::protobuf::int32 map_id() const;
  inline void set_map_id(::google::protobuf::int32 value);

  // optional int64 creator_iggid = 5;
  inline bool has_creator_iggid() const;
  inline void clear_creator_iggid();
  static const int kCreatorIggidFieldNumber = 5;
  inline ::google::protobuf::int64 creator_iggid() const;
  inline void set_creator_iggid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:MsgPB.MsgPublicMapCreateRs_MS2S)
 private:
  inline void set_has_msgtype();
  inline void clear_has_msgtype();
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_map_uuid();
  inline void clear_has_map_uuid();
  inline void set_has_map_id();
  inline void clear_has_map_id();
  inline void set_has_creator_iggid();
  inline void clear_has_creator_iggid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int msgtype_;
  int result_;
  ::google::protobuf::int64 map_uuid_;
  ::google::protobuf::int64 creator_iggid_;
  ::google::protobuf::int32 map_id_;
  friend void  protobuf_AddDesc_MsgPublicMap_2eproto();
  friend void protobuf_AssignDesc_MsgPublicMap_2eproto();
  friend void protobuf_ShutdownFile_MsgPublicMap_2eproto();

  void InitAsDefaultInstance();
  static MsgPublicMapCreateRs_MS2S* default_instance_;
};
// ===================================================================


// ===================================================================

// MsgPublicMapChangeMap_C2S

// optional int32 SerialID = 1;
inline bool MsgPublicMapChangeMap_C2S::has_serialid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgPublicMapChangeMap_C2S::set_has_serialid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgPublicMapChangeMap_C2S::clear_has_serialid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgPublicMapChangeMap_C2S::clear_serialid() {
  serialid_ = 0;
  clear_has_serialid();
}
inline ::google::protobuf::int32 MsgPublicMapChangeMap_C2S::serialid() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgPublicMapChangeMap_C2S.SerialID)
  return serialid_;
}
inline void MsgPublicMapChangeMap_C2S::set_serialid(::google::protobuf::int32 value) {
  set_has_serialid();
  serialid_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgPublicMapChangeMap_C2S.SerialID)
}

// optional .MsgPB.EMsgType msgType = 2 [default = _MSG_PUBLIC_MAP_CHANGE_MAP_C2GS];
inline bool MsgPublicMapChangeMap_C2S::has_msgtype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MsgPublicMapChangeMap_C2S::set_has_msgtype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MsgPublicMapChangeMap_C2S::clear_has_msgtype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MsgPublicMapChangeMap_C2S::clear_msgtype() {
  msgtype_ = 2200;
  clear_has_msgtype();
}
inline ::MsgPB::EMsgType MsgPublicMapChangeMap_C2S::msgtype() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgPublicMapChangeMap_C2S.msgType)
  return static_cast< ::MsgPB::EMsgType >(msgtype_);
}
inline void MsgPublicMapChangeMap_C2S::set_msgtype(::MsgPB::EMsgType value) {
  assert(::MsgPB::EMsgType_IsValid(value));
  set_has_msgtype();
  msgtype_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgPublicMapChangeMap_C2S.msgType)
}

// optional .MsgPB.CHANGE_MAP_TYPE type = 3;
inline bool MsgPublicMapChangeMap_C2S::has_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MsgPublicMapChangeMap_C2S::set_has_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MsgPublicMapChangeMap_C2S::clear_has_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MsgPublicMapChangeMap_C2S::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::MsgPB::CHANGE_MAP_TYPE MsgPublicMapChangeMap_C2S::type() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgPublicMapChangeMap_C2S.type)
  return static_cast< ::MsgPB::CHANGE_MAP_TYPE >(type_);
}
inline void MsgPublicMapChangeMap_C2S::set_type(::MsgPB::CHANGE_MAP_TYPE value) {
  assert(::MsgPB::CHANGE_MAP_TYPE_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgPublicMapChangeMap_C2S.type)
}

// -------------------------------------------------------------------

// MsgPublicMapChangeMapRs_S2C

// optional int32 SerialID = 1;
inline bool MsgPublicMapChangeMapRs_S2C::has_serialid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgPublicMapChangeMapRs_S2C::set_has_serialid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgPublicMapChangeMapRs_S2C::clear_has_serialid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgPublicMapChangeMapRs_S2C::clear_serialid() {
  serialid_ = 0;
  clear_has_serialid();
}
inline ::google::protobuf::int32 MsgPublicMapChangeMapRs_S2C::serialid() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgPublicMapChangeMapRs_S2C.SerialID)
  return serialid_;
}
inline void MsgPublicMapChangeMapRs_S2C::set_serialid(::google::protobuf::int32 value) {
  set_has_serialid();
  serialid_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgPublicMapChangeMapRs_S2C.SerialID)
}

// optional .MsgPB.EMsgType msgType = 2 [default = _MSG_PUBLIC_MAP_CHANGE_MAP_RS_GS2C];
inline bool MsgPublicMapChangeMapRs_S2C::has_msgtype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MsgPublicMapChangeMapRs_S2C::set_has_msgtype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MsgPublicMapChangeMapRs_S2C::clear_has_msgtype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MsgPublicMapChangeMapRs_S2C::clear_msgtype() {
  msgtype_ = 2201;
  clear_has_msgtype();
}
inline ::MsgPB::EMsgType MsgPublicMapChangeMapRs_S2C::msgtype() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgPublicMapChangeMapRs_S2C.msgType)
  return static_cast< ::MsgPB::EMsgType >(msgtype_);
}
inline void MsgPublicMapChangeMapRs_S2C::set_msgtype(::MsgPB::EMsgType value) {
  assert(::MsgPB::EMsgType_IsValid(value));
  set_has_msgtype();
  msgtype_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgPublicMapChangeMapRs_S2C.msgType)
}

// optional int64 iggid = 3;
inline bool MsgPublicMapChangeMapRs_S2C::has_iggid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MsgPublicMapChangeMapRs_S2C::set_has_iggid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MsgPublicMapChangeMapRs_S2C::clear_has_iggid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MsgPublicMapChangeMapRs_S2C::clear_iggid() {
  iggid_ = GOOGLE_LONGLONG(0);
  clear_has_iggid();
}
inline ::google::protobuf::int64 MsgPublicMapChangeMapRs_S2C::iggid() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgPublicMapChangeMapRs_S2C.iggid)
  return iggid_;
}
inline void MsgPublicMapChangeMapRs_S2C::set_iggid(::google::protobuf::int64 value) {
  set_has_iggid();
  iggid_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgPublicMapChangeMapRs_S2C.iggid)
}

// optional .MsgPB.CHANGE_MAP_RESULT result = 4;
inline bool MsgPublicMapChangeMapRs_S2C::has_result() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MsgPublicMapChangeMapRs_S2C::set_has_result() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MsgPublicMapChangeMapRs_S2C::clear_has_result() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MsgPublicMapChangeMapRs_S2C::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::MsgPB::CHANGE_MAP_RESULT MsgPublicMapChangeMapRs_S2C::result() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgPublicMapChangeMapRs_S2C.result)
  return static_cast< ::MsgPB::CHANGE_MAP_RESULT >(result_);
}
inline void MsgPublicMapChangeMapRs_S2C::set_result(::MsgPB::CHANGE_MAP_RESULT value) {
  assert(::MsgPB::CHANGE_MAP_RESULT_IsValid(value));
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgPublicMapChangeMapRs_S2C.result)
}

// -------------------------------------------------------------------

// MsgPublicMapCreate_S2MS

// optional .MsgPB.EMsgType msgType = 1 [default = _MSG_PUBLIC_MAP_CREATED_S2MS];
inline bool MsgPublicMapCreate_S2MS::has_msgtype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgPublicMapCreate_S2MS::set_has_msgtype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgPublicMapCreate_S2MS::clear_has_msgtype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgPublicMapCreate_S2MS::clear_msgtype() {
  msgtype_ = 2202;
  clear_has_msgtype();
}
inline ::MsgPB::EMsgType MsgPublicMapCreate_S2MS::msgtype() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgPublicMapCreate_S2MS.msgType)
  return static_cast< ::MsgPB::EMsgType >(msgtype_);
}
inline void MsgPublicMapCreate_S2MS::set_msgtype(::MsgPB::EMsgType value) {
  assert(::MsgPB::EMsgType_IsValid(value));
  set_has_msgtype();
  msgtype_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgPublicMapCreate_S2MS.msgType)
}

// -------------------------------------------------------------------

// MsgPublicMapCreateRs_MS2S

// optional .MsgPB.EMsgType msgType = 1 [default = _MSG_PUBLIC_MAP_CREATED_RS_MS2S];
inline bool MsgPublicMapCreateRs_MS2S::has_msgtype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgPublicMapCreateRs_MS2S::set_has_msgtype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgPublicMapCreateRs_MS2S::clear_has_msgtype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgPublicMapCreateRs_MS2S::clear_msgtype() {
  msgtype_ = 2203;
  clear_has_msgtype();
}
inline ::MsgPB::EMsgType MsgPublicMapCreateRs_MS2S::msgtype() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgPublicMapCreateRs_MS2S.msgType)
  return static_cast< ::MsgPB::EMsgType >(msgtype_);
}
inline void MsgPublicMapCreateRs_MS2S::set_msgtype(::MsgPB::EMsgType value) {
  assert(::MsgPB::EMsgType_IsValid(value));
  set_has_msgtype();
  msgtype_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgPublicMapCreateRs_MS2S.msgType)
}

// optional .MsgPB.ENUM_CREATEPUBLIC_RESULT result = 2;
inline bool MsgPublicMapCreateRs_MS2S::has_result() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MsgPublicMapCreateRs_MS2S::set_has_result() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MsgPublicMapCreateRs_MS2S::clear_has_result() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MsgPublicMapCreateRs_MS2S::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::MsgPB::ENUM_CREATEPUBLIC_RESULT MsgPublicMapCreateRs_MS2S::result() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgPublicMapCreateRs_MS2S.result)
  return static_cast< ::MsgPB::ENUM_CREATEPUBLIC_RESULT >(result_);
}
inline void MsgPublicMapCreateRs_MS2S::set_result(::MsgPB::ENUM_CREATEPUBLIC_RESULT value) {
  assert(::MsgPB::ENUM_CREATEPUBLIC_RESULT_IsValid(value));
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgPublicMapCreateRs_MS2S.result)
}

// optional int64 map_uuid = 3;
inline bool MsgPublicMapCreateRs_MS2S::has_map_uuid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MsgPublicMapCreateRs_MS2S::set_has_map_uuid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MsgPublicMapCreateRs_MS2S::clear_has_map_uuid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MsgPublicMapCreateRs_MS2S::clear_map_uuid() {
  map_uuid_ = GOOGLE_LONGLONG(0);
  clear_has_map_uuid();
}
inline ::google::protobuf::int64 MsgPublicMapCreateRs_MS2S::map_uuid() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgPublicMapCreateRs_MS2S.map_uuid)
  return map_uuid_;
}
inline void MsgPublicMapCreateRs_MS2S::set_map_uuid(::google::protobuf::int64 value) {
  set_has_map_uuid();
  map_uuid_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgPublicMapCreateRs_MS2S.map_uuid)
}

// optional int32 map_id = 4;
inline bool MsgPublicMapCreateRs_MS2S::has_map_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MsgPublicMapCreateRs_MS2S::set_has_map_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MsgPublicMapCreateRs_MS2S::clear_has_map_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MsgPublicMapCreateRs_MS2S::clear_map_id() {
  map_id_ = 0;
  clear_has_map_id();
}
inline ::google::protobuf::int32 MsgPublicMapCreateRs_MS2S::map_id() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgPublicMapCreateRs_MS2S.map_id)
  return map_id_;
}
inline void MsgPublicMapCreateRs_MS2S::set_map_id(::google::protobuf::int32 value) {
  set_has_map_id();
  map_id_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgPublicMapCreateRs_MS2S.map_id)
}

// optional int64 creator_iggid = 5;
inline bool MsgPublicMapCreateRs_MS2S::has_creator_iggid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void MsgPublicMapCreateRs_MS2S::set_has_creator_iggid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void MsgPublicMapCreateRs_MS2S::clear_has_creator_iggid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void MsgPublicMapCreateRs_MS2S::clear_creator_iggid() {
  creator_iggid_ = GOOGLE_LONGLONG(0);
  clear_has_creator_iggid();
}
inline ::google::protobuf::int64 MsgPublicMapCreateRs_MS2S::creator_iggid() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgPublicMapCreateRs_MS2S.creator_iggid)
  return creator_iggid_;
}
inline void MsgPublicMapCreateRs_MS2S::set_creator_iggid(::google::protobuf::int64 value) {
  set_has_creator_iggid();
  creator_iggid_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgPublicMapCreateRs_MS2S.creator_iggid)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace MsgPB

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::MsgPB::CHANGE_MAP_TYPE> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::MsgPB::CHANGE_MAP_TYPE>() {
  return ::MsgPB::CHANGE_MAP_TYPE_descriptor();
}
template <> struct is_proto_enum< ::MsgPB::CHANGE_MAP_RESULT> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::MsgPB::CHANGE_MAP_RESULT>() {
  return ::MsgPB::CHANGE_MAP_RESULT_descriptor();
}
template <> struct is_proto_enum< ::MsgPB::ENUM_CREATEPUBLIC_RESULT> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::MsgPB::ENUM_CREATEPUBLIC_RESULT>() {
  return ::MsgPB::ENUM_CREATEPUBLIC_RESULT_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_MsgPublicMap_2eproto__INCLUDED
