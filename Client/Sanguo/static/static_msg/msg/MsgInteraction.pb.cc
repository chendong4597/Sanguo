// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MsgInteraction.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "MsgInteraction.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace MsgPB {

namespace {

const ::google::protobuf::Descriptor* MsgWorldPos_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgWorldPos_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgWorldRot_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgWorldRot_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgInteractionCreateWorldC2S_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgInteractionCreateWorldC2S_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgInteractionDestroyWorldC2S_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgInteractionDestroyWorldC2S_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgInteractionForceOutWorldS2C_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgInteractionForceOutWorldS2C_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgInteractionInWorldC2S_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgInteractionInWorldC2S_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgInteractionInWorldS2C_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgInteractionInWorldS2C_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgInteractionAttrUpdateS2C_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgInteractionAttrUpdateS2C_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgInteractionOutWorldC2S_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgInteractionOutWorldC2S_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgInteractionOutWorldS2C_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgInteractionOutWorldS2C_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgInteractionWalkC2S_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgInteractionWalkC2S_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgInteractionWalkS2C_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgInteractionWalkS2C_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgInteractionTurnC2S_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgInteractionTurnC2S_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgInteractionTurnS2C_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgInteractionTurnS2C_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgInteractionC2S_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgInteractionC2S_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgInteractionS2C_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgInteractionS2C_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgMagicEffectAppenceS2C_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgMagicEffectAppenceS2C_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgMagicEffectDispearS2C_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgMagicEffectDispearS2C_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* EAttr_Type_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* EAction_Type_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_MsgInteraction_2eproto() {
  protobuf_AddDesc_MsgInteraction_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "MsgInteraction.proto");
  GOOGLE_CHECK(file != NULL);
  MsgWorldPos_descriptor_ = file->message_type(0);
  static const int MsgWorldPos_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgWorldPos, x_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgWorldPos, y_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgWorldPos, z_),
  };
  MsgWorldPos_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgWorldPos_descriptor_,
      MsgWorldPos::default_instance_,
      MsgWorldPos_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgWorldPos, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgWorldPos, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgWorldPos));
  MsgWorldRot_descriptor_ = file->message_type(1);
  static const int MsgWorldRot_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgWorldRot, r_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgWorldRot, p_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgWorldRot, y_),
  };
  MsgWorldRot_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgWorldRot_descriptor_,
      MsgWorldRot::default_instance_,
      MsgWorldRot_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgWorldRot, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgWorldRot, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgWorldRot));
  MsgInteractionCreateWorldC2S_descriptor_ = file->message_type(2);
  static const int MsgInteractionCreateWorldC2S_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgInteractionCreateWorldC2S, msgtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgInteractionCreateWorldC2S, iggid_),
  };
  MsgInteractionCreateWorldC2S_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgInteractionCreateWorldC2S_descriptor_,
      MsgInteractionCreateWorldC2S::default_instance_,
      MsgInteractionCreateWorldC2S_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgInteractionCreateWorldC2S, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgInteractionCreateWorldC2S, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgInteractionCreateWorldC2S));
  MsgInteractionDestroyWorldC2S_descriptor_ = file->message_type(3);
  static const int MsgInteractionDestroyWorldC2S_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgInteractionDestroyWorldC2S, msgtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgInteractionDestroyWorldC2S, iggid_),
  };
  MsgInteractionDestroyWorldC2S_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgInteractionDestroyWorldC2S_descriptor_,
      MsgInteractionDestroyWorldC2S::default_instance_,
      MsgInteractionDestroyWorldC2S_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgInteractionDestroyWorldC2S, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgInteractionDestroyWorldC2S, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgInteractionDestroyWorldC2S));
  MsgInteractionForceOutWorldS2C_descriptor_ = file->message_type(4);
  static const int MsgInteractionForceOutWorldS2C_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgInteractionForceOutWorldS2C, msgtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgInteractionForceOutWorldS2C, iggid_),
  };
  MsgInteractionForceOutWorldS2C_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgInteractionForceOutWorldS2C_descriptor_,
      MsgInteractionForceOutWorldS2C::default_instance_,
      MsgInteractionForceOutWorldS2C_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgInteractionForceOutWorldS2C, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgInteractionForceOutWorldS2C, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgInteractionForceOutWorldS2C));
  MsgInteractionInWorldC2S_descriptor_ = file->message_type(5);
  static const int MsgInteractionInWorldC2S_offsets_[8] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgInteractionInWorldC2S, msgtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgInteractionInWorldC2S, objid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgInteractionInWorldC2S, iggid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgInteractionInWorldC2S, sex_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgInteractionInWorldC2S, horseid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgInteractionInWorldC2S, weaponid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgInteractionInWorldC2S, p_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgInteractionInWorldC2S, r_),
  };
  MsgInteractionInWorldC2S_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgInteractionInWorldC2S_descriptor_,
      MsgInteractionInWorldC2S::default_instance_,
      MsgInteractionInWorldC2S_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgInteractionInWorldC2S, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgInteractionInWorldC2S, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgInteractionInWorldC2S));
  MsgInteractionInWorldS2C_descriptor_ = file->message_type(6);
  static const int MsgInteractionInWorldS2C_offsets_[21] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgInteractionInWorldS2C, msgtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgInteractionInWorldS2C, objid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgInteractionInWorldS2C, iggid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgInteractionInWorldS2C, player_iggid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgInteractionInWorldS2C, target_iggid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgInteractionInWorldS2C, camp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgInteractionInWorldS2C, sex_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgInteractionInWorldS2C, skincolor_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgInteractionInWorldS2C, horseid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgInteractionInWorldS2C, weaponid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgInteractionInWorldS2C, nickname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgInteractionInWorldS2C, atkspeed_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgInteractionInWorldS2C, speed_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgInteractionInWorldS2C, curhp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgInteractionInWorldS2C, curhpmax_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgInteractionInWorldS2C, curmana_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgInteractionInWorldS2C, curmanamax_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgInteractionInWorldS2C, stength_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgInteractionInWorldS2C, rage_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgInteractionInWorldS2C, p_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgInteractionInWorldS2C, r_),
  };
  MsgInteractionInWorldS2C_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgInteractionInWorldS2C_descriptor_,
      MsgInteractionInWorldS2C::default_instance_,
      MsgInteractionInWorldS2C_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgInteractionInWorldS2C, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgInteractionInWorldS2C, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgInteractionInWorldS2C));
  MsgInteractionAttrUpdateS2C_descriptor_ = file->message_type(7);
  static const int MsgInteractionAttrUpdateS2C_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgInteractionAttrUpdateS2C, msgtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgInteractionAttrUpdateS2C, objid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgInteractionAttrUpdateS2C, iggid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgInteractionAttrUpdateS2C, player_iggid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgInteractionAttrUpdateS2C, attrtpy_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgInteractionAttrUpdateS2C, attrvalue_),
  };
  MsgInteractionAttrUpdateS2C_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgInteractionAttrUpdateS2C_descriptor_,
      MsgInteractionAttrUpdateS2C::default_instance_,
      MsgInteractionAttrUpdateS2C_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgInteractionAttrUpdateS2C, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgInteractionAttrUpdateS2C, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgInteractionAttrUpdateS2C));
  MsgInteractionOutWorldC2S_descriptor_ = file->message_type(8);
  static const int MsgInteractionOutWorldC2S_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgInteractionOutWorldC2S, msgtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgInteractionOutWorldC2S, objid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgInteractionOutWorldC2S, iggid_),
  };
  MsgInteractionOutWorldC2S_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgInteractionOutWorldC2S_descriptor_,
      MsgInteractionOutWorldC2S::default_instance_,
      MsgInteractionOutWorldC2S_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgInteractionOutWorldC2S, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgInteractionOutWorldC2S, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgInteractionOutWorldC2S));
  MsgInteractionOutWorldS2C_descriptor_ = file->message_type(9);
  static const int MsgInteractionOutWorldS2C_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgInteractionOutWorldS2C, msgtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgInteractionOutWorldS2C, objid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgInteractionOutWorldS2C, iggid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgInteractionOutWorldS2C, player_iggid_),
  };
  MsgInteractionOutWorldS2C_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgInteractionOutWorldS2C_descriptor_,
      MsgInteractionOutWorldS2C::default_instance_,
      MsgInteractionOutWorldS2C_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgInteractionOutWorldS2C, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgInteractionOutWorldS2C, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgInteractionOutWorldS2C));
  MsgInteractionWalkC2S_descriptor_ = file->message_type(10);
  static const int MsgInteractionWalkC2S_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgInteractionWalkC2S, msgtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgInteractionWalkC2S, objid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgInteractionWalkC2S, player_iggid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgInteractionWalkC2S, p_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgInteractionWalkC2S, r_),
  };
  MsgInteractionWalkC2S_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgInteractionWalkC2S_descriptor_,
      MsgInteractionWalkC2S::default_instance_,
      MsgInteractionWalkC2S_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgInteractionWalkC2S, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgInteractionWalkC2S, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgInteractionWalkC2S));
  MsgInteractionWalkS2C_descriptor_ = file->message_type(11);
  static const int MsgInteractionWalkS2C_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgInteractionWalkS2C, msgtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgInteractionWalkS2C, objid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgInteractionWalkS2C, player_iggid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgInteractionWalkS2C, p_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgInteractionWalkS2C, r_),
  };
  MsgInteractionWalkS2C_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgInteractionWalkS2C_descriptor_,
      MsgInteractionWalkS2C::default_instance_,
      MsgInteractionWalkS2C_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgInteractionWalkS2C, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgInteractionWalkS2C, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgInteractionWalkS2C));
  MsgInteractionTurnC2S_descriptor_ = file->message_type(12);
  static const int MsgInteractionTurnC2S_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgInteractionTurnC2S, msgtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgInteractionTurnC2S, objid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgInteractionTurnC2S, player_iggid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgInteractionTurnC2S, r_),
  };
  MsgInteractionTurnC2S_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgInteractionTurnC2S_descriptor_,
      MsgInteractionTurnC2S::default_instance_,
      MsgInteractionTurnC2S_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgInteractionTurnC2S, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgInteractionTurnC2S, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgInteractionTurnC2S));
  MsgInteractionTurnS2C_descriptor_ = file->message_type(13);
  static const int MsgInteractionTurnS2C_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgInteractionTurnS2C, msgtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgInteractionTurnS2C, objid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgInteractionTurnS2C, player_iggid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgInteractionTurnS2C, r_),
  };
  MsgInteractionTurnS2C_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgInteractionTurnS2C_descriptor_,
      MsgInteractionTurnS2C::default_instance_,
      MsgInteractionTurnS2C_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgInteractionTurnS2C, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgInteractionTurnS2C, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgInteractionTurnS2C));
  MsgInteractionC2S_descriptor_ = file->message_type(14);
  static const int MsgInteractionC2S_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgInteractionC2S, msgtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgInteractionC2S, objid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgInteractionC2S, player_iggid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgInteractionC2S, action_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgInteractionC2S, data1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgInteractionC2S, data2_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgInteractionC2S, data3_),
  };
  MsgInteractionC2S_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgInteractionC2S_descriptor_,
      MsgInteractionC2S::default_instance_,
      MsgInteractionC2S_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgInteractionC2S, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgInteractionC2S, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgInteractionC2S));
  MsgInteractionS2C_descriptor_ = file->message_type(15);
  static const int MsgInteractionS2C_offsets_[8] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgInteractionS2C, msgtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgInteractionS2C, objid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgInteractionS2C, player_iggid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgInteractionS2C, is_from_server_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgInteractionS2C, action_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgInteractionS2C, data1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgInteractionS2C, data2_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgInteractionS2C, data3_),
  };
  MsgInteractionS2C_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgInteractionS2C_descriptor_,
      MsgInteractionS2C::default_instance_,
      MsgInteractionS2C_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgInteractionS2C, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgInteractionS2C, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgInteractionS2C));
  MsgMagicEffectAppenceS2C_descriptor_ = file->message_type(16);
  static const int MsgMagicEffectAppenceS2C_offsets_[8] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMagicEffectAppenceS2C, msgtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMagicEffectAppenceS2C, objid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMagicEffectAppenceS2C, player_iggid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMagicEffectAppenceS2C, target_objid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMagicEffectAppenceS2C, target_player_iggid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMagicEffectAppenceS2C, skillid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMagicEffectAppenceS2C, p_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMagicEffectAppenceS2C, r_),
  };
  MsgMagicEffectAppenceS2C_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgMagicEffectAppenceS2C_descriptor_,
      MsgMagicEffectAppenceS2C::default_instance_,
      MsgMagicEffectAppenceS2C_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMagicEffectAppenceS2C, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMagicEffectAppenceS2C, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgMagicEffectAppenceS2C));
  MsgMagicEffectDispearS2C_descriptor_ = file->message_type(17);
  static const int MsgMagicEffectDispearS2C_offsets_[8] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMagicEffectDispearS2C, msgtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMagicEffectDispearS2C, objid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMagicEffectDispearS2C, player_iggid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMagicEffectDispearS2C, target_objid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMagicEffectDispearS2C, target_player_iggid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMagicEffectDispearS2C, skillid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMagicEffectDispearS2C, p_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMagicEffectDispearS2C, r_),
  };
  MsgMagicEffectDispearS2C_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgMagicEffectDispearS2C_descriptor_,
      MsgMagicEffectDispearS2C::default_instance_,
      MsgMagicEffectDispearS2C_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMagicEffectDispearS2C, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMagicEffectDispearS2C, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgMagicEffectDispearS2C));
  EAttr_Type_descriptor_ = file->enum_type(0);
  EAction_Type_descriptor_ = file->enum_type(1);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_MsgInteraction_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgWorldPos_descriptor_, &MsgWorldPos::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgWorldRot_descriptor_, &MsgWorldRot::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgInteractionCreateWorldC2S_descriptor_, &MsgInteractionCreateWorldC2S::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgInteractionDestroyWorldC2S_descriptor_, &MsgInteractionDestroyWorldC2S::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgInteractionForceOutWorldS2C_descriptor_, &MsgInteractionForceOutWorldS2C::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgInteractionInWorldC2S_descriptor_, &MsgInteractionInWorldC2S::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgInteractionInWorldS2C_descriptor_, &MsgInteractionInWorldS2C::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgInteractionAttrUpdateS2C_descriptor_, &MsgInteractionAttrUpdateS2C::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgInteractionOutWorldC2S_descriptor_, &MsgInteractionOutWorldC2S::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgInteractionOutWorldS2C_descriptor_, &MsgInteractionOutWorldS2C::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgInteractionWalkC2S_descriptor_, &MsgInteractionWalkC2S::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgInteractionWalkS2C_descriptor_, &MsgInteractionWalkS2C::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgInteractionTurnC2S_descriptor_, &MsgInteractionTurnC2S::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgInteractionTurnS2C_descriptor_, &MsgInteractionTurnS2C::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgInteractionC2S_descriptor_, &MsgInteractionC2S::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgInteractionS2C_descriptor_, &MsgInteractionS2C::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgMagicEffectAppenceS2C_descriptor_, &MsgMagicEffectAppenceS2C::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgMagicEffectDispearS2C_descriptor_, &MsgMagicEffectDispearS2C::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_MsgInteraction_2eproto() {
  delete MsgWorldPos::default_instance_;
  delete MsgWorldPos_reflection_;
  delete MsgWorldRot::default_instance_;
  delete MsgWorldRot_reflection_;
  delete MsgInteractionCreateWorldC2S::default_instance_;
  delete MsgInteractionCreateWorldC2S_reflection_;
  delete MsgInteractionDestroyWorldC2S::default_instance_;
  delete MsgInteractionDestroyWorldC2S_reflection_;
  delete MsgInteractionForceOutWorldS2C::default_instance_;
  delete MsgInteractionForceOutWorldS2C_reflection_;
  delete MsgInteractionInWorldC2S::default_instance_;
  delete MsgInteractionInWorldC2S_reflection_;
  delete MsgInteractionInWorldS2C::default_instance_;
  delete MsgInteractionInWorldS2C_reflection_;
  delete MsgInteractionAttrUpdateS2C::default_instance_;
  delete MsgInteractionAttrUpdateS2C_reflection_;
  delete MsgInteractionOutWorldC2S::default_instance_;
  delete MsgInteractionOutWorldC2S_reflection_;
  delete MsgInteractionOutWorldS2C::default_instance_;
  delete MsgInteractionOutWorldS2C_reflection_;
  delete MsgInteractionWalkC2S::default_instance_;
  delete MsgInteractionWalkC2S_reflection_;
  delete MsgInteractionWalkS2C::default_instance_;
  delete MsgInteractionWalkS2C_reflection_;
  delete MsgInteractionTurnC2S::default_instance_;
  delete MsgInteractionTurnC2S_reflection_;
  delete MsgInteractionTurnS2C::default_instance_;
  delete MsgInteractionTurnS2C_reflection_;
  delete MsgInteractionC2S::default_instance_;
  delete MsgInteractionC2S_reflection_;
  delete MsgInteractionS2C::default_instance_;
  delete MsgInteractionS2C_reflection_;
  delete MsgMagicEffectAppenceS2C::default_instance_;
  delete MsgMagicEffectAppenceS2C_reflection_;
  delete MsgMagicEffectDispearS2C::default_instance_;
  delete MsgMagicEffectDispearS2C_reflection_;
}

void protobuf_AddDesc_MsgInteraction_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::MsgPB::protobuf_AddDesc_MsgType_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\024MsgInteraction.proto\022\005MsgPB\032\rMsgType.p"
    "roto\".\n\013MsgWorldPos\022\t\n\001x\030\001 \001(\003\022\t\n\001y\030\002 \001("
    "\003\022\t\n\001z\030\003 \001(\003\".\n\013MsgWorldRot\022\t\n\001R\030\001 \001(\003\022\t"
    "\n\001P\030\002 \001(\003\022\t\n\001Y\030\003 \001(\003\"r\n\034MsgInteractionCr"
    "eateWorldC2S\022C\n\007msgType\030\001 \001(\0162\017.MsgPB.EM"
    "sgType:!_MSG_INTERACTION_WORDL_CREATE_C2"
    "S\022\r\n\005iggid\030\002 \001(\003\"t\n\035MsgInteractionDestro"
    "yWorldC2S\022D\n\007msgType\030\001 \001(\0162\017.MsgPB.EMsgT"
    "ype:\"_MSG_INTERACTION_WORDL_DESTROY_C2S\022"
    "\r\n\005iggid\030\002 \001(\003\"w\n\036MsgInteractionForceOut"
    "WorldS2C\022F\n\007msgType\030\001 \001(\0162\017.MsgPB.EMsgTy"
    "pe:$_MSG_INTERACTION_WORDL_FORCE_OUT_S2C"
    "\022\r\n\005iggid\030\002 \001(\003\"\347\001\n\030MsgInteractionInWorl"
    "dC2S\022\?\n\007msgType\030\001 \001(\0162\017.MsgPB.EMsgType:\035"
    "_MSG_INTERACTION_WORDL_IN_C2S\022\r\n\005objId\030\002"
    " \001(\005\022\r\n\005iggid\030\003 \001(\003\022\013\n\003sex\030\004 \001(\005\022\017\n\007hors"
    "eId\030\005 \001(\005\022\020\n\010weaponId\030\006 \001(\005\022\035\n\001P\030\007 \001(\0132\022"
    ".MsgPB.MsgWorldPos\022\035\n\001R\030\010 \001(\0132\022.MsgPB.Ms"
    "gWorldRot\"\314\003\n\030MsgInteractionInWorldS2C\022\?"
    "\n\007msgType\030\001 \001(\0162\017.MsgPB.EMsgType:\035_MSG_I"
    "NTERACTION_WORDL_IN_S2C\022\r\n\005objId\030\002 \001(\005\022\r"
    "\n\005iggid\030\003 \001(\003\022\024\n\014player_iggid\030\004 \001(\003\022\024\n\014t"
    "arget_iggid\030\005 \001(\003\022\014\n\004camp\030\006 \001(\005\022\013\n\003sex\030\007"
    " \001(\005\022\021\n\tskincolor\030\010 \001(\005\022\017\n\007horseId\030\t \001(\005"
    "\022\020\n\010weaponId\030\n \001(\005\022\020\n\010nickname\030\013 \001(\t\022\020\n\010"
    "atkspeed\030\014 \001(\003\022\r\n\005speed\030\r \001(\003\022\r\n\005curHp\030\016"
    " \001(\003\022\020\n\010curHpMax\030\017 \001(\003\022\017\n\007curMana\030\020 \001(\003\022"
    "\022\n\ncurManaMax\030\021 \001(\003\022\017\n\007stength\030\022 \001(\003\022\014\n\004"
    "rage\030\023 \001(\003\022\035\n\001P\030\024 \001(\0132\022.MsgPB.MsgWorldPo"
    "s\022\035\n\001R\030\025 \001(\0132\022.MsgPB.MsgWorldRot\"\323\001\n\033Msg"
    "InteractionAttrUpdateS2C\022I\n\007msgType\030\001 \001("
    "\0162\017.MsgPB.EMsgType:\'_MSG_INTERACTION_PLA"
    "YER_ATTR_UPDATE_S2C\022\r\n\005objId\030\002 \001(\005\022\r\n\005ig"
    "gid\030\003 \001(\003\022\024\n\014player_iggid\030\004 \001(\003\022\"\n\007attrT"
    "py\030\005 \001(\0162\021.MsgPB.EAttr_Type\022\021\n\tattrValue"
    "\030\006 \001(\003\"{\n\031MsgInteractionOutWorldC2S\022@\n\007m"
    "sgType\030\001 \001(\0162\017.MsgPB.EMsgType:\036_MSG_INTE"
    "RACTION_WORDL_OUT_C2S\022\r\n\005objId\030\002 \001(\005\022\r\n\005"
    "iggid\030\003 \001(\003\"\221\001\n\031MsgInteractionOutWorldS2"
    "C\022@\n\007msgType\030\001 \001(\0162\017.MsgPB.EMsgType:\036_MS"
    "G_INTERACTION_WORDL_OUT_S2C\022\r\n\005objId\030\002 \001"
    "(\005\022\r\n\005iggid\030\003 \001(\003\022\024\n\014player_iggid\030\004 \001(\003\""
    "\276\001\n\025MsgInteractionWalkC2S\022B\n\007msgType\030\001 \001"
    "(\0162\017.MsgPB.EMsgType: _MSG_INTERACTION_PL"
    "AYER_WALK_C2S\022\r\n\005objId\030\002 \001(\005\022\024\n\014player_i"
    "ggid\030\003 \001(\003\022\035\n\001P\030\004 \001(\0132\022.MsgPB.MsgWorldPo"
    "s\022\035\n\001R\030\005 \001(\0132\022.MsgPB.MsgWorldRot\"\276\001\n\025Msg"
    "InteractionWalkS2C\022B\n\007msgType\030\001 \001(\0162\017.Ms"
    "gPB.EMsgType: _MSG_INTERACTION_PLAYER_WA"
    "LK_S2C\022\r\n\005objId\030\002 \001(\005\022\024\n\014player_iggid\030\003 "
    "\001(\003\022\035\n\001P\030\004 \001(\0132\022.MsgPB.MsgWorldPos\022\035\n\001R\030"
    "\005 \001(\0132\022.MsgPB.MsgWorldRot\"\237\001\n\025MsgInterac"
    "tionTurnC2S\022B\n\007msgType\030\001 \001(\0162\017.MsgPB.EMs"
    "gType: _MSG_INTERACTION_PLAYER_TURN_C2S\022"
    "\r\n\005objId\030\002 \001(\005\022\024\n\014player_iggid\030\003 \001(\003\022\035\n\001"
    "R\030\004 \001(\0132\022.MsgPB.MsgWorldRot\"\237\001\n\025MsgInter"
    "actionTurnS2C\022B\n\007msgType\030\001 \001(\0162\017.MsgPB.E"
    "MsgType: _MSG_INTERACTION_PLAYER_TURN_S2"
    "C\022\r\n\005objId\030\002 \001(\005\022\024\n\014player_iggid\030\003 \001(\003\022\035"
    "\n\001R\030\004 \001(\0132\022.MsgPB.MsgWorldRot\"\325\001\n\021MsgInt"
    "eractionC2S\022D\n\007msgType\030\001 \001(\0162\017.MsgPB.EMs"
    "gType:\"_MSG_INTERACTION_PLAYER_ACTION_C2"
    "S\022\r\n\005objId\030\002 \001(\005\022\024\n\014player_iggid\030\003 \001(\003\022("
    "\n\013action_type\030\004 \001(\0162\023.MsgPB.EAction_Type"
    "\022\r\n\005data1\030\005 \001(\005\022\r\n\005data2\030\006 \001(\005\022\r\n\005data3\030"
    "\007 \001(\005\"\355\001\n\021MsgInteractionS2C\022D\n\007msgType\030\001"
    " \001(\0162\017.MsgPB.EMsgType:\"_MSG_INTERACTION_"
    "PLAYER_ACTION_S2C\022\r\n\005objId\030\002 \001(\005\022\024\n\014play"
    "er_iggid\030\003 \001(\003\022\026\n\016is_from_server\030\004 \001(\010\022("
    "\n\013action_type\030\005 \001(\0162\023.MsgPB.EAction_Type"
    "\022\r\n\005data1\030\006 \001(\005\022\r\n\005data2\030\007 \001(\005\022\r\n\005data3\030"
    "\010 \001(\005\"\217\002\n\030MsgMagicEffectAppenceS2C\022L\n\007ms"
    "gType\030\001 \001(\0162\017.MsgPB.EMsgType:*_MSG_INTER"
    "ACTION_PLAYER_EFFECT_APPENCE_S2C\022\r\n\005objI"
    "d\030\002 \001(\005\022\024\n\014player_iggid\030\003 \001(\003\022\024\n\014target_"
    "objId\030\004 \001(\005\022\033\n\023target_player_iggid\030\005 \001(\003"
    "\022\017\n\007skillId\030\006 \001(\005\022\035\n\001P\030\007 \001(\0132\022.MsgPB.Msg"
    "WorldPos\022\035\n\001R\030\010 \001(\0132\022.MsgPB.MsgWorldRot\""
    "\217\002\n\030MsgMagicEffectDispearS2C\022L\n\007msgType\030"
    "\001 \001(\0162\017.MsgPB.EMsgType:*_MSG_INTERACTION"
    "_PLAYER_EFFECT_DISPEAR_S2C\022\r\n\005objId\030\002 \001("
    "\005\022\024\n\014player_iggid\030\003 \001(\003\022\024\n\014target_objId\030"
    "\004 \001(\005\022\033\n\023target_player_iggid\030\005 \001(\003\022\017\n\007sk"
    "illId\030\006 \001(\005\022\035\n\001P\030\007 \001(\0132\022.MsgPB.MsgWorldP"
    "os\022\035\n\001R\030\010 \001(\0132\022.MsgPB.MsgWorldRot*\275\001\n\nEA"
    "ttr_Type\022\027\n\023ATTR_TYPE_ATK_SPEED\020\001\022\027\n\023ATT"
    "R_TYPE_RUN_SPEED\020\002\022\020\n\014ATTR_TYPE_HP\020\003\022\024\n\020"
    "ATTR_TYPE_HP_MAX\020\004\022\022\n\016ATTR_TYPE_MANA\020\005\022\026"
    "\n\022ATTR_TYPE_MANA_MAX\020\006\022\025\n\021ATTR_TYPE_STRE"
    "NTH\020\007\022\022\n\016ATTR_TYPE_RAGE\020\010*\222\002\n\014EAction_Ty"
    "pe\022\026\n\022ACTION_TYPE_ATTACK\020\001\022\034\n\030ACTION_TYP"
    "E_SKILL_ATTACK\020\002\022\025\n\021ACTION_TYPE_HORSE\020\003\022"
    "\026\n\022ACTION_TYPE_WEAPON\020\004\022\033\n\027ACTION_TYPE_H"
    "ORSE_SKILL\020\005\022 \n\034ACTION_TYPE_CONTINUE_S_S"
    "TART\020\006\022\036\n\032ACTION_TYPE_CONTINUE_S_END\020\007\022\036"
    "\n\032ACTION_TYPE_SKILL_F_ATTACK\020\010\022\036\n\032ACTION"
    "_TYPE_SKILL_P_ATTACK\020\t", 3862);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "MsgInteraction.proto", &protobuf_RegisterTypes);
  MsgWorldPos::default_instance_ = new MsgWorldPos();
  MsgWorldRot::default_instance_ = new MsgWorldRot();
  MsgInteractionCreateWorldC2S::default_instance_ = new MsgInteractionCreateWorldC2S();
  MsgInteractionDestroyWorldC2S::default_instance_ = new MsgInteractionDestroyWorldC2S();
  MsgInteractionForceOutWorldS2C::default_instance_ = new MsgInteractionForceOutWorldS2C();
  MsgInteractionInWorldC2S::default_instance_ = new MsgInteractionInWorldC2S();
  MsgInteractionInWorldS2C::default_instance_ = new MsgInteractionInWorldS2C();
  MsgInteractionAttrUpdateS2C::default_instance_ = new MsgInteractionAttrUpdateS2C();
  MsgInteractionOutWorldC2S::default_instance_ = new MsgInteractionOutWorldC2S();
  MsgInteractionOutWorldS2C::default_instance_ = new MsgInteractionOutWorldS2C();
  MsgInteractionWalkC2S::default_instance_ = new MsgInteractionWalkC2S();
  MsgInteractionWalkS2C::default_instance_ = new MsgInteractionWalkS2C();
  MsgInteractionTurnC2S::default_instance_ = new MsgInteractionTurnC2S();
  MsgInteractionTurnS2C::default_instance_ = new MsgInteractionTurnS2C();
  MsgInteractionC2S::default_instance_ = new MsgInteractionC2S();
  MsgInteractionS2C::default_instance_ = new MsgInteractionS2C();
  MsgMagicEffectAppenceS2C::default_instance_ = new MsgMagicEffectAppenceS2C();
  MsgMagicEffectDispearS2C::default_instance_ = new MsgMagicEffectDispearS2C();
  MsgWorldPos::default_instance_->InitAsDefaultInstance();
  MsgWorldRot::default_instance_->InitAsDefaultInstance();
  MsgInteractionCreateWorldC2S::default_instance_->InitAsDefaultInstance();
  MsgInteractionDestroyWorldC2S::default_instance_->InitAsDefaultInstance();
  MsgInteractionForceOutWorldS2C::default_instance_->InitAsDefaultInstance();
  MsgInteractionInWorldC2S::default_instance_->InitAsDefaultInstance();
  MsgInteractionInWorldS2C::default_instance_->InitAsDefaultInstance();
  MsgInteractionAttrUpdateS2C::default_instance_->InitAsDefaultInstance();
  MsgInteractionOutWorldC2S::default_instance_->InitAsDefaultInstance();
  MsgInteractionOutWorldS2C::default_instance_->InitAsDefaultInstance();
  MsgInteractionWalkC2S::default_instance_->InitAsDefaultInstance();
  MsgInteractionWalkS2C::default_instance_->InitAsDefaultInstance();
  MsgInteractionTurnC2S::default_instance_->InitAsDefaultInstance();
  MsgInteractionTurnS2C::default_instance_->InitAsDefaultInstance();
  MsgInteractionC2S::default_instance_->InitAsDefaultInstance();
  MsgInteractionS2C::default_instance_->InitAsDefaultInstance();
  MsgMagicEffectAppenceS2C::default_instance_->InitAsDefaultInstance();
  MsgMagicEffectDispearS2C::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_MsgInteraction_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_MsgInteraction_2eproto {
  StaticDescriptorInitializer_MsgInteraction_2eproto() {
    protobuf_AddDesc_MsgInteraction_2eproto();
  }
} static_descriptor_initializer_MsgInteraction_2eproto_;
const ::google::protobuf::EnumDescriptor* EAttr_Type_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EAttr_Type_descriptor_;
}
bool EAttr_Type_IsValid(int value) {
  switch(value) {
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* EAction_Type_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EAction_Type_descriptor_;
}
bool EAction_Type_IsValid(int value) {
  switch(value) {
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#ifndef _MSC_VER
const int MsgWorldPos::kXFieldNumber;
const int MsgWorldPos::kYFieldNumber;
const int MsgWorldPos::kZFieldNumber;
#endif  // !_MSC_VER

MsgWorldPos::MsgWorldPos()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.MsgWorldPos)
}

void MsgWorldPos::InitAsDefaultInstance() {
}

MsgWorldPos::MsgWorldPos(const MsgWorldPos& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.MsgWorldPos)
}

void MsgWorldPos::SharedCtor() {
  _cached_size_ = 0;
  x_ = GOOGLE_LONGLONG(0);
  y_ = GOOGLE_LONGLONG(0);
  z_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgWorldPos::~MsgWorldPos() {
  // @@protoc_insertion_point(destructor:MsgPB.MsgWorldPos)
  SharedDtor();
}

void MsgWorldPos::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgWorldPos::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgWorldPos::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgWorldPos_descriptor_;
}

const MsgWorldPos& MsgWorldPos::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgInteraction_2eproto();
  return *default_instance_;
}

MsgWorldPos* MsgWorldPos::default_instance_ = NULL;

MsgWorldPos* MsgWorldPos::New() const {
  return new MsgWorldPos;
}

void MsgWorldPos::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<MsgWorldPos*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(x_, z_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgWorldPos::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.MsgWorldPos)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 x = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &x_)));
          set_has_x();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_y;
        break;
      }

      // optional int64 y = 2;
      case 2: {
        if (tag == 16) {
         parse_y:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &y_)));
          set_has_y();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_z;
        break;
      }

      // optional int64 z = 3;
      case 3: {
        if (tag == 24) {
         parse_z:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &z_)));
          set_has_z();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.MsgWorldPos)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.MsgWorldPos)
  return false;
#undef DO_
}

void MsgWorldPos::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.MsgWorldPos)
  // optional int64 x = 1;
  if (has_x()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->x(), output);
  }

  // optional int64 y = 2;
  if (has_y()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->y(), output);
  }

  // optional int64 z = 3;
  if (has_z()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->z(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.MsgWorldPos)
}

::google::protobuf::uint8* MsgWorldPos::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.MsgWorldPos)
  // optional int64 x = 1;
  if (has_x()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->x(), target);
  }

  // optional int64 y = 2;
  if (has_y()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->y(), target);
  }

  // optional int64 z = 3;
  if (has_z()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->z(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.MsgWorldPos)
  return target;
}

int MsgWorldPos::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 x = 1;
    if (has_x()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->x());
    }

    // optional int64 y = 2;
    if (has_y()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->y());
    }

    // optional int64 z = 3;
    if (has_z()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->z());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgWorldPos::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgWorldPos* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgWorldPos*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgWorldPos::MergeFrom(const MsgWorldPos& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_x()) {
      set_x(from.x());
    }
    if (from.has_y()) {
      set_y(from.y());
    }
    if (from.has_z()) {
      set_z(from.z());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgWorldPos::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgWorldPos::CopyFrom(const MsgWorldPos& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgWorldPos::IsInitialized() const {

  return true;
}

void MsgWorldPos::Swap(MsgWorldPos* other) {
  if (other != this) {
    std::swap(x_, other->x_);
    std::swap(y_, other->y_);
    std::swap(z_, other->z_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgWorldPos::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgWorldPos_descriptor_;
  metadata.reflection = MsgWorldPos_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgWorldRot::kRFieldNumber;
const int MsgWorldRot::kPFieldNumber;
const int MsgWorldRot::kYFieldNumber;
#endif  // !_MSC_VER

MsgWorldRot::MsgWorldRot()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.MsgWorldRot)
}

void MsgWorldRot::InitAsDefaultInstance() {
}

MsgWorldRot::MsgWorldRot(const MsgWorldRot& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.MsgWorldRot)
}

void MsgWorldRot::SharedCtor() {
  _cached_size_ = 0;
  r_ = GOOGLE_LONGLONG(0);
  p_ = GOOGLE_LONGLONG(0);
  y_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgWorldRot::~MsgWorldRot() {
  // @@protoc_insertion_point(destructor:MsgPB.MsgWorldRot)
  SharedDtor();
}

void MsgWorldRot::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgWorldRot::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgWorldRot::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgWorldRot_descriptor_;
}

const MsgWorldRot& MsgWorldRot::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgInteraction_2eproto();
  return *default_instance_;
}

MsgWorldRot* MsgWorldRot::default_instance_ = NULL;

MsgWorldRot* MsgWorldRot::New() const {
  return new MsgWorldRot;
}

void MsgWorldRot::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<MsgWorldRot*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(r_, y_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgWorldRot::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.MsgWorldRot)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 R = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &r_)));
          set_has_r();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_P;
        break;
      }

      // optional int64 P = 2;
      case 2: {
        if (tag == 16) {
         parse_P:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &p_)));
          set_has_p();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_Y;
        break;
      }

      // optional int64 Y = 3;
      case 3: {
        if (tag == 24) {
         parse_Y:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &y_)));
          set_has_y();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.MsgWorldRot)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.MsgWorldRot)
  return false;
#undef DO_
}

void MsgWorldRot::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.MsgWorldRot)
  // optional int64 R = 1;
  if (has_r()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->r(), output);
  }

  // optional int64 P = 2;
  if (has_p()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->p(), output);
  }

  // optional int64 Y = 3;
  if (has_y()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->y(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.MsgWorldRot)
}

::google::protobuf::uint8* MsgWorldRot::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.MsgWorldRot)
  // optional int64 R = 1;
  if (has_r()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->r(), target);
  }

  // optional int64 P = 2;
  if (has_p()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->p(), target);
  }

  // optional int64 Y = 3;
  if (has_y()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->y(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.MsgWorldRot)
  return target;
}

int MsgWorldRot::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 R = 1;
    if (has_r()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->r());
    }

    // optional int64 P = 2;
    if (has_p()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->p());
    }

    // optional int64 Y = 3;
    if (has_y()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->y());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgWorldRot::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgWorldRot* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgWorldRot*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgWorldRot::MergeFrom(const MsgWorldRot& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_r()) {
      set_r(from.r());
    }
    if (from.has_p()) {
      set_p(from.p());
    }
    if (from.has_y()) {
      set_y(from.y());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgWorldRot::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgWorldRot::CopyFrom(const MsgWorldRot& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgWorldRot::IsInitialized() const {

  return true;
}

void MsgWorldRot::Swap(MsgWorldRot* other) {
  if (other != this) {
    std::swap(r_, other->r_);
    std::swap(p_, other->p_);
    std::swap(y_, other->y_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgWorldRot::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgWorldRot_descriptor_;
  metadata.reflection = MsgWorldRot_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgInteractionCreateWorldC2S::kMsgTypeFieldNumber;
const int MsgInteractionCreateWorldC2S::kIggidFieldNumber;
#endif  // !_MSC_VER

MsgInteractionCreateWorldC2S::MsgInteractionCreateWorldC2S()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.MsgInteractionCreateWorldC2S)
}

void MsgInteractionCreateWorldC2S::InitAsDefaultInstance() {
}

MsgInteractionCreateWorldC2S::MsgInteractionCreateWorldC2S(const MsgInteractionCreateWorldC2S& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.MsgInteractionCreateWorldC2S)
}

void MsgInteractionCreateWorldC2S::SharedCtor() {
  _cached_size_ = 0;
  msgtype_ = 8000;
  iggid_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgInteractionCreateWorldC2S::~MsgInteractionCreateWorldC2S() {
  // @@protoc_insertion_point(destructor:MsgPB.MsgInteractionCreateWorldC2S)
  SharedDtor();
}

void MsgInteractionCreateWorldC2S::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgInteractionCreateWorldC2S::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgInteractionCreateWorldC2S::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgInteractionCreateWorldC2S_descriptor_;
}

const MsgInteractionCreateWorldC2S& MsgInteractionCreateWorldC2S::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgInteraction_2eproto();
  return *default_instance_;
}

MsgInteractionCreateWorldC2S* MsgInteractionCreateWorldC2S::default_instance_ = NULL;

MsgInteractionCreateWorldC2S* MsgInteractionCreateWorldC2S::New() const {
  return new MsgInteractionCreateWorldC2S;
}

void MsgInteractionCreateWorldC2S::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    msgtype_ = 8000;
    iggid_ = GOOGLE_LONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgInteractionCreateWorldC2S::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.MsgInteractionCreateWorldC2S)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_INTERACTION_WORDL_CREATE_C2S];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::EMsgType_IsValid(value)) {
            set_msgtype(static_cast< ::MsgPB::EMsgType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_iggid;
        break;
      }

      // optional int64 iggid = 2;
      case 2: {
        if (tag == 16) {
         parse_iggid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &iggid_)));
          set_has_iggid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.MsgInteractionCreateWorldC2S)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.MsgInteractionCreateWorldC2S)
  return false;
#undef DO_
}

void MsgInteractionCreateWorldC2S::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.MsgInteractionCreateWorldC2S)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_INTERACTION_WORDL_CREATE_C2S];
  if (has_msgtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->msgtype(), output);
  }

  // optional int64 iggid = 2;
  if (has_iggid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->iggid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.MsgInteractionCreateWorldC2S)
}

::google::protobuf::uint8* MsgInteractionCreateWorldC2S::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.MsgInteractionCreateWorldC2S)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_INTERACTION_WORDL_CREATE_C2S];
  if (has_msgtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->msgtype(), target);
  }

  // optional int64 iggid = 2;
  if (has_iggid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->iggid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.MsgInteractionCreateWorldC2S)
  return target;
}

int MsgInteractionCreateWorldC2S::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_INTERACTION_WORDL_CREATE_C2S];
    if (has_msgtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgtype());
    }

    // optional int64 iggid = 2;
    if (has_iggid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->iggid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgInteractionCreateWorldC2S::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgInteractionCreateWorldC2S* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgInteractionCreateWorldC2S*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgInteractionCreateWorldC2S::MergeFrom(const MsgInteractionCreateWorldC2S& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msgtype()) {
      set_msgtype(from.msgtype());
    }
    if (from.has_iggid()) {
      set_iggid(from.iggid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgInteractionCreateWorldC2S::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgInteractionCreateWorldC2S::CopyFrom(const MsgInteractionCreateWorldC2S& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgInteractionCreateWorldC2S::IsInitialized() const {

  return true;
}

void MsgInteractionCreateWorldC2S::Swap(MsgInteractionCreateWorldC2S* other) {
  if (other != this) {
    std::swap(msgtype_, other->msgtype_);
    std::swap(iggid_, other->iggid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgInteractionCreateWorldC2S::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgInteractionCreateWorldC2S_descriptor_;
  metadata.reflection = MsgInteractionCreateWorldC2S_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgInteractionDestroyWorldC2S::kMsgTypeFieldNumber;
const int MsgInteractionDestroyWorldC2S::kIggidFieldNumber;
#endif  // !_MSC_VER

MsgInteractionDestroyWorldC2S::MsgInteractionDestroyWorldC2S()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.MsgInteractionDestroyWorldC2S)
}

void MsgInteractionDestroyWorldC2S::InitAsDefaultInstance() {
}

MsgInteractionDestroyWorldC2S::MsgInteractionDestroyWorldC2S(const MsgInteractionDestroyWorldC2S& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.MsgInteractionDestroyWorldC2S)
}

void MsgInteractionDestroyWorldC2S::SharedCtor() {
  _cached_size_ = 0;
  msgtype_ = 8001;
  iggid_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgInteractionDestroyWorldC2S::~MsgInteractionDestroyWorldC2S() {
  // @@protoc_insertion_point(destructor:MsgPB.MsgInteractionDestroyWorldC2S)
  SharedDtor();
}

void MsgInteractionDestroyWorldC2S::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgInteractionDestroyWorldC2S::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgInteractionDestroyWorldC2S::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgInteractionDestroyWorldC2S_descriptor_;
}

const MsgInteractionDestroyWorldC2S& MsgInteractionDestroyWorldC2S::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgInteraction_2eproto();
  return *default_instance_;
}

MsgInteractionDestroyWorldC2S* MsgInteractionDestroyWorldC2S::default_instance_ = NULL;

MsgInteractionDestroyWorldC2S* MsgInteractionDestroyWorldC2S::New() const {
  return new MsgInteractionDestroyWorldC2S;
}

void MsgInteractionDestroyWorldC2S::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    msgtype_ = 8001;
    iggid_ = GOOGLE_LONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgInteractionDestroyWorldC2S::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.MsgInteractionDestroyWorldC2S)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_INTERACTION_WORDL_DESTROY_C2S];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::EMsgType_IsValid(value)) {
            set_msgtype(static_cast< ::MsgPB::EMsgType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_iggid;
        break;
      }

      // optional int64 iggid = 2;
      case 2: {
        if (tag == 16) {
         parse_iggid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &iggid_)));
          set_has_iggid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.MsgInteractionDestroyWorldC2S)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.MsgInteractionDestroyWorldC2S)
  return false;
#undef DO_
}

void MsgInteractionDestroyWorldC2S::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.MsgInteractionDestroyWorldC2S)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_INTERACTION_WORDL_DESTROY_C2S];
  if (has_msgtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->msgtype(), output);
  }

  // optional int64 iggid = 2;
  if (has_iggid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->iggid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.MsgInteractionDestroyWorldC2S)
}

::google::protobuf::uint8* MsgInteractionDestroyWorldC2S::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.MsgInteractionDestroyWorldC2S)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_INTERACTION_WORDL_DESTROY_C2S];
  if (has_msgtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->msgtype(), target);
  }

  // optional int64 iggid = 2;
  if (has_iggid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->iggid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.MsgInteractionDestroyWorldC2S)
  return target;
}

int MsgInteractionDestroyWorldC2S::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_INTERACTION_WORDL_DESTROY_C2S];
    if (has_msgtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgtype());
    }

    // optional int64 iggid = 2;
    if (has_iggid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->iggid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgInteractionDestroyWorldC2S::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgInteractionDestroyWorldC2S* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgInteractionDestroyWorldC2S*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgInteractionDestroyWorldC2S::MergeFrom(const MsgInteractionDestroyWorldC2S& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msgtype()) {
      set_msgtype(from.msgtype());
    }
    if (from.has_iggid()) {
      set_iggid(from.iggid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgInteractionDestroyWorldC2S::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgInteractionDestroyWorldC2S::CopyFrom(const MsgInteractionDestroyWorldC2S& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgInteractionDestroyWorldC2S::IsInitialized() const {

  return true;
}

void MsgInteractionDestroyWorldC2S::Swap(MsgInteractionDestroyWorldC2S* other) {
  if (other != this) {
    std::swap(msgtype_, other->msgtype_);
    std::swap(iggid_, other->iggid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgInteractionDestroyWorldC2S::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgInteractionDestroyWorldC2S_descriptor_;
  metadata.reflection = MsgInteractionDestroyWorldC2S_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgInteractionForceOutWorldS2C::kMsgTypeFieldNumber;
const int MsgInteractionForceOutWorldS2C::kIggidFieldNumber;
#endif  // !_MSC_VER

MsgInteractionForceOutWorldS2C::MsgInteractionForceOutWorldS2C()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.MsgInteractionForceOutWorldS2C)
}

void MsgInteractionForceOutWorldS2C::InitAsDefaultInstance() {
}

MsgInteractionForceOutWorldS2C::MsgInteractionForceOutWorldS2C(const MsgInteractionForceOutWorldS2C& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.MsgInteractionForceOutWorldS2C)
}

void MsgInteractionForceOutWorldS2C::SharedCtor() {
  _cached_size_ = 0;
  msgtype_ = 8002;
  iggid_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgInteractionForceOutWorldS2C::~MsgInteractionForceOutWorldS2C() {
  // @@protoc_insertion_point(destructor:MsgPB.MsgInteractionForceOutWorldS2C)
  SharedDtor();
}

void MsgInteractionForceOutWorldS2C::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgInteractionForceOutWorldS2C::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgInteractionForceOutWorldS2C::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgInteractionForceOutWorldS2C_descriptor_;
}

const MsgInteractionForceOutWorldS2C& MsgInteractionForceOutWorldS2C::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgInteraction_2eproto();
  return *default_instance_;
}

MsgInteractionForceOutWorldS2C* MsgInteractionForceOutWorldS2C::default_instance_ = NULL;

MsgInteractionForceOutWorldS2C* MsgInteractionForceOutWorldS2C::New() const {
  return new MsgInteractionForceOutWorldS2C;
}

void MsgInteractionForceOutWorldS2C::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    msgtype_ = 8002;
    iggid_ = GOOGLE_LONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgInteractionForceOutWorldS2C::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.MsgInteractionForceOutWorldS2C)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_INTERACTION_WORDL_FORCE_OUT_S2C];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::EMsgType_IsValid(value)) {
            set_msgtype(static_cast< ::MsgPB::EMsgType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_iggid;
        break;
      }

      // optional int64 iggid = 2;
      case 2: {
        if (tag == 16) {
         parse_iggid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &iggid_)));
          set_has_iggid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.MsgInteractionForceOutWorldS2C)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.MsgInteractionForceOutWorldS2C)
  return false;
#undef DO_
}

void MsgInteractionForceOutWorldS2C::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.MsgInteractionForceOutWorldS2C)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_INTERACTION_WORDL_FORCE_OUT_S2C];
  if (has_msgtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->msgtype(), output);
  }

  // optional int64 iggid = 2;
  if (has_iggid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->iggid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.MsgInteractionForceOutWorldS2C)
}

::google::protobuf::uint8* MsgInteractionForceOutWorldS2C::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.MsgInteractionForceOutWorldS2C)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_INTERACTION_WORDL_FORCE_OUT_S2C];
  if (has_msgtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->msgtype(), target);
  }

  // optional int64 iggid = 2;
  if (has_iggid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->iggid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.MsgInteractionForceOutWorldS2C)
  return target;
}

int MsgInteractionForceOutWorldS2C::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_INTERACTION_WORDL_FORCE_OUT_S2C];
    if (has_msgtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgtype());
    }

    // optional int64 iggid = 2;
    if (has_iggid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->iggid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgInteractionForceOutWorldS2C::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgInteractionForceOutWorldS2C* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgInteractionForceOutWorldS2C*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgInteractionForceOutWorldS2C::MergeFrom(const MsgInteractionForceOutWorldS2C& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msgtype()) {
      set_msgtype(from.msgtype());
    }
    if (from.has_iggid()) {
      set_iggid(from.iggid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgInteractionForceOutWorldS2C::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgInteractionForceOutWorldS2C::CopyFrom(const MsgInteractionForceOutWorldS2C& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgInteractionForceOutWorldS2C::IsInitialized() const {

  return true;
}

void MsgInteractionForceOutWorldS2C::Swap(MsgInteractionForceOutWorldS2C* other) {
  if (other != this) {
    std::swap(msgtype_, other->msgtype_);
    std::swap(iggid_, other->iggid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgInteractionForceOutWorldS2C::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgInteractionForceOutWorldS2C_descriptor_;
  metadata.reflection = MsgInteractionForceOutWorldS2C_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgInteractionInWorldC2S::kMsgTypeFieldNumber;
const int MsgInteractionInWorldC2S::kObjIdFieldNumber;
const int MsgInteractionInWorldC2S::kIggidFieldNumber;
const int MsgInteractionInWorldC2S::kSexFieldNumber;
const int MsgInteractionInWorldC2S::kHorseIdFieldNumber;
const int MsgInteractionInWorldC2S::kWeaponIdFieldNumber;
const int MsgInteractionInWorldC2S::kPFieldNumber;
const int MsgInteractionInWorldC2S::kRFieldNumber;
#endif  // !_MSC_VER

MsgInteractionInWorldC2S::MsgInteractionInWorldC2S()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.MsgInteractionInWorldC2S)
}

void MsgInteractionInWorldC2S::InitAsDefaultInstance() {
  p_ = const_cast< ::MsgPB::MsgWorldPos*>(&::MsgPB::MsgWorldPos::default_instance());
  r_ = const_cast< ::MsgPB::MsgWorldRot*>(&::MsgPB::MsgWorldRot::default_instance());
}

MsgInteractionInWorldC2S::MsgInteractionInWorldC2S(const MsgInteractionInWorldC2S& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.MsgInteractionInWorldC2S)
}

void MsgInteractionInWorldC2S::SharedCtor() {
  _cached_size_ = 0;
  msgtype_ = 8003;
  objid_ = 0;
  iggid_ = GOOGLE_LONGLONG(0);
  sex_ = 0;
  horseid_ = 0;
  weaponid_ = 0;
  p_ = NULL;
  r_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgInteractionInWorldC2S::~MsgInteractionInWorldC2S() {
  // @@protoc_insertion_point(destructor:MsgPB.MsgInteractionInWorldC2S)
  SharedDtor();
}

void MsgInteractionInWorldC2S::SharedDtor() {
  if (this != default_instance_) {
    delete p_;
    delete r_;
  }
}

void MsgInteractionInWorldC2S::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgInteractionInWorldC2S::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgInteractionInWorldC2S_descriptor_;
}

const MsgInteractionInWorldC2S& MsgInteractionInWorldC2S::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgInteraction_2eproto();
  return *default_instance_;
}

MsgInteractionInWorldC2S* MsgInteractionInWorldC2S::default_instance_ = NULL;

MsgInteractionInWorldC2S* MsgInteractionInWorldC2S::New() const {
  return new MsgInteractionInWorldC2S;
}

void MsgInteractionInWorldC2S::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<MsgInteractionInWorldC2S*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 255) {
    ZR_(objid_, horseid_);
    msgtype_ = 8003;
    weaponid_ = 0;
    if (has_p()) {
      if (p_ != NULL) p_->::MsgPB::MsgWorldPos::Clear();
    }
    if (has_r()) {
      if (r_ != NULL) r_->::MsgPB::MsgWorldRot::Clear();
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgInteractionInWorldC2S::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.MsgInteractionInWorldC2S)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_INTERACTION_WORDL_IN_C2S];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::EMsgType_IsValid(value)) {
            set_msgtype(static_cast< ::MsgPB::EMsgType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_objId;
        break;
      }

      // optional int32 objId = 2;
      case 2: {
        if (tag == 16) {
         parse_objId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &objid_)));
          set_has_objid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_iggid;
        break;
      }

      // optional int64 iggid = 3;
      case 3: {
        if (tag == 24) {
         parse_iggid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &iggid_)));
          set_has_iggid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_sex;
        break;
      }

      // optional int32 sex = 4;
      case 4: {
        if (tag == 32) {
         parse_sex:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &sex_)));
          set_has_sex();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_horseId;
        break;
      }

      // optional int32 horseId = 5;
      case 5: {
        if (tag == 40) {
         parse_horseId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &horseid_)));
          set_has_horseid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_weaponId;
        break;
      }

      // optional int32 weaponId = 6;
      case 6: {
        if (tag == 48) {
         parse_weaponId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &weaponid_)));
          set_has_weaponid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_P;
        break;
      }

      // optional .MsgPB.MsgWorldPos P = 7;
      case 7: {
        if (tag == 58) {
         parse_P:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_p()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_R;
        break;
      }

      // optional .MsgPB.MsgWorldRot R = 8;
      case 8: {
        if (tag == 66) {
         parse_R:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_r()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.MsgInteractionInWorldC2S)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.MsgInteractionInWorldC2S)
  return false;
#undef DO_
}

void MsgInteractionInWorldC2S::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.MsgInteractionInWorldC2S)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_INTERACTION_WORDL_IN_C2S];
  if (has_msgtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->msgtype(), output);
  }

  // optional int32 objId = 2;
  if (has_objid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->objid(), output);
  }

  // optional int64 iggid = 3;
  if (has_iggid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->iggid(), output);
  }

  // optional int32 sex = 4;
  if (has_sex()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->sex(), output);
  }

  // optional int32 horseId = 5;
  if (has_horseid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->horseid(), output);
  }

  // optional int32 weaponId = 6;
  if (has_weaponid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->weaponid(), output);
  }

  // optional .MsgPB.MsgWorldPos P = 7;
  if (has_p()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->p(), output);
  }

  // optional .MsgPB.MsgWorldRot R = 8;
  if (has_r()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->r(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.MsgInteractionInWorldC2S)
}

::google::protobuf::uint8* MsgInteractionInWorldC2S::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.MsgInteractionInWorldC2S)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_INTERACTION_WORDL_IN_C2S];
  if (has_msgtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->msgtype(), target);
  }

  // optional int32 objId = 2;
  if (has_objid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->objid(), target);
  }

  // optional int64 iggid = 3;
  if (has_iggid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->iggid(), target);
  }

  // optional int32 sex = 4;
  if (has_sex()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->sex(), target);
  }

  // optional int32 horseId = 5;
  if (has_horseid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->horseid(), target);
  }

  // optional int32 weaponId = 6;
  if (has_weaponid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->weaponid(), target);
  }

  // optional .MsgPB.MsgWorldPos P = 7;
  if (has_p()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        7, this->p(), target);
  }

  // optional .MsgPB.MsgWorldRot R = 8;
  if (has_r()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        8, this->r(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.MsgInteractionInWorldC2S)
  return target;
}

int MsgInteractionInWorldC2S::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_INTERACTION_WORDL_IN_C2S];
    if (has_msgtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgtype());
    }

    // optional int32 objId = 2;
    if (has_objid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->objid());
    }

    // optional int64 iggid = 3;
    if (has_iggid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->iggid());
    }

    // optional int32 sex = 4;
    if (has_sex()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->sex());
    }

    // optional int32 horseId = 5;
    if (has_horseid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->horseid());
    }

    // optional int32 weaponId = 6;
    if (has_weaponid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->weaponid());
    }

    // optional .MsgPB.MsgWorldPos P = 7;
    if (has_p()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->p());
    }

    // optional .MsgPB.MsgWorldRot R = 8;
    if (has_r()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->r());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgInteractionInWorldC2S::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgInteractionInWorldC2S* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgInteractionInWorldC2S*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgInteractionInWorldC2S::MergeFrom(const MsgInteractionInWorldC2S& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msgtype()) {
      set_msgtype(from.msgtype());
    }
    if (from.has_objid()) {
      set_objid(from.objid());
    }
    if (from.has_iggid()) {
      set_iggid(from.iggid());
    }
    if (from.has_sex()) {
      set_sex(from.sex());
    }
    if (from.has_horseid()) {
      set_horseid(from.horseid());
    }
    if (from.has_weaponid()) {
      set_weaponid(from.weaponid());
    }
    if (from.has_p()) {
      mutable_p()->::MsgPB::MsgWorldPos::MergeFrom(from.p());
    }
    if (from.has_r()) {
      mutable_r()->::MsgPB::MsgWorldRot::MergeFrom(from.r());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgInteractionInWorldC2S::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgInteractionInWorldC2S::CopyFrom(const MsgInteractionInWorldC2S& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgInteractionInWorldC2S::IsInitialized() const {

  return true;
}

void MsgInteractionInWorldC2S::Swap(MsgInteractionInWorldC2S* other) {
  if (other != this) {
    std::swap(msgtype_, other->msgtype_);
    std::swap(objid_, other->objid_);
    std::swap(iggid_, other->iggid_);
    std::swap(sex_, other->sex_);
    std::swap(horseid_, other->horseid_);
    std::swap(weaponid_, other->weaponid_);
    std::swap(p_, other->p_);
    std::swap(r_, other->r_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgInteractionInWorldC2S::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgInteractionInWorldC2S_descriptor_;
  metadata.reflection = MsgInteractionInWorldC2S_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgInteractionInWorldS2C::kMsgTypeFieldNumber;
const int MsgInteractionInWorldS2C::kObjIdFieldNumber;
const int MsgInteractionInWorldS2C::kIggidFieldNumber;
const int MsgInteractionInWorldS2C::kPlayerIggidFieldNumber;
const int MsgInteractionInWorldS2C::kTargetIggidFieldNumber;
const int MsgInteractionInWorldS2C::kCampFieldNumber;
const int MsgInteractionInWorldS2C::kSexFieldNumber;
const int MsgInteractionInWorldS2C::kSkincolorFieldNumber;
const int MsgInteractionInWorldS2C::kHorseIdFieldNumber;
const int MsgInteractionInWorldS2C::kWeaponIdFieldNumber;
const int MsgInteractionInWorldS2C::kNicknameFieldNumber;
const int MsgInteractionInWorldS2C::kAtkspeedFieldNumber;
const int MsgInteractionInWorldS2C::kSpeedFieldNumber;
const int MsgInteractionInWorldS2C::kCurHpFieldNumber;
const int MsgInteractionInWorldS2C::kCurHpMaxFieldNumber;
const int MsgInteractionInWorldS2C::kCurManaFieldNumber;
const int MsgInteractionInWorldS2C::kCurManaMaxFieldNumber;
const int MsgInteractionInWorldS2C::kStengthFieldNumber;
const int MsgInteractionInWorldS2C::kRageFieldNumber;
const int MsgInteractionInWorldS2C::kPFieldNumber;
const int MsgInteractionInWorldS2C::kRFieldNumber;
#endif  // !_MSC_VER

MsgInteractionInWorldS2C::MsgInteractionInWorldS2C()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.MsgInteractionInWorldS2C)
}

void MsgInteractionInWorldS2C::InitAsDefaultInstance() {
  p_ = const_cast< ::MsgPB::MsgWorldPos*>(&::MsgPB::MsgWorldPos::default_instance());
  r_ = const_cast< ::MsgPB::MsgWorldRot*>(&::MsgPB::MsgWorldRot::default_instance());
}

MsgInteractionInWorldS2C::MsgInteractionInWorldS2C(const MsgInteractionInWorldS2C& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.MsgInteractionInWorldS2C)
}

void MsgInteractionInWorldS2C::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  msgtype_ = 8004;
  objid_ = 0;
  iggid_ = GOOGLE_LONGLONG(0);
  player_iggid_ = GOOGLE_LONGLONG(0);
  target_iggid_ = GOOGLE_LONGLONG(0);
  camp_ = 0;
  sex_ = 0;
  skincolor_ = 0;
  horseid_ = 0;
  weaponid_ = 0;
  nickname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  atkspeed_ = GOOGLE_LONGLONG(0);
  speed_ = GOOGLE_LONGLONG(0);
  curhp_ = GOOGLE_LONGLONG(0);
  curhpmax_ = GOOGLE_LONGLONG(0);
  curmana_ = GOOGLE_LONGLONG(0);
  curmanamax_ = GOOGLE_LONGLONG(0);
  stength_ = GOOGLE_LONGLONG(0);
  rage_ = GOOGLE_LONGLONG(0);
  p_ = NULL;
  r_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgInteractionInWorldS2C::~MsgInteractionInWorldS2C() {
  // @@protoc_insertion_point(destructor:MsgPB.MsgInteractionInWorldS2C)
  SharedDtor();
}

void MsgInteractionInWorldS2C::SharedDtor() {
  if (nickname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete nickname_;
  }
  if (this != default_instance_) {
    delete p_;
    delete r_;
  }
}

void MsgInteractionInWorldS2C::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgInteractionInWorldS2C::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgInteractionInWorldS2C_descriptor_;
}

const MsgInteractionInWorldS2C& MsgInteractionInWorldS2C::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgInteraction_2eproto();
  return *default_instance_;
}

MsgInteractionInWorldS2C* MsgInteractionInWorldS2C::default_instance_ = NULL;

MsgInteractionInWorldS2C* MsgInteractionInWorldS2C::New() const {
  return new MsgInteractionInWorldS2C;
}

void MsgInteractionInWorldS2C::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<MsgInteractionInWorldS2C*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 255) {
    ZR_(objid_, skincolor_);
    msgtype_ = 8004;
  }
  if (_has_bits_[8 / 32] & 65280) {
    ZR_(atkspeed_, curmana_);
    horseid_ = 0;
    weaponid_ = 0;
    if (has_nickname()) {
      if (nickname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        nickname_->clear();
      }
    }
  }
  if (_has_bits_[16 / 32] & 2031616) {
    ZR_(curmanamax_, rage_);
    if (has_p()) {
      if (p_ != NULL) p_->::MsgPB::MsgWorldPos::Clear();
    }
    if (has_r()) {
      if (r_ != NULL) r_->::MsgPB::MsgWorldRot::Clear();
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgInteractionInWorldS2C::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.MsgInteractionInWorldS2C)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_INTERACTION_WORDL_IN_S2C];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::EMsgType_IsValid(value)) {
            set_msgtype(static_cast< ::MsgPB::EMsgType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_objId;
        break;
      }

      // optional int32 objId = 2;
      case 2: {
        if (tag == 16) {
         parse_objId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &objid_)));
          set_has_objid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_iggid;
        break;
      }

      // optional int64 iggid = 3;
      case 3: {
        if (tag == 24) {
         parse_iggid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &iggid_)));
          set_has_iggid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_player_iggid;
        break;
      }

      // optional int64 player_iggid = 4;
      case 4: {
        if (tag == 32) {
         parse_player_iggid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &player_iggid_)));
          set_has_player_iggid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_target_iggid;
        break;
      }

      // optional int64 target_iggid = 5;
      case 5: {
        if (tag == 40) {
         parse_target_iggid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &target_iggid_)));
          set_has_target_iggid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_camp;
        break;
      }

      // optional int32 camp = 6;
      case 6: {
        if (tag == 48) {
         parse_camp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &camp_)));
          set_has_camp();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_sex;
        break;
      }

      // optional int32 sex = 7;
      case 7: {
        if (tag == 56) {
         parse_sex:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &sex_)));
          set_has_sex();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_skincolor;
        break;
      }

      // optional int32 skincolor = 8;
      case 8: {
        if (tag == 64) {
         parse_skincolor:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &skincolor_)));
          set_has_skincolor();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_horseId;
        break;
      }

      // optional int32 horseId = 9;
      case 9: {
        if (tag == 72) {
         parse_horseId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &horseid_)));
          set_has_horseid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(80)) goto parse_weaponId;
        break;
      }

      // optional int32 weaponId = 10;
      case 10: {
        if (tag == 80) {
         parse_weaponId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &weaponid_)));
          set_has_weaponid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(90)) goto parse_nickname;
        break;
      }

      // optional string nickname = 11;
      case 11: {
        if (tag == 90) {
         parse_nickname:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_nickname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->nickname().data(), this->nickname().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "nickname");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(96)) goto parse_atkspeed;
        break;
      }

      // optional int64 atkspeed = 12;
      case 12: {
        if (tag == 96) {
         parse_atkspeed:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &atkspeed_)));
          set_has_atkspeed();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(104)) goto parse_speed;
        break;
      }

      // optional int64 speed = 13;
      case 13: {
        if (tag == 104) {
         parse_speed:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &speed_)));
          set_has_speed();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(112)) goto parse_curHp;
        break;
      }

      // optional int64 curHp = 14;
      case 14: {
        if (tag == 112) {
         parse_curHp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &curhp_)));
          set_has_curhp();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(120)) goto parse_curHpMax;
        break;
      }

      // optional int64 curHpMax = 15;
      case 15: {
        if (tag == 120) {
         parse_curHpMax:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &curhpmax_)));
          set_has_curhpmax();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(128)) goto parse_curMana;
        break;
      }

      // optional int64 curMana = 16;
      case 16: {
        if (tag == 128) {
         parse_curMana:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &curmana_)));
          set_has_curmana();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(136)) goto parse_curManaMax;
        break;
      }

      // optional int64 curManaMax = 17;
      case 17: {
        if (tag == 136) {
         parse_curManaMax:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &curmanamax_)));
          set_has_curmanamax();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(144)) goto parse_stength;
        break;
      }

      // optional int64 stength = 18;
      case 18: {
        if (tag == 144) {
         parse_stength:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &stength_)));
          set_has_stength();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(152)) goto parse_rage;
        break;
      }

      // optional int64 rage = 19;
      case 19: {
        if (tag == 152) {
         parse_rage:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &rage_)));
          set_has_rage();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(162)) goto parse_P;
        break;
      }

      // optional .MsgPB.MsgWorldPos P = 20;
      case 20: {
        if (tag == 162) {
         parse_P:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_p()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(170)) goto parse_R;
        break;
      }

      // optional .MsgPB.MsgWorldRot R = 21;
      case 21: {
        if (tag == 170) {
         parse_R:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_r()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.MsgInteractionInWorldS2C)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.MsgInteractionInWorldS2C)
  return false;
#undef DO_
}

void MsgInteractionInWorldS2C::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.MsgInteractionInWorldS2C)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_INTERACTION_WORDL_IN_S2C];
  if (has_msgtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->msgtype(), output);
  }

  // optional int32 objId = 2;
  if (has_objid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->objid(), output);
  }

  // optional int64 iggid = 3;
  if (has_iggid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->iggid(), output);
  }

  // optional int64 player_iggid = 4;
  if (has_player_iggid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->player_iggid(), output);
  }

  // optional int64 target_iggid = 5;
  if (has_target_iggid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(5, this->target_iggid(), output);
  }

  // optional int32 camp = 6;
  if (has_camp()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->camp(), output);
  }

  // optional int32 sex = 7;
  if (has_sex()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->sex(), output);
  }

  // optional int32 skincolor = 8;
  if (has_skincolor()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->skincolor(), output);
  }

  // optional int32 horseId = 9;
  if (has_horseid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->horseid(), output);
  }

  // optional int32 weaponId = 10;
  if (has_weaponid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->weaponid(), output);
  }

  // optional string nickname = 11;
  if (has_nickname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->nickname().data(), this->nickname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "nickname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->nickname(), output);
  }

  // optional int64 atkspeed = 12;
  if (has_atkspeed()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(12, this->atkspeed(), output);
  }

  // optional int64 speed = 13;
  if (has_speed()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(13, this->speed(), output);
  }

  // optional int64 curHp = 14;
  if (has_curhp()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(14, this->curhp(), output);
  }

  // optional int64 curHpMax = 15;
  if (has_curhpmax()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(15, this->curhpmax(), output);
  }

  // optional int64 curMana = 16;
  if (has_curmana()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(16, this->curmana(), output);
  }

  // optional int64 curManaMax = 17;
  if (has_curmanamax()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(17, this->curmanamax(), output);
  }

  // optional int64 stength = 18;
  if (has_stength()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(18, this->stength(), output);
  }

  // optional int64 rage = 19;
  if (has_rage()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(19, this->rage(), output);
  }

  // optional .MsgPB.MsgWorldPos P = 20;
  if (has_p()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      20, this->p(), output);
  }

  // optional .MsgPB.MsgWorldRot R = 21;
  if (has_r()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      21, this->r(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.MsgInteractionInWorldS2C)
}

::google::protobuf::uint8* MsgInteractionInWorldS2C::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.MsgInteractionInWorldS2C)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_INTERACTION_WORDL_IN_S2C];
  if (has_msgtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->msgtype(), target);
  }

  // optional int32 objId = 2;
  if (has_objid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->objid(), target);
  }

  // optional int64 iggid = 3;
  if (has_iggid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->iggid(), target);
  }

  // optional int64 player_iggid = 4;
  if (has_player_iggid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->player_iggid(), target);
  }

  // optional int64 target_iggid = 5;
  if (has_target_iggid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(5, this->target_iggid(), target);
  }

  // optional int32 camp = 6;
  if (has_camp()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->camp(), target);
  }

  // optional int32 sex = 7;
  if (has_sex()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->sex(), target);
  }

  // optional int32 skincolor = 8;
  if (has_skincolor()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->skincolor(), target);
  }

  // optional int32 horseId = 9;
  if (has_horseid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->horseid(), target);
  }

  // optional int32 weaponId = 10;
  if (has_weaponid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->weaponid(), target);
  }

  // optional string nickname = 11;
  if (has_nickname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->nickname().data(), this->nickname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "nickname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->nickname(), target);
  }

  // optional int64 atkspeed = 12;
  if (has_atkspeed()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(12, this->atkspeed(), target);
  }

  // optional int64 speed = 13;
  if (has_speed()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(13, this->speed(), target);
  }

  // optional int64 curHp = 14;
  if (has_curhp()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(14, this->curhp(), target);
  }

  // optional int64 curHpMax = 15;
  if (has_curhpmax()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(15, this->curhpmax(), target);
  }

  // optional int64 curMana = 16;
  if (has_curmana()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(16, this->curmana(), target);
  }

  // optional int64 curManaMax = 17;
  if (has_curmanamax()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(17, this->curmanamax(), target);
  }

  // optional int64 stength = 18;
  if (has_stength()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(18, this->stength(), target);
  }

  // optional int64 rage = 19;
  if (has_rage()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(19, this->rage(), target);
  }

  // optional .MsgPB.MsgWorldPos P = 20;
  if (has_p()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        20, this->p(), target);
  }

  // optional .MsgPB.MsgWorldRot R = 21;
  if (has_r()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        21, this->r(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.MsgInteractionInWorldS2C)
  return target;
}

int MsgInteractionInWorldS2C::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_INTERACTION_WORDL_IN_S2C];
    if (has_msgtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgtype());
    }

    // optional int32 objId = 2;
    if (has_objid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->objid());
    }

    // optional int64 iggid = 3;
    if (has_iggid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->iggid());
    }

    // optional int64 player_iggid = 4;
    if (has_player_iggid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->player_iggid());
    }

    // optional int64 target_iggid = 5;
    if (has_target_iggid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->target_iggid());
    }

    // optional int32 camp = 6;
    if (has_camp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->camp());
    }

    // optional int32 sex = 7;
    if (has_sex()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->sex());
    }

    // optional int32 skincolor = 8;
    if (has_skincolor()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->skincolor());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional int32 horseId = 9;
    if (has_horseid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->horseid());
    }

    // optional int32 weaponId = 10;
    if (has_weaponid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->weaponid());
    }

    // optional string nickname = 11;
    if (has_nickname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->nickname());
    }

    // optional int64 atkspeed = 12;
    if (has_atkspeed()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->atkspeed());
    }

    // optional int64 speed = 13;
    if (has_speed()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->speed());
    }

    // optional int64 curHp = 14;
    if (has_curhp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->curhp());
    }

    // optional int64 curHpMax = 15;
    if (has_curhpmax()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->curhpmax());
    }

    // optional int64 curMana = 16;
    if (has_curmana()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->curmana());
    }

  }
  if (_has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    // optional int64 curManaMax = 17;
    if (has_curmanamax()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->curmanamax());
    }

    // optional int64 stength = 18;
    if (has_stength()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->stength());
    }

    // optional int64 rage = 19;
    if (has_rage()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->rage());
    }

    // optional .MsgPB.MsgWorldPos P = 20;
    if (has_p()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->p());
    }

    // optional .MsgPB.MsgWorldRot R = 21;
    if (has_r()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->r());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgInteractionInWorldS2C::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgInteractionInWorldS2C* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgInteractionInWorldS2C*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgInteractionInWorldS2C::MergeFrom(const MsgInteractionInWorldS2C& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msgtype()) {
      set_msgtype(from.msgtype());
    }
    if (from.has_objid()) {
      set_objid(from.objid());
    }
    if (from.has_iggid()) {
      set_iggid(from.iggid());
    }
    if (from.has_player_iggid()) {
      set_player_iggid(from.player_iggid());
    }
    if (from.has_target_iggid()) {
      set_target_iggid(from.target_iggid());
    }
    if (from.has_camp()) {
      set_camp(from.camp());
    }
    if (from.has_sex()) {
      set_sex(from.sex());
    }
    if (from.has_skincolor()) {
      set_skincolor(from.skincolor());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_horseid()) {
      set_horseid(from.horseid());
    }
    if (from.has_weaponid()) {
      set_weaponid(from.weaponid());
    }
    if (from.has_nickname()) {
      set_nickname(from.nickname());
    }
    if (from.has_atkspeed()) {
      set_atkspeed(from.atkspeed());
    }
    if (from.has_speed()) {
      set_speed(from.speed());
    }
    if (from.has_curhp()) {
      set_curhp(from.curhp());
    }
    if (from.has_curhpmax()) {
      set_curhpmax(from.curhpmax());
    }
    if (from.has_curmana()) {
      set_curmana(from.curmana());
    }
  }
  if (from._has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    if (from.has_curmanamax()) {
      set_curmanamax(from.curmanamax());
    }
    if (from.has_stength()) {
      set_stength(from.stength());
    }
    if (from.has_rage()) {
      set_rage(from.rage());
    }
    if (from.has_p()) {
      mutable_p()->::MsgPB::MsgWorldPos::MergeFrom(from.p());
    }
    if (from.has_r()) {
      mutable_r()->::MsgPB::MsgWorldRot::MergeFrom(from.r());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgInteractionInWorldS2C::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgInteractionInWorldS2C::CopyFrom(const MsgInteractionInWorldS2C& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgInteractionInWorldS2C::IsInitialized() const {

  return true;
}

void MsgInteractionInWorldS2C::Swap(MsgInteractionInWorldS2C* other) {
  if (other != this) {
    std::swap(msgtype_, other->msgtype_);
    std::swap(objid_, other->objid_);
    std::swap(iggid_, other->iggid_);
    std::swap(player_iggid_, other->player_iggid_);
    std::swap(target_iggid_, other->target_iggid_);
    std::swap(camp_, other->camp_);
    std::swap(sex_, other->sex_);
    std::swap(skincolor_, other->skincolor_);
    std::swap(horseid_, other->horseid_);
    std::swap(weaponid_, other->weaponid_);
    std::swap(nickname_, other->nickname_);
    std::swap(atkspeed_, other->atkspeed_);
    std::swap(speed_, other->speed_);
    std::swap(curhp_, other->curhp_);
    std::swap(curhpmax_, other->curhpmax_);
    std::swap(curmana_, other->curmana_);
    std::swap(curmanamax_, other->curmanamax_);
    std::swap(stength_, other->stength_);
    std::swap(rage_, other->rage_);
    std::swap(p_, other->p_);
    std::swap(r_, other->r_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgInteractionInWorldS2C::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgInteractionInWorldS2C_descriptor_;
  metadata.reflection = MsgInteractionInWorldS2C_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgInteractionAttrUpdateS2C::kMsgTypeFieldNumber;
const int MsgInteractionAttrUpdateS2C::kObjIdFieldNumber;
const int MsgInteractionAttrUpdateS2C::kIggidFieldNumber;
const int MsgInteractionAttrUpdateS2C::kPlayerIggidFieldNumber;
const int MsgInteractionAttrUpdateS2C::kAttrTpyFieldNumber;
const int MsgInteractionAttrUpdateS2C::kAttrValueFieldNumber;
#endif  // !_MSC_VER

MsgInteractionAttrUpdateS2C::MsgInteractionAttrUpdateS2C()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.MsgInteractionAttrUpdateS2C)
}

void MsgInteractionAttrUpdateS2C::InitAsDefaultInstance() {
}

MsgInteractionAttrUpdateS2C::MsgInteractionAttrUpdateS2C(const MsgInteractionAttrUpdateS2C& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.MsgInteractionAttrUpdateS2C)
}

void MsgInteractionAttrUpdateS2C::SharedCtor() {
  _cached_size_ = 0;
  msgtype_ = 8016;
  objid_ = 0;
  iggid_ = GOOGLE_LONGLONG(0);
  player_iggid_ = GOOGLE_LONGLONG(0);
  attrtpy_ = 1;
  attrvalue_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgInteractionAttrUpdateS2C::~MsgInteractionAttrUpdateS2C() {
  // @@protoc_insertion_point(destructor:MsgPB.MsgInteractionAttrUpdateS2C)
  SharedDtor();
}

void MsgInteractionAttrUpdateS2C::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgInteractionAttrUpdateS2C::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgInteractionAttrUpdateS2C::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgInteractionAttrUpdateS2C_descriptor_;
}

const MsgInteractionAttrUpdateS2C& MsgInteractionAttrUpdateS2C::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgInteraction_2eproto();
  return *default_instance_;
}

MsgInteractionAttrUpdateS2C* MsgInteractionAttrUpdateS2C::default_instance_ = NULL;

MsgInteractionAttrUpdateS2C* MsgInteractionAttrUpdateS2C::New() const {
  return new MsgInteractionAttrUpdateS2C;
}

void MsgInteractionAttrUpdateS2C::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<MsgInteractionAttrUpdateS2C*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 63) {
    ZR_(objid_, attrvalue_);
    msgtype_ = 8016;
    attrtpy_ = 1;
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgInteractionAttrUpdateS2C::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.MsgInteractionAttrUpdateS2C)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_INTERACTION_PLAYER_ATTR_UPDATE_S2C];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::EMsgType_IsValid(value)) {
            set_msgtype(static_cast< ::MsgPB::EMsgType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_objId;
        break;
      }

      // optional int32 objId = 2;
      case 2: {
        if (tag == 16) {
         parse_objId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &objid_)));
          set_has_objid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_iggid;
        break;
      }

      // optional int64 iggid = 3;
      case 3: {
        if (tag == 24) {
         parse_iggid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &iggid_)));
          set_has_iggid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_player_iggid;
        break;
      }

      // optional int64 player_iggid = 4;
      case 4: {
        if (tag == 32) {
         parse_player_iggid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &player_iggid_)));
          set_has_player_iggid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_attrTpy;
        break;
      }

      // optional .MsgPB.EAttr_Type attrTpy = 5;
      case 5: {
        if (tag == 40) {
         parse_attrTpy:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::EAttr_Type_IsValid(value)) {
            set_attrtpy(static_cast< ::MsgPB::EAttr_Type >(value));
          } else {
            mutable_unknown_fields()->AddVarint(5, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_attrValue;
        break;
      }

      // optional int64 attrValue = 6;
      case 6: {
        if (tag == 48) {
         parse_attrValue:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &attrvalue_)));
          set_has_attrvalue();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.MsgInteractionAttrUpdateS2C)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.MsgInteractionAttrUpdateS2C)
  return false;
#undef DO_
}

void MsgInteractionAttrUpdateS2C::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.MsgInteractionAttrUpdateS2C)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_INTERACTION_PLAYER_ATTR_UPDATE_S2C];
  if (has_msgtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->msgtype(), output);
  }

  // optional int32 objId = 2;
  if (has_objid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->objid(), output);
  }

  // optional int64 iggid = 3;
  if (has_iggid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->iggid(), output);
  }

  // optional int64 player_iggid = 4;
  if (has_player_iggid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->player_iggid(), output);
  }

  // optional .MsgPB.EAttr_Type attrTpy = 5;
  if (has_attrtpy()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      5, this->attrtpy(), output);
  }

  // optional int64 attrValue = 6;
  if (has_attrvalue()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(6, this->attrvalue(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.MsgInteractionAttrUpdateS2C)
}

::google::protobuf::uint8* MsgInteractionAttrUpdateS2C::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.MsgInteractionAttrUpdateS2C)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_INTERACTION_PLAYER_ATTR_UPDATE_S2C];
  if (has_msgtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->msgtype(), target);
  }

  // optional int32 objId = 2;
  if (has_objid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->objid(), target);
  }

  // optional int64 iggid = 3;
  if (has_iggid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->iggid(), target);
  }

  // optional int64 player_iggid = 4;
  if (has_player_iggid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->player_iggid(), target);
  }

  // optional .MsgPB.EAttr_Type attrTpy = 5;
  if (has_attrtpy()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      5, this->attrtpy(), target);
  }

  // optional int64 attrValue = 6;
  if (has_attrvalue()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(6, this->attrvalue(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.MsgInteractionAttrUpdateS2C)
  return target;
}

int MsgInteractionAttrUpdateS2C::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_INTERACTION_PLAYER_ATTR_UPDATE_S2C];
    if (has_msgtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgtype());
    }

    // optional int32 objId = 2;
    if (has_objid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->objid());
    }

    // optional int64 iggid = 3;
    if (has_iggid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->iggid());
    }

    // optional int64 player_iggid = 4;
    if (has_player_iggid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->player_iggid());
    }

    // optional .MsgPB.EAttr_Type attrTpy = 5;
    if (has_attrtpy()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->attrtpy());
    }

    // optional int64 attrValue = 6;
    if (has_attrvalue()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->attrvalue());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgInteractionAttrUpdateS2C::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgInteractionAttrUpdateS2C* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgInteractionAttrUpdateS2C*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgInteractionAttrUpdateS2C::MergeFrom(const MsgInteractionAttrUpdateS2C& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msgtype()) {
      set_msgtype(from.msgtype());
    }
    if (from.has_objid()) {
      set_objid(from.objid());
    }
    if (from.has_iggid()) {
      set_iggid(from.iggid());
    }
    if (from.has_player_iggid()) {
      set_player_iggid(from.player_iggid());
    }
    if (from.has_attrtpy()) {
      set_attrtpy(from.attrtpy());
    }
    if (from.has_attrvalue()) {
      set_attrvalue(from.attrvalue());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgInteractionAttrUpdateS2C::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgInteractionAttrUpdateS2C::CopyFrom(const MsgInteractionAttrUpdateS2C& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgInteractionAttrUpdateS2C::IsInitialized() const {

  return true;
}

void MsgInteractionAttrUpdateS2C::Swap(MsgInteractionAttrUpdateS2C* other) {
  if (other != this) {
    std::swap(msgtype_, other->msgtype_);
    std::swap(objid_, other->objid_);
    std::swap(iggid_, other->iggid_);
    std::swap(player_iggid_, other->player_iggid_);
    std::swap(attrtpy_, other->attrtpy_);
    std::swap(attrvalue_, other->attrvalue_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgInteractionAttrUpdateS2C::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgInteractionAttrUpdateS2C_descriptor_;
  metadata.reflection = MsgInteractionAttrUpdateS2C_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgInteractionOutWorldC2S::kMsgTypeFieldNumber;
const int MsgInteractionOutWorldC2S::kObjIdFieldNumber;
const int MsgInteractionOutWorldC2S::kIggidFieldNumber;
#endif  // !_MSC_VER

MsgInteractionOutWorldC2S::MsgInteractionOutWorldC2S()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.MsgInteractionOutWorldC2S)
}

void MsgInteractionOutWorldC2S::InitAsDefaultInstance() {
}

MsgInteractionOutWorldC2S::MsgInteractionOutWorldC2S(const MsgInteractionOutWorldC2S& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.MsgInteractionOutWorldC2S)
}

void MsgInteractionOutWorldC2S::SharedCtor() {
  _cached_size_ = 0;
  msgtype_ = 8005;
  objid_ = 0;
  iggid_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgInteractionOutWorldC2S::~MsgInteractionOutWorldC2S() {
  // @@protoc_insertion_point(destructor:MsgPB.MsgInteractionOutWorldC2S)
  SharedDtor();
}

void MsgInteractionOutWorldC2S::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgInteractionOutWorldC2S::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgInteractionOutWorldC2S::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgInteractionOutWorldC2S_descriptor_;
}

const MsgInteractionOutWorldC2S& MsgInteractionOutWorldC2S::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgInteraction_2eproto();
  return *default_instance_;
}

MsgInteractionOutWorldC2S* MsgInteractionOutWorldC2S::default_instance_ = NULL;

MsgInteractionOutWorldC2S* MsgInteractionOutWorldC2S::New() const {
  return new MsgInteractionOutWorldC2S;
}

void MsgInteractionOutWorldC2S::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<MsgInteractionOutWorldC2S*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 7) {
    ZR_(objid_, iggid_);
    msgtype_ = 8005;
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgInteractionOutWorldC2S::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.MsgInteractionOutWorldC2S)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_INTERACTION_WORDL_OUT_C2S];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::EMsgType_IsValid(value)) {
            set_msgtype(static_cast< ::MsgPB::EMsgType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_objId;
        break;
      }

      // optional int32 objId = 2;
      case 2: {
        if (tag == 16) {
         parse_objId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &objid_)));
          set_has_objid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_iggid;
        break;
      }

      // optional int64 iggid = 3;
      case 3: {
        if (tag == 24) {
         parse_iggid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &iggid_)));
          set_has_iggid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.MsgInteractionOutWorldC2S)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.MsgInteractionOutWorldC2S)
  return false;
#undef DO_
}

void MsgInteractionOutWorldC2S::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.MsgInteractionOutWorldC2S)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_INTERACTION_WORDL_OUT_C2S];
  if (has_msgtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->msgtype(), output);
  }

  // optional int32 objId = 2;
  if (has_objid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->objid(), output);
  }

  // optional int64 iggid = 3;
  if (has_iggid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->iggid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.MsgInteractionOutWorldC2S)
}

::google::protobuf::uint8* MsgInteractionOutWorldC2S::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.MsgInteractionOutWorldC2S)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_INTERACTION_WORDL_OUT_C2S];
  if (has_msgtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->msgtype(), target);
  }

  // optional int32 objId = 2;
  if (has_objid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->objid(), target);
  }

  // optional int64 iggid = 3;
  if (has_iggid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->iggid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.MsgInteractionOutWorldC2S)
  return target;
}

int MsgInteractionOutWorldC2S::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_INTERACTION_WORDL_OUT_C2S];
    if (has_msgtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgtype());
    }

    // optional int32 objId = 2;
    if (has_objid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->objid());
    }

    // optional int64 iggid = 3;
    if (has_iggid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->iggid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgInteractionOutWorldC2S::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgInteractionOutWorldC2S* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgInteractionOutWorldC2S*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgInteractionOutWorldC2S::MergeFrom(const MsgInteractionOutWorldC2S& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msgtype()) {
      set_msgtype(from.msgtype());
    }
    if (from.has_objid()) {
      set_objid(from.objid());
    }
    if (from.has_iggid()) {
      set_iggid(from.iggid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgInteractionOutWorldC2S::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgInteractionOutWorldC2S::CopyFrom(const MsgInteractionOutWorldC2S& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgInteractionOutWorldC2S::IsInitialized() const {

  return true;
}

void MsgInteractionOutWorldC2S::Swap(MsgInteractionOutWorldC2S* other) {
  if (other != this) {
    std::swap(msgtype_, other->msgtype_);
    std::swap(objid_, other->objid_);
    std::swap(iggid_, other->iggid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgInteractionOutWorldC2S::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgInteractionOutWorldC2S_descriptor_;
  metadata.reflection = MsgInteractionOutWorldC2S_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgInteractionOutWorldS2C::kMsgTypeFieldNumber;
const int MsgInteractionOutWorldS2C::kObjIdFieldNumber;
const int MsgInteractionOutWorldS2C::kIggidFieldNumber;
const int MsgInteractionOutWorldS2C::kPlayerIggidFieldNumber;
#endif  // !_MSC_VER

MsgInteractionOutWorldS2C::MsgInteractionOutWorldS2C()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.MsgInteractionOutWorldS2C)
}

void MsgInteractionOutWorldS2C::InitAsDefaultInstance() {
}

MsgInteractionOutWorldS2C::MsgInteractionOutWorldS2C(const MsgInteractionOutWorldS2C& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.MsgInteractionOutWorldS2C)
}

void MsgInteractionOutWorldS2C::SharedCtor() {
  _cached_size_ = 0;
  msgtype_ = 8006;
  objid_ = 0;
  iggid_ = GOOGLE_LONGLONG(0);
  player_iggid_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgInteractionOutWorldS2C::~MsgInteractionOutWorldS2C() {
  // @@protoc_insertion_point(destructor:MsgPB.MsgInteractionOutWorldS2C)
  SharedDtor();
}

void MsgInteractionOutWorldS2C::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgInteractionOutWorldS2C::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgInteractionOutWorldS2C::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgInteractionOutWorldS2C_descriptor_;
}

const MsgInteractionOutWorldS2C& MsgInteractionOutWorldS2C::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgInteraction_2eproto();
  return *default_instance_;
}

MsgInteractionOutWorldS2C* MsgInteractionOutWorldS2C::default_instance_ = NULL;

MsgInteractionOutWorldS2C* MsgInteractionOutWorldS2C::New() const {
  return new MsgInteractionOutWorldS2C;
}

void MsgInteractionOutWorldS2C::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<MsgInteractionOutWorldS2C*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 15) {
    ZR_(objid_, player_iggid_);
    msgtype_ = 8006;
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgInteractionOutWorldS2C::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.MsgInteractionOutWorldS2C)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_INTERACTION_WORDL_OUT_S2C];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::EMsgType_IsValid(value)) {
            set_msgtype(static_cast< ::MsgPB::EMsgType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_objId;
        break;
      }

      // optional int32 objId = 2;
      case 2: {
        if (tag == 16) {
         parse_objId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &objid_)));
          set_has_objid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_iggid;
        break;
      }

      // optional int64 iggid = 3;
      case 3: {
        if (tag == 24) {
         parse_iggid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &iggid_)));
          set_has_iggid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_player_iggid;
        break;
      }

      // optional int64 player_iggid = 4;
      case 4: {
        if (tag == 32) {
         parse_player_iggid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &player_iggid_)));
          set_has_player_iggid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.MsgInteractionOutWorldS2C)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.MsgInteractionOutWorldS2C)
  return false;
#undef DO_
}

void MsgInteractionOutWorldS2C::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.MsgInteractionOutWorldS2C)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_INTERACTION_WORDL_OUT_S2C];
  if (has_msgtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->msgtype(), output);
  }

  // optional int32 objId = 2;
  if (has_objid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->objid(), output);
  }

  // optional int64 iggid = 3;
  if (has_iggid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->iggid(), output);
  }

  // optional int64 player_iggid = 4;
  if (has_player_iggid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->player_iggid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.MsgInteractionOutWorldS2C)
}

::google::protobuf::uint8* MsgInteractionOutWorldS2C::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.MsgInteractionOutWorldS2C)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_INTERACTION_WORDL_OUT_S2C];
  if (has_msgtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->msgtype(), target);
  }

  // optional int32 objId = 2;
  if (has_objid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->objid(), target);
  }

  // optional int64 iggid = 3;
  if (has_iggid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->iggid(), target);
  }

  // optional int64 player_iggid = 4;
  if (has_player_iggid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->player_iggid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.MsgInteractionOutWorldS2C)
  return target;
}

int MsgInteractionOutWorldS2C::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_INTERACTION_WORDL_OUT_S2C];
    if (has_msgtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgtype());
    }

    // optional int32 objId = 2;
    if (has_objid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->objid());
    }

    // optional int64 iggid = 3;
    if (has_iggid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->iggid());
    }

    // optional int64 player_iggid = 4;
    if (has_player_iggid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->player_iggid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgInteractionOutWorldS2C::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgInteractionOutWorldS2C* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgInteractionOutWorldS2C*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgInteractionOutWorldS2C::MergeFrom(const MsgInteractionOutWorldS2C& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msgtype()) {
      set_msgtype(from.msgtype());
    }
    if (from.has_objid()) {
      set_objid(from.objid());
    }
    if (from.has_iggid()) {
      set_iggid(from.iggid());
    }
    if (from.has_player_iggid()) {
      set_player_iggid(from.player_iggid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgInteractionOutWorldS2C::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgInteractionOutWorldS2C::CopyFrom(const MsgInteractionOutWorldS2C& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgInteractionOutWorldS2C::IsInitialized() const {

  return true;
}

void MsgInteractionOutWorldS2C::Swap(MsgInteractionOutWorldS2C* other) {
  if (other != this) {
    std::swap(msgtype_, other->msgtype_);
    std::swap(objid_, other->objid_);
    std::swap(iggid_, other->iggid_);
    std::swap(player_iggid_, other->player_iggid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgInteractionOutWorldS2C::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgInteractionOutWorldS2C_descriptor_;
  metadata.reflection = MsgInteractionOutWorldS2C_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgInteractionWalkC2S::kMsgTypeFieldNumber;
const int MsgInteractionWalkC2S::kObjIdFieldNumber;
const int MsgInteractionWalkC2S::kPlayerIggidFieldNumber;
const int MsgInteractionWalkC2S::kPFieldNumber;
const int MsgInteractionWalkC2S::kRFieldNumber;
#endif  // !_MSC_VER

MsgInteractionWalkC2S::MsgInteractionWalkC2S()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.MsgInteractionWalkC2S)
}

void MsgInteractionWalkC2S::InitAsDefaultInstance() {
  p_ = const_cast< ::MsgPB::MsgWorldPos*>(&::MsgPB::MsgWorldPos::default_instance());
  r_ = const_cast< ::MsgPB::MsgWorldRot*>(&::MsgPB::MsgWorldRot::default_instance());
}

MsgInteractionWalkC2S::MsgInteractionWalkC2S(const MsgInteractionWalkC2S& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.MsgInteractionWalkC2S)
}

void MsgInteractionWalkC2S::SharedCtor() {
  _cached_size_ = 0;
  msgtype_ = 8007;
  objid_ = 0;
  player_iggid_ = GOOGLE_LONGLONG(0);
  p_ = NULL;
  r_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgInteractionWalkC2S::~MsgInteractionWalkC2S() {
  // @@protoc_insertion_point(destructor:MsgPB.MsgInteractionWalkC2S)
  SharedDtor();
}

void MsgInteractionWalkC2S::SharedDtor() {
  if (this != default_instance_) {
    delete p_;
    delete r_;
  }
}

void MsgInteractionWalkC2S::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgInteractionWalkC2S::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgInteractionWalkC2S_descriptor_;
}

const MsgInteractionWalkC2S& MsgInteractionWalkC2S::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgInteraction_2eproto();
  return *default_instance_;
}

MsgInteractionWalkC2S* MsgInteractionWalkC2S::default_instance_ = NULL;

MsgInteractionWalkC2S* MsgInteractionWalkC2S::New() const {
  return new MsgInteractionWalkC2S;
}

void MsgInteractionWalkC2S::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<MsgInteractionWalkC2S*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 31) {
    ZR_(objid_, player_iggid_);
    msgtype_ = 8007;
    if (has_p()) {
      if (p_ != NULL) p_->::MsgPB::MsgWorldPos::Clear();
    }
    if (has_r()) {
      if (r_ != NULL) r_->::MsgPB::MsgWorldRot::Clear();
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgInteractionWalkC2S::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.MsgInteractionWalkC2S)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_INTERACTION_PLAYER_WALK_C2S];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::EMsgType_IsValid(value)) {
            set_msgtype(static_cast< ::MsgPB::EMsgType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_objId;
        break;
      }

      // optional int32 objId = 2;
      case 2: {
        if (tag == 16) {
         parse_objId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &objid_)));
          set_has_objid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_player_iggid;
        break;
      }

      // optional int64 player_iggid = 3;
      case 3: {
        if (tag == 24) {
         parse_player_iggid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &player_iggid_)));
          set_has_player_iggid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_P;
        break;
      }

      // optional .MsgPB.MsgWorldPos P = 4;
      case 4: {
        if (tag == 34) {
         parse_P:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_p()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_R;
        break;
      }

      // optional .MsgPB.MsgWorldRot R = 5;
      case 5: {
        if (tag == 42) {
         parse_R:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_r()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.MsgInteractionWalkC2S)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.MsgInteractionWalkC2S)
  return false;
#undef DO_
}

void MsgInteractionWalkC2S::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.MsgInteractionWalkC2S)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_INTERACTION_PLAYER_WALK_C2S];
  if (has_msgtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->msgtype(), output);
  }

  // optional int32 objId = 2;
  if (has_objid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->objid(), output);
  }

  // optional int64 player_iggid = 3;
  if (has_player_iggid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->player_iggid(), output);
  }

  // optional .MsgPB.MsgWorldPos P = 4;
  if (has_p()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->p(), output);
  }

  // optional .MsgPB.MsgWorldRot R = 5;
  if (has_r()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->r(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.MsgInteractionWalkC2S)
}

::google::protobuf::uint8* MsgInteractionWalkC2S::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.MsgInteractionWalkC2S)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_INTERACTION_PLAYER_WALK_C2S];
  if (has_msgtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->msgtype(), target);
  }

  // optional int32 objId = 2;
  if (has_objid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->objid(), target);
  }

  // optional int64 player_iggid = 3;
  if (has_player_iggid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->player_iggid(), target);
  }

  // optional .MsgPB.MsgWorldPos P = 4;
  if (has_p()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->p(), target);
  }

  // optional .MsgPB.MsgWorldRot R = 5;
  if (has_r()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->r(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.MsgInteractionWalkC2S)
  return target;
}

int MsgInteractionWalkC2S::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_INTERACTION_PLAYER_WALK_C2S];
    if (has_msgtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgtype());
    }

    // optional int32 objId = 2;
    if (has_objid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->objid());
    }

    // optional int64 player_iggid = 3;
    if (has_player_iggid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->player_iggid());
    }

    // optional .MsgPB.MsgWorldPos P = 4;
    if (has_p()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->p());
    }

    // optional .MsgPB.MsgWorldRot R = 5;
    if (has_r()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->r());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgInteractionWalkC2S::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgInteractionWalkC2S* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgInteractionWalkC2S*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgInteractionWalkC2S::MergeFrom(const MsgInteractionWalkC2S& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msgtype()) {
      set_msgtype(from.msgtype());
    }
    if (from.has_objid()) {
      set_objid(from.objid());
    }
    if (from.has_player_iggid()) {
      set_player_iggid(from.player_iggid());
    }
    if (from.has_p()) {
      mutable_p()->::MsgPB::MsgWorldPos::MergeFrom(from.p());
    }
    if (from.has_r()) {
      mutable_r()->::MsgPB::MsgWorldRot::MergeFrom(from.r());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgInteractionWalkC2S::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgInteractionWalkC2S::CopyFrom(const MsgInteractionWalkC2S& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgInteractionWalkC2S::IsInitialized() const {

  return true;
}

void MsgInteractionWalkC2S::Swap(MsgInteractionWalkC2S* other) {
  if (other != this) {
    std::swap(msgtype_, other->msgtype_);
    std::swap(objid_, other->objid_);
    std::swap(player_iggid_, other->player_iggid_);
    std::swap(p_, other->p_);
    std::swap(r_, other->r_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgInteractionWalkC2S::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgInteractionWalkC2S_descriptor_;
  metadata.reflection = MsgInteractionWalkC2S_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgInteractionWalkS2C::kMsgTypeFieldNumber;
const int MsgInteractionWalkS2C::kObjIdFieldNumber;
const int MsgInteractionWalkS2C::kPlayerIggidFieldNumber;
const int MsgInteractionWalkS2C::kPFieldNumber;
const int MsgInteractionWalkS2C::kRFieldNumber;
#endif  // !_MSC_VER

MsgInteractionWalkS2C::MsgInteractionWalkS2C()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.MsgInteractionWalkS2C)
}

void MsgInteractionWalkS2C::InitAsDefaultInstance() {
  p_ = const_cast< ::MsgPB::MsgWorldPos*>(&::MsgPB::MsgWorldPos::default_instance());
  r_ = const_cast< ::MsgPB::MsgWorldRot*>(&::MsgPB::MsgWorldRot::default_instance());
}

MsgInteractionWalkS2C::MsgInteractionWalkS2C(const MsgInteractionWalkS2C& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.MsgInteractionWalkS2C)
}

void MsgInteractionWalkS2C::SharedCtor() {
  _cached_size_ = 0;
  msgtype_ = 8008;
  objid_ = 0;
  player_iggid_ = GOOGLE_LONGLONG(0);
  p_ = NULL;
  r_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgInteractionWalkS2C::~MsgInteractionWalkS2C() {
  // @@protoc_insertion_point(destructor:MsgPB.MsgInteractionWalkS2C)
  SharedDtor();
}

void MsgInteractionWalkS2C::SharedDtor() {
  if (this != default_instance_) {
    delete p_;
    delete r_;
  }
}

void MsgInteractionWalkS2C::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgInteractionWalkS2C::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgInteractionWalkS2C_descriptor_;
}

const MsgInteractionWalkS2C& MsgInteractionWalkS2C::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgInteraction_2eproto();
  return *default_instance_;
}

MsgInteractionWalkS2C* MsgInteractionWalkS2C::default_instance_ = NULL;

MsgInteractionWalkS2C* MsgInteractionWalkS2C::New() const {
  return new MsgInteractionWalkS2C;
}

void MsgInteractionWalkS2C::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<MsgInteractionWalkS2C*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 31) {
    ZR_(objid_, player_iggid_);
    msgtype_ = 8008;
    if (has_p()) {
      if (p_ != NULL) p_->::MsgPB::MsgWorldPos::Clear();
    }
    if (has_r()) {
      if (r_ != NULL) r_->::MsgPB::MsgWorldRot::Clear();
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgInteractionWalkS2C::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.MsgInteractionWalkS2C)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_INTERACTION_PLAYER_WALK_S2C];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::EMsgType_IsValid(value)) {
            set_msgtype(static_cast< ::MsgPB::EMsgType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_objId;
        break;
      }

      // optional int32 objId = 2;
      case 2: {
        if (tag == 16) {
         parse_objId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &objid_)));
          set_has_objid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_player_iggid;
        break;
      }

      // optional int64 player_iggid = 3;
      case 3: {
        if (tag == 24) {
         parse_player_iggid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &player_iggid_)));
          set_has_player_iggid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_P;
        break;
      }

      // optional .MsgPB.MsgWorldPos P = 4;
      case 4: {
        if (tag == 34) {
         parse_P:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_p()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_R;
        break;
      }

      // optional .MsgPB.MsgWorldRot R = 5;
      case 5: {
        if (tag == 42) {
         parse_R:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_r()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.MsgInteractionWalkS2C)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.MsgInteractionWalkS2C)
  return false;
#undef DO_
}

void MsgInteractionWalkS2C::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.MsgInteractionWalkS2C)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_INTERACTION_PLAYER_WALK_S2C];
  if (has_msgtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->msgtype(), output);
  }

  // optional int32 objId = 2;
  if (has_objid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->objid(), output);
  }

  // optional int64 player_iggid = 3;
  if (has_player_iggid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->player_iggid(), output);
  }

  // optional .MsgPB.MsgWorldPos P = 4;
  if (has_p()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->p(), output);
  }

  // optional .MsgPB.MsgWorldRot R = 5;
  if (has_r()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->r(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.MsgInteractionWalkS2C)
}

::google::protobuf::uint8* MsgInteractionWalkS2C::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.MsgInteractionWalkS2C)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_INTERACTION_PLAYER_WALK_S2C];
  if (has_msgtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->msgtype(), target);
  }

  // optional int32 objId = 2;
  if (has_objid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->objid(), target);
  }

  // optional int64 player_iggid = 3;
  if (has_player_iggid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->player_iggid(), target);
  }

  // optional .MsgPB.MsgWorldPos P = 4;
  if (has_p()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->p(), target);
  }

  // optional .MsgPB.MsgWorldRot R = 5;
  if (has_r()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->r(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.MsgInteractionWalkS2C)
  return target;
}

int MsgInteractionWalkS2C::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_INTERACTION_PLAYER_WALK_S2C];
    if (has_msgtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgtype());
    }

    // optional int32 objId = 2;
    if (has_objid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->objid());
    }

    // optional int64 player_iggid = 3;
    if (has_player_iggid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->player_iggid());
    }

    // optional .MsgPB.MsgWorldPos P = 4;
    if (has_p()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->p());
    }

    // optional .MsgPB.MsgWorldRot R = 5;
    if (has_r()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->r());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgInteractionWalkS2C::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgInteractionWalkS2C* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgInteractionWalkS2C*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgInteractionWalkS2C::MergeFrom(const MsgInteractionWalkS2C& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msgtype()) {
      set_msgtype(from.msgtype());
    }
    if (from.has_objid()) {
      set_objid(from.objid());
    }
    if (from.has_player_iggid()) {
      set_player_iggid(from.player_iggid());
    }
    if (from.has_p()) {
      mutable_p()->::MsgPB::MsgWorldPos::MergeFrom(from.p());
    }
    if (from.has_r()) {
      mutable_r()->::MsgPB::MsgWorldRot::MergeFrom(from.r());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgInteractionWalkS2C::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgInteractionWalkS2C::CopyFrom(const MsgInteractionWalkS2C& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgInteractionWalkS2C::IsInitialized() const {

  return true;
}

void MsgInteractionWalkS2C::Swap(MsgInteractionWalkS2C* other) {
  if (other != this) {
    std::swap(msgtype_, other->msgtype_);
    std::swap(objid_, other->objid_);
    std::swap(player_iggid_, other->player_iggid_);
    std::swap(p_, other->p_);
    std::swap(r_, other->r_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgInteractionWalkS2C::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgInteractionWalkS2C_descriptor_;
  metadata.reflection = MsgInteractionWalkS2C_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgInteractionTurnC2S::kMsgTypeFieldNumber;
const int MsgInteractionTurnC2S::kObjIdFieldNumber;
const int MsgInteractionTurnC2S::kPlayerIggidFieldNumber;
const int MsgInteractionTurnC2S::kRFieldNumber;
#endif  // !_MSC_VER

MsgInteractionTurnC2S::MsgInteractionTurnC2S()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.MsgInteractionTurnC2S)
}

void MsgInteractionTurnC2S::InitAsDefaultInstance() {
  r_ = const_cast< ::MsgPB::MsgWorldRot*>(&::MsgPB::MsgWorldRot::default_instance());
}

MsgInteractionTurnC2S::MsgInteractionTurnC2S(const MsgInteractionTurnC2S& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.MsgInteractionTurnC2S)
}

void MsgInteractionTurnC2S::SharedCtor() {
  _cached_size_ = 0;
  msgtype_ = 8014;
  objid_ = 0;
  player_iggid_ = GOOGLE_LONGLONG(0);
  r_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgInteractionTurnC2S::~MsgInteractionTurnC2S() {
  // @@protoc_insertion_point(destructor:MsgPB.MsgInteractionTurnC2S)
  SharedDtor();
}

void MsgInteractionTurnC2S::SharedDtor() {
  if (this != default_instance_) {
    delete r_;
  }
}

void MsgInteractionTurnC2S::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgInteractionTurnC2S::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgInteractionTurnC2S_descriptor_;
}

const MsgInteractionTurnC2S& MsgInteractionTurnC2S::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgInteraction_2eproto();
  return *default_instance_;
}

MsgInteractionTurnC2S* MsgInteractionTurnC2S::default_instance_ = NULL;

MsgInteractionTurnC2S* MsgInteractionTurnC2S::New() const {
  return new MsgInteractionTurnC2S;
}

void MsgInteractionTurnC2S::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<MsgInteractionTurnC2S*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 15) {
    ZR_(objid_, player_iggid_);
    msgtype_ = 8014;
    if (has_r()) {
      if (r_ != NULL) r_->::MsgPB::MsgWorldRot::Clear();
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgInteractionTurnC2S::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.MsgInteractionTurnC2S)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_INTERACTION_PLAYER_TURN_C2S];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::EMsgType_IsValid(value)) {
            set_msgtype(static_cast< ::MsgPB::EMsgType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_objId;
        break;
      }

      // optional int32 objId = 2;
      case 2: {
        if (tag == 16) {
         parse_objId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &objid_)));
          set_has_objid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_player_iggid;
        break;
      }

      // optional int64 player_iggid = 3;
      case 3: {
        if (tag == 24) {
         parse_player_iggid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &player_iggid_)));
          set_has_player_iggid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_R;
        break;
      }

      // optional .MsgPB.MsgWorldRot R = 4;
      case 4: {
        if (tag == 34) {
         parse_R:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_r()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.MsgInteractionTurnC2S)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.MsgInteractionTurnC2S)
  return false;
#undef DO_
}

void MsgInteractionTurnC2S::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.MsgInteractionTurnC2S)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_INTERACTION_PLAYER_TURN_C2S];
  if (has_msgtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->msgtype(), output);
  }

  // optional int32 objId = 2;
  if (has_objid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->objid(), output);
  }

  // optional int64 player_iggid = 3;
  if (has_player_iggid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->player_iggid(), output);
  }

  // optional .MsgPB.MsgWorldRot R = 4;
  if (has_r()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->r(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.MsgInteractionTurnC2S)
}

::google::protobuf::uint8* MsgInteractionTurnC2S::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.MsgInteractionTurnC2S)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_INTERACTION_PLAYER_TURN_C2S];
  if (has_msgtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->msgtype(), target);
  }

  // optional int32 objId = 2;
  if (has_objid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->objid(), target);
  }

  // optional int64 player_iggid = 3;
  if (has_player_iggid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->player_iggid(), target);
  }

  // optional .MsgPB.MsgWorldRot R = 4;
  if (has_r()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->r(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.MsgInteractionTurnC2S)
  return target;
}

int MsgInteractionTurnC2S::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_INTERACTION_PLAYER_TURN_C2S];
    if (has_msgtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgtype());
    }

    // optional int32 objId = 2;
    if (has_objid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->objid());
    }

    // optional int64 player_iggid = 3;
    if (has_player_iggid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->player_iggid());
    }

    // optional .MsgPB.MsgWorldRot R = 4;
    if (has_r()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->r());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgInteractionTurnC2S::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgInteractionTurnC2S* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgInteractionTurnC2S*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgInteractionTurnC2S::MergeFrom(const MsgInteractionTurnC2S& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msgtype()) {
      set_msgtype(from.msgtype());
    }
    if (from.has_objid()) {
      set_objid(from.objid());
    }
    if (from.has_player_iggid()) {
      set_player_iggid(from.player_iggid());
    }
    if (from.has_r()) {
      mutable_r()->::MsgPB::MsgWorldRot::MergeFrom(from.r());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgInteractionTurnC2S::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgInteractionTurnC2S::CopyFrom(const MsgInteractionTurnC2S& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgInteractionTurnC2S::IsInitialized() const {

  return true;
}

void MsgInteractionTurnC2S::Swap(MsgInteractionTurnC2S* other) {
  if (other != this) {
    std::swap(msgtype_, other->msgtype_);
    std::swap(objid_, other->objid_);
    std::swap(player_iggid_, other->player_iggid_);
    std::swap(r_, other->r_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgInteractionTurnC2S::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgInteractionTurnC2S_descriptor_;
  metadata.reflection = MsgInteractionTurnC2S_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgInteractionTurnS2C::kMsgTypeFieldNumber;
const int MsgInteractionTurnS2C::kObjIdFieldNumber;
const int MsgInteractionTurnS2C::kPlayerIggidFieldNumber;
const int MsgInteractionTurnS2C::kRFieldNumber;
#endif  // !_MSC_VER

MsgInteractionTurnS2C::MsgInteractionTurnS2C()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.MsgInteractionTurnS2C)
}

void MsgInteractionTurnS2C::InitAsDefaultInstance() {
  r_ = const_cast< ::MsgPB::MsgWorldRot*>(&::MsgPB::MsgWorldRot::default_instance());
}

MsgInteractionTurnS2C::MsgInteractionTurnS2C(const MsgInteractionTurnS2C& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.MsgInteractionTurnS2C)
}

void MsgInteractionTurnS2C::SharedCtor() {
  _cached_size_ = 0;
  msgtype_ = 8015;
  objid_ = 0;
  player_iggid_ = GOOGLE_LONGLONG(0);
  r_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgInteractionTurnS2C::~MsgInteractionTurnS2C() {
  // @@protoc_insertion_point(destructor:MsgPB.MsgInteractionTurnS2C)
  SharedDtor();
}

void MsgInteractionTurnS2C::SharedDtor() {
  if (this != default_instance_) {
    delete r_;
  }
}

void MsgInteractionTurnS2C::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgInteractionTurnS2C::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgInteractionTurnS2C_descriptor_;
}

const MsgInteractionTurnS2C& MsgInteractionTurnS2C::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgInteraction_2eproto();
  return *default_instance_;
}

MsgInteractionTurnS2C* MsgInteractionTurnS2C::default_instance_ = NULL;

MsgInteractionTurnS2C* MsgInteractionTurnS2C::New() const {
  return new MsgInteractionTurnS2C;
}

void MsgInteractionTurnS2C::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<MsgInteractionTurnS2C*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 15) {
    ZR_(objid_, player_iggid_);
    msgtype_ = 8015;
    if (has_r()) {
      if (r_ != NULL) r_->::MsgPB::MsgWorldRot::Clear();
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgInteractionTurnS2C::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.MsgInteractionTurnS2C)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_INTERACTION_PLAYER_TURN_S2C];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::EMsgType_IsValid(value)) {
            set_msgtype(static_cast< ::MsgPB::EMsgType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_objId;
        break;
      }

      // optional int32 objId = 2;
      case 2: {
        if (tag == 16) {
         parse_objId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &objid_)));
          set_has_objid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_player_iggid;
        break;
      }

      // optional int64 player_iggid = 3;
      case 3: {
        if (tag == 24) {
         parse_player_iggid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &player_iggid_)));
          set_has_player_iggid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_R;
        break;
      }

      // optional .MsgPB.MsgWorldRot R = 4;
      case 4: {
        if (tag == 34) {
         parse_R:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_r()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.MsgInteractionTurnS2C)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.MsgInteractionTurnS2C)
  return false;
#undef DO_
}

void MsgInteractionTurnS2C::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.MsgInteractionTurnS2C)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_INTERACTION_PLAYER_TURN_S2C];
  if (has_msgtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->msgtype(), output);
  }

  // optional int32 objId = 2;
  if (has_objid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->objid(), output);
  }

  // optional int64 player_iggid = 3;
  if (has_player_iggid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->player_iggid(), output);
  }

  // optional .MsgPB.MsgWorldRot R = 4;
  if (has_r()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->r(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.MsgInteractionTurnS2C)
}

::google::protobuf::uint8* MsgInteractionTurnS2C::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.MsgInteractionTurnS2C)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_INTERACTION_PLAYER_TURN_S2C];
  if (has_msgtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->msgtype(), target);
  }

  // optional int32 objId = 2;
  if (has_objid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->objid(), target);
  }

  // optional int64 player_iggid = 3;
  if (has_player_iggid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->player_iggid(), target);
  }

  // optional .MsgPB.MsgWorldRot R = 4;
  if (has_r()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->r(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.MsgInteractionTurnS2C)
  return target;
}

int MsgInteractionTurnS2C::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_INTERACTION_PLAYER_TURN_S2C];
    if (has_msgtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgtype());
    }

    // optional int32 objId = 2;
    if (has_objid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->objid());
    }

    // optional int64 player_iggid = 3;
    if (has_player_iggid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->player_iggid());
    }

    // optional .MsgPB.MsgWorldRot R = 4;
    if (has_r()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->r());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgInteractionTurnS2C::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgInteractionTurnS2C* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgInteractionTurnS2C*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgInteractionTurnS2C::MergeFrom(const MsgInteractionTurnS2C& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msgtype()) {
      set_msgtype(from.msgtype());
    }
    if (from.has_objid()) {
      set_objid(from.objid());
    }
    if (from.has_player_iggid()) {
      set_player_iggid(from.player_iggid());
    }
    if (from.has_r()) {
      mutable_r()->::MsgPB::MsgWorldRot::MergeFrom(from.r());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgInteractionTurnS2C::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgInteractionTurnS2C::CopyFrom(const MsgInteractionTurnS2C& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgInteractionTurnS2C::IsInitialized() const {

  return true;
}

void MsgInteractionTurnS2C::Swap(MsgInteractionTurnS2C* other) {
  if (other != this) {
    std::swap(msgtype_, other->msgtype_);
    std::swap(objid_, other->objid_);
    std::swap(player_iggid_, other->player_iggid_);
    std::swap(r_, other->r_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgInteractionTurnS2C::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgInteractionTurnS2C_descriptor_;
  metadata.reflection = MsgInteractionTurnS2C_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgInteractionC2S::kMsgTypeFieldNumber;
const int MsgInteractionC2S::kObjIdFieldNumber;
const int MsgInteractionC2S::kPlayerIggidFieldNumber;
const int MsgInteractionC2S::kActionTypeFieldNumber;
const int MsgInteractionC2S::kData1FieldNumber;
const int MsgInteractionC2S::kData2FieldNumber;
const int MsgInteractionC2S::kData3FieldNumber;
#endif  // !_MSC_VER

MsgInteractionC2S::MsgInteractionC2S()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.MsgInteractionC2S)
}

void MsgInteractionC2S::InitAsDefaultInstance() {
}

MsgInteractionC2S::MsgInteractionC2S(const MsgInteractionC2S& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.MsgInteractionC2S)
}

void MsgInteractionC2S::SharedCtor() {
  _cached_size_ = 0;
  msgtype_ = 8009;
  objid_ = 0;
  player_iggid_ = GOOGLE_LONGLONG(0);
  action_type_ = 1;
  data1_ = 0;
  data2_ = 0;
  data3_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgInteractionC2S::~MsgInteractionC2S() {
  // @@protoc_insertion_point(destructor:MsgPB.MsgInteractionC2S)
  SharedDtor();
}

void MsgInteractionC2S::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgInteractionC2S::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgInteractionC2S::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgInteractionC2S_descriptor_;
}

const MsgInteractionC2S& MsgInteractionC2S::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgInteraction_2eproto();
  return *default_instance_;
}

MsgInteractionC2S* MsgInteractionC2S::default_instance_ = NULL;

MsgInteractionC2S* MsgInteractionC2S::New() const {
  return new MsgInteractionC2S;
}

void MsgInteractionC2S::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<MsgInteractionC2S*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 127) {
    ZR_(objid_, player_iggid_);
    ZR_(data1_, data3_);
    msgtype_ = 8009;
    action_type_ = 1;
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgInteractionC2S::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.MsgInteractionC2S)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_INTERACTION_PLAYER_ACTION_C2S];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::EMsgType_IsValid(value)) {
            set_msgtype(static_cast< ::MsgPB::EMsgType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_objId;
        break;
      }

      // optional int32 objId = 2;
      case 2: {
        if (tag == 16) {
         parse_objId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &objid_)));
          set_has_objid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_player_iggid;
        break;
      }

      // optional int64 player_iggid = 3;
      case 3: {
        if (tag == 24) {
         parse_player_iggid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &player_iggid_)));
          set_has_player_iggid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_action_type;
        break;
      }

      // optional .MsgPB.EAction_Type action_type = 4;
      case 4: {
        if (tag == 32) {
         parse_action_type:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::EAction_Type_IsValid(value)) {
            set_action_type(static_cast< ::MsgPB::EAction_Type >(value));
          } else {
            mutable_unknown_fields()->AddVarint(4, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_data1;
        break;
      }

      // optional int32 data1 = 5;
      case 5: {
        if (tag == 40) {
         parse_data1:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &data1_)));
          set_has_data1();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_data2;
        break;
      }

      // optional int32 data2 = 6;
      case 6: {
        if (tag == 48) {
         parse_data2:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &data2_)));
          set_has_data2();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_data3;
        break;
      }

      // optional int32 data3 = 7;
      case 7: {
        if (tag == 56) {
         parse_data3:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &data3_)));
          set_has_data3();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.MsgInteractionC2S)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.MsgInteractionC2S)
  return false;
#undef DO_
}

void MsgInteractionC2S::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.MsgInteractionC2S)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_INTERACTION_PLAYER_ACTION_C2S];
  if (has_msgtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->msgtype(), output);
  }

  // optional int32 objId = 2;
  if (has_objid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->objid(), output);
  }

  // optional int64 player_iggid = 3;
  if (has_player_iggid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->player_iggid(), output);
  }

  // optional .MsgPB.EAction_Type action_type = 4;
  if (has_action_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->action_type(), output);
  }

  // optional int32 data1 = 5;
  if (has_data1()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->data1(), output);
  }

  // optional int32 data2 = 6;
  if (has_data2()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->data2(), output);
  }

  // optional int32 data3 = 7;
  if (has_data3()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->data3(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.MsgInteractionC2S)
}

::google::protobuf::uint8* MsgInteractionC2S::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.MsgInteractionC2S)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_INTERACTION_PLAYER_ACTION_C2S];
  if (has_msgtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->msgtype(), target);
  }

  // optional int32 objId = 2;
  if (has_objid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->objid(), target);
  }

  // optional int64 player_iggid = 3;
  if (has_player_iggid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->player_iggid(), target);
  }

  // optional .MsgPB.EAction_Type action_type = 4;
  if (has_action_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->action_type(), target);
  }

  // optional int32 data1 = 5;
  if (has_data1()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->data1(), target);
  }

  // optional int32 data2 = 6;
  if (has_data2()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->data2(), target);
  }

  // optional int32 data3 = 7;
  if (has_data3()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->data3(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.MsgInteractionC2S)
  return target;
}

int MsgInteractionC2S::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_INTERACTION_PLAYER_ACTION_C2S];
    if (has_msgtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgtype());
    }

    // optional int32 objId = 2;
    if (has_objid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->objid());
    }

    // optional int64 player_iggid = 3;
    if (has_player_iggid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->player_iggid());
    }

    // optional .MsgPB.EAction_Type action_type = 4;
    if (has_action_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->action_type());
    }

    // optional int32 data1 = 5;
    if (has_data1()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->data1());
    }

    // optional int32 data2 = 6;
    if (has_data2()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->data2());
    }

    // optional int32 data3 = 7;
    if (has_data3()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->data3());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgInteractionC2S::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgInteractionC2S* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgInteractionC2S*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgInteractionC2S::MergeFrom(const MsgInteractionC2S& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msgtype()) {
      set_msgtype(from.msgtype());
    }
    if (from.has_objid()) {
      set_objid(from.objid());
    }
    if (from.has_player_iggid()) {
      set_player_iggid(from.player_iggid());
    }
    if (from.has_action_type()) {
      set_action_type(from.action_type());
    }
    if (from.has_data1()) {
      set_data1(from.data1());
    }
    if (from.has_data2()) {
      set_data2(from.data2());
    }
    if (from.has_data3()) {
      set_data3(from.data3());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgInteractionC2S::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgInteractionC2S::CopyFrom(const MsgInteractionC2S& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgInteractionC2S::IsInitialized() const {

  return true;
}

void MsgInteractionC2S::Swap(MsgInteractionC2S* other) {
  if (other != this) {
    std::swap(msgtype_, other->msgtype_);
    std::swap(objid_, other->objid_);
    std::swap(player_iggid_, other->player_iggid_);
    std::swap(action_type_, other->action_type_);
    std::swap(data1_, other->data1_);
    std::swap(data2_, other->data2_);
    std::swap(data3_, other->data3_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgInteractionC2S::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgInteractionC2S_descriptor_;
  metadata.reflection = MsgInteractionC2S_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgInteractionS2C::kMsgTypeFieldNumber;
const int MsgInteractionS2C::kObjIdFieldNumber;
const int MsgInteractionS2C::kPlayerIggidFieldNumber;
const int MsgInteractionS2C::kIsFromServerFieldNumber;
const int MsgInteractionS2C::kActionTypeFieldNumber;
const int MsgInteractionS2C::kData1FieldNumber;
const int MsgInteractionS2C::kData2FieldNumber;
const int MsgInteractionS2C::kData3FieldNumber;
#endif  // !_MSC_VER

MsgInteractionS2C::MsgInteractionS2C()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.MsgInteractionS2C)
}

void MsgInteractionS2C::InitAsDefaultInstance() {
}

MsgInteractionS2C::MsgInteractionS2C(const MsgInteractionS2C& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.MsgInteractionS2C)
}

void MsgInteractionS2C::SharedCtor() {
  _cached_size_ = 0;
  msgtype_ = 8010;
  objid_ = 0;
  player_iggid_ = GOOGLE_LONGLONG(0);
  is_from_server_ = false;
  action_type_ = 1;
  data1_ = 0;
  data2_ = 0;
  data3_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgInteractionS2C::~MsgInteractionS2C() {
  // @@protoc_insertion_point(destructor:MsgPB.MsgInteractionS2C)
  SharedDtor();
}

void MsgInteractionS2C::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgInteractionS2C::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgInteractionS2C::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgInteractionS2C_descriptor_;
}

const MsgInteractionS2C& MsgInteractionS2C::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgInteraction_2eproto();
  return *default_instance_;
}

MsgInteractionS2C* MsgInteractionS2C::default_instance_ = NULL;

MsgInteractionS2C* MsgInteractionS2C::New() const {
  return new MsgInteractionS2C;
}

void MsgInteractionS2C::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<MsgInteractionS2C*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 255) {
    ZR_(objid_, is_from_server_);
    ZR_(data1_, data3_);
    msgtype_ = 8010;
    action_type_ = 1;
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgInteractionS2C::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.MsgInteractionS2C)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_INTERACTION_PLAYER_ACTION_S2C];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::EMsgType_IsValid(value)) {
            set_msgtype(static_cast< ::MsgPB::EMsgType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_objId;
        break;
      }

      // optional int32 objId = 2;
      case 2: {
        if (tag == 16) {
         parse_objId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &objid_)));
          set_has_objid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_player_iggid;
        break;
      }

      // optional int64 player_iggid = 3;
      case 3: {
        if (tag == 24) {
         parse_player_iggid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &player_iggid_)));
          set_has_player_iggid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_is_from_server;
        break;
      }

      // optional bool is_from_server = 4;
      case 4: {
        if (tag == 32) {
         parse_is_from_server:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_from_server_)));
          set_has_is_from_server();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_action_type;
        break;
      }

      // optional .MsgPB.EAction_Type action_type = 5;
      case 5: {
        if (tag == 40) {
         parse_action_type:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::EAction_Type_IsValid(value)) {
            set_action_type(static_cast< ::MsgPB::EAction_Type >(value));
          } else {
            mutable_unknown_fields()->AddVarint(5, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_data1;
        break;
      }

      // optional int32 data1 = 6;
      case 6: {
        if (tag == 48) {
         parse_data1:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &data1_)));
          set_has_data1();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_data2;
        break;
      }

      // optional int32 data2 = 7;
      case 7: {
        if (tag == 56) {
         parse_data2:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &data2_)));
          set_has_data2();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_data3;
        break;
      }

      // optional int32 data3 = 8;
      case 8: {
        if (tag == 64) {
         parse_data3:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &data3_)));
          set_has_data3();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.MsgInteractionS2C)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.MsgInteractionS2C)
  return false;
#undef DO_
}

void MsgInteractionS2C::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.MsgInteractionS2C)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_INTERACTION_PLAYER_ACTION_S2C];
  if (has_msgtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->msgtype(), output);
  }

  // optional int32 objId = 2;
  if (has_objid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->objid(), output);
  }

  // optional int64 player_iggid = 3;
  if (has_player_iggid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->player_iggid(), output);
  }

  // optional bool is_from_server = 4;
  if (has_is_from_server()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->is_from_server(), output);
  }

  // optional .MsgPB.EAction_Type action_type = 5;
  if (has_action_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      5, this->action_type(), output);
  }

  // optional int32 data1 = 6;
  if (has_data1()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->data1(), output);
  }

  // optional int32 data2 = 7;
  if (has_data2()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->data2(), output);
  }

  // optional int32 data3 = 8;
  if (has_data3()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->data3(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.MsgInteractionS2C)
}

::google::protobuf::uint8* MsgInteractionS2C::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.MsgInteractionS2C)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_INTERACTION_PLAYER_ACTION_S2C];
  if (has_msgtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->msgtype(), target);
  }

  // optional int32 objId = 2;
  if (has_objid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->objid(), target);
  }

  // optional int64 player_iggid = 3;
  if (has_player_iggid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->player_iggid(), target);
  }

  // optional bool is_from_server = 4;
  if (has_is_from_server()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->is_from_server(), target);
  }

  // optional .MsgPB.EAction_Type action_type = 5;
  if (has_action_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      5, this->action_type(), target);
  }

  // optional int32 data1 = 6;
  if (has_data1()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->data1(), target);
  }

  // optional int32 data2 = 7;
  if (has_data2()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->data2(), target);
  }

  // optional int32 data3 = 8;
  if (has_data3()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->data3(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.MsgInteractionS2C)
  return target;
}

int MsgInteractionS2C::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_INTERACTION_PLAYER_ACTION_S2C];
    if (has_msgtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgtype());
    }

    // optional int32 objId = 2;
    if (has_objid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->objid());
    }

    // optional int64 player_iggid = 3;
    if (has_player_iggid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->player_iggid());
    }

    // optional bool is_from_server = 4;
    if (has_is_from_server()) {
      total_size += 1 + 1;
    }

    // optional .MsgPB.EAction_Type action_type = 5;
    if (has_action_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->action_type());
    }

    // optional int32 data1 = 6;
    if (has_data1()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->data1());
    }

    // optional int32 data2 = 7;
    if (has_data2()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->data2());
    }

    // optional int32 data3 = 8;
    if (has_data3()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->data3());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgInteractionS2C::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgInteractionS2C* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgInteractionS2C*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgInteractionS2C::MergeFrom(const MsgInteractionS2C& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msgtype()) {
      set_msgtype(from.msgtype());
    }
    if (from.has_objid()) {
      set_objid(from.objid());
    }
    if (from.has_player_iggid()) {
      set_player_iggid(from.player_iggid());
    }
    if (from.has_is_from_server()) {
      set_is_from_server(from.is_from_server());
    }
    if (from.has_action_type()) {
      set_action_type(from.action_type());
    }
    if (from.has_data1()) {
      set_data1(from.data1());
    }
    if (from.has_data2()) {
      set_data2(from.data2());
    }
    if (from.has_data3()) {
      set_data3(from.data3());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgInteractionS2C::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgInteractionS2C::CopyFrom(const MsgInteractionS2C& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgInteractionS2C::IsInitialized() const {

  return true;
}

void MsgInteractionS2C::Swap(MsgInteractionS2C* other) {
  if (other != this) {
    std::swap(msgtype_, other->msgtype_);
    std::swap(objid_, other->objid_);
    std::swap(player_iggid_, other->player_iggid_);
    std::swap(is_from_server_, other->is_from_server_);
    std::swap(action_type_, other->action_type_);
    std::swap(data1_, other->data1_);
    std::swap(data2_, other->data2_);
    std::swap(data3_, other->data3_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgInteractionS2C::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgInteractionS2C_descriptor_;
  metadata.reflection = MsgInteractionS2C_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgMagicEffectAppenceS2C::kMsgTypeFieldNumber;
const int MsgMagicEffectAppenceS2C::kObjIdFieldNumber;
const int MsgMagicEffectAppenceS2C::kPlayerIggidFieldNumber;
const int MsgMagicEffectAppenceS2C::kTargetObjIdFieldNumber;
const int MsgMagicEffectAppenceS2C::kTargetPlayerIggidFieldNumber;
const int MsgMagicEffectAppenceS2C::kSkillIdFieldNumber;
const int MsgMagicEffectAppenceS2C::kPFieldNumber;
const int MsgMagicEffectAppenceS2C::kRFieldNumber;
#endif  // !_MSC_VER

MsgMagicEffectAppenceS2C::MsgMagicEffectAppenceS2C()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.MsgMagicEffectAppenceS2C)
}

void MsgMagicEffectAppenceS2C::InitAsDefaultInstance() {
  p_ = const_cast< ::MsgPB::MsgWorldPos*>(&::MsgPB::MsgWorldPos::default_instance());
  r_ = const_cast< ::MsgPB::MsgWorldRot*>(&::MsgPB::MsgWorldRot::default_instance());
}

MsgMagicEffectAppenceS2C::MsgMagicEffectAppenceS2C(const MsgMagicEffectAppenceS2C& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.MsgMagicEffectAppenceS2C)
}

void MsgMagicEffectAppenceS2C::SharedCtor() {
  _cached_size_ = 0;
  msgtype_ = 8011;
  objid_ = 0;
  player_iggid_ = GOOGLE_LONGLONG(0);
  target_objid_ = 0;
  target_player_iggid_ = GOOGLE_LONGLONG(0);
  skillid_ = 0;
  p_ = NULL;
  r_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgMagicEffectAppenceS2C::~MsgMagicEffectAppenceS2C() {
  // @@protoc_insertion_point(destructor:MsgPB.MsgMagicEffectAppenceS2C)
  SharedDtor();
}

void MsgMagicEffectAppenceS2C::SharedDtor() {
  if (this != default_instance_) {
    delete p_;
    delete r_;
  }
}

void MsgMagicEffectAppenceS2C::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgMagicEffectAppenceS2C::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgMagicEffectAppenceS2C_descriptor_;
}

const MsgMagicEffectAppenceS2C& MsgMagicEffectAppenceS2C::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgInteraction_2eproto();
  return *default_instance_;
}

MsgMagicEffectAppenceS2C* MsgMagicEffectAppenceS2C::default_instance_ = NULL;

MsgMagicEffectAppenceS2C* MsgMagicEffectAppenceS2C::New() const {
  return new MsgMagicEffectAppenceS2C;
}

void MsgMagicEffectAppenceS2C::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<MsgMagicEffectAppenceS2C*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 255) {
    ZR_(objid_, skillid_);
    msgtype_ = 8011;
    if (has_p()) {
      if (p_ != NULL) p_->::MsgPB::MsgWorldPos::Clear();
    }
    if (has_r()) {
      if (r_ != NULL) r_->::MsgPB::MsgWorldRot::Clear();
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgMagicEffectAppenceS2C::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.MsgMagicEffectAppenceS2C)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_INTERACTION_PLAYER_EFFECT_APPENCE_S2C];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::EMsgType_IsValid(value)) {
            set_msgtype(static_cast< ::MsgPB::EMsgType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_objId;
        break;
      }

      // optional int32 objId = 2;
      case 2: {
        if (tag == 16) {
         parse_objId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &objid_)));
          set_has_objid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_player_iggid;
        break;
      }

      // optional int64 player_iggid = 3;
      case 3: {
        if (tag == 24) {
         parse_player_iggid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &player_iggid_)));
          set_has_player_iggid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_target_objId;
        break;
      }

      // optional int32 target_objId = 4;
      case 4: {
        if (tag == 32) {
         parse_target_objId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &target_objid_)));
          set_has_target_objid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_target_player_iggid;
        break;
      }

      // optional int64 target_player_iggid = 5;
      case 5: {
        if (tag == 40) {
         parse_target_player_iggid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &target_player_iggid_)));
          set_has_target_player_iggid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_skillId;
        break;
      }

      // optional int32 skillId = 6;
      case 6: {
        if (tag == 48) {
         parse_skillId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &skillid_)));
          set_has_skillid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_P;
        break;
      }

      // optional .MsgPB.MsgWorldPos P = 7;
      case 7: {
        if (tag == 58) {
         parse_P:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_p()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_R;
        break;
      }

      // optional .MsgPB.MsgWorldRot R = 8;
      case 8: {
        if (tag == 66) {
         parse_R:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_r()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.MsgMagicEffectAppenceS2C)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.MsgMagicEffectAppenceS2C)
  return false;
#undef DO_
}

void MsgMagicEffectAppenceS2C::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.MsgMagicEffectAppenceS2C)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_INTERACTION_PLAYER_EFFECT_APPENCE_S2C];
  if (has_msgtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->msgtype(), output);
  }

  // optional int32 objId = 2;
  if (has_objid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->objid(), output);
  }

  // optional int64 player_iggid = 3;
  if (has_player_iggid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->player_iggid(), output);
  }

  // optional int32 target_objId = 4;
  if (has_target_objid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->target_objid(), output);
  }

  // optional int64 target_player_iggid = 5;
  if (has_target_player_iggid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(5, this->target_player_iggid(), output);
  }

  // optional int32 skillId = 6;
  if (has_skillid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->skillid(), output);
  }

  // optional .MsgPB.MsgWorldPos P = 7;
  if (has_p()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->p(), output);
  }

  // optional .MsgPB.MsgWorldRot R = 8;
  if (has_r()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->r(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.MsgMagicEffectAppenceS2C)
}

::google::protobuf::uint8* MsgMagicEffectAppenceS2C::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.MsgMagicEffectAppenceS2C)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_INTERACTION_PLAYER_EFFECT_APPENCE_S2C];
  if (has_msgtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->msgtype(), target);
  }

  // optional int32 objId = 2;
  if (has_objid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->objid(), target);
  }

  // optional int64 player_iggid = 3;
  if (has_player_iggid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->player_iggid(), target);
  }

  // optional int32 target_objId = 4;
  if (has_target_objid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->target_objid(), target);
  }

  // optional int64 target_player_iggid = 5;
  if (has_target_player_iggid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(5, this->target_player_iggid(), target);
  }

  // optional int32 skillId = 6;
  if (has_skillid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->skillid(), target);
  }

  // optional .MsgPB.MsgWorldPos P = 7;
  if (has_p()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        7, this->p(), target);
  }

  // optional .MsgPB.MsgWorldRot R = 8;
  if (has_r()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        8, this->r(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.MsgMagicEffectAppenceS2C)
  return target;
}

int MsgMagicEffectAppenceS2C::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_INTERACTION_PLAYER_EFFECT_APPENCE_S2C];
    if (has_msgtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgtype());
    }

    // optional int32 objId = 2;
    if (has_objid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->objid());
    }

    // optional int64 player_iggid = 3;
    if (has_player_iggid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->player_iggid());
    }

    // optional int32 target_objId = 4;
    if (has_target_objid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->target_objid());
    }

    // optional int64 target_player_iggid = 5;
    if (has_target_player_iggid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->target_player_iggid());
    }

    // optional int32 skillId = 6;
    if (has_skillid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->skillid());
    }

    // optional .MsgPB.MsgWorldPos P = 7;
    if (has_p()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->p());
    }

    // optional .MsgPB.MsgWorldRot R = 8;
    if (has_r()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->r());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgMagicEffectAppenceS2C::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgMagicEffectAppenceS2C* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgMagicEffectAppenceS2C*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgMagicEffectAppenceS2C::MergeFrom(const MsgMagicEffectAppenceS2C& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msgtype()) {
      set_msgtype(from.msgtype());
    }
    if (from.has_objid()) {
      set_objid(from.objid());
    }
    if (from.has_player_iggid()) {
      set_player_iggid(from.player_iggid());
    }
    if (from.has_target_objid()) {
      set_target_objid(from.target_objid());
    }
    if (from.has_target_player_iggid()) {
      set_target_player_iggid(from.target_player_iggid());
    }
    if (from.has_skillid()) {
      set_skillid(from.skillid());
    }
    if (from.has_p()) {
      mutable_p()->::MsgPB::MsgWorldPos::MergeFrom(from.p());
    }
    if (from.has_r()) {
      mutable_r()->::MsgPB::MsgWorldRot::MergeFrom(from.r());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgMagicEffectAppenceS2C::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgMagicEffectAppenceS2C::CopyFrom(const MsgMagicEffectAppenceS2C& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgMagicEffectAppenceS2C::IsInitialized() const {

  return true;
}

void MsgMagicEffectAppenceS2C::Swap(MsgMagicEffectAppenceS2C* other) {
  if (other != this) {
    std::swap(msgtype_, other->msgtype_);
    std::swap(objid_, other->objid_);
    std::swap(player_iggid_, other->player_iggid_);
    std::swap(target_objid_, other->target_objid_);
    std::swap(target_player_iggid_, other->target_player_iggid_);
    std::swap(skillid_, other->skillid_);
    std::swap(p_, other->p_);
    std::swap(r_, other->r_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgMagicEffectAppenceS2C::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgMagicEffectAppenceS2C_descriptor_;
  metadata.reflection = MsgMagicEffectAppenceS2C_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgMagicEffectDispearS2C::kMsgTypeFieldNumber;
const int MsgMagicEffectDispearS2C::kObjIdFieldNumber;
const int MsgMagicEffectDispearS2C::kPlayerIggidFieldNumber;
const int MsgMagicEffectDispearS2C::kTargetObjIdFieldNumber;
const int MsgMagicEffectDispearS2C::kTargetPlayerIggidFieldNumber;
const int MsgMagicEffectDispearS2C::kSkillIdFieldNumber;
const int MsgMagicEffectDispearS2C::kPFieldNumber;
const int MsgMagicEffectDispearS2C::kRFieldNumber;
#endif  // !_MSC_VER

MsgMagicEffectDispearS2C::MsgMagicEffectDispearS2C()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.MsgMagicEffectDispearS2C)
}

void MsgMagicEffectDispearS2C::InitAsDefaultInstance() {
  p_ = const_cast< ::MsgPB::MsgWorldPos*>(&::MsgPB::MsgWorldPos::default_instance());
  r_ = const_cast< ::MsgPB::MsgWorldRot*>(&::MsgPB::MsgWorldRot::default_instance());
}

MsgMagicEffectDispearS2C::MsgMagicEffectDispearS2C(const MsgMagicEffectDispearS2C& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.MsgMagicEffectDispearS2C)
}

void MsgMagicEffectDispearS2C::SharedCtor() {
  _cached_size_ = 0;
  msgtype_ = 8012;
  objid_ = 0;
  player_iggid_ = GOOGLE_LONGLONG(0);
  target_objid_ = 0;
  target_player_iggid_ = GOOGLE_LONGLONG(0);
  skillid_ = 0;
  p_ = NULL;
  r_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgMagicEffectDispearS2C::~MsgMagicEffectDispearS2C() {
  // @@protoc_insertion_point(destructor:MsgPB.MsgMagicEffectDispearS2C)
  SharedDtor();
}

void MsgMagicEffectDispearS2C::SharedDtor() {
  if (this != default_instance_) {
    delete p_;
    delete r_;
  }
}

void MsgMagicEffectDispearS2C::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgMagicEffectDispearS2C::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgMagicEffectDispearS2C_descriptor_;
}

const MsgMagicEffectDispearS2C& MsgMagicEffectDispearS2C::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgInteraction_2eproto();
  return *default_instance_;
}

MsgMagicEffectDispearS2C* MsgMagicEffectDispearS2C::default_instance_ = NULL;

MsgMagicEffectDispearS2C* MsgMagicEffectDispearS2C::New() const {
  return new MsgMagicEffectDispearS2C;
}

void MsgMagicEffectDispearS2C::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<MsgMagicEffectDispearS2C*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 255) {
    ZR_(objid_, skillid_);
    msgtype_ = 8012;
    if (has_p()) {
      if (p_ != NULL) p_->::MsgPB::MsgWorldPos::Clear();
    }
    if (has_r()) {
      if (r_ != NULL) r_->::MsgPB::MsgWorldRot::Clear();
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgMagicEffectDispearS2C::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.MsgMagicEffectDispearS2C)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_INTERACTION_PLAYER_EFFECT_DISPEAR_S2C];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::EMsgType_IsValid(value)) {
            set_msgtype(static_cast< ::MsgPB::EMsgType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_objId;
        break;
      }

      // optional int32 objId = 2;
      case 2: {
        if (tag == 16) {
         parse_objId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &objid_)));
          set_has_objid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_player_iggid;
        break;
      }

      // optional int64 player_iggid = 3;
      case 3: {
        if (tag == 24) {
         parse_player_iggid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &player_iggid_)));
          set_has_player_iggid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_target_objId;
        break;
      }

      // optional int32 target_objId = 4;
      case 4: {
        if (tag == 32) {
         parse_target_objId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &target_objid_)));
          set_has_target_objid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_target_player_iggid;
        break;
      }

      // optional int64 target_player_iggid = 5;
      case 5: {
        if (tag == 40) {
         parse_target_player_iggid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &target_player_iggid_)));
          set_has_target_player_iggid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_skillId;
        break;
      }

      // optional int32 skillId = 6;
      case 6: {
        if (tag == 48) {
         parse_skillId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &skillid_)));
          set_has_skillid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_P;
        break;
      }

      // optional .MsgPB.MsgWorldPos P = 7;
      case 7: {
        if (tag == 58) {
         parse_P:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_p()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_R;
        break;
      }

      // optional .MsgPB.MsgWorldRot R = 8;
      case 8: {
        if (tag == 66) {
         parse_R:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_r()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.MsgMagicEffectDispearS2C)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.MsgMagicEffectDispearS2C)
  return false;
#undef DO_
}

void MsgMagicEffectDispearS2C::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.MsgMagicEffectDispearS2C)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_INTERACTION_PLAYER_EFFECT_DISPEAR_S2C];
  if (has_msgtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->msgtype(), output);
  }

  // optional int32 objId = 2;
  if (has_objid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->objid(), output);
  }

  // optional int64 player_iggid = 3;
  if (has_player_iggid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->player_iggid(), output);
  }

  // optional int32 target_objId = 4;
  if (has_target_objid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->target_objid(), output);
  }

  // optional int64 target_player_iggid = 5;
  if (has_target_player_iggid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(5, this->target_player_iggid(), output);
  }

  // optional int32 skillId = 6;
  if (has_skillid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->skillid(), output);
  }

  // optional .MsgPB.MsgWorldPos P = 7;
  if (has_p()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->p(), output);
  }

  // optional .MsgPB.MsgWorldRot R = 8;
  if (has_r()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->r(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.MsgMagicEffectDispearS2C)
}

::google::protobuf::uint8* MsgMagicEffectDispearS2C::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.MsgMagicEffectDispearS2C)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_INTERACTION_PLAYER_EFFECT_DISPEAR_S2C];
  if (has_msgtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->msgtype(), target);
  }

  // optional int32 objId = 2;
  if (has_objid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->objid(), target);
  }

  // optional int64 player_iggid = 3;
  if (has_player_iggid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->player_iggid(), target);
  }

  // optional int32 target_objId = 4;
  if (has_target_objid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->target_objid(), target);
  }

  // optional int64 target_player_iggid = 5;
  if (has_target_player_iggid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(5, this->target_player_iggid(), target);
  }

  // optional int32 skillId = 6;
  if (has_skillid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->skillid(), target);
  }

  // optional .MsgPB.MsgWorldPos P = 7;
  if (has_p()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        7, this->p(), target);
  }

  // optional .MsgPB.MsgWorldRot R = 8;
  if (has_r()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        8, this->r(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.MsgMagicEffectDispearS2C)
  return target;
}

int MsgMagicEffectDispearS2C::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_INTERACTION_PLAYER_EFFECT_DISPEAR_S2C];
    if (has_msgtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgtype());
    }

    // optional int32 objId = 2;
    if (has_objid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->objid());
    }

    // optional int64 player_iggid = 3;
    if (has_player_iggid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->player_iggid());
    }

    // optional int32 target_objId = 4;
    if (has_target_objid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->target_objid());
    }

    // optional int64 target_player_iggid = 5;
    if (has_target_player_iggid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->target_player_iggid());
    }

    // optional int32 skillId = 6;
    if (has_skillid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->skillid());
    }

    // optional .MsgPB.MsgWorldPos P = 7;
    if (has_p()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->p());
    }

    // optional .MsgPB.MsgWorldRot R = 8;
    if (has_r()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->r());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgMagicEffectDispearS2C::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgMagicEffectDispearS2C* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgMagicEffectDispearS2C*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgMagicEffectDispearS2C::MergeFrom(const MsgMagicEffectDispearS2C& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msgtype()) {
      set_msgtype(from.msgtype());
    }
    if (from.has_objid()) {
      set_objid(from.objid());
    }
    if (from.has_player_iggid()) {
      set_player_iggid(from.player_iggid());
    }
    if (from.has_target_objid()) {
      set_target_objid(from.target_objid());
    }
    if (from.has_target_player_iggid()) {
      set_target_player_iggid(from.target_player_iggid());
    }
    if (from.has_skillid()) {
      set_skillid(from.skillid());
    }
    if (from.has_p()) {
      mutable_p()->::MsgPB::MsgWorldPos::MergeFrom(from.p());
    }
    if (from.has_r()) {
      mutable_r()->::MsgPB::MsgWorldRot::MergeFrom(from.r());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgMagicEffectDispearS2C::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgMagicEffectDispearS2C::CopyFrom(const MsgMagicEffectDispearS2C& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgMagicEffectDispearS2C::IsInitialized() const {

  return true;
}

void MsgMagicEffectDispearS2C::Swap(MsgMagicEffectDispearS2C* other) {
  if (other != this) {
    std::swap(msgtype_, other->msgtype_);
    std::swap(objid_, other->objid_);
    std::swap(player_iggid_, other->player_iggid_);
    std::swap(target_objid_, other->target_objid_);
    std::swap(target_player_iggid_, other->target_player_iggid_);
    std::swap(skillid_, other->skillid_);
    std::swap(p_, other->p_);
    std::swap(r_, other->r_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgMagicEffectDispearS2C::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgMagicEffectDispearS2C_descriptor_;
  metadata.reflection = MsgMagicEffectDispearS2C_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace MsgPB

// @@protoc_insertion_point(global_scope)
