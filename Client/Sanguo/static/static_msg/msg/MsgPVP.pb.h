// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MsgPVP.proto

#ifndef PROTOBUF_MsgPVP_2eproto__INCLUDED
#define PROTOBUF_MsgPVP_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "MsgType.pb.h"
// @@protoc_insertion_point(includes)

namespace MsgPB {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_MsgPVP_2eproto();
void protobuf_AssignDesc_MsgPVP_2eproto();
void protobuf_ShutdownFile_MsgPVP_2eproto();

class MsgPlayerPvpData;
class MsgRequestPvpMatchS2MS;
class MsgRequestPvpMatchResultMS2S;
class MsgNotifyPvpReadyMS2S;
class MsgNotifyPvpNotenoughPlayerMS2S;
class MsgPvpMatchBestMapServerMS2S;
class MsgPVPCreateMapMS2S;
class MsgPVPCreateMapResultS2MS;
class MsgStartEnterWarPostion;
class MsgPVPRankC2S;
class RankInfo;
class MsgPVPRankS2C;
class MsgPVPOutS2C;
class MsgPVPStart;
class MsgPVPGasS2C;
class MsgPVPRewardS2C;
class MsgPVPDiscardWeaponC2S;
class MsgPVPDiscardWeaponS2C;
class MsgPVPChangeWeaponC2S;
class MsgPVPChangeWeaponS2C;
class MsgPVPChoiceWeaponC2S;
class MsgPVPChoiceWeaponS2C;

enum ENUM_PVP_MATCH_RESULT {
  PVP_MATCH_RESULT_NULL = 0,
  PVP_MATCH_RESULT_SUCCESS = 1,
  PVP_MATCH_RESULT_MAPID_ERROR = 2,
  PVP_MATCH_CREATEMAP_ERROR = 3,
  PVP_MATCH_QUEUE_ERROR = 4
};
bool ENUM_PVP_MATCH_RESULT_IsValid(int value);
const ENUM_PVP_MATCH_RESULT ENUM_PVP_MATCH_RESULT_MIN = PVP_MATCH_RESULT_NULL;
const ENUM_PVP_MATCH_RESULT ENUM_PVP_MATCH_RESULT_MAX = PVP_MATCH_QUEUE_ERROR;
const int ENUM_PVP_MATCH_RESULT_ARRAYSIZE = ENUM_PVP_MATCH_RESULT_MAX + 1;

const ::google::protobuf::EnumDescriptor* ENUM_PVP_MATCH_RESULT_descriptor();
inline const ::std::string& ENUM_PVP_MATCH_RESULT_Name(ENUM_PVP_MATCH_RESULT value) {
  return ::google::protobuf::internal::NameOfEnum(
    ENUM_PVP_MATCH_RESULT_descriptor(), value);
}
inline bool ENUM_PVP_MATCH_RESULT_Parse(
    const ::std::string& name, ENUM_PVP_MATCH_RESULT* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ENUM_PVP_MATCH_RESULT>(
    ENUM_PVP_MATCH_RESULT_descriptor(), name, value);
}
enum ENUM_CREATE_PVP_MAP_RESULT {
  CREATE_PVP_MAP_RESULT_NULL = 0,
  CREATE_PVP_MAP_RESULT_SUCCESS = 1,
  CREATE_PVP_MAP_RESULT_MAPMGR_ERROR = 2,
  CREATE_PVP_MAP_RESULT_MAPID_ERROR = 3,
  CREATE_PVP_MAP_RESULT_CREATEMAP_ERROR = 4,
  CREATE_PVP_MAP_RESULT_QUEUE_ERROR = 5,
  CREATE_PVP_MAP_RESULT_CHOICE_ERROR = 6
};
bool ENUM_CREATE_PVP_MAP_RESULT_IsValid(int value);
const ENUM_CREATE_PVP_MAP_RESULT ENUM_CREATE_PVP_MAP_RESULT_MIN = CREATE_PVP_MAP_RESULT_NULL;
const ENUM_CREATE_PVP_MAP_RESULT ENUM_CREATE_PVP_MAP_RESULT_MAX = CREATE_PVP_MAP_RESULT_CHOICE_ERROR;
const int ENUM_CREATE_PVP_MAP_RESULT_ARRAYSIZE = ENUM_CREATE_PVP_MAP_RESULT_MAX + 1;

const ::google::protobuf::EnumDescriptor* ENUM_CREATE_PVP_MAP_RESULT_descriptor();
inline const ::std::string& ENUM_CREATE_PVP_MAP_RESULT_Name(ENUM_CREATE_PVP_MAP_RESULT value) {
  return ::google::protobuf::internal::NameOfEnum(
    ENUM_CREATE_PVP_MAP_RESULT_descriptor(), value);
}
inline bool ENUM_CREATE_PVP_MAP_RESULT_Parse(
    const ::std::string& name, ENUM_CREATE_PVP_MAP_RESULT* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ENUM_CREATE_PVP_MAP_RESULT>(
    ENUM_CREATE_PVP_MAP_RESULT_descriptor(), name, value);
}
enum MSG_RANK_RESULT {
  MSG_RANK_RESULT_ERR = 0,
  MSG_RANK_RESULT_OK = 1,
  MSG_RANK_RESULT_NOT_END = 2
};
bool MSG_RANK_RESULT_IsValid(int value);
const MSG_RANK_RESULT MSG_RANK_RESULT_MIN = MSG_RANK_RESULT_ERR;
const MSG_RANK_RESULT MSG_RANK_RESULT_MAX = MSG_RANK_RESULT_NOT_END;
const int MSG_RANK_RESULT_ARRAYSIZE = MSG_RANK_RESULT_MAX + 1;

const ::google::protobuf::EnumDescriptor* MSG_RANK_RESULT_descriptor();
inline const ::std::string& MSG_RANK_RESULT_Name(MSG_RANK_RESULT value) {
  return ::google::protobuf::internal::NameOfEnum(
    MSG_RANK_RESULT_descriptor(), value);
}
inline bool MSG_RANK_RESULT_Parse(
    const ::std::string& name, MSG_RANK_RESULT* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MSG_RANK_RESULT>(
    MSG_RANK_RESULT_descriptor(), name, value);
}
enum PVP_WEAPON_RESULT {
  PVP_WEAPON_RESULT_ERR = 0,
  PVP_WEAPON_RESULT_OK = 1,
  PVP_WEAPON_RESULT_EMPTY = 2
};
bool PVP_WEAPON_RESULT_IsValid(int value);
const PVP_WEAPON_RESULT PVP_WEAPON_RESULT_MIN = PVP_WEAPON_RESULT_ERR;
const PVP_WEAPON_RESULT PVP_WEAPON_RESULT_MAX = PVP_WEAPON_RESULT_EMPTY;
const int PVP_WEAPON_RESULT_ARRAYSIZE = PVP_WEAPON_RESULT_MAX + 1;

const ::google::protobuf::EnumDescriptor* PVP_WEAPON_RESULT_descriptor();
inline const ::std::string& PVP_WEAPON_RESULT_Name(PVP_WEAPON_RESULT value) {
  return ::google::protobuf::internal::NameOfEnum(
    PVP_WEAPON_RESULT_descriptor(), value);
}
inline bool PVP_WEAPON_RESULT_Parse(
    const ::std::string& name, PVP_WEAPON_RESULT* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PVP_WEAPON_RESULT>(
    PVP_WEAPON_RESULT_descriptor(), name, value);
}
// ===================================================================

class MsgPlayerPvpData : public ::google::protobuf::Message {
 public:
  MsgPlayerPvpData();
  virtual ~MsgPlayerPvpData();

  MsgPlayerPvpData(const MsgPlayerPvpData& from);

  inline MsgPlayerPvpData& operator=(const MsgPlayerPvpData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgPlayerPvpData& default_instance();

  void Swap(MsgPlayerPvpData* other);

  // implements Message ----------------------------------------------

  MsgPlayerPvpData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgPlayerPvpData& from);
  void MergeFrom(const MsgPlayerPvpData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 score = 1;
  inline bool has_score() const;
  inline void clear_score();
  static const int kScoreFieldNumber = 1;
  inline ::google::protobuf::int32 score() const;
  inline void set_score(::google::protobuf::int32 value);

  // optional int32 killscore = 2;
  inline bool has_killscore() const;
  inline void clear_killscore();
  static const int kKillscoreFieldNumber = 2;
  inline ::google::protobuf::int32 killscore() const;
  inline void set_killscore(::google::protobuf::int32 value);

  // optional int32 rankscore = 3;
  inline bool has_rankscore() const;
  inline void clear_rankscore();
  static const int kRankscoreFieldNumber = 3;
  inline ::google::protobuf::int32 rankscore() const;
  inline void set_rankscore(::google::protobuf::int32 value);

  // optional int32 segment = 4;
  inline bool has_segment() const;
  inline void clear_segment();
  static const int kSegmentFieldNumber = 4;
  inline ::google::protobuf::int32 segment() const;
  inline void set_segment(::google::protobuf::int32 value);

  // optional int32 pvpcoin = 5;
  inline bool has_pvpcoin() const;
  inline void clear_pvpcoin();
  static const int kPvpcoinFieldNumber = 5;
  inline ::google::protobuf::int32 pvpcoin() const;
  inline void set_pvpcoin(::google::protobuf::int32 value);

  // optional int32 pvptime = 6;
  inline bool has_pvptime() const;
  inline void clear_pvptime();
  static const int kPvptimeFieldNumber = 6;
  inline ::google::protobuf::int32 pvptime() const;
  inline void set_pvptime(::google::protobuf::int32 value);

  // optional int32 ranklow = 7;
  inline bool has_ranklow() const;
  inline void clear_ranklow();
  static const int kRanklowFieldNumber = 7;
  inline ::google::protobuf::int32 ranklow() const;
  inline void set_ranklow(::google::protobuf::int32 value);

  // optional int64 dirty = 8;
  inline bool has_dirty() const;
  inline void clear_dirty();
  static const int kDirtyFieldNumber = 8;
  inline ::google::protobuf::int64 dirty() const;
  inline void set_dirty(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:MsgPB.MsgPlayerPvpData)
 private:
  inline void set_has_score();
  inline void clear_has_score();
  inline void set_has_killscore();
  inline void clear_has_killscore();
  inline void set_has_rankscore();
  inline void clear_has_rankscore();
  inline void set_has_segment();
  inline void clear_has_segment();
  inline void set_has_pvpcoin();
  inline void clear_has_pvpcoin();
  inline void set_has_pvptime();
  inline void clear_has_pvptime();
  inline void set_has_ranklow();
  inline void clear_has_ranklow();
  inline void set_has_dirty();
  inline void clear_has_dirty();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 score_;
  ::google::protobuf::int32 killscore_;
  ::google::protobuf::int32 rankscore_;
  ::google::protobuf::int32 segment_;
  ::google::protobuf::int32 pvpcoin_;
  ::google::protobuf::int32 pvptime_;
  ::google::protobuf::int64 dirty_;
  ::google::protobuf::int32 ranklow_;
  friend void  protobuf_AddDesc_MsgPVP_2eproto();
  friend void protobuf_AssignDesc_MsgPVP_2eproto();
  friend void protobuf_ShutdownFile_MsgPVP_2eproto();

  void InitAsDefaultInstance();
  static MsgPlayerPvpData* default_instance_;
};
// -------------------------------------------------------------------

class MsgRequestPvpMatchS2MS : public ::google::protobuf::Message {
 public:
  MsgRequestPvpMatchS2MS();
  virtual ~MsgRequestPvpMatchS2MS();

  MsgRequestPvpMatchS2MS(const MsgRequestPvpMatchS2MS& from);

  inline MsgRequestPvpMatchS2MS& operator=(const MsgRequestPvpMatchS2MS& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgRequestPvpMatchS2MS& default_instance();

  void Swap(MsgRequestPvpMatchS2MS* other);

  // implements Message ----------------------------------------------

  MsgRequestPvpMatchS2MS* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgRequestPvpMatchS2MS& from);
  void MergeFrom(const MsgRequestPvpMatchS2MS& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_REQUEST_PVP_MATCH_S2MS];
  inline bool has_msgtype() const;
  inline void clear_msgtype();
  static const int kMsgTypeFieldNumber = 1;
  inline ::MsgPB::EMsgType msgtype() const;
  inline void set_msgtype(::MsgPB::EMsgType value);

  // optional int64 iggid = 2;
  inline bool has_iggid() const;
  inline void clear_iggid();
  static const int kIggidFieldNumber = 2;
  inline ::google::protobuf::int64 iggid() const;
  inline void set_iggid(::google::protobuf::int64 value);

  // optional int32 iPing = 3;
  inline bool has_iping() const;
  inline void clear_iping();
  static const int kIPingFieldNumber = 3;
  inline ::google::protobuf::int32 iping() const;
  inline void set_iping(::google::protobuf::int32 value);

  // optional int32 iScore = 4;
  inline bool has_iscore() const;
  inline void clear_iscore();
  static const int kIScoreFieldNumber = 4;
  inline ::google::protobuf::int32 iscore() const;
  inline void set_iscore(::google::protobuf::int32 value);

  // optional int32 iRankLow = 5;
  inline bool has_iranklow() const;
  inline void clear_iranklow();
  static const int kIRankLowFieldNumber = 5;
  inline ::google::protobuf::int32 iranklow() const;
  inline void set_iranklow(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:MsgPB.MsgRequestPvpMatchS2MS)
 private:
  inline void set_has_msgtype();
  inline void clear_has_msgtype();
  inline void set_has_iggid();
  inline void clear_has_iggid();
  inline void set_has_iping();
  inline void clear_has_iping();
  inline void set_has_iscore();
  inline void clear_has_iscore();
  inline void set_has_iranklow();
  inline void clear_has_iranklow();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 iggid_;
  int msgtype_;
  ::google::protobuf::int32 iping_;
  ::google::protobuf::int32 iscore_;
  ::google::protobuf::int32 iranklow_;
  friend void  protobuf_AddDesc_MsgPVP_2eproto();
  friend void protobuf_AssignDesc_MsgPVP_2eproto();
  friend void protobuf_ShutdownFile_MsgPVP_2eproto();

  void InitAsDefaultInstance();
  static MsgRequestPvpMatchS2MS* default_instance_;
};
// -------------------------------------------------------------------

class MsgRequestPvpMatchResultMS2S : public ::google::protobuf::Message {
 public:
  MsgRequestPvpMatchResultMS2S();
  virtual ~MsgRequestPvpMatchResultMS2S();

  MsgRequestPvpMatchResultMS2S(const MsgRequestPvpMatchResultMS2S& from);

  inline MsgRequestPvpMatchResultMS2S& operator=(const MsgRequestPvpMatchResultMS2S& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgRequestPvpMatchResultMS2S& default_instance();

  void Swap(MsgRequestPvpMatchResultMS2S* other);

  // implements Message ----------------------------------------------

  MsgRequestPvpMatchResultMS2S* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgRequestPvpMatchResultMS2S& from);
  void MergeFrom(const MsgRequestPvpMatchResultMS2S& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_REQUEST_PVP_MATCH_RESULT_MS2S];
  inline bool has_msgtype() const;
  inline void clear_msgtype();
  static const int kMsgTypeFieldNumber = 1;
  inline ::MsgPB::EMsgType msgtype() const;
  inline void set_msgtype(::MsgPB::EMsgType value);

  // optional int64 iggid = 2;
  inline bool has_iggid() const;
  inline void clear_iggid();
  static const int kIggidFieldNumber = 2;
  inline ::google::protobuf::int64 iggid() const;
  inline void set_iggid(::google::protobuf::int64 value);

  // optional .MsgPB.ENUM_PVP_MATCH_RESULT result = 3;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 3;
  inline ::MsgPB::ENUM_PVP_MATCH_RESULT result() const;
  inline void set_result(::MsgPB::ENUM_PVP_MATCH_RESULT value);

  // @@protoc_insertion_point(class_scope:MsgPB.MsgRequestPvpMatchResultMS2S)
 private:
  inline void set_has_msgtype();
  inline void clear_has_msgtype();
  inline void set_has_iggid();
  inline void clear_has_iggid();
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 iggid_;
  int msgtype_;
  int result_;
  friend void  protobuf_AddDesc_MsgPVP_2eproto();
  friend void protobuf_AssignDesc_MsgPVP_2eproto();
  friend void protobuf_ShutdownFile_MsgPVP_2eproto();

  void InitAsDefaultInstance();
  static MsgRequestPvpMatchResultMS2S* default_instance_;
};
// -------------------------------------------------------------------

class MsgNotifyPvpReadyMS2S : public ::google::protobuf::Message {
 public:
  MsgNotifyPvpReadyMS2S();
  virtual ~MsgNotifyPvpReadyMS2S();

  MsgNotifyPvpReadyMS2S(const MsgNotifyPvpReadyMS2S& from);

  inline MsgNotifyPvpReadyMS2S& operator=(const MsgNotifyPvpReadyMS2S& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgNotifyPvpReadyMS2S& default_instance();

  void Swap(MsgNotifyPvpReadyMS2S* other);

  // implements Message ----------------------------------------------

  MsgNotifyPvpReadyMS2S* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgNotifyPvpReadyMS2S& from);
  void MergeFrom(const MsgNotifyPvpReadyMS2S& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_NOTIFY_PVP_READY_MS2S];
  inline bool has_msgtype() const;
  inline void clear_msgtype();
  static const int kMsgTypeFieldNumber = 1;
  inline ::MsgPB::EMsgType msgtype() const;
  inline void set_msgtype(::MsgPB::EMsgType value);

  // optional int64 iggid = 2;
  inline bool has_iggid() const;
  inline void clear_iggid();
  static const int kIggidFieldNumber = 2;
  inline ::google::protobuf::int64 iggid() const;
  inline void set_iggid(::google::protobuf::int64 value);

  // optional int32 countdownSec = 3;
  inline bool has_countdownsec() const;
  inline void clear_countdownsec();
  static const int kCountdownSecFieldNumber = 3;
  inline ::google::protobuf::int32 countdownsec() const;
  inline void set_countdownsec(::google::protobuf::int32 value);

  // optional int32 playerNum = 4;
  inline bool has_playernum() const;
  inline void clear_playernum();
  static const int kPlayerNumFieldNumber = 4;
  inline ::google::protobuf::int32 playernum() const;
  inline void set_playernum(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:MsgPB.MsgNotifyPvpReadyMS2S)
 private:
  inline void set_has_msgtype();
  inline void clear_has_msgtype();
  inline void set_has_iggid();
  inline void clear_has_iggid();
  inline void set_has_countdownsec();
  inline void clear_has_countdownsec();
  inline void set_has_playernum();
  inline void clear_has_playernum();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 iggid_;
  int msgtype_;
  ::google::protobuf::int32 countdownsec_;
  ::google::protobuf::int32 playernum_;
  friend void  protobuf_AddDesc_MsgPVP_2eproto();
  friend void protobuf_AssignDesc_MsgPVP_2eproto();
  friend void protobuf_ShutdownFile_MsgPVP_2eproto();

  void InitAsDefaultInstance();
  static MsgNotifyPvpReadyMS2S* default_instance_;
};
// -------------------------------------------------------------------

class MsgNotifyPvpNotenoughPlayerMS2S : public ::google::protobuf::Message {
 public:
  MsgNotifyPvpNotenoughPlayerMS2S();
  virtual ~MsgNotifyPvpNotenoughPlayerMS2S();

  MsgNotifyPvpNotenoughPlayerMS2S(const MsgNotifyPvpNotenoughPlayerMS2S& from);

  inline MsgNotifyPvpNotenoughPlayerMS2S& operator=(const MsgNotifyPvpNotenoughPlayerMS2S& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgNotifyPvpNotenoughPlayerMS2S& default_instance();

  void Swap(MsgNotifyPvpNotenoughPlayerMS2S* other);

  // implements Message ----------------------------------------------

  MsgNotifyPvpNotenoughPlayerMS2S* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgNotifyPvpNotenoughPlayerMS2S& from);
  void MergeFrom(const MsgNotifyPvpNotenoughPlayerMS2S& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_NOTIFY_PVP_NOTENOUGHPLAYER_MS2S];
  inline bool has_msgtype() const;
  inline void clear_msgtype();
  static const int kMsgTypeFieldNumber = 1;
  inline ::MsgPB::EMsgType msgtype() const;
  inline void set_msgtype(::MsgPB::EMsgType value);

  // optional int64 iggid = 2;
  inline bool has_iggid() const;
  inline void clear_iggid();
  static const int kIggidFieldNumber = 2;
  inline ::google::protobuf::int64 iggid() const;
  inline void set_iggid(::google::protobuf::int64 value);

  // optional int32 playerNum = 3;
  inline bool has_playernum() const;
  inline void clear_playernum();
  static const int kPlayerNumFieldNumber = 3;
  inline ::google::protobuf::int32 playernum() const;
  inline void set_playernum(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:MsgPB.MsgNotifyPvpNotenoughPlayerMS2S)
 private:
  inline void set_has_msgtype();
  inline void clear_has_msgtype();
  inline void set_has_iggid();
  inline void clear_has_iggid();
  inline void set_has_playernum();
  inline void clear_has_playernum();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 iggid_;
  int msgtype_;
  ::google::protobuf::int32 playernum_;
  friend void  protobuf_AddDesc_MsgPVP_2eproto();
  friend void protobuf_AssignDesc_MsgPVP_2eproto();
  friend void protobuf_ShutdownFile_MsgPVP_2eproto();

  void InitAsDefaultInstance();
  static MsgNotifyPvpNotenoughPlayerMS2S* default_instance_;
};
// -------------------------------------------------------------------

class MsgPvpMatchBestMapServerMS2S : public ::google::protobuf::Message {
 public:
  MsgPvpMatchBestMapServerMS2S();
  virtual ~MsgPvpMatchBestMapServerMS2S();

  MsgPvpMatchBestMapServerMS2S(const MsgPvpMatchBestMapServerMS2S& from);

  inline MsgPvpMatchBestMapServerMS2S& operator=(const MsgPvpMatchBestMapServerMS2S& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgPvpMatchBestMapServerMS2S& default_instance();

  void Swap(MsgPvpMatchBestMapServerMS2S* other);

  // implements Message ----------------------------------------------

  MsgPvpMatchBestMapServerMS2S* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgPvpMatchBestMapServerMS2S& from);
  void MergeFrom(const MsgPvpMatchBestMapServerMS2S& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_PVP_MATCH_BEST_MAP_SERVER_MS2S];
  inline bool has_msgtype() const;
  inline void clear_msgtype();
  static const int kMsgTypeFieldNumber = 1;
  inline ::MsgPB::EMsgType msgtype() const;
  inline void set_msgtype(::MsgPB::EMsgType value);

  // optional int64 queueIndex = 2;
  inline bool has_queueindex() const;
  inline void clear_queueindex();
  static const int kQueueIndexFieldNumber = 2;
  inline ::google::protobuf::int64 queueindex() const;
  inline void set_queueindex(::google::protobuf::int64 value);

  // optional int32 operType = 3;
  inline bool has_opertype() const;
  inline void clear_opertype();
  static const int kOperTypeFieldNumber = 3;
  inline ::google::protobuf::int32 opertype() const;
  inline void set_opertype(::google::protobuf::int32 value);

  // optional uint32 idArea = 4;
  inline bool has_idarea() const;
  inline void clear_idarea();
  static const int kIdAreaFieldNumber = 4;
  inline ::google::protobuf::uint32 idarea() const;
  inline void set_idarea(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:MsgPB.MsgPvpMatchBestMapServerMS2S)
 private:
  inline void set_has_msgtype();
  inline void clear_has_msgtype();
  inline void set_has_queueindex();
  inline void clear_has_queueindex();
  inline void set_has_opertype();
  inline void clear_has_opertype();
  inline void set_has_idarea();
  inline void clear_has_idarea();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 queueindex_;
  int msgtype_;
  ::google::protobuf::int32 opertype_;
  ::google::protobuf::uint32 idarea_;
  friend void  protobuf_AddDesc_MsgPVP_2eproto();
  friend void protobuf_AssignDesc_MsgPVP_2eproto();
  friend void protobuf_ShutdownFile_MsgPVP_2eproto();

  void InitAsDefaultInstance();
  static MsgPvpMatchBestMapServerMS2S* default_instance_;
};
// -------------------------------------------------------------------

class MsgPVPCreateMapMS2S : public ::google::protobuf::Message {
 public:
  MsgPVPCreateMapMS2S();
  virtual ~MsgPVPCreateMapMS2S();

  MsgPVPCreateMapMS2S(const MsgPVPCreateMapMS2S& from);

  inline MsgPVPCreateMapMS2S& operator=(const MsgPVPCreateMapMS2S& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgPVPCreateMapMS2S& default_instance();

  void Swap(MsgPVPCreateMapMS2S* other);

  // implements Message ----------------------------------------------

  MsgPVPCreateMapMS2S* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgPVPCreateMapMS2S& from);
  void MergeFrom(const MsgPVPCreateMapMS2S& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_PVP_CREATE_MAP_MS2S];
  inline bool has_msgtype() const;
  inline void clear_msgtype();
  static const int kMsgTypeFieldNumber = 1;
  inline ::MsgPB::EMsgType msgtype() const;
  inline void set_msgtype(::MsgPB::EMsgType value);

  // optional int64 queueIndex = 2;
  inline bool has_queueindex() const;
  inline void clear_queueindex();
  static const int kQueueIndexFieldNumber = 2;
  inline ::google::protobuf::int64 queueindex() const;
  inline void set_queueindex(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:MsgPB.MsgPVPCreateMapMS2S)
 private:
  inline void set_has_msgtype();
  inline void clear_has_msgtype();
  inline void set_has_queueindex();
  inline void clear_has_queueindex();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 queueindex_;
  int msgtype_;
  friend void  protobuf_AddDesc_MsgPVP_2eproto();
  friend void protobuf_AssignDesc_MsgPVP_2eproto();
  friend void protobuf_ShutdownFile_MsgPVP_2eproto();

  void InitAsDefaultInstance();
  static MsgPVPCreateMapMS2S* default_instance_;
};
// -------------------------------------------------------------------

class MsgPVPCreateMapResultS2MS : public ::google::protobuf::Message {
 public:
  MsgPVPCreateMapResultS2MS();
  virtual ~MsgPVPCreateMapResultS2MS();

  MsgPVPCreateMapResultS2MS(const MsgPVPCreateMapResultS2MS& from);

  inline MsgPVPCreateMapResultS2MS& operator=(const MsgPVPCreateMapResultS2MS& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgPVPCreateMapResultS2MS& default_instance();

  void Swap(MsgPVPCreateMapResultS2MS* other);

  // implements Message ----------------------------------------------

  MsgPVPCreateMapResultS2MS* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgPVPCreateMapResultS2MS& from);
  void MergeFrom(const MsgPVPCreateMapResultS2MS& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_PVP_CREATE_MAP_RESULT_S2MS];
  inline bool has_msgtype() const;
  inline void clear_msgtype();
  static const int kMsgTypeFieldNumber = 1;
  inline ::MsgPB::EMsgType msgtype() const;
  inline void set_msgtype(::MsgPB::EMsgType value);

  // optional int64 queueIndex = 2;
  inline bool has_queueindex() const;
  inline void clear_queueindex();
  static const int kQueueIndexFieldNumber = 2;
  inline ::google::protobuf::int64 queueindex() const;
  inline void set_queueindex(::google::protobuf::int64 value);

  // optional int64 mapuuid = 3;
  inline bool has_mapuuid() const;
  inline void clear_mapuuid();
  static const int kMapuuidFieldNumber = 3;
  inline ::google::protobuf::int64 mapuuid() const;
  inline void set_mapuuid(::google::protobuf::int64 value);

  // optional int32 mapid = 4;
  inline bool has_mapid() const;
  inline void clear_mapid();
  static const int kMapidFieldNumber = 4;
  inline ::google::protobuf::int32 mapid() const;
  inline void set_mapid(::google::protobuf::int32 value);

  // optional int32 mapserverId = 5;
  inline bool has_mapserverid() const;
  inline void clear_mapserverid();
  static const int kMapserverIdFieldNumber = 5;
  inline ::google::protobuf::int32 mapserverid() const;
  inline void set_mapserverid(::google::protobuf::int32 value);

  // optional .MsgPB.ENUM_CREATE_PVP_MAP_RESULT result = 6;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 6;
  inline ::MsgPB::ENUM_CREATE_PVP_MAP_RESULT result() const;
  inline void set_result(::MsgPB::ENUM_CREATE_PVP_MAP_RESULT value);

  // optional int64 iggid = 7;
  inline bool has_iggid() const;
  inline void clear_iggid();
  static const int kIggidFieldNumber = 7;
  inline ::google::protobuf::int64 iggid() const;
  inline void set_iggid(::google::protobuf::int64 value);

  // optional string mapfilename = 8;
  inline bool has_mapfilename() const;
  inline void clear_mapfilename();
  static const int kMapfilenameFieldNumber = 8;
  inline const ::std::string& mapfilename() const;
  inline void set_mapfilename(const ::std::string& value);
  inline void set_mapfilename(const char* value);
  inline void set_mapfilename(const char* value, size_t size);
  inline ::std::string* mutable_mapfilename();
  inline ::std::string* release_mapfilename();
  inline void set_allocated_mapfilename(::std::string* mapfilename);

  // @@protoc_insertion_point(class_scope:MsgPB.MsgPVPCreateMapResultS2MS)
 private:
  inline void set_has_msgtype();
  inline void clear_has_msgtype();
  inline void set_has_queueindex();
  inline void clear_has_queueindex();
  inline void set_has_mapuuid();
  inline void clear_has_mapuuid();
  inline void set_has_mapid();
  inline void clear_has_mapid();
  inline void set_has_mapserverid();
  inline void clear_has_mapserverid();
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_iggid();
  inline void clear_has_iggid();
  inline void set_has_mapfilename();
  inline void clear_has_mapfilename();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 queueindex_;
  int msgtype_;
  ::google::protobuf::int32 mapid_;
  ::google::protobuf::int64 mapuuid_;
  ::google::protobuf::int32 mapserverid_;
  int result_;
  ::google::protobuf::int64 iggid_;
  ::std::string* mapfilename_;
  friend void  protobuf_AddDesc_MsgPVP_2eproto();
  friend void protobuf_AssignDesc_MsgPVP_2eproto();
  friend void protobuf_ShutdownFile_MsgPVP_2eproto();

  void InitAsDefaultInstance();
  static MsgPVPCreateMapResultS2MS* default_instance_;
};
// -------------------------------------------------------------------

class MsgStartEnterWarPostion : public ::google::protobuf::Message {
 public:
  MsgStartEnterWarPostion();
  virtual ~MsgStartEnterWarPostion();

  MsgStartEnterWarPostion(const MsgStartEnterWarPostion& from);

  inline MsgStartEnterWarPostion& operator=(const MsgStartEnterWarPostion& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgStartEnterWarPostion& default_instance();

  void Swap(MsgStartEnterWarPostion* other);

  // implements Message ----------------------------------------------

  MsgStartEnterWarPostion* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgStartEnterWarPostion& from);
  void MergeFrom(const MsgStartEnterWarPostion& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_START_ENTER_WAR_POSTION];
  inline bool has_msgtype() const;
  inline void clear_msgtype();
  static const int kMsgTypeFieldNumber = 1;
  inline ::MsgPB::EMsgType msgtype() const;
  inline void set_msgtype(::MsgPB::EMsgType value);

  // optional int64 queueIndex = 2;
  inline bool has_queueindex() const;
  inline void clear_queueindex();
  static const int kQueueIndexFieldNumber = 2;
  inline ::google::protobuf::int64 queueindex() const;
  inline void set_queueindex(::google::protobuf::int64 value);

  // optional int64 mapuuid = 3;
  inline bool has_mapuuid() const;
  inline void clear_mapuuid();
  static const int kMapuuidFieldNumber = 3;
  inline ::google::protobuf::int64 mapuuid() const;
  inline void set_mapuuid(::google::protobuf::int64 value);

  // optional int32 mapid = 4;
  inline bool has_mapid() const;
  inline void clear_mapid();
  static const int kMapidFieldNumber = 4;
  inline ::google::protobuf::int32 mapid() const;
  inline void set_mapid(::google::protobuf::int32 value);

  // optional int32 mapserverId = 5;
  inline bool has_mapserverid() const;
  inline void clear_mapserverid();
  static const int kMapserverIdFieldNumber = 5;
  inline ::google::protobuf::int32 mapserverid() const;
  inline void set_mapserverid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:MsgPB.MsgStartEnterWarPostion)
 private:
  inline void set_has_msgtype();
  inline void clear_has_msgtype();
  inline void set_has_queueindex();
  inline void clear_has_queueindex();
  inline void set_has_mapuuid();
  inline void clear_has_mapuuid();
  inline void set_has_mapid();
  inline void clear_has_mapid();
  inline void set_has_mapserverid();
  inline void clear_has_mapserverid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 queueindex_;
  int msgtype_;
  ::google::protobuf::int32 mapid_;
  ::google::protobuf::int64 mapuuid_;
  ::google::protobuf::int32 mapserverid_;
  friend void  protobuf_AddDesc_MsgPVP_2eproto();
  friend void protobuf_AssignDesc_MsgPVP_2eproto();
  friend void protobuf_ShutdownFile_MsgPVP_2eproto();

  void InitAsDefaultInstance();
  static MsgStartEnterWarPostion* default_instance_;
};
// -------------------------------------------------------------------

class MsgPVPRankC2S : public ::google::protobuf::Message {
 public:
  MsgPVPRankC2S();
  virtual ~MsgPVPRankC2S();

  MsgPVPRankC2S(const MsgPVPRankC2S& from);

  inline MsgPVPRankC2S& operator=(const MsgPVPRankC2S& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgPVPRankC2S& default_instance();

  void Swap(MsgPVPRankC2S* other);

  // implements Message ----------------------------------------------

  MsgPVPRankC2S* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgPVPRankC2S& from);
  void MergeFrom(const MsgPVPRankC2S& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_PVP_RANK_C2S];
  inline bool has_msgtype() const;
  inline void clear_msgtype();
  static const int kMsgTypeFieldNumber = 1;
  inline ::MsgPB::EMsgType msgtype() const;
  inline void set_msgtype(::MsgPB::EMsgType value);

  // optional int64 iggid = 2;
  inline bool has_iggid() const;
  inline void clear_iggid();
  static const int kIggidFieldNumber = 2;
  inline ::google::protobuf::int64 iggid() const;
  inline void set_iggid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:MsgPB.MsgPVPRankC2S)
 private:
  inline void set_has_msgtype();
  inline void clear_has_msgtype();
  inline void set_has_iggid();
  inline void clear_has_iggid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 iggid_;
  int msgtype_;
  friend void  protobuf_AddDesc_MsgPVP_2eproto();
  friend void protobuf_AssignDesc_MsgPVP_2eproto();
  friend void protobuf_ShutdownFile_MsgPVP_2eproto();

  void InitAsDefaultInstance();
  static MsgPVPRankC2S* default_instance_;
};
// -------------------------------------------------------------------

class RankInfo : public ::google::protobuf::Message {
 public:
  RankInfo();
  virtual ~RankInfo();

  RankInfo(const RankInfo& from);

  inline RankInfo& operator=(const RankInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RankInfo& default_instance();

  void Swap(RankInfo* other);

  // implements Message ----------------------------------------------

  RankInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RankInfo& from);
  void MergeFrom(const RankInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 iggid = 1;
  inline bool has_iggid() const;
  inline void clear_iggid();
  static const int kIggidFieldNumber = 1;
  inline ::google::protobuf::int64 iggid() const;
  inline void set_iggid(::google::protobuf::int64 value);

  // optional int32 lv = 2;
  inline bool has_lv() const;
  inline void clear_lv();
  static const int kLvFieldNumber = 2;
  inline ::google::protobuf::int32 lv() const;
  inline void set_lv(::google::protobuf::int32 value);

  // optional int32 face = 3;
  inline bool has_face() const;
  inline void clear_face();
  static const int kFaceFieldNumber = 3;
  inline ::google::protobuf::int32 face() const;
  inline void set_face(::google::protobuf::int32 value);

  // optional string name = 4;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 4;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:MsgPB.RankInfo)
 private:
  inline void set_has_iggid();
  inline void clear_has_iggid();
  inline void set_has_lv();
  inline void clear_has_lv();
  inline void set_has_face();
  inline void clear_has_face();
  inline void set_has_name();
  inline void clear_has_name();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 iggid_;
  ::google::protobuf::int32 lv_;
  ::google::protobuf::int32 face_;
  ::std::string* name_;
  friend void  protobuf_AddDesc_MsgPVP_2eproto();
  friend void protobuf_AssignDesc_MsgPVP_2eproto();
  friend void protobuf_ShutdownFile_MsgPVP_2eproto();

  void InitAsDefaultInstance();
  static RankInfo* default_instance_;
};
// -------------------------------------------------------------------

class MsgPVPRankS2C : public ::google::protobuf::Message {
 public:
  MsgPVPRankS2C();
  virtual ~MsgPVPRankS2C();

  MsgPVPRankS2C(const MsgPVPRankS2C& from);

  inline MsgPVPRankS2C& operator=(const MsgPVPRankS2C& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgPVPRankS2C& default_instance();

  void Swap(MsgPVPRankS2C* other);

  // implements Message ----------------------------------------------

  MsgPVPRankS2C* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgPVPRankS2C& from);
  void MergeFrom(const MsgPVPRankS2C& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_PVP_RANK_S2C];
  inline bool has_msgtype() const;
  inline void clear_msgtype();
  static const int kMsgTypeFieldNumber = 1;
  inline ::MsgPB::EMsgType msgtype() const;
  inline void set_msgtype(::MsgPB::EMsgType value);

  // optional int64 iggid = 2;
  inline bool has_iggid() const;
  inline void clear_iggid();
  static const int kIggidFieldNumber = 2;
  inline ::google::protobuf::int64 iggid() const;
  inline void set_iggid(::google::protobuf::int64 value);

  // optional .MsgPB.MSG_RANK_RESULT res = 3;
  inline bool has_res() const;
  inline void clear_res();
  static const int kResFieldNumber = 3;
  inline ::MsgPB::MSG_RANK_RESULT res() const;
  inline void set_res(::MsgPB::MSG_RANK_RESULT value);

  // repeated .MsgPB.RankInfo rankobjs = 4;
  inline int rankobjs_size() const;
  inline void clear_rankobjs();
  static const int kRankobjsFieldNumber = 4;
  inline const ::MsgPB::RankInfo& rankobjs(int index) const;
  inline ::MsgPB::RankInfo* mutable_rankobjs(int index);
  inline ::MsgPB::RankInfo* add_rankobjs();
  inline const ::google::protobuf::RepeatedPtrField< ::MsgPB::RankInfo >&
      rankobjs() const;
  inline ::google::protobuf::RepeatedPtrField< ::MsgPB::RankInfo >*
      mutable_rankobjs();

  // @@protoc_insertion_point(class_scope:MsgPB.MsgPVPRankS2C)
 private:
  inline void set_has_msgtype();
  inline void clear_has_msgtype();
  inline void set_has_iggid();
  inline void clear_has_iggid();
  inline void set_has_res();
  inline void clear_has_res();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 iggid_;
  int msgtype_;
  int res_;
  ::google::protobuf::RepeatedPtrField< ::MsgPB::RankInfo > rankobjs_;
  friend void  protobuf_AddDesc_MsgPVP_2eproto();
  friend void protobuf_AssignDesc_MsgPVP_2eproto();
  friend void protobuf_ShutdownFile_MsgPVP_2eproto();

  void InitAsDefaultInstance();
  static MsgPVPRankS2C* default_instance_;
};
// -------------------------------------------------------------------

class MsgPVPOutS2C : public ::google::protobuf::Message {
 public:
  MsgPVPOutS2C();
  virtual ~MsgPVPOutS2C();

  MsgPVPOutS2C(const MsgPVPOutS2C& from);

  inline MsgPVPOutS2C& operator=(const MsgPVPOutS2C& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgPVPOutS2C& default_instance();

  void Swap(MsgPVPOutS2C* other);

  // implements Message ----------------------------------------------

  MsgPVPOutS2C* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgPVPOutS2C& from);
  void MergeFrom(const MsgPVPOutS2C& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_PVP_OUT_S2C];
  inline bool has_msgtype() const;
  inline void clear_msgtype();
  static const int kMsgTypeFieldNumber = 1;
  inline ::MsgPB::EMsgType msgtype() const;
  inline void set_msgtype(::MsgPB::EMsgType value);

  // optional int64 iggid = 2;
  inline bool has_iggid() const;
  inline void clear_iggid();
  static const int kIggidFieldNumber = 2;
  inline ::google::protobuf::int64 iggid() const;
  inline void set_iggid(::google::protobuf::int64 value);

  // optional int32 rank = 3;
  inline bool has_rank() const;
  inline void clear_rank();
  static const int kRankFieldNumber = 3;
  inline ::google::protobuf::int32 rank() const;
  inline void set_rank(::google::protobuf::int32 value);

  // optional string killer = 4;
  inline bool has_killer() const;
  inline void clear_killer();
  static const int kKillerFieldNumber = 4;
  inline const ::std::string& killer() const;
  inline void set_killer(const ::std::string& value);
  inline void set_killer(const char* value);
  inline void set_killer(const char* value, size_t size);
  inline ::std::string* mutable_killer();
  inline ::std::string* release_killer();
  inline void set_allocated_killer(::std::string* killer);

  // optional string deader = 5;
  inline bool has_deader() const;
  inline void clear_deader();
  static const int kDeaderFieldNumber = 5;
  inline const ::std::string& deader() const;
  inline void set_deader(const ::std::string& value);
  inline void set_deader(const char* value);
  inline void set_deader(const char* value, size_t size);
  inline ::std::string* mutable_deader();
  inline ::std::string* release_deader();
  inline void set_allocated_deader(::std::string* deader);

  // optional int32 idWeapon = 6;
  inline bool has_idweapon() const;
  inline void clear_idweapon();
  static const int kIdWeaponFieldNumber = 6;
  inline ::google::protobuf::int32 idweapon() const;
  inline void set_idweapon(::google::protobuf::int32 value);

  // optional int32 idMob = 7;
  inline bool has_idmob() const;
  inline void clear_idmob();
  static const int kIdMobFieldNumber = 7;
  inline ::google::protobuf::int32 idmob() const;
  inline void set_idmob(::google::protobuf::int32 value);

  // optional int32 idObjKiller = 8;
  inline bool has_idobjkiller() const;
  inline void clear_idobjkiller();
  static const int kIdObjKillerFieldNumber = 8;
  inline ::google::protobuf::int32 idobjkiller() const;
  inline void set_idobjkiller(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:MsgPB.MsgPVPOutS2C)
 private:
  inline void set_has_msgtype();
  inline void clear_has_msgtype();
  inline void set_has_iggid();
  inline void clear_has_iggid();
  inline void set_has_rank();
  inline void clear_has_rank();
  inline void set_has_killer();
  inline void clear_has_killer();
  inline void set_has_deader();
  inline void clear_has_deader();
  inline void set_has_idweapon();
  inline void clear_has_idweapon();
  inline void set_has_idmob();
  inline void clear_has_idmob();
  inline void set_has_idobjkiller();
  inline void clear_has_idobjkiller();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 iggid_;
  int msgtype_;
  ::google::protobuf::int32 rank_;
  ::std::string* killer_;
  ::std::string* deader_;
  ::google::protobuf::int32 idweapon_;
  ::google::protobuf::int32 idmob_;
  ::google::protobuf::int32 idobjkiller_;
  friend void  protobuf_AddDesc_MsgPVP_2eproto();
  friend void protobuf_AssignDesc_MsgPVP_2eproto();
  friend void protobuf_ShutdownFile_MsgPVP_2eproto();

  void InitAsDefaultInstance();
  static MsgPVPOutS2C* default_instance_;
};
// -------------------------------------------------------------------

class MsgPVPStart : public ::google::protobuf::Message {
 public:
  MsgPVPStart();
  virtual ~MsgPVPStart();

  MsgPVPStart(const MsgPVPStart& from);

  inline MsgPVPStart& operator=(const MsgPVPStart& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgPVPStart& default_instance();

  void Swap(MsgPVPStart* other);

  // implements Message ----------------------------------------------

  MsgPVPStart* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgPVPStart& from);
  void MergeFrom(const MsgPVPStart& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_PVP_START_S2C];
  inline bool has_msgtype() const;
  inline void clear_msgtype();
  static const int kMsgTypeFieldNumber = 1;
  inline ::MsgPB::EMsgType msgtype() const;
  inline void set_msgtype(::MsgPB::EMsgType value);

  // optional int64 iggid = 2;
  inline bool has_iggid() const;
  inline void clear_iggid();
  static const int kIggidFieldNumber = 2;
  inline ::google::protobuf::int64 iggid() const;
  inline void set_iggid(::google::protobuf::int64 value);

  // optional int32 total = 3;
  inline bool has_total() const;
  inline void clear_total();
  static const int kTotalFieldNumber = 3;
  inline ::google::protobuf::int32 total() const;
  inline void set_total(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:MsgPB.MsgPVPStart)
 private:
  inline void set_has_msgtype();
  inline void clear_has_msgtype();
  inline void set_has_iggid();
  inline void clear_has_iggid();
  inline void set_has_total();
  inline void clear_has_total();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 iggid_;
  int msgtype_;
  ::google::protobuf::int32 total_;
  friend void  protobuf_AddDesc_MsgPVP_2eproto();
  friend void protobuf_AssignDesc_MsgPVP_2eproto();
  friend void protobuf_ShutdownFile_MsgPVP_2eproto();

  void InitAsDefaultInstance();
  static MsgPVPStart* default_instance_;
};
// -------------------------------------------------------------------

class MsgPVPGasS2C : public ::google::protobuf::Message {
 public:
  MsgPVPGasS2C();
  virtual ~MsgPVPGasS2C();

  MsgPVPGasS2C(const MsgPVPGasS2C& from);

  inline MsgPVPGasS2C& operator=(const MsgPVPGasS2C& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgPVPGasS2C& default_instance();

  void Swap(MsgPVPGasS2C* other);

  // implements Message ----------------------------------------------

  MsgPVPGasS2C* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgPVPGasS2C& from);
  void MergeFrom(const MsgPVPGasS2C& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_PVP_GAS_S2C];
  inline bool has_msgtype() const;
  inline void clear_msgtype();
  static const int kMsgTypeFieldNumber = 1;
  inline ::MsgPB::EMsgType msgtype() const;
  inline void set_msgtype(::MsgPB::EMsgType value);

  // optional int64 iggid = 2;
  inline bool has_iggid() const;
  inline void clear_iggid();
  static const int kIggidFieldNumber = 2;
  inline ::google::protobuf::int64 iggid() const;
  inline void set_iggid(::google::protobuf::int64 value);

  // optional int64 opentime = 3;
  inline bool has_opentime() const;
  inline void clear_opentime();
  static const int kOpentimeFieldNumber = 3;
  inline ::google::protobuf::int64 opentime() const;
  inline void set_opentime(::google::protobuf::int64 value);

  // optional int32 posx = 4;
  inline bool has_posx() const;
  inline void clear_posx();
  static const int kPosxFieldNumber = 4;
  inline ::google::protobuf::int32 posx() const;
  inline void set_posx(::google::protobuf::int32 value);

  // optional int32 posy = 5;
  inline bool has_posy() const;
  inline void clear_posy();
  static const int kPosyFieldNumber = 5;
  inline ::google::protobuf::int32 posy() const;
  inline void set_posy(::google::protobuf::int32 value);

  // optional int32 radius = 6;
  inline bool has_radius() const;
  inline void clear_radius();
  static const int kRadiusFieldNumber = 6;
  inline ::google::protobuf::int32 radius() const;
  inline void set_radius(::google::protobuf::int32 value);

  // optional int32 speed = 7;
  inline bool has_speed() const;
  inline void clear_speed();
  static const int kSpeedFieldNumber = 7;
  inline ::google::protobuf::int32 speed() const;
  inline void set_speed(::google::protobuf::int32 value);

  // optional int32 radius_min = 8;
  inline bool has_radius_min() const;
  inline void clear_radius_min();
  static const int kRadiusMinFieldNumber = 8;
  inline ::google::protobuf::int32 radius_min() const;
  inline void set_radius_min(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:MsgPB.MsgPVPGasS2C)
 private:
  inline void set_has_msgtype();
  inline void clear_has_msgtype();
  inline void set_has_iggid();
  inline void clear_has_iggid();
  inline void set_has_opentime();
  inline void clear_has_opentime();
  inline void set_has_posx();
  inline void clear_has_posx();
  inline void set_has_posy();
  inline void clear_has_posy();
  inline void set_has_radius();
  inline void clear_has_radius();
  inline void set_has_speed();
  inline void clear_has_speed();
  inline void set_has_radius_min();
  inline void clear_has_radius_min();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 iggid_;
  int msgtype_;
  ::google::protobuf::int32 posx_;
  ::google::protobuf::int64 opentime_;
  ::google::protobuf::int32 posy_;
  ::google::protobuf::int32 radius_;
  ::google::protobuf::int32 speed_;
  ::google::protobuf::int32 radius_min_;
  friend void  protobuf_AddDesc_MsgPVP_2eproto();
  friend void protobuf_AssignDesc_MsgPVP_2eproto();
  friend void protobuf_ShutdownFile_MsgPVP_2eproto();

  void InitAsDefaultInstance();
  static MsgPVPGasS2C* default_instance_;
};
// -------------------------------------------------------------------

class MsgPVPRewardS2C : public ::google::protobuf::Message {
 public:
  MsgPVPRewardS2C();
  virtual ~MsgPVPRewardS2C();

  MsgPVPRewardS2C(const MsgPVPRewardS2C& from);

  inline MsgPVPRewardS2C& operator=(const MsgPVPRewardS2C& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgPVPRewardS2C& default_instance();

  void Swap(MsgPVPRewardS2C* other);

  // implements Message ----------------------------------------------

  MsgPVPRewardS2C* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgPVPRewardS2C& from);
  void MergeFrom(const MsgPVPRewardS2C& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_PVP_REWARD_S2C];
  inline bool has_msgtype() const;
  inline void clear_msgtype();
  static const int kMsgTypeFieldNumber = 1;
  inline ::MsgPB::EMsgType msgtype() const;
  inline void set_msgtype(::MsgPB::EMsgType value);

  // optional int64 iggid = 2;
  inline bool has_iggid() const;
  inline void clear_iggid();
  static const int kIggidFieldNumber = 2;
  inline ::google::protobuf::int64 iggid() const;
  inline void set_iggid(::google::protobuf::int64 value);

  // optional int32 total = 3;
  inline bool has_total() const;
  inline void clear_total();
  static const int kTotalFieldNumber = 3;
  inline ::google::protobuf::int32 total() const;
  inline void set_total(::google::protobuf::int32 value);

  // optional int32 rank = 4;
  inline bool has_rank() const;
  inline void clear_rank();
  static const int kRankFieldNumber = 4;
  inline ::google::protobuf::int32 rank() const;
  inline void set_rank(::google::protobuf::int32 value);

  // optional int32 killNum = 5;
  inline bool has_killnum() const;
  inline void clear_killnum();
  static const int kKillNumFieldNumber = 5;
  inline ::google::protobuf::int32 killnum() const;
  inline void set_killnum(::google::protobuf::int32 value);

  // optional int32 resourse = 6;
  inline bool has_resourse() const;
  inline void clear_resourse();
  static const int kResourseFieldNumber = 6;
  inline ::google::protobuf::int32 resourse() const;
  inline void set_resourse(::google::protobuf::int32 value);

  // optional int32 coin = 7;
  inline bool has_coin() const;
  inline void clear_coin();
  static const int kCoinFieldNumber = 7;
  inline ::google::protobuf::int32 coin() const;
  inline void set_coin(::google::protobuf::int32 value);

  // optional int32 score = 8;
  inline bool has_score() const;
  inline void clear_score();
  static const int kScoreFieldNumber = 8;
  inline ::google::protobuf::int32 score() const;
  inline void set_score(::google::protobuf::int32 value);

  // optional int32 segment = 9;
  inline bool has_segment() const;
  inline void clear_segment();
  static const int kSegmentFieldNumber = 9;
  inline ::google::protobuf::int32 segment() const;
  inline void set_segment(::google::protobuf::int32 value);

  // optional int32 killScore = 10;
  inline bool has_killscore() const;
  inline void clear_killscore();
  static const int kKillScoreFieldNumber = 10;
  inline ::google::protobuf::int32 killscore() const;
  inline void set_killscore(::google::protobuf::int32 value);

  // optional int32 rankScore = 11;
  inline bool has_rankscore() const;
  inline void clear_rankscore();
  static const int kRankScoreFieldNumber = 11;
  inline ::google::protobuf::int32 rankscore() const;
  inline void set_rankscore(::google::protobuf::int32 value);

  // optional int32 resScore = 12;
  inline bool has_resscore() const;
  inline void clear_resscore();
  static const int kResScoreFieldNumber = 12;
  inline ::google::protobuf::int32 resscore() const;
  inline void set_resscore(::google::protobuf::int32 value);

  // optional int32 totalScore = 13;
  inline bool has_totalscore() const;
  inline void clear_totalscore();
  static const int kTotalScoreFieldNumber = 13;
  inline ::google::protobuf::int32 totalscore() const;
  inline void set_totalscore(::google::protobuf::int32 value);

  // optional int32 totalKillScore = 14;
  inline bool has_totalkillscore() const;
  inline void clear_totalkillscore();
  static const int kTotalKillScoreFieldNumber = 14;
  inline ::google::protobuf::int32 totalkillscore() const;
  inline void set_totalkillscore(::google::protobuf::int32 value);

  // optional int32 totalRankScore = 15;
  inline bool has_totalrankscore() const;
  inline void clear_totalrankscore();
  static const int kTotalRankScoreFieldNumber = 15;
  inline ::google::protobuf::int32 totalrankscore() const;
  inline void set_totalrankscore(::google::protobuf::int32 value);

  // optional int32 totalTime = 16;
  inline bool has_totaltime() const;
  inline void clear_totaltime();
  static const int kTotalTimeFieldNumber = 16;
  inline ::google::protobuf::int32 totaltime() const;
  inline void set_totaltime(::google::protobuf::int32 value);

  // optional int32 totalPvpCoin = 17;
  inline bool has_totalpvpcoin() const;
  inline void clear_totalpvpcoin();
  static const int kTotalPvpCoinFieldNumber = 17;
  inline ::google::protobuf::int32 totalpvpcoin() const;
  inline void set_totalpvpcoin(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:MsgPB.MsgPVPRewardS2C)
 private:
  inline void set_has_msgtype();
  inline void clear_has_msgtype();
  inline void set_has_iggid();
  inline void clear_has_iggid();
  inline void set_has_total();
  inline void clear_has_total();
  inline void set_has_rank();
  inline void clear_has_rank();
  inline void set_has_killnum();
  inline void clear_has_killnum();
  inline void set_has_resourse();
  inline void clear_has_resourse();
  inline void set_has_coin();
  inline void clear_has_coin();
  inline void set_has_score();
  inline void clear_has_score();
  inline void set_has_segment();
  inline void clear_has_segment();
  inline void set_has_killscore();
  inline void clear_has_killscore();
  inline void set_has_rankscore();
  inline void clear_has_rankscore();
  inline void set_has_resscore();
  inline void clear_has_resscore();
  inline void set_has_totalscore();
  inline void clear_has_totalscore();
  inline void set_has_totalkillscore();
  inline void clear_has_totalkillscore();
  inline void set_has_totalrankscore();
  inline void clear_has_totalrankscore();
  inline void set_has_totaltime();
  inline void clear_has_totaltime();
  inline void set_has_totalpvpcoin();
  inline void clear_has_totalpvpcoin();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 iggid_;
  int msgtype_;
  ::google::protobuf::int32 total_;
  ::google::protobuf::int32 rank_;
  ::google::protobuf::int32 killnum_;
  ::google::protobuf::int32 resourse_;
  ::google::protobuf::int32 coin_;
  ::google::protobuf::int32 score_;
  ::google::protobuf::int32 segment_;
  ::google::protobuf::int32 killscore_;
  ::google::protobuf::int32 rankscore_;
  ::google::protobuf::int32 resscore_;
  ::google::protobuf::int32 totalscore_;
  ::google::protobuf::int32 totalkillscore_;
  ::google::protobuf::int32 totalrankscore_;
  ::google::protobuf::int32 totaltime_;
  ::google::protobuf::int32 totalpvpcoin_;
  friend void  protobuf_AddDesc_MsgPVP_2eproto();
  friend void protobuf_AssignDesc_MsgPVP_2eproto();
  friend void protobuf_ShutdownFile_MsgPVP_2eproto();

  void InitAsDefaultInstance();
  static MsgPVPRewardS2C* default_instance_;
};
// -------------------------------------------------------------------

class MsgPVPDiscardWeaponC2S : public ::google::protobuf::Message {
 public:
  MsgPVPDiscardWeaponC2S();
  virtual ~MsgPVPDiscardWeaponC2S();

  MsgPVPDiscardWeaponC2S(const MsgPVPDiscardWeaponC2S& from);

  inline MsgPVPDiscardWeaponC2S& operator=(const MsgPVPDiscardWeaponC2S& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgPVPDiscardWeaponC2S& default_instance();

  void Swap(MsgPVPDiscardWeaponC2S* other);

  // implements Message ----------------------------------------------

  MsgPVPDiscardWeaponC2S* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgPVPDiscardWeaponC2S& from);
  void MergeFrom(const MsgPVPDiscardWeaponC2S& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_PVP_DISCARD_WEAPON_C2S];
  inline bool has_msgtype() const;
  inline void clear_msgtype();
  static const int kMsgTypeFieldNumber = 1;
  inline ::MsgPB::EMsgType msgtype() const;
  inline void set_msgtype(::MsgPB::EMsgType value);

  // optional int64 iggid = 2;
  inline bool has_iggid() const;
  inline void clear_iggid();
  static const int kIggidFieldNumber = 2;
  inline ::google::protobuf::int64 iggid() const;
  inline void set_iggid(::google::protobuf::int64 value);

  // optional int32 index = 3;
  inline bool has_index() const;
  inline void clear_index();
  static const int kIndexFieldNumber = 3;
  inline ::google::protobuf::int32 index() const;
  inline void set_index(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:MsgPB.MsgPVPDiscardWeaponC2S)
 private:
  inline void set_has_msgtype();
  inline void clear_has_msgtype();
  inline void set_has_iggid();
  inline void clear_has_iggid();
  inline void set_has_index();
  inline void clear_has_index();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 iggid_;
  int msgtype_;
  ::google::protobuf::int32 index_;
  friend void  protobuf_AddDesc_MsgPVP_2eproto();
  friend void protobuf_AssignDesc_MsgPVP_2eproto();
  friend void protobuf_ShutdownFile_MsgPVP_2eproto();

  void InitAsDefaultInstance();
  static MsgPVPDiscardWeaponC2S* default_instance_;
};
// -------------------------------------------------------------------

class MsgPVPDiscardWeaponS2C : public ::google::protobuf::Message {
 public:
  MsgPVPDiscardWeaponS2C();
  virtual ~MsgPVPDiscardWeaponS2C();

  MsgPVPDiscardWeaponS2C(const MsgPVPDiscardWeaponS2C& from);

  inline MsgPVPDiscardWeaponS2C& operator=(const MsgPVPDiscardWeaponS2C& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgPVPDiscardWeaponS2C& default_instance();

  void Swap(MsgPVPDiscardWeaponS2C* other);

  // implements Message ----------------------------------------------

  MsgPVPDiscardWeaponS2C* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgPVPDiscardWeaponS2C& from);
  void MergeFrom(const MsgPVPDiscardWeaponS2C& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_PVP_DISCARD_WEAPON_S2C];
  inline bool has_msgtype() const;
  inline void clear_msgtype();
  static const int kMsgTypeFieldNumber = 1;
  inline ::MsgPB::EMsgType msgtype() const;
  inline void set_msgtype(::MsgPB::EMsgType value);

  // optional int64 iggid = 2;
  inline bool has_iggid() const;
  inline void clear_iggid();
  static const int kIggidFieldNumber = 2;
  inline ::google::protobuf::int64 iggid() const;
  inline void set_iggid(::google::protobuf::int64 value);

  // optional int32 index = 3;
  inline bool has_index() const;
  inline void clear_index();
  static const int kIndexFieldNumber = 3;
  inline ::google::protobuf::int32 index() const;
  inline void set_index(::google::protobuf::int32 value);

  // optional .MsgPB.PVP_WEAPON_RESULT res = 4;
  inline bool has_res() const;
  inline void clear_res();
  static const int kResFieldNumber = 4;
  inline ::MsgPB::PVP_WEAPON_RESULT res() const;
  inline void set_res(::MsgPB::PVP_WEAPON_RESULT value);

  // @@protoc_insertion_point(class_scope:MsgPB.MsgPVPDiscardWeaponS2C)
 private:
  inline void set_has_msgtype();
  inline void clear_has_msgtype();
  inline void set_has_iggid();
  inline void clear_has_iggid();
  inline void set_has_index();
  inline void clear_has_index();
  inline void set_has_res();
  inline void clear_has_res();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 iggid_;
  int msgtype_;
  ::google::protobuf::int32 index_;
  int res_;
  friend void  protobuf_AddDesc_MsgPVP_2eproto();
  friend void protobuf_AssignDesc_MsgPVP_2eproto();
  friend void protobuf_ShutdownFile_MsgPVP_2eproto();

  void InitAsDefaultInstance();
  static MsgPVPDiscardWeaponS2C* default_instance_;
};
// -------------------------------------------------------------------

class MsgPVPChangeWeaponC2S : public ::google::protobuf::Message {
 public:
  MsgPVPChangeWeaponC2S();
  virtual ~MsgPVPChangeWeaponC2S();

  MsgPVPChangeWeaponC2S(const MsgPVPChangeWeaponC2S& from);

  inline MsgPVPChangeWeaponC2S& operator=(const MsgPVPChangeWeaponC2S& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgPVPChangeWeaponC2S& default_instance();

  void Swap(MsgPVPChangeWeaponC2S* other);

  // implements Message ----------------------------------------------

  MsgPVPChangeWeaponC2S* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgPVPChangeWeaponC2S& from);
  void MergeFrom(const MsgPVPChangeWeaponC2S& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_PVP_CHANGE_WEAPON_C2S];
  inline bool has_msgtype() const;
  inline void clear_msgtype();
  static const int kMsgTypeFieldNumber = 1;
  inline ::MsgPB::EMsgType msgtype() const;
  inline void set_msgtype(::MsgPB::EMsgType value);

  // optional int64 iggid = 2;
  inline bool has_iggid() const;
  inline void clear_iggid();
  static const int kIggidFieldNumber = 2;
  inline ::google::protobuf::int64 iggid() const;
  inline void set_iggid(::google::protobuf::int64 value);

  // optional int32 index1 = 3;
  inline bool has_index1() const;
  inline void clear_index1();
  static const int kIndex1FieldNumber = 3;
  inline ::google::protobuf::int32 index1() const;
  inline void set_index1(::google::protobuf::int32 value);

  // optional int32 index2 = 4;
  inline bool has_index2() const;
  inline void clear_index2();
  static const int kIndex2FieldNumber = 4;
  inline ::google::protobuf::int32 index2() const;
  inline void set_index2(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:MsgPB.MsgPVPChangeWeaponC2S)
 private:
  inline void set_has_msgtype();
  inline void clear_has_msgtype();
  inline void set_has_iggid();
  inline void clear_has_iggid();
  inline void set_has_index1();
  inline void clear_has_index1();
  inline void set_has_index2();
  inline void clear_has_index2();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 iggid_;
  int msgtype_;
  ::google::protobuf::int32 index1_;
  ::google::protobuf::int32 index2_;
  friend void  protobuf_AddDesc_MsgPVP_2eproto();
  friend void protobuf_AssignDesc_MsgPVP_2eproto();
  friend void protobuf_ShutdownFile_MsgPVP_2eproto();

  void InitAsDefaultInstance();
  static MsgPVPChangeWeaponC2S* default_instance_;
};
// -------------------------------------------------------------------

class MsgPVPChangeWeaponS2C : public ::google::protobuf::Message {
 public:
  MsgPVPChangeWeaponS2C();
  virtual ~MsgPVPChangeWeaponS2C();

  MsgPVPChangeWeaponS2C(const MsgPVPChangeWeaponS2C& from);

  inline MsgPVPChangeWeaponS2C& operator=(const MsgPVPChangeWeaponS2C& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgPVPChangeWeaponS2C& default_instance();

  void Swap(MsgPVPChangeWeaponS2C* other);

  // implements Message ----------------------------------------------

  MsgPVPChangeWeaponS2C* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgPVPChangeWeaponS2C& from);
  void MergeFrom(const MsgPVPChangeWeaponS2C& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_PVP_CHANGE_WEAPON_S2C];
  inline bool has_msgtype() const;
  inline void clear_msgtype();
  static const int kMsgTypeFieldNumber = 1;
  inline ::MsgPB::EMsgType msgtype() const;
  inline void set_msgtype(::MsgPB::EMsgType value);

  // optional int64 iggid = 2;
  inline bool has_iggid() const;
  inline void clear_iggid();
  static const int kIggidFieldNumber = 2;
  inline ::google::protobuf::int64 iggid() const;
  inline void set_iggid(::google::protobuf::int64 value);

  // optional int32 index1 = 3;
  inline bool has_index1() const;
  inline void clear_index1();
  static const int kIndex1FieldNumber = 3;
  inline ::google::protobuf::int32 index1() const;
  inline void set_index1(::google::protobuf::int32 value);

  // optional int32 index2 = 4;
  inline bool has_index2() const;
  inline void clear_index2();
  static const int kIndex2FieldNumber = 4;
  inline ::google::protobuf::int32 index2() const;
  inline void set_index2(::google::protobuf::int32 value);

  // optional .MsgPB.PVP_WEAPON_RESULT res = 5;
  inline bool has_res() const;
  inline void clear_res();
  static const int kResFieldNumber = 5;
  inline ::MsgPB::PVP_WEAPON_RESULT res() const;
  inline void set_res(::MsgPB::PVP_WEAPON_RESULT value);

  // @@protoc_insertion_point(class_scope:MsgPB.MsgPVPChangeWeaponS2C)
 private:
  inline void set_has_msgtype();
  inline void clear_has_msgtype();
  inline void set_has_iggid();
  inline void clear_has_iggid();
  inline void set_has_index1();
  inline void clear_has_index1();
  inline void set_has_index2();
  inline void clear_has_index2();
  inline void set_has_res();
  inline void clear_has_res();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 iggid_;
  int msgtype_;
  ::google::protobuf::int32 index1_;
  ::google::protobuf::int32 index2_;
  int res_;
  friend void  protobuf_AddDesc_MsgPVP_2eproto();
  friend void protobuf_AssignDesc_MsgPVP_2eproto();
  friend void protobuf_ShutdownFile_MsgPVP_2eproto();

  void InitAsDefaultInstance();
  static MsgPVPChangeWeaponS2C* default_instance_;
};
// -------------------------------------------------------------------

class MsgPVPChoiceWeaponC2S : public ::google::protobuf::Message {
 public:
  MsgPVPChoiceWeaponC2S();
  virtual ~MsgPVPChoiceWeaponC2S();

  MsgPVPChoiceWeaponC2S(const MsgPVPChoiceWeaponC2S& from);

  inline MsgPVPChoiceWeaponC2S& operator=(const MsgPVPChoiceWeaponC2S& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgPVPChoiceWeaponC2S& default_instance();

  void Swap(MsgPVPChoiceWeaponC2S* other);

  // implements Message ----------------------------------------------

  MsgPVPChoiceWeaponC2S* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgPVPChoiceWeaponC2S& from);
  void MergeFrom(const MsgPVPChoiceWeaponC2S& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_PVP_CHOICE_WEAPON_C2S];
  inline bool has_msgtype() const;
  inline void clear_msgtype();
  static const int kMsgTypeFieldNumber = 1;
  inline ::MsgPB::EMsgType msgtype() const;
  inline void set_msgtype(::MsgPB::EMsgType value);

  // optional int64 iggid = 2;
  inline bool has_iggid() const;
  inline void clear_iggid();
  static const int kIggidFieldNumber = 2;
  inline ::google::protobuf::int64 iggid() const;
  inline void set_iggid(::google::protobuf::int64 value);

  // optional int32 index = 3;
  inline bool has_index() const;
  inline void clear_index();
  static const int kIndexFieldNumber = 3;
  inline ::google::protobuf::int32 index() const;
  inline void set_index(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:MsgPB.MsgPVPChoiceWeaponC2S)
 private:
  inline void set_has_msgtype();
  inline void clear_has_msgtype();
  inline void set_has_iggid();
  inline void clear_has_iggid();
  inline void set_has_index();
  inline void clear_has_index();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 iggid_;
  int msgtype_;
  ::google::protobuf::int32 index_;
  friend void  protobuf_AddDesc_MsgPVP_2eproto();
  friend void protobuf_AssignDesc_MsgPVP_2eproto();
  friend void protobuf_ShutdownFile_MsgPVP_2eproto();

  void InitAsDefaultInstance();
  static MsgPVPChoiceWeaponC2S* default_instance_;
};
// -------------------------------------------------------------------

class MsgPVPChoiceWeaponS2C : public ::google::protobuf::Message {
 public:
  MsgPVPChoiceWeaponS2C();
  virtual ~MsgPVPChoiceWeaponS2C();

  MsgPVPChoiceWeaponS2C(const MsgPVPChoiceWeaponS2C& from);

  inline MsgPVPChoiceWeaponS2C& operator=(const MsgPVPChoiceWeaponS2C& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgPVPChoiceWeaponS2C& default_instance();

  void Swap(MsgPVPChoiceWeaponS2C* other);

  // implements Message ----------------------------------------------

  MsgPVPChoiceWeaponS2C* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgPVPChoiceWeaponS2C& from);
  void MergeFrom(const MsgPVPChoiceWeaponS2C& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_PVP_CHOICE_WEAPON_S2C];
  inline bool has_msgtype() const;
  inline void clear_msgtype();
  static const int kMsgTypeFieldNumber = 1;
  inline ::MsgPB::EMsgType msgtype() const;
  inline void set_msgtype(::MsgPB::EMsgType value);

  // optional int64 iggid = 2;
  inline bool has_iggid() const;
  inline void clear_iggid();
  static const int kIggidFieldNumber = 2;
  inline ::google::protobuf::int64 iggid() const;
  inline void set_iggid(::google::protobuf::int64 value);

  // optional int32 index = 3;
  inline bool has_index() const;
  inline void clear_index();
  static const int kIndexFieldNumber = 3;
  inline ::google::protobuf::int32 index() const;
  inline void set_index(::google::protobuf::int32 value);

  // optional .MsgPB.PVP_WEAPON_RESULT res = 4;
  inline bool has_res() const;
  inline void clear_res();
  static const int kResFieldNumber = 4;
  inline ::MsgPB::PVP_WEAPON_RESULT res() const;
  inline void set_res(::MsgPB::PVP_WEAPON_RESULT value);

  // @@protoc_insertion_point(class_scope:MsgPB.MsgPVPChoiceWeaponS2C)
 private:
  inline void set_has_msgtype();
  inline void clear_has_msgtype();
  inline void set_has_iggid();
  inline void clear_has_iggid();
  inline void set_has_index();
  inline void clear_has_index();
  inline void set_has_res();
  inline void clear_has_res();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 iggid_;
  int msgtype_;
  ::google::protobuf::int32 index_;
  int res_;
  friend void  protobuf_AddDesc_MsgPVP_2eproto();
  friend void protobuf_AssignDesc_MsgPVP_2eproto();
  friend void protobuf_ShutdownFile_MsgPVP_2eproto();

  void InitAsDefaultInstance();
  static MsgPVPChoiceWeaponS2C* default_instance_;
};
// ===================================================================


// ===================================================================

// MsgPlayerPvpData

// optional int32 score = 1;
inline bool MsgPlayerPvpData::has_score() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgPlayerPvpData::set_has_score() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgPlayerPvpData::clear_has_score() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgPlayerPvpData::clear_score() {
  score_ = 0;
  clear_has_score();
}
inline ::google::protobuf::int32 MsgPlayerPvpData::score() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgPlayerPvpData.score)
  return score_;
}
inline void MsgPlayerPvpData::set_score(::google::protobuf::int32 value) {
  set_has_score();
  score_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgPlayerPvpData.score)
}

// optional int32 killscore = 2;
inline bool MsgPlayerPvpData::has_killscore() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MsgPlayerPvpData::set_has_killscore() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MsgPlayerPvpData::clear_has_killscore() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MsgPlayerPvpData::clear_killscore() {
  killscore_ = 0;
  clear_has_killscore();
}
inline ::google::protobuf::int32 MsgPlayerPvpData::killscore() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgPlayerPvpData.killscore)
  return killscore_;
}
inline void MsgPlayerPvpData::set_killscore(::google::protobuf::int32 value) {
  set_has_killscore();
  killscore_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgPlayerPvpData.killscore)
}

// optional int32 rankscore = 3;
inline bool MsgPlayerPvpData::has_rankscore() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MsgPlayerPvpData::set_has_rankscore() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MsgPlayerPvpData::clear_has_rankscore() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MsgPlayerPvpData::clear_rankscore() {
  rankscore_ = 0;
  clear_has_rankscore();
}
inline ::google::protobuf::int32 MsgPlayerPvpData::rankscore() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgPlayerPvpData.rankscore)
  return rankscore_;
}
inline void MsgPlayerPvpData::set_rankscore(::google::protobuf::int32 value) {
  set_has_rankscore();
  rankscore_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgPlayerPvpData.rankscore)
}

// optional int32 segment = 4;
inline bool MsgPlayerPvpData::has_segment() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MsgPlayerPvpData::set_has_segment() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MsgPlayerPvpData::clear_has_segment() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MsgPlayerPvpData::clear_segment() {
  segment_ = 0;
  clear_has_segment();
}
inline ::google::protobuf::int32 MsgPlayerPvpData::segment() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgPlayerPvpData.segment)
  return segment_;
}
inline void MsgPlayerPvpData::set_segment(::google::protobuf::int32 value) {
  set_has_segment();
  segment_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgPlayerPvpData.segment)
}

// optional int32 pvpcoin = 5;
inline bool MsgPlayerPvpData::has_pvpcoin() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void MsgPlayerPvpData::set_has_pvpcoin() {
  _has_bits_[0] |= 0x00000010u;
}
inline void MsgPlayerPvpData::clear_has_pvpcoin() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void MsgPlayerPvpData::clear_pvpcoin() {
  pvpcoin_ = 0;
  clear_has_pvpcoin();
}
inline ::google::protobuf::int32 MsgPlayerPvpData::pvpcoin() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgPlayerPvpData.pvpcoin)
  return pvpcoin_;
}
inline void MsgPlayerPvpData::set_pvpcoin(::google::protobuf::int32 value) {
  set_has_pvpcoin();
  pvpcoin_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgPlayerPvpData.pvpcoin)
}

// optional int32 pvptime = 6;
inline bool MsgPlayerPvpData::has_pvptime() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void MsgPlayerPvpData::set_has_pvptime() {
  _has_bits_[0] |= 0x00000020u;
}
inline void MsgPlayerPvpData::clear_has_pvptime() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void MsgPlayerPvpData::clear_pvptime() {
  pvptime_ = 0;
  clear_has_pvptime();
}
inline ::google::protobuf::int32 MsgPlayerPvpData::pvptime() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgPlayerPvpData.pvptime)
  return pvptime_;
}
inline void MsgPlayerPvpData::set_pvptime(::google::protobuf::int32 value) {
  set_has_pvptime();
  pvptime_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgPlayerPvpData.pvptime)
}

// optional int32 ranklow = 7;
inline bool MsgPlayerPvpData::has_ranklow() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void MsgPlayerPvpData::set_has_ranklow() {
  _has_bits_[0] |= 0x00000040u;
}
inline void MsgPlayerPvpData::clear_has_ranklow() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void MsgPlayerPvpData::clear_ranklow() {
  ranklow_ = 0;
  clear_has_ranklow();
}
inline ::google::protobuf::int32 MsgPlayerPvpData::ranklow() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgPlayerPvpData.ranklow)
  return ranklow_;
}
inline void MsgPlayerPvpData::set_ranklow(::google::protobuf::int32 value) {
  set_has_ranklow();
  ranklow_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgPlayerPvpData.ranklow)
}

// optional int64 dirty = 8;
inline bool MsgPlayerPvpData::has_dirty() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void MsgPlayerPvpData::set_has_dirty() {
  _has_bits_[0] |= 0x00000080u;
}
inline void MsgPlayerPvpData::clear_has_dirty() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void MsgPlayerPvpData::clear_dirty() {
  dirty_ = GOOGLE_LONGLONG(0);
  clear_has_dirty();
}
inline ::google::protobuf::int64 MsgPlayerPvpData::dirty() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgPlayerPvpData.dirty)
  return dirty_;
}
inline void MsgPlayerPvpData::set_dirty(::google::protobuf::int64 value) {
  set_has_dirty();
  dirty_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgPlayerPvpData.dirty)
}

// -------------------------------------------------------------------

// MsgRequestPvpMatchS2MS

// optional .MsgPB.EMsgType msgType = 1 [default = _MSG_REQUEST_PVP_MATCH_S2MS];
inline bool MsgRequestPvpMatchS2MS::has_msgtype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgRequestPvpMatchS2MS::set_has_msgtype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgRequestPvpMatchS2MS::clear_has_msgtype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgRequestPvpMatchS2MS::clear_msgtype() {
  msgtype_ = 2405;
  clear_has_msgtype();
}
inline ::MsgPB::EMsgType MsgRequestPvpMatchS2MS::msgtype() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgRequestPvpMatchS2MS.msgType)
  return static_cast< ::MsgPB::EMsgType >(msgtype_);
}
inline void MsgRequestPvpMatchS2MS::set_msgtype(::MsgPB::EMsgType value) {
  assert(::MsgPB::EMsgType_IsValid(value));
  set_has_msgtype();
  msgtype_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgRequestPvpMatchS2MS.msgType)
}

// optional int64 iggid = 2;
inline bool MsgRequestPvpMatchS2MS::has_iggid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MsgRequestPvpMatchS2MS::set_has_iggid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MsgRequestPvpMatchS2MS::clear_has_iggid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MsgRequestPvpMatchS2MS::clear_iggid() {
  iggid_ = GOOGLE_LONGLONG(0);
  clear_has_iggid();
}
inline ::google::protobuf::int64 MsgRequestPvpMatchS2MS::iggid() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgRequestPvpMatchS2MS.iggid)
  return iggid_;
}
inline void MsgRequestPvpMatchS2MS::set_iggid(::google::protobuf::int64 value) {
  set_has_iggid();
  iggid_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgRequestPvpMatchS2MS.iggid)
}

// optional int32 iPing = 3;
inline bool MsgRequestPvpMatchS2MS::has_iping() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MsgRequestPvpMatchS2MS::set_has_iping() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MsgRequestPvpMatchS2MS::clear_has_iping() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MsgRequestPvpMatchS2MS::clear_iping() {
  iping_ = 0;
  clear_has_iping();
}
inline ::google::protobuf::int32 MsgRequestPvpMatchS2MS::iping() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgRequestPvpMatchS2MS.iPing)
  return iping_;
}
inline void MsgRequestPvpMatchS2MS::set_iping(::google::protobuf::int32 value) {
  set_has_iping();
  iping_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgRequestPvpMatchS2MS.iPing)
}

// optional int32 iScore = 4;
inline bool MsgRequestPvpMatchS2MS::has_iscore() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MsgRequestPvpMatchS2MS::set_has_iscore() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MsgRequestPvpMatchS2MS::clear_has_iscore() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MsgRequestPvpMatchS2MS::clear_iscore() {
  iscore_ = 0;
  clear_has_iscore();
}
inline ::google::protobuf::int32 MsgRequestPvpMatchS2MS::iscore() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgRequestPvpMatchS2MS.iScore)
  return iscore_;
}
inline void MsgRequestPvpMatchS2MS::set_iscore(::google::protobuf::int32 value) {
  set_has_iscore();
  iscore_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgRequestPvpMatchS2MS.iScore)
}

// optional int32 iRankLow = 5;
inline bool MsgRequestPvpMatchS2MS::has_iranklow() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void MsgRequestPvpMatchS2MS::set_has_iranklow() {
  _has_bits_[0] |= 0x00000010u;
}
inline void MsgRequestPvpMatchS2MS::clear_has_iranklow() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void MsgRequestPvpMatchS2MS::clear_iranklow() {
  iranklow_ = 0;
  clear_has_iranklow();
}
inline ::google::protobuf::int32 MsgRequestPvpMatchS2MS::iranklow() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgRequestPvpMatchS2MS.iRankLow)
  return iranklow_;
}
inline void MsgRequestPvpMatchS2MS::set_iranklow(::google::protobuf::int32 value) {
  set_has_iranklow();
  iranklow_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgRequestPvpMatchS2MS.iRankLow)
}

// -------------------------------------------------------------------

// MsgRequestPvpMatchResultMS2S

// optional .MsgPB.EMsgType msgType = 1 [default = _MSG_REQUEST_PVP_MATCH_RESULT_MS2S];
inline bool MsgRequestPvpMatchResultMS2S::has_msgtype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgRequestPvpMatchResultMS2S::set_has_msgtype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgRequestPvpMatchResultMS2S::clear_has_msgtype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgRequestPvpMatchResultMS2S::clear_msgtype() {
  msgtype_ = 2406;
  clear_has_msgtype();
}
inline ::MsgPB::EMsgType MsgRequestPvpMatchResultMS2S::msgtype() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgRequestPvpMatchResultMS2S.msgType)
  return static_cast< ::MsgPB::EMsgType >(msgtype_);
}
inline void MsgRequestPvpMatchResultMS2S::set_msgtype(::MsgPB::EMsgType value) {
  assert(::MsgPB::EMsgType_IsValid(value));
  set_has_msgtype();
  msgtype_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgRequestPvpMatchResultMS2S.msgType)
}

// optional int64 iggid = 2;
inline bool MsgRequestPvpMatchResultMS2S::has_iggid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MsgRequestPvpMatchResultMS2S::set_has_iggid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MsgRequestPvpMatchResultMS2S::clear_has_iggid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MsgRequestPvpMatchResultMS2S::clear_iggid() {
  iggid_ = GOOGLE_LONGLONG(0);
  clear_has_iggid();
}
inline ::google::protobuf::int64 MsgRequestPvpMatchResultMS2S::iggid() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgRequestPvpMatchResultMS2S.iggid)
  return iggid_;
}
inline void MsgRequestPvpMatchResultMS2S::set_iggid(::google::protobuf::int64 value) {
  set_has_iggid();
  iggid_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgRequestPvpMatchResultMS2S.iggid)
}

// optional .MsgPB.ENUM_PVP_MATCH_RESULT result = 3;
inline bool MsgRequestPvpMatchResultMS2S::has_result() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MsgRequestPvpMatchResultMS2S::set_has_result() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MsgRequestPvpMatchResultMS2S::clear_has_result() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MsgRequestPvpMatchResultMS2S::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::MsgPB::ENUM_PVP_MATCH_RESULT MsgRequestPvpMatchResultMS2S::result() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgRequestPvpMatchResultMS2S.result)
  return static_cast< ::MsgPB::ENUM_PVP_MATCH_RESULT >(result_);
}
inline void MsgRequestPvpMatchResultMS2S::set_result(::MsgPB::ENUM_PVP_MATCH_RESULT value) {
  assert(::MsgPB::ENUM_PVP_MATCH_RESULT_IsValid(value));
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgRequestPvpMatchResultMS2S.result)
}

// -------------------------------------------------------------------

// MsgNotifyPvpReadyMS2S

// optional .MsgPB.EMsgType msgType = 1 [default = _MSG_NOTIFY_PVP_READY_MS2S];
inline bool MsgNotifyPvpReadyMS2S::has_msgtype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgNotifyPvpReadyMS2S::set_has_msgtype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgNotifyPvpReadyMS2S::clear_has_msgtype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgNotifyPvpReadyMS2S::clear_msgtype() {
  msgtype_ = 2407;
  clear_has_msgtype();
}
inline ::MsgPB::EMsgType MsgNotifyPvpReadyMS2S::msgtype() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgNotifyPvpReadyMS2S.msgType)
  return static_cast< ::MsgPB::EMsgType >(msgtype_);
}
inline void MsgNotifyPvpReadyMS2S::set_msgtype(::MsgPB::EMsgType value) {
  assert(::MsgPB::EMsgType_IsValid(value));
  set_has_msgtype();
  msgtype_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgNotifyPvpReadyMS2S.msgType)
}

// optional int64 iggid = 2;
inline bool MsgNotifyPvpReadyMS2S::has_iggid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MsgNotifyPvpReadyMS2S::set_has_iggid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MsgNotifyPvpReadyMS2S::clear_has_iggid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MsgNotifyPvpReadyMS2S::clear_iggid() {
  iggid_ = GOOGLE_LONGLONG(0);
  clear_has_iggid();
}
inline ::google::protobuf::int64 MsgNotifyPvpReadyMS2S::iggid() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgNotifyPvpReadyMS2S.iggid)
  return iggid_;
}
inline void MsgNotifyPvpReadyMS2S::set_iggid(::google::protobuf::int64 value) {
  set_has_iggid();
  iggid_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgNotifyPvpReadyMS2S.iggid)
}

// optional int32 countdownSec = 3;
inline bool MsgNotifyPvpReadyMS2S::has_countdownsec() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MsgNotifyPvpReadyMS2S::set_has_countdownsec() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MsgNotifyPvpReadyMS2S::clear_has_countdownsec() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MsgNotifyPvpReadyMS2S::clear_countdownsec() {
  countdownsec_ = 0;
  clear_has_countdownsec();
}
inline ::google::protobuf::int32 MsgNotifyPvpReadyMS2S::countdownsec() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgNotifyPvpReadyMS2S.countdownSec)
  return countdownsec_;
}
inline void MsgNotifyPvpReadyMS2S::set_countdownsec(::google::protobuf::int32 value) {
  set_has_countdownsec();
  countdownsec_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgNotifyPvpReadyMS2S.countdownSec)
}

// optional int32 playerNum = 4;
inline bool MsgNotifyPvpReadyMS2S::has_playernum() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MsgNotifyPvpReadyMS2S::set_has_playernum() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MsgNotifyPvpReadyMS2S::clear_has_playernum() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MsgNotifyPvpReadyMS2S::clear_playernum() {
  playernum_ = 0;
  clear_has_playernum();
}
inline ::google::protobuf::int32 MsgNotifyPvpReadyMS2S::playernum() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgNotifyPvpReadyMS2S.playerNum)
  return playernum_;
}
inline void MsgNotifyPvpReadyMS2S::set_playernum(::google::protobuf::int32 value) {
  set_has_playernum();
  playernum_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgNotifyPvpReadyMS2S.playerNum)
}

// -------------------------------------------------------------------

// MsgNotifyPvpNotenoughPlayerMS2S

// optional .MsgPB.EMsgType msgType = 1 [default = _MSG_NOTIFY_PVP_NOTENOUGHPLAYER_MS2S];
inline bool MsgNotifyPvpNotenoughPlayerMS2S::has_msgtype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgNotifyPvpNotenoughPlayerMS2S::set_has_msgtype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgNotifyPvpNotenoughPlayerMS2S::clear_has_msgtype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgNotifyPvpNotenoughPlayerMS2S::clear_msgtype() {
  msgtype_ = 2412;
  clear_has_msgtype();
}
inline ::MsgPB::EMsgType MsgNotifyPvpNotenoughPlayerMS2S::msgtype() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgNotifyPvpNotenoughPlayerMS2S.msgType)
  return static_cast< ::MsgPB::EMsgType >(msgtype_);
}
inline void MsgNotifyPvpNotenoughPlayerMS2S::set_msgtype(::MsgPB::EMsgType value) {
  assert(::MsgPB::EMsgType_IsValid(value));
  set_has_msgtype();
  msgtype_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgNotifyPvpNotenoughPlayerMS2S.msgType)
}

// optional int64 iggid = 2;
inline bool MsgNotifyPvpNotenoughPlayerMS2S::has_iggid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MsgNotifyPvpNotenoughPlayerMS2S::set_has_iggid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MsgNotifyPvpNotenoughPlayerMS2S::clear_has_iggid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MsgNotifyPvpNotenoughPlayerMS2S::clear_iggid() {
  iggid_ = GOOGLE_LONGLONG(0);
  clear_has_iggid();
}
inline ::google::protobuf::int64 MsgNotifyPvpNotenoughPlayerMS2S::iggid() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgNotifyPvpNotenoughPlayerMS2S.iggid)
  return iggid_;
}
inline void MsgNotifyPvpNotenoughPlayerMS2S::set_iggid(::google::protobuf::int64 value) {
  set_has_iggid();
  iggid_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgNotifyPvpNotenoughPlayerMS2S.iggid)
}

// optional int32 playerNum = 3;
inline bool MsgNotifyPvpNotenoughPlayerMS2S::has_playernum() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MsgNotifyPvpNotenoughPlayerMS2S::set_has_playernum() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MsgNotifyPvpNotenoughPlayerMS2S::clear_has_playernum() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MsgNotifyPvpNotenoughPlayerMS2S::clear_playernum() {
  playernum_ = 0;
  clear_has_playernum();
}
inline ::google::protobuf::int32 MsgNotifyPvpNotenoughPlayerMS2S::playernum() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgNotifyPvpNotenoughPlayerMS2S.playerNum)
  return playernum_;
}
inline void MsgNotifyPvpNotenoughPlayerMS2S::set_playernum(::google::protobuf::int32 value) {
  set_has_playernum();
  playernum_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgNotifyPvpNotenoughPlayerMS2S.playerNum)
}

// -------------------------------------------------------------------

// MsgPvpMatchBestMapServerMS2S

// optional .MsgPB.EMsgType msgType = 1 [default = _MSG_PVP_MATCH_BEST_MAP_SERVER_MS2S];
inline bool MsgPvpMatchBestMapServerMS2S::has_msgtype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgPvpMatchBestMapServerMS2S::set_has_msgtype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgPvpMatchBestMapServerMS2S::clear_has_msgtype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgPvpMatchBestMapServerMS2S::clear_msgtype() {
  msgtype_ = 2408;
  clear_has_msgtype();
}
inline ::MsgPB::EMsgType MsgPvpMatchBestMapServerMS2S::msgtype() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgPvpMatchBestMapServerMS2S.msgType)
  return static_cast< ::MsgPB::EMsgType >(msgtype_);
}
inline void MsgPvpMatchBestMapServerMS2S::set_msgtype(::MsgPB::EMsgType value) {
  assert(::MsgPB::EMsgType_IsValid(value));
  set_has_msgtype();
  msgtype_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgPvpMatchBestMapServerMS2S.msgType)
}

// optional int64 queueIndex = 2;
inline bool MsgPvpMatchBestMapServerMS2S::has_queueindex() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MsgPvpMatchBestMapServerMS2S::set_has_queueindex() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MsgPvpMatchBestMapServerMS2S::clear_has_queueindex() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MsgPvpMatchBestMapServerMS2S::clear_queueindex() {
  queueindex_ = GOOGLE_LONGLONG(0);
  clear_has_queueindex();
}
inline ::google::protobuf::int64 MsgPvpMatchBestMapServerMS2S::queueindex() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgPvpMatchBestMapServerMS2S.queueIndex)
  return queueindex_;
}
inline void MsgPvpMatchBestMapServerMS2S::set_queueindex(::google::protobuf::int64 value) {
  set_has_queueindex();
  queueindex_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgPvpMatchBestMapServerMS2S.queueIndex)
}

// optional int32 operType = 3;
inline bool MsgPvpMatchBestMapServerMS2S::has_opertype() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MsgPvpMatchBestMapServerMS2S::set_has_opertype() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MsgPvpMatchBestMapServerMS2S::clear_has_opertype() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MsgPvpMatchBestMapServerMS2S::clear_opertype() {
  opertype_ = 0;
  clear_has_opertype();
}
inline ::google::protobuf::int32 MsgPvpMatchBestMapServerMS2S::opertype() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgPvpMatchBestMapServerMS2S.operType)
  return opertype_;
}
inline void MsgPvpMatchBestMapServerMS2S::set_opertype(::google::protobuf::int32 value) {
  set_has_opertype();
  opertype_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgPvpMatchBestMapServerMS2S.operType)
}

// optional uint32 idArea = 4;
inline bool MsgPvpMatchBestMapServerMS2S::has_idarea() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MsgPvpMatchBestMapServerMS2S::set_has_idarea() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MsgPvpMatchBestMapServerMS2S::clear_has_idarea() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MsgPvpMatchBestMapServerMS2S::clear_idarea() {
  idarea_ = 0u;
  clear_has_idarea();
}
inline ::google::protobuf::uint32 MsgPvpMatchBestMapServerMS2S::idarea() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgPvpMatchBestMapServerMS2S.idArea)
  return idarea_;
}
inline void MsgPvpMatchBestMapServerMS2S::set_idarea(::google::protobuf::uint32 value) {
  set_has_idarea();
  idarea_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgPvpMatchBestMapServerMS2S.idArea)
}

// -------------------------------------------------------------------

// MsgPVPCreateMapMS2S

// optional .MsgPB.EMsgType msgType = 1 [default = _MSG_PVP_CREATE_MAP_MS2S];
inline bool MsgPVPCreateMapMS2S::has_msgtype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgPVPCreateMapMS2S::set_has_msgtype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgPVPCreateMapMS2S::clear_has_msgtype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgPVPCreateMapMS2S::clear_msgtype() {
  msgtype_ = 2410;
  clear_has_msgtype();
}
inline ::MsgPB::EMsgType MsgPVPCreateMapMS2S::msgtype() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgPVPCreateMapMS2S.msgType)
  return static_cast< ::MsgPB::EMsgType >(msgtype_);
}
inline void MsgPVPCreateMapMS2S::set_msgtype(::MsgPB::EMsgType value) {
  assert(::MsgPB::EMsgType_IsValid(value));
  set_has_msgtype();
  msgtype_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgPVPCreateMapMS2S.msgType)
}

// optional int64 queueIndex = 2;
inline bool MsgPVPCreateMapMS2S::has_queueindex() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MsgPVPCreateMapMS2S::set_has_queueindex() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MsgPVPCreateMapMS2S::clear_has_queueindex() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MsgPVPCreateMapMS2S::clear_queueindex() {
  queueindex_ = GOOGLE_LONGLONG(0);
  clear_has_queueindex();
}
inline ::google::protobuf::int64 MsgPVPCreateMapMS2S::queueindex() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgPVPCreateMapMS2S.queueIndex)
  return queueindex_;
}
inline void MsgPVPCreateMapMS2S::set_queueindex(::google::protobuf::int64 value) {
  set_has_queueindex();
  queueindex_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgPVPCreateMapMS2S.queueIndex)
}

// -------------------------------------------------------------------

// MsgPVPCreateMapResultS2MS

// optional .MsgPB.EMsgType msgType = 1 [default = _MSG_PVP_CREATE_MAP_RESULT_S2MS];
inline bool MsgPVPCreateMapResultS2MS::has_msgtype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgPVPCreateMapResultS2MS::set_has_msgtype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgPVPCreateMapResultS2MS::clear_has_msgtype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgPVPCreateMapResultS2MS::clear_msgtype() {
  msgtype_ = 2411;
  clear_has_msgtype();
}
inline ::MsgPB::EMsgType MsgPVPCreateMapResultS2MS::msgtype() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgPVPCreateMapResultS2MS.msgType)
  return static_cast< ::MsgPB::EMsgType >(msgtype_);
}
inline void MsgPVPCreateMapResultS2MS::set_msgtype(::MsgPB::EMsgType value) {
  assert(::MsgPB::EMsgType_IsValid(value));
  set_has_msgtype();
  msgtype_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgPVPCreateMapResultS2MS.msgType)
}

// optional int64 queueIndex = 2;
inline bool MsgPVPCreateMapResultS2MS::has_queueindex() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MsgPVPCreateMapResultS2MS::set_has_queueindex() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MsgPVPCreateMapResultS2MS::clear_has_queueindex() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MsgPVPCreateMapResultS2MS::clear_queueindex() {
  queueindex_ = GOOGLE_LONGLONG(0);
  clear_has_queueindex();
}
inline ::google::protobuf::int64 MsgPVPCreateMapResultS2MS::queueindex() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgPVPCreateMapResultS2MS.queueIndex)
  return queueindex_;
}
inline void MsgPVPCreateMapResultS2MS::set_queueindex(::google::protobuf::int64 value) {
  set_has_queueindex();
  queueindex_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgPVPCreateMapResultS2MS.queueIndex)
}

// optional int64 mapuuid = 3;
inline bool MsgPVPCreateMapResultS2MS::has_mapuuid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MsgPVPCreateMapResultS2MS::set_has_mapuuid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MsgPVPCreateMapResultS2MS::clear_has_mapuuid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MsgPVPCreateMapResultS2MS::clear_mapuuid() {
  mapuuid_ = GOOGLE_LONGLONG(0);
  clear_has_mapuuid();
}
inline ::google::protobuf::int64 MsgPVPCreateMapResultS2MS::mapuuid() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgPVPCreateMapResultS2MS.mapuuid)
  return mapuuid_;
}
inline void MsgPVPCreateMapResultS2MS::set_mapuuid(::google::protobuf::int64 value) {
  set_has_mapuuid();
  mapuuid_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgPVPCreateMapResultS2MS.mapuuid)
}

// optional int32 mapid = 4;
inline bool MsgPVPCreateMapResultS2MS::has_mapid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MsgPVPCreateMapResultS2MS::set_has_mapid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MsgPVPCreateMapResultS2MS::clear_has_mapid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MsgPVPCreateMapResultS2MS::clear_mapid() {
  mapid_ = 0;
  clear_has_mapid();
}
inline ::google::protobuf::int32 MsgPVPCreateMapResultS2MS::mapid() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgPVPCreateMapResultS2MS.mapid)
  return mapid_;
}
inline void MsgPVPCreateMapResultS2MS::set_mapid(::google::protobuf::int32 value) {
  set_has_mapid();
  mapid_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgPVPCreateMapResultS2MS.mapid)
}

// optional int32 mapserverId = 5;
inline bool MsgPVPCreateMapResultS2MS::has_mapserverid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void MsgPVPCreateMapResultS2MS::set_has_mapserverid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void MsgPVPCreateMapResultS2MS::clear_has_mapserverid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void MsgPVPCreateMapResultS2MS::clear_mapserverid() {
  mapserverid_ = 0;
  clear_has_mapserverid();
}
inline ::google::protobuf::int32 MsgPVPCreateMapResultS2MS::mapserverid() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgPVPCreateMapResultS2MS.mapserverId)
  return mapserverid_;
}
inline void MsgPVPCreateMapResultS2MS::set_mapserverid(::google::protobuf::int32 value) {
  set_has_mapserverid();
  mapserverid_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgPVPCreateMapResultS2MS.mapserverId)
}

// optional .MsgPB.ENUM_CREATE_PVP_MAP_RESULT result = 6;
inline bool MsgPVPCreateMapResultS2MS::has_result() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void MsgPVPCreateMapResultS2MS::set_has_result() {
  _has_bits_[0] |= 0x00000020u;
}
inline void MsgPVPCreateMapResultS2MS::clear_has_result() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void MsgPVPCreateMapResultS2MS::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::MsgPB::ENUM_CREATE_PVP_MAP_RESULT MsgPVPCreateMapResultS2MS::result() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgPVPCreateMapResultS2MS.result)
  return static_cast< ::MsgPB::ENUM_CREATE_PVP_MAP_RESULT >(result_);
}
inline void MsgPVPCreateMapResultS2MS::set_result(::MsgPB::ENUM_CREATE_PVP_MAP_RESULT value) {
  assert(::MsgPB::ENUM_CREATE_PVP_MAP_RESULT_IsValid(value));
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgPVPCreateMapResultS2MS.result)
}

// optional int64 iggid = 7;
inline bool MsgPVPCreateMapResultS2MS::has_iggid() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void MsgPVPCreateMapResultS2MS::set_has_iggid() {
  _has_bits_[0] |= 0x00000040u;
}
inline void MsgPVPCreateMapResultS2MS::clear_has_iggid() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void MsgPVPCreateMapResultS2MS::clear_iggid() {
  iggid_ = GOOGLE_LONGLONG(0);
  clear_has_iggid();
}
inline ::google::protobuf::int64 MsgPVPCreateMapResultS2MS::iggid() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgPVPCreateMapResultS2MS.iggid)
  return iggid_;
}
inline void MsgPVPCreateMapResultS2MS::set_iggid(::google::protobuf::int64 value) {
  set_has_iggid();
  iggid_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgPVPCreateMapResultS2MS.iggid)
}

// optional string mapfilename = 8;
inline bool MsgPVPCreateMapResultS2MS::has_mapfilename() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void MsgPVPCreateMapResultS2MS::set_has_mapfilename() {
  _has_bits_[0] |= 0x00000080u;
}
inline void MsgPVPCreateMapResultS2MS::clear_has_mapfilename() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void MsgPVPCreateMapResultS2MS::clear_mapfilename() {
  if (mapfilename_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    mapfilename_->clear();
  }
  clear_has_mapfilename();
}
inline const ::std::string& MsgPVPCreateMapResultS2MS::mapfilename() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgPVPCreateMapResultS2MS.mapfilename)
  return *mapfilename_;
}
inline void MsgPVPCreateMapResultS2MS::set_mapfilename(const ::std::string& value) {
  set_has_mapfilename();
  if (mapfilename_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    mapfilename_ = new ::std::string;
  }
  mapfilename_->assign(value);
  // @@protoc_insertion_point(field_set:MsgPB.MsgPVPCreateMapResultS2MS.mapfilename)
}
inline void MsgPVPCreateMapResultS2MS::set_mapfilename(const char* value) {
  set_has_mapfilename();
  if (mapfilename_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    mapfilename_ = new ::std::string;
  }
  mapfilename_->assign(value);
  // @@protoc_insertion_point(field_set_char:MsgPB.MsgPVPCreateMapResultS2MS.mapfilename)
}
inline void MsgPVPCreateMapResultS2MS::set_mapfilename(const char* value, size_t size) {
  set_has_mapfilename();
  if (mapfilename_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    mapfilename_ = new ::std::string;
  }
  mapfilename_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:MsgPB.MsgPVPCreateMapResultS2MS.mapfilename)
}
inline ::std::string* MsgPVPCreateMapResultS2MS::mutable_mapfilename() {
  set_has_mapfilename();
  if (mapfilename_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    mapfilename_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:MsgPB.MsgPVPCreateMapResultS2MS.mapfilename)
  return mapfilename_;
}
inline ::std::string* MsgPVPCreateMapResultS2MS::release_mapfilename() {
  clear_has_mapfilename();
  if (mapfilename_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = mapfilename_;
    mapfilename_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void MsgPVPCreateMapResultS2MS::set_allocated_mapfilename(::std::string* mapfilename) {
  if (mapfilename_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete mapfilename_;
  }
  if (mapfilename) {
    set_has_mapfilename();
    mapfilename_ = mapfilename;
  } else {
    clear_has_mapfilename();
    mapfilename_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:MsgPB.MsgPVPCreateMapResultS2MS.mapfilename)
}

// -------------------------------------------------------------------

// MsgStartEnterWarPostion

// optional .MsgPB.EMsgType msgType = 1 [default = _MSG_START_ENTER_WAR_POSTION];
inline bool MsgStartEnterWarPostion::has_msgtype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgStartEnterWarPostion::set_has_msgtype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgStartEnterWarPostion::clear_has_msgtype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgStartEnterWarPostion::clear_msgtype() {
  msgtype_ = 2409;
  clear_has_msgtype();
}
inline ::MsgPB::EMsgType MsgStartEnterWarPostion::msgtype() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgStartEnterWarPostion.msgType)
  return static_cast< ::MsgPB::EMsgType >(msgtype_);
}
inline void MsgStartEnterWarPostion::set_msgtype(::MsgPB::EMsgType value) {
  assert(::MsgPB::EMsgType_IsValid(value));
  set_has_msgtype();
  msgtype_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgStartEnterWarPostion.msgType)
}

// optional int64 queueIndex = 2;
inline bool MsgStartEnterWarPostion::has_queueindex() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MsgStartEnterWarPostion::set_has_queueindex() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MsgStartEnterWarPostion::clear_has_queueindex() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MsgStartEnterWarPostion::clear_queueindex() {
  queueindex_ = GOOGLE_LONGLONG(0);
  clear_has_queueindex();
}
inline ::google::protobuf::int64 MsgStartEnterWarPostion::queueindex() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgStartEnterWarPostion.queueIndex)
  return queueindex_;
}
inline void MsgStartEnterWarPostion::set_queueindex(::google::protobuf::int64 value) {
  set_has_queueindex();
  queueindex_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgStartEnterWarPostion.queueIndex)
}

// optional int64 mapuuid = 3;
inline bool MsgStartEnterWarPostion::has_mapuuid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MsgStartEnterWarPostion::set_has_mapuuid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MsgStartEnterWarPostion::clear_has_mapuuid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MsgStartEnterWarPostion::clear_mapuuid() {
  mapuuid_ = GOOGLE_LONGLONG(0);
  clear_has_mapuuid();
}
inline ::google::protobuf::int64 MsgStartEnterWarPostion::mapuuid() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgStartEnterWarPostion.mapuuid)
  return mapuuid_;
}
inline void MsgStartEnterWarPostion::set_mapuuid(::google::protobuf::int64 value) {
  set_has_mapuuid();
  mapuuid_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgStartEnterWarPostion.mapuuid)
}

// optional int32 mapid = 4;
inline bool MsgStartEnterWarPostion::has_mapid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MsgStartEnterWarPostion::set_has_mapid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MsgStartEnterWarPostion::clear_has_mapid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MsgStartEnterWarPostion::clear_mapid() {
  mapid_ = 0;
  clear_has_mapid();
}
inline ::google::protobuf::int32 MsgStartEnterWarPostion::mapid() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgStartEnterWarPostion.mapid)
  return mapid_;
}
inline void MsgStartEnterWarPostion::set_mapid(::google::protobuf::int32 value) {
  set_has_mapid();
  mapid_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgStartEnterWarPostion.mapid)
}

// optional int32 mapserverId = 5;
inline bool MsgStartEnterWarPostion::has_mapserverid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void MsgStartEnterWarPostion::set_has_mapserverid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void MsgStartEnterWarPostion::clear_has_mapserverid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void MsgStartEnterWarPostion::clear_mapserverid() {
  mapserverid_ = 0;
  clear_has_mapserverid();
}
inline ::google::protobuf::int32 MsgStartEnterWarPostion::mapserverid() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgStartEnterWarPostion.mapserverId)
  return mapserverid_;
}
inline void MsgStartEnterWarPostion::set_mapserverid(::google::protobuf::int32 value) {
  set_has_mapserverid();
  mapserverid_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgStartEnterWarPostion.mapserverId)
}

// -------------------------------------------------------------------

// MsgPVPRankC2S

// optional .MsgPB.EMsgType msgType = 1 [default = _MSG_PVP_RANK_C2S];
inline bool MsgPVPRankC2S::has_msgtype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgPVPRankC2S::set_has_msgtype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgPVPRankC2S::clear_has_msgtype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgPVPRankC2S::clear_msgtype() {
  msgtype_ = 2505;
  clear_has_msgtype();
}
inline ::MsgPB::EMsgType MsgPVPRankC2S::msgtype() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgPVPRankC2S.msgType)
  return static_cast< ::MsgPB::EMsgType >(msgtype_);
}
inline void MsgPVPRankC2S::set_msgtype(::MsgPB::EMsgType value) {
  assert(::MsgPB::EMsgType_IsValid(value));
  set_has_msgtype();
  msgtype_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgPVPRankC2S.msgType)
}

// optional int64 iggid = 2;
inline bool MsgPVPRankC2S::has_iggid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MsgPVPRankC2S::set_has_iggid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MsgPVPRankC2S::clear_has_iggid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MsgPVPRankC2S::clear_iggid() {
  iggid_ = GOOGLE_LONGLONG(0);
  clear_has_iggid();
}
inline ::google::protobuf::int64 MsgPVPRankC2S::iggid() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgPVPRankC2S.iggid)
  return iggid_;
}
inline void MsgPVPRankC2S::set_iggid(::google::protobuf::int64 value) {
  set_has_iggid();
  iggid_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgPVPRankC2S.iggid)
}

// -------------------------------------------------------------------

// RankInfo

// optional int64 iggid = 1;
inline bool RankInfo::has_iggid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RankInfo::set_has_iggid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RankInfo::clear_has_iggid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RankInfo::clear_iggid() {
  iggid_ = GOOGLE_LONGLONG(0);
  clear_has_iggid();
}
inline ::google::protobuf::int64 RankInfo::iggid() const {
  // @@protoc_insertion_point(field_get:MsgPB.RankInfo.iggid)
  return iggid_;
}
inline void RankInfo::set_iggid(::google::protobuf::int64 value) {
  set_has_iggid();
  iggid_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.RankInfo.iggid)
}

// optional int32 lv = 2;
inline bool RankInfo::has_lv() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RankInfo::set_has_lv() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RankInfo::clear_has_lv() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RankInfo::clear_lv() {
  lv_ = 0;
  clear_has_lv();
}
inline ::google::protobuf::int32 RankInfo::lv() const {
  // @@protoc_insertion_point(field_get:MsgPB.RankInfo.lv)
  return lv_;
}
inline void RankInfo::set_lv(::google::protobuf::int32 value) {
  set_has_lv();
  lv_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.RankInfo.lv)
}

// optional int32 face = 3;
inline bool RankInfo::has_face() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RankInfo::set_has_face() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RankInfo::clear_has_face() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RankInfo::clear_face() {
  face_ = 0;
  clear_has_face();
}
inline ::google::protobuf::int32 RankInfo::face() const {
  // @@protoc_insertion_point(field_get:MsgPB.RankInfo.face)
  return face_;
}
inline void RankInfo::set_face(::google::protobuf::int32 value) {
  set_has_face();
  face_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.RankInfo.face)
}

// optional string name = 4;
inline bool RankInfo::has_name() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void RankInfo::set_has_name() {
  _has_bits_[0] |= 0x00000008u;
}
inline void RankInfo::clear_has_name() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void RankInfo::clear_name() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& RankInfo::name() const {
  // @@protoc_insertion_point(field_get:MsgPB.RankInfo.name)
  return *name_;
}
inline void RankInfo::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set:MsgPB.RankInfo.name)
}
inline void RankInfo::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set_char:MsgPB.RankInfo.name)
}
inline void RankInfo::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:MsgPB.RankInfo.name)
}
inline ::std::string* RankInfo::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:MsgPB.RankInfo.name)
  return name_;
}
inline ::std::string* RankInfo::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void RankInfo::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:MsgPB.RankInfo.name)
}

// -------------------------------------------------------------------

// MsgPVPRankS2C

// optional .MsgPB.EMsgType msgType = 1 [default = _MSG_PVP_RANK_S2C];
inline bool MsgPVPRankS2C::has_msgtype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgPVPRankS2C::set_has_msgtype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgPVPRankS2C::clear_has_msgtype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgPVPRankS2C::clear_msgtype() {
  msgtype_ = 2506;
  clear_has_msgtype();
}
inline ::MsgPB::EMsgType MsgPVPRankS2C::msgtype() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgPVPRankS2C.msgType)
  return static_cast< ::MsgPB::EMsgType >(msgtype_);
}
inline void MsgPVPRankS2C::set_msgtype(::MsgPB::EMsgType value) {
  assert(::MsgPB::EMsgType_IsValid(value));
  set_has_msgtype();
  msgtype_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgPVPRankS2C.msgType)
}

// optional int64 iggid = 2;
inline bool MsgPVPRankS2C::has_iggid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MsgPVPRankS2C::set_has_iggid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MsgPVPRankS2C::clear_has_iggid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MsgPVPRankS2C::clear_iggid() {
  iggid_ = GOOGLE_LONGLONG(0);
  clear_has_iggid();
}
inline ::google::protobuf::int64 MsgPVPRankS2C::iggid() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgPVPRankS2C.iggid)
  return iggid_;
}
inline void MsgPVPRankS2C::set_iggid(::google::protobuf::int64 value) {
  set_has_iggid();
  iggid_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgPVPRankS2C.iggid)
}

// optional .MsgPB.MSG_RANK_RESULT res = 3;
inline bool MsgPVPRankS2C::has_res() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MsgPVPRankS2C::set_has_res() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MsgPVPRankS2C::clear_has_res() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MsgPVPRankS2C::clear_res() {
  res_ = 0;
  clear_has_res();
}
inline ::MsgPB::MSG_RANK_RESULT MsgPVPRankS2C::res() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgPVPRankS2C.res)
  return static_cast< ::MsgPB::MSG_RANK_RESULT >(res_);
}
inline void MsgPVPRankS2C::set_res(::MsgPB::MSG_RANK_RESULT value) {
  assert(::MsgPB::MSG_RANK_RESULT_IsValid(value));
  set_has_res();
  res_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgPVPRankS2C.res)
}

// repeated .MsgPB.RankInfo rankobjs = 4;
inline int MsgPVPRankS2C::rankobjs_size() const {
  return rankobjs_.size();
}
inline void MsgPVPRankS2C::clear_rankobjs() {
  rankobjs_.Clear();
}
inline const ::MsgPB::RankInfo& MsgPVPRankS2C::rankobjs(int index) const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgPVPRankS2C.rankobjs)
  return rankobjs_.Get(index);
}
inline ::MsgPB::RankInfo* MsgPVPRankS2C::mutable_rankobjs(int index) {
  // @@protoc_insertion_point(field_mutable:MsgPB.MsgPVPRankS2C.rankobjs)
  return rankobjs_.Mutable(index);
}
inline ::MsgPB::RankInfo* MsgPVPRankS2C::add_rankobjs() {
  // @@protoc_insertion_point(field_add:MsgPB.MsgPVPRankS2C.rankobjs)
  return rankobjs_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::MsgPB::RankInfo >&
MsgPVPRankS2C::rankobjs() const {
  // @@protoc_insertion_point(field_list:MsgPB.MsgPVPRankS2C.rankobjs)
  return rankobjs_;
}
inline ::google::protobuf::RepeatedPtrField< ::MsgPB::RankInfo >*
MsgPVPRankS2C::mutable_rankobjs() {
  // @@protoc_insertion_point(field_mutable_list:MsgPB.MsgPVPRankS2C.rankobjs)
  return &rankobjs_;
}

// -------------------------------------------------------------------

// MsgPVPOutS2C

// optional .MsgPB.EMsgType msgType = 1 [default = _MSG_PVP_OUT_S2C];
inline bool MsgPVPOutS2C::has_msgtype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgPVPOutS2C::set_has_msgtype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgPVPOutS2C::clear_has_msgtype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgPVPOutS2C::clear_msgtype() {
  msgtype_ = 2507;
  clear_has_msgtype();
}
inline ::MsgPB::EMsgType MsgPVPOutS2C::msgtype() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgPVPOutS2C.msgType)
  return static_cast< ::MsgPB::EMsgType >(msgtype_);
}
inline void MsgPVPOutS2C::set_msgtype(::MsgPB::EMsgType value) {
  assert(::MsgPB::EMsgType_IsValid(value));
  set_has_msgtype();
  msgtype_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgPVPOutS2C.msgType)
}

// optional int64 iggid = 2;
inline bool MsgPVPOutS2C::has_iggid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MsgPVPOutS2C::set_has_iggid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MsgPVPOutS2C::clear_has_iggid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MsgPVPOutS2C::clear_iggid() {
  iggid_ = GOOGLE_LONGLONG(0);
  clear_has_iggid();
}
inline ::google::protobuf::int64 MsgPVPOutS2C::iggid() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgPVPOutS2C.iggid)
  return iggid_;
}
inline void MsgPVPOutS2C::set_iggid(::google::protobuf::int64 value) {
  set_has_iggid();
  iggid_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgPVPOutS2C.iggid)
}

// optional int32 rank = 3;
inline bool MsgPVPOutS2C::has_rank() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MsgPVPOutS2C::set_has_rank() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MsgPVPOutS2C::clear_has_rank() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MsgPVPOutS2C::clear_rank() {
  rank_ = 0;
  clear_has_rank();
}
inline ::google::protobuf::int32 MsgPVPOutS2C::rank() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgPVPOutS2C.rank)
  return rank_;
}
inline void MsgPVPOutS2C::set_rank(::google::protobuf::int32 value) {
  set_has_rank();
  rank_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgPVPOutS2C.rank)
}

// optional string killer = 4;
inline bool MsgPVPOutS2C::has_killer() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MsgPVPOutS2C::set_has_killer() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MsgPVPOutS2C::clear_has_killer() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MsgPVPOutS2C::clear_killer() {
  if (killer_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    killer_->clear();
  }
  clear_has_killer();
}
inline const ::std::string& MsgPVPOutS2C::killer() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgPVPOutS2C.killer)
  return *killer_;
}
inline void MsgPVPOutS2C::set_killer(const ::std::string& value) {
  set_has_killer();
  if (killer_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    killer_ = new ::std::string;
  }
  killer_->assign(value);
  // @@protoc_insertion_point(field_set:MsgPB.MsgPVPOutS2C.killer)
}
inline void MsgPVPOutS2C::set_killer(const char* value) {
  set_has_killer();
  if (killer_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    killer_ = new ::std::string;
  }
  killer_->assign(value);
  // @@protoc_insertion_point(field_set_char:MsgPB.MsgPVPOutS2C.killer)
}
inline void MsgPVPOutS2C::set_killer(const char* value, size_t size) {
  set_has_killer();
  if (killer_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    killer_ = new ::std::string;
  }
  killer_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:MsgPB.MsgPVPOutS2C.killer)
}
inline ::std::string* MsgPVPOutS2C::mutable_killer() {
  set_has_killer();
  if (killer_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    killer_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:MsgPB.MsgPVPOutS2C.killer)
  return killer_;
}
inline ::std::string* MsgPVPOutS2C::release_killer() {
  clear_has_killer();
  if (killer_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = killer_;
    killer_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void MsgPVPOutS2C::set_allocated_killer(::std::string* killer) {
  if (killer_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete killer_;
  }
  if (killer) {
    set_has_killer();
    killer_ = killer;
  } else {
    clear_has_killer();
    killer_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:MsgPB.MsgPVPOutS2C.killer)
}

// optional string deader = 5;
inline bool MsgPVPOutS2C::has_deader() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void MsgPVPOutS2C::set_has_deader() {
  _has_bits_[0] |= 0x00000010u;
}
inline void MsgPVPOutS2C::clear_has_deader() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void MsgPVPOutS2C::clear_deader() {
  if (deader_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    deader_->clear();
  }
  clear_has_deader();
}
inline const ::std::string& MsgPVPOutS2C::deader() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgPVPOutS2C.deader)
  return *deader_;
}
inline void MsgPVPOutS2C::set_deader(const ::std::string& value) {
  set_has_deader();
  if (deader_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    deader_ = new ::std::string;
  }
  deader_->assign(value);
  // @@protoc_insertion_point(field_set:MsgPB.MsgPVPOutS2C.deader)
}
inline void MsgPVPOutS2C::set_deader(const char* value) {
  set_has_deader();
  if (deader_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    deader_ = new ::std::string;
  }
  deader_->assign(value);
  // @@protoc_insertion_point(field_set_char:MsgPB.MsgPVPOutS2C.deader)
}
inline void MsgPVPOutS2C::set_deader(const char* value, size_t size) {
  set_has_deader();
  if (deader_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    deader_ = new ::std::string;
  }
  deader_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:MsgPB.MsgPVPOutS2C.deader)
}
inline ::std::string* MsgPVPOutS2C::mutable_deader() {
  set_has_deader();
  if (deader_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    deader_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:MsgPB.MsgPVPOutS2C.deader)
  return deader_;
}
inline ::std::string* MsgPVPOutS2C::release_deader() {
  clear_has_deader();
  if (deader_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = deader_;
    deader_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void MsgPVPOutS2C::set_allocated_deader(::std::string* deader) {
  if (deader_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete deader_;
  }
  if (deader) {
    set_has_deader();
    deader_ = deader;
  } else {
    clear_has_deader();
    deader_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:MsgPB.MsgPVPOutS2C.deader)
}

// optional int32 idWeapon = 6;
inline bool MsgPVPOutS2C::has_idweapon() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void MsgPVPOutS2C::set_has_idweapon() {
  _has_bits_[0] |= 0x00000020u;
}
inline void MsgPVPOutS2C::clear_has_idweapon() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void MsgPVPOutS2C::clear_idweapon() {
  idweapon_ = 0;
  clear_has_idweapon();
}
inline ::google::protobuf::int32 MsgPVPOutS2C::idweapon() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgPVPOutS2C.idWeapon)
  return idweapon_;
}
inline void MsgPVPOutS2C::set_idweapon(::google::protobuf::int32 value) {
  set_has_idweapon();
  idweapon_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgPVPOutS2C.idWeapon)
}

// optional int32 idMob = 7;
inline bool MsgPVPOutS2C::has_idmob() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void MsgPVPOutS2C::set_has_idmob() {
  _has_bits_[0] |= 0x00000040u;
}
inline void MsgPVPOutS2C::clear_has_idmob() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void MsgPVPOutS2C::clear_idmob() {
  idmob_ = 0;
  clear_has_idmob();
}
inline ::google::protobuf::int32 MsgPVPOutS2C::idmob() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgPVPOutS2C.idMob)
  return idmob_;
}
inline void MsgPVPOutS2C::set_idmob(::google::protobuf::int32 value) {
  set_has_idmob();
  idmob_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgPVPOutS2C.idMob)
}

// optional int32 idObjKiller = 8;
inline bool MsgPVPOutS2C::has_idobjkiller() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void MsgPVPOutS2C::set_has_idobjkiller() {
  _has_bits_[0] |= 0x00000080u;
}
inline void MsgPVPOutS2C::clear_has_idobjkiller() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void MsgPVPOutS2C::clear_idobjkiller() {
  idobjkiller_ = 0;
  clear_has_idobjkiller();
}
inline ::google::protobuf::int32 MsgPVPOutS2C::idobjkiller() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgPVPOutS2C.idObjKiller)
  return idobjkiller_;
}
inline void MsgPVPOutS2C::set_idobjkiller(::google::protobuf::int32 value) {
  set_has_idobjkiller();
  idobjkiller_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgPVPOutS2C.idObjKiller)
}

// -------------------------------------------------------------------

// MsgPVPStart

// optional .MsgPB.EMsgType msgType = 1 [default = _MSG_PVP_START_S2C];
inline bool MsgPVPStart::has_msgtype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgPVPStart::set_has_msgtype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgPVPStart::clear_has_msgtype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgPVPStart::clear_msgtype() {
  msgtype_ = 2508;
  clear_has_msgtype();
}
inline ::MsgPB::EMsgType MsgPVPStart::msgtype() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgPVPStart.msgType)
  return static_cast< ::MsgPB::EMsgType >(msgtype_);
}
inline void MsgPVPStart::set_msgtype(::MsgPB::EMsgType value) {
  assert(::MsgPB::EMsgType_IsValid(value));
  set_has_msgtype();
  msgtype_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgPVPStart.msgType)
}

// optional int64 iggid = 2;
inline bool MsgPVPStart::has_iggid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MsgPVPStart::set_has_iggid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MsgPVPStart::clear_has_iggid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MsgPVPStart::clear_iggid() {
  iggid_ = GOOGLE_LONGLONG(0);
  clear_has_iggid();
}
inline ::google::protobuf::int64 MsgPVPStart::iggid() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgPVPStart.iggid)
  return iggid_;
}
inline void MsgPVPStart::set_iggid(::google::protobuf::int64 value) {
  set_has_iggid();
  iggid_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgPVPStart.iggid)
}

// optional int32 total = 3;
inline bool MsgPVPStart::has_total() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MsgPVPStart::set_has_total() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MsgPVPStart::clear_has_total() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MsgPVPStart::clear_total() {
  total_ = 0;
  clear_has_total();
}
inline ::google::protobuf::int32 MsgPVPStart::total() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgPVPStart.total)
  return total_;
}
inline void MsgPVPStart::set_total(::google::protobuf::int32 value) {
  set_has_total();
  total_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgPVPStart.total)
}

// -------------------------------------------------------------------

// MsgPVPGasS2C

// optional .MsgPB.EMsgType msgType = 1 [default = _MSG_PVP_GAS_S2C];
inline bool MsgPVPGasS2C::has_msgtype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgPVPGasS2C::set_has_msgtype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgPVPGasS2C::clear_has_msgtype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgPVPGasS2C::clear_msgtype() {
  msgtype_ = 2510;
  clear_has_msgtype();
}
inline ::MsgPB::EMsgType MsgPVPGasS2C::msgtype() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgPVPGasS2C.msgType)
  return static_cast< ::MsgPB::EMsgType >(msgtype_);
}
inline void MsgPVPGasS2C::set_msgtype(::MsgPB::EMsgType value) {
  assert(::MsgPB::EMsgType_IsValid(value));
  set_has_msgtype();
  msgtype_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgPVPGasS2C.msgType)
}

// optional int64 iggid = 2;
inline bool MsgPVPGasS2C::has_iggid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MsgPVPGasS2C::set_has_iggid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MsgPVPGasS2C::clear_has_iggid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MsgPVPGasS2C::clear_iggid() {
  iggid_ = GOOGLE_LONGLONG(0);
  clear_has_iggid();
}
inline ::google::protobuf::int64 MsgPVPGasS2C::iggid() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgPVPGasS2C.iggid)
  return iggid_;
}
inline void MsgPVPGasS2C::set_iggid(::google::protobuf::int64 value) {
  set_has_iggid();
  iggid_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgPVPGasS2C.iggid)
}

// optional int64 opentime = 3;
inline bool MsgPVPGasS2C::has_opentime() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MsgPVPGasS2C::set_has_opentime() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MsgPVPGasS2C::clear_has_opentime() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MsgPVPGasS2C::clear_opentime() {
  opentime_ = GOOGLE_LONGLONG(0);
  clear_has_opentime();
}
inline ::google::protobuf::int64 MsgPVPGasS2C::opentime() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgPVPGasS2C.opentime)
  return opentime_;
}
inline void MsgPVPGasS2C::set_opentime(::google::protobuf::int64 value) {
  set_has_opentime();
  opentime_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgPVPGasS2C.opentime)
}

// optional int32 posx = 4;
inline bool MsgPVPGasS2C::has_posx() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MsgPVPGasS2C::set_has_posx() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MsgPVPGasS2C::clear_has_posx() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MsgPVPGasS2C::clear_posx() {
  posx_ = 0;
  clear_has_posx();
}
inline ::google::protobuf::int32 MsgPVPGasS2C::posx() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgPVPGasS2C.posx)
  return posx_;
}
inline void MsgPVPGasS2C::set_posx(::google::protobuf::int32 value) {
  set_has_posx();
  posx_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgPVPGasS2C.posx)
}

// optional int32 posy = 5;
inline bool MsgPVPGasS2C::has_posy() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void MsgPVPGasS2C::set_has_posy() {
  _has_bits_[0] |= 0x00000010u;
}
inline void MsgPVPGasS2C::clear_has_posy() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void MsgPVPGasS2C::clear_posy() {
  posy_ = 0;
  clear_has_posy();
}
inline ::google::protobuf::int32 MsgPVPGasS2C::posy() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgPVPGasS2C.posy)
  return posy_;
}
inline void MsgPVPGasS2C::set_posy(::google::protobuf::int32 value) {
  set_has_posy();
  posy_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgPVPGasS2C.posy)
}

// optional int32 radius = 6;
inline bool MsgPVPGasS2C::has_radius() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void MsgPVPGasS2C::set_has_radius() {
  _has_bits_[0] |= 0x00000020u;
}
inline void MsgPVPGasS2C::clear_has_radius() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void MsgPVPGasS2C::clear_radius() {
  radius_ = 0;
  clear_has_radius();
}
inline ::google::protobuf::int32 MsgPVPGasS2C::radius() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgPVPGasS2C.radius)
  return radius_;
}
inline void MsgPVPGasS2C::set_radius(::google::protobuf::int32 value) {
  set_has_radius();
  radius_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgPVPGasS2C.radius)
}

// optional int32 speed = 7;
inline bool MsgPVPGasS2C::has_speed() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void MsgPVPGasS2C::set_has_speed() {
  _has_bits_[0] |= 0x00000040u;
}
inline void MsgPVPGasS2C::clear_has_speed() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void MsgPVPGasS2C::clear_speed() {
  speed_ = 0;
  clear_has_speed();
}
inline ::google::protobuf::int32 MsgPVPGasS2C::speed() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgPVPGasS2C.speed)
  return speed_;
}
inline void MsgPVPGasS2C::set_speed(::google::protobuf::int32 value) {
  set_has_speed();
  speed_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgPVPGasS2C.speed)
}

// optional int32 radius_min = 8;
inline bool MsgPVPGasS2C::has_radius_min() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void MsgPVPGasS2C::set_has_radius_min() {
  _has_bits_[0] |= 0x00000080u;
}
inline void MsgPVPGasS2C::clear_has_radius_min() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void MsgPVPGasS2C::clear_radius_min() {
  radius_min_ = 0;
  clear_has_radius_min();
}
inline ::google::protobuf::int32 MsgPVPGasS2C::radius_min() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgPVPGasS2C.radius_min)
  return radius_min_;
}
inline void MsgPVPGasS2C::set_radius_min(::google::protobuf::int32 value) {
  set_has_radius_min();
  radius_min_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgPVPGasS2C.radius_min)
}

// -------------------------------------------------------------------

// MsgPVPRewardS2C

// optional .MsgPB.EMsgType msgType = 1 [default = _MSG_PVP_REWARD_S2C];
inline bool MsgPVPRewardS2C::has_msgtype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgPVPRewardS2C::set_has_msgtype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgPVPRewardS2C::clear_has_msgtype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgPVPRewardS2C::clear_msgtype() {
  msgtype_ = 2509;
  clear_has_msgtype();
}
inline ::MsgPB::EMsgType MsgPVPRewardS2C::msgtype() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgPVPRewardS2C.msgType)
  return static_cast< ::MsgPB::EMsgType >(msgtype_);
}
inline void MsgPVPRewardS2C::set_msgtype(::MsgPB::EMsgType value) {
  assert(::MsgPB::EMsgType_IsValid(value));
  set_has_msgtype();
  msgtype_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgPVPRewardS2C.msgType)
}

// optional int64 iggid = 2;
inline bool MsgPVPRewardS2C::has_iggid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MsgPVPRewardS2C::set_has_iggid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MsgPVPRewardS2C::clear_has_iggid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MsgPVPRewardS2C::clear_iggid() {
  iggid_ = GOOGLE_LONGLONG(0);
  clear_has_iggid();
}
inline ::google::protobuf::int64 MsgPVPRewardS2C::iggid() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgPVPRewardS2C.iggid)
  return iggid_;
}
inline void MsgPVPRewardS2C::set_iggid(::google::protobuf::int64 value) {
  set_has_iggid();
  iggid_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgPVPRewardS2C.iggid)
}

// optional int32 total = 3;
inline bool MsgPVPRewardS2C::has_total() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MsgPVPRewardS2C::set_has_total() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MsgPVPRewardS2C::clear_has_total() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MsgPVPRewardS2C::clear_total() {
  total_ = 0;
  clear_has_total();
}
inline ::google::protobuf::int32 MsgPVPRewardS2C::total() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgPVPRewardS2C.total)
  return total_;
}
inline void MsgPVPRewardS2C::set_total(::google::protobuf::int32 value) {
  set_has_total();
  total_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgPVPRewardS2C.total)
}

// optional int32 rank = 4;
inline bool MsgPVPRewardS2C::has_rank() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MsgPVPRewardS2C::set_has_rank() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MsgPVPRewardS2C::clear_has_rank() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MsgPVPRewardS2C::clear_rank() {
  rank_ = 0;
  clear_has_rank();
}
inline ::google::protobuf::int32 MsgPVPRewardS2C::rank() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgPVPRewardS2C.rank)
  return rank_;
}
inline void MsgPVPRewardS2C::set_rank(::google::protobuf::int32 value) {
  set_has_rank();
  rank_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgPVPRewardS2C.rank)
}

// optional int32 killNum = 5;
inline bool MsgPVPRewardS2C::has_killnum() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void MsgPVPRewardS2C::set_has_killnum() {
  _has_bits_[0] |= 0x00000010u;
}
inline void MsgPVPRewardS2C::clear_has_killnum() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void MsgPVPRewardS2C::clear_killnum() {
  killnum_ = 0;
  clear_has_killnum();
}
inline ::google::protobuf::int32 MsgPVPRewardS2C::killnum() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgPVPRewardS2C.killNum)
  return killnum_;
}
inline void MsgPVPRewardS2C::set_killnum(::google::protobuf::int32 value) {
  set_has_killnum();
  killnum_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgPVPRewardS2C.killNum)
}

// optional int32 resourse = 6;
inline bool MsgPVPRewardS2C::has_resourse() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void MsgPVPRewardS2C::set_has_resourse() {
  _has_bits_[0] |= 0x00000020u;
}
inline void MsgPVPRewardS2C::clear_has_resourse() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void MsgPVPRewardS2C::clear_resourse() {
  resourse_ = 0;
  clear_has_resourse();
}
inline ::google::protobuf::int32 MsgPVPRewardS2C::resourse() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgPVPRewardS2C.resourse)
  return resourse_;
}
inline void MsgPVPRewardS2C::set_resourse(::google::protobuf::int32 value) {
  set_has_resourse();
  resourse_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgPVPRewardS2C.resourse)
}

// optional int32 coin = 7;
inline bool MsgPVPRewardS2C::has_coin() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void MsgPVPRewardS2C::set_has_coin() {
  _has_bits_[0] |= 0x00000040u;
}
inline void MsgPVPRewardS2C::clear_has_coin() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void MsgPVPRewardS2C::clear_coin() {
  coin_ = 0;
  clear_has_coin();
}
inline ::google::protobuf::int32 MsgPVPRewardS2C::coin() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgPVPRewardS2C.coin)
  return coin_;
}
inline void MsgPVPRewardS2C::set_coin(::google::protobuf::int32 value) {
  set_has_coin();
  coin_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgPVPRewardS2C.coin)
}

// optional int32 score = 8;
inline bool MsgPVPRewardS2C::has_score() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void MsgPVPRewardS2C::set_has_score() {
  _has_bits_[0] |= 0x00000080u;
}
inline void MsgPVPRewardS2C::clear_has_score() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void MsgPVPRewardS2C::clear_score() {
  score_ = 0;
  clear_has_score();
}
inline ::google::protobuf::int32 MsgPVPRewardS2C::score() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgPVPRewardS2C.score)
  return score_;
}
inline void MsgPVPRewardS2C::set_score(::google::protobuf::int32 value) {
  set_has_score();
  score_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgPVPRewardS2C.score)
}

// optional int32 segment = 9;
inline bool MsgPVPRewardS2C::has_segment() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void MsgPVPRewardS2C::set_has_segment() {
  _has_bits_[0] |= 0x00000100u;
}
inline void MsgPVPRewardS2C::clear_has_segment() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void MsgPVPRewardS2C::clear_segment() {
  segment_ = 0;
  clear_has_segment();
}
inline ::google::protobuf::int32 MsgPVPRewardS2C::segment() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgPVPRewardS2C.segment)
  return segment_;
}
inline void MsgPVPRewardS2C::set_segment(::google::protobuf::int32 value) {
  set_has_segment();
  segment_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgPVPRewardS2C.segment)
}

// optional int32 killScore = 10;
inline bool MsgPVPRewardS2C::has_killscore() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void MsgPVPRewardS2C::set_has_killscore() {
  _has_bits_[0] |= 0x00000200u;
}
inline void MsgPVPRewardS2C::clear_has_killscore() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void MsgPVPRewardS2C::clear_killscore() {
  killscore_ = 0;
  clear_has_killscore();
}
inline ::google::protobuf::int32 MsgPVPRewardS2C::killscore() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgPVPRewardS2C.killScore)
  return killscore_;
}
inline void MsgPVPRewardS2C::set_killscore(::google::protobuf::int32 value) {
  set_has_killscore();
  killscore_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgPVPRewardS2C.killScore)
}

// optional int32 rankScore = 11;
inline bool MsgPVPRewardS2C::has_rankscore() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void MsgPVPRewardS2C::set_has_rankscore() {
  _has_bits_[0] |= 0x00000400u;
}
inline void MsgPVPRewardS2C::clear_has_rankscore() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void MsgPVPRewardS2C::clear_rankscore() {
  rankscore_ = 0;
  clear_has_rankscore();
}
inline ::google::protobuf::int32 MsgPVPRewardS2C::rankscore() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgPVPRewardS2C.rankScore)
  return rankscore_;
}
inline void MsgPVPRewardS2C::set_rankscore(::google::protobuf::int32 value) {
  set_has_rankscore();
  rankscore_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgPVPRewardS2C.rankScore)
}

// optional int32 resScore = 12;
inline bool MsgPVPRewardS2C::has_resscore() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void MsgPVPRewardS2C::set_has_resscore() {
  _has_bits_[0] |= 0x00000800u;
}
inline void MsgPVPRewardS2C::clear_has_resscore() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void MsgPVPRewardS2C::clear_resscore() {
  resscore_ = 0;
  clear_has_resscore();
}
inline ::google::protobuf::int32 MsgPVPRewardS2C::resscore() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgPVPRewardS2C.resScore)
  return resscore_;
}
inline void MsgPVPRewardS2C::set_resscore(::google::protobuf::int32 value) {
  set_has_resscore();
  resscore_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgPVPRewardS2C.resScore)
}

// optional int32 totalScore = 13;
inline bool MsgPVPRewardS2C::has_totalscore() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void MsgPVPRewardS2C::set_has_totalscore() {
  _has_bits_[0] |= 0x00001000u;
}
inline void MsgPVPRewardS2C::clear_has_totalscore() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void MsgPVPRewardS2C::clear_totalscore() {
  totalscore_ = 0;
  clear_has_totalscore();
}
inline ::google::protobuf::int32 MsgPVPRewardS2C::totalscore() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgPVPRewardS2C.totalScore)
  return totalscore_;
}
inline void MsgPVPRewardS2C::set_totalscore(::google::protobuf::int32 value) {
  set_has_totalscore();
  totalscore_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgPVPRewardS2C.totalScore)
}

// optional int32 totalKillScore = 14;
inline bool MsgPVPRewardS2C::has_totalkillscore() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void MsgPVPRewardS2C::set_has_totalkillscore() {
  _has_bits_[0] |= 0x00002000u;
}
inline void MsgPVPRewardS2C::clear_has_totalkillscore() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void MsgPVPRewardS2C::clear_totalkillscore() {
  totalkillscore_ = 0;
  clear_has_totalkillscore();
}
inline ::google::protobuf::int32 MsgPVPRewardS2C::totalkillscore() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgPVPRewardS2C.totalKillScore)
  return totalkillscore_;
}
inline void MsgPVPRewardS2C::set_totalkillscore(::google::protobuf::int32 value) {
  set_has_totalkillscore();
  totalkillscore_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgPVPRewardS2C.totalKillScore)
}

// optional int32 totalRankScore = 15;
inline bool MsgPVPRewardS2C::has_totalrankscore() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void MsgPVPRewardS2C::set_has_totalrankscore() {
  _has_bits_[0] |= 0x00004000u;
}
inline void MsgPVPRewardS2C::clear_has_totalrankscore() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void MsgPVPRewardS2C::clear_totalrankscore() {
  totalrankscore_ = 0;
  clear_has_totalrankscore();
}
inline ::google::protobuf::int32 MsgPVPRewardS2C::totalrankscore() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgPVPRewardS2C.totalRankScore)
  return totalrankscore_;
}
inline void MsgPVPRewardS2C::set_totalrankscore(::google::protobuf::int32 value) {
  set_has_totalrankscore();
  totalrankscore_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgPVPRewardS2C.totalRankScore)
}

// optional int32 totalTime = 16;
inline bool MsgPVPRewardS2C::has_totaltime() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void MsgPVPRewardS2C::set_has_totaltime() {
  _has_bits_[0] |= 0x00008000u;
}
inline void MsgPVPRewardS2C::clear_has_totaltime() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void MsgPVPRewardS2C::clear_totaltime() {
  totaltime_ = 0;
  clear_has_totaltime();
}
inline ::google::protobuf::int32 MsgPVPRewardS2C::totaltime() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgPVPRewardS2C.totalTime)
  return totaltime_;
}
inline void MsgPVPRewardS2C::set_totaltime(::google::protobuf::int32 value) {
  set_has_totaltime();
  totaltime_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgPVPRewardS2C.totalTime)
}

// optional int32 totalPvpCoin = 17;
inline bool MsgPVPRewardS2C::has_totalpvpcoin() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void MsgPVPRewardS2C::set_has_totalpvpcoin() {
  _has_bits_[0] |= 0x00010000u;
}
inline void MsgPVPRewardS2C::clear_has_totalpvpcoin() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void MsgPVPRewardS2C::clear_totalpvpcoin() {
  totalpvpcoin_ = 0;
  clear_has_totalpvpcoin();
}
inline ::google::protobuf::int32 MsgPVPRewardS2C::totalpvpcoin() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgPVPRewardS2C.totalPvpCoin)
  return totalpvpcoin_;
}
inline void MsgPVPRewardS2C::set_totalpvpcoin(::google::protobuf::int32 value) {
  set_has_totalpvpcoin();
  totalpvpcoin_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgPVPRewardS2C.totalPvpCoin)
}

// -------------------------------------------------------------------

// MsgPVPDiscardWeaponC2S

// optional .MsgPB.EMsgType msgType = 1 [default = _MSG_PVP_DISCARD_WEAPON_C2S];
inline bool MsgPVPDiscardWeaponC2S::has_msgtype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgPVPDiscardWeaponC2S::set_has_msgtype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgPVPDiscardWeaponC2S::clear_has_msgtype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgPVPDiscardWeaponC2S::clear_msgtype() {
  msgtype_ = 2520;
  clear_has_msgtype();
}
inline ::MsgPB::EMsgType MsgPVPDiscardWeaponC2S::msgtype() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgPVPDiscardWeaponC2S.msgType)
  return static_cast< ::MsgPB::EMsgType >(msgtype_);
}
inline void MsgPVPDiscardWeaponC2S::set_msgtype(::MsgPB::EMsgType value) {
  assert(::MsgPB::EMsgType_IsValid(value));
  set_has_msgtype();
  msgtype_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgPVPDiscardWeaponC2S.msgType)
}

// optional int64 iggid = 2;
inline bool MsgPVPDiscardWeaponC2S::has_iggid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MsgPVPDiscardWeaponC2S::set_has_iggid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MsgPVPDiscardWeaponC2S::clear_has_iggid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MsgPVPDiscardWeaponC2S::clear_iggid() {
  iggid_ = GOOGLE_LONGLONG(0);
  clear_has_iggid();
}
inline ::google::protobuf::int64 MsgPVPDiscardWeaponC2S::iggid() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgPVPDiscardWeaponC2S.iggid)
  return iggid_;
}
inline void MsgPVPDiscardWeaponC2S::set_iggid(::google::protobuf::int64 value) {
  set_has_iggid();
  iggid_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgPVPDiscardWeaponC2S.iggid)
}

// optional int32 index = 3;
inline bool MsgPVPDiscardWeaponC2S::has_index() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MsgPVPDiscardWeaponC2S::set_has_index() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MsgPVPDiscardWeaponC2S::clear_has_index() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MsgPVPDiscardWeaponC2S::clear_index() {
  index_ = 0;
  clear_has_index();
}
inline ::google::protobuf::int32 MsgPVPDiscardWeaponC2S::index() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgPVPDiscardWeaponC2S.index)
  return index_;
}
inline void MsgPVPDiscardWeaponC2S::set_index(::google::protobuf::int32 value) {
  set_has_index();
  index_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgPVPDiscardWeaponC2S.index)
}

// -------------------------------------------------------------------

// MsgPVPDiscardWeaponS2C

// optional .MsgPB.EMsgType msgType = 1 [default = _MSG_PVP_DISCARD_WEAPON_S2C];
inline bool MsgPVPDiscardWeaponS2C::has_msgtype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgPVPDiscardWeaponS2C::set_has_msgtype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgPVPDiscardWeaponS2C::clear_has_msgtype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgPVPDiscardWeaponS2C::clear_msgtype() {
  msgtype_ = 2521;
  clear_has_msgtype();
}
inline ::MsgPB::EMsgType MsgPVPDiscardWeaponS2C::msgtype() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgPVPDiscardWeaponS2C.msgType)
  return static_cast< ::MsgPB::EMsgType >(msgtype_);
}
inline void MsgPVPDiscardWeaponS2C::set_msgtype(::MsgPB::EMsgType value) {
  assert(::MsgPB::EMsgType_IsValid(value));
  set_has_msgtype();
  msgtype_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgPVPDiscardWeaponS2C.msgType)
}

// optional int64 iggid = 2;
inline bool MsgPVPDiscardWeaponS2C::has_iggid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MsgPVPDiscardWeaponS2C::set_has_iggid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MsgPVPDiscardWeaponS2C::clear_has_iggid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MsgPVPDiscardWeaponS2C::clear_iggid() {
  iggid_ = GOOGLE_LONGLONG(0);
  clear_has_iggid();
}
inline ::google::protobuf::int64 MsgPVPDiscardWeaponS2C::iggid() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgPVPDiscardWeaponS2C.iggid)
  return iggid_;
}
inline void MsgPVPDiscardWeaponS2C::set_iggid(::google::protobuf::int64 value) {
  set_has_iggid();
  iggid_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgPVPDiscardWeaponS2C.iggid)
}

// optional int32 index = 3;
inline bool MsgPVPDiscardWeaponS2C::has_index() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MsgPVPDiscardWeaponS2C::set_has_index() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MsgPVPDiscardWeaponS2C::clear_has_index() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MsgPVPDiscardWeaponS2C::clear_index() {
  index_ = 0;
  clear_has_index();
}
inline ::google::protobuf::int32 MsgPVPDiscardWeaponS2C::index() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgPVPDiscardWeaponS2C.index)
  return index_;
}
inline void MsgPVPDiscardWeaponS2C::set_index(::google::protobuf::int32 value) {
  set_has_index();
  index_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgPVPDiscardWeaponS2C.index)
}

// optional .MsgPB.PVP_WEAPON_RESULT res = 4;
inline bool MsgPVPDiscardWeaponS2C::has_res() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MsgPVPDiscardWeaponS2C::set_has_res() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MsgPVPDiscardWeaponS2C::clear_has_res() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MsgPVPDiscardWeaponS2C::clear_res() {
  res_ = 0;
  clear_has_res();
}
inline ::MsgPB::PVP_WEAPON_RESULT MsgPVPDiscardWeaponS2C::res() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgPVPDiscardWeaponS2C.res)
  return static_cast< ::MsgPB::PVP_WEAPON_RESULT >(res_);
}
inline void MsgPVPDiscardWeaponS2C::set_res(::MsgPB::PVP_WEAPON_RESULT value) {
  assert(::MsgPB::PVP_WEAPON_RESULT_IsValid(value));
  set_has_res();
  res_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgPVPDiscardWeaponS2C.res)
}

// -------------------------------------------------------------------

// MsgPVPChangeWeaponC2S

// optional .MsgPB.EMsgType msgType = 1 [default = _MSG_PVP_CHANGE_WEAPON_C2S];
inline bool MsgPVPChangeWeaponC2S::has_msgtype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgPVPChangeWeaponC2S::set_has_msgtype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgPVPChangeWeaponC2S::clear_has_msgtype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgPVPChangeWeaponC2S::clear_msgtype() {
  msgtype_ = 2522;
  clear_has_msgtype();
}
inline ::MsgPB::EMsgType MsgPVPChangeWeaponC2S::msgtype() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgPVPChangeWeaponC2S.msgType)
  return static_cast< ::MsgPB::EMsgType >(msgtype_);
}
inline void MsgPVPChangeWeaponC2S::set_msgtype(::MsgPB::EMsgType value) {
  assert(::MsgPB::EMsgType_IsValid(value));
  set_has_msgtype();
  msgtype_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgPVPChangeWeaponC2S.msgType)
}

// optional int64 iggid = 2;
inline bool MsgPVPChangeWeaponC2S::has_iggid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MsgPVPChangeWeaponC2S::set_has_iggid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MsgPVPChangeWeaponC2S::clear_has_iggid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MsgPVPChangeWeaponC2S::clear_iggid() {
  iggid_ = GOOGLE_LONGLONG(0);
  clear_has_iggid();
}
inline ::google::protobuf::int64 MsgPVPChangeWeaponC2S::iggid() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgPVPChangeWeaponC2S.iggid)
  return iggid_;
}
inline void MsgPVPChangeWeaponC2S::set_iggid(::google::protobuf::int64 value) {
  set_has_iggid();
  iggid_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgPVPChangeWeaponC2S.iggid)
}

// optional int32 index1 = 3;
inline bool MsgPVPChangeWeaponC2S::has_index1() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MsgPVPChangeWeaponC2S::set_has_index1() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MsgPVPChangeWeaponC2S::clear_has_index1() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MsgPVPChangeWeaponC2S::clear_index1() {
  index1_ = 0;
  clear_has_index1();
}
inline ::google::protobuf::int32 MsgPVPChangeWeaponC2S::index1() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgPVPChangeWeaponC2S.index1)
  return index1_;
}
inline void MsgPVPChangeWeaponC2S::set_index1(::google::protobuf::int32 value) {
  set_has_index1();
  index1_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgPVPChangeWeaponC2S.index1)
}

// optional int32 index2 = 4;
inline bool MsgPVPChangeWeaponC2S::has_index2() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MsgPVPChangeWeaponC2S::set_has_index2() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MsgPVPChangeWeaponC2S::clear_has_index2() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MsgPVPChangeWeaponC2S::clear_index2() {
  index2_ = 0;
  clear_has_index2();
}
inline ::google::protobuf::int32 MsgPVPChangeWeaponC2S::index2() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgPVPChangeWeaponC2S.index2)
  return index2_;
}
inline void MsgPVPChangeWeaponC2S::set_index2(::google::protobuf::int32 value) {
  set_has_index2();
  index2_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgPVPChangeWeaponC2S.index2)
}

// -------------------------------------------------------------------

// MsgPVPChangeWeaponS2C

// optional .MsgPB.EMsgType msgType = 1 [default = _MSG_PVP_CHANGE_WEAPON_S2C];
inline bool MsgPVPChangeWeaponS2C::has_msgtype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgPVPChangeWeaponS2C::set_has_msgtype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgPVPChangeWeaponS2C::clear_has_msgtype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgPVPChangeWeaponS2C::clear_msgtype() {
  msgtype_ = 2523;
  clear_has_msgtype();
}
inline ::MsgPB::EMsgType MsgPVPChangeWeaponS2C::msgtype() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgPVPChangeWeaponS2C.msgType)
  return static_cast< ::MsgPB::EMsgType >(msgtype_);
}
inline void MsgPVPChangeWeaponS2C::set_msgtype(::MsgPB::EMsgType value) {
  assert(::MsgPB::EMsgType_IsValid(value));
  set_has_msgtype();
  msgtype_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgPVPChangeWeaponS2C.msgType)
}

// optional int64 iggid = 2;
inline bool MsgPVPChangeWeaponS2C::has_iggid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MsgPVPChangeWeaponS2C::set_has_iggid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MsgPVPChangeWeaponS2C::clear_has_iggid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MsgPVPChangeWeaponS2C::clear_iggid() {
  iggid_ = GOOGLE_LONGLONG(0);
  clear_has_iggid();
}
inline ::google::protobuf::int64 MsgPVPChangeWeaponS2C::iggid() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgPVPChangeWeaponS2C.iggid)
  return iggid_;
}
inline void MsgPVPChangeWeaponS2C::set_iggid(::google::protobuf::int64 value) {
  set_has_iggid();
  iggid_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgPVPChangeWeaponS2C.iggid)
}

// optional int32 index1 = 3;
inline bool MsgPVPChangeWeaponS2C::has_index1() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MsgPVPChangeWeaponS2C::set_has_index1() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MsgPVPChangeWeaponS2C::clear_has_index1() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MsgPVPChangeWeaponS2C::clear_index1() {
  index1_ = 0;
  clear_has_index1();
}
inline ::google::protobuf::int32 MsgPVPChangeWeaponS2C::index1() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgPVPChangeWeaponS2C.index1)
  return index1_;
}
inline void MsgPVPChangeWeaponS2C::set_index1(::google::protobuf::int32 value) {
  set_has_index1();
  index1_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgPVPChangeWeaponS2C.index1)
}

// optional int32 index2 = 4;
inline bool MsgPVPChangeWeaponS2C::has_index2() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MsgPVPChangeWeaponS2C::set_has_index2() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MsgPVPChangeWeaponS2C::clear_has_index2() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MsgPVPChangeWeaponS2C::clear_index2() {
  index2_ = 0;
  clear_has_index2();
}
inline ::google::protobuf::int32 MsgPVPChangeWeaponS2C::index2() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgPVPChangeWeaponS2C.index2)
  return index2_;
}
inline void MsgPVPChangeWeaponS2C::set_index2(::google::protobuf::int32 value) {
  set_has_index2();
  index2_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgPVPChangeWeaponS2C.index2)
}

// optional .MsgPB.PVP_WEAPON_RESULT res = 5;
inline bool MsgPVPChangeWeaponS2C::has_res() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void MsgPVPChangeWeaponS2C::set_has_res() {
  _has_bits_[0] |= 0x00000010u;
}
inline void MsgPVPChangeWeaponS2C::clear_has_res() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void MsgPVPChangeWeaponS2C::clear_res() {
  res_ = 0;
  clear_has_res();
}
inline ::MsgPB::PVP_WEAPON_RESULT MsgPVPChangeWeaponS2C::res() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgPVPChangeWeaponS2C.res)
  return static_cast< ::MsgPB::PVP_WEAPON_RESULT >(res_);
}
inline void MsgPVPChangeWeaponS2C::set_res(::MsgPB::PVP_WEAPON_RESULT value) {
  assert(::MsgPB::PVP_WEAPON_RESULT_IsValid(value));
  set_has_res();
  res_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgPVPChangeWeaponS2C.res)
}

// -------------------------------------------------------------------

// MsgPVPChoiceWeaponC2S

// optional .MsgPB.EMsgType msgType = 1 [default = _MSG_PVP_CHOICE_WEAPON_C2S];
inline bool MsgPVPChoiceWeaponC2S::has_msgtype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgPVPChoiceWeaponC2S::set_has_msgtype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgPVPChoiceWeaponC2S::clear_has_msgtype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgPVPChoiceWeaponC2S::clear_msgtype() {
  msgtype_ = 2524;
  clear_has_msgtype();
}
inline ::MsgPB::EMsgType MsgPVPChoiceWeaponC2S::msgtype() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgPVPChoiceWeaponC2S.msgType)
  return static_cast< ::MsgPB::EMsgType >(msgtype_);
}
inline void MsgPVPChoiceWeaponC2S::set_msgtype(::MsgPB::EMsgType value) {
  assert(::MsgPB::EMsgType_IsValid(value));
  set_has_msgtype();
  msgtype_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgPVPChoiceWeaponC2S.msgType)
}

// optional int64 iggid = 2;
inline bool MsgPVPChoiceWeaponC2S::has_iggid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MsgPVPChoiceWeaponC2S::set_has_iggid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MsgPVPChoiceWeaponC2S::clear_has_iggid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MsgPVPChoiceWeaponC2S::clear_iggid() {
  iggid_ = GOOGLE_LONGLONG(0);
  clear_has_iggid();
}
inline ::google::protobuf::int64 MsgPVPChoiceWeaponC2S::iggid() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgPVPChoiceWeaponC2S.iggid)
  return iggid_;
}
inline void MsgPVPChoiceWeaponC2S::set_iggid(::google::protobuf::int64 value) {
  set_has_iggid();
  iggid_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgPVPChoiceWeaponC2S.iggid)
}

// optional int32 index = 3;
inline bool MsgPVPChoiceWeaponC2S::has_index() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MsgPVPChoiceWeaponC2S::set_has_index() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MsgPVPChoiceWeaponC2S::clear_has_index() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MsgPVPChoiceWeaponC2S::clear_index() {
  index_ = 0;
  clear_has_index();
}
inline ::google::protobuf::int32 MsgPVPChoiceWeaponC2S::index() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgPVPChoiceWeaponC2S.index)
  return index_;
}
inline void MsgPVPChoiceWeaponC2S::set_index(::google::protobuf::int32 value) {
  set_has_index();
  index_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgPVPChoiceWeaponC2S.index)
}

// -------------------------------------------------------------------

// MsgPVPChoiceWeaponS2C

// optional .MsgPB.EMsgType msgType = 1 [default = _MSG_PVP_CHOICE_WEAPON_S2C];
inline bool MsgPVPChoiceWeaponS2C::has_msgtype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgPVPChoiceWeaponS2C::set_has_msgtype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgPVPChoiceWeaponS2C::clear_has_msgtype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgPVPChoiceWeaponS2C::clear_msgtype() {
  msgtype_ = 2525;
  clear_has_msgtype();
}
inline ::MsgPB::EMsgType MsgPVPChoiceWeaponS2C::msgtype() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgPVPChoiceWeaponS2C.msgType)
  return static_cast< ::MsgPB::EMsgType >(msgtype_);
}
inline void MsgPVPChoiceWeaponS2C::set_msgtype(::MsgPB::EMsgType value) {
  assert(::MsgPB::EMsgType_IsValid(value));
  set_has_msgtype();
  msgtype_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgPVPChoiceWeaponS2C.msgType)
}

// optional int64 iggid = 2;
inline bool MsgPVPChoiceWeaponS2C::has_iggid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MsgPVPChoiceWeaponS2C::set_has_iggid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MsgPVPChoiceWeaponS2C::clear_has_iggid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MsgPVPChoiceWeaponS2C::clear_iggid() {
  iggid_ = GOOGLE_LONGLONG(0);
  clear_has_iggid();
}
inline ::google::protobuf::int64 MsgPVPChoiceWeaponS2C::iggid() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgPVPChoiceWeaponS2C.iggid)
  return iggid_;
}
inline void MsgPVPChoiceWeaponS2C::set_iggid(::google::protobuf::int64 value) {
  set_has_iggid();
  iggid_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgPVPChoiceWeaponS2C.iggid)
}

// optional int32 index = 3;
inline bool MsgPVPChoiceWeaponS2C::has_index() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MsgPVPChoiceWeaponS2C::set_has_index() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MsgPVPChoiceWeaponS2C::clear_has_index() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MsgPVPChoiceWeaponS2C::clear_index() {
  index_ = 0;
  clear_has_index();
}
inline ::google::protobuf::int32 MsgPVPChoiceWeaponS2C::index() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgPVPChoiceWeaponS2C.index)
  return index_;
}
inline void MsgPVPChoiceWeaponS2C::set_index(::google::protobuf::int32 value) {
  set_has_index();
  index_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgPVPChoiceWeaponS2C.index)
}

// optional .MsgPB.PVP_WEAPON_RESULT res = 4;
inline bool MsgPVPChoiceWeaponS2C::has_res() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MsgPVPChoiceWeaponS2C::set_has_res() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MsgPVPChoiceWeaponS2C::clear_has_res() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MsgPVPChoiceWeaponS2C::clear_res() {
  res_ = 0;
  clear_has_res();
}
inline ::MsgPB::PVP_WEAPON_RESULT MsgPVPChoiceWeaponS2C::res() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgPVPChoiceWeaponS2C.res)
  return static_cast< ::MsgPB::PVP_WEAPON_RESULT >(res_);
}
inline void MsgPVPChoiceWeaponS2C::set_res(::MsgPB::PVP_WEAPON_RESULT value) {
  assert(::MsgPB::PVP_WEAPON_RESULT_IsValid(value));
  set_has_res();
  res_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgPVPChoiceWeaponS2C.res)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace MsgPB

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::MsgPB::ENUM_PVP_MATCH_RESULT> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::MsgPB::ENUM_PVP_MATCH_RESULT>() {
  return ::MsgPB::ENUM_PVP_MATCH_RESULT_descriptor();
}
template <> struct is_proto_enum< ::MsgPB::ENUM_CREATE_PVP_MAP_RESULT> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::MsgPB::ENUM_CREATE_PVP_MAP_RESULT>() {
  return ::MsgPB::ENUM_CREATE_PVP_MAP_RESULT_descriptor();
}
template <> struct is_proto_enum< ::MsgPB::MSG_RANK_RESULT> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::MsgPB::MSG_RANK_RESULT>() {
  return ::MsgPB::MSG_RANK_RESULT_descriptor();
}
template <> struct is_proto_enum< ::MsgPB::PVP_WEAPON_RESULT> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::MsgPB::PVP_WEAPON_RESULT>() {
  return ::MsgPB::PVP_WEAPON_RESULT_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_MsgPVP_2eproto__INCLUDED
