// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MsgPlant.proto

#ifndef PROTOBUF_MsgPlant_2eproto__INCLUDED
#define PROTOBUF_MsgPlant_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "MsgType.pb.h"
#include "MsgPacketDrop.pb.h"
// @@protoc_insertion_point(includes)

namespace MsgPB {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_MsgPlant_2eproto();
void protobuf_AssignDesc_MsgPlant_2eproto();
void protobuf_ShutdownFile_MsgPlant_2eproto();

class PlantDropInfo;
class MsgPlantCfg;
class MsgPlantSetReq;
class MsgPlantSet;
class MsgPlantCutReq;
class MsgPlantCut;
class MsgPlantInfo;
class MsgPlantInfo_PlantInfo;
class MsgPlantGrowSpeedUp_C2S;
class MsgPlantGrowSpeedUp_S2C;
class UserPlantInfo;
class MsgPlantUserInitData_S2C;
class MsgPlantNpcManger_C2S;
class MsgPlantNpcManger_S2C;
class MsgPlantReportRareSet_C2S;
class MsgPlantReportRareCut_C2S;

enum MsgPlantNpcManger_S2C_PLANT_MAN_RESULT {
  MsgPlantNpcManger_S2C_PLANT_MAN_RESULT_ERR = 0,
  MsgPlantNpcManger_S2C_PLANT_MAN_RESULT_SUCC = 1
};
bool MsgPlantNpcManger_S2C_PLANT_MAN_RESULT_IsValid(int value);
const MsgPlantNpcManger_S2C_PLANT_MAN_RESULT MsgPlantNpcManger_S2C_PLANT_MAN_RESULT_PLANT_MAN_RESULT_MIN = MsgPlantNpcManger_S2C_PLANT_MAN_RESULT_ERR;
const MsgPlantNpcManger_S2C_PLANT_MAN_RESULT MsgPlantNpcManger_S2C_PLANT_MAN_RESULT_PLANT_MAN_RESULT_MAX = MsgPlantNpcManger_S2C_PLANT_MAN_RESULT_SUCC;
const int MsgPlantNpcManger_S2C_PLANT_MAN_RESULT_PLANT_MAN_RESULT_ARRAYSIZE = MsgPlantNpcManger_S2C_PLANT_MAN_RESULT_PLANT_MAN_RESULT_MAX + 1;

const ::google::protobuf::EnumDescriptor* MsgPlantNpcManger_S2C_PLANT_MAN_RESULT_descriptor();
inline const ::std::string& MsgPlantNpcManger_S2C_PLANT_MAN_RESULT_Name(MsgPlantNpcManger_S2C_PLANT_MAN_RESULT value) {
  return ::google::protobuf::internal::NameOfEnum(
    MsgPlantNpcManger_S2C_PLANT_MAN_RESULT_descriptor(), value);
}
inline bool MsgPlantNpcManger_S2C_PLANT_MAN_RESULT_Parse(
    const ::std::string& name, MsgPlantNpcManger_S2C_PLANT_MAN_RESULT* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MsgPlantNpcManger_S2C_PLANT_MAN_RESULT>(
    MsgPlantNpcManger_S2C_PLANT_MAN_RESULT_descriptor(), name, value);
}
enum PLANT_RESULT {
  PLANT_RESULT_OK = 0,
  PLANT_RESULT_ERROR = 1,
  PLANT_RESULT_ERR_SEED = 2,
  PLANT_RESULT_ERR_DROP_TYPE = 3,
  PLANT_REULST_ERR_TOO_MUCH_RATE = 4,
  PLANT_REULST_ERR_TOO_MUCH_COUNT = 5,
  PLANT_REULST_ERR_TOO_MUCH_SINGLE_COUNT = 6,
  PLANT_RESULT_ERR_PLANT_ID = 7,
  PLANT_RESULT_ERR_STAGE = 8,
  PLANT_RESULT_NO_PLANT = 9,
  PLANT_RESULT_ERR_DIG_TOOL = 10,
  PLANT_RESULT_WRONG_TYPE = 11,
  PLANT_RESULT_USER_CANCEL = 12,
  PLANT_RESULT_ERR_OPERATE = 13,
  PLANT_RESULT_ERR_NO_SEED = 14,
  PLANT_RESULT_ERR_CFG_ERR_PLANT_ID = 15,
  PLANT_RESULT_ERR_CFG_ERR_PLANT_STAGE = 16,
  PLANT_RESULT_ERR_BADGE = 17
};
bool PLANT_RESULT_IsValid(int value);
const PLANT_RESULT PLANT_RESULT_MIN = PLANT_RESULT_OK;
const PLANT_RESULT PLANT_RESULT_MAX = PLANT_RESULT_ERR_BADGE;
const int PLANT_RESULT_ARRAYSIZE = PLANT_RESULT_MAX + 1;

const ::google::protobuf::EnumDescriptor* PLANT_RESULT_descriptor();
inline const ::std::string& PLANT_RESULT_Name(PLANT_RESULT value) {
  return ::google::protobuf::internal::NameOfEnum(
    PLANT_RESULT_descriptor(), value);
}
inline bool PLANT_RESULT_Parse(
    const ::std::string& name, PLANT_RESULT* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PLANT_RESULT>(
    PLANT_RESULT_descriptor(), name, value);
}
enum PLANT_OPERATE_TYPE {
  PLANT_OPERATE_TYPE_CUT = 1,
  PLANT_OPERATE_TYPE_GATHER = 2
};
bool PLANT_OPERATE_TYPE_IsValid(int value);
const PLANT_OPERATE_TYPE PLANT_OPERATE_TYPE_MIN = PLANT_OPERATE_TYPE_CUT;
const PLANT_OPERATE_TYPE PLANT_OPERATE_TYPE_MAX = PLANT_OPERATE_TYPE_GATHER;
const int PLANT_OPERATE_TYPE_ARRAYSIZE = PLANT_OPERATE_TYPE_MAX + 1;

const ::google::protobuf::EnumDescriptor* PLANT_OPERATE_TYPE_descriptor();
inline const ::std::string& PLANT_OPERATE_TYPE_Name(PLANT_OPERATE_TYPE value) {
  return ::google::protobuf::internal::NameOfEnum(
    PLANT_OPERATE_TYPE_descriptor(), value);
}
inline bool PLANT_OPERATE_TYPE_Parse(
    const ::std::string& name, PLANT_OPERATE_TYPE* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PLANT_OPERATE_TYPE>(
    PLANT_OPERATE_TYPE_descriptor(), name, value);
}
enum PLANT_INFO_TYPE {
  PLANT_INFO_TYPE_NATURE = 0,
  PLANT_INFO_TYPE_USER = 1
};
bool PLANT_INFO_TYPE_IsValid(int value);
const PLANT_INFO_TYPE PLANT_INFO_TYPE_MIN = PLANT_INFO_TYPE_NATURE;
const PLANT_INFO_TYPE PLANT_INFO_TYPE_MAX = PLANT_INFO_TYPE_USER;
const int PLANT_INFO_TYPE_ARRAYSIZE = PLANT_INFO_TYPE_MAX + 1;

const ::google::protobuf::EnumDescriptor* PLANT_INFO_TYPE_descriptor();
inline const ::std::string& PLANT_INFO_TYPE_Name(PLANT_INFO_TYPE value) {
  return ::google::protobuf::internal::NameOfEnum(
    PLANT_INFO_TYPE_descriptor(), value);
}
inline bool PLANT_INFO_TYPE_Parse(
    const ::std::string& name, PLANT_INFO_TYPE* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PLANT_INFO_TYPE>(
    PLANT_INFO_TYPE_descriptor(), name, value);
}
// ===================================================================

class PlantDropInfo : public ::google::protobuf::Message {
 public:
  PlantDropInfo();
  virtual ~PlantDropInfo();

  PlantDropInfo(const PlantDropInfo& from);

  inline PlantDropInfo& operator=(const PlantDropInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PlantDropInfo& default_instance();

  void Swap(PlantDropInfo* other);

  // implements Message ----------------------------------------------

  PlantDropInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PlantDropInfo& from);
  void MergeFrom(const PlantDropInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 item_type = 1;
  inline bool has_item_type() const;
  inline void clear_item_type();
  static const int kItemTypeFieldNumber = 1;
  inline ::google::protobuf::int32 item_type() const;
  inline void set_item_type(::google::protobuf::int32 value);

  // optional int32 item_count = 3;
  inline bool has_item_count() const;
  inline void clear_item_count();
  static const int kItemCountFieldNumber = 3;
  inline ::google::protobuf::int32 item_count() const;
  inline void set_item_count(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:MsgPB.PlantDropInfo)
 private:
  inline void set_has_item_type();
  inline void clear_has_item_type();
  inline void set_has_item_count();
  inline void clear_has_item_count();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 item_type_;
  ::google::protobuf::int32 item_count_;
  friend void  protobuf_AddDesc_MsgPlant_2eproto();
  friend void protobuf_AssignDesc_MsgPlant_2eproto();
  friend void protobuf_ShutdownFile_MsgPlant_2eproto();

  void InitAsDefaultInstance();
  static PlantDropInfo* default_instance_;
};
// -------------------------------------------------------------------

class MsgPlantCfg : public ::google::protobuf::Message {
 public:
  MsgPlantCfg();
  virtual ~MsgPlantCfg();

  MsgPlantCfg(const MsgPlantCfg& from);

  inline MsgPlantCfg& operator=(const MsgPlantCfg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgPlantCfg& default_instance();

  void Swap(MsgPlantCfg* other);

  // implements Message ----------------------------------------------

  MsgPlantCfg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgPlantCfg& from);
  void MergeFrom(const MsgPlantCfg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 type_id = 1;
  inline bool has_type_id() const;
  inline void clear_type_id();
  static const int kTypeIdFieldNumber = 1;
  inline ::google::protobuf::int32 type_id() const;
  inline void set_type_id(::google::protobuf::int32 value);

  // optional int32 count = 2;
  inline bool has_count() const;
  inline void clear_count();
  static const int kCountFieldNumber = 2;
  inline ::google::protobuf::int32 count() const;
  inline void set_count(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:MsgPB.MsgPlantCfg)
 private:
  inline void set_has_type_id();
  inline void clear_has_type_id();
  inline void set_has_count();
  inline void clear_has_count();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 type_id_;
  ::google::protobuf::int32 count_;
  friend void  protobuf_AddDesc_MsgPlant_2eproto();
  friend void protobuf_AssignDesc_MsgPlant_2eproto();
  friend void protobuf_ShutdownFile_MsgPlant_2eproto();

  void InitAsDefaultInstance();
  static MsgPlantCfg* default_instance_;
};
// -------------------------------------------------------------------

class MsgPlantSetReq : public ::google::protobuf::Message {
 public:
  MsgPlantSetReq();
  virtual ~MsgPlantSetReq();

  MsgPlantSetReq(const MsgPlantSetReq& from);

  inline MsgPlantSetReq& operator=(const MsgPlantSetReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgPlantSetReq& default_instance();

  void Swap(MsgPlantSetReq* other);

  // implements Message ----------------------------------------------

  MsgPlantSetReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgPlantSetReq& from);
  void MergeFrom(const MsgPlantSetReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_PLANT_SET_REQ];
  inline bool has_msgtype() const;
  inline void clear_msgtype();
  static const int kMsgTypeFieldNumber = 1;
  inline ::MsgPB::EMsgType msgtype() const;
  inline void set_msgtype(::MsgPB::EMsgType value);

  // optional int64 iggid = 2;
  inline bool has_iggid() const;
  inline void clear_iggid();
  static const int kIggidFieldNumber = 2;
  inline ::google::protobuf::int64 iggid() const;
  inline void set_iggid(::google::protobuf::int64 value);

  // optional int32 pos_x = 3;
  inline bool has_pos_x() const;
  inline void clear_pos_x();
  static const int kPosXFieldNumber = 3;
  inline ::google::protobuf::int32 pos_x() const;
  inline void set_pos_x(::google::protobuf::int32 value);

  // optional int32 pos_y = 4;
  inline bool has_pos_y() const;
  inline void clear_pos_y();
  static const int kPosYFieldNumber = 4;
  inline ::google::protobuf::int32 pos_y() const;
  inline void set_pos_y(::google::protobuf::int32 value);

  // optional int32 plant_seed_type = 5;
  inline bool has_plant_seed_type() const;
  inline void clear_plant_seed_type();
  static const int kPlantSeedTypeFieldNumber = 5;
  inline ::google::protobuf::int32 plant_seed_type() const;
  inline void set_plant_seed_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:MsgPB.MsgPlantSetReq)
 private:
  inline void set_has_msgtype();
  inline void clear_has_msgtype();
  inline void set_has_iggid();
  inline void clear_has_iggid();
  inline void set_has_pos_x();
  inline void clear_has_pos_x();
  inline void set_has_pos_y();
  inline void clear_has_pos_y();
  inline void set_has_plant_seed_type();
  inline void clear_has_plant_seed_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 iggid_;
  int msgtype_;
  ::google::protobuf::int32 pos_x_;
  ::google::protobuf::int32 pos_y_;
  ::google::protobuf::int32 plant_seed_type_;
  friend void  protobuf_AddDesc_MsgPlant_2eproto();
  friend void protobuf_AssignDesc_MsgPlant_2eproto();
  friend void protobuf_ShutdownFile_MsgPlant_2eproto();

  void InitAsDefaultInstance();
  static MsgPlantSetReq* default_instance_;
};
// -------------------------------------------------------------------

class MsgPlantSet : public ::google::protobuf::Message {
 public:
  MsgPlantSet();
  virtual ~MsgPlantSet();

  MsgPlantSet(const MsgPlantSet& from);

  inline MsgPlantSet& operator=(const MsgPlantSet& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgPlantSet& default_instance();

  void Swap(MsgPlantSet* other);

  // implements Message ----------------------------------------------

  MsgPlantSet* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgPlantSet& from);
  void MergeFrom(const MsgPlantSet& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_PLANT_SET];
  inline bool has_msgtype() const;
  inline void clear_msgtype();
  static const int kMsgTypeFieldNumber = 1;
  inline ::MsgPB::EMsgType msgtype() const;
  inline void set_msgtype(::MsgPB::EMsgType value);

  // optional int64 iggid = 2;
  inline bool has_iggid() const;
  inline void clear_iggid();
  static const int kIggidFieldNumber = 2;
  inline ::google::protobuf::int64 iggid() const;
  inline void set_iggid(::google::protobuf::int64 value);

  // optional .MsgPB.PLANT_RESULT res = 3;
  inline bool has_res() const;
  inline void clear_res();
  static const int kResFieldNumber = 3;
  inline ::MsgPB::PLANT_RESULT res() const;
  inline void set_res(::MsgPB::PLANT_RESULT value);

  // optional int32 pos_x = 5;
  inline bool has_pos_x() const;
  inline void clear_pos_x();
  static const int kPosXFieldNumber = 5;
  inline ::google::protobuf::int32 pos_x() const;
  inline void set_pos_x(::google::protobuf::int32 value);

  // optional int32 pos_y = 6;
  inline bool has_pos_y() const;
  inline void clear_pos_y();
  static const int kPosYFieldNumber = 6;
  inline ::google::protobuf::int32 pos_y() const;
  inline void set_pos_y(::google::protobuf::int32 value);

  // optional int32 templateid = 7;
  inline bool has_templateid() const;
  inline void clear_templateid();
  static const int kTemplateidFieldNumber = 7;
  inline ::google::protobuf::int32 templateid() const;
  inline void set_templateid(::google::protobuf::int32 value);

  // optional int64 plant_id = 8;
  inline bool has_plant_id() const;
  inline void clear_plant_id();
  static const int kPlantIdFieldNumber = 8;
  inline ::google::protobuf::int64 plant_id() const;
  inline void set_plant_id(::google::protobuf::int64 value);

  // optional int64 grow_begin = 9;
  inline bool has_grow_begin() const;
  inline void clear_grow_begin();
  static const int kGrowBeginFieldNumber = 9;
  inline ::google::protobuf::int64 grow_begin() const;
  inline void set_grow_begin(::google::protobuf::int64 value);

  // optional int32 grow_time = 10;
  inline bool has_grow_time() const;
  inline void clear_grow_time();
  static const int kGrowTimeFieldNumber = 10;
  inline ::google::protobuf::int32 grow_time() const;
  inline void set_grow_time(::google::protobuf::int32 value);

  // optional int32 grow_stage = 11;
  inline bool has_grow_stage() const;
  inline void clear_grow_stage();
  static const int kGrowStageFieldNumber = 11;
  inline ::google::protobuf::int32 grow_stage() const;
  inline void set_grow_stage(::google::protobuf::int32 value);

  // optional int64 protectorId = 12;
  inline bool has_protectorid() const;
  inline void clear_protectorid();
  static const int kProtectorIdFieldNumber = 12;
  inline ::google::protobuf::int64 protectorid() const;
  inline void set_protectorid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:MsgPB.MsgPlantSet)
 private:
  inline void set_has_msgtype();
  inline void clear_has_msgtype();
  inline void set_has_iggid();
  inline void clear_has_iggid();
  inline void set_has_res();
  inline void clear_has_res();
  inline void set_has_pos_x();
  inline void clear_has_pos_x();
  inline void set_has_pos_y();
  inline void clear_has_pos_y();
  inline void set_has_templateid();
  inline void clear_has_templateid();
  inline void set_has_plant_id();
  inline void clear_has_plant_id();
  inline void set_has_grow_begin();
  inline void clear_has_grow_begin();
  inline void set_has_grow_time();
  inline void clear_has_grow_time();
  inline void set_has_grow_stage();
  inline void clear_has_grow_stage();
  inline void set_has_protectorid();
  inline void clear_has_protectorid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 iggid_;
  int msgtype_;
  int res_;
  ::google::protobuf::int32 pos_x_;
  ::google::protobuf::int32 pos_y_;
  ::google::protobuf::int64 plant_id_;
  ::google::protobuf::int32 templateid_;
  ::google::protobuf::int32 grow_time_;
  ::google::protobuf::int64 grow_begin_;
  ::google::protobuf::int64 protectorid_;
  ::google::protobuf::int32 grow_stage_;
  friend void  protobuf_AddDesc_MsgPlant_2eproto();
  friend void protobuf_AssignDesc_MsgPlant_2eproto();
  friend void protobuf_ShutdownFile_MsgPlant_2eproto();

  void InitAsDefaultInstance();
  static MsgPlantSet* default_instance_;
};
// -------------------------------------------------------------------

class MsgPlantCutReq : public ::google::protobuf::Message {
 public:
  MsgPlantCutReq();
  virtual ~MsgPlantCutReq();

  MsgPlantCutReq(const MsgPlantCutReq& from);

  inline MsgPlantCutReq& operator=(const MsgPlantCutReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgPlantCutReq& default_instance();

  void Swap(MsgPlantCutReq* other);

  // implements Message ----------------------------------------------

  MsgPlantCutReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgPlantCutReq& from);
  void MergeFrom(const MsgPlantCutReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_PLANT_CUT_REQ];
  inline bool has_msgtype() const;
  inline void clear_msgtype();
  static const int kMsgTypeFieldNumber = 1;
  inline ::MsgPB::EMsgType msgtype() const;
  inline void set_msgtype(::MsgPB::EMsgType value);

  // optional int64 iggid = 2;
  inline bool has_iggid() const;
  inline void clear_iggid();
  static const int kIggidFieldNumber = 2;
  inline ::google::protobuf::int64 iggid() const;
  inline void set_iggid(::google::protobuf::int64 value);

  // optional int32 pos_x = 3;
  inline bool has_pos_x() const;
  inline void clear_pos_x();
  static const int kPosXFieldNumber = 3;
  inline ::google::protobuf::int32 pos_x() const;
  inline void set_pos_x(::google::protobuf::int32 value);

  // optional int32 pos_y = 4;
  inline bool has_pos_y() const;
  inline void clear_pos_y();
  static const int kPosYFieldNumber = 4;
  inline ::google::protobuf::int32 pos_y() const;
  inline void set_pos_y(::google::protobuf::int32 value);

  // optional int64 tool_uuid = 5;
  inline bool has_tool_uuid() const;
  inline void clear_tool_uuid();
  static const int kToolUuidFieldNumber = 5;
  inline ::google::protobuf::int64 tool_uuid() const;
  inline void set_tool_uuid(::google::protobuf::int64 value);

  // optional int32 dig_pos_x = 6;
  inline bool has_dig_pos_x() const;
  inline void clear_dig_pos_x();
  static const int kDigPosXFieldNumber = 6;
  inline ::google::protobuf::int32 dig_pos_x() const;
  inline void set_dig_pos_x(::google::protobuf::int32 value);

  // optional int32 dig_pos_y = 7;
  inline bool has_dig_pos_y() const;
  inline void clear_dig_pos_y();
  static const int kDigPosYFieldNumber = 7;
  inline ::google::protobuf::int32 dig_pos_y() const;
  inline void set_dig_pos_y(::google::protobuf::int32 value);

  // optional int64 dig_id = 8;
  inline bool has_dig_id() const;
  inline void clear_dig_id();
  static const int kDigIdFieldNumber = 8;
  inline ::google::protobuf::int64 dig_id() const;
  inline void set_dig_id(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:MsgPB.MsgPlantCutReq)
 private:
  inline void set_has_msgtype();
  inline void clear_has_msgtype();
  inline void set_has_iggid();
  inline void clear_has_iggid();
  inline void set_has_pos_x();
  inline void clear_has_pos_x();
  inline void set_has_pos_y();
  inline void clear_has_pos_y();
  inline void set_has_tool_uuid();
  inline void clear_has_tool_uuid();
  inline void set_has_dig_pos_x();
  inline void clear_has_dig_pos_x();
  inline void set_has_dig_pos_y();
  inline void clear_has_dig_pos_y();
  inline void set_has_dig_id();
  inline void clear_has_dig_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 iggid_;
  int msgtype_;
  ::google::protobuf::int32 pos_x_;
  ::google::protobuf::int64 tool_uuid_;
  ::google::protobuf::int32 pos_y_;
  ::google::protobuf::int32 dig_pos_x_;
  ::google::protobuf::int64 dig_id_;
  ::google::protobuf::int32 dig_pos_y_;
  friend void  protobuf_AddDesc_MsgPlant_2eproto();
  friend void protobuf_AssignDesc_MsgPlant_2eproto();
  friend void protobuf_ShutdownFile_MsgPlant_2eproto();

  void InitAsDefaultInstance();
  static MsgPlantCutReq* default_instance_;
};
// -------------------------------------------------------------------

class MsgPlantCut : public ::google::protobuf::Message {
 public:
  MsgPlantCut();
  virtual ~MsgPlantCut();

  MsgPlantCut(const MsgPlantCut& from);

  inline MsgPlantCut& operator=(const MsgPlantCut& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgPlantCut& default_instance();

  void Swap(MsgPlantCut* other);

  // implements Message ----------------------------------------------

  MsgPlantCut* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgPlantCut& from);
  void MergeFrom(const MsgPlantCut& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_PLANT_CUT];
  inline bool has_msgtype() const;
  inline void clear_msgtype();
  static const int kMsgTypeFieldNumber = 1;
  inline ::MsgPB::EMsgType msgtype() const;
  inline void set_msgtype(::MsgPB::EMsgType value);

  // optional int64 iggid = 2;
  inline bool has_iggid() const;
  inline void clear_iggid();
  static const int kIggidFieldNumber = 2;
  inline ::google::protobuf::int64 iggid() const;
  inline void set_iggid(::google::protobuf::int64 value);

  // optional .MsgPB.PLANT_RESULT res = 3;
  inline bool has_res() const;
  inline void clear_res();
  static const int kResFieldNumber = 3;
  inline ::MsgPB::PLANT_RESULT res() const;
  inline void set_res(::MsgPB::PLANT_RESULT value);

  // optional int32 pos_x = 4;
  inline bool has_pos_x() const;
  inline void clear_pos_x();
  static const int kPosXFieldNumber = 4;
  inline ::google::protobuf::int32 pos_x() const;
  inline void set_pos_x(::google::protobuf::int32 value);

  // optional int32 pos_y = 5;
  inline bool has_pos_y() const;
  inline void clear_pos_y();
  static const int kPosYFieldNumber = 5;
  inline ::google::protobuf::int32 pos_y() const;
  inline void set_pos_y(::google::protobuf::int32 value);

  // optional int32 max_hp = 7;
  inline bool has_max_hp() const;
  inline void clear_max_hp();
  static const int kMaxHpFieldNumber = 7;
  inline ::google::protobuf::int32 max_hp() const;
  inline void set_max_hp(::google::protobuf::int32 value);

  // optional int32 curr_hp = 8;
  inline bool has_curr_hp() const;
  inline void clear_curr_hp();
  static const int kCurrHpFieldNumber = 8;
  inline ::google::protobuf::int32 curr_hp() const;
  inline void set_curr_hp(::google::protobuf::int32 value);

  // optional int32 reduce_hp = 9;
  inline bool has_reduce_hp() const;
  inline void clear_reduce_hp();
  static const int kReduceHpFieldNumber = 9;
  inline ::google::protobuf::int32 reduce_hp() const;
  inline void set_reduce_hp(::google::protobuf::int32 value);

  // optional int32 dig_pos_x = 10;
  inline bool has_dig_pos_x() const;
  inline void clear_dig_pos_x();
  static const int kDigPosXFieldNumber = 10;
  inline ::google::protobuf::int32 dig_pos_x() const;
  inline void set_dig_pos_x(::google::protobuf::int32 value);

  // optional int32 dig_pos_y = 11;
  inline bool has_dig_pos_y() const;
  inline void clear_dig_pos_y();
  static const int kDigPosYFieldNumber = 11;
  inline ::google::protobuf::int32 dig_pos_y() const;
  inline void set_dig_pos_y(::google::protobuf::int32 value);

  // optional int64 dig_id = 12;
  inline bool has_dig_id() const;
  inline void clear_dig_id();
  static const int kDigIdFieldNumber = 12;
  inline ::google::protobuf::int64 dig_id() const;
  inline void set_dig_id(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:MsgPB.MsgPlantCut)
 private:
  inline void set_has_msgtype();
  inline void clear_has_msgtype();
  inline void set_has_iggid();
  inline void clear_has_iggid();
  inline void set_has_res();
  inline void clear_has_res();
  inline void set_has_pos_x();
  inline void clear_has_pos_x();
  inline void set_has_pos_y();
  inline void clear_has_pos_y();
  inline void set_has_max_hp();
  inline void clear_has_max_hp();
  inline void set_has_curr_hp();
  inline void clear_has_curr_hp();
  inline void set_has_reduce_hp();
  inline void clear_has_reduce_hp();
  inline void set_has_dig_pos_x();
  inline void clear_has_dig_pos_x();
  inline void set_has_dig_pos_y();
  inline void clear_has_dig_pos_y();
  inline void set_has_dig_id();
  inline void clear_has_dig_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 iggid_;
  int msgtype_;
  int res_;
  ::google::protobuf::int32 pos_x_;
  ::google::protobuf::int32 pos_y_;
  ::google::protobuf::int32 max_hp_;
  ::google::protobuf::int32 curr_hp_;
  ::google::protobuf::int32 reduce_hp_;
  ::google::protobuf::int32 dig_pos_x_;
  ::google::protobuf::int64 dig_id_;
  ::google::protobuf::int32 dig_pos_y_;
  friend void  protobuf_AddDesc_MsgPlant_2eproto();
  friend void protobuf_AssignDesc_MsgPlant_2eproto();
  friend void protobuf_ShutdownFile_MsgPlant_2eproto();

  void InitAsDefaultInstance();
  static MsgPlantCut* default_instance_;
};
// -------------------------------------------------------------------

class MsgPlantInfo_PlantInfo : public ::google::protobuf::Message {
 public:
  MsgPlantInfo_PlantInfo();
  virtual ~MsgPlantInfo_PlantInfo();

  MsgPlantInfo_PlantInfo(const MsgPlantInfo_PlantInfo& from);

  inline MsgPlantInfo_PlantInfo& operator=(const MsgPlantInfo_PlantInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgPlantInfo_PlantInfo& default_instance();

  void Swap(MsgPlantInfo_PlantInfo* other);

  // implements Message ----------------------------------------------

  MsgPlantInfo_PlantInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgPlantInfo_PlantInfo& from);
  void MergeFrom(const MsgPlantInfo_PlantInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 plant_type = 1;
  inline bool has_plant_type() const;
  inline void clear_plant_type();
  static const int kPlantTypeFieldNumber = 1;
  inline ::google::protobuf::int32 plant_type() const;
  inline void set_plant_type(::google::protobuf::int32 value);

  // optional int32 pos_x = 2;
  inline bool has_pos_x() const;
  inline void clear_pos_x();
  static const int kPosXFieldNumber = 2;
  inline ::google::protobuf::int32 pos_x() const;
  inline void set_pos_x(::google::protobuf::int32 value);

  // optional int32 pos_y = 3;
  inline bool has_pos_y() const;
  inline void clear_pos_y();
  static const int kPosYFieldNumber = 3;
  inline ::google::protobuf::int32 pos_y() const;
  inline void set_pos_y(::google::protobuf::int32 value);

  // optional int32 grow_stage = 4;
  inline bool has_grow_stage() const;
  inline void clear_grow_stage();
  static const int kGrowStageFieldNumber = 4;
  inline ::google::protobuf::int32 grow_stage() const;
  inline void set_grow_stage(::google::protobuf::int32 value);

  // optional int32 templateid = 5;
  inline bool has_templateid() const;
  inline void clear_templateid();
  static const int kTemplateidFieldNumber = 5;
  inline ::google::protobuf::int32 templateid() const;
  inline void set_templateid(::google::protobuf::int32 value);

  // optional int64 plant_id = 6;
  inline bool has_plant_id() const;
  inline void clear_plant_id();
  static const int kPlantIdFieldNumber = 6;
  inline ::google::protobuf::int64 plant_id() const;
  inline void set_plant_id(::google::protobuf::int64 value);

  // optional int64 grow_begin = 7;
  inline bool has_grow_begin() const;
  inline void clear_grow_begin();
  static const int kGrowBeginFieldNumber = 7;
  inline ::google::protobuf::int64 grow_begin() const;
  inline void set_grow_begin(::google::protobuf::int64 value);

  // optional int32 grow_time = 8;
  inline bool has_grow_time() const;
  inline void clear_grow_time();
  static const int kGrowTimeFieldNumber = 8;
  inline ::google::protobuf::int32 grow_time() const;
  inline void set_grow_time(::google::protobuf::int32 value);

  // optional int64 protectorId = 9;
  inline bool has_protectorid() const;
  inline void clear_protectorid();
  static const int kProtectorIdFieldNumber = 9;
  inline ::google::protobuf::int64 protectorid() const;
  inline void set_protectorid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:MsgPB.MsgPlantInfo.PlantInfo)
 private:
  inline void set_has_plant_type();
  inline void clear_has_plant_type();
  inline void set_has_pos_x();
  inline void clear_has_pos_x();
  inline void set_has_pos_y();
  inline void clear_has_pos_y();
  inline void set_has_grow_stage();
  inline void clear_has_grow_stage();
  inline void set_has_templateid();
  inline void clear_has_templateid();
  inline void set_has_plant_id();
  inline void clear_has_plant_id();
  inline void set_has_grow_begin();
  inline void clear_has_grow_begin();
  inline void set_has_grow_time();
  inline void clear_has_grow_time();
  inline void set_has_protectorid();
  inline void clear_has_protectorid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 plant_type_;
  ::google::protobuf::int32 pos_x_;
  ::google::protobuf::int32 pos_y_;
  ::google::protobuf::int32 grow_stage_;
  ::google::protobuf::int64 plant_id_;
  ::google::protobuf::int32 templateid_;
  ::google::protobuf::int32 grow_time_;
  ::google::protobuf::int64 grow_begin_;
  ::google::protobuf::int64 protectorid_;
  friend void  protobuf_AddDesc_MsgPlant_2eproto();
  friend void protobuf_AssignDesc_MsgPlant_2eproto();
  friend void protobuf_ShutdownFile_MsgPlant_2eproto();

  void InitAsDefaultInstance();
  static MsgPlantInfo_PlantInfo* default_instance_;
};
// -------------------------------------------------------------------

class MsgPlantInfo : public ::google::protobuf::Message {
 public:
  MsgPlantInfo();
  virtual ~MsgPlantInfo();

  MsgPlantInfo(const MsgPlantInfo& from);

  inline MsgPlantInfo& operator=(const MsgPlantInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgPlantInfo& default_instance();

  void Swap(MsgPlantInfo* other);

  // implements Message ----------------------------------------------

  MsgPlantInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgPlantInfo& from);
  void MergeFrom(const MsgPlantInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef MsgPlantInfo_PlantInfo PlantInfo;

  // accessors -------------------------------------------------------

  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_PLANT_INFO];
  inline bool has_msgtype() const;
  inline void clear_msgtype();
  static const int kMsgTypeFieldNumber = 1;
  inline ::MsgPB::EMsgType msgtype() const;
  inline void set_msgtype(::MsgPB::EMsgType value);

  // optional int64 iggid = 2;
  inline bool has_iggid() const;
  inline void clear_iggid();
  static const int kIggidFieldNumber = 2;
  inline ::google::protobuf::int64 iggid() const;
  inline void set_iggid(::google::protobuf::int64 value);

  // optional .MsgPB.PLANT_INFO_TYPE info_type = 3;
  inline bool has_info_type() const;
  inline void clear_info_type();
  static const int kInfoTypeFieldNumber = 3;
  inline ::MsgPB::PLANT_INFO_TYPE info_type() const;
  inline void set_info_type(::MsgPB::PLANT_INFO_TYPE value);

  // repeated .MsgPB.MsgPlantInfo.PlantInfo plant_info = 4;
  inline int plant_info_size() const;
  inline void clear_plant_info();
  static const int kPlantInfoFieldNumber = 4;
  inline const ::MsgPB::MsgPlantInfo_PlantInfo& plant_info(int index) const;
  inline ::MsgPB::MsgPlantInfo_PlantInfo* mutable_plant_info(int index);
  inline ::MsgPB::MsgPlantInfo_PlantInfo* add_plant_info();
  inline const ::google::protobuf::RepeatedPtrField< ::MsgPB::MsgPlantInfo_PlantInfo >&
      plant_info() const;
  inline ::google::protobuf::RepeatedPtrField< ::MsgPB::MsgPlantInfo_PlantInfo >*
      mutable_plant_info();

  // optional int32 mapid = 5;
  inline bool has_mapid() const;
  inline void clear_mapid();
  static const int kMapidFieldNumber = 5;
  inline ::google::protobuf::int32 mapid() const;
  inline void set_mapid(::google::protobuf::int32 value);

  // optional int32 binit = 6 [default = 0];
  inline bool has_binit() const;
  inline void clear_binit();
  static const int kBinitFieldNumber = 6;
  inline ::google::protobuf::int32 binit() const;
  inline void set_binit(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:MsgPB.MsgPlantInfo)
 private:
  inline void set_has_msgtype();
  inline void clear_has_msgtype();
  inline void set_has_iggid();
  inline void clear_has_iggid();
  inline void set_has_info_type();
  inline void clear_has_info_type();
  inline void set_has_mapid();
  inline void clear_has_mapid();
  inline void set_has_binit();
  inline void clear_has_binit();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 iggid_;
  int msgtype_;
  int info_type_;
  ::google::protobuf::RepeatedPtrField< ::MsgPB::MsgPlantInfo_PlantInfo > plant_info_;
  ::google::protobuf::int32 mapid_;
  ::google::protobuf::int32 binit_;
  friend void  protobuf_AddDesc_MsgPlant_2eproto();
  friend void protobuf_AssignDesc_MsgPlant_2eproto();
  friend void protobuf_ShutdownFile_MsgPlant_2eproto();

  void InitAsDefaultInstance();
  static MsgPlantInfo* default_instance_;
};
// -------------------------------------------------------------------

class MsgPlantGrowSpeedUp_C2S : public ::google::protobuf::Message {
 public:
  MsgPlantGrowSpeedUp_C2S();
  virtual ~MsgPlantGrowSpeedUp_C2S();

  MsgPlantGrowSpeedUp_C2S(const MsgPlantGrowSpeedUp_C2S& from);

  inline MsgPlantGrowSpeedUp_C2S& operator=(const MsgPlantGrowSpeedUp_C2S& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgPlantGrowSpeedUp_C2S& default_instance();

  void Swap(MsgPlantGrowSpeedUp_C2S* other);

  // implements Message ----------------------------------------------

  MsgPlantGrowSpeedUp_C2S* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgPlantGrowSpeedUp_C2S& from);
  void MergeFrom(const MsgPlantGrowSpeedUp_C2S& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_PLANT_GROW_SPEEDUP_C2S];
  inline bool has_msgtype() const;
  inline void clear_msgtype();
  static const int kMsgTypeFieldNumber = 1;
  inline ::MsgPB::EMsgType msgtype() const;
  inline void set_msgtype(::MsgPB::EMsgType value);

  // optional int32 pos_x = 2;
  inline bool has_pos_x() const;
  inline void clear_pos_x();
  static const int kPosXFieldNumber = 2;
  inline ::google::protobuf::int32 pos_x() const;
  inline void set_pos_x(::google::protobuf::int32 value);

  // optional int32 pos_y = 3;
  inline bool has_pos_y() const;
  inline void clear_pos_y();
  static const int kPosYFieldNumber = 3;
  inline ::google::protobuf::int32 pos_y() const;
  inline void set_pos_y(::google::protobuf::int32 value);

  // optional int32 badge_build_type = 4;
  inline bool has_badge_build_type() const;
  inline void clear_badge_build_type();
  static const int kBadgeBuildTypeFieldNumber = 4;
  inline ::google::protobuf::int32 badge_build_type() const;
  inline void set_badge_build_type(::google::protobuf::int32 value);

  // optional int32 badge_pos_x = 5;
  inline bool has_badge_pos_x() const;
  inline void clear_badge_pos_x();
  static const int kBadgePosXFieldNumber = 5;
  inline ::google::protobuf::int32 badge_pos_x() const;
  inline void set_badge_pos_x(::google::protobuf::int32 value);

  // optional int32 badge_pos_y = 6;
  inline bool has_badge_pos_y() const;
  inline void clear_badge_pos_y();
  static const int kBadgePosYFieldNumber = 6;
  inline ::google::protobuf::int32 badge_pos_y() const;
  inline void set_badge_pos_y(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:MsgPB.MsgPlantGrowSpeedUp_C2S)
 private:
  inline void set_has_msgtype();
  inline void clear_has_msgtype();
  inline void set_has_pos_x();
  inline void clear_has_pos_x();
  inline void set_has_pos_y();
  inline void clear_has_pos_y();
  inline void set_has_badge_build_type();
  inline void clear_has_badge_build_type();
  inline void set_has_badge_pos_x();
  inline void clear_has_badge_pos_x();
  inline void set_has_badge_pos_y();
  inline void clear_has_badge_pos_y();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int msgtype_;
  ::google::protobuf::int32 pos_x_;
  ::google::protobuf::int32 pos_y_;
  ::google::protobuf::int32 badge_build_type_;
  ::google::protobuf::int32 badge_pos_x_;
  ::google::protobuf::int32 badge_pos_y_;
  friend void  protobuf_AddDesc_MsgPlant_2eproto();
  friend void protobuf_AssignDesc_MsgPlant_2eproto();
  friend void protobuf_ShutdownFile_MsgPlant_2eproto();

  void InitAsDefaultInstance();
  static MsgPlantGrowSpeedUp_C2S* default_instance_;
};
// -------------------------------------------------------------------

class MsgPlantGrowSpeedUp_S2C : public ::google::protobuf::Message {
 public:
  MsgPlantGrowSpeedUp_S2C();
  virtual ~MsgPlantGrowSpeedUp_S2C();

  MsgPlantGrowSpeedUp_S2C(const MsgPlantGrowSpeedUp_S2C& from);

  inline MsgPlantGrowSpeedUp_S2C& operator=(const MsgPlantGrowSpeedUp_S2C& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgPlantGrowSpeedUp_S2C& default_instance();

  void Swap(MsgPlantGrowSpeedUp_S2C* other);

  // implements Message ----------------------------------------------

  MsgPlantGrowSpeedUp_S2C* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgPlantGrowSpeedUp_S2C& from);
  void MergeFrom(const MsgPlantGrowSpeedUp_S2C& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_PLANT_GROW_SPEEDUP_S2C];
  inline bool has_msgtype() const;
  inline void clear_msgtype();
  static const int kMsgTypeFieldNumber = 1;
  inline ::MsgPB::EMsgType msgtype() const;
  inline void set_msgtype(::MsgPB::EMsgType value);

  // optional int32 pos_x = 4;
  inline bool has_pos_x() const;
  inline void clear_pos_x();
  static const int kPosXFieldNumber = 4;
  inline ::google::protobuf::int32 pos_x() const;
  inline void set_pos_x(::google::protobuf::int32 value);

  // optional int32 pos_y = 5;
  inline bool has_pos_y() const;
  inline void clear_pos_y();
  static const int kPosYFieldNumber = 5;
  inline ::google::protobuf::int32 pos_y() const;
  inline void set_pos_y(::google::protobuf::int32 value);

  // optional .MsgPB.PLANT_RESULT res = 6;
  inline bool has_res() const;
  inline void clear_res();
  static const int kResFieldNumber = 6;
  inline ::MsgPB::PLANT_RESULT res() const;
  inline void set_res(::MsgPB::PLANT_RESULT value);

  // @@protoc_insertion_point(class_scope:MsgPB.MsgPlantGrowSpeedUp_S2C)
 private:
  inline void set_has_msgtype();
  inline void clear_has_msgtype();
  inline void set_has_pos_x();
  inline void clear_has_pos_x();
  inline void set_has_pos_y();
  inline void clear_has_pos_y();
  inline void set_has_res();
  inline void clear_has_res();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int msgtype_;
  ::google::protobuf::int32 pos_x_;
  ::google::protobuf::int32 pos_y_;
  int res_;
  friend void  protobuf_AddDesc_MsgPlant_2eproto();
  friend void protobuf_AssignDesc_MsgPlant_2eproto();
  friend void protobuf_ShutdownFile_MsgPlant_2eproto();

  void InitAsDefaultInstance();
  static MsgPlantGrowSpeedUp_S2C* default_instance_;
};
// -------------------------------------------------------------------

class UserPlantInfo : public ::google::protobuf::Message {
 public:
  UserPlantInfo();
  virtual ~UserPlantInfo();

  UserPlantInfo(const UserPlantInfo& from);

  inline UserPlantInfo& operator=(const UserPlantInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UserPlantInfo& default_instance();

  void Swap(UserPlantInfo* other);

  // implements Message ----------------------------------------------

  UserPlantInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UserPlantInfo& from);
  void MergeFrom(const UserPlantInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 plant_type = 1;
  inline bool has_plant_type() const;
  inline void clear_plant_type();
  static const int kPlantTypeFieldNumber = 1;
  inline ::google::protobuf::int32 plant_type() const;
  inline void set_plant_type(::google::protobuf::int32 value);

  // optional int32 pos_x = 2;
  inline bool has_pos_x() const;
  inline void clear_pos_x();
  static const int kPosXFieldNumber = 2;
  inline ::google::protobuf::int32 pos_x() const;
  inline void set_pos_x(::google::protobuf::int32 value);

  // optional int32 pos_y = 3;
  inline bool has_pos_y() const;
  inline void clear_pos_y();
  static const int kPosYFieldNumber = 3;
  inline ::google::protobuf::int32 pos_y() const;
  inline void set_pos_y(::google::protobuf::int32 value);

  // optional int32 grow_stage = 4;
  inline bool has_grow_stage() const;
  inline void clear_grow_stage();
  static const int kGrowStageFieldNumber = 4;
  inline ::google::protobuf::int32 grow_stage() const;
  inline void set_grow_stage(::google::protobuf::int32 value);

  // optional int64 plant_id = 6;
  inline bool has_plant_id() const;
  inline void clear_plant_id();
  static const int kPlantIdFieldNumber = 6;
  inline ::google::protobuf::int64 plant_id() const;
  inline void set_plant_id(::google::protobuf::int64 value);

  // optional int64 grow_begin = 7;
  inline bool has_grow_begin() const;
  inline void clear_grow_begin();
  static const int kGrowBeginFieldNumber = 7;
  inline ::google::protobuf::int64 grow_begin() const;
  inline void set_grow_begin(::google::protobuf::int64 value);

  // optional int32 grow_time = 8;
  inline bool has_grow_time() const;
  inline void clear_grow_time();
  static const int kGrowTimeFieldNumber = 8;
  inline ::google::protobuf::int32 grow_time() const;
  inline void set_grow_time(::google::protobuf::int32 value);

  // optional int64 protectorId = 9;
  inline bool has_protectorid() const;
  inline void clear_protectorid();
  static const int kProtectorIdFieldNumber = 9;
  inline ::google::protobuf::int64 protectorid() const;
  inline void set_protectorid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:MsgPB.UserPlantInfo)
 private:
  inline void set_has_plant_type();
  inline void clear_has_plant_type();
  inline void set_has_pos_x();
  inline void clear_has_pos_x();
  inline void set_has_pos_y();
  inline void clear_has_pos_y();
  inline void set_has_grow_stage();
  inline void clear_has_grow_stage();
  inline void set_has_plant_id();
  inline void clear_has_plant_id();
  inline void set_has_grow_begin();
  inline void clear_has_grow_begin();
  inline void set_has_grow_time();
  inline void clear_has_grow_time();
  inline void set_has_protectorid();
  inline void clear_has_protectorid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 plant_type_;
  ::google::protobuf::int32 pos_x_;
  ::google::protobuf::int32 pos_y_;
  ::google::protobuf::int32 grow_stage_;
  ::google::protobuf::int64 plant_id_;
  ::google::protobuf::int64 grow_begin_;
  ::google::protobuf::int64 protectorid_;
  ::google::protobuf::int32 grow_time_;
  friend void  protobuf_AddDesc_MsgPlant_2eproto();
  friend void protobuf_AssignDesc_MsgPlant_2eproto();
  friend void protobuf_ShutdownFile_MsgPlant_2eproto();

  void InitAsDefaultInstance();
  static UserPlantInfo* default_instance_;
};
// -------------------------------------------------------------------

class MsgPlantUserInitData_S2C : public ::google::protobuf::Message {
 public:
  MsgPlantUserInitData_S2C();
  virtual ~MsgPlantUserInitData_S2C();

  MsgPlantUserInitData_S2C(const MsgPlantUserInitData_S2C& from);

  inline MsgPlantUserInitData_S2C& operator=(const MsgPlantUserInitData_S2C& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgPlantUserInitData_S2C& default_instance();

  void Swap(MsgPlantUserInitData_S2C* other);

  // implements Message ----------------------------------------------

  MsgPlantUserInitData_S2C* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgPlantUserInitData_S2C& from);
  void MergeFrom(const MsgPlantUserInitData_S2C& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_PLANT_USER_INIT_DATA_S2C];
  inline bool has_msgtype() const;
  inline void clear_msgtype();
  static const int kMsgTypeFieldNumber = 1;
  inline ::MsgPB::EMsgType msgtype() const;
  inline void set_msgtype(::MsgPB::EMsgType value);

  // optional int64 iggid = 2;
  inline bool has_iggid() const;
  inline void clear_iggid();
  static const int kIggidFieldNumber = 2;
  inline ::google::protobuf::int64 iggid() const;
  inline void set_iggid(::google::protobuf::int64 value);

  // repeated .MsgPB.UserPlantInfo plant_info = 3;
  inline int plant_info_size() const;
  inline void clear_plant_info();
  static const int kPlantInfoFieldNumber = 3;
  inline const ::MsgPB::UserPlantInfo& plant_info(int index) const;
  inline ::MsgPB::UserPlantInfo* mutable_plant_info(int index);
  inline ::MsgPB::UserPlantInfo* add_plant_info();
  inline const ::google::protobuf::RepeatedPtrField< ::MsgPB::UserPlantInfo >&
      plant_info() const;
  inline ::google::protobuf::RepeatedPtrField< ::MsgPB::UserPlantInfo >*
      mutable_plant_info();

  // optional int32 mapid = 4;
  inline bool has_mapid() const;
  inline void clear_mapid();
  static const int kMapidFieldNumber = 4;
  inline ::google::protobuf::int32 mapid() const;
  inline void set_mapid(::google::protobuf::int32 value);

  // optional int32 tail = 5 [default = 0];
  inline bool has_tail() const;
  inline void clear_tail();
  static const int kTailFieldNumber = 5;
  inline ::google::protobuf::int32 tail() const;
  inline void set_tail(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:MsgPB.MsgPlantUserInitData_S2C)
 private:
  inline void set_has_msgtype();
  inline void clear_has_msgtype();
  inline void set_has_iggid();
  inline void clear_has_iggid();
  inline void set_has_mapid();
  inline void clear_has_mapid();
  inline void set_has_tail();
  inline void clear_has_tail();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 iggid_;
  int msgtype_;
  ::google::protobuf::int32 mapid_;
  ::google::protobuf::RepeatedPtrField< ::MsgPB::UserPlantInfo > plant_info_;
  ::google::protobuf::int32 tail_;
  friend void  protobuf_AddDesc_MsgPlant_2eproto();
  friend void protobuf_AssignDesc_MsgPlant_2eproto();
  friend void protobuf_ShutdownFile_MsgPlant_2eproto();

  void InitAsDefaultInstance();
  static MsgPlantUserInitData_S2C* default_instance_;
};
// -------------------------------------------------------------------

class MsgPlantNpcManger_C2S : public ::google::protobuf::Message {
 public:
  MsgPlantNpcManger_C2S();
  virtual ~MsgPlantNpcManger_C2S();

  MsgPlantNpcManger_C2S(const MsgPlantNpcManger_C2S& from);

  inline MsgPlantNpcManger_C2S& operator=(const MsgPlantNpcManger_C2S& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgPlantNpcManger_C2S& default_instance();

  void Swap(MsgPlantNpcManger_C2S* other);

  // implements Message ----------------------------------------------

  MsgPlantNpcManger_C2S* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgPlantNpcManger_C2S& from);
  void MergeFrom(const MsgPlantNpcManger_C2S& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_PLANT_NPC_MANAGER_C2S];
  inline bool has_msgtype() const;
  inline void clear_msgtype();
  static const int kMsgTypeFieldNumber = 1;
  inline ::MsgPB::EMsgType msgtype() const;
  inline void set_msgtype(::MsgPB::EMsgType value);

  // optional int64 iggid = 2;
  inline bool has_iggid() const;
  inline void clear_iggid();
  static const int kIggidFieldNumber = 2;
  inline ::google::protobuf::int64 iggid() const;
  inline void set_iggid(::google::protobuf::int64 value);

  // optional int32 pos_x = 3;
  inline bool has_pos_x() const;
  inline void clear_pos_x();
  static const int kPosXFieldNumber = 3;
  inline ::google::protobuf::int32 pos_x() const;
  inline void set_pos_x(::google::protobuf::int32 value);

  // optional int32 pos_y = 4;
  inline bool has_pos_y() const;
  inline void clear_pos_y();
  static const int kPosYFieldNumber = 4;
  inline ::google::protobuf::int32 pos_y() const;
  inline void set_pos_y(::google::protobuf::int32 value);

  // optional int64 protector_id = 5;
  inline bool has_protector_id() const;
  inline void clear_protector_id();
  static const int kProtectorIdFieldNumber = 5;
  inline ::google::protobuf::int64 protector_id() const;
  inline void set_protector_id(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:MsgPB.MsgPlantNpcManger_C2S)
 private:
  inline void set_has_msgtype();
  inline void clear_has_msgtype();
  inline void set_has_iggid();
  inline void clear_has_iggid();
  inline void set_has_pos_x();
  inline void clear_has_pos_x();
  inline void set_has_pos_y();
  inline void clear_has_pos_y();
  inline void set_has_protector_id();
  inline void clear_has_protector_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 iggid_;
  int msgtype_;
  ::google::protobuf::int32 pos_x_;
  ::google::protobuf::int64 protector_id_;
  ::google::protobuf::int32 pos_y_;
  friend void  protobuf_AddDesc_MsgPlant_2eproto();
  friend void protobuf_AssignDesc_MsgPlant_2eproto();
  friend void protobuf_ShutdownFile_MsgPlant_2eproto();

  void InitAsDefaultInstance();
  static MsgPlantNpcManger_C2S* default_instance_;
};
// -------------------------------------------------------------------

class MsgPlantNpcManger_S2C : public ::google::protobuf::Message {
 public:
  MsgPlantNpcManger_S2C();
  virtual ~MsgPlantNpcManger_S2C();

  MsgPlantNpcManger_S2C(const MsgPlantNpcManger_S2C& from);

  inline MsgPlantNpcManger_S2C& operator=(const MsgPlantNpcManger_S2C& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgPlantNpcManger_S2C& default_instance();

  void Swap(MsgPlantNpcManger_S2C* other);

  // implements Message ----------------------------------------------

  MsgPlantNpcManger_S2C* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgPlantNpcManger_S2C& from);
  void MergeFrom(const MsgPlantNpcManger_S2C& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef MsgPlantNpcManger_S2C_PLANT_MAN_RESULT PLANT_MAN_RESULT;
  static const PLANT_MAN_RESULT ERR = MsgPlantNpcManger_S2C_PLANT_MAN_RESULT_ERR;
  static const PLANT_MAN_RESULT SUCC = MsgPlantNpcManger_S2C_PLANT_MAN_RESULT_SUCC;
  static inline bool PLANT_MAN_RESULT_IsValid(int value) {
    return MsgPlantNpcManger_S2C_PLANT_MAN_RESULT_IsValid(value);
  }
  static const PLANT_MAN_RESULT PLANT_MAN_RESULT_MIN =
    MsgPlantNpcManger_S2C_PLANT_MAN_RESULT_PLANT_MAN_RESULT_MIN;
  static const PLANT_MAN_RESULT PLANT_MAN_RESULT_MAX =
    MsgPlantNpcManger_S2C_PLANT_MAN_RESULT_PLANT_MAN_RESULT_MAX;
  static const int PLANT_MAN_RESULT_ARRAYSIZE =
    MsgPlantNpcManger_S2C_PLANT_MAN_RESULT_PLANT_MAN_RESULT_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  PLANT_MAN_RESULT_descriptor() {
    return MsgPlantNpcManger_S2C_PLANT_MAN_RESULT_descriptor();
  }
  static inline const ::std::string& PLANT_MAN_RESULT_Name(PLANT_MAN_RESULT value) {
    return MsgPlantNpcManger_S2C_PLANT_MAN_RESULT_Name(value);
  }
  static inline bool PLANT_MAN_RESULT_Parse(const ::std::string& name,
      PLANT_MAN_RESULT* value) {
    return MsgPlantNpcManger_S2C_PLANT_MAN_RESULT_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_PLANT_NPC_MANAGER_S2C];
  inline bool has_msgtype() const;
  inline void clear_msgtype();
  static const int kMsgTypeFieldNumber = 1;
  inline ::MsgPB::EMsgType msgtype() const;
  inline void set_msgtype(::MsgPB::EMsgType value);

  // optional int64 iggid = 2;
  inline bool has_iggid() const;
  inline void clear_iggid();
  static const int kIggidFieldNumber = 2;
  inline ::google::protobuf::int64 iggid() const;
  inline void set_iggid(::google::protobuf::int64 value);

  // optional int32 pos_x = 3;
  inline bool has_pos_x() const;
  inline void clear_pos_x();
  static const int kPosXFieldNumber = 3;
  inline ::google::protobuf::int32 pos_x() const;
  inline void set_pos_x(::google::protobuf::int32 value);

  // optional int32 pos_y = 4;
  inline bool has_pos_y() const;
  inline void clear_pos_y();
  static const int kPosYFieldNumber = 4;
  inline ::google::protobuf::int32 pos_y() const;
  inline void set_pos_y(::google::protobuf::int32 value);

  // optional int64 protector_id = 5;
  inline bool has_protector_id() const;
  inline void clear_protector_id();
  static const int kProtectorIdFieldNumber = 5;
  inline ::google::protobuf::int64 protector_id() const;
  inline void set_protector_id(::google::protobuf::int64 value);

  // optional .MsgPB.MsgPlantNpcManger_S2C.PLANT_MAN_RESULT res = 6;
  inline bool has_res() const;
  inline void clear_res();
  static const int kResFieldNumber = 6;
  inline ::MsgPB::MsgPlantNpcManger_S2C_PLANT_MAN_RESULT res() const;
  inline void set_res(::MsgPB::MsgPlantNpcManger_S2C_PLANT_MAN_RESULT value);

  // @@protoc_insertion_point(class_scope:MsgPB.MsgPlantNpcManger_S2C)
 private:
  inline void set_has_msgtype();
  inline void clear_has_msgtype();
  inline void set_has_iggid();
  inline void clear_has_iggid();
  inline void set_has_pos_x();
  inline void clear_has_pos_x();
  inline void set_has_pos_y();
  inline void clear_has_pos_y();
  inline void set_has_protector_id();
  inline void clear_has_protector_id();
  inline void set_has_res();
  inline void clear_has_res();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 iggid_;
  int msgtype_;
  ::google::protobuf::int32 pos_x_;
  ::google::protobuf::int64 protector_id_;
  ::google::protobuf::int32 pos_y_;
  int res_;
  friend void  protobuf_AddDesc_MsgPlant_2eproto();
  friend void protobuf_AssignDesc_MsgPlant_2eproto();
  friend void protobuf_ShutdownFile_MsgPlant_2eproto();

  void InitAsDefaultInstance();
  static MsgPlantNpcManger_S2C* default_instance_;
};
// -------------------------------------------------------------------

class MsgPlantReportRareSet_C2S : public ::google::protobuf::Message {
 public:
  MsgPlantReportRareSet_C2S();
  virtual ~MsgPlantReportRareSet_C2S();

  MsgPlantReportRareSet_C2S(const MsgPlantReportRareSet_C2S& from);

  inline MsgPlantReportRareSet_C2S& operator=(const MsgPlantReportRareSet_C2S& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgPlantReportRareSet_C2S& default_instance();

  void Swap(MsgPlantReportRareSet_C2S* other);

  // implements Message ----------------------------------------------

  MsgPlantReportRareSet_C2S* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgPlantReportRareSet_C2S& from);
  void MergeFrom(const MsgPlantReportRareSet_C2S& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_PLANT_REPORT_RARE_SET_C2S];
  inline bool has_msgtype() const;
  inline void clear_msgtype();
  static const int kMsgTypeFieldNumber = 1;
  inline ::MsgPB::EMsgType msgtype() const;
  inline void set_msgtype(::MsgPB::EMsgType value);

  // optional int64 iggid = 2;
  inline bool has_iggid() const;
  inline void clear_iggid();
  static const int kIggidFieldNumber = 2;
  inline ::google::protobuf::int64 iggid() const;
  inline void set_iggid(::google::protobuf::int64 value);

  // optional int32 mapid = 3;
  inline bool has_mapid() const;
  inline void clear_mapid();
  static const int kMapidFieldNumber = 3;
  inline ::google::protobuf::int32 mapid() const;
  inline void set_mapid(::google::protobuf::int32 value);

  // optional int32 plant_x = 4;
  inline bool has_plant_x() const;
  inline void clear_plant_x();
  static const int kPlantXFieldNumber = 4;
  inline ::google::protobuf::int32 plant_x() const;
  inline void set_plant_x(::google::protobuf::int32 value);

  // optional int32 plant_y = 5;
  inline bool has_plant_y() const;
  inline void clear_plant_y();
  static const int kPlantYFieldNumber = 5;
  inline ::google::protobuf::int32 plant_y() const;
  inline void set_plant_y(::google::protobuf::int32 value);

  // optional int32 plant_type = 6;
  inline bool has_plant_type() const;
  inline void clear_plant_type();
  static const int kPlantTypeFieldNumber = 6;
  inline ::google::protobuf::int32 plant_type() const;
  inline void set_plant_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:MsgPB.MsgPlantReportRareSet_C2S)
 private:
  inline void set_has_msgtype();
  inline void clear_has_msgtype();
  inline void set_has_iggid();
  inline void clear_has_iggid();
  inline void set_has_mapid();
  inline void clear_has_mapid();
  inline void set_has_plant_x();
  inline void clear_has_plant_x();
  inline void set_has_plant_y();
  inline void clear_has_plant_y();
  inline void set_has_plant_type();
  inline void clear_has_plant_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 iggid_;
  int msgtype_;
  ::google::protobuf::int32 mapid_;
  ::google::protobuf::int32 plant_x_;
  ::google::protobuf::int32 plant_y_;
  ::google::protobuf::int32 plant_type_;
  friend void  protobuf_AddDesc_MsgPlant_2eproto();
  friend void protobuf_AssignDesc_MsgPlant_2eproto();
  friend void protobuf_ShutdownFile_MsgPlant_2eproto();

  void InitAsDefaultInstance();
  static MsgPlantReportRareSet_C2S* default_instance_;
};
// -------------------------------------------------------------------

class MsgPlantReportRareCut_C2S : public ::google::protobuf::Message {
 public:
  MsgPlantReportRareCut_C2S();
  virtual ~MsgPlantReportRareCut_C2S();

  MsgPlantReportRareCut_C2S(const MsgPlantReportRareCut_C2S& from);

  inline MsgPlantReportRareCut_C2S& operator=(const MsgPlantReportRareCut_C2S& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgPlantReportRareCut_C2S& default_instance();

  void Swap(MsgPlantReportRareCut_C2S* other);

  // implements Message ----------------------------------------------

  MsgPlantReportRareCut_C2S* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgPlantReportRareCut_C2S& from);
  void MergeFrom(const MsgPlantReportRareCut_C2S& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_PLANT_REPORT_RARE_CUT_C2S];
  inline bool has_msgtype() const;
  inline void clear_msgtype();
  static const int kMsgTypeFieldNumber = 1;
  inline ::MsgPB::EMsgType msgtype() const;
  inline void set_msgtype(::MsgPB::EMsgType value);

  // optional int64 iggid = 2;
  inline bool has_iggid() const;
  inline void clear_iggid();
  static const int kIggidFieldNumber = 2;
  inline ::google::protobuf::int64 iggid() const;
  inline void set_iggid(::google::protobuf::int64 value);

  // optional int32 mapid = 3;
  inline bool has_mapid() const;
  inline void clear_mapid();
  static const int kMapidFieldNumber = 3;
  inline ::google::protobuf::int32 mapid() const;
  inline void set_mapid(::google::protobuf::int32 value);

  // optional int32 plant_x = 4;
  inline bool has_plant_x() const;
  inline void clear_plant_x();
  static const int kPlantXFieldNumber = 4;
  inline ::google::protobuf::int32 plant_x() const;
  inline void set_plant_x(::google::protobuf::int32 value);

  // optional int32 plant_y = 5;
  inline bool has_plant_y() const;
  inline void clear_plant_y();
  static const int kPlantYFieldNumber = 5;
  inline ::google::protobuf::int32 plant_y() const;
  inline void set_plant_y(::google::protobuf::int32 value);

  // optional int32 plant_type = 6;
  inline bool has_plant_type() const;
  inline void clear_plant_type();
  static const int kPlantTypeFieldNumber = 6;
  inline ::google::protobuf::int32 plant_type() const;
  inline void set_plant_type(::google::protobuf::int32 value);

  // repeated .MsgPB.PBDropInfo drop_info = 7;
  inline int drop_info_size() const;
  inline void clear_drop_info();
  static const int kDropInfoFieldNumber = 7;
  inline const ::MsgPB::PBDropInfo& drop_info(int index) const;
  inline ::MsgPB::PBDropInfo* mutable_drop_info(int index);
  inline ::MsgPB::PBDropInfo* add_drop_info();
  inline const ::google::protobuf::RepeatedPtrField< ::MsgPB::PBDropInfo >&
      drop_info() const;
  inline ::google::protobuf::RepeatedPtrField< ::MsgPB::PBDropInfo >*
      mutable_drop_info();

  // optional int32 drop_id = 8;
  inline bool has_drop_id() const;
  inline void clear_drop_id();
  static const int kDropIdFieldNumber = 8;
  inline ::google::protobuf::int32 drop_id() const;
  inline void set_drop_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:MsgPB.MsgPlantReportRareCut_C2S)
 private:
  inline void set_has_msgtype();
  inline void clear_has_msgtype();
  inline void set_has_iggid();
  inline void clear_has_iggid();
  inline void set_has_mapid();
  inline void clear_has_mapid();
  inline void set_has_plant_x();
  inline void clear_has_plant_x();
  inline void set_has_plant_y();
  inline void clear_has_plant_y();
  inline void set_has_plant_type();
  inline void clear_has_plant_type();
  inline void set_has_drop_id();
  inline void clear_has_drop_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 iggid_;
  int msgtype_;
  ::google::protobuf::int32 mapid_;
  ::google::protobuf::int32 plant_x_;
  ::google::protobuf::int32 plant_y_;
  ::google::protobuf::RepeatedPtrField< ::MsgPB::PBDropInfo > drop_info_;
  ::google::protobuf::int32 plant_type_;
  ::google::protobuf::int32 drop_id_;
  friend void  protobuf_AddDesc_MsgPlant_2eproto();
  friend void protobuf_AssignDesc_MsgPlant_2eproto();
  friend void protobuf_ShutdownFile_MsgPlant_2eproto();

  void InitAsDefaultInstance();
  static MsgPlantReportRareCut_C2S* default_instance_;
};
// ===================================================================


// ===================================================================

// PlantDropInfo

// optional int32 item_type = 1;
inline bool PlantDropInfo::has_item_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PlantDropInfo::set_has_item_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PlantDropInfo::clear_has_item_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PlantDropInfo::clear_item_type() {
  item_type_ = 0;
  clear_has_item_type();
}
inline ::google::protobuf::int32 PlantDropInfo::item_type() const {
  // @@protoc_insertion_point(field_get:MsgPB.PlantDropInfo.item_type)
  return item_type_;
}
inline void PlantDropInfo::set_item_type(::google::protobuf::int32 value) {
  set_has_item_type();
  item_type_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.PlantDropInfo.item_type)
}

// optional int32 item_count = 3;
inline bool PlantDropInfo::has_item_count() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PlantDropInfo::set_has_item_count() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PlantDropInfo::clear_has_item_count() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PlantDropInfo::clear_item_count() {
  item_count_ = 0;
  clear_has_item_count();
}
inline ::google::protobuf::int32 PlantDropInfo::item_count() const {
  // @@protoc_insertion_point(field_get:MsgPB.PlantDropInfo.item_count)
  return item_count_;
}
inline void PlantDropInfo::set_item_count(::google::protobuf::int32 value) {
  set_has_item_count();
  item_count_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.PlantDropInfo.item_count)
}

// -------------------------------------------------------------------

// MsgPlantCfg

// optional int32 type_id = 1;
inline bool MsgPlantCfg::has_type_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgPlantCfg::set_has_type_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgPlantCfg::clear_has_type_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgPlantCfg::clear_type_id() {
  type_id_ = 0;
  clear_has_type_id();
}
inline ::google::protobuf::int32 MsgPlantCfg::type_id() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgPlantCfg.type_id)
  return type_id_;
}
inline void MsgPlantCfg::set_type_id(::google::protobuf::int32 value) {
  set_has_type_id();
  type_id_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgPlantCfg.type_id)
}

// optional int32 count = 2;
inline bool MsgPlantCfg::has_count() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MsgPlantCfg::set_has_count() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MsgPlantCfg::clear_has_count() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MsgPlantCfg::clear_count() {
  count_ = 0;
  clear_has_count();
}
inline ::google::protobuf::int32 MsgPlantCfg::count() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgPlantCfg.count)
  return count_;
}
inline void MsgPlantCfg::set_count(::google::protobuf::int32 value) {
  set_has_count();
  count_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgPlantCfg.count)
}

// -------------------------------------------------------------------

// MsgPlantSetReq

// optional .MsgPB.EMsgType msgType = 1 [default = _MSG_PLANT_SET_REQ];
inline bool MsgPlantSetReq::has_msgtype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgPlantSetReq::set_has_msgtype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgPlantSetReq::clear_has_msgtype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgPlantSetReq::clear_msgtype() {
  msgtype_ = 1302;
  clear_has_msgtype();
}
inline ::MsgPB::EMsgType MsgPlantSetReq::msgtype() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgPlantSetReq.msgType)
  return static_cast< ::MsgPB::EMsgType >(msgtype_);
}
inline void MsgPlantSetReq::set_msgtype(::MsgPB::EMsgType value) {
  assert(::MsgPB::EMsgType_IsValid(value));
  set_has_msgtype();
  msgtype_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgPlantSetReq.msgType)
}

// optional int64 iggid = 2;
inline bool MsgPlantSetReq::has_iggid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MsgPlantSetReq::set_has_iggid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MsgPlantSetReq::clear_has_iggid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MsgPlantSetReq::clear_iggid() {
  iggid_ = GOOGLE_LONGLONG(0);
  clear_has_iggid();
}
inline ::google::protobuf::int64 MsgPlantSetReq::iggid() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgPlantSetReq.iggid)
  return iggid_;
}
inline void MsgPlantSetReq::set_iggid(::google::protobuf::int64 value) {
  set_has_iggid();
  iggid_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgPlantSetReq.iggid)
}

// optional int32 pos_x = 3;
inline bool MsgPlantSetReq::has_pos_x() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MsgPlantSetReq::set_has_pos_x() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MsgPlantSetReq::clear_has_pos_x() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MsgPlantSetReq::clear_pos_x() {
  pos_x_ = 0;
  clear_has_pos_x();
}
inline ::google::protobuf::int32 MsgPlantSetReq::pos_x() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgPlantSetReq.pos_x)
  return pos_x_;
}
inline void MsgPlantSetReq::set_pos_x(::google::protobuf::int32 value) {
  set_has_pos_x();
  pos_x_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgPlantSetReq.pos_x)
}

// optional int32 pos_y = 4;
inline bool MsgPlantSetReq::has_pos_y() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MsgPlantSetReq::set_has_pos_y() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MsgPlantSetReq::clear_has_pos_y() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MsgPlantSetReq::clear_pos_y() {
  pos_y_ = 0;
  clear_has_pos_y();
}
inline ::google::protobuf::int32 MsgPlantSetReq::pos_y() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgPlantSetReq.pos_y)
  return pos_y_;
}
inline void MsgPlantSetReq::set_pos_y(::google::protobuf::int32 value) {
  set_has_pos_y();
  pos_y_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgPlantSetReq.pos_y)
}

// optional int32 plant_seed_type = 5;
inline bool MsgPlantSetReq::has_plant_seed_type() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void MsgPlantSetReq::set_has_plant_seed_type() {
  _has_bits_[0] |= 0x00000010u;
}
inline void MsgPlantSetReq::clear_has_plant_seed_type() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void MsgPlantSetReq::clear_plant_seed_type() {
  plant_seed_type_ = 0;
  clear_has_plant_seed_type();
}
inline ::google::protobuf::int32 MsgPlantSetReq::plant_seed_type() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgPlantSetReq.plant_seed_type)
  return plant_seed_type_;
}
inline void MsgPlantSetReq::set_plant_seed_type(::google::protobuf::int32 value) {
  set_has_plant_seed_type();
  plant_seed_type_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgPlantSetReq.plant_seed_type)
}

// -------------------------------------------------------------------

// MsgPlantSet

// optional .MsgPB.EMsgType msgType = 1 [default = _MSG_PLANT_SET];
inline bool MsgPlantSet::has_msgtype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgPlantSet::set_has_msgtype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgPlantSet::clear_has_msgtype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgPlantSet::clear_msgtype() {
  msgtype_ = 1303;
  clear_has_msgtype();
}
inline ::MsgPB::EMsgType MsgPlantSet::msgtype() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgPlantSet.msgType)
  return static_cast< ::MsgPB::EMsgType >(msgtype_);
}
inline void MsgPlantSet::set_msgtype(::MsgPB::EMsgType value) {
  assert(::MsgPB::EMsgType_IsValid(value));
  set_has_msgtype();
  msgtype_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgPlantSet.msgType)
}

// optional int64 iggid = 2;
inline bool MsgPlantSet::has_iggid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MsgPlantSet::set_has_iggid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MsgPlantSet::clear_has_iggid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MsgPlantSet::clear_iggid() {
  iggid_ = GOOGLE_LONGLONG(0);
  clear_has_iggid();
}
inline ::google::protobuf::int64 MsgPlantSet::iggid() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgPlantSet.iggid)
  return iggid_;
}
inline void MsgPlantSet::set_iggid(::google::protobuf::int64 value) {
  set_has_iggid();
  iggid_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgPlantSet.iggid)
}

// optional .MsgPB.PLANT_RESULT res = 3;
inline bool MsgPlantSet::has_res() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MsgPlantSet::set_has_res() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MsgPlantSet::clear_has_res() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MsgPlantSet::clear_res() {
  res_ = 0;
  clear_has_res();
}
inline ::MsgPB::PLANT_RESULT MsgPlantSet::res() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgPlantSet.res)
  return static_cast< ::MsgPB::PLANT_RESULT >(res_);
}
inline void MsgPlantSet::set_res(::MsgPB::PLANT_RESULT value) {
  assert(::MsgPB::PLANT_RESULT_IsValid(value));
  set_has_res();
  res_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgPlantSet.res)
}

// optional int32 pos_x = 5;
inline bool MsgPlantSet::has_pos_x() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MsgPlantSet::set_has_pos_x() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MsgPlantSet::clear_has_pos_x() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MsgPlantSet::clear_pos_x() {
  pos_x_ = 0;
  clear_has_pos_x();
}
inline ::google::protobuf::int32 MsgPlantSet::pos_x() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgPlantSet.pos_x)
  return pos_x_;
}
inline void MsgPlantSet::set_pos_x(::google::protobuf::int32 value) {
  set_has_pos_x();
  pos_x_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgPlantSet.pos_x)
}

// optional int32 pos_y = 6;
inline bool MsgPlantSet::has_pos_y() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void MsgPlantSet::set_has_pos_y() {
  _has_bits_[0] |= 0x00000010u;
}
inline void MsgPlantSet::clear_has_pos_y() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void MsgPlantSet::clear_pos_y() {
  pos_y_ = 0;
  clear_has_pos_y();
}
inline ::google::protobuf::int32 MsgPlantSet::pos_y() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgPlantSet.pos_y)
  return pos_y_;
}
inline void MsgPlantSet::set_pos_y(::google::protobuf::int32 value) {
  set_has_pos_y();
  pos_y_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgPlantSet.pos_y)
}

// optional int32 templateid = 7;
inline bool MsgPlantSet::has_templateid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void MsgPlantSet::set_has_templateid() {
  _has_bits_[0] |= 0x00000020u;
}
inline void MsgPlantSet::clear_has_templateid() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void MsgPlantSet::clear_templateid() {
  templateid_ = 0;
  clear_has_templateid();
}
inline ::google::protobuf::int32 MsgPlantSet::templateid() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgPlantSet.templateid)
  return templateid_;
}
inline void MsgPlantSet::set_templateid(::google::protobuf::int32 value) {
  set_has_templateid();
  templateid_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgPlantSet.templateid)
}

// optional int64 plant_id = 8;
inline bool MsgPlantSet::has_plant_id() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void MsgPlantSet::set_has_plant_id() {
  _has_bits_[0] |= 0x00000040u;
}
inline void MsgPlantSet::clear_has_plant_id() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void MsgPlantSet::clear_plant_id() {
  plant_id_ = GOOGLE_LONGLONG(0);
  clear_has_plant_id();
}
inline ::google::protobuf::int64 MsgPlantSet::plant_id() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgPlantSet.plant_id)
  return plant_id_;
}
inline void MsgPlantSet::set_plant_id(::google::protobuf::int64 value) {
  set_has_plant_id();
  plant_id_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgPlantSet.plant_id)
}

// optional int64 grow_begin = 9;
inline bool MsgPlantSet::has_grow_begin() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void MsgPlantSet::set_has_grow_begin() {
  _has_bits_[0] |= 0x00000080u;
}
inline void MsgPlantSet::clear_has_grow_begin() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void MsgPlantSet::clear_grow_begin() {
  grow_begin_ = GOOGLE_LONGLONG(0);
  clear_has_grow_begin();
}
inline ::google::protobuf::int64 MsgPlantSet::grow_begin() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgPlantSet.grow_begin)
  return grow_begin_;
}
inline void MsgPlantSet::set_grow_begin(::google::protobuf::int64 value) {
  set_has_grow_begin();
  grow_begin_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgPlantSet.grow_begin)
}

// optional int32 grow_time = 10;
inline bool MsgPlantSet::has_grow_time() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void MsgPlantSet::set_has_grow_time() {
  _has_bits_[0] |= 0x00000100u;
}
inline void MsgPlantSet::clear_has_grow_time() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void MsgPlantSet::clear_grow_time() {
  grow_time_ = 0;
  clear_has_grow_time();
}
inline ::google::protobuf::int32 MsgPlantSet::grow_time() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgPlantSet.grow_time)
  return grow_time_;
}
inline void MsgPlantSet::set_grow_time(::google::protobuf::int32 value) {
  set_has_grow_time();
  grow_time_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgPlantSet.grow_time)
}

// optional int32 grow_stage = 11;
inline bool MsgPlantSet::has_grow_stage() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void MsgPlantSet::set_has_grow_stage() {
  _has_bits_[0] |= 0x00000200u;
}
inline void MsgPlantSet::clear_has_grow_stage() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void MsgPlantSet::clear_grow_stage() {
  grow_stage_ = 0;
  clear_has_grow_stage();
}
inline ::google::protobuf::int32 MsgPlantSet::grow_stage() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgPlantSet.grow_stage)
  return grow_stage_;
}
inline void MsgPlantSet::set_grow_stage(::google::protobuf::int32 value) {
  set_has_grow_stage();
  grow_stage_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgPlantSet.grow_stage)
}

// optional int64 protectorId = 12;
inline bool MsgPlantSet::has_protectorid() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void MsgPlantSet::set_has_protectorid() {
  _has_bits_[0] |= 0x00000400u;
}
inline void MsgPlantSet::clear_has_protectorid() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void MsgPlantSet::clear_protectorid() {
  protectorid_ = GOOGLE_LONGLONG(0);
  clear_has_protectorid();
}
inline ::google::protobuf::int64 MsgPlantSet::protectorid() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgPlantSet.protectorId)
  return protectorid_;
}
inline void MsgPlantSet::set_protectorid(::google::protobuf::int64 value) {
  set_has_protectorid();
  protectorid_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgPlantSet.protectorId)
}

// -------------------------------------------------------------------

// MsgPlantCutReq

// optional .MsgPB.EMsgType msgType = 1 [default = _MSG_PLANT_CUT_REQ];
inline bool MsgPlantCutReq::has_msgtype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgPlantCutReq::set_has_msgtype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgPlantCutReq::clear_has_msgtype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgPlantCutReq::clear_msgtype() {
  msgtype_ = 1309;
  clear_has_msgtype();
}
inline ::MsgPB::EMsgType MsgPlantCutReq::msgtype() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgPlantCutReq.msgType)
  return static_cast< ::MsgPB::EMsgType >(msgtype_);
}
inline void MsgPlantCutReq::set_msgtype(::MsgPB::EMsgType value) {
  assert(::MsgPB::EMsgType_IsValid(value));
  set_has_msgtype();
  msgtype_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgPlantCutReq.msgType)
}

// optional int64 iggid = 2;
inline bool MsgPlantCutReq::has_iggid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MsgPlantCutReq::set_has_iggid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MsgPlantCutReq::clear_has_iggid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MsgPlantCutReq::clear_iggid() {
  iggid_ = GOOGLE_LONGLONG(0);
  clear_has_iggid();
}
inline ::google::protobuf::int64 MsgPlantCutReq::iggid() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgPlantCutReq.iggid)
  return iggid_;
}
inline void MsgPlantCutReq::set_iggid(::google::protobuf::int64 value) {
  set_has_iggid();
  iggid_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgPlantCutReq.iggid)
}

// optional int32 pos_x = 3;
inline bool MsgPlantCutReq::has_pos_x() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MsgPlantCutReq::set_has_pos_x() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MsgPlantCutReq::clear_has_pos_x() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MsgPlantCutReq::clear_pos_x() {
  pos_x_ = 0;
  clear_has_pos_x();
}
inline ::google::protobuf::int32 MsgPlantCutReq::pos_x() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgPlantCutReq.pos_x)
  return pos_x_;
}
inline void MsgPlantCutReq::set_pos_x(::google::protobuf::int32 value) {
  set_has_pos_x();
  pos_x_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgPlantCutReq.pos_x)
}

// optional int32 pos_y = 4;
inline bool MsgPlantCutReq::has_pos_y() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MsgPlantCutReq::set_has_pos_y() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MsgPlantCutReq::clear_has_pos_y() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MsgPlantCutReq::clear_pos_y() {
  pos_y_ = 0;
  clear_has_pos_y();
}
inline ::google::protobuf::int32 MsgPlantCutReq::pos_y() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgPlantCutReq.pos_y)
  return pos_y_;
}
inline void MsgPlantCutReq::set_pos_y(::google::protobuf::int32 value) {
  set_has_pos_y();
  pos_y_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgPlantCutReq.pos_y)
}

// optional int64 tool_uuid = 5;
inline bool MsgPlantCutReq::has_tool_uuid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void MsgPlantCutReq::set_has_tool_uuid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void MsgPlantCutReq::clear_has_tool_uuid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void MsgPlantCutReq::clear_tool_uuid() {
  tool_uuid_ = GOOGLE_LONGLONG(0);
  clear_has_tool_uuid();
}
inline ::google::protobuf::int64 MsgPlantCutReq::tool_uuid() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgPlantCutReq.tool_uuid)
  return tool_uuid_;
}
inline void MsgPlantCutReq::set_tool_uuid(::google::protobuf::int64 value) {
  set_has_tool_uuid();
  tool_uuid_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgPlantCutReq.tool_uuid)
}

// optional int32 dig_pos_x = 6;
inline bool MsgPlantCutReq::has_dig_pos_x() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void MsgPlantCutReq::set_has_dig_pos_x() {
  _has_bits_[0] |= 0x00000020u;
}
inline void MsgPlantCutReq::clear_has_dig_pos_x() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void MsgPlantCutReq::clear_dig_pos_x() {
  dig_pos_x_ = 0;
  clear_has_dig_pos_x();
}
inline ::google::protobuf::int32 MsgPlantCutReq::dig_pos_x() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgPlantCutReq.dig_pos_x)
  return dig_pos_x_;
}
inline void MsgPlantCutReq::set_dig_pos_x(::google::protobuf::int32 value) {
  set_has_dig_pos_x();
  dig_pos_x_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgPlantCutReq.dig_pos_x)
}

// optional int32 dig_pos_y = 7;
inline bool MsgPlantCutReq::has_dig_pos_y() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void MsgPlantCutReq::set_has_dig_pos_y() {
  _has_bits_[0] |= 0x00000040u;
}
inline void MsgPlantCutReq::clear_has_dig_pos_y() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void MsgPlantCutReq::clear_dig_pos_y() {
  dig_pos_y_ = 0;
  clear_has_dig_pos_y();
}
inline ::google::protobuf::int32 MsgPlantCutReq::dig_pos_y() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgPlantCutReq.dig_pos_y)
  return dig_pos_y_;
}
inline void MsgPlantCutReq::set_dig_pos_y(::google::protobuf::int32 value) {
  set_has_dig_pos_y();
  dig_pos_y_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgPlantCutReq.dig_pos_y)
}

// optional int64 dig_id = 8;
inline bool MsgPlantCutReq::has_dig_id() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void MsgPlantCutReq::set_has_dig_id() {
  _has_bits_[0] |= 0x00000080u;
}
inline void MsgPlantCutReq::clear_has_dig_id() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void MsgPlantCutReq::clear_dig_id() {
  dig_id_ = GOOGLE_LONGLONG(0);
  clear_has_dig_id();
}
inline ::google::protobuf::int64 MsgPlantCutReq::dig_id() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgPlantCutReq.dig_id)
  return dig_id_;
}
inline void MsgPlantCutReq::set_dig_id(::google::protobuf::int64 value) {
  set_has_dig_id();
  dig_id_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgPlantCutReq.dig_id)
}

// -------------------------------------------------------------------

// MsgPlantCut

// optional .MsgPB.EMsgType msgType = 1 [default = _MSG_PLANT_CUT];
inline bool MsgPlantCut::has_msgtype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgPlantCut::set_has_msgtype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgPlantCut::clear_has_msgtype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgPlantCut::clear_msgtype() {
  msgtype_ = 1310;
  clear_has_msgtype();
}
inline ::MsgPB::EMsgType MsgPlantCut::msgtype() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgPlantCut.msgType)
  return static_cast< ::MsgPB::EMsgType >(msgtype_);
}
inline void MsgPlantCut::set_msgtype(::MsgPB::EMsgType value) {
  assert(::MsgPB::EMsgType_IsValid(value));
  set_has_msgtype();
  msgtype_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgPlantCut.msgType)
}

// optional int64 iggid = 2;
inline bool MsgPlantCut::has_iggid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MsgPlantCut::set_has_iggid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MsgPlantCut::clear_has_iggid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MsgPlantCut::clear_iggid() {
  iggid_ = GOOGLE_LONGLONG(0);
  clear_has_iggid();
}
inline ::google::protobuf::int64 MsgPlantCut::iggid() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgPlantCut.iggid)
  return iggid_;
}
inline void MsgPlantCut::set_iggid(::google::protobuf::int64 value) {
  set_has_iggid();
  iggid_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgPlantCut.iggid)
}

// optional .MsgPB.PLANT_RESULT res = 3;
inline bool MsgPlantCut::has_res() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MsgPlantCut::set_has_res() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MsgPlantCut::clear_has_res() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MsgPlantCut::clear_res() {
  res_ = 0;
  clear_has_res();
}
inline ::MsgPB::PLANT_RESULT MsgPlantCut::res() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgPlantCut.res)
  return static_cast< ::MsgPB::PLANT_RESULT >(res_);
}
inline void MsgPlantCut::set_res(::MsgPB::PLANT_RESULT value) {
  assert(::MsgPB::PLANT_RESULT_IsValid(value));
  set_has_res();
  res_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgPlantCut.res)
}

// optional int32 pos_x = 4;
inline bool MsgPlantCut::has_pos_x() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MsgPlantCut::set_has_pos_x() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MsgPlantCut::clear_has_pos_x() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MsgPlantCut::clear_pos_x() {
  pos_x_ = 0;
  clear_has_pos_x();
}
inline ::google::protobuf::int32 MsgPlantCut::pos_x() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgPlantCut.pos_x)
  return pos_x_;
}
inline void MsgPlantCut::set_pos_x(::google::protobuf::int32 value) {
  set_has_pos_x();
  pos_x_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgPlantCut.pos_x)
}

// optional int32 pos_y = 5;
inline bool MsgPlantCut::has_pos_y() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void MsgPlantCut::set_has_pos_y() {
  _has_bits_[0] |= 0x00000010u;
}
inline void MsgPlantCut::clear_has_pos_y() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void MsgPlantCut::clear_pos_y() {
  pos_y_ = 0;
  clear_has_pos_y();
}
inline ::google::protobuf::int32 MsgPlantCut::pos_y() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgPlantCut.pos_y)
  return pos_y_;
}
inline void MsgPlantCut::set_pos_y(::google::protobuf::int32 value) {
  set_has_pos_y();
  pos_y_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgPlantCut.pos_y)
}

// optional int32 max_hp = 7;
inline bool MsgPlantCut::has_max_hp() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void MsgPlantCut::set_has_max_hp() {
  _has_bits_[0] |= 0x00000020u;
}
inline void MsgPlantCut::clear_has_max_hp() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void MsgPlantCut::clear_max_hp() {
  max_hp_ = 0;
  clear_has_max_hp();
}
inline ::google::protobuf::int32 MsgPlantCut::max_hp() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgPlantCut.max_hp)
  return max_hp_;
}
inline void MsgPlantCut::set_max_hp(::google::protobuf::int32 value) {
  set_has_max_hp();
  max_hp_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgPlantCut.max_hp)
}

// optional int32 curr_hp = 8;
inline bool MsgPlantCut::has_curr_hp() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void MsgPlantCut::set_has_curr_hp() {
  _has_bits_[0] |= 0x00000040u;
}
inline void MsgPlantCut::clear_has_curr_hp() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void MsgPlantCut::clear_curr_hp() {
  curr_hp_ = 0;
  clear_has_curr_hp();
}
inline ::google::protobuf::int32 MsgPlantCut::curr_hp() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgPlantCut.curr_hp)
  return curr_hp_;
}
inline void MsgPlantCut::set_curr_hp(::google::protobuf::int32 value) {
  set_has_curr_hp();
  curr_hp_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgPlantCut.curr_hp)
}

// optional int32 reduce_hp = 9;
inline bool MsgPlantCut::has_reduce_hp() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void MsgPlantCut::set_has_reduce_hp() {
  _has_bits_[0] |= 0x00000080u;
}
inline void MsgPlantCut::clear_has_reduce_hp() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void MsgPlantCut::clear_reduce_hp() {
  reduce_hp_ = 0;
  clear_has_reduce_hp();
}
inline ::google::protobuf::int32 MsgPlantCut::reduce_hp() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgPlantCut.reduce_hp)
  return reduce_hp_;
}
inline void MsgPlantCut::set_reduce_hp(::google::protobuf::int32 value) {
  set_has_reduce_hp();
  reduce_hp_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgPlantCut.reduce_hp)
}

// optional int32 dig_pos_x = 10;
inline bool MsgPlantCut::has_dig_pos_x() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void MsgPlantCut::set_has_dig_pos_x() {
  _has_bits_[0] |= 0x00000100u;
}
inline void MsgPlantCut::clear_has_dig_pos_x() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void MsgPlantCut::clear_dig_pos_x() {
  dig_pos_x_ = 0;
  clear_has_dig_pos_x();
}
inline ::google::protobuf::int32 MsgPlantCut::dig_pos_x() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgPlantCut.dig_pos_x)
  return dig_pos_x_;
}
inline void MsgPlantCut::set_dig_pos_x(::google::protobuf::int32 value) {
  set_has_dig_pos_x();
  dig_pos_x_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgPlantCut.dig_pos_x)
}

// optional int32 dig_pos_y = 11;
inline bool MsgPlantCut::has_dig_pos_y() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void MsgPlantCut::set_has_dig_pos_y() {
  _has_bits_[0] |= 0x00000200u;
}
inline void MsgPlantCut::clear_has_dig_pos_y() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void MsgPlantCut::clear_dig_pos_y() {
  dig_pos_y_ = 0;
  clear_has_dig_pos_y();
}
inline ::google::protobuf::int32 MsgPlantCut::dig_pos_y() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgPlantCut.dig_pos_y)
  return dig_pos_y_;
}
inline void MsgPlantCut::set_dig_pos_y(::google::protobuf::int32 value) {
  set_has_dig_pos_y();
  dig_pos_y_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgPlantCut.dig_pos_y)
}

// optional int64 dig_id = 12;
inline bool MsgPlantCut::has_dig_id() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void MsgPlantCut::set_has_dig_id() {
  _has_bits_[0] |= 0x00000400u;
}
inline void MsgPlantCut::clear_has_dig_id() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void MsgPlantCut::clear_dig_id() {
  dig_id_ = GOOGLE_LONGLONG(0);
  clear_has_dig_id();
}
inline ::google::protobuf::int64 MsgPlantCut::dig_id() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgPlantCut.dig_id)
  return dig_id_;
}
inline void MsgPlantCut::set_dig_id(::google::protobuf::int64 value) {
  set_has_dig_id();
  dig_id_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgPlantCut.dig_id)
}

// -------------------------------------------------------------------

// MsgPlantInfo_PlantInfo

// optional int32 plant_type = 1;
inline bool MsgPlantInfo_PlantInfo::has_plant_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgPlantInfo_PlantInfo::set_has_plant_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgPlantInfo_PlantInfo::clear_has_plant_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgPlantInfo_PlantInfo::clear_plant_type() {
  plant_type_ = 0;
  clear_has_plant_type();
}
inline ::google::protobuf::int32 MsgPlantInfo_PlantInfo::plant_type() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgPlantInfo.PlantInfo.plant_type)
  return plant_type_;
}
inline void MsgPlantInfo_PlantInfo::set_plant_type(::google::protobuf::int32 value) {
  set_has_plant_type();
  plant_type_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgPlantInfo.PlantInfo.plant_type)
}

// optional int32 pos_x = 2;
inline bool MsgPlantInfo_PlantInfo::has_pos_x() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MsgPlantInfo_PlantInfo::set_has_pos_x() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MsgPlantInfo_PlantInfo::clear_has_pos_x() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MsgPlantInfo_PlantInfo::clear_pos_x() {
  pos_x_ = 0;
  clear_has_pos_x();
}
inline ::google::protobuf::int32 MsgPlantInfo_PlantInfo::pos_x() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgPlantInfo.PlantInfo.pos_x)
  return pos_x_;
}
inline void MsgPlantInfo_PlantInfo::set_pos_x(::google::protobuf::int32 value) {
  set_has_pos_x();
  pos_x_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgPlantInfo.PlantInfo.pos_x)
}

// optional int32 pos_y = 3;
inline bool MsgPlantInfo_PlantInfo::has_pos_y() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MsgPlantInfo_PlantInfo::set_has_pos_y() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MsgPlantInfo_PlantInfo::clear_has_pos_y() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MsgPlantInfo_PlantInfo::clear_pos_y() {
  pos_y_ = 0;
  clear_has_pos_y();
}
inline ::google::protobuf::int32 MsgPlantInfo_PlantInfo::pos_y() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgPlantInfo.PlantInfo.pos_y)
  return pos_y_;
}
inline void MsgPlantInfo_PlantInfo::set_pos_y(::google::protobuf::int32 value) {
  set_has_pos_y();
  pos_y_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgPlantInfo.PlantInfo.pos_y)
}

// optional int32 grow_stage = 4;
inline bool MsgPlantInfo_PlantInfo::has_grow_stage() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MsgPlantInfo_PlantInfo::set_has_grow_stage() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MsgPlantInfo_PlantInfo::clear_has_grow_stage() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MsgPlantInfo_PlantInfo::clear_grow_stage() {
  grow_stage_ = 0;
  clear_has_grow_stage();
}
inline ::google::protobuf::int32 MsgPlantInfo_PlantInfo::grow_stage() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgPlantInfo.PlantInfo.grow_stage)
  return grow_stage_;
}
inline void MsgPlantInfo_PlantInfo::set_grow_stage(::google::protobuf::int32 value) {
  set_has_grow_stage();
  grow_stage_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgPlantInfo.PlantInfo.grow_stage)
}

// optional int32 templateid = 5;
inline bool MsgPlantInfo_PlantInfo::has_templateid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void MsgPlantInfo_PlantInfo::set_has_templateid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void MsgPlantInfo_PlantInfo::clear_has_templateid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void MsgPlantInfo_PlantInfo::clear_templateid() {
  templateid_ = 0;
  clear_has_templateid();
}
inline ::google::protobuf::int32 MsgPlantInfo_PlantInfo::templateid() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgPlantInfo.PlantInfo.templateid)
  return templateid_;
}
inline void MsgPlantInfo_PlantInfo::set_templateid(::google::protobuf::int32 value) {
  set_has_templateid();
  templateid_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgPlantInfo.PlantInfo.templateid)
}

// optional int64 plant_id = 6;
inline bool MsgPlantInfo_PlantInfo::has_plant_id() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void MsgPlantInfo_PlantInfo::set_has_plant_id() {
  _has_bits_[0] |= 0x00000020u;
}
inline void MsgPlantInfo_PlantInfo::clear_has_plant_id() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void MsgPlantInfo_PlantInfo::clear_plant_id() {
  plant_id_ = GOOGLE_LONGLONG(0);
  clear_has_plant_id();
}
inline ::google::protobuf::int64 MsgPlantInfo_PlantInfo::plant_id() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgPlantInfo.PlantInfo.plant_id)
  return plant_id_;
}
inline void MsgPlantInfo_PlantInfo::set_plant_id(::google::protobuf::int64 value) {
  set_has_plant_id();
  plant_id_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgPlantInfo.PlantInfo.plant_id)
}

// optional int64 grow_begin = 7;
inline bool MsgPlantInfo_PlantInfo::has_grow_begin() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void MsgPlantInfo_PlantInfo::set_has_grow_begin() {
  _has_bits_[0] |= 0x00000040u;
}
inline void MsgPlantInfo_PlantInfo::clear_has_grow_begin() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void MsgPlantInfo_PlantInfo::clear_grow_begin() {
  grow_begin_ = GOOGLE_LONGLONG(0);
  clear_has_grow_begin();
}
inline ::google::protobuf::int64 MsgPlantInfo_PlantInfo::grow_begin() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgPlantInfo.PlantInfo.grow_begin)
  return grow_begin_;
}
inline void MsgPlantInfo_PlantInfo::set_grow_begin(::google::protobuf::int64 value) {
  set_has_grow_begin();
  grow_begin_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgPlantInfo.PlantInfo.grow_begin)
}

// optional int32 grow_time = 8;
inline bool MsgPlantInfo_PlantInfo::has_grow_time() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void MsgPlantInfo_PlantInfo::set_has_grow_time() {
  _has_bits_[0] |= 0x00000080u;
}
inline void MsgPlantInfo_PlantInfo::clear_has_grow_time() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void MsgPlantInfo_PlantInfo::clear_grow_time() {
  grow_time_ = 0;
  clear_has_grow_time();
}
inline ::google::protobuf::int32 MsgPlantInfo_PlantInfo::grow_time() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgPlantInfo.PlantInfo.grow_time)
  return grow_time_;
}
inline void MsgPlantInfo_PlantInfo::set_grow_time(::google::protobuf::int32 value) {
  set_has_grow_time();
  grow_time_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgPlantInfo.PlantInfo.grow_time)
}

// optional int64 protectorId = 9;
inline bool MsgPlantInfo_PlantInfo::has_protectorid() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void MsgPlantInfo_PlantInfo::set_has_protectorid() {
  _has_bits_[0] |= 0x00000100u;
}
inline void MsgPlantInfo_PlantInfo::clear_has_protectorid() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void MsgPlantInfo_PlantInfo::clear_protectorid() {
  protectorid_ = GOOGLE_LONGLONG(0);
  clear_has_protectorid();
}
inline ::google::protobuf::int64 MsgPlantInfo_PlantInfo::protectorid() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgPlantInfo.PlantInfo.protectorId)
  return protectorid_;
}
inline void MsgPlantInfo_PlantInfo::set_protectorid(::google::protobuf::int64 value) {
  set_has_protectorid();
  protectorid_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgPlantInfo.PlantInfo.protectorId)
}

// -------------------------------------------------------------------

// MsgPlantInfo

// optional .MsgPB.EMsgType msgType = 1 [default = _MSG_PLANT_INFO];
inline bool MsgPlantInfo::has_msgtype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgPlantInfo::set_has_msgtype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgPlantInfo::clear_has_msgtype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgPlantInfo::clear_msgtype() {
  msgtype_ = 1306;
  clear_has_msgtype();
}
inline ::MsgPB::EMsgType MsgPlantInfo::msgtype() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgPlantInfo.msgType)
  return static_cast< ::MsgPB::EMsgType >(msgtype_);
}
inline void MsgPlantInfo::set_msgtype(::MsgPB::EMsgType value) {
  assert(::MsgPB::EMsgType_IsValid(value));
  set_has_msgtype();
  msgtype_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgPlantInfo.msgType)
}

// optional int64 iggid = 2;
inline bool MsgPlantInfo::has_iggid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MsgPlantInfo::set_has_iggid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MsgPlantInfo::clear_has_iggid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MsgPlantInfo::clear_iggid() {
  iggid_ = GOOGLE_LONGLONG(0);
  clear_has_iggid();
}
inline ::google::protobuf::int64 MsgPlantInfo::iggid() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgPlantInfo.iggid)
  return iggid_;
}
inline void MsgPlantInfo::set_iggid(::google::protobuf::int64 value) {
  set_has_iggid();
  iggid_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgPlantInfo.iggid)
}

// optional .MsgPB.PLANT_INFO_TYPE info_type = 3;
inline bool MsgPlantInfo::has_info_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MsgPlantInfo::set_has_info_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MsgPlantInfo::clear_has_info_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MsgPlantInfo::clear_info_type() {
  info_type_ = 0;
  clear_has_info_type();
}
inline ::MsgPB::PLANT_INFO_TYPE MsgPlantInfo::info_type() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgPlantInfo.info_type)
  return static_cast< ::MsgPB::PLANT_INFO_TYPE >(info_type_);
}
inline void MsgPlantInfo::set_info_type(::MsgPB::PLANT_INFO_TYPE value) {
  assert(::MsgPB::PLANT_INFO_TYPE_IsValid(value));
  set_has_info_type();
  info_type_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgPlantInfo.info_type)
}

// repeated .MsgPB.MsgPlantInfo.PlantInfo plant_info = 4;
inline int MsgPlantInfo::plant_info_size() const {
  return plant_info_.size();
}
inline void MsgPlantInfo::clear_plant_info() {
  plant_info_.Clear();
}
inline const ::MsgPB::MsgPlantInfo_PlantInfo& MsgPlantInfo::plant_info(int index) const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgPlantInfo.plant_info)
  return plant_info_.Get(index);
}
inline ::MsgPB::MsgPlantInfo_PlantInfo* MsgPlantInfo::mutable_plant_info(int index) {
  // @@protoc_insertion_point(field_mutable:MsgPB.MsgPlantInfo.plant_info)
  return plant_info_.Mutable(index);
}
inline ::MsgPB::MsgPlantInfo_PlantInfo* MsgPlantInfo::add_plant_info() {
  // @@protoc_insertion_point(field_add:MsgPB.MsgPlantInfo.plant_info)
  return plant_info_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::MsgPB::MsgPlantInfo_PlantInfo >&
MsgPlantInfo::plant_info() const {
  // @@protoc_insertion_point(field_list:MsgPB.MsgPlantInfo.plant_info)
  return plant_info_;
}
inline ::google::protobuf::RepeatedPtrField< ::MsgPB::MsgPlantInfo_PlantInfo >*
MsgPlantInfo::mutable_plant_info() {
  // @@protoc_insertion_point(field_mutable_list:MsgPB.MsgPlantInfo.plant_info)
  return &plant_info_;
}

// optional int32 mapid = 5;
inline bool MsgPlantInfo::has_mapid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void MsgPlantInfo::set_has_mapid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void MsgPlantInfo::clear_has_mapid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void MsgPlantInfo::clear_mapid() {
  mapid_ = 0;
  clear_has_mapid();
}
inline ::google::protobuf::int32 MsgPlantInfo::mapid() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgPlantInfo.mapid)
  return mapid_;
}
inline void MsgPlantInfo::set_mapid(::google::protobuf::int32 value) {
  set_has_mapid();
  mapid_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgPlantInfo.mapid)
}

// optional int32 binit = 6 [default = 0];
inline bool MsgPlantInfo::has_binit() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void MsgPlantInfo::set_has_binit() {
  _has_bits_[0] |= 0x00000020u;
}
inline void MsgPlantInfo::clear_has_binit() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void MsgPlantInfo::clear_binit() {
  binit_ = 0;
  clear_has_binit();
}
inline ::google::protobuf::int32 MsgPlantInfo::binit() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgPlantInfo.binit)
  return binit_;
}
inline void MsgPlantInfo::set_binit(::google::protobuf::int32 value) {
  set_has_binit();
  binit_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgPlantInfo.binit)
}

// -------------------------------------------------------------------

// MsgPlantGrowSpeedUp_C2S

// optional .MsgPB.EMsgType msgType = 1 [default = _MSG_PLANT_GROW_SPEEDUP_C2S];
inline bool MsgPlantGrowSpeedUp_C2S::has_msgtype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgPlantGrowSpeedUp_C2S::set_has_msgtype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgPlantGrowSpeedUp_C2S::clear_has_msgtype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgPlantGrowSpeedUp_C2S::clear_msgtype() {
  msgtype_ = 1311;
  clear_has_msgtype();
}
inline ::MsgPB::EMsgType MsgPlantGrowSpeedUp_C2S::msgtype() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgPlantGrowSpeedUp_C2S.msgType)
  return static_cast< ::MsgPB::EMsgType >(msgtype_);
}
inline void MsgPlantGrowSpeedUp_C2S::set_msgtype(::MsgPB::EMsgType value) {
  assert(::MsgPB::EMsgType_IsValid(value));
  set_has_msgtype();
  msgtype_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgPlantGrowSpeedUp_C2S.msgType)
}

// optional int32 pos_x = 2;
inline bool MsgPlantGrowSpeedUp_C2S::has_pos_x() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MsgPlantGrowSpeedUp_C2S::set_has_pos_x() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MsgPlantGrowSpeedUp_C2S::clear_has_pos_x() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MsgPlantGrowSpeedUp_C2S::clear_pos_x() {
  pos_x_ = 0;
  clear_has_pos_x();
}
inline ::google::protobuf::int32 MsgPlantGrowSpeedUp_C2S::pos_x() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgPlantGrowSpeedUp_C2S.pos_x)
  return pos_x_;
}
inline void MsgPlantGrowSpeedUp_C2S::set_pos_x(::google::protobuf::int32 value) {
  set_has_pos_x();
  pos_x_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgPlantGrowSpeedUp_C2S.pos_x)
}

// optional int32 pos_y = 3;
inline bool MsgPlantGrowSpeedUp_C2S::has_pos_y() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MsgPlantGrowSpeedUp_C2S::set_has_pos_y() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MsgPlantGrowSpeedUp_C2S::clear_has_pos_y() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MsgPlantGrowSpeedUp_C2S::clear_pos_y() {
  pos_y_ = 0;
  clear_has_pos_y();
}
inline ::google::protobuf::int32 MsgPlantGrowSpeedUp_C2S::pos_y() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgPlantGrowSpeedUp_C2S.pos_y)
  return pos_y_;
}
inline void MsgPlantGrowSpeedUp_C2S::set_pos_y(::google::protobuf::int32 value) {
  set_has_pos_y();
  pos_y_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgPlantGrowSpeedUp_C2S.pos_y)
}

// optional int32 badge_build_type = 4;
inline bool MsgPlantGrowSpeedUp_C2S::has_badge_build_type() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MsgPlantGrowSpeedUp_C2S::set_has_badge_build_type() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MsgPlantGrowSpeedUp_C2S::clear_has_badge_build_type() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MsgPlantGrowSpeedUp_C2S::clear_badge_build_type() {
  badge_build_type_ = 0;
  clear_has_badge_build_type();
}
inline ::google::protobuf::int32 MsgPlantGrowSpeedUp_C2S::badge_build_type() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgPlantGrowSpeedUp_C2S.badge_build_type)
  return badge_build_type_;
}
inline void MsgPlantGrowSpeedUp_C2S::set_badge_build_type(::google::protobuf::int32 value) {
  set_has_badge_build_type();
  badge_build_type_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgPlantGrowSpeedUp_C2S.badge_build_type)
}

// optional int32 badge_pos_x = 5;
inline bool MsgPlantGrowSpeedUp_C2S::has_badge_pos_x() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void MsgPlantGrowSpeedUp_C2S::set_has_badge_pos_x() {
  _has_bits_[0] |= 0x00000010u;
}
inline void MsgPlantGrowSpeedUp_C2S::clear_has_badge_pos_x() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void MsgPlantGrowSpeedUp_C2S::clear_badge_pos_x() {
  badge_pos_x_ = 0;
  clear_has_badge_pos_x();
}
inline ::google::protobuf::int32 MsgPlantGrowSpeedUp_C2S::badge_pos_x() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgPlantGrowSpeedUp_C2S.badge_pos_x)
  return badge_pos_x_;
}
inline void MsgPlantGrowSpeedUp_C2S::set_badge_pos_x(::google::protobuf::int32 value) {
  set_has_badge_pos_x();
  badge_pos_x_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgPlantGrowSpeedUp_C2S.badge_pos_x)
}

// optional int32 badge_pos_y = 6;
inline bool MsgPlantGrowSpeedUp_C2S::has_badge_pos_y() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void MsgPlantGrowSpeedUp_C2S::set_has_badge_pos_y() {
  _has_bits_[0] |= 0x00000020u;
}
inline void MsgPlantGrowSpeedUp_C2S::clear_has_badge_pos_y() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void MsgPlantGrowSpeedUp_C2S::clear_badge_pos_y() {
  badge_pos_y_ = 0;
  clear_has_badge_pos_y();
}
inline ::google::protobuf::int32 MsgPlantGrowSpeedUp_C2S::badge_pos_y() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgPlantGrowSpeedUp_C2S.badge_pos_y)
  return badge_pos_y_;
}
inline void MsgPlantGrowSpeedUp_C2S::set_badge_pos_y(::google::protobuf::int32 value) {
  set_has_badge_pos_y();
  badge_pos_y_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgPlantGrowSpeedUp_C2S.badge_pos_y)
}

// -------------------------------------------------------------------

// MsgPlantGrowSpeedUp_S2C

// optional .MsgPB.EMsgType msgType = 1 [default = _MSG_PLANT_GROW_SPEEDUP_S2C];
inline bool MsgPlantGrowSpeedUp_S2C::has_msgtype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgPlantGrowSpeedUp_S2C::set_has_msgtype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgPlantGrowSpeedUp_S2C::clear_has_msgtype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgPlantGrowSpeedUp_S2C::clear_msgtype() {
  msgtype_ = 1312;
  clear_has_msgtype();
}
inline ::MsgPB::EMsgType MsgPlantGrowSpeedUp_S2C::msgtype() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgPlantGrowSpeedUp_S2C.msgType)
  return static_cast< ::MsgPB::EMsgType >(msgtype_);
}
inline void MsgPlantGrowSpeedUp_S2C::set_msgtype(::MsgPB::EMsgType value) {
  assert(::MsgPB::EMsgType_IsValid(value));
  set_has_msgtype();
  msgtype_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgPlantGrowSpeedUp_S2C.msgType)
}

// optional int32 pos_x = 4;
inline bool MsgPlantGrowSpeedUp_S2C::has_pos_x() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MsgPlantGrowSpeedUp_S2C::set_has_pos_x() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MsgPlantGrowSpeedUp_S2C::clear_has_pos_x() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MsgPlantGrowSpeedUp_S2C::clear_pos_x() {
  pos_x_ = 0;
  clear_has_pos_x();
}
inline ::google::protobuf::int32 MsgPlantGrowSpeedUp_S2C::pos_x() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgPlantGrowSpeedUp_S2C.pos_x)
  return pos_x_;
}
inline void MsgPlantGrowSpeedUp_S2C::set_pos_x(::google::protobuf::int32 value) {
  set_has_pos_x();
  pos_x_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgPlantGrowSpeedUp_S2C.pos_x)
}

// optional int32 pos_y = 5;
inline bool MsgPlantGrowSpeedUp_S2C::has_pos_y() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MsgPlantGrowSpeedUp_S2C::set_has_pos_y() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MsgPlantGrowSpeedUp_S2C::clear_has_pos_y() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MsgPlantGrowSpeedUp_S2C::clear_pos_y() {
  pos_y_ = 0;
  clear_has_pos_y();
}
inline ::google::protobuf::int32 MsgPlantGrowSpeedUp_S2C::pos_y() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgPlantGrowSpeedUp_S2C.pos_y)
  return pos_y_;
}
inline void MsgPlantGrowSpeedUp_S2C::set_pos_y(::google::protobuf::int32 value) {
  set_has_pos_y();
  pos_y_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgPlantGrowSpeedUp_S2C.pos_y)
}

// optional .MsgPB.PLANT_RESULT res = 6;
inline bool MsgPlantGrowSpeedUp_S2C::has_res() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MsgPlantGrowSpeedUp_S2C::set_has_res() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MsgPlantGrowSpeedUp_S2C::clear_has_res() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MsgPlantGrowSpeedUp_S2C::clear_res() {
  res_ = 0;
  clear_has_res();
}
inline ::MsgPB::PLANT_RESULT MsgPlantGrowSpeedUp_S2C::res() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgPlantGrowSpeedUp_S2C.res)
  return static_cast< ::MsgPB::PLANT_RESULT >(res_);
}
inline void MsgPlantGrowSpeedUp_S2C::set_res(::MsgPB::PLANT_RESULT value) {
  assert(::MsgPB::PLANT_RESULT_IsValid(value));
  set_has_res();
  res_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgPlantGrowSpeedUp_S2C.res)
}

// -------------------------------------------------------------------

// UserPlantInfo

// optional int32 plant_type = 1;
inline bool UserPlantInfo::has_plant_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UserPlantInfo::set_has_plant_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UserPlantInfo::clear_has_plant_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UserPlantInfo::clear_plant_type() {
  plant_type_ = 0;
  clear_has_plant_type();
}
inline ::google::protobuf::int32 UserPlantInfo::plant_type() const {
  // @@protoc_insertion_point(field_get:MsgPB.UserPlantInfo.plant_type)
  return plant_type_;
}
inline void UserPlantInfo::set_plant_type(::google::protobuf::int32 value) {
  set_has_plant_type();
  plant_type_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.UserPlantInfo.plant_type)
}

// optional int32 pos_x = 2;
inline bool UserPlantInfo::has_pos_x() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UserPlantInfo::set_has_pos_x() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UserPlantInfo::clear_has_pos_x() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UserPlantInfo::clear_pos_x() {
  pos_x_ = 0;
  clear_has_pos_x();
}
inline ::google::protobuf::int32 UserPlantInfo::pos_x() const {
  // @@protoc_insertion_point(field_get:MsgPB.UserPlantInfo.pos_x)
  return pos_x_;
}
inline void UserPlantInfo::set_pos_x(::google::protobuf::int32 value) {
  set_has_pos_x();
  pos_x_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.UserPlantInfo.pos_x)
}

// optional int32 pos_y = 3;
inline bool UserPlantInfo::has_pos_y() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void UserPlantInfo::set_has_pos_y() {
  _has_bits_[0] |= 0x00000004u;
}
inline void UserPlantInfo::clear_has_pos_y() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void UserPlantInfo::clear_pos_y() {
  pos_y_ = 0;
  clear_has_pos_y();
}
inline ::google::protobuf::int32 UserPlantInfo::pos_y() const {
  // @@protoc_insertion_point(field_get:MsgPB.UserPlantInfo.pos_y)
  return pos_y_;
}
inline void UserPlantInfo::set_pos_y(::google::protobuf::int32 value) {
  set_has_pos_y();
  pos_y_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.UserPlantInfo.pos_y)
}

// optional int32 grow_stage = 4;
inline bool UserPlantInfo::has_grow_stage() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void UserPlantInfo::set_has_grow_stage() {
  _has_bits_[0] |= 0x00000008u;
}
inline void UserPlantInfo::clear_has_grow_stage() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void UserPlantInfo::clear_grow_stage() {
  grow_stage_ = 0;
  clear_has_grow_stage();
}
inline ::google::protobuf::int32 UserPlantInfo::grow_stage() const {
  // @@protoc_insertion_point(field_get:MsgPB.UserPlantInfo.grow_stage)
  return grow_stage_;
}
inline void UserPlantInfo::set_grow_stage(::google::protobuf::int32 value) {
  set_has_grow_stage();
  grow_stage_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.UserPlantInfo.grow_stage)
}

// optional int64 plant_id = 6;
inline bool UserPlantInfo::has_plant_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void UserPlantInfo::set_has_plant_id() {
  _has_bits_[0] |= 0x00000010u;
}
inline void UserPlantInfo::clear_has_plant_id() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void UserPlantInfo::clear_plant_id() {
  plant_id_ = GOOGLE_LONGLONG(0);
  clear_has_plant_id();
}
inline ::google::protobuf::int64 UserPlantInfo::plant_id() const {
  // @@protoc_insertion_point(field_get:MsgPB.UserPlantInfo.plant_id)
  return plant_id_;
}
inline void UserPlantInfo::set_plant_id(::google::protobuf::int64 value) {
  set_has_plant_id();
  plant_id_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.UserPlantInfo.plant_id)
}

// optional int64 grow_begin = 7;
inline bool UserPlantInfo::has_grow_begin() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void UserPlantInfo::set_has_grow_begin() {
  _has_bits_[0] |= 0x00000020u;
}
inline void UserPlantInfo::clear_has_grow_begin() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void UserPlantInfo::clear_grow_begin() {
  grow_begin_ = GOOGLE_LONGLONG(0);
  clear_has_grow_begin();
}
inline ::google::protobuf::int64 UserPlantInfo::grow_begin() const {
  // @@protoc_insertion_point(field_get:MsgPB.UserPlantInfo.grow_begin)
  return grow_begin_;
}
inline void UserPlantInfo::set_grow_begin(::google::protobuf::int64 value) {
  set_has_grow_begin();
  grow_begin_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.UserPlantInfo.grow_begin)
}

// optional int32 grow_time = 8;
inline bool UserPlantInfo::has_grow_time() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void UserPlantInfo::set_has_grow_time() {
  _has_bits_[0] |= 0x00000040u;
}
inline void UserPlantInfo::clear_has_grow_time() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void UserPlantInfo::clear_grow_time() {
  grow_time_ = 0;
  clear_has_grow_time();
}
inline ::google::protobuf::int32 UserPlantInfo::grow_time() const {
  // @@protoc_insertion_point(field_get:MsgPB.UserPlantInfo.grow_time)
  return grow_time_;
}
inline void UserPlantInfo::set_grow_time(::google::protobuf::int32 value) {
  set_has_grow_time();
  grow_time_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.UserPlantInfo.grow_time)
}

// optional int64 protectorId = 9;
inline bool UserPlantInfo::has_protectorid() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void UserPlantInfo::set_has_protectorid() {
  _has_bits_[0] |= 0x00000080u;
}
inline void UserPlantInfo::clear_has_protectorid() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void UserPlantInfo::clear_protectorid() {
  protectorid_ = GOOGLE_LONGLONG(0);
  clear_has_protectorid();
}
inline ::google::protobuf::int64 UserPlantInfo::protectorid() const {
  // @@protoc_insertion_point(field_get:MsgPB.UserPlantInfo.protectorId)
  return protectorid_;
}
inline void UserPlantInfo::set_protectorid(::google::protobuf::int64 value) {
  set_has_protectorid();
  protectorid_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.UserPlantInfo.protectorId)
}

// -------------------------------------------------------------------

// MsgPlantUserInitData_S2C

// optional .MsgPB.EMsgType msgType = 1 [default = _MSG_PLANT_USER_INIT_DATA_S2C];
inline bool MsgPlantUserInitData_S2C::has_msgtype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgPlantUserInitData_S2C::set_has_msgtype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgPlantUserInitData_S2C::clear_has_msgtype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgPlantUserInitData_S2C::clear_msgtype() {
  msgtype_ = 1313;
  clear_has_msgtype();
}
inline ::MsgPB::EMsgType MsgPlantUserInitData_S2C::msgtype() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgPlantUserInitData_S2C.msgType)
  return static_cast< ::MsgPB::EMsgType >(msgtype_);
}
inline void MsgPlantUserInitData_S2C::set_msgtype(::MsgPB::EMsgType value) {
  assert(::MsgPB::EMsgType_IsValid(value));
  set_has_msgtype();
  msgtype_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgPlantUserInitData_S2C.msgType)
}

// optional int64 iggid = 2;
inline bool MsgPlantUserInitData_S2C::has_iggid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MsgPlantUserInitData_S2C::set_has_iggid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MsgPlantUserInitData_S2C::clear_has_iggid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MsgPlantUserInitData_S2C::clear_iggid() {
  iggid_ = GOOGLE_LONGLONG(0);
  clear_has_iggid();
}
inline ::google::protobuf::int64 MsgPlantUserInitData_S2C::iggid() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgPlantUserInitData_S2C.iggid)
  return iggid_;
}
inline void MsgPlantUserInitData_S2C::set_iggid(::google::protobuf::int64 value) {
  set_has_iggid();
  iggid_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgPlantUserInitData_S2C.iggid)
}

// repeated .MsgPB.UserPlantInfo plant_info = 3;
inline int MsgPlantUserInitData_S2C::plant_info_size() const {
  return plant_info_.size();
}
inline void MsgPlantUserInitData_S2C::clear_plant_info() {
  plant_info_.Clear();
}
inline const ::MsgPB::UserPlantInfo& MsgPlantUserInitData_S2C::plant_info(int index) const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgPlantUserInitData_S2C.plant_info)
  return plant_info_.Get(index);
}
inline ::MsgPB::UserPlantInfo* MsgPlantUserInitData_S2C::mutable_plant_info(int index) {
  // @@protoc_insertion_point(field_mutable:MsgPB.MsgPlantUserInitData_S2C.plant_info)
  return plant_info_.Mutable(index);
}
inline ::MsgPB::UserPlantInfo* MsgPlantUserInitData_S2C::add_plant_info() {
  // @@protoc_insertion_point(field_add:MsgPB.MsgPlantUserInitData_S2C.plant_info)
  return plant_info_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::MsgPB::UserPlantInfo >&
MsgPlantUserInitData_S2C::plant_info() const {
  // @@protoc_insertion_point(field_list:MsgPB.MsgPlantUserInitData_S2C.plant_info)
  return plant_info_;
}
inline ::google::protobuf::RepeatedPtrField< ::MsgPB::UserPlantInfo >*
MsgPlantUserInitData_S2C::mutable_plant_info() {
  // @@protoc_insertion_point(field_mutable_list:MsgPB.MsgPlantUserInitData_S2C.plant_info)
  return &plant_info_;
}

// optional int32 mapid = 4;
inline bool MsgPlantUserInitData_S2C::has_mapid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MsgPlantUserInitData_S2C::set_has_mapid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MsgPlantUserInitData_S2C::clear_has_mapid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MsgPlantUserInitData_S2C::clear_mapid() {
  mapid_ = 0;
  clear_has_mapid();
}
inline ::google::protobuf::int32 MsgPlantUserInitData_S2C::mapid() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgPlantUserInitData_S2C.mapid)
  return mapid_;
}
inline void MsgPlantUserInitData_S2C::set_mapid(::google::protobuf::int32 value) {
  set_has_mapid();
  mapid_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgPlantUserInitData_S2C.mapid)
}

// optional int32 tail = 5 [default = 0];
inline bool MsgPlantUserInitData_S2C::has_tail() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void MsgPlantUserInitData_S2C::set_has_tail() {
  _has_bits_[0] |= 0x00000010u;
}
inline void MsgPlantUserInitData_S2C::clear_has_tail() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void MsgPlantUserInitData_S2C::clear_tail() {
  tail_ = 0;
  clear_has_tail();
}
inline ::google::protobuf::int32 MsgPlantUserInitData_S2C::tail() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgPlantUserInitData_S2C.tail)
  return tail_;
}
inline void MsgPlantUserInitData_S2C::set_tail(::google::protobuf::int32 value) {
  set_has_tail();
  tail_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgPlantUserInitData_S2C.tail)
}

// -------------------------------------------------------------------

// MsgPlantNpcManger_C2S

// optional .MsgPB.EMsgType msgType = 1 [default = _MSG_PLANT_NPC_MANAGER_C2S];
inline bool MsgPlantNpcManger_C2S::has_msgtype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgPlantNpcManger_C2S::set_has_msgtype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgPlantNpcManger_C2S::clear_has_msgtype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgPlantNpcManger_C2S::clear_msgtype() {
  msgtype_ = 1316;
  clear_has_msgtype();
}
inline ::MsgPB::EMsgType MsgPlantNpcManger_C2S::msgtype() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgPlantNpcManger_C2S.msgType)
  return static_cast< ::MsgPB::EMsgType >(msgtype_);
}
inline void MsgPlantNpcManger_C2S::set_msgtype(::MsgPB::EMsgType value) {
  assert(::MsgPB::EMsgType_IsValid(value));
  set_has_msgtype();
  msgtype_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgPlantNpcManger_C2S.msgType)
}

// optional int64 iggid = 2;
inline bool MsgPlantNpcManger_C2S::has_iggid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MsgPlantNpcManger_C2S::set_has_iggid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MsgPlantNpcManger_C2S::clear_has_iggid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MsgPlantNpcManger_C2S::clear_iggid() {
  iggid_ = GOOGLE_LONGLONG(0);
  clear_has_iggid();
}
inline ::google::protobuf::int64 MsgPlantNpcManger_C2S::iggid() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgPlantNpcManger_C2S.iggid)
  return iggid_;
}
inline void MsgPlantNpcManger_C2S::set_iggid(::google::protobuf::int64 value) {
  set_has_iggid();
  iggid_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgPlantNpcManger_C2S.iggid)
}

// optional int32 pos_x = 3;
inline bool MsgPlantNpcManger_C2S::has_pos_x() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MsgPlantNpcManger_C2S::set_has_pos_x() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MsgPlantNpcManger_C2S::clear_has_pos_x() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MsgPlantNpcManger_C2S::clear_pos_x() {
  pos_x_ = 0;
  clear_has_pos_x();
}
inline ::google::protobuf::int32 MsgPlantNpcManger_C2S::pos_x() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgPlantNpcManger_C2S.pos_x)
  return pos_x_;
}
inline void MsgPlantNpcManger_C2S::set_pos_x(::google::protobuf::int32 value) {
  set_has_pos_x();
  pos_x_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgPlantNpcManger_C2S.pos_x)
}

// optional int32 pos_y = 4;
inline bool MsgPlantNpcManger_C2S::has_pos_y() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MsgPlantNpcManger_C2S::set_has_pos_y() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MsgPlantNpcManger_C2S::clear_has_pos_y() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MsgPlantNpcManger_C2S::clear_pos_y() {
  pos_y_ = 0;
  clear_has_pos_y();
}
inline ::google::protobuf::int32 MsgPlantNpcManger_C2S::pos_y() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgPlantNpcManger_C2S.pos_y)
  return pos_y_;
}
inline void MsgPlantNpcManger_C2S::set_pos_y(::google::protobuf::int32 value) {
  set_has_pos_y();
  pos_y_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgPlantNpcManger_C2S.pos_y)
}

// optional int64 protector_id = 5;
inline bool MsgPlantNpcManger_C2S::has_protector_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void MsgPlantNpcManger_C2S::set_has_protector_id() {
  _has_bits_[0] |= 0x00000010u;
}
inline void MsgPlantNpcManger_C2S::clear_has_protector_id() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void MsgPlantNpcManger_C2S::clear_protector_id() {
  protector_id_ = GOOGLE_LONGLONG(0);
  clear_has_protector_id();
}
inline ::google::protobuf::int64 MsgPlantNpcManger_C2S::protector_id() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgPlantNpcManger_C2S.protector_id)
  return protector_id_;
}
inline void MsgPlantNpcManger_C2S::set_protector_id(::google::protobuf::int64 value) {
  set_has_protector_id();
  protector_id_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgPlantNpcManger_C2S.protector_id)
}

// -------------------------------------------------------------------

// MsgPlantNpcManger_S2C

// optional .MsgPB.EMsgType msgType = 1 [default = _MSG_PLANT_NPC_MANAGER_S2C];
inline bool MsgPlantNpcManger_S2C::has_msgtype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgPlantNpcManger_S2C::set_has_msgtype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgPlantNpcManger_S2C::clear_has_msgtype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgPlantNpcManger_S2C::clear_msgtype() {
  msgtype_ = 1317;
  clear_has_msgtype();
}
inline ::MsgPB::EMsgType MsgPlantNpcManger_S2C::msgtype() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgPlantNpcManger_S2C.msgType)
  return static_cast< ::MsgPB::EMsgType >(msgtype_);
}
inline void MsgPlantNpcManger_S2C::set_msgtype(::MsgPB::EMsgType value) {
  assert(::MsgPB::EMsgType_IsValid(value));
  set_has_msgtype();
  msgtype_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgPlantNpcManger_S2C.msgType)
}

// optional int64 iggid = 2;
inline bool MsgPlantNpcManger_S2C::has_iggid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MsgPlantNpcManger_S2C::set_has_iggid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MsgPlantNpcManger_S2C::clear_has_iggid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MsgPlantNpcManger_S2C::clear_iggid() {
  iggid_ = GOOGLE_LONGLONG(0);
  clear_has_iggid();
}
inline ::google::protobuf::int64 MsgPlantNpcManger_S2C::iggid() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgPlantNpcManger_S2C.iggid)
  return iggid_;
}
inline void MsgPlantNpcManger_S2C::set_iggid(::google::protobuf::int64 value) {
  set_has_iggid();
  iggid_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgPlantNpcManger_S2C.iggid)
}

// optional int32 pos_x = 3;
inline bool MsgPlantNpcManger_S2C::has_pos_x() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MsgPlantNpcManger_S2C::set_has_pos_x() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MsgPlantNpcManger_S2C::clear_has_pos_x() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MsgPlantNpcManger_S2C::clear_pos_x() {
  pos_x_ = 0;
  clear_has_pos_x();
}
inline ::google::protobuf::int32 MsgPlantNpcManger_S2C::pos_x() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgPlantNpcManger_S2C.pos_x)
  return pos_x_;
}
inline void MsgPlantNpcManger_S2C::set_pos_x(::google::protobuf::int32 value) {
  set_has_pos_x();
  pos_x_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgPlantNpcManger_S2C.pos_x)
}

// optional int32 pos_y = 4;
inline bool MsgPlantNpcManger_S2C::has_pos_y() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MsgPlantNpcManger_S2C::set_has_pos_y() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MsgPlantNpcManger_S2C::clear_has_pos_y() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MsgPlantNpcManger_S2C::clear_pos_y() {
  pos_y_ = 0;
  clear_has_pos_y();
}
inline ::google::protobuf::int32 MsgPlantNpcManger_S2C::pos_y() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgPlantNpcManger_S2C.pos_y)
  return pos_y_;
}
inline void MsgPlantNpcManger_S2C::set_pos_y(::google::protobuf::int32 value) {
  set_has_pos_y();
  pos_y_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgPlantNpcManger_S2C.pos_y)
}

// optional int64 protector_id = 5;
inline bool MsgPlantNpcManger_S2C::has_protector_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void MsgPlantNpcManger_S2C::set_has_protector_id() {
  _has_bits_[0] |= 0x00000010u;
}
inline void MsgPlantNpcManger_S2C::clear_has_protector_id() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void MsgPlantNpcManger_S2C::clear_protector_id() {
  protector_id_ = GOOGLE_LONGLONG(0);
  clear_has_protector_id();
}
inline ::google::protobuf::int64 MsgPlantNpcManger_S2C::protector_id() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgPlantNpcManger_S2C.protector_id)
  return protector_id_;
}
inline void MsgPlantNpcManger_S2C::set_protector_id(::google::protobuf::int64 value) {
  set_has_protector_id();
  protector_id_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgPlantNpcManger_S2C.protector_id)
}

// optional .MsgPB.MsgPlantNpcManger_S2C.PLANT_MAN_RESULT res = 6;
inline bool MsgPlantNpcManger_S2C::has_res() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void MsgPlantNpcManger_S2C::set_has_res() {
  _has_bits_[0] |= 0x00000020u;
}
inline void MsgPlantNpcManger_S2C::clear_has_res() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void MsgPlantNpcManger_S2C::clear_res() {
  res_ = 0;
  clear_has_res();
}
inline ::MsgPB::MsgPlantNpcManger_S2C_PLANT_MAN_RESULT MsgPlantNpcManger_S2C::res() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgPlantNpcManger_S2C.res)
  return static_cast< ::MsgPB::MsgPlantNpcManger_S2C_PLANT_MAN_RESULT >(res_);
}
inline void MsgPlantNpcManger_S2C::set_res(::MsgPB::MsgPlantNpcManger_S2C_PLANT_MAN_RESULT value) {
  assert(::MsgPB::MsgPlantNpcManger_S2C_PLANT_MAN_RESULT_IsValid(value));
  set_has_res();
  res_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgPlantNpcManger_S2C.res)
}

// -------------------------------------------------------------------

// MsgPlantReportRareSet_C2S

// optional .MsgPB.EMsgType msgType = 1 [default = _MSG_PLANT_REPORT_RARE_SET_C2S];
inline bool MsgPlantReportRareSet_C2S::has_msgtype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgPlantReportRareSet_C2S::set_has_msgtype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgPlantReportRareSet_C2S::clear_has_msgtype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgPlantReportRareSet_C2S::clear_msgtype() {
  msgtype_ = 1314;
  clear_has_msgtype();
}
inline ::MsgPB::EMsgType MsgPlantReportRareSet_C2S::msgtype() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgPlantReportRareSet_C2S.msgType)
  return static_cast< ::MsgPB::EMsgType >(msgtype_);
}
inline void MsgPlantReportRareSet_C2S::set_msgtype(::MsgPB::EMsgType value) {
  assert(::MsgPB::EMsgType_IsValid(value));
  set_has_msgtype();
  msgtype_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgPlantReportRareSet_C2S.msgType)
}

// optional int64 iggid = 2;
inline bool MsgPlantReportRareSet_C2S::has_iggid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MsgPlantReportRareSet_C2S::set_has_iggid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MsgPlantReportRareSet_C2S::clear_has_iggid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MsgPlantReportRareSet_C2S::clear_iggid() {
  iggid_ = GOOGLE_LONGLONG(0);
  clear_has_iggid();
}
inline ::google::protobuf::int64 MsgPlantReportRareSet_C2S::iggid() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgPlantReportRareSet_C2S.iggid)
  return iggid_;
}
inline void MsgPlantReportRareSet_C2S::set_iggid(::google::protobuf::int64 value) {
  set_has_iggid();
  iggid_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgPlantReportRareSet_C2S.iggid)
}

// optional int32 mapid = 3;
inline bool MsgPlantReportRareSet_C2S::has_mapid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MsgPlantReportRareSet_C2S::set_has_mapid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MsgPlantReportRareSet_C2S::clear_has_mapid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MsgPlantReportRareSet_C2S::clear_mapid() {
  mapid_ = 0;
  clear_has_mapid();
}
inline ::google::protobuf::int32 MsgPlantReportRareSet_C2S::mapid() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgPlantReportRareSet_C2S.mapid)
  return mapid_;
}
inline void MsgPlantReportRareSet_C2S::set_mapid(::google::protobuf::int32 value) {
  set_has_mapid();
  mapid_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgPlantReportRareSet_C2S.mapid)
}

// optional int32 plant_x = 4;
inline bool MsgPlantReportRareSet_C2S::has_plant_x() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MsgPlantReportRareSet_C2S::set_has_plant_x() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MsgPlantReportRareSet_C2S::clear_has_plant_x() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MsgPlantReportRareSet_C2S::clear_plant_x() {
  plant_x_ = 0;
  clear_has_plant_x();
}
inline ::google::protobuf::int32 MsgPlantReportRareSet_C2S::plant_x() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgPlantReportRareSet_C2S.plant_x)
  return plant_x_;
}
inline void MsgPlantReportRareSet_C2S::set_plant_x(::google::protobuf::int32 value) {
  set_has_plant_x();
  plant_x_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgPlantReportRareSet_C2S.plant_x)
}

// optional int32 plant_y = 5;
inline bool MsgPlantReportRareSet_C2S::has_plant_y() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void MsgPlantReportRareSet_C2S::set_has_plant_y() {
  _has_bits_[0] |= 0x00000010u;
}
inline void MsgPlantReportRareSet_C2S::clear_has_plant_y() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void MsgPlantReportRareSet_C2S::clear_plant_y() {
  plant_y_ = 0;
  clear_has_plant_y();
}
inline ::google::protobuf::int32 MsgPlantReportRareSet_C2S::plant_y() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgPlantReportRareSet_C2S.plant_y)
  return plant_y_;
}
inline void MsgPlantReportRareSet_C2S::set_plant_y(::google::protobuf::int32 value) {
  set_has_plant_y();
  plant_y_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgPlantReportRareSet_C2S.plant_y)
}

// optional int32 plant_type = 6;
inline bool MsgPlantReportRareSet_C2S::has_plant_type() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void MsgPlantReportRareSet_C2S::set_has_plant_type() {
  _has_bits_[0] |= 0x00000020u;
}
inline void MsgPlantReportRareSet_C2S::clear_has_plant_type() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void MsgPlantReportRareSet_C2S::clear_plant_type() {
  plant_type_ = 0;
  clear_has_plant_type();
}
inline ::google::protobuf::int32 MsgPlantReportRareSet_C2S::plant_type() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgPlantReportRareSet_C2S.plant_type)
  return plant_type_;
}
inline void MsgPlantReportRareSet_C2S::set_plant_type(::google::protobuf::int32 value) {
  set_has_plant_type();
  plant_type_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgPlantReportRareSet_C2S.plant_type)
}

// -------------------------------------------------------------------

// MsgPlantReportRareCut_C2S

// optional .MsgPB.EMsgType msgType = 1 [default = _MSG_PLANT_REPORT_RARE_CUT_C2S];
inline bool MsgPlantReportRareCut_C2S::has_msgtype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgPlantReportRareCut_C2S::set_has_msgtype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgPlantReportRareCut_C2S::clear_has_msgtype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgPlantReportRareCut_C2S::clear_msgtype() {
  msgtype_ = 1315;
  clear_has_msgtype();
}
inline ::MsgPB::EMsgType MsgPlantReportRareCut_C2S::msgtype() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgPlantReportRareCut_C2S.msgType)
  return static_cast< ::MsgPB::EMsgType >(msgtype_);
}
inline void MsgPlantReportRareCut_C2S::set_msgtype(::MsgPB::EMsgType value) {
  assert(::MsgPB::EMsgType_IsValid(value));
  set_has_msgtype();
  msgtype_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgPlantReportRareCut_C2S.msgType)
}

// optional int64 iggid = 2;
inline bool MsgPlantReportRareCut_C2S::has_iggid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MsgPlantReportRareCut_C2S::set_has_iggid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MsgPlantReportRareCut_C2S::clear_has_iggid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MsgPlantReportRareCut_C2S::clear_iggid() {
  iggid_ = GOOGLE_LONGLONG(0);
  clear_has_iggid();
}
inline ::google::protobuf::int64 MsgPlantReportRareCut_C2S::iggid() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgPlantReportRareCut_C2S.iggid)
  return iggid_;
}
inline void MsgPlantReportRareCut_C2S::set_iggid(::google::protobuf::int64 value) {
  set_has_iggid();
  iggid_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgPlantReportRareCut_C2S.iggid)
}

// optional int32 mapid = 3;
inline bool MsgPlantReportRareCut_C2S::has_mapid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MsgPlantReportRareCut_C2S::set_has_mapid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MsgPlantReportRareCut_C2S::clear_has_mapid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MsgPlantReportRareCut_C2S::clear_mapid() {
  mapid_ = 0;
  clear_has_mapid();
}
inline ::google::protobuf::int32 MsgPlantReportRareCut_C2S::mapid() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgPlantReportRareCut_C2S.mapid)
  return mapid_;
}
inline void MsgPlantReportRareCut_C2S::set_mapid(::google::protobuf::int32 value) {
  set_has_mapid();
  mapid_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgPlantReportRareCut_C2S.mapid)
}

// optional int32 plant_x = 4;
inline bool MsgPlantReportRareCut_C2S::has_plant_x() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MsgPlantReportRareCut_C2S::set_has_plant_x() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MsgPlantReportRareCut_C2S::clear_has_plant_x() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MsgPlantReportRareCut_C2S::clear_plant_x() {
  plant_x_ = 0;
  clear_has_plant_x();
}
inline ::google::protobuf::int32 MsgPlantReportRareCut_C2S::plant_x() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgPlantReportRareCut_C2S.plant_x)
  return plant_x_;
}
inline void MsgPlantReportRareCut_C2S::set_plant_x(::google::protobuf::int32 value) {
  set_has_plant_x();
  plant_x_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgPlantReportRareCut_C2S.plant_x)
}

// optional int32 plant_y = 5;
inline bool MsgPlantReportRareCut_C2S::has_plant_y() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void MsgPlantReportRareCut_C2S::set_has_plant_y() {
  _has_bits_[0] |= 0x00000010u;
}
inline void MsgPlantReportRareCut_C2S::clear_has_plant_y() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void MsgPlantReportRareCut_C2S::clear_plant_y() {
  plant_y_ = 0;
  clear_has_plant_y();
}
inline ::google::protobuf::int32 MsgPlantReportRareCut_C2S::plant_y() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgPlantReportRareCut_C2S.plant_y)
  return plant_y_;
}
inline void MsgPlantReportRareCut_C2S::set_plant_y(::google::protobuf::int32 value) {
  set_has_plant_y();
  plant_y_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgPlantReportRareCut_C2S.plant_y)
}

// optional int32 plant_type = 6;
inline bool MsgPlantReportRareCut_C2S::has_plant_type() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void MsgPlantReportRareCut_C2S::set_has_plant_type() {
  _has_bits_[0] |= 0x00000020u;
}
inline void MsgPlantReportRareCut_C2S::clear_has_plant_type() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void MsgPlantReportRareCut_C2S::clear_plant_type() {
  plant_type_ = 0;
  clear_has_plant_type();
}
inline ::google::protobuf::int32 MsgPlantReportRareCut_C2S::plant_type() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgPlantReportRareCut_C2S.plant_type)
  return plant_type_;
}
inline void MsgPlantReportRareCut_C2S::set_plant_type(::google::protobuf::int32 value) {
  set_has_plant_type();
  plant_type_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgPlantReportRareCut_C2S.plant_type)
}

// repeated .MsgPB.PBDropInfo drop_info = 7;
inline int MsgPlantReportRareCut_C2S::drop_info_size() const {
  return drop_info_.size();
}
inline void MsgPlantReportRareCut_C2S::clear_drop_info() {
  drop_info_.Clear();
}
inline const ::MsgPB::PBDropInfo& MsgPlantReportRareCut_C2S::drop_info(int index) const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgPlantReportRareCut_C2S.drop_info)
  return drop_info_.Get(index);
}
inline ::MsgPB::PBDropInfo* MsgPlantReportRareCut_C2S::mutable_drop_info(int index) {
  // @@protoc_insertion_point(field_mutable:MsgPB.MsgPlantReportRareCut_C2S.drop_info)
  return drop_info_.Mutable(index);
}
inline ::MsgPB::PBDropInfo* MsgPlantReportRareCut_C2S::add_drop_info() {
  // @@protoc_insertion_point(field_add:MsgPB.MsgPlantReportRareCut_C2S.drop_info)
  return drop_info_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::MsgPB::PBDropInfo >&
MsgPlantReportRareCut_C2S::drop_info() const {
  // @@protoc_insertion_point(field_list:MsgPB.MsgPlantReportRareCut_C2S.drop_info)
  return drop_info_;
}
inline ::google::protobuf::RepeatedPtrField< ::MsgPB::PBDropInfo >*
MsgPlantReportRareCut_C2S::mutable_drop_info() {
  // @@protoc_insertion_point(field_mutable_list:MsgPB.MsgPlantReportRareCut_C2S.drop_info)
  return &drop_info_;
}

// optional int32 drop_id = 8;
inline bool MsgPlantReportRareCut_C2S::has_drop_id() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void MsgPlantReportRareCut_C2S::set_has_drop_id() {
  _has_bits_[0] |= 0x00000080u;
}
inline void MsgPlantReportRareCut_C2S::clear_has_drop_id() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void MsgPlantReportRareCut_C2S::clear_drop_id() {
  drop_id_ = 0;
  clear_has_drop_id();
}
inline ::google::protobuf::int32 MsgPlantReportRareCut_C2S::drop_id() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgPlantReportRareCut_C2S.drop_id)
  return drop_id_;
}
inline void MsgPlantReportRareCut_C2S::set_drop_id(::google::protobuf::int32 value) {
  set_has_drop_id();
  drop_id_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgPlantReportRareCut_C2S.drop_id)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace MsgPB

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::MsgPB::MsgPlantNpcManger_S2C_PLANT_MAN_RESULT> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::MsgPB::MsgPlantNpcManger_S2C_PLANT_MAN_RESULT>() {
  return ::MsgPB::MsgPlantNpcManger_S2C_PLANT_MAN_RESULT_descriptor();
}
template <> struct is_proto_enum< ::MsgPB::PLANT_RESULT> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::MsgPB::PLANT_RESULT>() {
  return ::MsgPB::PLANT_RESULT_descriptor();
}
template <> struct is_proto_enum< ::MsgPB::PLANT_OPERATE_TYPE> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::MsgPB::PLANT_OPERATE_TYPE>() {
  return ::MsgPB::PLANT_OPERATE_TYPE_descriptor();
}
template <> struct is_proto_enum< ::MsgPB::PLANT_INFO_TYPE> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::MsgPB::PLANT_INFO_TYPE>() {
  return ::MsgPB::PLANT_INFO_TYPE_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_MsgPlant_2eproto__INCLUDED
