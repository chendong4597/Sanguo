// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MsgDungeon.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "MsgDungeon.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace MsgPB {

namespace {

const ::google::protobuf::Descriptor* MsgDungeonData_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgDungeonData_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgDungeonCreateDungeonS2MS_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgDungeonCreateDungeonS2MS_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgDungeonCreateDungeonResultMS2S_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgDungeonCreateDungeonResultMS2S_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgDungeonAskPlayerJoinDungeon_MC2GS_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgDungeonAskPlayerJoinDungeon_MC2GS_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgDungeonNotifyDungeonClose_MS2MC_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgDungeonNotifyDungeonClose_MS2MC_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgDungeonReturnDungeon_MS2MC_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgDungeonReturnDungeon_MS2MC_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgDungeonJoinPrivateMap_MC2GS_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgDungeonJoinPrivateMap_MC2GS_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgDungeonJoinPublicMap_M2GS_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgDungeonJoinPublicMap_M2GS_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgDungeonInfo_MS2C_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgDungeonInfo_MS2C_reflection_ = NULL;
const ::google::protobuf::Descriptor* DungeonChestOpenItem_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DungeonChestOpenItem_reflection_ = NULL;
const ::google::protobuf::Descriptor* DungeonBossChest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DungeonBossChest_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgDungeonBossChest_MS2C_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgDungeonBossChest_MS2C_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgDungeonBossOpenChest_C2MS_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgDungeonBossOpenChest_C2MS_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgDungeonBossOpenChestRs_MS2C_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgDungeonBossOpenChestRs_MS2C_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgDungeonBossDrop_MS2C_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgDungeonBossDrop_MS2C_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgDungeonBossComing_MS2C_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgDungeonBossComing_MS2C_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgDungeonBossKill_MS2C_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgDungeonBossKill_MS2C_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgDungeonDataGet_C2S_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgDungeonDataGet_C2S_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgDungeonData_S2C_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgDungeonData_S2C_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgDungeonNextMob_S2C_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgDungeonNextMob_S2C_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgDungeonSucProExp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgDungeonSucProExp_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgDungeonSucExp_S2C_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgDungeonSucExp_S2C_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* ENUM_DUNGEON_RESULT_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* ENUM_CREATEDUNGEON_TYPE_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* ENUM_CREATEDUNGEON_RESULT_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_MsgDungeon_2eproto() {
  protobuf_AddDesc_MsgDungeon_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "MsgDungeon.proto");
  GOOGLE_CHECK(file != NULL);
  MsgDungeonData_descriptor_ = file->message_type(0);
  static const int MsgDungeonData_offsets_[9] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDungeonData, iggid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDungeonData, mapid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDungeonData, min_take_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDungeonData, dirty_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDungeonData, dungeon_active_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDungeonData, enter_free_count_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDungeonData, enter_free_count_reset_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDungeonData, enter_buy_count_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDungeonData, enter_buy_count_reset_time_),
  };
  MsgDungeonData_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgDungeonData_descriptor_,
      MsgDungeonData::default_instance_,
      MsgDungeonData_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDungeonData, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDungeonData, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgDungeonData));
  MsgDungeonCreateDungeonS2MS_descriptor_ = file->message_type(1);
  static const int MsgDungeonCreateDungeonS2MS_offsets_[12] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDungeonCreateDungeonS2MS, serialid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDungeonCreateDungeonS2MS, msgtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDungeonCreateDungeonS2MS, creator_iggid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDungeonCreateDungeonS2MS, dungeon_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDungeonCreateDungeonS2MS, source_player_iggid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDungeonCreateDungeonS2MS, mapid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDungeonCreateDungeonS2MS, servertype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDungeonCreateDungeonS2MS, newparty_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDungeonCreateDungeonS2MS, partyid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDungeonCreateDungeonS2MS, member_iggid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDungeonCreateDungeonS2MS, teamid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDungeonCreateDungeonS2MS, idarea_),
  };
  MsgDungeonCreateDungeonS2MS_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgDungeonCreateDungeonS2MS_descriptor_,
      MsgDungeonCreateDungeonS2MS::default_instance_,
      MsgDungeonCreateDungeonS2MS_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDungeonCreateDungeonS2MS, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDungeonCreateDungeonS2MS, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgDungeonCreateDungeonS2MS));
  MsgDungeonCreateDungeonResultMS2S_descriptor_ = file->message_type(2);
  static const int MsgDungeonCreateDungeonResultMS2S_offsets_[8] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDungeonCreateDungeonResultMS2S, serialid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDungeonCreateDungeonResultMS2S, msgtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDungeonCreateDungeonResultMS2S, result_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDungeonCreateDungeonResultMS2S, creator_iggid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDungeonCreateDungeonResultMS2S, mapuuid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDungeonCreateDungeonResultMS2S, mapid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDungeonCreateDungeonResultMS2S, mapserverid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDungeonCreateDungeonResultMS2S, dungeon_type_),
  };
  MsgDungeonCreateDungeonResultMS2S_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgDungeonCreateDungeonResultMS2S_descriptor_,
      MsgDungeonCreateDungeonResultMS2S::default_instance_,
      MsgDungeonCreateDungeonResultMS2S_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDungeonCreateDungeonResultMS2S, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDungeonCreateDungeonResultMS2S, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgDungeonCreateDungeonResultMS2S));
  MsgDungeonAskPlayerJoinDungeon_MC2GS_descriptor_ = file->message_type(3);
  static const int MsgDungeonAskPlayerJoinDungeon_MC2GS_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDungeonAskPlayerJoinDungeon_MC2GS, serialid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDungeonAskPlayerJoinDungeon_MC2GS, msgtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDungeonAskPlayerJoinDungeon_MC2GS, iggid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDungeonAskPlayerJoinDungeon_MC2GS, mapuuid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDungeonAskPlayerJoinDungeon_MC2GS, mapserverid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDungeonAskPlayerJoinDungeon_MC2GS, returndungeon_),
  };
  MsgDungeonAskPlayerJoinDungeon_MC2GS_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgDungeonAskPlayerJoinDungeon_MC2GS_descriptor_,
      MsgDungeonAskPlayerJoinDungeon_MC2GS::default_instance_,
      MsgDungeonAskPlayerJoinDungeon_MC2GS_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDungeonAskPlayerJoinDungeon_MC2GS, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDungeonAskPlayerJoinDungeon_MC2GS, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgDungeonAskPlayerJoinDungeon_MC2GS));
  MsgDungeonNotifyDungeonClose_MS2MC_descriptor_ = file->message_type(4);
  static const int MsgDungeonNotifyDungeonClose_MS2MC_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDungeonNotifyDungeonClose_MS2MC, serialid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDungeonNotifyDungeonClose_MS2MC, msgtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDungeonNotifyDungeonClose_MS2MC, mapuuid_),
  };
  MsgDungeonNotifyDungeonClose_MS2MC_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgDungeonNotifyDungeonClose_MS2MC_descriptor_,
      MsgDungeonNotifyDungeonClose_MS2MC::default_instance_,
      MsgDungeonNotifyDungeonClose_MS2MC_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDungeonNotifyDungeonClose_MS2MC, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDungeonNotifyDungeonClose_MS2MC, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgDungeonNotifyDungeonClose_MS2MC));
  MsgDungeonReturnDungeon_MS2MC_descriptor_ = file->message_type(5);
  static const int MsgDungeonReturnDungeon_MS2MC_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDungeonReturnDungeon_MS2MC, msgtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDungeonReturnDungeon_MS2MC, iggid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDungeonReturnDungeon_MS2MC, mapuuid_),
  };
  MsgDungeonReturnDungeon_MS2MC_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgDungeonReturnDungeon_MS2MC_descriptor_,
      MsgDungeonReturnDungeon_MS2MC::default_instance_,
      MsgDungeonReturnDungeon_MS2MC_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDungeonReturnDungeon_MS2MC, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDungeonReturnDungeon_MS2MC, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgDungeonReturnDungeon_MS2MC));
  MsgDungeonJoinPrivateMap_MC2GS_descriptor_ = file->message_type(6);
  static const int MsgDungeonJoinPrivateMap_MC2GS_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDungeonJoinPrivateMap_MC2GS, msgtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDungeonJoinPrivateMap_MC2GS, iggid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDungeonJoinPrivateMap_MC2GS, gate_target_),
  };
  MsgDungeonJoinPrivateMap_MC2GS_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgDungeonJoinPrivateMap_MC2GS_descriptor_,
      MsgDungeonJoinPrivateMap_MC2GS::default_instance_,
      MsgDungeonJoinPrivateMap_MC2GS_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDungeonJoinPrivateMap_MC2GS, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDungeonJoinPrivateMap_MC2GS, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgDungeonJoinPrivateMap_MC2GS));
  MsgDungeonJoinPublicMap_M2GS_descriptor_ = file->message_type(7);
  static const int MsgDungeonJoinPublicMap_M2GS_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDungeonJoinPublicMap_M2GS, msgtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDungeonJoinPublicMap_M2GS, iggid_),
  };
  MsgDungeonJoinPublicMap_M2GS_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgDungeonJoinPublicMap_M2GS_descriptor_,
      MsgDungeonJoinPublicMap_M2GS::default_instance_,
      MsgDungeonJoinPublicMap_M2GS_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDungeonJoinPublicMap_M2GS, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDungeonJoinPublicMap_M2GS, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgDungeonJoinPublicMap_M2GS));
  MsgDungeonInfo_MS2C_descriptor_ = file->message_type(8);
  static const int MsgDungeonInfo_MS2C_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDungeonInfo_MS2C, msgtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDungeonInfo_MS2C, iggid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDungeonInfo_MS2C, start_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDungeonInfo_MS2C, end_time_),
  };
  MsgDungeonInfo_MS2C_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgDungeonInfo_MS2C_descriptor_,
      MsgDungeonInfo_MS2C::default_instance_,
      MsgDungeonInfo_MS2C_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDungeonInfo_MS2C, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDungeonInfo_MS2C, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgDungeonInfo_MS2C));
  DungeonChestOpenItem_descriptor_ = file->message_type(9);
  static const int DungeonChestOpenItem_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DungeonChestOpenItem, data_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DungeonChestOpenItem, count_),
  };
  DungeonChestOpenItem_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      DungeonChestOpenItem_descriptor_,
      DungeonChestOpenItem::default_instance_,
      DungeonChestOpenItem_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DungeonChestOpenItem, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DungeonChestOpenItem, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(DungeonChestOpenItem));
  DungeonBossChest_descriptor_ = file->message_type(10);
  static const int DungeonBossChest_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DungeonBossChest, chest_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DungeonBossChest, chest_reopen_item_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DungeonBossChest, chest_reopen_item_count_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DungeonBossChest, opened_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DungeonBossChest, item_),
  };
  DungeonBossChest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      DungeonBossChest_descriptor_,
      DungeonBossChest::default_instance_,
      DungeonBossChest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DungeonBossChest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DungeonBossChest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(DungeonBossChest));
  MsgDungeonBossChest_MS2C_descriptor_ = file->message_type(11);
  static const int MsgDungeonBossChest_MS2C_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDungeonBossChest_MS2C, msgtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDungeonBossChest_MS2C, iggid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDungeonBossChest_MS2C, chest_),
  };
  MsgDungeonBossChest_MS2C_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgDungeonBossChest_MS2C_descriptor_,
      MsgDungeonBossChest_MS2C::default_instance_,
      MsgDungeonBossChest_MS2C_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDungeonBossChest_MS2C, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDungeonBossChest_MS2C, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgDungeonBossChest_MS2C));
  MsgDungeonBossOpenChest_C2MS_descriptor_ = file->message_type(12);
  static const int MsgDungeonBossOpenChest_C2MS_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDungeonBossOpenChest_C2MS, msgtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDungeonBossOpenChest_C2MS, iggid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDungeonBossOpenChest_C2MS, chest_id_),
  };
  MsgDungeonBossOpenChest_C2MS_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgDungeonBossOpenChest_C2MS_descriptor_,
      MsgDungeonBossOpenChest_C2MS::default_instance_,
      MsgDungeonBossOpenChest_C2MS_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDungeonBossOpenChest_C2MS, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDungeonBossOpenChest_C2MS, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgDungeonBossOpenChest_C2MS));
  MsgDungeonBossOpenChestRs_MS2C_descriptor_ = file->message_type(13);
  static const int MsgDungeonBossOpenChestRs_MS2C_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDungeonBossOpenChestRs_MS2C, msgtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDungeonBossOpenChestRs_MS2C, iggid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDungeonBossOpenChestRs_MS2C, res_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDungeonBossOpenChestRs_MS2C, item_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDungeonBossOpenChestRs_MS2C, drop_info_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDungeonBossOpenChestRs_MS2C, chest_id_),
  };
  MsgDungeonBossOpenChestRs_MS2C_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgDungeonBossOpenChestRs_MS2C_descriptor_,
      MsgDungeonBossOpenChestRs_MS2C::default_instance_,
      MsgDungeonBossOpenChestRs_MS2C_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDungeonBossOpenChestRs_MS2C, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDungeonBossOpenChestRs_MS2C, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgDungeonBossOpenChestRs_MS2C));
  MsgDungeonBossDrop_MS2C_descriptor_ = file->message_type(14);
  static const int MsgDungeonBossDrop_MS2C_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDungeonBossDrop_MS2C, msgtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDungeonBossDrop_MS2C, iggid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDungeonBossDrop_MS2C, mobinsid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDungeonBossDrop_MS2C, mapobjectid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDungeonBossDrop_MS2C, pos_x_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDungeonBossDrop_MS2C, pos_y_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDungeonBossDrop_MS2C, drop_info_),
  };
  MsgDungeonBossDrop_MS2C_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgDungeonBossDrop_MS2C_descriptor_,
      MsgDungeonBossDrop_MS2C::default_instance_,
      MsgDungeonBossDrop_MS2C_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDungeonBossDrop_MS2C, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDungeonBossDrop_MS2C, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgDungeonBossDrop_MS2C));
  MsgDungeonBossComing_MS2C_descriptor_ = file->message_type(15);
  static const int MsgDungeonBossComing_MS2C_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDungeonBossComing_MS2C, msgtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDungeonBossComing_MS2C, iggid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDungeonBossComing_MS2C, mob_ins_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDungeonBossComing_MS2C, map_object_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDungeonBossComing_MS2C, mob_def_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDungeonBossComing_MS2C, pos_x_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDungeonBossComing_MS2C, pos_y_),
  };
  MsgDungeonBossComing_MS2C_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgDungeonBossComing_MS2C_descriptor_,
      MsgDungeonBossComing_MS2C::default_instance_,
      MsgDungeonBossComing_MS2C_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDungeonBossComing_MS2C, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDungeonBossComing_MS2C, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgDungeonBossComing_MS2C));
  MsgDungeonBossKill_MS2C_descriptor_ = file->message_type(16);
  static const int MsgDungeonBossKill_MS2C_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDungeonBossKill_MS2C, msgtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDungeonBossKill_MS2C, iggid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDungeonBossKill_MS2C, mob_ins_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDungeonBossKill_MS2C, map_object_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDungeonBossKill_MS2C, mob_def_id_),
  };
  MsgDungeonBossKill_MS2C_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgDungeonBossKill_MS2C_descriptor_,
      MsgDungeonBossKill_MS2C::default_instance_,
      MsgDungeonBossKill_MS2C_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDungeonBossKill_MS2C, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDungeonBossKill_MS2C, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgDungeonBossKill_MS2C));
  MsgDungeonDataGet_C2S_descriptor_ = file->message_type(17);
  static const int MsgDungeonDataGet_C2S_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDungeonDataGet_C2S, msgtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDungeonDataGet_C2S, iggid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDungeonDataGet_C2S, mapid_),
  };
  MsgDungeonDataGet_C2S_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgDungeonDataGet_C2S_descriptor_,
      MsgDungeonDataGet_C2S::default_instance_,
      MsgDungeonDataGet_C2S_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDungeonDataGet_C2S, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDungeonDataGet_C2S, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgDungeonDataGet_C2S));
  MsgDungeonData_S2C_descriptor_ = file->message_type(18);
  static const int MsgDungeonData_S2C_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDungeonData_S2C, msgtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDungeonData_S2C, iggid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDungeonData_S2C, data_),
  };
  MsgDungeonData_S2C_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgDungeonData_S2C_descriptor_,
      MsgDungeonData_S2C::default_instance_,
      MsgDungeonData_S2C_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDungeonData_S2C, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDungeonData_S2C, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgDungeonData_S2C));
  MsgDungeonNextMob_S2C_descriptor_ = file->message_type(19);
  static const int MsgDungeonNextMob_S2C_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDungeonNextMob_S2C, msgtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDungeonNextMob_S2C, iggid_),
  };
  MsgDungeonNextMob_S2C_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgDungeonNextMob_S2C_descriptor_,
      MsgDungeonNextMob_S2C::default_instance_,
      MsgDungeonNextMob_S2C_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDungeonNextMob_S2C, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDungeonNextMob_S2C, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgDungeonNextMob_S2C));
  MsgDungeonSucProExp_descriptor_ = file->message_type(20);
  static const int MsgDungeonSucProExp_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDungeonSucProExp, uuid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDungeonSucProExp, addlv_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDungeonSucProExp, exp_),
  };
  MsgDungeonSucProExp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgDungeonSucProExp_descriptor_,
      MsgDungeonSucProExp::default_instance_,
      MsgDungeonSucProExp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDungeonSucProExp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDungeonSucProExp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgDungeonSucProExp));
  MsgDungeonSucExp_S2C_descriptor_ = file->message_type(21);
  static const int MsgDungeonSucExp_S2C_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDungeonSucExp_S2C, msgtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDungeonSucExp_S2C, iggid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDungeonSucExp_S2C, addlevel_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDungeonSucExp_S2C, addexp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDungeonSucExp_S2C, proexp_),
  };
  MsgDungeonSucExp_S2C_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgDungeonSucExp_S2C_descriptor_,
      MsgDungeonSucExp_S2C::default_instance_,
      MsgDungeonSucExp_S2C_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDungeonSucExp_S2C, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDungeonSucExp_S2C, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgDungeonSucExp_S2C));
  ENUM_DUNGEON_RESULT_descriptor_ = file->enum_type(0);
  ENUM_CREATEDUNGEON_TYPE_descriptor_ = file->enum_type(1);
  ENUM_CREATEDUNGEON_RESULT_descriptor_ = file->enum_type(2);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_MsgDungeon_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgDungeonData_descriptor_, &MsgDungeonData::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgDungeonCreateDungeonS2MS_descriptor_, &MsgDungeonCreateDungeonS2MS::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgDungeonCreateDungeonResultMS2S_descriptor_, &MsgDungeonCreateDungeonResultMS2S::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgDungeonAskPlayerJoinDungeon_MC2GS_descriptor_, &MsgDungeonAskPlayerJoinDungeon_MC2GS::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgDungeonNotifyDungeonClose_MS2MC_descriptor_, &MsgDungeonNotifyDungeonClose_MS2MC::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgDungeonReturnDungeon_MS2MC_descriptor_, &MsgDungeonReturnDungeon_MS2MC::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgDungeonJoinPrivateMap_MC2GS_descriptor_, &MsgDungeonJoinPrivateMap_MC2GS::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgDungeonJoinPublicMap_M2GS_descriptor_, &MsgDungeonJoinPublicMap_M2GS::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgDungeonInfo_MS2C_descriptor_, &MsgDungeonInfo_MS2C::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    DungeonChestOpenItem_descriptor_, &DungeonChestOpenItem::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    DungeonBossChest_descriptor_, &DungeonBossChest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgDungeonBossChest_MS2C_descriptor_, &MsgDungeonBossChest_MS2C::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgDungeonBossOpenChest_C2MS_descriptor_, &MsgDungeonBossOpenChest_C2MS::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgDungeonBossOpenChestRs_MS2C_descriptor_, &MsgDungeonBossOpenChestRs_MS2C::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgDungeonBossDrop_MS2C_descriptor_, &MsgDungeonBossDrop_MS2C::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgDungeonBossComing_MS2C_descriptor_, &MsgDungeonBossComing_MS2C::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgDungeonBossKill_MS2C_descriptor_, &MsgDungeonBossKill_MS2C::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgDungeonDataGet_C2S_descriptor_, &MsgDungeonDataGet_C2S::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgDungeonData_S2C_descriptor_, &MsgDungeonData_S2C::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgDungeonNextMob_S2C_descriptor_, &MsgDungeonNextMob_S2C::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgDungeonSucProExp_descriptor_, &MsgDungeonSucProExp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgDungeonSucExp_S2C_descriptor_, &MsgDungeonSucExp_S2C::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_MsgDungeon_2eproto() {
  delete MsgDungeonData::default_instance_;
  delete MsgDungeonData_reflection_;
  delete MsgDungeonCreateDungeonS2MS::default_instance_;
  delete MsgDungeonCreateDungeonS2MS_reflection_;
  delete MsgDungeonCreateDungeonResultMS2S::default_instance_;
  delete MsgDungeonCreateDungeonResultMS2S_reflection_;
  delete MsgDungeonAskPlayerJoinDungeon_MC2GS::default_instance_;
  delete MsgDungeonAskPlayerJoinDungeon_MC2GS_reflection_;
  delete MsgDungeonNotifyDungeonClose_MS2MC::default_instance_;
  delete MsgDungeonNotifyDungeonClose_MS2MC_reflection_;
  delete MsgDungeonReturnDungeon_MS2MC::default_instance_;
  delete MsgDungeonReturnDungeon_MS2MC_reflection_;
  delete MsgDungeonJoinPrivateMap_MC2GS::default_instance_;
  delete MsgDungeonJoinPrivateMap_MC2GS_reflection_;
  delete MsgDungeonJoinPublicMap_M2GS::default_instance_;
  delete MsgDungeonJoinPublicMap_M2GS_reflection_;
  delete MsgDungeonInfo_MS2C::default_instance_;
  delete MsgDungeonInfo_MS2C_reflection_;
  delete DungeonChestOpenItem::default_instance_;
  delete DungeonChestOpenItem_reflection_;
  delete DungeonBossChest::default_instance_;
  delete DungeonBossChest_reflection_;
  delete MsgDungeonBossChest_MS2C::default_instance_;
  delete MsgDungeonBossChest_MS2C_reflection_;
  delete MsgDungeonBossOpenChest_C2MS::default_instance_;
  delete MsgDungeonBossOpenChest_C2MS_reflection_;
  delete MsgDungeonBossOpenChestRs_MS2C::default_instance_;
  delete MsgDungeonBossOpenChestRs_MS2C_reflection_;
  delete MsgDungeonBossDrop_MS2C::default_instance_;
  delete MsgDungeonBossDrop_MS2C_reflection_;
  delete MsgDungeonBossComing_MS2C::default_instance_;
  delete MsgDungeonBossComing_MS2C_reflection_;
  delete MsgDungeonBossKill_MS2C::default_instance_;
  delete MsgDungeonBossKill_MS2C_reflection_;
  delete MsgDungeonDataGet_C2S::default_instance_;
  delete MsgDungeonDataGet_C2S_reflection_;
  delete MsgDungeonData_S2C::default_instance_;
  delete MsgDungeonData_S2C_reflection_;
  delete MsgDungeonNextMob_S2C::default_instance_;
  delete MsgDungeonNextMob_S2C_reflection_;
  delete MsgDungeonSucProExp::default_instance_;
  delete MsgDungeonSucProExp_reflection_;
  delete MsgDungeonSucExp_S2C::default_instance_;
  delete MsgDungeonSucExp_S2C_reflection_;
}

void protobuf_AddDesc_MsgDungeon_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::MsgPB::protobuf_AddDesc_MsgType_2eproto();
  ::MsgPB::protobuf_AddDesc_MsgPacketDrop_2eproto();
  ::MsgPB::protobuf_AddDesc_MsgGameDef_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\020MsgDungeon.proto\022\005MsgPB\032\rMsgType.proto"
    "\032\023MsgPacketDrop.proto\032\020MsgGameDef.proto\""
    "\350\001\n\016MsgDungeonData\022\r\n\005iggid\030\001 \001(\003\022\r\n\005map"
    "id\030\002 \001(\003\022\025\n\rmin_take_time\030\003 \001(\005\022\r\n\005dirty"
    "\030\004 \001(\003\022\026\n\016dungeon_active\030\005 \001(\005\022\030\n\020enter_"
    "free_count\030\006 \001(\005\022#\n\033enter_free_count_res"
    "et_time\030\007 \001(\003\022\027\n\017enter_buy_count\030\010 \001(\005\022\""
    "\n\032enter_buy_count_reset_time\030\t \001(\003\"\330\002\n\033M"
    "sgDungeonCreateDungeonS2MS\022\020\n\010SerialID\030\001"
    " \001(\003\022A\n\007msgType\030\002 \001(\0162\017.MsgPB.EMsgType:\037"
    "_MSG_DUNGEON_CREATEDUNGEON_S2MS\022\025\n\rcreat"
    "or_iggid\030\003 \001(\003\0224\n\014dungeon_type\030\004 \001(\0162\036.M"
    "sgPB.ENUM_CREATEDUNGEON_TYPE\022\033\n\023source_p"
    "layer_iggid\030\005 \001(\003\022\r\n\005mapid\030\006 \001(\005\022\022\n\nserv"
    "ertype\030\007 \001(\005\022\020\n\010newparty\030\010 \001(\010\022\017\n\007partyi"
    "d\030\t \001(\003\022\024\n\014member_iggid\030\n \003(\003\022\016\n\006teamid\030"
    "\013 \001(\005\022\016\n\006idArea\030\014 \001(\r\"\257\002\n!MsgDungeonCrea"
    "teDungeonResultMS2S\022\020\n\010SerialID\030\001 \001(\003\022D\n"
    "\007msgType\030\002 \001(\0162\017.MsgPB.EMsgType:\"_MSG_DU"
    "NGEON_CREATEDUNGEON_RS_MS2S\0220\n\006result\030\003 "
    "\001(\0162 .MsgPB.ENUM_CREATEDUNGEON_RESULT\022\025\n"
    "\rcreator_iggid\030\004 \001(\003\022\017\n\007mapuuid\030\005 \001(\003\022\r\n"
    "\005mapid\030\006 \001(\005\022\023\n\013mapserverid\030\007 \001(\005\0224\n\014dun"
    "geon_type\030\010 \001(\0162\036.MsgPB.ENUM_CREATEDUNGE"
    "ON_TYPE\"\322\001\n$MsgDungeonAskPlayerJoinDunge"
    "on_MC2GS\022\020\n\010SerialID\030\001 \001(\003\022L\n\007msgType\030\002 "
    "\001(\0162\017.MsgPB.EMsgType:*_MSG_DUNGEON_ASK_P"
    "LAYER_JOIN_DUNGEON_MC2GS\022\r\n\005iggid\030\003 \001(\003\022"
    "\017\n\007mapuuid\030\004 \001(\003\022\023\n\013mapserverid\030\005 \001(\005\022\025\n"
    "\rreturndungeon\030\006 \001(\010\"\222\001\n\"MsgDungeonNotif"
    "yDungeonClose_MS2MC\022\020\n\010SerialID\030\001 \001(\003\022I\n"
    "\007msgType\030\002 \001(\0162\017.MsgPB.EMsgType:\'_MSG_DU"
    "NGEON_NOTIFY_DUNGEON_CLOSE_MS2MC\022\017\n\007mapu"
    "uid\030\003 \001(\003\"\204\001\n\035MsgDungeonReturnDungeon_MS"
    "2MC\022C\n\007msgType\030\001 \001(\0162\017.MsgPB.EMsgType:!_"
    "MSG_DUNGEON_RETURN_DUNGEON_MS2MC\022\r\n\005iggi"
    "d\030\002 \001(\003\022\017\n\007mapuuid\030\003 \001(\003\"\241\001\n\036MsgDungeonJ"
    "oinPrivateMap_MC2GS\022E\n\007msgType\030\001 \001(\0162\017.M"
    "sgPB.EMsgType:#_MSG_DUNGEON_JOIN_PRIVATE"
    "_MAP_MC2GS\022\r\n\005iggid\030\002 \001(\003\022)\n\013gate_target"
    "\030\003 \001(\0132\024.MsgPB.MsgGateTarget\"p\n\034MsgDunge"
    "onJoinPublicMap_M2GS\022A\n\007msgType\030\001 \001(\0162\017."
    "MsgPB.EMsgType:\037_MSG_DUNGEONJOIN_PUBLICM"
    "AP_M2GS\022\r\n\005iggid\030\002 \001(\003\"\204\001\n\023MsgDungeonInf"
    "o_MS2C\0228\n\007msgType\030\001 \001(\0162\017.MsgPB.EMsgType"
    ":\026_MSG_DUNGEON_INFO_MS2C\022\r\n\005iggid\030\002 \001(\003\022"
    "\022\n\nstart_time\030\003 \001(\003\022\020\n\010end_time\030\004 \001(\003\"6\n"
    "\024DungeonChestOpenItem\022\017\n\007data_id\030\002 \001(\005\022\r"
    "\n\005count\030\003 \001(\005\"\240\001\n\020DungeonBossChest\022\020\n\010ch"
    "est_id\030\001 \001(\005\022\036\n\026chest_reopen_item_type\030\002"
    " \001(\005\022\037\n\027chest_reopen_item_count\030\003 \001(\005\022\016\n"
    "\006opened\030\004 \001(\005\022)\n\004item\030\005 \003(\0132\033.MsgPB.Dung"
    "eonChestOpenItem\"\221\001\n\030MsgDungeonBossChest"
    "_MS2C\022>\n\007msgType\030\001 \001(\0162\017.MsgPB.EMsgType:"
    "\034_MSG_DUNGEON_BOSS_CHEST_MS2C\022\r\n\005iggid\030\002"
    " \001(\003\022&\n\005chest\030\003 \003(\0132\027.MsgPB.DungeonBossC"
    "hest\"\204\001\n\034MsgDungeonBossOpenChest_C2MS\022C\n"
    "\007msgType\030\001 \001(\0162\017.MsgPB.EMsgType:!_MSG_DU"
    "NGEON_BOSS_OPEN_CHEST_C2MS\022\r\n\005iggid\030\002 \001("
    "\003\022\020\n\010chest_id\030\003 \001(\005\"\203\002\n\036MsgDungeonBossOp"
    "enChestRs_MS2C\022F\n\007msgType\030\001 \001(\0162\017.MsgPB."
    "EMsgType:$_MSG_DUNGEON_BOSS_OPEN_CHEST_R"
    "S_MS2C\022\r\n\005iggid\030\002 \001(\003\022\'\n\003res\030\003 \001(\0162\032.Msg"
    "PB.ENUM_DUNGEON_RESULT\022)\n\004item\030\004 \003(\0132\033.M"
    "sgPB.DungeonChestOpenItem\022$\n\tdrop_info\030\005"
    " \003(\0132\021.MsgPB.PBDropInfo\022\020\n\010chest_id\030\006 \001("
    "\005\"\322\001\n\027MsgDungeonBossDrop_MS2C\022=\n\007msgType"
    "\030\001 \001(\0162\017.MsgPB.EMsgType:\033_MSG_DUNGEON_BO"
    "SS_DROP_MS2C\022\r\n\005iggid\030\002 \001(\003\022\020\n\010mobInsID\030"
    "\003 \001(\005\022\023\n\013mapObjectId\030\004 \001(\005\022\r\n\005pos_x\030\005 \001("
    "\005\022\r\n\005pos_y\030\006 \001(\005\022$\n\tdrop_info\030\007 \003(\0132\021.Ms"
    "gPB.PBDropInfo\"\310\001\n\031MsgDungeonBossComing_"
    "MS2C\022\?\n\007msgType\030\001 \001(\0162\017.MsgPB.EMsgType:\035"
    "_MSG_DUNGEON_BOSS_COMING_MS2C\022\r\n\005iggid\030\002"
    " \001(\003\022\022\n\nmob_ins_id\030\003 \001(\005\022\025\n\rmap_object_i"
    "d\030\004 \001(\005\022\022\n\nmob_def_id\030\005 \001(\005\022\r\n\005pos_x\030\006 \001"
    "(\005\022\r\n\005pos_y\030\007 \001(\005\"\246\001\n\027MsgDungeonBossKill"
    "_MS2C\022=\n\007msgType\030\001 \001(\0162\017.MsgPB.EMsgType:"
    "\033_MSG_DUNGEON_BOSS_KILL_MS2C\022\r\n\005iggid\030\002 "
    "\001(\003\022\022\n\nmob_ins_id\030\003 \001(\005\022\025\n\rmap_object_id"
    "\030\004 \001(\005\022\022\n\nmob_def_id\030\005 \001(\005\"r\n\025MsgDungeon"
    "DataGet_C2S\022;\n\007msgType\030\001 \001(\0162\017.MsgPB.EMs"
    "gType:\031_MSG_DUNGEON_DATA_GET_C2S\022\r\n\005iggi"
    "d\030\002 \001(\003\022\r\n\005mapid\030\003 \001(\005\"\201\001\n\022MsgDungeonDat"
    "a_S2C\0227\n\007msgType\030\001 \001(\0162\017.MsgPB.EMsgType:"
    "\025_MSG_DUNGEON_DATA_S2C\022\r\n\005iggid\030\002 \001(\003\022#\n"
    "\004data\030\003 \001(\0132\025.MsgPB.MsgDungeonData\"c\n\025Ms"
    "gDungeonNextMob_S2C\022;\n\007msgType\030\001 \001(\0162\017.M"
    "sgPB.EMsgType:\031_MSG_DUNGEON_NEXT_MOB_S2C"
    "\022\r\n\005iggid\030\002 \001(\003\"\?\n\023MsgDungeonSucProExp\022\014"
    "\n\004uuid\030\001 \001(\003\022\r\n\005addlv\030\002 \001(\005\022\013\n\003exp\030\003 \001(\005"
    "\"\253\001\n\024MsgDungeonSucExp_S2C\0226\n\007msgType\030\001 \001"
    "(\0162\017.MsgPB.EMsgType:\024_MSG_DUNGEON_SUC_EX"
    "P\022\r\n\005iggid\030\002 \001(\003\022\020\n\010addLevel\030\003 \001(\005\022\016\n\006ad"
    "dExp\030\004 \001(\005\022*\n\006proExp\030\005 \003(\0132\032.MsgPB.MsgDu"
    "ngeonSucProExp*\350\002\n\023ENUM_DUNGEON_RESULT\022\034"
    "\n\030ENUM_DUNGEON_RESULT_FAIL\020\000\022\032\n\026ENUM_DUN"
    "GEON_RESULT_OK\020\001\022%\n!ENUM_DUNGEON_RESULT_"
    "BOSS_NOT_KILL\020\002\022+\n\'ENUM_DUNGEON_RESULT_B"
    "OSS_NOT_IN_DUNGEON\020\003\022.\n*ENUM_DUNGEON_RES"
    "ULT_BOSS_OUTOFF_OPEN_CHEST\020\004\022(\n$ENUM_DUN"
    "GEON_RESULT_BOSS_WRONG_CHEST\020\005\0226\n2ENUM_D"
    "UNGEON_RESULT_BOSS_OPEN_CHEST_NO_ENOUGH_"
    "ITEM\020\006\0221\n-ENUM_DUNGEON_RESULT_BOSS_BAG_S"
    "PACE_NOT_ENOUGH\020\007*\232\001\n\027ENUM_CREATEDUNGEON"
    "_TYPE\022\033\n\027CREATEDUNGEON_TYPE_NULL\020\000\022\036\n\032CR"
    "EATEDUNGEON_TYPE_MAPDATA\020\001\022!\n\035CREATEDUNG"
    "EON_TYPE_PRIVATEMAP\020\002\022\037\n\033CREATEDUNGEON_T"
    "YPE_PARTYMAP\020\003*\372\001\n\031ENUM_CREATEDUNGEON_RE"
    "SULT\022\026\n\022CREATEDUNGEON_NULL\020\000\022\031\n\025CREATEDU"
    "NGEON_SUCCESS\020\001\022\034\n\030CREATEDUNGEON_TYPE_ER"
    "ROR\020\002\022\036\n\032CREATEDUNGEON_MAPMGR_ERROR\020\003\022\035\n"
    "\031CREATEDUNGEON_MAPID_ERROR\020\004\022!\n\035CREATEDU"
    "NGEON_CREATEMAP_ERROR\020\005\022*\n&CREATEDUNGEON"
    "_SOURCE_PRIVATE_MAP_ERROR\020\006", 4587);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "MsgDungeon.proto", &protobuf_RegisterTypes);
  MsgDungeonData::default_instance_ = new MsgDungeonData();
  MsgDungeonCreateDungeonS2MS::default_instance_ = new MsgDungeonCreateDungeonS2MS();
  MsgDungeonCreateDungeonResultMS2S::default_instance_ = new MsgDungeonCreateDungeonResultMS2S();
  MsgDungeonAskPlayerJoinDungeon_MC2GS::default_instance_ = new MsgDungeonAskPlayerJoinDungeon_MC2GS();
  MsgDungeonNotifyDungeonClose_MS2MC::default_instance_ = new MsgDungeonNotifyDungeonClose_MS2MC();
  MsgDungeonReturnDungeon_MS2MC::default_instance_ = new MsgDungeonReturnDungeon_MS2MC();
  MsgDungeonJoinPrivateMap_MC2GS::default_instance_ = new MsgDungeonJoinPrivateMap_MC2GS();
  MsgDungeonJoinPublicMap_M2GS::default_instance_ = new MsgDungeonJoinPublicMap_M2GS();
  MsgDungeonInfo_MS2C::default_instance_ = new MsgDungeonInfo_MS2C();
  DungeonChestOpenItem::default_instance_ = new DungeonChestOpenItem();
  DungeonBossChest::default_instance_ = new DungeonBossChest();
  MsgDungeonBossChest_MS2C::default_instance_ = new MsgDungeonBossChest_MS2C();
  MsgDungeonBossOpenChest_C2MS::default_instance_ = new MsgDungeonBossOpenChest_C2MS();
  MsgDungeonBossOpenChestRs_MS2C::default_instance_ = new MsgDungeonBossOpenChestRs_MS2C();
  MsgDungeonBossDrop_MS2C::default_instance_ = new MsgDungeonBossDrop_MS2C();
  MsgDungeonBossComing_MS2C::default_instance_ = new MsgDungeonBossComing_MS2C();
  MsgDungeonBossKill_MS2C::default_instance_ = new MsgDungeonBossKill_MS2C();
  MsgDungeonDataGet_C2S::default_instance_ = new MsgDungeonDataGet_C2S();
  MsgDungeonData_S2C::default_instance_ = new MsgDungeonData_S2C();
  MsgDungeonNextMob_S2C::default_instance_ = new MsgDungeonNextMob_S2C();
  MsgDungeonSucProExp::default_instance_ = new MsgDungeonSucProExp();
  MsgDungeonSucExp_S2C::default_instance_ = new MsgDungeonSucExp_S2C();
  MsgDungeonData::default_instance_->InitAsDefaultInstance();
  MsgDungeonCreateDungeonS2MS::default_instance_->InitAsDefaultInstance();
  MsgDungeonCreateDungeonResultMS2S::default_instance_->InitAsDefaultInstance();
  MsgDungeonAskPlayerJoinDungeon_MC2GS::default_instance_->InitAsDefaultInstance();
  MsgDungeonNotifyDungeonClose_MS2MC::default_instance_->InitAsDefaultInstance();
  MsgDungeonReturnDungeon_MS2MC::default_instance_->InitAsDefaultInstance();
  MsgDungeonJoinPrivateMap_MC2GS::default_instance_->InitAsDefaultInstance();
  MsgDungeonJoinPublicMap_M2GS::default_instance_->InitAsDefaultInstance();
  MsgDungeonInfo_MS2C::default_instance_->InitAsDefaultInstance();
  DungeonChestOpenItem::default_instance_->InitAsDefaultInstance();
  DungeonBossChest::default_instance_->InitAsDefaultInstance();
  MsgDungeonBossChest_MS2C::default_instance_->InitAsDefaultInstance();
  MsgDungeonBossOpenChest_C2MS::default_instance_->InitAsDefaultInstance();
  MsgDungeonBossOpenChestRs_MS2C::default_instance_->InitAsDefaultInstance();
  MsgDungeonBossDrop_MS2C::default_instance_->InitAsDefaultInstance();
  MsgDungeonBossComing_MS2C::default_instance_->InitAsDefaultInstance();
  MsgDungeonBossKill_MS2C::default_instance_->InitAsDefaultInstance();
  MsgDungeonDataGet_C2S::default_instance_->InitAsDefaultInstance();
  MsgDungeonData_S2C::default_instance_->InitAsDefaultInstance();
  MsgDungeonNextMob_S2C::default_instance_->InitAsDefaultInstance();
  MsgDungeonSucProExp::default_instance_->InitAsDefaultInstance();
  MsgDungeonSucExp_S2C::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_MsgDungeon_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_MsgDungeon_2eproto {
  StaticDescriptorInitializer_MsgDungeon_2eproto() {
    protobuf_AddDesc_MsgDungeon_2eproto();
  }
} static_descriptor_initializer_MsgDungeon_2eproto_;
const ::google::protobuf::EnumDescriptor* ENUM_DUNGEON_RESULT_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ENUM_DUNGEON_RESULT_descriptor_;
}
bool ENUM_DUNGEON_RESULT_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* ENUM_CREATEDUNGEON_TYPE_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ENUM_CREATEDUNGEON_TYPE_descriptor_;
}
bool ENUM_CREATEDUNGEON_TYPE_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* ENUM_CREATEDUNGEON_RESULT_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ENUM_CREATEDUNGEON_RESULT_descriptor_;
}
bool ENUM_CREATEDUNGEON_RESULT_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#ifndef _MSC_VER
const int MsgDungeonData::kIggidFieldNumber;
const int MsgDungeonData::kMapidFieldNumber;
const int MsgDungeonData::kMinTakeTimeFieldNumber;
const int MsgDungeonData::kDirtyFieldNumber;
const int MsgDungeonData::kDungeonActiveFieldNumber;
const int MsgDungeonData::kEnterFreeCountFieldNumber;
const int MsgDungeonData::kEnterFreeCountResetTimeFieldNumber;
const int MsgDungeonData::kEnterBuyCountFieldNumber;
const int MsgDungeonData::kEnterBuyCountResetTimeFieldNumber;
#endif  // !_MSC_VER

MsgDungeonData::MsgDungeonData()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.MsgDungeonData)
}

void MsgDungeonData::InitAsDefaultInstance() {
}

MsgDungeonData::MsgDungeonData(const MsgDungeonData& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.MsgDungeonData)
}

void MsgDungeonData::SharedCtor() {
  _cached_size_ = 0;
  iggid_ = GOOGLE_LONGLONG(0);
  mapid_ = GOOGLE_LONGLONG(0);
  min_take_time_ = 0;
  dirty_ = GOOGLE_LONGLONG(0);
  dungeon_active_ = 0;
  enter_free_count_ = 0;
  enter_free_count_reset_time_ = GOOGLE_LONGLONG(0);
  enter_buy_count_ = 0;
  enter_buy_count_reset_time_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgDungeonData::~MsgDungeonData() {
  // @@protoc_insertion_point(destructor:MsgPB.MsgDungeonData)
  SharedDtor();
}

void MsgDungeonData::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgDungeonData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgDungeonData::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgDungeonData_descriptor_;
}

const MsgDungeonData& MsgDungeonData::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgDungeon_2eproto();
  return *default_instance_;
}

MsgDungeonData* MsgDungeonData::default_instance_ = NULL;

MsgDungeonData* MsgDungeonData::New() const {
  return new MsgDungeonData;
}

void MsgDungeonData::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<MsgDungeonData*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 255) {
    ZR_(iggid_, enter_buy_count_);
  }
  enter_buy_count_reset_time_ = GOOGLE_LONGLONG(0);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgDungeonData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.MsgDungeonData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 iggid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &iggid_)));
          set_has_iggid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_mapid;
        break;
      }

      // optional int64 mapid = 2;
      case 2: {
        if (tag == 16) {
         parse_mapid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &mapid_)));
          set_has_mapid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_min_take_time;
        break;
      }

      // optional int32 min_take_time = 3;
      case 3: {
        if (tag == 24) {
         parse_min_take_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &min_take_time_)));
          set_has_min_take_time();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_dirty;
        break;
      }

      // optional int64 dirty = 4;
      case 4: {
        if (tag == 32) {
         parse_dirty:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &dirty_)));
          set_has_dirty();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_dungeon_active;
        break;
      }

      // optional int32 dungeon_active = 5;
      case 5: {
        if (tag == 40) {
         parse_dungeon_active:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &dungeon_active_)));
          set_has_dungeon_active();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_enter_free_count;
        break;
      }

      // optional int32 enter_free_count = 6;
      case 6: {
        if (tag == 48) {
         parse_enter_free_count:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &enter_free_count_)));
          set_has_enter_free_count();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_enter_free_count_reset_time;
        break;
      }

      // optional int64 enter_free_count_reset_time = 7;
      case 7: {
        if (tag == 56) {
         parse_enter_free_count_reset_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &enter_free_count_reset_time_)));
          set_has_enter_free_count_reset_time();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_enter_buy_count;
        break;
      }

      // optional int32 enter_buy_count = 8;
      case 8: {
        if (tag == 64) {
         parse_enter_buy_count:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &enter_buy_count_)));
          set_has_enter_buy_count();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_enter_buy_count_reset_time;
        break;
      }

      // optional int64 enter_buy_count_reset_time = 9;
      case 9: {
        if (tag == 72) {
         parse_enter_buy_count_reset_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &enter_buy_count_reset_time_)));
          set_has_enter_buy_count_reset_time();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.MsgDungeonData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.MsgDungeonData)
  return false;
#undef DO_
}

void MsgDungeonData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.MsgDungeonData)
  // optional int64 iggid = 1;
  if (has_iggid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->iggid(), output);
  }

  // optional int64 mapid = 2;
  if (has_mapid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->mapid(), output);
  }

  // optional int32 min_take_time = 3;
  if (has_min_take_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->min_take_time(), output);
  }

  // optional int64 dirty = 4;
  if (has_dirty()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->dirty(), output);
  }

  // optional int32 dungeon_active = 5;
  if (has_dungeon_active()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->dungeon_active(), output);
  }

  // optional int32 enter_free_count = 6;
  if (has_enter_free_count()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->enter_free_count(), output);
  }

  // optional int64 enter_free_count_reset_time = 7;
  if (has_enter_free_count_reset_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(7, this->enter_free_count_reset_time(), output);
  }

  // optional int32 enter_buy_count = 8;
  if (has_enter_buy_count()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->enter_buy_count(), output);
  }

  // optional int64 enter_buy_count_reset_time = 9;
  if (has_enter_buy_count_reset_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(9, this->enter_buy_count_reset_time(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.MsgDungeonData)
}

::google::protobuf::uint8* MsgDungeonData::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.MsgDungeonData)
  // optional int64 iggid = 1;
  if (has_iggid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->iggid(), target);
  }

  // optional int64 mapid = 2;
  if (has_mapid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->mapid(), target);
  }

  // optional int32 min_take_time = 3;
  if (has_min_take_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->min_take_time(), target);
  }

  // optional int64 dirty = 4;
  if (has_dirty()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->dirty(), target);
  }

  // optional int32 dungeon_active = 5;
  if (has_dungeon_active()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->dungeon_active(), target);
  }

  // optional int32 enter_free_count = 6;
  if (has_enter_free_count()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->enter_free_count(), target);
  }

  // optional int64 enter_free_count_reset_time = 7;
  if (has_enter_free_count_reset_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(7, this->enter_free_count_reset_time(), target);
  }

  // optional int32 enter_buy_count = 8;
  if (has_enter_buy_count()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->enter_buy_count(), target);
  }

  // optional int64 enter_buy_count_reset_time = 9;
  if (has_enter_buy_count_reset_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(9, this->enter_buy_count_reset_time(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.MsgDungeonData)
  return target;
}

int MsgDungeonData::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 iggid = 1;
    if (has_iggid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->iggid());
    }

    // optional int64 mapid = 2;
    if (has_mapid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->mapid());
    }

    // optional int32 min_take_time = 3;
    if (has_min_take_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->min_take_time());
    }

    // optional int64 dirty = 4;
    if (has_dirty()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->dirty());
    }

    // optional int32 dungeon_active = 5;
    if (has_dungeon_active()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->dungeon_active());
    }

    // optional int32 enter_free_count = 6;
    if (has_enter_free_count()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->enter_free_count());
    }

    // optional int64 enter_free_count_reset_time = 7;
    if (has_enter_free_count_reset_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->enter_free_count_reset_time());
    }

    // optional int32 enter_buy_count = 8;
    if (has_enter_buy_count()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->enter_buy_count());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional int64 enter_buy_count_reset_time = 9;
    if (has_enter_buy_count_reset_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->enter_buy_count_reset_time());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgDungeonData::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgDungeonData* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgDungeonData*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgDungeonData::MergeFrom(const MsgDungeonData& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_iggid()) {
      set_iggid(from.iggid());
    }
    if (from.has_mapid()) {
      set_mapid(from.mapid());
    }
    if (from.has_min_take_time()) {
      set_min_take_time(from.min_take_time());
    }
    if (from.has_dirty()) {
      set_dirty(from.dirty());
    }
    if (from.has_dungeon_active()) {
      set_dungeon_active(from.dungeon_active());
    }
    if (from.has_enter_free_count()) {
      set_enter_free_count(from.enter_free_count());
    }
    if (from.has_enter_free_count_reset_time()) {
      set_enter_free_count_reset_time(from.enter_free_count_reset_time());
    }
    if (from.has_enter_buy_count()) {
      set_enter_buy_count(from.enter_buy_count());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_enter_buy_count_reset_time()) {
      set_enter_buy_count_reset_time(from.enter_buy_count_reset_time());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgDungeonData::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgDungeonData::CopyFrom(const MsgDungeonData& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgDungeonData::IsInitialized() const {

  return true;
}

void MsgDungeonData::Swap(MsgDungeonData* other) {
  if (other != this) {
    std::swap(iggid_, other->iggid_);
    std::swap(mapid_, other->mapid_);
    std::swap(min_take_time_, other->min_take_time_);
    std::swap(dirty_, other->dirty_);
    std::swap(dungeon_active_, other->dungeon_active_);
    std::swap(enter_free_count_, other->enter_free_count_);
    std::swap(enter_free_count_reset_time_, other->enter_free_count_reset_time_);
    std::swap(enter_buy_count_, other->enter_buy_count_);
    std::swap(enter_buy_count_reset_time_, other->enter_buy_count_reset_time_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgDungeonData::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgDungeonData_descriptor_;
  metadata.reflection = MsgDungeonData_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgDungeonCreateDungeonS2MS::kSerialIDFieldNumber;
const int MsgDungeonCreateDungeonS2MS::kMsgTypeFieldNumber;
const int MsgDungeonCreateDungeonS2MS::kCreatorIggidFieldNumber;
const int MsgDungeonCreateDungeonS2MS::kDungeonTypeFieldNumber;
const int MsgDungeonCreateDungeonS2MS::kSourcePlayerIggidFieldNumber;
const int MsgDungeonCreateDungeonS2MS::kMapidFieldNumber;
const int MsgDungeonCreateDungeonS2MS::kServertypeFieldNumber;
const int MsgDungeonCreateDungeonS2MS::kNewpartyFieldNumber;
const int MsgDungeonCreateDungeonS2MS::kPartyidFieldNumber;
const int MsgDungeonCreateDungeonS2MS::kMemberIggidFieldNumber;
const int MsgDungeonCreateDungeonS2MS::kTeamidFieldNumber;
const int MsgDungeonCreateDungeonS2MS::kIdAreaFieldNumber;
#endif  // !_MSC_VER

MsgDungeonCreateDungeonS2MS::MsgDungeonCreateDungeonS2MS()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.MsgDungeonCreateDungeonS2MS)
}

void MsgDungeonCreateDungeonS2MS::InitAsDefaultInstance() {
}

MsgDungeonCreateDungeonS2MS::MsgDungeonCreateDungeonS2MS(const MsgDungeonCreateDungeonS2MS& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.MsgDungeonCreateDungeonS2MS)
}

void MsgDungeonCreateDungeonS2MS::SharedCtor() {
  _cached_size_ = 0;
  serialid_ = GOOGLE_LONGLONG(0);
  msgtype_ = 2000;
  creator_iggid_ = GOOGLE_LONGLONG(0);
  dungeon_type_ = 0;
  source_player_iggid_ = GOOGLE_LONGLONG(0);
  mapid_ = 0;
  servertype_ = 0;
  newparty_ = false;
  partyid_ = GOOGLE_LONGLONG(0);
  teamid_ = 0;
  idarea_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgDungeonCreateDungeonS2MS::~MsgDungeonCreateDungeonS2MS() {
  // @@protoc_insertion_point(destructor:MsgPB.MsgDungeonCreateDungeonS2MS)
  SharedDtor();
}

void MsgDungeonCreateDungeonS2MS::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgDungeonCreateDungeonS2MS::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgDungeonCreateDungeonS2MS::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgDungeonCreateDungeonS2MS_descriptor_;
}

const MsgDungeonCreateDungeonS2MS& MsgDungeonCreateDungeonS2MS::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgDungeon_2eproto();
  return *default_instance_;
}

MsgDungeonCreateDungeonS2MS* MsgDungeonCreateDungeonS2MS::default_instance_ = NULL;

MsgDungeonCreateDungeonS2MS* MsgDungeonCreateDungeonS2MS::New() const {
  return new MsgDungeonCreateDungeonS2MS;
}

void MsgDungeonCreateDungeonS2MS::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<MsgDungeonCreateDungeonS2MS*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 255) {
    ZR_(serialid_, creator_iggid_);
    ZR_(dungeon_type_, servertype_);
    msgtype_ = 2000;
    newparty_ = false;
  }
  if (_has_bits_[8 / 32] & 3328) {
    partyid_ = GOOGLE_LONGLONG(0);
    teamid_ = 0;
    idarea_ = 0u;
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  member_iggid_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgDungeonCreateDungeonS2MS::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.MsgDungeonCreateDungeonS2MS)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 SerialID = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &serialid_)));
          set_has_serialid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_msgType;
        break;
      }

      // optional .MsgPB.EMsgType msgType = 2 [default = _MSG_DUNGEON_CREATEDUNGEON_S2MS];
      case 2: {
        if (tag == 16) {
         parse_msgType:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::EMsgType_IsValid(value)) {
            set_msgtype(static_cast< ::MsgPB::EMsgType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_creator_iggid;
        break;
      }

      // optional int64 creator_iggid = 3;
      case 3: {
        if (tag == 24) {
         parse_creator_iggid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &creator_iggid_)));
          set_has_creator_iggid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_dungeon_type;
        break;
      }

      // optional .MsgPB.ENUM_CREATEDUNGEON_TYPE dungeon_type = 4;
      case 4: {
        if (tag == 32) {
         parse_dungeon_type:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::ENUM_CREATEDUNGEON_TYPE_IsValid(value)) {
            set_dungeon_type(static_cast< ::MsgPB::ENUM_CREATEDUNGEON_TYPE >(value));
          } else {
            mutable_unknown_fields()->AddVarint(4, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_source_player_iggid;
        break;
      }

      // optional int64 source_player_iggid = 5;
      case 5: {
        if (tag == 40) {
         parse_source_player_iggid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &source_player_iggid_)));
          set_has_source_player_iggid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_mapid;
        break;
      }

      // optional int32 mapid = 6;
      case 6: {
        if (tag == 48) {
         parse_mapid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &mapid_)));
          set_has_mapid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_servertype;
        break;
      }

      // optional int32 servertype = 7;
      case 7: {
        if (tag == 56) {
         parse_servertype:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &servertype_)));
          set_has_servertype();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_newparty;
        break;
      }

      // optional bool newparty = 8;
      case 8: {
        if (tag == 64) {
         parse_newparty:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &newparty_)));
          set_has_newparty();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_partyid;
        break;
      }

      // optional int64 partyid = 9;
      case 9: {
        if (tag == 72) {
         parse_partyid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &partyid_)));
          set_has_partyid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(80)) goto parse_member_iggid;
        break;
      }

      // repeated int64 member_iggid = 10;
      case 10: {
        if (tag == 80) {
         parse_member_iggid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 80, input, this->mutable_member_iggid())));
        } else if (tag == 82) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_member_iggid())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(80)) goto parse_member_iggid;
        if (input->ExpectTag(88)) goto parse_teamid;
        break;
      }

      // optional int32 teamid = 11;
      case 11: {
        if (tag == 88) {
         parse_teamid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &teamid_)));
          set_has_teamid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(96)) goto parse_idArea;
        break;
      }

      // optional uint32 idArea = 12;
      case 12: {
        if (tag == 96) {
         parse_idArea:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &idarea_)));
          set_has_idarea();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.MsgDungeonCreateDungeonS2MS)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.MsgDungeonCreateDungeonS2MS)
  return false;
#undef DO_
}

void MsgDungeonCreateDungeonS2MS::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.MsgDungeonCreateDungeonS2MS)
  // optional int64 SerialID = 1;
  if (has_serialid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->serialid(), output);
  }

  // optional .MsgPB.EMsgType msgType = 2 [default = _MSG_DUNGEON_CREATEDUNGEON_S2MS];
  if (has_msgtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->msgtype(), output);
  }

  // optional int64 creator_iggid = 3;
  if (has_creator_iggid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->creator_iggid(), output);
  }

  // optional .MsgPB.ENUM_CREATEDUNGEON_TYPE dungeon_type = 4;
  if (has_dungeon_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->dungeon_type(), output);
  }

  // optional int64 source_player_iggid = 5;
  if (has_source_player_iggid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(5, this->source_player_iggid(), output);
  }

  // optional int32 mapid = 6;
  if (has_mapid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->mapid(), output);
  }

  // optional int32 servertype = 7;
  if (has_servertype()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->servertype(), output);
  }

  // optional bool newparty = 8;
  if (has_newparty()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(8, this->newparty(), output);
  }

  // optional int64 partyid = 9;
  if (has_partyid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(9, this->partyid(), output);
  }

  // repeated int64 member_iggid = 10;
  for (int i = 0; i < this->member_iggid_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(
      10, this->member_iggid(i), output);
  }

  // optional int32 teamid = 11;
  if (has_teamid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->teamid(), output);
  }

  // optional uint32 idArea = 12;
  if (has_idarea()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(12, this->idarea(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.MsgDungeonCreateDungeonS2MS)
}

::google::protobuf::uint8* MsgDungeonCreateDungeonS2MS::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.MsgDungeonCreateDungeonS2MS)
  // optional int64 SerialID = 1;
  if (has_serialid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->serialid(), target);
  }

  // optional .MsgPB.EMsgType msgType = 2 [default = _MSG_DUNGEON_CREATEDUNGEON_S2MS];
  if (has_msgtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->msgtype(), target);
  }

  // optional int64 creator_iggid = 3;
  if (has_creator_iggid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->creator_iggid(), target);
  }

  // optional .MsgPB.ENUM_CREATEDUNGEON_TYPE dungeon_type = 4;
  if (has_dungeon_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->dungeon_type(), target);
  }

  // optional int64 source_player_iggid = 5;
  if (has_source_player_iggid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(5, this->source_player_iggid(), target);
  }

  // optional int32 mapid = 6;
  if (has_mapid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->mapid(), target);
  }

  // optional int32 servertype = 7;
  if (has_servertype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->servertype(), target);
  }

  // optional bool newparty = 8;
  if (has_newparty()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(8, this->newparty(), target);
  }

  // optional int64 partyid = 9;
  if (has_partyid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(9, this->partyid(), target);
  }

  // repeated int64 member_iggid = 10;
  for (int i = 0; i < this->member_iggid_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64ToArray(10, this->member_iggid(i), target);
  }

  // optional int32 teamid = 11;
  if (has_teamid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->teamid(), target);
  }

  // optional uint32 idArea = 12;
  if (has_idarea()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(12, this->idarea(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.MsgDungeonCreateDungeonS2MS)
  return target;
}

int MsgDungeonCreateDungeonS2MS::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 SerialID = 1;
    if (has_serialid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->serialid());
    }

    // optional .MsgPB.EMsgType msgType = 2 [default = _MSG_DUNGEON_CREATEDUNGEON_S2MS];
    if (has_msgtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgtype());
    }

    // optional int64 creator_iggid = 3;
    if (has_creator_iggid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->creator_iggid());
    }

    // optional .MsgPB.ENUM_CREATEDUNGEON_TYPE dungeon_type = 4;
    if (has_dungeon_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->dungeon_type());
    }

    // optional int64 source_player_iggid = 5;
    if (has_source_player_iggid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->source_player_iggid());
    }

    // optional int32 mapid = 6;
    if (has_mapid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->mapid());
    }

    // optional int32 servertype = 7;
    if (has_servertype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->servertype());
    }

    // optional bool newparty = 8;
    if (has_newparty()) {
      total_size += 1 + 1;
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional int64 partyid = 9;
    if (has_partyid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->partyid());
    }

    // optional int32 teamid = 11;
    if (has_teamid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->teamid());
    }

    // optional uint32 idArea = 12;
    if (has_idarea()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->idarea());
    }

  }
  // repeated int64 member_iggid = 10;
  {
    int data_size = 0;
    for (int i = 0; i < this->member_iggid_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int64Size(this->member_iggid(i));
    }
    total_size += 1 * this->member_iggid_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgDungeonCreateDungeonS2MS::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgDungeonCreateDungeonS2MS* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgDungeonCreateDungeonS2MS*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgDungeonCreateDungeonS2MS::MergeFrom(const MsgDungeonCreateDungeonS2MS& from) {
  GOOGLE_CHECK_NE(&from, this);
  member_iggid_.MergeFrom(from.member_iggid_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_serialid()) {
      set_serialid(from.serialid());
    }
    if (from.has_msgtype()) {
      set_msgtype(from.msgtype());
    }
    if (from.has_creator_iggid()) {
      set_creator_iggid(from.creator_iggid());
    }
    if (from.has_dungeon_type()) {
      set_dungeon_type(from.dungeon_type());
    }
    if (from.has_source_player_iggid()) {
      set_source_player_iggid(from.source_player_iggid());
    }
    if (from.has_mapid()) {
      set_mapid(from.mapid());
    }
    if (from.has_servertype()) {
      set_servertype(from.servertype());
    }
    if (from.has_newparty()) {
      set_newparty(from.newparty());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_partyid()) {
      set_partyid(from.partyid());
    }
    if (from.has_teamid()) {
      set_teamid(from.teamid());
    }
    if (from.has_idarea()) {
      set_idarea(from.idarea());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgDungeonCreateDungeonS2MS::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgDungeonCreateDungeonS2MS::CopyFrom(const MsgDungeonCreateDungeonS2MS& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgDungeonCreateDungeonS2MS::IsInitialized() const {

  return true;
}

void MsgDungeonCreateDungeonS2MS::Swap(MsgDungeonCreateDungeonS2MS* other) {
  if (other != this) {
    std::swap(serialid_, other->serialid_);
    std::swap(msgtype_, other->msgtype_);
    std::swap(creator_iggid_, other->creator_iggid_);
    std::swap(dungeon_type_, other->dungeon_type_);
    std::swap(source_player_iggid_, other->source_player_iggid_);
    std::swap(mapid_, other->mapid_);
    std::swap(servertype_, other->servertype_);
    std::swap(newparty_, other->newparty_);
    std::swap(partyid_, other->partyid_);
    member_iggid_.Swap(&other->member_iggid_);
    std::swap(teamid_, other->teamid_);
    std::swap(idarea_, other->idarea_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgDungeonCreateDungeonS2MS::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgDungeonCreateDungeonS2MS_descriptor_;
  metadata.reflection = MsgDungeonCreateDungeonS2MS_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgDungeonCreateDungeonResultMS2S::kSerialIDFieldNumber;
const int MsgDungeonCreateDungeonResultMS2S::kMsgTypeFieldNumber;
const int MsgDungeonCreateDungeonResultMS2S::kResultFieldNumber;
const int MsgDungeonCreateDungeonResultMS2S::kCreatorIggidFieldNumber;
const int MsgDungeonCreateDungeonResultMS2S::kMapuuidFieldNumber;
const int MsgDungeonCreateDungeonResultMS2S::kMapidFieldNumber;
const int MsgDungeonCreateDungeonResultMS2S::kMapserveridFieldNumber;
const int MsgDungeonCreateDungeonResultMS2S::kDungeonTypeFieldNumber;
#endif  // !_MSC_VER

MsgDungeonCreateDungeonResultMS2S::MsgDungeonCreateDungeonResultMS2S()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.MsgDungeonCreateDungeonResultMS2S)
}

void MsgDungeonCreateDungeonResultMS2S::InitAsDefaultInstance() {
}

MsgDungeonCreateDungeonResultMS2S::MsgDungeonCreateDungeonResultMS2S(const MsgDungeonCreateDungeonResultMS2S& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.MsgDungeonCreateDungeonResultMS2S)
}

void MsgDungeonCreateDungeonResultMS2S::SharedCtor() {
  _cached_size_ = 0;
  serialid_ = GOOGLE_LONGLONG(0);
  msgtype_ = 2001;
  result_ = 0;
  creator_iggid_ = GOOGLE_LONGLONG(0);
  mapuuid_ = GOOGLE_LONGLONG(0);
  mapid_ = 0;
  mapserverid_ = 0;
  dungeon_type_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgDungeonCreateDungeonResultMS2S::~MsgDungeonCreateDungeonResultMS2S() {
  // @@protoc_insertion_point(destructor:MsgPB.MsgDungeonCreateDungeonResultMS2S)
  SharedDtor();
}

void MsgDungeonCreateDungeonResultMS2S::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgDungeonCreateDungeonResultMS2S::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgDungeonCreateDungeonResultMS2S::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgDungeonCreateDungeonResultMS2S_descriptor_;
}

const MsgDungeonCreateDungeonResultMS2S& MsgDungeonCreateDungeonResultMS2S::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgDungeon_2eproto();
  return *default_instance_;
}

MsgDungeonCreateDungeonResultMS2S* MsgDungeonCreateDungeonResultMS2S::default_instance_ = NULL;

MsgDungeonCreateDungeonResultMS2S* MsgDungeonCreateDungeonResultMS2S::New() const {
  return new MsgDungeonCreateDungeonResultMS2S;
}

void MsgDungeonCreateDungeonResultMS2S::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<MsgDungeonCreateDungeonResultMS2S*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 255) {
    ZR_(result_, dungeon_type_);
    serialid_ = GOOGLE_LONGLONG(0);
    msgtype_ = 2001;
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgDungeonCreateDungeonResultMS2S::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.MsgDungeonCreateDungeonResultMS2S)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 SerialID = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &serialid_)));
          set_has_serialid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_msgType;
        break;
      }

      // optional .MsgPB.EMsgType msgType = 2 [default = _MSG_DUNGEON_CREATEDUNGEON_RS_MS2S];
      case 2: {
        if (tag == 16) {
         parse_msgType:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::EMsgType_IsValid(value)) {
            set_msgtype(static_cast< ::MsgPB::EMsgType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_result;
        break;
      }

      // optional .MsgPB.ENUM_CREATEDUNGEON_RESULT result = 3;
      case 3: {
        if (tag == 24) {
         parse_result:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::ENUM_CREATEDUNGEON_RESULT_IsValid(value)) {
            set_result(static_cast< ::MsgPB::ENUM_CREATEDUNGEON_RESULT >(value));
          } else {
            mutable_unknown_fields()->AddVarint(3, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_creator_iggid;
        break;
      }

      // optional int64 creator_iggid = 4;
      case 4: {
        if (tag == 32) {
         parse_creator_iggid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &creator_iggid_)));
          set_has_creator_iggid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_mapuuid;
        break;
      }

      // optional int64 mapuuid = 5;
      case 5: {
        if (tag == 40) {
         parse_mapuuid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &mapuuid_)));
          set_has_mapuuid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_mapid;
        break;
      }

      // optional int32 mapid = 6;
      case 6: {
        if (tag == 48) {
         parse_mapid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &mapid_)));
          set_has_mapid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_mapserverid;
        break;
      }

      // optional int32 mapserverid = 7;
      case 7: {
        if (tag == 56) {
         parse_mapserverid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &mapserverid_)));
          set_has_mapserverid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_dungeon_type;
        break;
      }

      // optional .MsgPB.ENUM_CREATEDUNGEON_TYPE dungeon_type = 8;
      case 8: {
        if (tag == 64) {
         parse_dungeon_type:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::ENUM_CREATEDUNGEON_TYPE_IsValid(value)) {
            set_dungeon_type(static_cast< ::MsgPB::ENUM_CREATEDUNGEON_TYPE >(value));
          } else {
            mutable_unknown_fields()->AddVarint(8, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.MsgDungeonCreateDungeonResultMS2S)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.MsgDungeonCreateDungeonResultMS2S)
  return false;
#undef DO_
}

void MsgDungeonCreateDungeonResultMS2S::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.MsgDungeonCreateDungeonResultMS2S)
  // optional int64 SerialID = 1;
  if (has_serialid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->serialid(), output);
  }

  // optional .MsgPB.EMsgType msgType = 2 [default = _MSG_DUNGEON_CREATEDUNGEON_RS_MS2S];
  if (has_msgtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->msgtype(), output);
  }

  // optional .MsgPB.ENUM_CREATEDUNGEON_RESULT result = 3;
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->result(), output);
  }

  // optional int64 creator_iggid = 4;
  if (has_creator_iggid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->creator_iggid(), output);
  }

  // optional int64 mapuuid = 5;
  if (has_mapuuid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(5, this->mapuuid(), output);
  }

  // optional int32 mapid = 6;
  if (has_mapid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->mapid(), output);
  }

  // optional int32 mapserverid = 7;
  if (has_mapserverid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->mapserverid(), output);
  }

  // optional .MsgPB.ENUM_CREATEDUNGEON_TYPE dungeon_type = 8;
  if (has_dungeon_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      8, this->dungeon_type(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.MsgDungeonCreateDungeonResultMS2S)
}

::google::protobuf::uint8* MsgDungeonCreateDungeonResultMS2S::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.MsgDungeonCreateDungeonResultMS2S)
  // optional int64 SerialID = 1;
  if (has_serialid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->serialid(), target);
  }

  // optional .MsgPB.EMsgType msgType = 2 [default = _MSG_DUNGEON_CREATEDUNGEON_RS_MS2S];
  if (has_msgtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->msgtype(), target);
  }

  // optional .MsgPB.ENUM_CREATEDUNGEON_RESULT result = 3;
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->result(), target);
  }

  // optional int64 creator_iggid = 4;
  if (has_creator_iggid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->creator_iggid(), target);
  }

  // optional int64 mapuuid = 5;
  if (has_mapuuid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(5, this->mapuuid(), target);
  }

  // optional int32 mapid = 6;
  if (has_mapid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->mapid(), target);
  }

  // optional int32 mapserverid = 7;
  if (has_mapserverid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->mapserverid(), target);
  }

  // optional .MsgPB.ENUM_CREATEDUNGEON_TYPE dungeon_type = 8;
  if (has_dungeon_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      8, this->dungeon_type(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.MsgDungeonCreateDungeonResultMS2S)
  return target;
}

int MsgDungeonCreateDungeonResultMS2S::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 SerialID = 1;
    if (has_serialid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->serialid());
    }

    // optional .MsgPB.EMsgType msgType = 2 [default = _MSG_DUNGEON_CREATEDUNGEON_RS_MS2S];
    if (has_msgtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgtype());
    }

    // optional .MsgPB.ENUM_CREATEDUNGEON_RESULT result = 3;
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->result());
    }

    // optional int64 creator_iggid = 4;
    if (has_creator_iggid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->creator_iggid());
    }

    // optional int64 mapuuid = 5;
    if (has_mapuuid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->mapuuid());
    }

    // optional int32 mapid = 6;
    if (has_mapid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->mapid());
    }

    // optional int32 mapserverid = 7;
    if (has_mapserverid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->mapserverid());
    }

    // optional .MsgPB.ENUM_CREATEDUNGEON_TYPE dungeon_type = 8;
    if (has_dungeon_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->dungeon_type());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgDungeonCreateDungeonResultMS2S::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgDungeonCreateDungeonResultMS2S* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgDungeonCreateDungeonResultMS2S*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgDungeonCreateDungeonResultMS2S::MergeFrom(const MsgDungeonCreateDungeonResultMS2S& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_serialid()) {
      set_serialid(from.serialid());
    }
    if (from.has_msgtype()) {
      set_msgtype(from.msgtype());
    }
    if (from.has_result()) {
      set_result(from.result());
    }
    if (from.has_creator_iggid()) {
      set_creator_iggid(from.creator_iggid());
    }
    if (from.has_mapuuid()) {
      set_mapuuid(from.mapuuid());
    }
    if (from.has_mapid()) {
      set_mapid(from.mapid());
    }
    if (from.has_mapserverid()) {
      set_mapserverid(from.mapserverid());
    }
    if (from.has_dungeon_type()) {
      set_dungeon_type(from.dungeon_type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgDungeonCreateDungeonResultMS2S::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgDungeonCreateDungeonResultMS2S::CopyFrom(const MsgDungeonCreateDungeonResultMS2S& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgDungeonCreateDungeonResultMS2S::IsInitialized() const {

  return true;
}

void MsgDungeonCreateDungeonResultMS2S::Swap(MsgDungeonCreateDungeonResultMS2S* other) {
  if (other != this) {
    std::swap(serialid_, other->serialid_);
    std::swap(msgtype_, other->msgtype_);
    std::swap(result_, other->result_);
    std::swap(creator_iggid_, other->creator_iggid_);
    std::swap(mapuuid_, other->mapuuid_);
    std::swap(mapid_, other->mapid_);
    std::swap(mapserverid_, other->mapserverid_);
    std::swap(dungeon_type_, other->dungeon_type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgDungeonCreateDungeonResultMS2S::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgDungeonCreateDungeonResultMS2S_descriptor_;
  metadata.reflection = MsgDungeonCreateDungeonResultMS2S_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgDungeonAskPlayerJoinDungeon_MC2GS::kSerialIDFieldNumber;
const int MsgDungeonAskPlayerJoinDungeon_MC2GS::kMsgTypeFieldNumber;
const int MsgDungeonAskPlayerJoinDungeon_MC2GS::kIggidFieldNumber;
const int MsgDungeonAskPlayerJoinDungeon_MC2GS::kMapuuidFieldNumber;
const int MsgDungeonAskPlayerJoinDungeon_MC2GS::kMapserveridFieldNumber;
const int MsgDungeonAskPlayerJoinDungeon_MC2GS::kReturndungeonFieldNumber;
#endif  // !_MSC_VER

MsgDungeonAskPlayerJoinDungeon_MC2GS::MsgDungeonAskPlayerJoinDungeon_MC2GS()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.MsgDungeonAskPlayerJoinDungeon_MC2GS)
}

void MsgDungeonAskPlayerJoinDungeon_MC2GS::InitAsDefaultInstance() {
}

MsgDungeonAskPlayerJoinDungeon_MC2GS::MsgDungeonAskPlayerJoinDungeon_MC2GS(const MsgDungeonAskPlayerJoinDungeon_MC2GS& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.MsgDungeonAskPlayerJoinDungeon_MC2GS)
}

void MsgDungeonAskPlayerJoinDungeon_MC2GS::SharedCtor() {
  _cached_size_ = 0;
  serialid_ = GOOGLE_LONGLONG(0);
  msgtype_ = 2002;
  iggid_ = GOOGLE_LONGLONG(0);
  mapuuid_ = GOOGLE_LONGLONG(0);
  mapserverid_ = 0;
  returndungeon_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgDungeonAskPlayerJoinDungeon_MC2GS::~MsgDungeonAskPlayerJoinDungeon_MC2GS() {
  // @@protoc_insertion_point(destructor:MsgPB.MsgDungeonAskPlayerJoinDungeon_MC2GS)
  SharedDtor();
}

void MsgDungeonAskPlayerJoinDungeon_MC2GS::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgDungeonAskPlayerJoinDungeon_MC2GS::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgDungeonAskPlayerJoinDungeon_MC2GS::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgDungeonAskPlayerJoinDungeon_MC2GS_descriptor_;
}

const MsgDungeonAskPlayerJoinDungeon_MC2GS& MsgDungeonAskPlayerJoinDungeon_MC2GS::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgDungeon_2eproto();
  return *default_instance_;
}

MsgDungeonAskPlayerJoinDungeon_MC2GS* MsgDungeonAskPlayerJoinDungeon_MC2GS::default_instance_ = NULL;

MsgDungeonAskPlayerJoinDungeon_MC2GS* MsgDungeonAskPlayerJoinDungeon_MC2GS::New() const {
  return new MsgDungeonAskPlayerJoinDungeon_MC2GS;
}

void MsgDungeonAskPlayerJoinDungeon_MC2GS::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<MsgDungeonAskPlayerJoinDungeon_MC2GS*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 63) {
    ZR_(serialid_, iggid_);
    ZR_(mapserverid_, returndungeon_);
    msgtype_ = 2002;
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgDungeonAskPlayerJoinDungeon_MC2GS::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.MsgDungeonAskPlayerJoinDungeon_MC2GS)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 SerialID = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &serialid_)));
          set_has_serialid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_msgType;
        break;
      }

      // optional .MsgPB.EMsgType msgType = 2 [default = _MSG_DUNGEON_ASK_PLAYER_JOIN_DUNGEON_MC2GS];
      case 2: {
        if (tag == 16) {
         parse_msgType:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::EMsgType_IsValid(value)) {
            set_msgtype(static_cast< ::MsgPB::EMsgType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_iggid;
        break;
      }

      // optional int64 iggid = 3;
      case 3: {
        if (tag == 24) {
         parse_iggid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &iggid_)));
          set_has_iggid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_mapuuid;
        break;
      }

      // optional int64 mapuuid = 4;
      case 4: {
        if (tag == 32) {
         parse_mapuuid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &mapuuid_)));
          set_has_mapuuid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_mapserverid;
        break;
      }

      // optional int32 mapserverid = 5;
      case 5: {
        if (tag == 40) {
         parse_mapserverid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &mapserverid_)));
          set_has_mapserverid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_returndungeon;
        break;
      }

      // optional bool returndungeon = 6;
      case 6: {
        if (tag == 48) {
         parse_returndungeon:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &returndungeon_)));
          set_has_returndungeon();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.MsgDungeonAskPlayerJoinDungeon_MC2GS)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.MsgDungeonAskPlayerJoinDungeon_MC2GS)
  return false;
#undef DO_
}

void MsgDungeonAskPlayerJoinDungeon_MC2GS::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.MsgDungeonAskPlayerJoinDungeon_MC2GS)
  // optional int64 SerialID = 1;
  if (has_serialid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->serialid(), output);
  }

  // optional .MsgPB.EMsgType msgType = 2 [default = _MSG_DUNGEON_ASK_PLAYER_JOIN_DUNGEON_MC2GS];
  if (has_msgtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->msgtype(), output);
  }

  // optional int64 iggid = 3;
  if (has_iggid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->iggid(), output);
  }

  // optional int64 mapuuid = 4;
  if (has_mapuuid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->mapuuid(), output);
  }

  // optional int32 mapserverid = 5;
  if (has_mapserverid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->mapserverid(), output);
  }

  // optional bool returndungeon = 6;
  if (has_returndungeon()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->returndungeon(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.MsgDungeonAskPlayerJoinDungeon_MC2GS)
}

::google::protobuf::uint8* MsgDungeonAskPlayerJoinDungeon_MC2GS::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.MsgDungeonAskPlayerJoinDungeon_MC2GS)
  // optional int64 SerialID = 1;
  if (has_serialid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->serialid(), target);
  }

  // optional .MsgPB.EMsgType msgType = 2 [default = _MSG_DUNGEON_ASK_PLAYER_JOIN_DUNGEON_MC2GS];
  if (has_msgtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->msgtype(), target);
  }

  // optional int64 iggid = 3;
  if (has_iggid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->iggid(), target);
  }

  // optional int64 mapuuid = 4;
  if (has_mapuuid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->mapuuid(), target);
  }

  // optional int32 mapserverid = 5;
  if (has_mapserverid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->mapserverid(), target);
  }

  // optional bool returndungeon = 6;
  if (has_returndungeon()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->returndungeon(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.MsgDungeonAskPlayerJoinDungeon_MC2GS)
  return target;
}

int MsgDungeonAskPlayerJoinDungeon_MC2GS::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 SerialID = 1;
    if (has_serialid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->serialid());
    }

    // optional .MsgPB.EMsgType msgType = 2 [default = _MSG_DUNGEON_ASK_PLAYER_JOIN_DUNGEON_MC2GS];
    if (has_msgtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgtype());
    }

    // optional int64 iggid = 3;
    if (has_iggid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->iggid());
    }

    // optional int64 mapuuid = 4;
    if (has_mapuuid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->mapuuid());
    }

    // optional int32 mapserverid = 5;
    if (has_mapserverid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->mapserverid());
    }

    // optional bool returndungeon = 6;
    if (has_returndungeon()) {
      total_size += 1 + 1;
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgDungeonAskPlayerJoinDungeon_MC2GS::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgDungeonAskPlayerJoinDungeon_MC2GS* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgDungeonAskPlayerJoinDungeon_MC2GS*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgDungeonAskPlayerJoinDungeon_MC2GS::MergeFrom(const MsgDungeonAskPlayerJoinDungeon_MC2GS& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_serialid()) {
      set_serialid(from.serialid());
    }
    if (from.has_msgtype()) {
      set_msgtype(from.msgtype());
    }
    if (from.has_iggid()) {
      set_iggid(from.iggid());
    }
    if (from.has_mapuuid()) {
      set_mapuuid(from.mapuuid());
    }
    if (from.has_mapserverid()) {
      set_mapserverid(from.mapserverid());
    }
    if (from.has_returndungeon()) {
      set_returndungeon(from.returndungeon());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgDungeonAskPlayerJoinDungeon_MC2GS::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgDungeonAskPlayerJoinDungeon_MC2GS::CopyFrom(const MsgDungeonAskPlayerJoinDungeon_MC2GS& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgDungeonAskPlayerJoinDungeon_MC2GS::IsInitialized() const {

  return true;
}

void MsgDungeonAskPlayerJoinDungeon_MC2GS::Swap(MsgDungeonAskPlayerJoinDungeon_MC2GS* other) {
  if (other != this) {
    std::swap(serialid_, other->serialid_);
    std::swap(msgtype_, other->msgtype_);
    std::swap(iggid_, other->iggid_);
    std::swap(mapuuid_, other->mapuuid_);
    std::swap(mapserverid_, other->mapserverid_);
    std::swap(returndungeon_, other->returndungeon_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgDungeonAskPlayerJoinDungeon_MC2GS::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgDungeonAskPlayerJoinDungeon_MC2GS_descriptor_;
  metadata.reflection = MsgDungeonAskPlayerJoinDungeon_MC2GS_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgDungeonNotifyDungeonClose_MS2MC::kSerialIDFieldNumber;
const int MsgDungeonNotifyDungeonClose_MS2MC::kMsgTypeFieldNumber;
const int MsgDungeonNotifyDungeonClose_MS2MC::kMapuuidFieldNumber;
#endif  // !_MSC_VER

MsgDungeonNotifyDungeonClose_MS2MC::MsgDungeonNotifyDungeonClose_MS2MC()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.MsgDungeonNotifyDungeonClose_MS2MC)
}

void MsgDungeonNotifyDungeonClose_MS2MC::InitAsDefaultInstance() {
}

MsgDungeonNotifyDungeonClose_MS2MC::MsgDungeonNotifyDungeonClose_MS2MC(const MsgDungeonNotifyDungeonClose_MS2MC& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.MsgDungeonNotifyDungeonClose_MS2MC)
}

void MsgDungeonNotifyDungeonClose_MS2MC::SharedCtor() {
  _cached_size_ = 0;
  serialid_ = GOOGLE_LONGLONG(0);
  msgtype_ = 2003;
  mapuuid_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgDungeonNotifyDungeonClose_MS2MC::~MsgDungeonNotifyDungeonClose_MS2MC() {
  // @@protoc_insertion_point(destructor:MsgPB.MsgDungeonNotifyDungeonClose_MS2MC)
  SharedDtor();
}

void MsgDungeonNotifyDungeonClose_MS2MC::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgDungeonNotifyDungeonClose_MS2MC::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgDungeonNotifyDungeonClose_MS2MC::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgDungeonNotifyDungeonClose_MS2MC_descriptor_;
}

const MsgDungeonNotifyDungeonClose_MS2MC& MsgDungeonNotifyDungeonClose_MS2MC::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgDungeon_2eproto();
  return *default_instance_;
}

MsgDungeonNotifyDungeonClose_MS2MC* MsgDungeonNotifyDungeonClose_MS2MC::default_instance_ = NULL;

MsgDungeonNotifyDungeonClose_MS2MC* MsgDungeonNotifyDungeonClose_MS2MC::New() const {
  return new MsgDungeonNotifyDungeonClose_MS2MC;
}

void MsgDungeonNotifyDungeonClose_MS2MC::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<MsgDungeonNotifyDungeonClose_MS2MC*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 7) {
    ZR_(serialid_, mapuuid_);
    msgtype_ = 2003;
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgDungeonNotifyDungeonClose_MS2MC::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.MsgDungeonNotifyDungeonClose_MS2MC)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 SerialID = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &serialid_)));
          set_has_serialid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_msgType;
        break;
      }

      // optional .MsgPB.EMsgType msgType = 2 [default = _MSG_DUNGEON_NOTIFY_DUNGEON_CLOSE_MS2MC];
      case 2: {
        if (tag == 16) {
         parse_msgType:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::EMsgType_IsValid(value)) {
            set_msgtype(static_cast< ::MsgPB::EMsgType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_mapuuid;
        break;
      }

      // optional int64 mapuuid = 3;
      case 3: {
        if (tag == 24) {
         parse_mapuuid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &mapuuid_)));
          set_has_mapuuid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.MsgDungeonNotifyDungeonClose_MS2MC)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.MsgDungeonNotifyDungeonClose_MS2MC)
  return false;
#undef DO_
}

void MsgDungeonNotifyDungeonClose_MS2MC::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.MsgDungeonNotifyDungeonClose_MS2MC)
  // optional int64 SerialID = 1;
  if (has_serialid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->serialid(), output);
  }

  // optional .MsgPB.EMsgType msgType = 2 [default = _MSG_DUNGEON_NOTIFY_DUNGEON_CLOSE_MS2MC];
  if (has_msgtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->msgtype(), output);
  }

  // optional int64 mapuuid = 3;
  if (has_mapuuid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->mapuuid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.MsgDungeonNotifyDungeonClose_MS2MC)
}

::google::protobuf::uint8* MsgDungeonNotifyDungeonClose_MS2MC::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.MsgDungeonNotifyDungeonClose_MS2MC)
  // optional int64 SerialID = 1;
  if (has_serialid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->serialid(), target);
  }

  // optional .MsgPB.EMsgType msgType = 2 [default = _MSG_DUNGEON_NOTIFY_DUNGEON_CLOSE_MS2MC];
  if (has_msgtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->msgtype(), target);
  }

  // optional int64 mapuuid = 3;
  if (has_mapuuid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->mapuuid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.MsgDungeonNotifyDungeonClose_MS2MC)
  return target;
}

int MsgDungeonNotifyDungeonClose_MS2MC::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 SerialID = 1;
    if (has_serialid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->serialid());
    }

    // optional .MsgPB.EMsgType msgType = 2 [default = _MSG_DUNGEON_NOTIFY_DUNGEON_CLOSE_MS2MC];
    if (has_msgtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgtype());
    }

    // optional int64 mapuuid = 3;
    if (has_mapuuid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->mapuuid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgDungeonNotifyDungeonClose_MS2MC::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgDungeonNotifyDungeonClose_MS2MC* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgDungeonNotifyDungeonClose_MS2MC*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgDungeonNotifyDungeonClose_MS2MC::MergeFrom(const MsgDungeonNotifyDungeonClose_MS2MC& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_serialid()) {
      set_serialid(from.serialid());
    }
    if (from.has_msgtype()) {
      set_msgtype(from.msgtype());
    }
    if (from.has_mapuuid()) {
      set_mapuuid(from.mapuuid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgDungeonNotifyDungeonClose_MS2MC::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgDungeonNotifyDungeonClose_MS2MC::CopyFrom(const MsgDungeonNotifyDungeonClose_MS2MC& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgDungeonNotifyDungeonClose_MS2MC::IsInitialized() const {

  return true;
}

void MsgDungeonNotifyDungeonClose_MS2MC::Swap(MsgDungeonNotifyDungeonClose_MS2MC* other) {
  if (other != this) {
    std::swap(serialid_, other->serialid_);
    std::swap(msgtype_, other->msgtype_);
    std::swap(mapuuid_, other->mapuuid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgDungeonNotifyDungeonClose_MS2MC::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgDungeonNotifyDungeonClose_MS2MC_descriptor_;
  metadata.reflection = MsgDungeonNotifyDungeonClose_MS2MC_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgDungeonReturnDungeon_MS2MC::kMsgTypeFieldNumber;
const int MsgDungeonReturnDungeon_MS2MC::kIggidFieldNumber;
const int MsgDungeonReturnDungeon_MS2MC::kMapuuidFieldNumber;
#endif  // !_MSC_VER

MsgDungeonReturnDungeon_MS2MC::MsgDungeonReturnDungeon_MS2MC()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.MsgDungeonReturnDungeon_MS2MC)
}

void MsgDungeonReturnDungeon_MS2MC::InitAsDefaultInstance() {
}

MsgDungeonReturnDungeon_MS2MC::MsgDungeonReturnDungeon_MS2MC(const MsgDungeonReturnDungeon_MS2MC& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.MsgDungeonReturnDungeon_MS2MC)
}

void MsgDungeonReturnDungeon_MS2MC::SharedCtor() {
  _cached_size_ = 0;
  msgtype_ = 2004;
  iggid_ = GOOGLE_LONGLONG(0);
  mapuuid_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgDungeonReturnDungeon_MS2MC::~MsgDungeonReturnDungeon_MS2MC() {
  // @@protoc_insertion_point(destructor:MsgPB.MsgDungeonReturnDungeon_MS2MC)
  SharedDtor();
}

void MsgDungeonReturnDungeon_MS2MC::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgDungeonReturnDungeon_MS2MC::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgDungeonReturnDungeon_MS2MC::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgDungeonReturnDungeon_MS2MC_descriptor_;
}

const MsgDungeonReturnDungeon_MS2MC& MsgDungeonReturnDungeon_MS2MC::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgDungeon_2eproto();
  return *default_instance_;
}

MsgDungeonReturnDungeon_MS2MC* MsgDungeonReturnDungeon_MS2MC::default_instance_ = NULL;

MsgDungeonReturnDungeon_MS2MC* MsgDungeonReturnDungeon_MS2MC::New() const {
  return new MsgDungeonReturnDungeon_MS2MC;
}

void MsgDungeonReturnDungeon_MS2MC::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<MsgDungeonReturnDungeon_MS2MC*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 7) {
    ZR_(iggid_, mapuuid_);
    msgtype_ = 2004;
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgDungeonReturnDungeon_MS2MC::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.MsgDungeonReturnDungeon_MS2MC)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_DUNGEON_RETURN_DUNGEON_MS2MC];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::EMsgType_IsValid(value)) {
            set_msgtype(static_cast< ::MsgPB::EMsgType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_iggid;
        break;
      }

      // optional int64 iggid = 2;
      case 2: {
        if (tag == 16) {
         parse_iggid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &iggid_)));
          set_has_iggid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_mapuuid;
        break;
      }

      // optional int64 mapuuid = 3;
      case 3: {
        if (tag == 24) {
         parse_mapuuid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &mapuuid_)));
          set_has_mapuuid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.MsgDungeonReturnDungeon_MS2MC)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.MsgDungeonReturnDungeon_MS2MC)
  return false;
#undef DO_
}

void MsgDungeonReturnDungeon_MS2MC::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.MsgDungeonReturnDungeon_MS2MC)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_DUNGEON_RETURN_DUNGEON_MS2MC];
  if (has_msgtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->msgtype(), output);
  }

  // optional int64 iggid = 2;
  if (has_iggid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->iggid(), output);
  }

  // optional int64 mapuuid = 3;
  if (has_mapuuid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->mapuuid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.MsgDungeonReturnDungeon_MS2MC)
}

::google::protobuf::uint8* MsgDungeonReturnDungeon_MS2MC::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.MsgDungeonReturnDungeon_MS2MC)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_DUNGEON_RETURN_DUNGEON_MS2MC];
  if (has_msgtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->msgtype(), target);
  }

  // optional int64 iggid = 2;
  if (has_iggid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->iggid(), target);
  }

  // optional int64 mapuuid = 3;
  if (has_mapuuid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->mapuuid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.MsgDungeonReturnDungeon_MS2MC)
  return target;
}

int MsgDungeonReturnDungeon_MS2MC::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_DUNGEON_RETURN_DUNGEON_MS2MC];
    if (has_msgtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgtype());
    }

    // optional int64 iggid = 2;
    if (has_iggid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->iggid());
    }

    // optional int64 mapuuid = 3;
    if (has_mapuuid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->mapuuid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgDungeonReturnDungeon_MS2MC::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgDungeonReturnDungeon_MS2MC* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgDungeonReturnDungeon_MS2MC*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgDungeonReturnDungeon_MS2MC::MergeFrom(const MsgDungeonReturnDungeon_MS2MC& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msgtype()) {
      set_msgtype(from.msgtype());
    }
    if (from.has_iggid()) {
      set_iggid(from.iggid());
    }
    if (from.has_mapuuid()) {
      set_mapuuid(from.mapuuid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgDungeonReturnDungeon_MS2MC::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgDungeonReturnDungeon_MS2MC::CopyFrom(const MsgDungeonReturnDungeon_MS2MC& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgDungeonReturnDungeon_MS2MC::IsInitialized() const {

  return true;
}

void MsgDungeonReturnDungeon_MS2MC::Swap(MsgDungeonReturnDungeon_MS2MC* other) {
  if (other != this) {
    std::swap(msgtype_, other->msgtype_);
    std::swap(iggid_, other->iggid_);
    std::swap(mapuuid_, other->mapuuid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgDungeonReturnDungeon_MS2MC::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgDungeonReturnDungeon_MS2MC_descriptor_;
  metadata.reflection = MsgDungeonReturnDungeon_MS2MC_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgDungeonJoinPrivateMap_MC2GS::kMsgTypeFieldNumber;
const int MsgDungeonJoinPrivateMap_MC2GS::kIggidFieldNumber;
const int MsgDungeonJoinPrivateMap_MC2GS::kGateTargetFieldNumber;
#endif  // !_MSC_VER

MsgDungeonJoinPrivateMap_MC2GS::MsgDungeonJoinPrivateMap_MC2GS()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.MsgDungeonJoinPrivateMap_MC2GS)
}

void MsgDungeonJoinPrivateMap_MC2GS::InitAsDefaultInstance() {
  gate_target_ = const_cast< ::MsgPB::MsgGateTarget*>(&::MsgPB::MsgGateTarget::default_instance());
}

MsgDungeonJoinPrivateMap_MC2GS::MsgDungeonJoinPrivateMap_MC2GS(const MsgDungeonJoinPrivateMap_MC2GS& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.MsgDungeonJoinPrivateMap_MC2GS)
}

void MsgDungeonJoinPrivateMap_MC2GS::SharedCtor() {
  _cached_size_ = 0;
  msgtype_ = 2005;
  iggid_ = GOOGLE_LONGLONG(0);
  gate_target_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgDungeonJoinPrivateMap_MC2GS::~MsgDungeonJoinPrivateMap_MC2GS() {
  // @@protoc_insertion_point(destructor:MsgPB.MsgDungeonJoinPrivateMap_MC2GS)
  SharedDtor();
}

void MsgDungeonJoinPrivateMap_MC2GS::SharedDtor() {
  if (this != default_instance_) {
    delete gate_target_;
  }
}

void MsgDungeonJoinPrivateMap_MC2GS::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgDungeonJoinPrivateMap_MC2GS::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgDungeonJoinPrivateMap_MC2GS_descriptor_;
}

const MsgDungeonJoinPrivateMap_MC2GS& MsgDungeonJoinPrivateMap_MC2GS::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgDungeon_2eproto();
  return *default_instance_;
}

MsgDungeonJoinPrivateMap_MC2GS* MsgDungeonJoinPrivateMap_MC2GS::default_instance_ = NULL;

MsgDungeonJoinPrivateMap_MC2GS* MsgDungeonJoinPrivateMap_MC2GS::New() const {
  return new MsgDungeonJoinPrivateMap_MC2GS;
}

void MsgDungeonJoinPrivateMap_MC2GS::Clear() {
  if (_has_bits_[0 / 32] & 7) {
    msgtype_ = 2005;
    iggid_ = GOOGLE_LONGLONG(0);
    if (has_gate_target()) {
      if (gate_target_ != NULL) gate_target_->::MsgPB::MsgGateTarget::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgDungeonJoinPrivateMap_MC2GS::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.MsgDungeonJoinPrivateMap_MC2GS)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_DUNGEON_JOIN_PRIVATE_MAP_MC2GS];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::EMsgType_IsValid(value)) {
            set_msgtype(static_cast< ::MsgPB::EMsgType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_iggid;
        break;
      }

      // optional int64 iggid = 2;
      case 2: {
        if (tag == 16) {
         parse_iggid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &iggid_)));
          set_has_iggid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_gate_target;
        break;
      }

      // optional .MsgPB.MsgGateTarget gate_target = 3;
      case 3: {
        if (tag == 26) {
         parse_gate_target:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_gate_target()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.MsgDungeonJoinPrivateMap_MC2GS)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.MsgDungeonJoinPrivateMap_MC2GS)
  return false;
#undef DO_
}

void MsgDungeonJoinPrivateMap_MC2GS::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.MsgDungeonJoinPrivateMap_MC2GS)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_DUNGEON_JOIN_PRIVATE_MAP_MC2GS];
  if (has_msgtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->msgtype(), output);
  }

  // optional int64 iggid = 2;
  if (has_iggid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->iggid(), output);
  }

  // optional .MsgPB.MsgGateTarget gate_target = 3;
  if (has_gate_target()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->gate_target(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.MsgDungeonJoinPrivateMap_MC2GS)
}

::google::protobuf::uint8* MsgDungeonJoinPrivateMap_MC2GS::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.MsgDungeonJoinPrivateMap_MC2GS)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_DUNGEON_JOIN_PRIVATE_MAP_MC2GS];
  if (has_msgtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->msgtype(), target);
  }

  // optional int64 iggid = 2;
  if (has_iggid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->iggid(), target);
  }

  // optional .MsgPB.MsgGateTarget gate_target = 3;
  if (has_gate_target()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->gate_target(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.MsgDungeonJoinPrivateMap_MC2GS)
  return target;
}

int MsgDungeonJoinPrivateMap_MC2GS::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_DUNGEON_JOIN_PRIVATE_MAP_MC2GS];
    if (has_msgtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgtype());
    }

    // optional int64 iggid = 2;
    if (has_iggid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->iggid());
    }

    // optional .MsgPB.MsgGateTarget gate_target = 3;
    if (has_gate_target()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->gate_target());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgDungeonJoinPrivateMap_MC2GS::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgDungeonJoinPrivateMap_MC2GS* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgDungeonJoinPrivateMap_MC2GS*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgDungeonJoinPrivateMap_MC2GS::MergeFrom(const MsgDungeonJoinPrivateMap_MC2GS& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msgtype()) {
      set_msgtype(from.msgtype());
    }
    if (from.has_iggid()) {
      set_iggid(from.iggid());
    }
    if (from.has_gate_target()) {
      mutable_gate_target()->::MsgPB::MsgGateTarget::MergeFrom(from.gate_target());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgDungeonJoinPrivateMap_MC2GS::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgDungeonJoinPrivateMap_MC2GS::CopyFrom(const MsgDungeonJoinPrivateMap_MC2GS& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgDungeonJoinPrivateMap_MC2GS::IsInitialized() const {

  return true;
}

void MsgDungeonJoinPrivateMap_MC2GS::Swap(MsgDungeonJoinPrivateMap_MC2GS* other) {
  if (other != this) {
    std::swap(msgtype_, other->msgtype_);
    std::swap(iggid_, other->iggid_);
    std::swap(gate_target_, other->gate_target_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgDungeonJoinPrivateMap_MC2GS::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgDungeonJoinPrivateMap_MC2GS_descriptor_;
  metadata.reflection = MsgDungeonJoinPrivateMap_MC2GS_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgDungeonJoinPublicMap_M2GS::kMsgTypeFieldNumber;
const int MsgDungeonJoinPublicMap_M2GS::kIggidFieldNumber;
#endif  // !_MSC_VER

MsgDungeonJoinPublicMap_M2GS::MsgDungeonJoinPublicMap_M2GS()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.MsgDungeonJoinPublicMap_M2GS)
}

void MsgDungeonJoinPublicMap_M2GS::InitAsDefaultInstance() {
}

MsgDungeonJoinPublicMap_M2GS::MsgDungeonJoinPublicMap_M2GS(const MsgDungeonJoinPublicMap_M2GS& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.MsgDungeonJoinPublicMap_M2GS)
}

void MsgDungeonJoinPublicMap_M2GS::SharedCtor() {
  _cached_size_ = 0;
  msgtype_ = 1999;
  iggid_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgDungeonJoinPublicMap_M2GS::~MsgDungeonJoinPublicMap_M2GS() {
  // @@protoc_insertion_point(destructor:MsgPB.MsgDungeonJoinPublicMap_M2GS)
  SharedDtor();
}

void MsgDungeonJoinPublicMap_M2GS::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgDungeonJoinPublicMap_M2GS::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgDungeonJoinPublicMap_M2GS::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgDungeonJoinPublicMap_M2GS_descriptor_;
}

const MsgDungeonJoinPublicMap_M2GS& MsgDungeonJoinPublicMap_M2GS::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgDungeon_2eproto();
  return *default_instance_;
}

MsgDungeonJoinPublicMap_M2GS* MsgDungeonJoinPublicMap_M2GS::default_instance_ = NULL;

MsgDungeonJoinPublicMap_M2GS* MsgDungeonJoinPublicMap_M2GS::New() const {
  return new MsgDungeonJoinPublicMap_M2GS;
}

void MsgDungeonJoinPublicMap_M2GS::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    msgtype_ = 1999;
    iggid_ = GOOGLE_LONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgDungeonJoinPublicMap_M2GS::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.MsgDungeonJoinPublicMap_M2GS)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_DUNGEONJOIN_PUBLICMAP_M2GS];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::EMsgType_IsValid(value)) {
            set_msgtype(static_cast< ::MsgPB::EMsgType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_iggid;
        break;
      }

      // optional int64 iggid = 2;
      case 2: {
        if (tag == 16) {
         parse_iggid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &iggid_)));
          set_has_iggid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.MsgDungeonJoinPublicMap_M2GS)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.MsgDungeonJoinPublicMap_M2GS)
  return false;
#undef DO_
}

void MsgDungeonJoinPublicMap_M2GS::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.MsgDungeonJoinPublicMap_M2GS)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_DUNGEONJOIN_PUBLICMAP_M2GS];
  if (has_msgtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->msgtype(), output);
  }

  // optional int64 iggid = 2;
  if (has_iggid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->iggid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.MsgDungeonJoinPublicMap_M2GS)
}

::google::protobuf::uint8* MsgDungeonJoinPublicMap_M2GS::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.MsgDungeonJoinPublicMap_M2GS)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_DUNGEONJOIN_PUBLICMAP_M2GS];
  if (has_msgtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->msgtype(), target);
  }

  // optional int64 iggid = 2;
  if (has_iggid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->iggid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.MsgDungeonJoinPublicMap_M2GS)
  return target;
}

int MsgDungeonJoinPublicMap_M2GS::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_DUNGEONJOIN_PUBLICMAP_M2GS];
    if (has_msgtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgtype());
    }

    // optional int64 iggid = 2;
    if (has_iggid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->iggid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgDungeonJoinPublicMap_M2GS::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgDungeonJoinPublicMap_M2GS* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgDungeonJoinPublicMap_M2GS*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgDungeonJoinPublicMap_M2GS::MergeFrom(const MsgDungeonJoinPublicMap_M2GS& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msgtype()) {
      set_msgtype(from.msgtype());
    }
    if (from.has_iggid()) {
      set_iggid(from.iggid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgDungeonJoinPublicMap_M2GS::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgDungeonJoinPublicMap_M2GS::CopyFrom(const MsgDungeonJoinPublicMap_M2GS& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgDungeonJoinPublicMap_M2GS::IsInitialized() const {

  return true;
}

void MsgDungeonJoinPublicMap_M2GS::Swap(MsgDungeonJoinPublicMap_M2GS* other) {
  if (other != this) {
    std::swap(msgtype_, other->msgtype_);
    std::swap(iggid_, other->iggid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgDungeonJoinPublicMap_M2GS::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgDungeonJoinPublicMap_M2GS_descriptor_;
  metadata.reflection = MsgDungeonJoinPublicMap_M2GS_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgDungeonInfo_MS2C::kMsgTypeFieldNumber;
const int MsgDungeonInfo_MS2C::kIggidFieldNumber;
const int MsgDungeonInfo_MS2C::kStartTimeFieldNumber;
const int MsgDungeonInfo_MS2C::kEndTimeFieldNumber;
#endif  // !_MSC_VER

MsgDungeonInfo_MS2C::MsgDungeonInfo_MS2C()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.MsgDungeonInfo_MS2C)
}

void MsgDungeonInfo_MS2C::InitAsDefaultInstance() {
}

MsgDungeonInfo_MS2C::MsgDungeonInfo_MS2C(const MsgDungeonInfo_MS2C& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.MsgDungeonInfo_MS2C)
}

void MsgDungeonInfo_MS2C::SharedCtor() {
  _cached_size_ = 0;
  msgtype_ = 2006;
  iggid_ = GOOGLE_LONGLONG(0);
  start_time_ = GOOGLE_LONGLONG(0);
  end_time_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgDungeonInfo_MS2C::~MsgDungeonInfo_MS2C() {
  // @@protoc_insertion_point(destructor:MsgPB.MsgDungeonInfo_MS2C)
  SharedDtor();
}

void MsgDungeonInfo_MS2C::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgDungeonInfo_MS2C::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgDungeonInfo_MS2C::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgDungeonInfo_MS2C_descriptor_;
}

const MsgDungeonInfo_MS2C& MsgDungeonInfo_MS2C::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgDungeon_2eproto();
  return *default_instance_;
}

MsgDungeonInfo_MS2C* MsgDungeonInfo_MS2C::default_instance_ = NULL;

MsgDungeonInfo_MS2C* MsgDungeonInfo_MS2C::New() const {
  return new MsgDungeonInfo_MS2C;
}

void MsgDungeonInfo_MS2C::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<MsgDungeonInfo_MS2C*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 15) {
    ZR_(iggid_, end_time_);
    msgtype_ = 2006;
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgDungeonInfo_MS2C::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.MsgDungeonInfo_MS2C)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_DUNGEON_INFO_MS2C];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::EMsgType_IsValid(value)) {
            set_msgtype(static_cast< ::MsgPB::EMsgType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_iggid;
        break;
      }

      // optional int64 iggid = 2;
      case 2: {
        if (tag == 16) {
         parse_iggid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &iggid_)));
          set_has_iggid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_start_time;
        break;
      }

      // optional int64 start_time = 3;
      case 3: {
        if (tag == 24) {
         parse_start_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &start_time_)));
          set_has_start_time();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_end_time;
        break;
      }

      // optional int64 end_time = 4;
      case 4: {
        if (tag == 32) {
         parse_end_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &end_time_)));
          set_has_end_time();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.MsgDungeonInfo_MS2C)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.MsgDungeonInfo_MS2C)
  return false;
#undef DO_
}

void MsgDungeonInfo_MS2C::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.MsgDungeonInfo_MS2C)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_DUNGEON_INFO_MS2C];
  if (has_msgtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->msgtype(), output);
  }

  // optional int64 iggid = 2;
  if (has_iggid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->iggid(), output);
  }

  // optional int64 start_time = 3;
  if (has_start_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->start_time(), output);
  }

  // optional int64 end_time = 4;
  if (has_end_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->end_time(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.MsgDungeonInfo_MS2C)
}

::google::protobuf::uint8* MsgDungeonInfo_MS2C::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.MsgDungeonInfo_MS2C)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_DUNGEON_INFO_MS2C];
  if (has_msgtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->msgtype(), target);
  }

  // optional int64 iggid = 2;
  if (has_iggid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->iggid(), target);
  }

  // optional int64 start_time = 3;
  if (has_start_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->start_time(), target);
  }

  // optional int64 end_time = 4;
  if (has_end_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->end_time(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.MsgDungeonInfo_MS2C)
  return target;
}

int MsgDungeonInfo_MS2C::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_DUNGEON_INFO_MS2C];
    if (has_msgtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgtype());
    }

    // optional int64 iggid = 2;
    if (has_iggid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->iggid());
    }

    // optional int64 start_time = 3;
    if (has_start_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->start_time());
    }

    // optional int64 end_time = 4;
    if (has_end_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->end_time());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgDungeonInfo_MS2C::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgDungeonInfo_MS2C* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgDungeonInfo_MS2C*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgDungeonInfo_MS2C::MergeFrom(const MsgDungeonInfo_MS2C& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msgtype()) {
      set_msgtype(from.msgtype());
    }
    if (from.has_iggid()) {
      set_iggid(from.iggid());
    }
    if (from.has_start_time()) {
      set_start_time(from.start_time());
    }
    if (from.has_end_time()) {
      set_end_time(from.end_time());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgDungeonInfo_MS2C::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgDungeonInfo_MS2C::CopyFrom(const MsgDungeonInfo_MS2C& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgDungeonInfo_MS2C::IsInitialized() const {

  return true;
}

void MsgDungeonInfo_MS2C::Swap(MsgDungeonInfo_MS2C* other) {
  if (other != this) {
    std::swap(msgtype_, other->msgtype_);
    std::swap(iggid_, other->iggid_);
    std::swap(start_time_, other->start_time_);
    std::swap(end_time_, other->end_time_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgDungeonInfo_MS2C::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgDungeonInfo_MS2C_descriptor_;
  metadata.reflection = MsgDungeonInfo_MS2C_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int DungeonChestOpenItem::kDataIdFieldNumber;
const int DungeonChestOpenItem::kCountFieldNumber;
#endif  // !_MSC_VER

DungeonChestOpenItem::DungeonChestOpenItem()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.DungeonChestOpenItem)
}

void DungeonChestOpenItem::InitAsDefaultInstance() {
}

DungeonChestOpenItem::DungeonChestOpenItem(const DungeonChestOpenItem& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.DungeonChestOpenItem)
}

void DungeonChestOpenItem::SharedCtor() {
  _cached_size_ = 0;
  data_id_ = 0;
  count_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DungeonChestOpenItem::~DungeonChestOpenItem() {
  // @@protoc_insertion_point(destructor:MsgPB.DungeonChestOpenItem)
  SharedDtor();
}

void DungeonChestOpenItem::SharedDtor() {
  if (this != default_instance_) {
  }
}

void DungeonChestOpenItem::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DungeonChestOpenItem::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DungeonChestOpenItem_descriptor_;
}

const DungeonChestOpenItem& DungeonChestOpenItem::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgDungeon_2eproto();
  return *default_instance_;
}

DungeonChestOpenItem* DungeonChestOpenItem::default_instance_ = NULL;

DungeonChestOpenItem* DungeonChestOpenItem::New() const {
  return new DungeonChestOpenItem;
}

void DungeonChestOpenItem::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<DungeonChestOpenItem*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(data_id_, count_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool DungeonChestOpenItem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.DungeonChestOpenItem)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 data_id = 2;
      case 2: {
        if (tag == 16) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &data_id_)));
          set_has_data_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_count;
        break;
      }

      // optional int32 count = 3;
      case 3: {
        if (tag == 24) {
         parse_count:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &count_)));
          set_has_count();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.DungeonChestOpenItem)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.DungeonChestOpenItem)
  return false;
#undef DO_
}

void DungeonChestOpenItem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.DungeonChestOpenItem)
  // optional int32 data_id = 2;
  if (has_data_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->data_id(), output);
  }

  // optional int32 count = 3;
  if (has_count()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->count(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.DungeonChestOpenItem)
}

::google::protobuf::uint8* DungeonChestOpenItem::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.DungeonChestOpenItem)
  // optional int32 data_id = 2;
  if (has_data_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->data_id(), target);
  }

  // optional int32 count = 3;
  if (has_count()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->count(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.DungeonChestOpenItem)
  return target;
}

int DungeonChestOpenItem::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 data_id = 2;
    if (has_data_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->data_id());
    }

    // optional int32 count = 3;
    if (has_count()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->count());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DungeonChestOpenItem::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const DungeonChestOpenItem* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const DungeonChestOpenItem*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void DungeonChestOpenItem::MergeFrom(const DungeonChestOpenItem& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data_id()) {
      set_data_id(from.data_id());
    }
    if (from.has_count()) {
      set_count(from.count());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void DungeonChestOpenItem::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DungeonChestOpenItem::CopyFrom(const DungeonChestOpenItem& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DungeonChestOpenItem::IsInitialized() const {

  return true;
}

void DungeonChestOpenItem::Swap(DungeonChestOpenItem* other) {
  if (other != this) {
    std::swap(data_id_, other->data_id_);
    std::swap(count_, other->count_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata DungeonChestOpenItem::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DungeonChestOpenItem_descriptor_;
  metadata.reflection = DungeonChestOpenItem_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int DungeonBossChest::kChestIdFieldNumber;
const int DungeonBossChest::kChestReopenItemTypeFieldNumber;
const int DungeonBossChest::kChestReopenItemCountFieldNumber;
const int DungeonBossChest::kOpenedFieldNumber;
const int DungeonBossChest::kItemFieldNumber;
#endif  // !_MSC_VER

DungeonBossChest::DungeonBossChest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.DungeonBossChest)
}

void DungeonBossChest::InitAsDefaultInstance() {
}

DungeonBossChest::DungeonBossChest(const DungeonBossChest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.DungeonBossChest)
}

void DungeonBossChest::SharedCtor() {
  _cached_size_ = 0;
  chest_id_ = 0;
  chest_reopen_item_type_ = 0;
  chest_reopen_item_count_ = 0;
  opened_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DungeonBossChest::~DungeonBossChest() {
  // @@protoc_insertion_point(destructor:MsgPB.DungeonBossChest)
  SharedDtor();
}

void DungeonBossChest::SharedDtor() {
  if (this != default_instance_) {
  }
}

void DungeonBossChest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DungeonBossChest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DungeonBossChest_descriptor_;
}

const DungeonBossChest& DungeonBossChest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgDungeon_2eproto();
  return *default_instance_;
}

DungeonBossChest* DungeonBossChest::default_instance_ = NULL;

DungeonBossChest* DungeonBossChest::New() const {
  return new DungeonBossChest;
}

void DungeonBossChest::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<DungeonBossChest*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(chest_id_, opened_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  item_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool DungeonBossChest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.DungeonBossChest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 chest_id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &chest_id_)));
          set_has_chest_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_chest_reopen_item_type;
        break;
      }

      // optional int32 chest_reopen_item_type = 2;
      case 2: {
        if (tag == 16) {
         parse_chest_reopen_item_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &chest_reopen_item_type_)));
          set_has_chest_reopen_item_type();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_chest_reopen_item_count;
        break;
      }

      // optional int32 chest_reopen_item_count = 3;
      case 3: {
        if (tag == 24) {
         parse_chest_reopen_item_count:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &chest_reopen_item_count_)));
          set_has_chest_reopen_item_count();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_opened;
        break;
      }

      // optional int32 opened = 4;
      case 4: {
        if (tag == 32) {
         parse_opened:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &opened_)));
          set_has_opened();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_item;
        break;
      }

      // repeated .MsgPB.DungeonChestOpenItem item = 5;
      case 5: {
        if (tag == 42) {
         parse_item:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_item()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_item;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.DungeonBossChest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.DungeonBossChest)
  return false;
#undef DO_
}

void DungeonBossChest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.DungeonBossChest)
  // optional int32 chest_id = 1;
  if (has_chest_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->chest_id(), output);
  }

  // optional int32 chest_reopen_item_type = 2;
  if (has_chest_reopen_item_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->chest_reopen_item_type(), output);
  }

  // optional int32 chest_reopen_item_count = 3;
  if (has_chest_reopen_item_count()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->chest_reopen_item_count(), output);
  }

  // optional int32 opened = 4;
  if (has_opened()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->opened(), output);
  }

  // repeated .MsgPB.DungeonChestOpenItem item = 5;
  for (int i = 0; i < this->item_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->item(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.DungeonBossChest)
}

::google::protobuf::uint8* DungeonBossChest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.DungeonBossChest)
  // optional int32 chest_id = 1;
  if (has_chest_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->chest_id(), target);
  }

  // optional int32 chest_reopen_item_type = 2;
  if (has_chest_reopen_item_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->chest_reopen_item_type(), target);
  }

  // optional int32 chest_reopen_item_count = 3;
  if (has_chest_reopen_item_count()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->chest_reopen_item_count(), target);
  }

  // optional int32 opened = 4;
  if (has_opened()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->opened(), target);
  }

  // repeated .MsgPB.DungeonChestOpenItem item = 5;
  for (int i = 0; i < this->item_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->item(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.DungeonBossChest)
  return target;
}

int DungeonBossChest::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 chest_id = 1;
    if (has_chest_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->chest_id());
    }

    // optional int32 chest_reopen_item_type = 2;
    if (has_chest_reopen_item_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->chest_reopen_item_type());
    }

    // optional int32 chest_reopen_item_count = 3;
    if (has_chest_reopen_item_count()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->chest_reopen_item_count());
    }

    // optional int32 opened = 4;
    if (has_opened()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->opened());
    }

  }
  // repeated .MsgPB.DungeonChestOpenItem item = 5;
  total_size += 1 * this->item_size();
  for (int i = 0; i < this->item_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->item(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DungeonBossChest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const DungeonBossChest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const DungeonBossChest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void DungeonBossChest::MergeFrom(const DungeonBossChest& from) {
  GOOGLE_CHECK_NE(&from, this);
  item_.MergeFrom(from.item_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_chest_id()) {
      set_chest_id(from.chest_id());
    }
    if (from.has_chest_reopen_item_type()) {
      set_chest_reopen_item_type(from.chest_reopen_item_type());
    }
    if (from.has_chest_reopen_item_count()) {
      set_chest_reopen_item_count(from.chest_reopen_item_count());
    }
    if (from.has_opened()) {
      set_opened(from.opened());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void DungeonBossChest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DungeonBossChest::CopyFrom(const DungeonBossChest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DungeonBossChest::IsInitialized() const {

  return true;
}

void DungeonBossChest::Swap(DungeonBossChest* other) {
  if (other != this) {
    std::swap(chest_id_, other->chest_id_);
    std::swap(chest_reopen_item_type_, other->chest_reopen_item_type_);
    std::swap(chest_reopen_item_count_, other->chest_reopen_item_count_);
    std::swap(opened_, other->opened_);
    item_.Swap(&other->item_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata DungeonBossChest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DungeonBossChest_descriptor_;
  metadata.reflection = DungeonBossChest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgDungeonBossChest_MS2C::kMsgTypeFieldNumber;
const int MsgDungeonBossChest_MS2C::kIggidFieldNumber;
const int MsgDungeonBossChest_MS2C::kChestFieldNumber;
#endif  // !_MSC_VER

MsgDungeonBossChest_MS2C::MsgDungeonBossChest_MS2C()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.MsgDungeonBossChest_MS2C)
}

void MsgDungeonBossChest_MS2C::InitAsDefaultInstance() {
}

MsgDungeonBossChest_MS2C::MsgDungeonBossChest_MS2C(const MsgDungeonBossChest_MS2C& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.MsgDungeonBossChest_MS2C)
}

void MsgDungeonBossChest_MS2C::SharedCtor() {
  _cached_size_ = 0;
  msgtype_ = 2007;
  iggid_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgDungeonBossChest_MS2C::~MsgDungeonBossChest_MS2C() {
  // @@protoc_insertion_point(destructor:MsgPB.MsgDungeonBossChest_MS2C)
  SharedDtor();
}

void MsgDungeonBossChest_MS2C::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgDungeonBossChest_MS2C::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgDungeonBossChest_MS2C::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgDungeonBossChest_MS2C_descriptor_;
}

const MsgDungeonBossChest_MS2C& MsgDungeonBossChest_MS2C::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgDungeon_2eproto();
  return *default_instance_;
}

MsgDungeonBossChest_MS2C* MsgDungeonBossChest_MS2C::default_instance_ = NULL;

MsgDungeonBossChest_MS2C* MsgDungeonBossChest_MS2C::New() const {
  return new MsgDungeonBossChest_MS2C;
}

void MsgDungeonBossChest_MS2C::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    msgtype_ = 2007;
    iggid_ = GOOGLE_LONGLONG(0);
  }
  chest_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgDungeonBossChest_MS2C::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.MsgDungeonBossChest_MS2C)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_DUNGEON_BOSS_CHEST_MS2C];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::EMsgType_IsValid(value)) {
            set_msgtype(static_cast< ::MsgPB::EMsgType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_iggid;
        break;
      }

      // optional int64 iggid = 2;
      case 2: {
        if (tag == 16) {
         parse_iggid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &iggid_)));
          set_has_iggid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_chest;
        break;
      }

      // repeated .MsgPB.DungeonBossChest chest = 3;
      case 3: {
        if (tag == 26) {
         parse_chest:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_chest()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_chest;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.MsgDungeonBossChest_MS2C)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.MsgDungeonBossChest_MS2C)
  return false;
#undef DO_
}

void MsgDungeonBossChest_MS2C::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.MsgDungeonBossChest_MS2C)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_DUNGEON_BOSS_CHEST_MS2C];
  if (has_msgtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->msgtype(), output);
  }

  // optional int64 iggid = 2;
  if (has_iggid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->iggid(), output);
  }

  // repeated .MsgPB.DungeonBossChest chest = 3;
  for (int i = 0; i < this->chest_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->chest(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.MsgDungeonBossChest_MS2C)
}

::google::protobuf::uint8* MsgDungeonBossChest_MS2C::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.MsgDungeonBossChest_MS2C)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_DUNGEON_BOSS_CHEST_MS2C];
  if (has_msgtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->msgtype(), target);
  }

  // optional int64 iggid = 2;
  if (has_iggid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->iggid(), target);
  }

  // repeated .MsgPB.DungeonBossChest chest = 3;
  for (int i = 0; i < this->chest_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->chest(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.MsgDungeonBossChest_MS2C)
  return target;
}

int MsgDungeonBossChest_MS2C::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_DUNGEON_BOSS_CHEST_MS2C];
    if (has_msgtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgtype());
    }

    // optional int64 iggid = 2;
    if (has_iggid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->iggid());
    }

  }
  // repeated .MsgPB.DungeonBossChest chest = 3;
  total_size += 1 * this->chest_size();
  for (int i = 0; i < this->chest_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->chest(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgDungeonBossChest_MS2C::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgDungeonBossChest_MS2C* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgDungeonBossChest_MS2C*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgDungeonBossChest_MS2C::MergeFrom(const MsgDungeonBossChest_MS2C& from) {
  GOOGLE_CHECK_NE(&from, this);
  chest_.MergeFrom(from.chest_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msgtype()) {
      set_msgtype(from.msgtype());
    }
    if (from.has_iggid()) {
      set_iggid(from.iggid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgDungeonBossChest_MS2C::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgDungeonBossChest_MS2C::CopyFrom(const MsgDungeonBossChest_MS2C& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgDungeonBossChest_MS2C::IsInitialized() const {

  return true;
}

void MsgDungeonBossChest_MS2C::Swap(MsgDungeonBossChest_MS2C* other) {
  if (other != this) {
    std::swap(msgtype_, other->msgtype_);
    std::swap(iggid_, other->iggid_);
    chest_.Swap(&other->chest_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgDungeonBossChest_MS2C::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgDungeonBossChest_MS2C_descriptor_;
  metadata.reflection = MsgDungeonBossChest_MS2C_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgDungeonBossOpenChest_C2MS::kMsgTypeFieldNumber;
const int MsgDungeonBossOpenChest_C2MS::kIggidFieldNumber;
const int MsgDungeonBossOpenChest_C2MS::kChestIdFieldNumber;
#endif  // !_MSC_VER

MsgDungeonBossOpenChest_C2MS::MsgDungeonBossOpenChest_C2MS()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.MsgDungeonBossOpenChest_C2MS)
}

void MsgDungeonBossOpenChest_C2MS::InitAsDefaultInstance() {
}

MsgDungeonBossOpenChest_C2MS::MsgDungeonBossOpenChest_C2MS(const MsgDungeonBossOpenChest_C2MS& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.MsgDungeonBossOpenChest_C2MS)
}

void MsgDungeonBossOpenChest_C2MS::SharedCtor() {
  _cached_size_ = 0;
  msgtype_ = 2008;
  iggid_ = GOOGLE_LONGLONG(0);
  chest_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgDungeonBossOpenChest_C2MS::~MsgDungeonBossOpenChest_C2MS() {
  // @@protoc_insertion_point(destructor:MsgPB.MsgDungeonBossOpenChest_C2MS)
  SharedDtor();
}

void MsgDungeonBossOpenChest_C2MS::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgDungeonBossOpenChest_C2MS::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgDungeonBossOpenChest_C2MS::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgDungeonBossOpenChest_C2MS_descriptor_;
}

const MsgDungeonBossOpenChest_C2MS& MsgDungeonBossOpenChest_C2MS::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgDungeon_2eproto();
  return *default_instance_;
}

MsgDungeonBossOpenChest_C2MS* MsgDungeonBossOpenChest_C2MS::default_instance_ = NULL;

MsgDungeonBossOpenChest_C2MS* MsgDungeonBossOpenChest_C2MS::New() const {
  return new MsgDungeonBossOpenChest_C2MS;
}

void MsgDungeonBossOpenChest_C2MS::Clear() {
  if (_has_bits_[0 / 32] & 7) {
    msgtype_ = 2008;
    iggid_ = GOOGLE_LONGLONG(0);
    chest_id_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgDungeonBossOpenChest_C2MS::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.MsgDungeonBossOpenChest_C2MS)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_DUNGEON_BOSS_OPEN_CHEST_C2MS];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::EMsgType_IsValid(value)) {
            set_msgtype(static_cast< ::MsgPB::EMsgType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_iggid;
        break;
      }

      // optional int64 iggid = 2;
      case 2: {
        if (tag == 16) {
         parse_iggid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &iggid_)));
          set_has_iggid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_chest_id;
        break;
      }

      // optional int32 chest_id = 3;
      case 3: {
        if (tag == 24) {
         parse_chest_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &chest_id_)));
          set_has_chest_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.MsgDungeonBossOpenChest_C2MS)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.MsgDungeonBossOpenChest_C2MS)
  return false;
#undef DO_
}

void MsgDungeonBossOpenChest_C2MS::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.MsgDungeonBossOpenChest_C2MS)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_DUNGEON_BOSS_OPEN_CHEST_C2MS];
  if (has_msgtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->msgtype(), output);
  }

  // optional int64 iggid = 2;
  if (has_iggid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->iggid(), output);
  }

  // optional int32 chest_id = 3;
  if (has_chest_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->chest_id(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.MsgDungeonBossOpenChest_C2MS)
}

::google::protobuf::uint8* MsgDungeonBossOpenChest_C2MS::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.MsgDungeonBossOpenChest_C2MS)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_DUNGEON_BOSS_OPEN_CHEST_C2MS];
  if (has_msgtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->msgtype(), target);
  }

  // optional int64 iggid = 2;
  if (has_iggid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->iggid(), target);
  }

  // optional int32 chest_id = 3;
  if (has_chest_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->chest_id(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.MsgDungeonBossOpenChest_C2MS)
  return target;
}

int MsgDungeonBossOpenChest_C2MS::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_DUNGEON_BOSS_OPEN_CHEST_C2MS];
    if (has_msgtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgtype());
    }

    // optional int64 iggid = 2;
    if (has_iggid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->iggid());
    }

    // optional int32 chest_id = 3;
    if (has_chest_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->chest_id());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgDungeonBossOpenChest_C2MS::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgDungeonBossOpenChest_C2MS* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgDungeonBossOpenChest_C2MS*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgDungeonBossOpenChest_C2MS::MergeFrom(const MsgDungeonBossOpenChest_C2MS& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msgtype()) {
      set_msgtype(from.msgtype());
    }
    if (from.has_iggid()) {
      set_iggid(from.iggid());
    }
    if (from.has_chest_id()) {
      set_chest_id(from.chest_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgDungeonBossOpenChest_C2MS::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgDungeonBossOpenChest_C2MS::CopyFrom(const MsgDungeonBossOpenChest_C2MS& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgDungeonBossOpenChest_C2MS::IsInitialized() const {

  return true;
}

void MsgDungeonBossOpenChest_C2MS::Swap(MsgDungeonBossOpenChest_C2MS* other) {
  if (other != this) {
    std::swap(msgtype_, other->msgtype_);
    std::swap(iggid_, other->iggid_);
    std::swap(chest_id_, other->chest_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgDungeonBossOpenChest_C2MS::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgDungeonBossOpenChest_C2MS_descriptor_;
  metadata.reflection = MsgDungeonBossOpenChest_C2MS_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgDungeonBossOpenChestRs_MS2C::kMsgTypeFieldNumber;
const int MsgDungeonBossOpenChestRs_MS2C::kIggidFieldNumber;
const int MsgDungeonBossOpenChestRs_MS2C::kResFieldNumber;
const int MsgDungeonBossOpenChestRs_MS2C::kItemFieldNumber;
const int MsgDungeonBossOpenChestRs_MS2C::kDropInfoFieldNumber;
const int MsgDungeonBossOpenChestRs_MS2C::kChestIdFieldNumber;
#endif  // !_MSC_VER

MsgDungeonBossOpenChestRs_MS2C::MsgDungeonBossOpenChestRs_MS2C()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.MsgDungeonBossOpenChestRs_MS2C)
}

void MsgDungeonBossOpenChestRs_MS2C::InitAsDefaultInstance() {
}

MsgDungeonBossOpenChestRs_MS2C::MsgDungeonBossOpenChestRs_MS2C(const MsgDungeonBossOpenChestRs_MS2C& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.MsgDungeonBossOpenChestRs_MS2C)
}

void MsgDungeonBossOpenChestRs_MS2C::SharedCtor() {
  _cached_size_ = 0;
  msgtype_ = 2009;
  iggid_ = GOOGLE_LONGLONG(0);
  res_ = 0;
  chest_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgDungeonBossOpenChestRs_MS2C::~MsgDungeonBossOpenChestRs_MS2C() {
  // @@protoc_insertion_point(destructor:MsgPB.MsgDungeonBossOpenChestRs_MS2C)
  SharedDtor();
}

void MsgDungeonBossOpenChestRs_MS2C::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgDungeonBossOpenChestRs_MS2C::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgDungeonBossOpenChestRs_MS2C::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgDungeonBossOpenChestRs_MS2C_descriptor_;
}

const MsgDungeonBossOpenChestRs_MS2C& MsgDungeonBossOpenChestRs_MS2C::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgDungeon_2eproto();
  return *default_instance_;
}

MsgDungeonBossOpenChestRs_MS2C* MsgDungeonBossOpenChestRs_MS2C::default_instance_ = NULL;

MsgDungeonBossOpenChestRs_MS2C* MsgDungeonBossOpenChestRs_MS2C::New() const {
  return new MsgDungeonBossOpenChestRs_MS2C;
}

void MsgDungeonBossOpenChestRs_MS2C::Clear() {
  if (_has_bits_[0 / 32] & 39) {
    msgtype_ = 2009;
    iggid_ = GOOGLE_LONGLONG(0);
    res_ = 0;
    chest_id_ = 0;
  }
  item_.Clear();
  drop_info_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgDungeonBossOpenChestRs_MS2C::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.MsgDungeonBossOpenChestRs_MS2C)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_DUNGEON_BOSS_OPEN_CHEST_RS_MS2C];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::EMsgType_IsValid(value)) {
            set_msgtype(static_cast< ::MsgPB::EMsgType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_iggid;
        break;
      }

      // optional int64 iggid = 2;
      case 2: {
        if (tag == 16) {
         parse_iggid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &iggid_)));
          set_has_iggid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_res;
        break;
      }

      // optional .MsgPB.ENUM_DUNGEON_RESULT res = 3;
      case 3: {
        if (tag == 24) {
         parse_res:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::ENUM_DUNGEON_RESULT_IsValid(value)) {
            set_res(static_cast< ::MsgPB::ENUM_DUNGEON_RESULT >(value));
          } else {
            mutable_unknown_fields()->AddVarint(3, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_item;
        break;
      }

      // repeated .MsgPB.DungeonChestOpenItem item = 4;
      case 4: {
        if (tag == 34) {
         parse_item:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_item()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_item;
        if (input->ExpectTag(42)) goto parse_drop_info;
        break;
      }

      // repeated .MsgPB.PBDropInfo drop_info = 5;
      case 5: {
        if (tag == 42) {
         parse_drop_info:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_drop_info()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_drop_info;
        if (input->ExpectTag(48)) goto parse_chest_id;
        break;
      }

      // optional int32 chest_id = 6;
      case 6: {
        if (tag == 48) {
         parse_chest_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &chest_id_)));
          set_has_chest_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.MsgDungeonBossOpenChestRs_MS2C)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.MsgDungeonBossOpenChestRs_MS2C)
  return false;
#undef DO_
}

void MsgDungeonBossOpenChestRs_MS2C::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.MsgDungeonBossOpenChestRs_MS2C)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_DUNGEON_BOSS_OPEN_CHEST_RS_MS2C];
  if (has_msgtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->msgtype(), output);
  }

  // optional int64 iggid = 2;
  if (has_iggid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->iggid(), output);
  }

  // optional .MsgPB.ENUM_DUNGEON_RESULT res = 3;
  if (has_res()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->res(), output);
  }

  // repeated .MsgPB.DungeonChestOpenItem item = 4;
  for (int i = 0; i < this->item_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->item(i), output);
  }

  // repeated .MsgPB.PBDropInfo drop_info = 5;
  for (int i = 0; i < this->drop_info_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->drop_info(i), output);
  }

  // optional int32 chest_id = 6;
  if (has_chest_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->chest_id(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.MsgDungeonBossOpenChestRs_MS2C)
}

::google::protobuf::uint8* MsgDungeonBossOpenChestRs_MS2C::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.MsgDungeonBossOpenChestRs_MS2C)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_DUNGEON_BOSS_OPEN_CHEST_RS_MS2C];
  if (has_msgtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->msgtype(), target);
  }

  // optional int64 iggid = 2;
  if (has_iggid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->iggid(), target);
  }

  // optional .MsgPB.ENUM_DUNGEON_RESULT res = 3;
  if (has_res()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->res(), target);
  }

  // repeated .MsgPB.DungeonChestOpenItem item = 4;
  for (int i = 0; i < this->item_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->item(i), target);
  }

  // repeated .MsgPB.PBDropInfo drop_info = 5;
  for (int i = 0; i < this->drop_info_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->drop_info(i), target);
  }

  // optional int32 chest_id = 6;
  if (has_chest_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->chest_id(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.MsgDungeonBossOpenChestRs_MS2C)
  return target;
}

int MsgDungeonBossOpenChestRs_MS2C::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_DUNGEON_BOSS_OPEN_CHEST_RS_MS2C];
    if (has_msgtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgtype());
    }

    // optional int64 iggid = 2;
    if (has_iggid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->iggid());
    }

    // optional .MsgPB.ENUM_DUNGEON_RESULT res = 3;
    if (has_res()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->res());
    }

    // optional int32 chest_id = 6;
    if (has_chest_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->chest_id());
    }

  }
  // repeated .MsgPB.DungeonChestOpenItem item = 4;
  total_size += 1 * this->item_size();
  for (int i = 0; i < this->item_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->item(i));
  }

  // repeated .MsgPB.PBDropInfo drop_info = 5;
  total_size += 1 * this->drop_info_size();
  for (int i = 0; i < this->drop_info_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->drop_info(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgDungeonBossOpenChestRs_MS2C::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgDungeonBossOpenChestRs_MS2C* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgDungeonBossOpenChestRs_MS2C*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgDungeonBossOpenChestRs_MS2C::MergeFrom(const MsgDungeonBossOpenChestRs_MS2C& from) {
  GOOGLE_CHECK_NE(&from, this);
  item_.MergeFrom(from.item_);
  drop_info_.MergeFrom(from.drop_info_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msgtype()) {
      set_msgtype(from.msgtype());
    }
    if (from.has_iggid()) {
      set_iggid(from.iggid());
    }
    if (from.has_res()) {
      set_res(from.res());
    }
    if (from.has_chest_id()) {
      set_chest_id(from.chest_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgDungeonBossOpenChestRs_MS2C::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgDungeonBossOpenChestRs_MS2C::CopyFrom(const MsgDungeonBossOpenChestRs_MS2C& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgDungeonBossOpenChestRs_MS2C::IsInitialized() const {

  return true;
}

void MsgDungeonBossOpenChestRs_MS2C::Swap(MsgDungeonBossOpenChestRs_MS2C* other) {
  if (other != this) {
    std::swap(msgtype_, other->msgtype_);
    std::swap(iggid_, other->iggid_);
    std::swap(res_, other->res_);
    item_.Swap(&other->item_);
    drop_info_.Swap(&other->drop_info_);
    std::swap(chest_id_, other->chest_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgDungeonBossOpenChestRs_MS2C::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgDungeonBossOpenChestRs_MS2C_descriptor_;
  metadata.reflection = MsgDungeonBossOpenChestRs_MS2C_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgDungeonBossDrop_MS2C::kMsgTypeFieldNumber;
const int MsgDungeonBossDrop_MS2C::kIggidFieldNumber;
const int MsgDungeonBossDrop_MS2C::kMobInsIDFieldNumber;
const int MsgDungeonBossDrop_MS2C::kMapObjectIdFieldNumber;
const int MsgDungeonBossDrop_MS2C::kPosXFieldNumber;
const int MsgDungeonBossDrop_MS2C::kPosYFieldNumber;
const int MsgDungeonBossDrop_MS2C::kDropInfoFieldNumber;
#endif  // !_MSC_VER

MsgDungeonBossDrop_MS2C::MsgDungeonBossDrop_MS2C()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.MsgDungeonBossDrop_MS2C)
}

void MsgDungeonBossDrop_MS2C::InitAsDefaultInstance() {
}

MsgDungeonBossDrop_MS2C::MsgDungeonBossDrop_MS2C(const MsgDungeonBossDrop_MS2C& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.MsgDungeonBossDrop_MS2C)
}

void MsgDungeonBossDrop_MS2C::SharedCtor() {
  _cached_size_ = 0;
  msgtype_ = 2010;
  iggid_ = GOOGLE_LONGLONG(0);
  mobinsid_ = 0;
  mapobjectid_ = 0;
  pos_x_ = 0;
  pos_y_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgDungeonBossDrop_MS2C::~MsgDungeonBossDrop_MS2C() {
  // @@protoc_insertion_point(destructor:MsgPB.MsgDungeonBossDrop_MS2C)
  SharedDtor();
}

void MsgDungeonBossDrop_MS2C::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgDungeonBossDrop_MS2C::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgDungeonBossDrop_MS2C::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgDungeonBossDrop_MS2C_descriptor_;
}

const MsgDungeonBossDrop_MS2C& MsgDungeonBossDrop_MS2C::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgDungeon_2eproto();
  return *default_instance_;
}

MsgDungeonBossDrop_MS2C* MsgDungeonBossDrop_MS2C::default_instance_ = NULL;

MsgDungeonBossDrop_MS2C* MsgDungeonBossDrop_MS2C::New() const {
  return new MsgDungeonBossDrop_MS2C;
}

void MsgDungeonBossDrop_MS2C::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<MsgDungeonBossDrop_MS2C*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 63) {
    ZR_(mobinsid_, pos_x_);
    msgtype_ = 2010;
    iggid_ = GOOGLE_LONGLONG(0);
    pos_y_ = 0;
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  drop_info_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgDungeonBossDrop_MS2C::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.MsgDungeonBossDrop_MS2C)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_DUNGEON_BOSS_DROP_MS2C];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::EMsgType_IsValid(value)) {
            set_msgtype(static_cast< ::MsgPB::EMsgType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_iggid;
        break;
      }

      // optional int64 iggid = 2;
      case 2: {
        if (tag == 16) {
         parse_iggid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &iggid_)));
          set_has_iggid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_mobInsID;
        break;
      }

      // optional int32 mobInsID = 3;
      case 3: {
        if (tag == 24) {
         parse_mobInsID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &mobinsid_)));
          set_has_mobinsid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_mapObjectId;
        break;
      }

      // optional int32 mapObjectId = 4;
      case 4: {
        if (tag == 32) {
         parse_mapObjectId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &mapobjectid_)));
          set_has_mapobjectid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_pos_x;
        break;
      }

      // optional int32 pos_x = 5;
      case 5: {
        if (tag == 40) {
         parse_pos_x:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pos_x_)));
          set_has_pos_x();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_pos_y;
        break;
      }

      // optional int32 pos_y = 6;
      case 6: {
        if (tag == 48) {
         parse_pos_y:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pos_y_)));
          set_has_pos_y();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_drop_info;
        break;
      }

      // repeated .MsgPB.PBDropInfo drop_info = 7;
      case 7: {
        if (tag == 58) {
         parse_drop_info:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_drop_info()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_drop_info;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.MsgDungeonBossDrop_MS2C)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.MsgDungeonBossDrop_MS2C)
  return false;
#undef DO_
}

void MsgDungeonBossDrop_MS2C::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.MsgDungeonBossDrop_MS2C)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_DUNGEON_BOSS_DROP_MS2C];
  if (has_msgtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->msgtype(), output);
  }

  // optional int64 iggid = 2;
  if (has_iggid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->iggid(), output);
  }

  // optional int32 mobInsID = 3;
  if (has_mobinsid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->mobinsid(), output);
  }

  // optional int32 mapObjectId = 4;
  if (has_mapobjectid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->mapobjectid(), output);
  }

  // optional int32 pos_x = 5;
  if (has_pos_x()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->pos_x(), output);
  }

  // optional int32 pos_y = 6;
  if (has_pos_y()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->pos_y(), output);
  }

  // repeated .MsgPB.PBDropInfo drop_info = 7;
  for (int i = 0; i < this->drop_info_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->drop_info(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.MsgDungeonBossDrop_MS2C)
}

::google::protobuf::uint8* MsgDungeonBossDrop_MS2C::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.MsgDungeonBossDrop_MS2C)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_DUNGEON_BOSS_DROP_MS2C];
  if (has_msgtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->msgtype(), target);
  }

  // optional int64 iggid = 2;
  if (has_iggid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->iggid(), target);
  }

  // optional int32 mobInsID = 3;
  if (has_mobinsid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->mobinsid(), target);
  }

  // optional int32 mapObjectId = 4;
  if (has_mapobjectid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->mapobjectid(), target);
  }

  // optional int32 pos_x = 5;
  if (has_pos_x()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->pos_x(), target);
  }

  // optional int32 pos_y = 6;
  if (has_pos_y()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->pos_y(), target);
  }

  // repeated .MsgPB.PBDropInfo drop_info = 7;
  for (int i = 0; i < this->drop_info_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        7, this->drop_info(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.MsgDungeonBossDrop_MS2C)
  return target;
}

int MsgDungeonBossDrop_MS2C::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_DUNGEON_BOSS_DROP_MS2C];
    if (has_msgtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgtype());
    }

    // optional int64 iggid = 2;
    if (has_iggid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->iggid());
    }

    // optional int32 mobInsID = 3;
    if (has_mobinsid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->mobinsid());
    }

    // optional int32 mapObjectId = 4;
    if (has_mapobjectid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->mapobjectid());
    }

    // optional int32 pos_x = 5;
    if (has_pos_x()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pos_x());
    }

    // optional int32 pos_y = 6;
    if (has_pos_y()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pos_y());
    }

  }
  // repeated .MsgPB.PBDropInfo drop_info = 7;
  total_size += 1 * this->drop_info_size();
  for (int i = 0; i < this->drop_info_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->drop_info(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgDungeonBossDrop_MS2C::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgDungeonBossDrop_MS2C* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgDungeonBossDrop_MS2C*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgDungeonBossDrop_MS2C::MergeFrom(const MsgDungeonBossDrop_MS2C& from) {
  GOOGLE_CHECK_NE(&from, this);
  drop_info_.MergeFrom(from.drop_info_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msgtype()) {
      set_msgtype(from.msgtype());
    }
    if (from.has_iggid()) {
      set_iggid(from.iggid());
    }
    if (from.has_mobinsid()) {
      set_mobinsid(from.mobinsid());
    }
    if (from.has_mapobjectid()) {
      set_mapobjectid(from.mapobjectid());
    }
    if (from.has_pos_x()) {
      set_pos_x(from.pos_x());
    }
    if (from.has_pos_y()) {
      set_pos_y(from.pos_y());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgDungeonBossDrop_MS2C::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgDungeonBossDrop_MS2C::CopyFrom(const MsgDungeonBossDrop_MS2C& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgDungeonBossDrop_MS2C::IsInitialized() const {

  return true;
}

void MsgDungeonBossDrop_MS2C::Swap(MsgDungeonBossDrop_MS2C* other) {
  if (other != this) {
    std::swap(msgtype_, other->msgtype_);
    std::swap(iggid_, other->iggid_);
    std::swap(mobinsid_, other->mobinsid_);
    std::swap(mapobjectid_, other->mapobjectid_);
    std::swap(pos_x_, other->pos_x_);
    std::swap(pos_y_, other->pos_y_);
    drop_info_.Swap(&other->drop_info_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgDungeonBossDrop_MS2C::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgDungeonBossDrop_MS2C_descriptor_;
  metadata.reflection = MsgDungeonBossDrop_MS2C_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgDungeonBossComing_MS2C::kMsgTypeFieldNumber;
const int MsgDungeonBossComing_MS2C::kIggidFieldNumber;
const int MsgDungeonBossComing_MS2C::kMobInsIdFieldNumber;
const int MsgDungeonBossComing_MS2C::kMapObjectIdFieldNumber;
const int MsgDungeonBossComing_MS2C::kMobDefIdFieldNumber;
const int MsgDungeonBossComing_MS2C::kPosXFieldNumber;
const int MsgDungeonBossComing_MS2C::kPosYFieldNumber;
#endif  // !_MSC_VER

MsgDungeonBossComing_MS2C::MsgDungeonBossComing_MS2C()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.MsgDungeonBossComing_MS2C)
}

void MsgDungeonBossComing_MS2C::InitAsDefaultInstance() {
}

MsgDungeonBossComing_MS2C::MsgDungeonBossComing_MS2C(const MsgDungeonBossComing_MS2C& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.MsgDungeonBossComing_MS2C)
}

void MsgDungeonBossComing_MS2C::SharedCtor() {
  _cached_size_ = 0;
  msgtype_ = 2011;
  iggid_ = GOOGLE_LONGLONG(0);
  mob_ins_id_ = 0;
  map_object_id_ = 0;
  mob_def_id_ = 0;
  pos_x_ = 0;
  pos_y_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgDungeonBossComing_MS2C::~MsgDungeonBossComing_MS2C() {
  // @@protoc_insertion_point(destructor:MsgPB.MsgDungeonBossComing_MS2C)
  SharedDtor();
}

void MsgDungeonBossComing_MS2C::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgDungeonBossComing_MS2C::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgDungeonBossComing_MS2C::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgDungeonBossComing_MS2C_descriptor_;
}

const MsgDungeonBossComing_MS2C& MsgDungeonBossComing_MS2C::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgDungeon_2eproto();
  return *default_instance_;
}

MsgDungeonBossComing_MS2C* MsgDungeonBossComing_MS2C::default_instance_ = NULL;

MsgDungeonBossComing_MS2C* MsgDungeonBossComing_MS2C::New() const {
  return new MsgDungeonBossComing_MS2C;
}

void MsgDungeonBossComing_MS2C::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<MsgDungeonBossComing_MS2C*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 127) {
    ZR_(mob_ins_id_, pos_y_);
    msgtype_ = 2011;
    iggid_ = GOOGLE_LONGLONG(0);
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgDungeonBossComing_MS2C::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.MsgDungeonBossComing_MS2C)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_DUNGEON_BOSS_COMING_MS2C];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::EMsgType_IsValid(value)) {
            set_msgtype(static_cast< ::MsgPB::EMsgType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_iggid;
        break;
      }

      // optional int64 iggid = 2;
      case 2: {
        if (tag == 16) {
         parse_iggid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &iggid_)));
          set_has_iggid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_mob_ins_id;
        break;
      }

      // optional int32 mob_ins_id = 3;
      case 3: {
        if (tag == 24) {
         parse_mob_ins_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &mob_ins_id_)));
          set_has_mob_ins_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_map_object_id;
        break;
      }

      // optional int32 map_object_id = 4;
      case 4: {
        if (tag == 32) {
         parse_map_object_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &map_object_id_)));
          set_has_map_object_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_mob_def_id;
        break;
      }

      // optional int32 mob_def_id = 5;
      case 5: {
        if (tag == 40) {
         parse_mob_def_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &mob_def_id_)));
          set_has_mob_def_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_pos_x;
        break;
      }

      // optional int32 pos_x = 6;
      case 6: {
        if (tag == 48) {
         parse_pos_x:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pos_x_)));
          set_has_pos_x();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_pos_y;
        break;
      }

      // optional int32 pos_y = 7;
      case 7: {
        if (tag == 56) {
         parse_pos_y:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pos_y_)));
          set_has_pos_y();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.MsgDungeonBossComing_MS2C)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.MsgDungeonBossComing_MS2C)
  return false;
#undef DO_
}

void MsgDungeonBossComing_MS2C::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.MsgDungeonBossComing_MS2C)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_DUNGEON_BOSS_COMING_MS2C];
  if (has_msgtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->msgtype(), output);
  }

  // optional int64 iggid = 2;
  if (has_iggid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->iggid(), output);
  }

  // optional int32 mob_ins_id = 3;
  if (has_mob_ins_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->mob_ins_id(), output);
  }

  // optional int32 map_object_id = 4;
  if (has_map_object_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->map_object_id(), output);
  }

  // optional int32 mob_def_id = 5;
  if (has_mob_def_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->mob_def_id(), output);
  }

  // optional int32 pos_x = 6;
  if (has_pos_x()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->pos_x(), output);
  }

  // optional int32 pos_y = 7;
  if (has_pos_y()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->pos_y(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.MsgDungeonBossComing_MS2C)
}

::google::protobuf::uint8* MsgDungeonBossComing_MS2C::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.MsgDungeonBossComing_MS2C)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_DUNGEON_BOSS_COMING_MS2C];
  if (has_msgtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->msgtype(), target);
  }

  // optional int64 iggid = 2;
  if (has_iggid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->iggid(), target);
  }

  // optional int32 mob_ins_id = 3;
  if (has_mob_ins_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->mob_ins_id(), target);
  }

  // optional int32 map_object_id = 4;
  if (has_map_object_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->map_object_id(), target);
  }

  // optional int32 mob_def_id = 5;
  if (has_mob_def_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->mob_def_id(), target);
  }

  // optional int32 pos_x = 6;
  if (has_pos_x()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->pos_x(), target);
  }

  // optional int32 pos_y = 7;
  if (has_pos_y()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->pos_y(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.MsgDungeonBossComing_MS2C)
  return target;
}

int MsgDungeonBossComing_MS2C::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_DUNGEON_BOSS_COMING_MS2C];
    if (has_msgtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgtype());
    }

    // optional int64 iggid = 2;
    if (has_iggid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->iggid());
    }

    // optional int32 mob_ins_id = 3;
    if (has_mob_ins_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->mob_ins_id());
    }

    // optional int32 map_object_id = 4;
    if (has_map_object_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->map_object_id());
    }

    // optional int32 mob_def_id = 5;
    if (has_mob_def_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->mob_def_id());
    }

    // optional int32 pos_x = 6;
    if (has_pos_x()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pos_x());
    }

    // optional int32 pos_y = 7;
    if (has_pos_y()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pos_y());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgDungeonBossComing_MS2C::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgDungeonBossComing_MS2C* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgDungeonBossComing_MS2C*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgDungeonBossComing_MS2C::MergeFrom(const MsgDungeonBossComing_MS2C& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msgtype()) {
      set_msgtype(from.msgtype());
    }
    if (from.has_iggid()) {
      set_iggid(from.iggid());
    }
    if (from.has_mob_ins_id()) {
      set_mob_ins_id(from.mob_ins_id());
    }
    if (from.has_map_object_id()) {
      set_map_object_id(from.map_object_id());
    }
    if (from.has_mob_def_id()) {
      set_mob_def_id(from.mob_def_id());
    }
    if (from.has_pos_x()) {
      set_pos_x(from.pos_x());
    }
    if (from.has_pos_y()) {
      set_pos_y(from.pos_y());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgDungeonBossComing_MS2C::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgDungeonBossComing_MS2C::CopyFrom(const MsgDungeonBossComing_MS2C& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgDungeonBossComing_MS2C::IsInitialized() const {

  return true;
}

void MsgDungeonBossComing_MS2C::Swap(MsgDungeonBossComing_MS2C* other) {
  if (other != this) {
    std::swap(msgtype_, other->msgtype_);
    std::swap(iggid_, other->iggid_);
    std::swap(mob_ins_id_, other->mob_ins_id_);
    std::swap(map_object_id_, other->map_object_id_);
    std::swap(mob_def_id_, other->mob_def_id_);
    std::swap(pos_x_, other->pos_x_);
    std::swap(pos_y_, other->pos_y_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgDungeonBossComing_MS2C::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgDungeonBossComing_MS2C_descriptor_;
  metadata.reflection = MsgDungeonBossComing_MS2C_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgDungeonBossKill_MS2C::kMsgTypeFieldNumber;
const int MsgDungeonBossKill_MS2C::kIggidFieldNumber;
const int MsgDungeonBossKill_MS2C::kMobInsIdFieldNumber;
const int MsgDungeonBossKill_MS2C::kMapObjectIdFieldNumber;
const int MsgDungeonBossKill_MS2C::kMobDefIdFieldNumber;
#endif  // !_MSC_VER

MsgDungeonBossKill_MS2C::MsgDungeonBossKill_MS2C()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.MsgDungeonBossKill_MS2C)
}

void MsgDungeonBossKill_MS2C::InitAsDefaultInstance() {
}

MsgDungeonBossKill_MS2C::MsgDungeonBossKill_MS2C(const MsgDungeonBossKill_MS2C& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.MsgDungeonBossKill_MS2C)
}

void MsgDungeonBossKill_MS2C::SharedCtor() {
  _cached_size_ = 0;
  msgtype_ = 2012;
  iggid_ = GOOGLE_LONGLONG(0);
  mob_ins_id_ = 0;
  map_object_id_ = 0;
  mob_def_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgDungeonBossKill_MS2C::~MsgDungeonBossKill_MS2C() {
  // @@protoc_insertion_point(destructor:MsgPB.MsgDungeonBossKill_MS2C)
  SharedDtor();
}

void MsgDungeonBossKill_MS2C::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgDungeonBossKill_MS2C::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgDungeonBossKill_MS2C::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgDungeonBossKill_MS2C_descriptor_;
}

const MsgDungeonBossKill_MS2C& MsgDungeonBossKill_MS2C::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgDungeon_2eproto();
  return *default_instance_;
}

MsgDungeonBossKill_MS2C* MsgDungeonBossKill_MS2C::default_instance_ = NULL;

MsgDungeonBossKill_MS2C* MsgDungeonBossKill_MS2C::New() const {
  return new MsgDungeonBossKill_MS2C;
}

void MsgDungeonBossKill_MS2C::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<MsgDungeonBossKill_MS2C*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 31) {
    ZR_(mob_ins_id_, mob_def_id_);
    msgtype_ = 2012;
    iggid_ = GOOGLE_LONGLONG(0);
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgDungeonBossKill_MS2C::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.MsgDungeonBossKill_MS2C)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_DUNGEON_BOSS_KILL_MS2C];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::EMsgType_IsValid(value)) {
            set_msgtype(static_cast< ::MsgPB::EMsgType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_iggid;
        break;
      }

      // optional int64 iggid = 2;
      case 2: {
        if (tag == 16) {
         parse_iggid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &iggid_)));
          set_has_iggid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_mob_ins_id;
        break;
      }

      // optional int32 mob_ins_id = 3;
      case 3: {
        if (tag == 24) {
         parse_mob_ins_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &mob_ins_id_)));
          set_has_mob_ins_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_map_object_id;
        break;
      }

      // optional int32 map_object_id = 4;
      case 4: {
        if (tag == 32) {
         parse_map_object_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &map_object_id_)));
          set_has_map_object_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_mob_def_id;
        break;
      }

      // optional int32 mob_def_id = 5;
      case 5: {
        if (tag == 40) {
         parse_mob_def_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &mob_def_id_)));
          set_has_mob_def_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.MsgDungeonBossKill_MS2C)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.MsgDungeonBossKill_MS2C)
  return false;
#undef DO_
}

void MsgDungeonBossKill_MS2C::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.MsgDungeonBossKill_MS2C)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_DUNGEON_BOSS_KILL_MS2C];
  if (has_msgtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->msgtype(), output);
  }

  // optional int64 iggid = 2;
  if (has_iggid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->iggid(), output);
  }

  // optional int32 mob_ins_id = 3;
  if (has_mob_ins_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->mob_ins_id(), output);
  }

  // optional int32 map_object_id = 4;
  if (has_map_object_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->map_object_id(), output);
  }

  // optional int32 mob_def_id = 5;
  if (has_mob_def_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->mob_def_id(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.MsgDungeonBossKill_MS2C)
}

::google::protobuf::uint8* MsgDungeonBossKill_MS2C::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.MsgDungeonBossKill_MS2C)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_DUNGEON_BOSS_KILL_MS2C];
  if (has_msgtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->msgtype(), target);
  }

  // optional int64 iggid = 2;
  if (has_iggid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->iggid(), target);
  }

  // optional int32 mob_ins_id = 3;
  if (has_mob_ins_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->mob_ins_id(), target);
  }

  // optional int32 map_object_id = 4;
  if (has_map_object_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->map_object_id(), target);
  }

  // optional int32 mob_def_id = 5;
  if (has_mob_def_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->mob_def_id(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.MsgDungeonBossKill_MS2C)
  return target;
}

int MsgDungeonBossKill_MS2C::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_DUNGEON_BOSS_KILL_MS2C];
    if (has_msgtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgtype());
    }

    // optional int64 iggid = 2;
    if (has_iggid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->iggid());
    }

    // optional int32 mob_ins_id = 3;
    if (has_mob_ins_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->mob_ins_id());
    }

    // optional int32 map_object_id = 4;
    if (has_map_object_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->map_object_id());
    }

    // optional int32 mob_def_id = 5;
    if (has_mob_def_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->mob_def_id());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgDungeonBossKill_MS2C::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgDungeonBossKill_MS2C* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgDungeonBossKill_MS2C*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgDungeonBossKill_MS2C::MergeFrom(const MsgDungeonBossKill_MS2C& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msgtype()) {
      set_msgtype(from.msgtype());
    }
    if (from.has_iggid()) {
      set_iggid(from.iggid());
    }
    if (from.has_mob_ins_id()) {
      set_mob_ins_id(from.mob_ins_id());
    }
    if (from.has_map_object_id()) {
      set_map_object_id(from.map_object_id());
    }
    if (from.has_mob_def_id()) {
      set_mob_def_id(from.mob_def_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgDungeonBossKill_MS2C::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgDungeonBossKill_MS2C::CopyFrom(const MsgDungeonBossKill_MS2C& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgDungeonBossKill_MS2C::IsInitialized() const {

  return true;
}

void MsgDungeonBossKill_MS2C::Swap(MsgDungeonBossKill_MS2C* other) {
  if (other != this) {
    std::swap(msgtype_, other->msgtype_);
    std::swap(iggid_, other->iggid_);
    std::swap(mob_ins_id_, other->mob_ins_id_);
    std::swap(map_object_id_, other->map_object_id_);
    std::swap(mob_def_id_, other->mob_def_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgDungeonBossKill_MS2C::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgDungeonBossKill_MS2C_descriptor_;
  metadata.reflection = MsgDungeonBossKill_MS2C_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgDungeonDataGet_C2S::kMsgTypeFieldNumber;
const int MsgDungeonDataGet_C2S::kIggidFieldNumber;
const int MsgDungeonDataGet_C2S::kMapidFieldNumber;
#endif  // !_MSC_VER

MsgDungeonDataGet_C2S::MsgDungeonDataGet_C2S()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.MsgDungeonDataGet_C2S)
}

void MsgDungeonDataGet_C2S::InitAsDefaultInstance() {
}

MsgDungeonDataGet_C2S::MsgDungeonDataGet_C2S(const MsgDungeonDataGet_C2S& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.MsgDungeonDataGet_C2S)
}

void MsgDungeonDataGet_C2S::SharedCtor() {
  _cached_size_ = 0;
  msgtype_ = 2013;
  iggid_ = GOOGLE_LONGLONG(0);
  mapid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgDungeonDataGet_C2S::~MsgDungeonDataGet_C2S() {
  // @@protoc_insertion_point(destructor:MsgPB.MsgDungeonDataGet_C2S)
  SharedDtor();
}

void MsgDungeonDataGet_C2S::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgDungeonDataGet_C2S::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgDungeonDataGet_C2S::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgDungeonDataGet_C2S_descriptor_;
}

const MsgDungeonDataGet_C2S& MsgDungeonDataGet_C2S::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgDungeon_2eproto();
  return *default_instance_;
}

MsgDungeonDataGet_C2S* MsgDungeonDataGet_C2S::default_instance_ = NULL;

MsgDungeonDataGet_C2S* MsgDungeonDataGet_C2S::New() const {
  return new MsgDungeonDataGet_C2S;
}

void MsgDungeonDataGet_C2S::Clear() {
  if (_has_bits_[0 / 32] & 7) {
    msgtype_ = 2013;
    iggid_ = GOOGLE_LONGLONG(0);
    mapid_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgDungeonDataGet_C2S::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.MsgDungeonDataGet_C2S)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_DUNGEON_DATA_GET_C2S];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::EMsgType_IsValid(value)) {
            set_msgtype(static_cast< ::MsgPB::EMsgType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_iggid;
        break;
      }

      // optional int64 iggid = 2;
      case 2: {
        if (tag == 16) {
         parse_iggid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &iggid_)));
          set_has_iggid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_mapid;
        break;
      }

      // optional int32 mapid = 3;
      case 3: {
        if (tag == 24) {
         parse_mapid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &mapid_)));
          set_has_mapid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.MsgDungeonDataGet_C2S)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.MsgDungeonDataGet_C2S)
  return false;
#undef DO_
}

void MsgDungeonDataGet_C2S::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.MsgDungeonDataGet_C2S)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_DUNGEON_DATA_GET_C2S];
  if (has_msgtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->msgtype(), output);
  }

  // optional int64 iggid = 2;
  if (has_iggid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->iggid(), output);
  }

  // optional int32 mapid = 3;
  if (has_mapid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->mapid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.MsgDungeonDataGet_C2S)
}

::google::protobuf::uint8* MsgDungeonDataGet_C2S::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.MsgDungeonDataGet_C2S)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_DUNGEON_DATA_GET_C2S];
  if (has_msgtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->msgtype(), target);
  }

  // optional int64 iggid = 2;
  if (has_iggid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->iggid(), target);
  }

  // optional int32 mapid = 3;
  if (has_mapid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->mapid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.MsgDungeonDataGet_C2S)
  return target;
}

int MsgDungeonDataGet_C2S::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_DUNGEON_DATA_GET_C2S];
    if (has_msgtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgtype());
    }

    // optional int64 iggid = 2;
    if (has_iggid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->iggid());
    }

    // optional int32 mapid = 3;
    if (has_mapid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->mapid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgDungeonDataGet_C2S::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgDungeonDataGet_C2S* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgDungeonDataGet_C2S*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgDungeonDataGet_C2S::MergeFrom(const MsgDungeonDataGet_C2S& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msgtype()) {
      set_msgtype(from.msgtype());
    }
    if (from.has_iggid()) {
      set_iggid(from.iggid());
    }
    if (from.has_mapid()) {
      set_mapid(from.mapid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgDungeonDataGet_C2S::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgDungeonDataGet_C2S::CopyFrom(const MsgDungeonDataGet_C2S& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgDungeonDataGet_C2S::IsInitialized() const {

  return true;
}

void MsgDungeonDataGet_C2S::Swap(MsgDungeonDataGet_C2S* other) {
  if (other != this) {
    std::swap(msgtype_, other->msgtype_);
    std::swap(iggid_, other->iggid_);
    std::swap(mapid_, other->mapid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgDungeonDataGet_C2S::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgDungeonDataGet_C2S_descriptor_;
  metadata.reflection = MsgDungeonDataGet_C2S_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgDungeonData_S2C::kMsgTypeFieldNumber;
const int MsgDungeonData_S2C::kIggidFieldNumber;
const int MsgDungeonData_S2C::kDataFieldNumber;
#endif  // !_MSC_VER

MsgDungeonData_S2C::MsgDungeonData_S2C()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.MsgDungeonData_S2C)
}

void MsgDungeonData_S2C::InitAsDefaultInstance() {
  data_ = const_cast< ::MsgPB::MsgDungeonData*>(&::MsgPB::MsgDungeonData::default_instance());
}

MsgDungeonData_S2C::MsgDungeonData_S2C(const MsgDungeonData_S2C& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.MsgDungeonData_S2C)
}

void MsgDungeonData_S2C::SharedCtor() {
  _cached_size_ = 0;
  msgtype_ = 2014;
  iggid_ = GOOGLE_LONGLONG(0);
  data_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgDungeonData_S2C::~MsgDungeonData_S2C() {
  // @@protoc_insertion_point(destructor:MsgPB.MsgDungeonData_S2C)
  SharedDtor();
}

void MsgDungeonData_S2C::SharedDtor() {
  if (this != default_instance_) {
    delete data_;
  }
}

void MsgDungeonData_S2C::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgDungeonData_S2C::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgDungeonData_S2C_descriptor_;
}

const MsgDungeonData_S2C& MsgDungeonData_S2C::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgDungeon_2eproto();
  return *default_instance_;
}

MsgDungeonData_S2C* MsgDungeonData_S2C::default_instance_ = NULL;

MsgDungeonData_S2C* MsgDungeonData_S2C::New() const {
  return new MsgDungeonData_S2C;
}

void MsgDungeonData_S2C::Clear() {
  if (_has_bits_[0 / 32] & 7) {
    msgtype_ = 2014;
    iggid_ = GOOGLE_LONGLONG(0);
    if (has_data()) {
      if (data_ != NULL) data_->::MsgPB::MsgDungeonData::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgDungeonData_S2C::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.MsgDungeonData_S2C)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_DUNGEON_DATA_S2C];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::EMsgType_IsValid(value)) {
            set_msgtype(static_cast< ::MsgPB::EMsgType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_iggid;
        break;
      }

      // optional int64 iggid = 2;
      case 2: {
        if (tag == 16) {
         parse_iggid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &iggid_)));
          set_has_iggid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_data;
        break;
      }

      // optional .MsgPB.MsgDungeonData data = 3;
      case 3: {
        if (tag == 26) {
         parse_data:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_data()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.MsgDungeonData_S2C)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.MsgDungeonData_S2C)
  return false;
#undef DO_
}

void MsgDungeonData_S2C::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.MsgDungeonData_S2C)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_DUNGEON_DATA_S2C];
  if (has_msgtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->msgtype(), output);
  }

  // optional int64 iggid = 2;
  if (has_iggid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->iggid(), output);
  }

  // optional .MsgPB.MsgDungeonData data = 3;
  if (has_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->data(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.MsgDungeonData_S2C)
}

::google::protobuf::uint8* MsgDungeonData_S2C::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.MsgDungeonData_S2C)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_DUNGEON_DATA_S2C];
  if (has_msgtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->msgtype(), target);
  }

  // optional int64 iggid = 2;
  if (has_iggid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->iggid(), target);
  }

  // optional .MsgPB.MsgDungeonData data = 3;
  if (has_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->data(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.MsgDungeonData_S2C)
  return target;
}

int MsgDungeonData_S2C::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_DUNGEON_DATA_S2C];
    if (has_msgtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgtype());
    }

    // optional int64 iggid = 2;
    if (has_iggid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->iggid());
    }

    // optional .MsgPB.MsgDungeonData data = 3;
    if (has_data()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->data());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgDungeonData_S2C::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgDungeonData_S2C* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgDungeonData_S2C*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgDungeonData_S2C::MergeFrom(const MsgDungeonData_S2C& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msgtype()) {
      set_msgtype(from.msgtype());
    }
    if (from.has_iggid()) {
      set_iggid(from.iggid());
    }
    if (from.has_data()) {
      mutable_data()->::MsgPB::MsgDungeonData::MergeFrom(from.data());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgDungeonData_S2C::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgDungeonData_S2C::CopyFrom(const MsgDungeonData_S2C& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgDungeonData_S2C::IsInitialized() const {

  return true;
}

void MsgDungeonData_S2C::Swap(MsgDungeonData_S2C* other) {
  if (other != this) {
    std::swap(msgtype_, other->msgtype_);
    std::swap(iggid_, other->iggid_);
    std::swap(data_, other->data_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgDungeonData_S2C::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgDungeonData_S2C_descriptor_;
  metadata.reflection = MsgDungeonData_S2C_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgDungeonNextMob_S2C::kMsgTypeFieldNumber;
const int MsgDungeonNextMob_S2C::kIggidFieldNumber;
#endif  // !_MSC_VER

MsgDungeonNextMob_S2C::MsgDungeonNextMob_S2C()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.MsgDungeonNextMob_S2C)
}

void MsgDungeonNextMob_S2C::InitAsDefaultInstance() {
}

MsgDungeonNextMob_S2C::MsgDungeonNextMob_S2C(const MsgDungeonNextMob_S2C& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.MsgDungeonNextMob_S2C)
}

void MsgDungeonNextMob_S2C::SharedCtor() {
  _cached_size_ = 0;
  msgtype_ = 2015;
  iggid_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgDungeonNextMob_S2C::~MsgDungeonNextMob_S2C() {
  // @@protoc_insertion_point(destructor:MsgPB.MsgDungeonNextMob_S2C)
  SharedDtor();
}

void MsgDungeonNextMob_S2C::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgDungeonNextMob_S2C::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgDungeonNextMob_S2C::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgDungeonNextMob_S2C_descriptor_;
}

const MsgDungeonNextMob_S2C& MsgDungeonNextMob_S2C::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgDungeon_2eproto();
  return *default_instance_;
}

MsgDungeonNextMob_S2C* MsgDungeonNextMob_S2C::default_instance_ = NULL;

MsgDungeonNextMob_S2C* MsgDungeonNextMob_S2C::New() const {
  return new MsgDungeonNextMob_S2C;
}

void MsgDungeonNextMob_S2C::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    msgtype_ = 2015;
    iggid_ = GOOGLE_LONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgDungeonNextMob_S2C::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.MsgDungeonNextMob_S2C)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_DUNGEON_NEXT_MOB_S2C];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::EMsgType_IsValid(value)) {
            set_msgtype(static_cast< ::MsgPB::EMsgType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_iggid;
        break;
      }

      // optional int64 iggid = 2;
      case 2: {
        if (tag == 16) {
         parse_iggid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &iggid_)));
          set_has_iggid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.MsgDungeonNextMob_S2C)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.MsgDungeonNextMob_S2C)
  return false;
#undef DO_
}

void MsgDungeonNextMob_S2C::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.MsgDungeonNextMob_S2C)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_DUNGEON_NEXT_MOB_S2C];
  if (has_msgtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->msgtype(), output);
  }

  // optional int64 iggid = 2;
  if (has_iggid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->iggid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.MsgDungeonNextMob_S2C)
}

::google::protobuf::uint8* MsgDungeonNextMob_S2C::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.MsgDungeonNextMob_S2C)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_DUNGEON_NEXT_MOB_S2C];
  if (has_msgtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->msgtype(), target);
  }

  // optional int64 iggid = 2;
  if (has_iggid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->iggid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.MsgDungeonNextMob_S2C)
  return target;
}

int MsgDungeonNextMob_S2C::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_DUNGEON_NEXT_MOB_S2C];
    if (has_msgtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgtype());
    }

    // optional int64 iggid = 2;
    if (has_iggid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->iggid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgDungeonNextMob_S2C::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgDungeonNextMob_S2C* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgDungeonNextMob_S2C*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgDungeonNextMob_S2C::MergeFrom(const MsgDungeonNextMob_S2C& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msgtype()) {
      set_msgtype(from.msgtype());
    }
    if (from.has_iggid()) {
      set_iggid(from.iggid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgDungeonNextMob_S2C::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgDungeonNextMob_S2C::CopyFrom(const MsgDungeonNextMob_S2C& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgDungeonNextMob_S2C::IsInitialized() const {

  return true;
}

void MsgDungeonNextMob_S2C::Swap(MsgDungeonNextMob_S2C* other) {
  if (other != this) {
    std::swap(msgtype_, other->msgtype_);
    std::swap(iggid_, other->iggid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgDungeonNextMob_S2C::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgDungeonNextMob_S2C_descriptor_;
  metadata.reflection = MsgDungeonNextMob_S2C_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgDungeonSucProExp::kUuidFieldNumber;
const int MsgDungeonSucProExp::kAddlvFieldNumber;
const int MsgDungeonSucProExp::kExpFieldNumber;
#endif  // !_MSC_VER

MsgDungeonSucProExp::MsgDungeonSucProExp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.MsgDungeonSucProExp)
}

void MsgDungeonSucProExp::InitAsDefaultInstance() {
}

MsgDungeonSucProExp::MsgDungeonSucProExp(const MsgDungeonSucProExp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.MsgDungeonSucProExp)
}

void MsgDungeonSucProExp::SharedCtor() {
  _cached_size_ = 0;
  uuid_ = GOOGLE_LONGLONG(0);
  addlv_ = 0;
  exp_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgDungeonSucProExp::~MsgDungeonSucProExp() {
  // @@protoc_insertion_point(destructor:MsgPB.MsgDungeonSucProExp)
  SharedDtor();
}

void MsgDungeonSucProExp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgDungeonSucProExp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgDungeonSucProExp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgDungeonSucProExp_descriptor_;
}

const MsgDungeonSucProExp& MsgDungeonSucProExp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgDungeon_2eproto();
  return *default_instance_;
}

MsgDungeonSucProExp* MsgDungeonSucProExp::default_instance_ = NULL;

MsgDungeonSucProExp* MsgDungeonSucProExp::New() const {
  return new MsgDungeonSucProExp;
}

void MsgDungeonSucProExp::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<MsgDungeonSucProExp*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(uuid_, exp_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgDungeonSucProExp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.MsgDungeonSucProExp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 uuid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &uuid_)));
          set_has_uuid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_addlv;
        break;
      }

      // optional int32 addlv = 2;
      case 2: {
        if (tag == 16) {
         parse_addlv:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &addlv_)));
          set_has_addlv();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_exp;
        break;
      }

      // optional int32 exp = 3;
      case 3: {
        if (tag == 24) {
         parse_exp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &exp_)));
          set_has_exp();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.MsgDungeonSucProExp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.MsgDungeonSucProExp)
  return false;
#undef DO_
}

void MsgDungeonSucProExp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.MsgDungeonSucProExp)
  // optional int64 uuid = 1;
  if (has_uuid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->uuid(), output);
  }

  // optional int32 addlv = 2;
  if (has_addlv()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->addlv(), output);
  }

  // optional int32 exp = 3;
  if (has_exp()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->exp(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.MsgDungeonSucProExp)
}

::google::protobuf::uint8* MsgDungeonSucProExp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.MsgDungeonSucProExp)
  // optional int64 uuid = 1;
  if (has_uuid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->uuid(), target);
  }

  // optional int32 addlv = 2;
  if (has_addlv()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->addlv(), target);
  }

  // optional int32 exp = 3;
  if (has_exp()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->exp(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.MsgDungeonSucProExp)
  return target;
}

int MsgDungeonSucProExp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 uuid = 1;
    if (has_uuid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->uuid());
    }

    // optional int32 addlv = 2;
    if (has_addlv()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->addlv());
    }

    // optional int32 exp = 3;
    if (has_exp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->exp());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgDungeonSucProExp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgDungeonSucProExp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgDungeonSucProExp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgDungeonSucProExp::MergeFrom(const MsgDungeonSucProExp& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_uuid()) {
      set_uuid(from.uuid());
    }
    if (from.has_addlv()) {
      set_addlv(from.addlv());
    }
    if (from.has_exp()) {
      set_exp(from.exp());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgDungeonSucProExp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgDungeonSucProExp::CopyFrom(const MsgDungeonSucProExp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgDungeonSucProExp::IsInitialized() const {

  return true;
}

void MsgDungeonSucProExp::Swap(MsgDungeonSucProExp* other) {
  if (other != this) {
    std::swap(uuid_, other->uuid_);
    std::swap(addlv_, other->addlv_);
    std::swap(exp_, other->exp_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgDungeonSucProExp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgDungeonSucProExp_descriptor_;
  metadata.reflection = MsgDungeonSucProExp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgDungeonSucExp_S2C::kMsgTypeFieldNumber;
const int MsgDungeonSucExp_S2C::kIggidFieldNumber;
const int MsgDungeonSucExp_S2C::kAddLevelFieldNumber;
const int MsgDungeonSucExp_S2C::kAddExpFieldNumber;
const int MsgDungeonSucExp_S2C::kProExpFieldNumber;
#endif  // !_MSC_VER

MsgDungeonSucExp_S2C::MsgDungeonSucExp_S2C()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.MsgDungeonSucExp_S2C)
}

void MsgDungeonSucExp_S2C::InitAsDefaultInstance() {
}

MsgDungeonSucExp_S2C::MsgDungeonSucExp_S2C(const MsgDungeonSucExp_S2C& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.MsgDungeonSucExp_S2C)
}

void MsgDungeonSucExp_S2C::SharedCtor() {
  _cached_size_ = 0;
  msgtype_ = 2016;
  iggid_ = GOOGLE_LONGLONG(0);
  addlevel_ = 0;
  addexp_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgDungeonSucExp_S2C::~MsgDungeonSucExp_S2C() {
  // @@protoc_insertion_point(destructor:MsgPB.MsgDungeonSucExp_S2C)
  SharedDtor();
}

void MsgDungeonSucExp_S2C::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgDungeonSucExp_S2C::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgDungeonSucExp_S2C::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgDungeonSucExp_S2C_descriptor_;
}

const MsgDungeonSucExp_S2C& MsgDungeonSucExp_S2C::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgDungeon_2eproto();
  return *default_instance_;
}

MsgDungeonSucExp_S2C* MsgDungeonSucExp_S2C::default_instance_ = NULL;

MsgDungeonSucExp_S2C* MsgDungeonSucExp_S2C::New() const {
  return new MsgDungeonSucExp_S2C;
}

void MsgDungeonSucExp_S2C::Clear() {
  if (_has_bits_[0 / 32] & 15) {
    msgtype_ = 2016;
    iggid_ = GOOGLE_LONGLONG(0);
    addlevel_ = 0;
    addexp_ = 0;
  }
  proexp_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgDungeonSucExp_S2C::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.MsgDungeonSucExp_S2C)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_DUNGEON_SUC_EXP];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::EMsgType_IsValid(value)) {
            set_msgtype(static_cast< ::MsgPB::EMsgType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_iggid;
        break;
      }

      // optional int64 iggid = 2;
      case 2: {
        if (tag == 16) {
         parse_iggid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &iggid_)));
          set_has_iggid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_addLevel;
        break;
      }

      // optional int32 addLevel = 3;
      case 3: {
        if (tag == 24) {
         parse_addLevel:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &addlevel_)));
          set_has_addlevel();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_addExp;
        break;
      }

      // optional int32 addExp = 4;
      case 4: {
        if (tag == 32) {
         parse_addExp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &addexp_)));
          set_has_addexp();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_proExp;
        break;
      }

      // repeated .MsgPB.MsgDungeonSucProExp proExp = 5;
      case 5: {
        if (tag == 42) {
         parse_proExp:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_proexp()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_proExp;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.MsgDungeonSucExp_S2C)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.MsgDungeonSucExp_S2C)
  return false;
#undef DO_
}

void MsgDungeonSucExp_S2C::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.MsgDungeonSucExp_S2C)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_DUNGEON_SUC_EXP];
  if (has_msgtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->msgtype(), output);
  }

  // optional int64 iggid = 2;
  if (has_iggid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->iggid(), output);
  }

  // optional int32 addLevel = 3;
  if (has_addlevel()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->addlevel(), output);
  }

  // optional int32 addExp = 4;
  if (has_addexp()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->addexp(), output);
  }

  // repeated .MsgPB.MsgDungeonSucProExp proExp = 5;
  for (int i = 0; i < this->proexp_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->proexp(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.MsgDungeonSucExp_S2C)
}

::google::protobuf::uint8* MsgDungeonSucExp_S2C::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.MsgDungeonSucExp_S2C)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_DUNGEON_SUC_EXP];
  if (has_msgtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->msgtype(), target);
  }

  // optional int64 iggid = 2;
  if (has_iggid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->iggid(), target);
  }

  // optional int32 addLevel = 3;
  if (has_addlevel()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->addlevel(), target);
  }

  // optional int32 addExp = 4;
  if (has_addexp()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->addexp(), target);
  }

  // repeated .MsgPB.MsgDungeonSucProExp proExp = 5;
  for (int i = 0; i < this->proexp_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->proexp(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.MsgDungeonSucExp_S2C)
  return target;
}

int MsgDungeonSucExp_S2C::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_DUNGEON_SUC_EXP];
    if (has_msgtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgtype());
    }

    // optional int64 iggid = 2;
    if (has_iggid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->iggid());
    }

    // optional int32 addLevel = 3;
    if (has_addlevel()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->addlevel());
    }

    // optional int32 addExp = 4;
    if (has_addexp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->addexp());
    }

  }
  // repeated .MsgPB.MsgDungeonSucProExp proExp = 5;
  total_size += 1 * this->proexp_size();
  for (int i = 0; i < this->proexp_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->proexp(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgDungeonSucExp_S2C::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgDungeonSucExp_S2C* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgDungeonSucExp_S2C*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgDungeonSucExp_S2C::MergeFrom(const MsgDungeonSucExp_S2C& from) {
  GOOGLE_CHECK_NE(&from, this);
  proexp_.MergeFrom(from.proexp_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msgtype()) {
      set_msgtype(from.msgtype());
    }
    if (from.has_iggid()) {
      set_iggid(from.iggid());
    }
    if (from.has_addlevel()) {
      set_addlevel(from.addlevel());
    }
    if (from.has_addexp()) {
      set_addexp(from.addexp());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgDungeonSucExp_S2C::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgDungeonSucExp_S2C::CopyFrom(const MsgDungeonSucExp_S2C& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgDungeonSucExp_S2C::IsInitialized() const {

  return true;
}

void MsgDungeonSucExp_S2C::Swap(MsgDungeonSucExp_S2C* other) {
  if (other != this) {
    std::swap(msgtype_, other->msgtype_);
    std::swap(iggid_, other->iggid_);
    std::swap(addlevel_, other->addlevel_);
    std::swap(addexp_, other->addexp_);
    proexp_.Swap(&other->proexp_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgDungeonSucExp_S2C::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgDungeonSucExp_S2C_descriptor_;
  metadata.reflection = MsgDungeonSucExp_S2C_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace MsgPB

// @@protoc_insertion_point(global_scope)
