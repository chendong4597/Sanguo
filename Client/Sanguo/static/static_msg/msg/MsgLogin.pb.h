// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MsgLogin.proto

#ifndef PROTOBUF_MsgLogin_2eproto__INCLUDED
#define PROTOBUF_MsgLogin_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "MsgType.pb.h"
// @@protoc_insertion_point(includes)

namespace MsgPB {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_MsgLogin_2eproto();
void protobuf_AssignDesc_MsgLogin_2eproto();
void protobuf_ShutdownFile_MsgLogin_2eproto();

class MsgPlatformAccountCheckC2LS;
class MsgPlatformAccountCheckLS2C;
class MsgRegisterAccountC2LS;
class MsgRegisterAccountLS2C;
class MsgClientLoginToLS;
class MsgLoginResp;
class MsgLoginValidate;
class MsgLoginQueueUpInfo;
class MsgQueryRegionRequeset;
class MsgQueryRegionResponse;
class MsgEncryptorCode;
class MsgEncryptorCodeResp;
class MsgClientLoginToGS;
class MsgGSResp;
class MsgNotifyFirstLogin;
class MsgServerVersion;
class MsgUserLoginOtherPlace;
class MsgClientReConnectToGS;
class MsgServerRecvLastPack;
class MsgClientLoginIntra;
class MsgLoginQueueUpStart;
class MsgLoginQueueUpInfoIntra;
class MsgLoginQueueUpInfoIntra_LoginQueueUpInfo;
class MsgNotifyUserDisconnLoginSvr;
class MsgLoginServerValidate;
class MsgPlayerLoginSuccess_MGRS_TO_OTHER;
class MsgDeleteAccountC2S;
class MsgDeleteAccountS2C;

enum LOGIN_QUEUE_UP_ACTION {
  LOGIN_QUEUE_UP_INFO = 1
};
bool LOGIN_QUEUE_UP_ACTION_IsValid(int value);
const LOGIN_QUEUE_UP_ACTION LOGIN_QUEUE_UP_ACTION_MIN = LOGIN_QUEUE_UP_INFO;
const LOGIN_QUEUE_UP_ACTION LOGIN_QUEUE_UP_ACTION_MAX = LOGIN_QUEUE_UP_INFO;
const int LOGIN_QUEUE_UP_ACTION_ARRAYSIZE = LOGIN_QUEUE_UP_ACTION_MAX + 1;

const ::google::protobuf::EnumDescriptor* LOGIN_QUEUE_UP_ACTION_descriptor();
inline const ::std::string& LOGIN_QUEUE_UP_ACTION_Name(LOGIN_QUEUE_UP_ACTION value) {
  return ::google::protobuf::internal::NameOfEnum(
    LOGIN_QUEUE_UP_ACTION_descriptor(), value);
}
inline bool LOGIN_QUEUE_UP_ACTION_Parse(
    const ::std::string& name, LOGIN_QUEUE_UP_ACTION* value) {
  return ::google::protobuf::internal::ParseNamedEnum<LOGIN_QUEUE_UP_ACTION>(
    LOGIN_QUEUE_UP_ACTION_descriptor(), name, value);
}
// ===================================================================

class MsgPlatformAccountCheckC2LS : public ::google::protobuf::Message {
 public:
  MsgPlatformAccountCheckC2LS();
  virtual ~MsgPlatformAccountCheckC2LS();

  MsgPlatformAccountCheckC2LS(const MsgPlatformAccountCheckC2LS& from);

  inline MsgPlatformAccountCheckC2LS& operator=(const MsgPlatformAccountCheckC2LS& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgPlatformAccountCheckC2LS& default_instance();

  void Swap(MsgPlatformAccountCheckC2LS* other);

  // implements Message ----------------------------------------------

  MsgPlatformAccountCheckC2LS* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgPlatformAccountCheckC2LS& from);
  void MergeFrom(const MsgPlatformAccountCheckC2LS& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_CHECK_PLATFORM_ACCOUNTC_C2LS];
  inline bool has_msgtype() const;
  inline void clear_msgtype();
  static const int kMsgTypeFieldNumber = 1;
  inline ::MsgPB::EMsgType msgtype() const;
  inline void set_msgtype(::MsgPB::EMsgType value);

  // optional int32 platform = 2;
  inline bool has_platform() const;
  inline void clear_platform();
  static const int kPlatformFieldNumber = 2;
  inline ::google::protobuf::int32 platform() const;
  inline void set_platform(::google::protobuf::int32 value);

  // optional string account = 3;
  inline bool has_account() const;
  inline void clear_account();
  static const int kAccountFieldNumber = 3;
  inline const ::std::string& account() const;
  inline void set_account(const ::std::string& value);
  inline void set_account(const char* value);
  inline void set_account(const char* value, size_t size);
  inline ::std::string* mutable_account();
  inline ::std::string* release_account();
  inline void set_allocated_account(::std::string* account);

  // optional int32 client_ver = 4;
  inline bool has_client_ver() const;
  inline void clear_client_ver();
  static const int kClientVerFieldNumber = 4;
  inline ::google::protobuf::int32 client_ver() const;
  inline void set_client_ver(::google::protobuf::int32 value);

  // optional string pwd = 5;
  inline bool has_pwd() const;
  inline void clear_pwd();
  static const int kPwdFieldNumber = 5;
  inline const ::std::string& pwd() const;
  inline void set_pwd(const ::std::string& value);
  inline void set_pwd(const char* value);
  inline void set_pwd(const char* value, size_t size);
  inline ::std::string* mutable_pwd();
  inline ::std::string* release_pwd();
  inline void set_allocated_pwd(::std::string* pwd);

  // @@protoc_insertion_point(class_scope:MsgPB.MsgPlatformAccountCheckC2LS)
 private:
  inline void set_has_msgtype();
  inline void clear_has_msgtype();
  inline void set_has_platform();
  inline void clear_has_platform();
  inline void set_has_account();
  inline void clear_has_account();
  inline void set_has_client_ver();
  inline void clear_has_client_ver();
  inline void set_has_pwd();
  inline void clear_has_pwd();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int msgtype_;
  ::google::protobuf::int32 platform_;
  ::std::string* account_;
  ::std::string* pwd_;
  ::google::protobuf::int32 client_ver_;
  friend void  protobuf_AddDesc_MsgLogin_2eproto();
  friend void protobuf_AssignDesc_MsgLogin_2eproto();
  friend void protobuf_ShutdownFile_MsgLogin_2eproto();

  void InitAsDefaultInstance();
  static MsgPlatformAccountCheckC2LS* default_instance_;
};
// -------------------------------------------------------------------

class MsgPlatformAccountCheckLS2C : public ::google::protobuf::Message {
 public:
  MsgPlatformAccountCheckLS2C();
  virtual ~MsgPlatformAccountCheckLS2C();

  MsgPlatformAccountCheckLS2C(const MsgPlatformAccountCheckLS2C& from);

  inline MsgPlatformAccountCheckLS2C& operator=(const MsgPlatformAccountCheckLS2C& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgPlatformAccountCheckLS2C& default_instance();

  void Swap(MsgPlatformAccountCheckLS2C* other);

  // implements Message ----------------------------------------------

  MsgPlatformAccountCheckLS2C* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgPlatformAccountCheckLS2C& from);
  void MergeFrom(const MsgPlatformAccountCheckLS2C& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_CHECK_PLATFORM_ACCOUNTC_LS2C];
  inline bool has_msgtype() const;
  inline void clear_msgtype();
  static const int kMsgTypeFieldNumber = 1;
  inline ::MsgPB::EMsgType msgtype() const;
  inline void set_msgtype(::MsgPB::EMsgType value);

  // optional int64 iggid = 2;
  inline bool has_iggid() const;
  inline void clear_iggid();
  static const int kIggidFieldNumber = 2;
  inline ::google::protobuf::int64 iggid() const;
  inline void set_iggid(::google::protobuf::int64 value);

  // optional int32 platform = 3;
  inline bool has_platform() const;
  inline void clear_platform();
  static const int kPlatformFieldNumber = 3;
  inline ::google::protobuf::int32 platform() const;
  inline void set_platform(::google::protobuf::int32 value);

  // optional string account = 4;
  inline bool has_account() const;
  inline void clear_account();
  static const int kAccountFieldNumber = 4;
  inline const ::std::string& account() const;
  inline void set_account(const ::std::string& value);
  inline void set_account(const char* value);
  inline void set_account(const char* value, size_t size);
  inline ::std::string* mutable_account();
  inline ::std::string* release_account();
  inline void set_allocated_account(::std::string* account);

  // optional int32 nVideo = 5;
  inline bool has_nvideo() const;
  inline void clear_nvideo();
  static const int kNVideoFieldNumber = 5;
  inline ::google::protobuf::int32 nvideo() const;
  inline void set_nvideo(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:MsgPB.MsgPlatformAccountCheckLS2C)
 private:
  inline void set_has_msgtype();
  inline void clear_has_msgtype();
  inline void set_has_iggid();
  inline void clear_has_iggid();
  inline void set_has_platform();
  inline void clear_has_platform();
  inline void set_has_account();
  inline void clear_has_account();
  inline void set_has_nvideo();
  inline void clear_has_nvideo();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 iggid_;
  int msgtype_;
  ::google::protobuf::int32 platform_;
  ::std::string* account_;
  ::google::protobuf::int32 nvideo_;
  friend void  protobuf_AddDesc_MsgLogin_2eproto();
  friend void protobuf_AssignDesc_MsgLogin_2eproto();
  friend void protobuf_ShutdownFile_MsgLogin_2eproto();

  void InitAsDefaultInstance();
  static MsgPlatformAccountCheckLS2C* default_instance_;
};
// -------------------------------------------------------------------

class MsgRegisterAccountC2LS : public ::google::protobuf::Message {
 public:
  MsgRegisterAccountC2LS();
  virtual ~MsgRegisterAccountC2LS();

  MsgRegisterAccountC2LS(const MsgRegisterAccountC2LS& from);

  inline MsgRegisterAccountC2LS& operator=(const MsgRegisterAccountC2LS& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgRegisterAccountC2LS& default_instance();

  void Swap(MsgRegisterAccountC2LS* other);

  // implements Message ----------------------------------------------

  MsgRegisterAccountC2LS* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgRegisterAccountC2LS& from);
  void MergeFrom(const MsgRegisterAccountC2LS& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_REGISTER_ACCOUNTC_C2LS];
  inline bool has_msgtype() const;
  inline void clear_msgtype();
  static const int kMsgTypeFieldNumber = 1;
  inline ::MsgPB::EMsgType msgtype() const;
  inline void set_msgtype(::MsgPB::EMsgType value);

  // optional int32 platform = 2;
  inline bool has_platform() const;
  inline void clear_platform();
  static const int kPlatformFieldNumber = 2;
  inline ::google::protobuf::int32 platform() const;
  inline void set_platform(::google::protobuf::int32 value);

  // optional string account = 3;
  inline bool has_account() const;
  inline void clear_account();
  static const int kAccountFieldNumber = 3;
  inline const ::std::string& account() const;
  inline void set_account(const ::std::string& value);
  inline void set_account(const char* value);
  inline void set_account(const char* value, size_t size);
  inline ::std::string* mutable_account();
  inline ::std::string* release_account();
  inline void set_allocated_account(::std::string* account);

  // optional string pwd = 4;
  inline bool has_pwd() const;
  inline void clear_pwd();
  static const int kPwdFieldNumber = 4;
  inline const ::std::string& pwd() const;
  inline void set_pwd(const ::std::string& value);
  inline void set_pwd(const char* value);
  inline void set_pwd(const char* value, size_t size);
  inline ::std::string* mutable_pwd();
  inline ::std::string* release_pwd();
  inline void set_allocated_pwd(::std::string* pwd);

  // @@protoc_insertion_point(class_scope:MsgPB.MsgRegisterAccountC2LS)
 private:
  inline void set_has_msgtype();
  inline void clear_has_msgtype();
  inline void set_has_platform();
  inline void clear_has_platform();
  inline void set_has_account();
  inline void clear_has_account();
  inline void set_has_pwd();
  inline void clear_has_pwd();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int msgtype_;
  ::google::protobuf::int32 platform_;
  ::std::string* account_;
  ::std::string* pwd_;
  friend void  protobuf_AddDesc_MsgLogin_2eproto();
  friend void protobuf_AssignDesc_MsgLogin_2eproto();
  friend void protobuf_ShutdownFile_MsgLogin_2eproto();

  void InitAsDefaultInstance();
  static MsgRegisterAccountC2LS* default_instance_;
};
// -------------------------------------------------------------------

class MsgRegisterAccountLS2C : public ::google::protobuf::Message {
 public:
  MsgRegisterAccountLS2C();
  virtual ~MsgRegisterAccountLS2C();

  MsgRegisterAccountLS2C(const MsgRegisterAccountLS2C& from);

  inline MsgRegisterAccountLS2C& operator=(const MsgRegisterAccountLS2C& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgRegisterAccountLS2C& default_instance();

  void Swap(MsgRegisterAccountLS2C* other);

  // implements Message ----------------------------------------------

  MsgRegisterAccountLS2C* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgRegisterAccountLS2C& from);
  void MergeFrom(const MsgRegisterAccountLS2C& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_REGISTER_ACCOUNTC_LS2C];
  inline bool has_msgtype() const;
  inline void clear_msgtype();
  static const int kMsgTypeFieldNumber = 1;
  inline ::MsgPB::EMsgType msgtype() const;
  inline void set_msgtype(::MsgPB::EMsgType value);

  // optional int32 platform = 2;
  inline bool has_platform() const;
  inline void clear_platform();
  static const int kPlatformFieldNumber = 2;
  inline ::google::protobuf::int32 platform() const;
  inline void set_platform(::google::protobuf::int32 value);

  // optional string account = 3;
  inline bool has_account() const;
  inline void clear_account();
  static const int kAccountFieldNumber = 3;
  inline const ::std::string& account() const;
  inline void set_account(const ::std::string& value);
  inline void set_account(const char* value);
  inline void set_account(const char* value, size_t size);
  inline ::std::string* mutable_account();
  inline ::std::string* release_account();
  inline void set_allocated_account(::std::string* account);

  // @@protoc_insertion_point(class_scope:MsgPB.MsgRegisterAccountLS2C)
 private:
  inline void set_has_msgtype();
  inline void clear_has_msgtype();
  inline void set_has_platform();
  inline void clear_has_platform();
  inline void set_has_account();
  inline void clear_has_account();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int msgtype_;
  ::google::protobuf::int32 platform_;
  ::std::string* account_;
  friend void  protobuf_AddDesc_MsgLogin_2eproto();
  friend void protobuf_AssignDesc_MsgLogin_2eproto();
  friend void protobuf_ShutdownFile_MsgLogin_2eproto();

  void InitAsDefaultInstance();
  static MsgRegisterAccountLS2C* default_instance_;
};
// -------------------------------------------------------------------

class MsgClientLoginToLS : public ::google::protobuf::Message {
 public:
  MsgClientLoginToLS();
  virtual ~MsgClientLoginToLS();

  MsgClientLoginToLS(const MsgClientLoginToLS& from);

  inline MsgClientLoginToLS& operator=(const MsgClientLoginToLS& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgClientLoginToLS& default_instance();

  void Swap(MsgClientLoginToLS* other);

  // implements Message ----------------------------------------------

  MsgClientLoginToLS* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgClientLoginToLS& from);
  void MergeFrom(const MsgClientLoginToLS& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_CLIENT_LOGIN_TO_LS];
  inline bool has_msgtype() const;
  inline void clear_msgtype();
  static const int kMsgTypeFieldNumber = 1;
  inline ::MsgPB::EMsgType msgtype() const;
  inline void set_msgtype(::MsgPB::EMsgType value);

  // optional int64 IggID = 2;
  inline bool has_iggid() const;
  inline void clear_iggid();
  static const int kIggIDFieldNumber = 2;
  inline ::google::protobuf::int64 iggid() const;
  inline void set_iggid(::google::protobuf::int64 value);

  // optional string IggKey = 3;
  inline bool has_iggkey() const;
  inline void clear_iggkey();
  static const int kIggKeyFieldNumber = 3;
  inline const ::std::string& iggkey() const;
  inline void set_iggkey(const ::std::string& value);
  inline void set_iggkey(const char* value);
  inline void set_iggkey(const char* value, size_t size);
  inline ::std::string* mutable_iggkey();
  inline ::std::string* release_iggkey();
  inline void set_allocated_iggkey(::std::string* iggkey);

  // optional string SessionKey = 4;
  inline bool has_sessionkey() const;
  inline void clear_sessionkey();
  static const int kSessionKeyFieldNumber = 4;
  inline const ::std::string& sessionkey() const;
  inline void set_sessionkey(const ::std::string& value);
  inline void set_sessionkey(const char* value);
  inline void set_sessionkey(const char* value, size_t size);
  inline ::std::string* mutable_sessionkey();
  inline ::std::string* release_sessionkey();
  inline void set_allocated_sessionkey(::std::string* sessionkey);

  // optional int32 versionCode = 5;
  inline bool has_versioncode() const;
  inline void clear_versioncode();
  static const int kVersionCodeFieldNumber = 5;
  inline ::google::protobuf::int32 versioncode() const;
  inline void set_versioncode(::google::protobuf::int32 value);

  // optional int32 client_svn_ver = 6;
  inline bool has_client_svn_ver() const;
  inline void clear_client_svn_ver();
  static const int kClientSvnVerFieldNumber = 6;
  inline ::google::protobuf::int32 client_svn_ver() const;
  inline void set_client_svn_ver(::google::protobuf::int32 value);

  // optional int32 ignore_update = 7;
  inline bool has_ignore_update() const;
  inline void clear_ignore_update();
  static const int kIgnoreUpdateFieldNumber = 7;
  inline ::google::protobuf::int32 ignore_update() const;
  inline void set_ignore_update(::google::protobuf::int32 value);

  // optional uint32 area_id = 8;
  inline bool has_area_id() const;
  inline void clear_area_id();
  static const int kAreaIdFieldNumber = 8;
  inline ::google::protobuf::uint32 area_id() const;
  inline void set_area_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:MsgPB.MsgClientLoginToLS)
 private:
  inline void set_has_msgtype();
  inline void clear_has_msgtype();
  inline void set_has_iggid();
  inline void clear_has_iggid();
  inline void set_has_iggkey();
  inline void clear_has_iggkey();
  inline void set_has_sessionkey();
  inline void clear_has_sessionkey();
  inline void set_has_versioncode();
  inline void clear_has_versioncode();
  inline void set_has_client_svn_ver();
  inline void clear_has_client_svn_ver();
  inline void set_has_ignore_update();
  inline void clear_has_ignore_update();
  inline void set_has_area_id();
  inline void clear_has_area_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 iggid_;
  ::std::string* iggkey_;
  int msgtype_;
  ::google::protobuf::int32 versioncode_;
  ::std::string* sessionkey_;
  ::google::protobuf::int32 client_svn_ver_;
  ::google::protobuf::int32 ignore_update_;
  ::google::protobuf::uint32 area_id_;
  friend void  protobuf_AddDesc_MsgLogin_2eproto();
  friend void protobuf_AssignDesc_MsgLogin_2eproto();
  friend void protobuf_ShutdownFile_MsgLogin_2eproto();

  void InitAsDefaultInstance();
  static MsgClientLoginToLS* default_instance_;
};
// -------------------------------------------------------------------

class MsgLoginResp : public ::google::protobuf::Message {
 public:
  MsgLoginResp();
  virtual ~MsgLoginResp();

  MsgLoginResp(const MsgLoginResp& from);

  inline MsgLoginResp& operator=(const MsgLoginResp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgLoginResp& default_instance();

  void Swap(MsgLoginResp* other);

  // implements Message ----------------------------------------------

  MsgLoginResp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgLoginResp& from);
  void MergeFrom(const MsgLoginResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_LOGIN_RESP];
  inline bool has_msgtype() const;
  inline void clear_msgtype();
  static const int kMsgTypeFieldNumber = 1;
  inline ::MsgPB::EMsgType msgtype() const;
  inline void set_msgtype(::MsgPB::EMsgType value);

  // optional .MsgPB.LOGIN_RESULT loginResult = 2;
  inline bool has_loginresult() const;
  inline void clear_loginresult();
  static const int kLoginResultFieldNumber = 2;
  inline ::MsgPB::LOGIN_RESULT loginresult() const;
  inline void set_loginresult(::MsgPB::LOGIN_RESULT value);

  // optional int64 IggID = 3;
  inline bool has_iggid() const;
  inline void clear_iggid();
  static const int kIggIDFieldNumber = 3;
  inline ::google::protobuf::int64 iggid() const;
  inline void set_iggid(::google::protobuf::int64 value);

  // optional int32 LoginTime = 4;
  inline bool has_logintime() const;
  inline void clear_logintime();
  static const int kLoginTimeFieldNumber = 4;
  inline ::google::protobuf::int32 logintime() const;
  inline void set_logintime(::google::protobuf::int32 value);

  // optional int32 TimeZone = 5;
  inline bool has_timezone() const;
  inline void clear_timezone();
  static const int kTimeZoneFieldNumber = 5;
  inline ::google::protobuf::int32 timezone() const;
  inline void set_timezone(::google::protobuf::int32 value);

  // optional string apple_app_addr = 6;
  inline bool has_apple_app_addr() const;
  inline void clear_apple_app_addr();
  static const int kAppleAppAddrFieldNumber = 6;
  inline const ::std::string& apple_app_addr() const;
  inline void set_apple_app_addr(const ::std::string& value);
  inline void set_apple_app_addr(const char* value);
  inline void set_apple_app_addr(const char* value, size_t size);
  inline ::std::string* mutable_apple_app_addr();
  inline ::std::string* release_apple_app_addr();
  inline void set_allocated_apple_app_addr(::std::string* apple_app_addr);

  // optional string android_app_addr = 7;
  inline bool has_android_app_addr() const;
  inline void clear_android_app_addr();
  static const int kAndroidAppAddrFieldNumber = 7;
  inline const ::std::string& android_app_addr() const;
  inline void set_android_app_addr(const ::std::string& value);
  inline void set_android_app_addr(const char* value);
  inline void set_android_app_addr(const char* value, size_t size);
  inline ::std::string* mutable_android_app_addr();
  inline ::std::string* release_android_app_addr();
  inline void set_allocated_android_app_addr(::std::string* android_app_addr);

  // optional string s_update_note_addr = 8;
  inline bool has_s_update_note_addr() const;
  inline void clear_s_update_note_addr();
  static const int kSUpdateNoteAddrFieldNumber = 8;
  inline const ::std::string& s_update_note_addr() const;
  inline void set_s_update_note_addr(const ::std::string& value);
  inline void set_s_update_note_addr(const char* value);
  inline void set_s_update_note_addr(const char* value, size_t size);
  inline ::std::string* mutable_s_update_note_addr();
  inline ::std::string* release_s_update_note_addr();
  inline void set_allocated_s_update_note_addr(::std::string* s_update_note_addr);

  // optional string s_announcement_addr = 9;
  inline bool has_s_announcement_addr() const;
  inline void clear_s_announcement_addr();
  static const int kSAnnouncementAddrFieldNumber = 9;
  inline const ::std::string& s_announcement_addr() const;
  inline void set_s_announcement_addr(const ::std::string& value);
  inline void set_s_announcement_addr(const char* value);
  inline void set_s_announcement_addr(const char* value, size_t size);
  inline ::std::string* mutable_s_announcement_addr();
  inline ::std::string* release_s_announcement_addr();
  inline void set_allocated_s_announcement_addr(::std::string* s_announcement_addr);

  // @@protoc_insertion_point(class_scope:MsgPB.MsgLoginResp)
 private:
  inline void set_has_msgtype();
  inline void clear_has_msgtype();
  inline void set_has_loginresult();
  inline void clear_has_loginresult();
  inline void set_has_iggid();
  inline void clear_has_iggid();
  inline void set_has_logintime();
  inline void clear_has_logintime();
  inline void set_has_timezone();
  inline void clear_has_timezone();
  inline void set_has_apple_app_addr();
  inline void clear_has_apple_app_addr();
  inline void set_has_android_app_addr();
  inline void clear_has_android_app_addr();
  inline void set_has_s_update_note_addr();
  inline void clear_has_s_update_note_addr();
  inline void set_has_s_announcement_addr();
  inline void clear_has_s_announcement_addr();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int msgtype_;
  int loginresult_;
  ::google::protobuf::int64 iggid_;
  ::google::protobuf::int32 logintime_;
  ::google::protobuf::int32 timezone_;
  ::std::string* apple_app_addr_;
  ::std::string* android_app_addr_;
  ::std::string* s_update_note_addr_;
  ::std::string* s_announcement_addr_;
  friend void  protobuf_AddDesc_MsgLogin_2eproto();
  friend void protobuf_AssignDesc_MsgLogin_2eproto();
  friend void protobuf_ShutdownFile_MsgLogin_2eproto();

  void InitAsDefaultInstance();
  static MsgLoginResp* default_instance_;
};
// -------------------------------------------------------------------

class MsgLoginValidate : public ::google::protobuf::Message {
 public:
  MsgLoginValidate();
  virtual ~MsgLoginValidate();

  MsgLoginValidate(const MsgLoginValidate& from);

  inline MsgLoginValidate& operator=(const MsgLoginValidate& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgLoginValidate& default_instance();

  void Swap(MsgLoginValidate* other);

  // implements Message ----------------------------------------------

  MsgLoginValidate* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgLoginValidate& from);
  void MergeFrom(const MsgLoginValidate& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_LOGIN_VALIDATE];
  inline bool has_msgtype() const;
  inline void clear_msgtype();
  static const int kMsgTypeFieldNumber = 1;
  inline ::MsgPB::EMsgType msgtype() const;
  inline void set_msgtype(::MsgPB::EMsgType value);

  // optional int64 IggID = 2;
  inline bool has_iggid() const;
  inline void clear_iggid();
  static const int kIggIDFieldNumber = 2;
  inline ::google::protobuf::int64 iggid() const;
  inline void set_iggid(::google::protobuf::int64 value);

  // optional string ip = 3;
  inline bool has_ip() const;
  inline void clear_ip();
  static const int kIpFieldNumber = 3;
  inline const ::std::string& ip() const;
  inline void set_ip(const ::std::string& value);
  inline void set_ip(const char* value);
  inline void set_ip(const char* value, size_t size);
  inline ::std::string* mutable_ip();
  inline ::std::string* release_ip();
  inline void set_allocated_ip(::std::string* ip);

  // optional int32 port = 4;
  inline bool has_port() const;
  inline void clear_port();
  static const int kPortFieldNumber = 4;
  inline ::google::protobuf::int32 port() const;
  inline void set_port(::google::protobuf::int32 value);

  // optional string checkText = 5;
  inline bool has_checktext() const;
  inline void clear_checktext();
  static const int kCheckTextFieldNumber = 5;
  inline const ::std::string& checktext() const;
  inline void set_checktext(const ::std::string& value);
  inline void set_checktext(const char* value);
  inline void set_checktext(const char* value, size_t size);
  inline ::std::string* mutable_checktext();
  inline ::std::string* release_checktext();
  inline void set_allocated_checktext(::std::string* checktext);

  // @@protoc_insertion_point(class_scope:MsgPB.MsgLoginValidate)
 private:
  inline void set_has_msgtype();
  inline void clear_has_msgtype();
  inline void set_has_iggid();
  inline void clear_has_iggid();
  inline void set_has_ip();
  inline void clear_has_ip();
  inline void set_has_port();
  inline void clear_has_port();
  inline void set_has_checktext();
  inline void clear_has_checktext();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 iggid_;
  int msgtype_;
  ::google::protobuf::int32 port_;
  ::std::string* ip_;
  ::std::string* checktext_;
  friend void  protobuf_AddDesc_MsgLogin_2eproto();
  friend void protobuf_AssignDesc_MsgLogin_2eproto();
  friend void protobuf_ShutdownFile_MsgLogin_2eproto();

  void InitAsDefaultInstance();
  static MsgLoginValidate* default_instance_;
};
// -------------------------------------------------------------------

class MsgLoginQueueUpInfo : public ::google::protobuf::Message {
 public:
  MsgLoginQueueUpInfo();
  virtual ~MsgLoginQueueUpInfo();

  MsgLoginQueueUpInfo(const MsgLoginQueueUpInfo& from);

  inline MsgLoginQueueUpInfo& operator=(const MsgLoginQueueUpInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgLoginQueueUpInfo& default_instance();

  void Swap(MsgLoginQueueUpInfo* other);

  // implements Message ----------------------------------------------

  MsgLoginQueueUpInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgLoginQueueUpInfo& from);
  void MergeFrom(const MsgLoginQueueUpInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_LOGIN_QUEUE_UP_INFO];
  inline bool has_msgtype() const;
  inline void clear_msgtype();
  static const int kMsgTypeFieldNumber = 1;
  inline ::MsgPB::EMsgType msgtype() const;
  inline void set_msgtype(::MsgPB::EMsgType value);

  // optional .MsgPB.LOGIN_QUEUE_UP_ACTION action = 2;
  inline bool has_action() const;
  inline void clear_action();
  static const int kActionFieldNumber = 2;
  inline ::MsgPB::LOGIN_QUEUE_UP_ACTION action() const;
  inline void set_action(::MsgPB::LOGIN_QUEUE_UP_ACTION value);

  // optional int64 IggID = 3;
  inline bool has_iggid() const;
  inline void clear_iggid();
  static const int kIggIDFieldNumber = 3;
  inline ::google::protobuf::int64 iggid() const;
  inline void set_iggid(::google::protobuf::int64 value);

  // optional int32 curPos = 4;
  inline bool has_curpos() const;
  inline void clear_curpos();
  static const int kCurPosFieldNumber = 4;
  inline ::google::protobuf::int32 curpos() const;
  inline void set_curpos(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:MsgPB.MsgLoginQueueUpInfo)
 private:
  inline void set_has_msgtype();
  inline void clear_has_msgtype();
  inline void set_has_action();
  inline void clear_has_action();
  inline void set_has_iggid();
  inline void clear_has_iggid();
  inline void set_has_curpos();
  inline void clear_has_curpos();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int msgtype_;
  int action_;
  ::google::protobuf::int64 iggid_;
  ::google::protobuf::int32 curpos_;
  friend void  protobuf_AddDesc_MsgLogin_2eproto();
  friend void protobuf_AssignDesc_MsgLogin_2eproto();
  friend void protobuf_ShutdownFile_MsgLogin_2eproto();

  void InitAsDefaultInstance();
  static MsgLoginQueueUpInfo* default_instance_;
};
// -------------------------------------------------------------------

class MsgQueryRegionRequeset : public ::google::protobuf::Message {
 public:
  MsgQueryRegionRequeset();
  virtual ~MsgQueryRegionRequeset();

  MsgQueryRegionRequeset(const MsgQueryRegionRequeset& from);

  inline MsgQueryRegionRequeset& operator=(const MsgQueryRegionRequeset& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgQueryRegionRequeset& default_instance();

  void Swap(MsgQueryRegionRequeset* other);

  // implements Message ----------------------------------------------

  MsgQueryRegionRequeset* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgQueryRegionRequeset& from);
  void MergeFrom(const MsgQueryRegionRequeset& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_QUERY_REGION];
  inline bool has_msgtype() const;
  inline void clear_msgtype();
  static const int kMsgTypeFieldNumber = 1;
  inline ::MsgPB::EMsgType msgtype() const;
  inline void set_msgtype(::MsgPB::EMsgType value);

  // @@protoc_insertion_point(class_scope:MsgPB.MsgQueryRegionRequeset)
 private:
  inline void set_has_msgtype();
  inline void clear_has_msgtype();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int msgtype_;
  friend void  protobuf_AddDesc_MsgLogin_2eproto();
  friend void protobuf_AssignDesc_MsgLogin_2eproto();
  friend void protobuf_ShutdownFile_MsgLogin_2eproto();

  void InitAsDefaultInstance();
  static MsgQueryRegionRequeset* default_instance_;
};
// -------------------------------------------------------------------

class MsgQueryRegionResponse : public ::google::protobuf::Message {
 public:
  MsgQueryRegionResponse();
  virtual ~MsgQueryRegionResponse();

  MsgQueryRegionResponse(const MsgQueryRegionResponse& from);

  inline MsgQueryRegionResponse& operator=(const MsgQueryRegionResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgQueryRegionResponse& default_instance();

  void Swap(MsgQueryRegionResponse* other);

  // implements Message ----------------------------------------------

  MsgQueryRegionResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgQueryRegionResponse& from);
  void MergeFrom(const MsgQueryRegionResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_QUERY_REGION_RESPONSE];
  inline bool has_msgtype() const;
  inline void clear_msgtype();
  static const int kMsgTypeFieldNumber = 1;
  inline ::MsgPB::EMsgType msgtype() const;
  inline void set_msgtype(::MsgPB::EMsgType value);

  // repeated string region_lst = 2;
  inline int region_lst_size() const;
  inline void clear_region_lst();
  static const int kRegionLstFieldNumber = 2;
  inline const ::std::string& region_lst(int index) const;
  inline ::std::string* mutable_region_lst(int index);
  inline void set_region_lst(int index, const ::std::string& value);
  inline void set_region_lst(int index, const char* value);
  inline void set_region_lst(int index, const char* value, size_t size);
  inline ::std::string* add_region_lst();
  inline void add_region_lst(const ::std::string& value);
  inline void add_region_lst(const char* value);
  inline void add_region_lst(const char* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& region_lst() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_region_lst();

  // @@protoc_insertion_point(class_scope:MsgPB.MsgQueryRegionResponse)
 private:
  inline void set_has_msgtype();
  inline void clear_has_msgtype();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::std::string> region_lst_;
  int msgtype_;
  friend void  protobuf_AddDesc_MsgLogin_2eproto();
  friend void protobuf_AssignDesc_MsgLogin_2eproto();
  friend void protobuf_ShutdownFile_MsgLogin_2eproto();

  void InitAsDefaultInstance();
  static MsgQueryRegionResponse* default_instance_;
};
// -------------------------------------------------------------------

class MsgEncryptorCode : public ::google::protobuf::Message {
 public:
  MsgEncryptorCode();
  virtual ~MsgEncryptorCode();

  MsgEncryptorCode(const MsgEncryptorCode& from);

  inline MsgEncryptorCode& operator=(const MsgEncryptorCode& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgEncryptorCode& default_instance();

  void Swap(MsgEncryptorCode* other);

  // implements Message ----------------------------------------------

  MsgEncryptorCode* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgEncryptorCode& from);
  void MergeFrom(const MsgEncryptorCode& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_ENCRYPTOR_CODE];
  inline bool has_msgtype() const;
  inline void clear_msgtype();
  static const int kMsgTypeFieldNumber = 1;
  inline ::MsgPB::EMsgType msgtype() const;
  inline void set_msgtype(::MsgPB::EMsgType value);

  // @@protoc_insertion_point(class_scope:MsgPB.MsgEncryptorCode)
 private:
  inline void set_has_msgtype();
  inline void clear_has_msgtype();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int msgtype_;
  friend void  protobuf_AddDesc_MsgLogin_2eproto();
  friend void protobuf_AssignDesc_MsgLogin_2eproto();
  friend void protobuf_ShutdownFile_MsgLogin_2eproto();

  void InitAsDefaultInstance();
  static MsgEncryptorCode* default_instance_;
};
// -------------------------------------------------------------------

class MsgEncryptorCodeResp : public ::google::protobuf::Message {
 public:
  MsgEncryptorCodeResp();
  virtual ~MsgEncryptorCodeResp();

  MsgEncryptorCodeResp(const MsgEncryptorCodeResp& from);

  inline MsgEncryptorCodeResp& operator=(const MsgEncryptorCodeResp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgEncryptorCodeResp& default_instance();

  void Swap(MsgEncryptorCodeResp* other);

  // implements Message ----------------------------------------------

  MsgEncryptorCodeResp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgEncryptorCodeResp& from);
  void MergeFrom(const MsgEncryptorCodeResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_ENCRYPTOR_CODE_RESP];
  inline bool has_msgtype() const;
  inline void clear_msgtype();
  static const int kMsgTypeFieldNumber = 1;
  inline ::MsgPB::EMsgType msgtype() const;
  inline void set_msgtype(::MsgPB::EMsgType value);

  // optional uint32 code = 2;
  inline bool has_code() const;
  inline void clear_code();
  static const int kCodeFieldNumber = 2;
  inline ::google::protobuf::uint32 code() const;
  inline void set_code(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:MsgPB.MsgEncryptorCodeResp)
 private:
  inline void set_has_msgtype();
  inline void clear_has_msgtype();
  inline void set_has_code();
  inline void clear_has_code();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int msgtype_;
  ::google::protobuf::uint32 code_;
  friend void  protobuf_AddDesc_MsgLogin_2eproto();
  friend void protobuf_AssignDesc_MsgLogin_2eproto();
  friend void protobuf_ShutdownFile_MsgLogin_2eproto();

  void InitAsDefaultInstance();
  static MsgEncryptorCodeResp* default_instance_;
};
// -------------------------------------------------------------------

class MsgClientLoginToGS : public ::google::protobuf::Message {
 public:
  MsgClientLoginToGS();
  virtual ~MsgClientLoginToGS();

  MsgClientLoginToGS(const MsgClientLoginToGS& from);

  inline MsgClientLoginToGS& operator=(const MsgClientLoginToGS& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgClientLoginToGS& default_instance();

  void Swap(MsgClientLoginToGS* other);

  // implements Message ----------------------------------------------

  MsgClientLoginToGS* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgClientLoginToGS& from);
  void MergeFrom(const MsgClientLoginToGS& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_CLIENT_LOGIN_TO_GS];
  inline bool has_msgtype() const;
  inline void clear_msgtype();
  static const int kMsgTypeFieldNumber = 1;
  inline ::MsgPB::EMsgType msgtype() const;
  inline void set_msgtype(::MsgPB::EMsgType value);

  // optional int64 IggID = 2;
  inline bool has_iggid() const;
  inline void clear_iggid();
  static const int kIggIDFieldNumber = 2;
  inline ::google::protobuf::int64 iggid() const;
  inline void set_iggid(::google::protobuf::int64 value);

  // optional string checkText = 3;
  inline bool has_checktext() const;
  inline void clear_checktext();
  static const int kCheckTextFieldNumber = 3;
  inline const ::std::string& checktext() const;
  inline void set_checktext(const ::std::string& value);
  inline void set_checktext(const char* value);
  inline void set_checktext(const char* value, size_t size);
  inline ::std::string* mutable_checktext();
  inline ::std::string* release_checktext();
  inline void set_allocated_checktext(::std::string* checktext);

  // optional bytes nickName = 4;
  inline bool has_nickname() const;
  inline void clear_nickname();
  static const int kNickNameFieldNumber = 4;
  inline const ::std::string& nickname() const;
  inline void set_nickname(const ::std::string& value);
  inline void set_nickname(const char* value);
  inline void set_nickname(const void* value, size_t size);
  inline ::std::string* mutable_nickname();
  inline ::std::string* release_nickname();
  inline void set_allocated_nickname(::std::string* nickname);

  // optional int32 GameID = 5;
  inline bool has_gameid() const;
  inline void clear_gameid();
  static const int kGameIDFieldNumber = 5;
  inline ::google::protobuf::int32 gameid() const;
  inline void set_gameid(::google::protobuf::int32 value);

  // optional int32 deviceID = 6;
  inline bool has_deviceid() const;
  inline void clear_deviceid();
  static const int kDeviceIDFieldNumber = 6;
  inline ::google::protobuf::int32 deviceid() const;
  inline void set_deviceid(::google::protobuf::int32 value);

  // optional int32 versionCode = 7;
  inline bool has_versioncode() const;
  inline void clear_versioncode();
  static const int kVersionCodeFieldNumber = 7;
  inline ::google::protobuf::int32 versioncode() const;
  inline void set_versioncode(::google::protobuf::int32 value);

  // optional bool CliendMode = 8 [default = false];
  inline bool has_cliendmode() const;
  inline void clear_cliendmode();
  static const int kCliendModeFieldNumber = 8;
  inline bool cliendmode() const;
  inline void set_cliendmode(bool value);

  // optional bool UploadData = 9 [default = false];
  inline bool has_uploaddata() const;
  inline void clear_uploaddata();
  static const int kUploadDataFieldNumber = 9;
  inline bool uploaddata() const;
  inline void set_uploaddata(bool value);

  // optional string Device = 10;
  inline bool has_device() const;
  inline void clear_device();
  static const int kDeviceFieldNumber = 10;
  inline const ::std::string& device() const;
  inline void set_device(const ::std::string& value);
  inline void set_device(const char* value);
  inline void set_device(const char* value, size_t size);
  inline ::std::string* mutable_device();
  inline ::std::string* release_device();
  inline void set_allocated_device(::std::string* device);

  // optional int32 client_svn_ver = 11;
  inline bool has_client_svn_ver() const;
  inline void clear_client_svn_ver();
  static const int kClientSvnVerFieldNumber = 11;
  inline ::google::protobuf::int32 client_svn_ver() const;
  inline void set_client_svn_ver(::google::protobuf::int32 value);

  // optional bool is_adult = 12 [default = false];
  inline bool has_is_adult() const;
  inline void clear_is_adult();
  static const int kIsAdultFieldNumber = 12;
  inline bool is_adult() const;
  inline void set_is_adult(bool value);

  // @@protoc_insertion_point(class_scope:MsgPB.MsgClientLoginToGS)
 private:
  inline void set_has_msgtype();
  inline void clear_has_msgtype();
  inline void set_has_iggid();
  inline void clear_has_iggid();
  inline void set_has_checktext();
  inline void clear_has_checktext();
  inline void set_has_nickname();
  inline void clear_has_nickname();
  inline void set_has_gameid();
  inline void clear_has_gameid();
  inline void set_has_deviceid();
  inline void clear_has_deviceid();
  inline void set_has_versioncode();
  inline void clear_has_versioncode();
  inline void set_has_cliendmode();
  inline void clear_has_cliendmode();
  inline void set_has_uploaddata();
  inline void clear_has_uploaddata();
  inline void set_has_device();
  inline void clear_has_device();
  inline void set_has_client_svn_ver();
  inline void clear_has_client_svn_ver();
  inline void set_has_is_adult();
  inline void clear_has_is_adult();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 iggid_;
  ::std::string* checktext_;
  int msgtype_;
  ::google::protobuf::int32 gameid_;
  ::std::string* nickname_;
  ::google::protobuf::int32 deviceid_;
  ::google::protobuf::int32 versioncode_;
  ::std::string* device_;
  bool cliendmode_;
  bool uploaddata_;
  bool is_adult_;
  ::google::protobuf::int32 client_svn_ver_;
  friend void  protobuf_AddDesc_MsgLogin_2eproto();
  friend void protobuf_AssignDesc_MsgLogin_2eproto();
  friend void protobuf_ShutdownFile_MsgLogin_2eproto();

  void InitAsDefaultInstance();
  static MsgClientLoginToGS* default_instance_;
};
// -------------------------------------------------------------------

class MsgGSResp : public ::google::protobuf::Message {
 public:
  MsgGSResp();
  virtual ~MsgGSResp();

  MsgGSResp(const MsgGSResp& from);

  inline MsgGSResp& operator=(const MsgGSResp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgGSResp& default_instance();

  void Swap(MsgGSResp* other);

  // implements Message ----------------------------------------------

  MsgGSResp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgGSResp& from);
  void MergeFrom(const MsgGSResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_GS_RESP];
  inline bool has_msgtype() const;
  inline void clear_msgtype();
  static const int kMsgTypeFieldNumber = 1;
  inline ::MsgPB::EMsgType msgtype() const;
  inline void set_msgtype(::MsgPB::EMsgType value);

  // optional .MsgPB.LOGIN_RESULT loginResult = 2;
  inline bool has_loginresult() const;
  inline void clear_loginresult();
  static const int kLoginResultFieldNumber = 2;
  inline ::MsgPB::LOGIN_RESULT loginresult() const;
  inline void set_loginresult(::MsgPB::LOGIN_RESULT value);

  // optional int64 IggID = 3;
  inline bool has_iggid() const;
  inline void clear_iggid();
  static const int kIggIDFieldNumber = 3;
  inline ::google::protobuf::int64 iggid() const;
  inline void set_iggid(::google::protobuf::int64 value);

  // optional int64 LoginTime = 4;
  inline bool has_logintime() const;
  inline void clear_logintime();
  static const int kLoginTimeFieldNumber = 4;
  inline ::google::protobuf::int64 logintime() const;
  inline void set_logintime(::google::protobuf::int64 value);

  // optional int32 TimeZone = 5;
  inline bool has_timezone() const;
  inline void clear_timezone();
  static const int kTimeZoneFieldNumber = 5;
  inline ::google::protobuf::int32 timezone() const;
  inline void set_timezone(::google::protobuf::int32 value);

  // optional bool DeviceChanged = 6 [default = false];
  inline bool has_devicechanged() const;
  inline void clear_devicechanged();
  static const int kDeviceChangedFieldNumber = 6;
  inline bool devicechanged() const;
  inline void set_devicechanged(bool value);

  // optional int64 LastClientUploadDataSerial = 7 [default = 0];
  inline bool has_lastclientuploaddataserial() const;
  inline void clear_lastclientuploaddataserial();
  static const int kLastClientUploadDataSerialFieldNumber = 7;
  inline ::google::protobuf::int64 lastclientuploaddataserial() const;
  inline void set_lastclientuploaddataserial(::google::protobuf::int64 value);

  // optional int32 Client_History_Msg = 8;
  inline bool has_client_history_msg() const;
  inline void clear_client_history_msg();
  static const int kClientHistoryMsgFieldNumber = 8;
  inline ::google::protobuf::int32 client_history_msg() const;
  inline void set_client_history_msg(::google::protobuf::int32 value);

  // optional int32 NewbieStep = 9;
  inline bool has_newbiestep() const;
  inline void clear_newbiestep();
  static const int kNewbieStepFieldNumber = 9;
  inline ::google::protobuf::int32 newbiestep() const;
  inline void set_newbiestep(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:MsgPB.MsgGSResp)
 private:
  inline void set_has_msgtype();
  inline void clear_has_msgtype();
  inline void set_has_loginresult();
  inline void clear_has_loginresult();
  inline void set_has_iggid();
  inline void clear_has_iggid();
  inline void set_has_logintime();
  inline void clear_has_logintime();
  inline void set_has_timezone();
  inline void clear_has_timezone();
  inline void set_has_devicechanged();
  inline void clear_has_devicechanged();
  inline void set_has_lastclientuploaddataserial();
  inline void clear_has_lastclientuploaddataserial();
  inline void set_has_client_history_msg();
  inline void clear_has_client_history_msg();
  inline void set_has_newbiestep();
  inline void clear_has_newbiestep();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int msgtype_;
  int loginresult_;
  ::google::protobuf::int64 iggid_;
  ::google::protobuf::int64 logintime_;
  ::google::protobuf::int32 timezone_;
  bool devicechanged_;
  ::google::protobuf::int64 lastclientuploaddataserial_;
  ::google::protobuf::int32 client_history_msg_;
  ::google::protobuf::int32 newbiestep_;
  friend void  protobuf_AddDesc_MsgLogin_2eproto();
  friend void protobuf_AssignDesc_MsgLogin_2eproto();
  friend void protobuf_ShutdownFile_MsgLogin_2eproto();

  void InitAsDefaultInstance();
  static MsgGSResp* default_instance_;
};
// -------------------------------------------------------------------

class MsgNotifyFirstLogin : public ::google::protobuf::Message {
 public:
  MsgNotifyFirstLogin();
  virtual ~MsgNotifyFirstLogin();

  MsgNotifyFirstLogin(const MsgNotifyFirstLogin& from);

  inline MsgNotifyFirstLogin& operator=(const MsgNotifyFirstLogin& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgNotifyFirstLogin& default_instance();

  void Swap(MsgNotifyFirstLogin* other);

  // implements Message ----------------------------------------------

  MsgNotifyFirstLogin* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgNotifyFirstLogin& from);
  void MergeFrom(const MsgNotifyFirstLogin& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_NOTIFY_FIRST_LOGIN];
  inline bool has_msgtype() const;
  inline void clear_msgtype();
  static const int kMsgTypeFieldNumber = 1;
  inline ::MsgPB::EMsgType msgtype() const;
  inline void set_msgtype(::MsgPB::EMsgType value);

  // @@protoc_insertion_point(class_scope:MsgPB.MsgNotifyFirstLogin)
 private:
  inline void set_has_msgtype();
  inline void clear_has_msgtype();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int msgtype_;
  friend void  protobuf_AddDesc_MsgLogin_2eproto();
  friend void protobuf_AssignDesc_MsgLogin_2eproto();
  friend void protobuf_ShutdownFile_MsgLogin_2eproto();

  void InitAsDefaultInstance();
  static MsgNotifyFirstLogin* default_instance_;
};
// -------------------------------------------------------------------

class MsgServerVersion : public ::google::protobuf::Message {
 public:
  MsgServerVersion();
  virtual ~MsgServerVersion();

  MsgServerVersion(const MsgServerVersion& from);

  inline MsgServerVersion& operator=(const MsgServerVersion& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgServerVersion& default_instance();

  void Swap(MsgServerVersion* other);

  // implements Message ----------------------------------------------

  MsgServerVersion* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgServerVersion& from);
  void MergeFrom(const MsgServerVersion& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_SERVER_VERSION];
  inline bool has_msgtype() const;
  inline void clear_msgtype();
  static const int kMsgTypeFieldNumber = 1;
  inline ::MsgPB::EMsgType msgtype() const;
  inline void set_msgtype(::MsgPB::EMsgType value);

  // optional uint32 versionId = 2;
  inline bool has_versionid() const;
  inline void clear_versionid();
  static const int kVersionIdFieldNumber = 2;
  inline ::google::protobuf::uint32 versionid() const;
  inline void set_versionid(::google::protobuf::uint32 value);

  // optional uint32 year = 3;
  inline bool has_year() const;
  inline void clear_year();
  static const int kYearFieldNumber = 3;
  inline ::google::protobuf::uint32 year() const;
  inline void set_year(::google::protobuf::uint32 value);

  // optional uint32 month = 4;
  inline bool has_month() const;
  inline void clear_month();
  static const int kMonthFieldNumber = 4;
  inline ::google::protobuf::uint32 month() const;
  inline void set_month(::google::protobuf::uint32 value);

  // optional uint32 day = 5;
  inline bool has_day() const;
  inline void clear_day();
  static const int kDayFieldNumber = 5;
  inline ::google::protobuf::uint32 day() const;
  inline void set_day(::google::protobuf::uint32 value);

  // optional uint32 hour = 6;
  inline bool has_hour() const;
  inline void clear_hour();
  static const int kHourFieldNumber = 6;
  inline ::google::protobuf::uint32 hour() const;
  inline void set_hour(::google::protobuf::uint32 value);

  // optional uint32 minute = 7;
  inline bool has_minute() const;
  inline void clear_minute();
  static const int kMinuteFieldNumber = 7;
  inline ::google::protobuf::uint32 minute() const;
  inline void set_minute(::google::protobuf::uint32 value);

  // optional uint32 second = 8;
  inline bool has_second() const;
  inline void clear_second();
  static const int kSecondFieldNumber = 8;
  inline ::google::protobuf::uint32 second() const;
  inline void set_second(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:MsgPB.MsgServerVersion)
 private:
  inline void set_has_msgtype();
  inline void clear_has_msgtype();
  inline void set_has_versionid();
  inline void clear_has_versionid();
  inline void set_has_year();
  inline void clear_has_year();
  inline void set_has_month();
  inline void clear_has_month();
  inline void set_has_day();
  inline void clear_has_day();
  inline void set_has_hour();
  inline void clear_has_hour();
  inline void set_has_minute();
  inline void clear_has_minute();
  inline void set_has_second();
  inline void clear_has_second();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int msgtype_;
  ::google::protobuf::uint32 versionid_;
  ::google::protobuf::uint32 year_;
  ::google::protobuf::uint32 month_;
  ::google::protobuf::uint32 day_;
  ::google::protobuf::uint32 hour_;
  ::google::protobuf::uint32 minute_;
  ::google::protobuf::uint32 second_;
  friend void  protobuf_AddDesc_MsgLogin_2eproto();
  friend void protobuf_AssignDesc_MsgLogin_2eproto();
  friend void protobuf_ShutdownFile_MsgLogin_2eproto();

  void InitAsDefaultInstance();
  static MsgServerVersion* default_instance_;
};
// -------------------------------------------------------------------

class MsgUserLoginOtherPlace : public ::google::protobuf::Message {
 public:
  MsgUserLoginOtherPlace();
  virtual ~MsgUserLoginOtherPlace();

  MsgUserLoginOtherPlace(const MsgUserLoginOtherPlace& from);

  inline MsgUserLoginOtherPlace& operator=(const MsgUserLoginOtherPlace& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgUserLoginOtherPlace& default_instance();

  void Swap(MsgUserLoginOtherPlace* other);

  // implements Message ----------------------------------------------

  MsgUserLoginOtherPlace* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgUserLoginOtherPlace& from);
  void MergeFrom(const MsgUserLoginOtherPlace& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_USER_LOGIN_OTHER_PLACE];
  inline bool has_msgtype() const;
  inline void clear_msgtype();
  static const int kMsgTypeFieldNumber = 1;
  inline ::MsgPB::EMsgType msgtype() const;
  inline void set_msgtype(::MsgPB::EMsgType value);

  // @@protoc_insertion_point(class_scope:MsgPB.MsgUserLoginOtherPlace)
 private:
  inline void set_has_msgtype();
  inline void clear_has_msgtype();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int msgtype_;
  friend void  protobuf_AddDesc_MsgLogin_2eproto();
  friend void protobuf_AssignDesc_MsgLogin_2eproto();
  friend void protobuf_ShutdownFile_MsgLogin_2eproto();

  void InitAsDefaultInstance();
  static MsgUserLoginOtherPlace* default_instance_;
};
// -------------------------------------------------------------------

class MsgClientReConnectToGS : public ::google::protobuf::Message {
 public:
  MsgClientReConnectToGS();
  virtual ~MsgClientReConnectToGS();

  MsgClientReConnectToGS(const MsgClientReConnectToGS& from);

  inline MsgClientReConnectToGS& operator=(const MsgClientReConnectToGS& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgClientReConnectToGS& default_instance();

  void Swap(MsgClientReConnectToGS* other);

  // implements Message ----------------------------------------------

  MsgClientReConnectToGS* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgClientReConnectToGS& from);
  void MergeFrom(const MsgClientReConnectToGS& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_CLIENT_RECONNECT_TO_GS];
  inline bool has_msgtype() const;
  inline void clear_msgtype();
  static const int kMsgTypeFieldNumber = 1;
  inline ::MsgPB::EMsgType msgtype() const;
  inline void set_msgtype(::MsgPB::EMsgType value);

  // optional int64 IggID = 2;
  inline bool has_iggid() const;
  inline void clear_iggid();
  static const int kIggIDFieldNumber = 2;
  inline ::google::protobuf::int64 iggid() const;
  inline void set_iggid(::google::protobuf::int64 value);

  // optional string checkText = 3;
  inline bool has_checktext() const;
  inline void clear_checktext();
  static const int kCheckTextFieldNumber = 3;
  inline const ::std::string& checktext() const;
  inline void set_checktext(const ::std::string& value);
  inline void set_checktext(const char* value);
  inline void set_checktext(const char* value, size_t size);
  inline ::std::string* mutable_checktext();
  inline ::std::string* release_checktext();
  inline void set_allocated_checktext(::std::string* checktext);

  // optional string msgMd5 = 4;
  inline bool has_msgmd5() const;
  inline void clear_msgmd5();
  static const int kMsgMd5FieldNumber = 4;
  inline const ::std::string& msgmd5() const;
  inline void set_msgmd5(const ::std::string& value);
  inline void set_msgmd5(const char* value);
  inline void set_msgmd5(const char* value, size_t size);
  inline ::std::string* mutable_msgmd5();
  inline ::std::string* release_msgmd5();
  inline void set_allocated_msgmd5(::std::string* msgmd5);

  // optional int64 msgLastRecvMsgIndex = 5;
  inline bool has_msglastrecvmsgindex() const;
  inline void clear_msglastrecvmsgindex();
  static const int kMsgLastRecvMsgIndexFieldNumber = 5;
  inline ::google::protobuf::int64 msglastrecvmsgindex() const;
  inline void set_msglastrecvmsgindex(::google::protobuf::int64 value);

  // optional bool CliendMode = 6 [default = false];
  inline bool has_cliendmode() const;
  inline void clear_cliendmode();
  static const int kCliendModeFieldNumber = 6;
  inline bool cliendmode() const;
  inline void set_cliendmode(bool value);

  // optional bool UploadData = 7 [default = false];
  inline bool has_uploaddata() const;
  inline void clear_uploaddata();
  static const int kUploadDataFieldNumber = 7;
  inline bool uploaddata() const;
  inline void set_uploaddata(bool value);

  // @@protoc_insertion_point(class_scope:MsgPB.MsgClientReConnectToGS)
 private:
  inline void set_has_msgtype();
  inline void clear_has_msgtype();
  inline void set_has_iggid();
  inline void clear_has_iggid();
  inline void set_has_checktext();
  inline void clear_has_checktext();
  inline void set_has_msgmd5();
  inline void clear_has_msgmd5();
  inline void set_has_msglastrecvmsgindex();
  inline void clear_has_msglastrecvmsgindex();
  inline void set_has_cliendmode();
  inline void clear_has_cliendmode();
  inline void set_has_uploaddata();
  inline void clear_has_uploaddata();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 iggid_;
  ::std::string* checktext_;
  ::std::string* msgmd5_;
  int msgtype_;
  bool cliendmode_;
  bool uploaddata_;
  ::google::protobuf::int64 msglastrecvmsgindex_;
  friend void  protobuf_AddDesc_MsgLogin_2eproto();
  friend void protobuf_AssignDesc_MsgLogin_2eproto();
  friend void protobuf_ShutdownFile_MsgLogin_2eproto();

  void InitAsDefaultInstance();
  static MsgClientReConnectToGS* default_instance_;
};
// -------------------------------------------------------------------

class MsgServerRecvLastPack : public ::google::protobuf::Message {
 public:
  MsgServerRecvLastPack();
  virtual ~MsgServerRecvLastPack();

  MsgServerRecvLastPack(const MsgServerRecvLastPack& from);

  inline MsgServerRecvLastPack& operator=(const MsgServerRecvLastPack& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgServerRecvLastPack& default_instance();

  void Swap(MsgServerRecvLastPack* other);

  // implements Message ----------------------------------------------

  MsgServerRecvLastPack* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgServerRecvLastPack& from);
  void MergeFrom(const MsgServerRecvLastPack& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_SERVER_RECV_LAST_PACK];
  inline bool has_msgtype() const;
  inline void clear_msgtype();
  static const int kMsgTypeFieldNumber = 1;
  inline ::MsgPB::EMsgType msgtype() const;
  inline void set_msgtype(::MsgPB::EMsgType value);

  // optional int32 ret = 2;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 2;
  inline ::google::protobuf::int32 ret() const;
  inline void set_ret(::google::protobuf::int32 value);

  // optional string msgMd5 = 3;
  inline bool has_msgmd5() const;
  inline void clear_msgmd5();
  static const int kMsgMd5FieldNumber = 3;
  inline const ::std::string& msgmd5() const;
  inline void set_msgmd5(const ::std::string& value);
  inline void set_msgmd5(const char* value);
  inline void set_msgmd5(const char* value, size_t size);
  inline ::std::string* mutable_msgmd5();
  inline ::std::string* release_msgmd5();
  inline void set_allocated_msgmd5(::std::string* msgmd5);

  // optional int64 msgLastRecvMsgIndex = 4;
  inline bool has_msglastrecvmsgindex() const;
  inline void clear_msglastrecvmsgindex();
  static const int kMsgLastRecvMsgIndexFieldNumber = 4;
  inline ::google::protobuf::int64 msglastrecvmsgindex() const;
  inline void set_msglastrecvmsgindex(::google::protobuf::int64 value);

  // optional int32 loginTime = 5;
  inline bool has_logintime() const;
  inline void clear_logintime();
  static const int kLoginTimeFieldNumber = 5;
  inline ::google::protobuf::int32 logintime() const;
  inline void set_logintime(::google::protobuf::int32 value);

  // optional int32 timeZone = 6;
  inline bool has_timezone() const;
  inline void clear_timezone();
  static const int kTimeZoneFieldNumber = 6;
  inline ::google::protobuf::int32 timezone() const;
  inline void set_timezone(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:MsgPB.MsgServerRecvLastPack)
 private:
  inline void set_has_msgtype();
  inline void clear_has_msgtype();
  inline void set_has_ret();
  inline void clear_has_ret();
  inline void set_has_msgmd5();
  inline void clear_has_msgmd5();
  inline void set_has_msglastrecvmsgindex();
  inline void clear_has_msglastrecvmsgindex();
  inline void set_has_logintime();
  inline void clear_has_logintime();
  inline void set_has_timezone();
  inline void clear_has_timezone();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int msgtype_;
  ::google::protobuf::int32 ret_;
  ::std::string* msgmd5_;
  ::google::protobuf::int64 msglastrecvmsgindex_;
  ::google::protobuf::int32 logintime_;
  ::google::protobuf::int32 timezone_;
  friend void  protobuf_AddDesc_MsgLogin_2eproto();
  friend void protobuf_AssignDesc_MsgLogin_2eproto();
  friend void protobuf_ShutdownFile_MsgLogin_2eproto();

  void InitAsDefaultInstance();
  static MsgServerRecvLastPack* default_instance_;
};
// -------------------------------------------------------------------

class MsgClientLoginIntra : public ::google::protobuf::Message {
 public:
  MsgClientLoginIntra();
  virtual ~MsgClientLoginIntra();

  MsgClientLoginIntra(const MsgClientLoginIntra& from);

  inline MsgClientLoginIntra& operator=(const MsgClientLoginIntra& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgClientLoginIntra& default_instance();

  void Swap(MsgClientLoginIntra* other);

  // implements Message ----------------------------------------------

  MsgClientLoginIntra* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgClientLoginIntra& from);
  void MergeFrom(const MsgClientLoginIntra& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_CLIENT_LOGIN_INTRA];
  inline bool has_msgtype() const;
  inline void clear_msgtype();
  static const int kMsgTypeFieldNumber = 1;
  inline ::MsgPB::EMsgType msgtype() const;
  inline void set_msgtype(::MsgPB::EMsgType value);

  // optional int64 IggID = 2;
  inline bool has_iggid() const;
  inline void clear_iggid();
  static const int kIggIDFieldNumber = 2;
  inline ::google::protobuf::int64 iggid() const;
  inline void set_iggid(::google::protobuf::int64 value);

  // optional int32 platId = 3;
  inline bool has_platid() const;
  inline void clear_platid();
  static const int kPlatIdFieldNumber = 3;
  inline ::google::protobuf::int32 platid() const;
  inline void set_platid(::google::protobuf::int32 value);

  // optional string platAccount = 4;
  inline bool has_plataccount() const;
  inline void clear_plataccount();
  static const int kPlatAccountFieldNumber = 4;
  inline const ::std::string& plataccount() const;
  inline void set_plataccount(const ::std::string& value);
  inline void set_plataccount(const char* value);
  inline void set_plataccount(const char* value, size_t size);
  inline ::std::string* mutable_plataccount();
  inline ::std::string* release_plataccount();
  inline void set_allocated_plataccount(::std::string* plataccount);

  // optional uint32 area_id = 5;
  inline bool has_area_id() const;
  inline void clear_area_id();
  static const int kAreaIdFieldNumber = 5;
  inline ::google::protobuf::uint32 area_id() const;
  inline void set_area_id(::google::protobuf::uint32 value);

  // optional string country_code = 6;
  inline bool has_country_code() const;
  inline void clear_country_code();
  static const int kCountryCodeFieldNumber = 6;
  inline const ::std::string& country_code() const;
  inline void set_country_code(const ::std::string& value);
  inline void set_country_code(const char* value);
  inline void set_country_code(const char* value, size_t size);
  inline ::std::string* mutable_country_code();
  inline ::std::string* release_country_code();
  inline void set_allocated_country_code(::std::string* country_code);

  // @@protoc_insertion_point(class_scope:MsgPB.MsgClientLoginIntra)
 private:
  inline void set_has_msgtype();
  inline void clear_has_msgtype();
  inline void set_has_iggid();
  inline void clear_has_iggid();
  inline void set_has_platid();
  inline void clear_has_platid();
  inline void set_has_plataccount();
  inline void clear_has_plataccount();
  inline void set_has_area_id();
  inline void clear_has_area_id();
  inline void set_has_country_code();
  inline void clear_has_country_code();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 iggid_;
  int msgtype_;
  ::google::protobuf::int32 platid_;
  ::std::string* plataccount_;
  ::std::string* country_code_;
  ::google::protobuf::uint32 area_id_;
  friend void  protobuf_AddDesc_MsgLogin_2eproto();
  friend void protobuf_AssignDesc_MsgLogin_2eproto();
  friend void protobuf_ShutdownFile_MsgLogin_2eproto();

  void InitAsDefaultInstance();
  static MsgClientLoginIntra* default_instance_;
};
// -------------------------------------------------------------------

class MsgLoginQueueUpStart : public ::google::protobuf::Message {
 public:
  MsgLoginQueueUpStart();
  virtual ~MsgLoginQueueUpStart();

  MsgLoginQueueUpStart(const MsgLoginQueueUpStart& from);

  inline MsgLoginQueueUpStart& operator=(const MsgLoginQueueUpStart& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgLoginQueueUpStart& default_instance();

  void Swap(MsgLoginQueueUpStart* other);

  // implements Message ----------------------------------------------

  MsgLoginQueueUpStart* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgLoginQueueUpStart& from);
  void MergeFrom(const MsgLoginQueueUpStart& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_LOGIN_QUEUE_UP_START];
  inline bool has_msgtype() const;
  inline void clear_msgtype();
  static const int kMsgTypeFieldNumber = 1;
  inline ::MsgPB::EMsgType msgtype() const;
  inline void set_msgtype(::MsgPB::EMsgType value);

  // optional int64 IggID = 2;
  inline bool has_iggid() const;
  inline void clear_iggid();
  static const int kIggIDFieldNumber = 2;
  inline ::google::protobuf::int64 iggid() const;
  inline void set_iggid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:MsgPB.MsgLoginQueueUpStart)
 private:
  inline void set_has_msgtype();
  inline void clear_has_msgtype();
  inline void set_has_iggid();
  inline void clear_has_iggid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 iggid_;
  int msgtype_;
  friend void  protobuf_AddDesc_MsgLogin_2eproto();
  friend void protobuf_AssignDesc_MsgLogin_2eproto();
  friend void protobuf_ShutdownFile_MsgLogin_2eproto();

  void InitAsDefaultInstance();
  static MsgLoginQueueUpStart* default_instance_;
};
// -------------------------------------------------------------------

class MsgLoginQueueUpInfoIntra_LoginQueueUpInfo : public ::google::protobuf::Message {
 public:
  MsgLoginQueueUpInfoIntra_LoginQueueUpInfo();
  virtual ~MsgLoginQueueUpInfoIntra_LoginQueueUpInfo();

  MsgLoginQueueUpInfoIntra_LoginQueueUpInfo(const MsgLoginQueueUpInfoIntra_LoginQueueUpInfo& from);

  inline MsgLoginQueueUpInfoIntra_LoginQueueUpInfo& operator=(const MsgLoginQueueUpInfoIntra_LoginQueueUpInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgLoginQueueUpInfoIntra_LoginQueueUpInfo& default_instance();

  void Swap(MsgLoginQueueUpInfoIntra_LoginQueueUpInfo* other);

  // implements Message ----------------------------------------------

  MsgLoginQueueUpInfoIntra_LoginQueueUpInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgLoginQueueUpInfoIntra_LoginQueueUpInfo& from);
  void MergeFrom(const MsgLoginQueueUpInfoIntra_LoginQueueUpInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 IggID = 1;
  inline bool has_iggid() const;
  inline void clear_iggid();
  static const int kIggIDFieldNumber = 1;
  inline ::google::protobuf::int64 iggid() const;
  inline void set_iggid(::google::protobuf::int64 value);

  // optional int32 curPos = 2;
  inline bool has_curpos() const;
  inline void clear_curpos();
  static const int kCurPosFieldNumber = 2;
  inline ::google::protobuf::int32 curpos() const;
  inline void set_curpos(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:MsgPB.MsgLoginQueueUpInfoIntra.LoginQueueUpInfo)
 private:
  inline void set_has_iggid();
  inline void clear_has_iggid();
  inline void set_has_curpos();
  inline void clear_has_curpos();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 iggid_;
  ::google::protobuf::int32 curpos_;
  friend void  protobuf_AddDesc_MsgLogin_2eproto();
  friend void protobuf_AssignDesc_MsgLogin_2eproto();
  friend void protobuf_ShutdownFile_MsgLogin_2eproto();

  void InitAsDefaultInstance();
  static MsgLoginQueueUpInfoIntra_LoginQueueUpInfo* default_instance_;
};
// -------------------------------------------------------------------

class MsgLoginQueueUpInfoIntra : public ::google::protobuf::Message {
 public:
  MsgLoginQueueUpInfoIntra();
  virtual ~MsgLoginQueueUpInfoIntra();

  MsgLoginQueueUpInfoIntra(const MsgLoginQueueUpInfoIntra& from);

  inline MsgLoginQueueUpInfoIntra& operator=(const MsgLoginQueueUpInfoIntra& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgLoginQueueUpInfoIntra& default_instance();

  void Swap(MsgLoginQueueUpInfoIntra* other);

  // implements Message ----------------------------------------------

  MsgLoginQueueUpInfoIntra* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgLoginQueueUpInfoIntra& from);
  void MergeFrom(const MsgLoginQueueUpInfoIntra& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef MsgLoginQueueUpInfoIntra_LoginQueueUpInfo LoginQueueUpInfo;

  // accessors -------------------------------------------------------

  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_LOGIN_QUEUE_UP_INFO_INTRA];
  inline bool has_msgtype() const;
  inline void clear_msgtype();
  static const int kMsgTypeFieldNumber = 1;
  inline ::MsgPB::EMsgType msgtype() const;
  inline void set_msgtype(::MsgPB::EMsgType value);

  // repeated .MsgPB.MsgLoginQueueUpInfoIntra.LoginQueueUpInfo LoginQueueInfo = 2;
  inline int loginqueueinfo_size() const;
  inline void clear_loginqueueinfo();
  static const int kLoginQueueInfoFieldNumber = 2;
  inline const ::MsgPB::MsgLoginQueueUpInfoIntra_LoginQueueUpInfo& loginqueueinfo(int index) const;
  inline ::MsgPB::MsgLoginQueueUpInfoIntra_LoginQueueUpInfo* mutable_loginqueueinfo(int index);
  inline ::MsgPB::MsgLoginQueueUpInfoIntra_LoginQueueUpInfo* add_loginqueueinfo();
  inline const ::google::protobuf::RepeatedPtrField< ::MsgPB::MsgLoginQueueUpInfoIntra_LoginQueueUpInfo >&
      loginqueueinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::MsgPB::MsgLoginQueueUpInfoIntra_LoginQueueUpInfo >*
      mutable_loginqueueinfo();

  // @@protoc_insertion_point(class_scope:MsgPB.MsgLoginQueueUpInfoIntra)
 private:
  inline void set_has_msgtype();
  inline void clear_has_msgtype();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::MsgPB::MsgLoginQueueUpInfoIntra_LoginQueueUpInfo > loginqueueinfo_;
  int msgtype_;
  friend void  protobuf_AddDesc_MsgLogin_2eproto();
  friend void protobuf_AssignDesc_MsgLogin_2eproto();
  friend void protobuf_ShutdownFile_MsgLogin_2eproto();

  void InitAsDefaultInstance();
  static MsgLoginQueueUpInfoIntra* default_instance_;
};
// -------------------------------------------------------------------

class MsgNotifyUserDisconnLoginSvr : public ::google::protobuf::Message {
 public:
  MsgNotifyUserDisconnLoginSvr();
  virtual ~MsgNotifyUserDisconnLoginSvr();

  MsgNotifyUserDisconnLoginSvr(const MsgNotifyUserDisconnLoginSvr& from);

  inline MsgNotifyUserDisconnLoginSvr& operator=(const MsgNotifyUserDisconnLoginSvr& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgNotifyUserDisconnLoginSvr& default_instance();

  void Swap(MsgNotifyUserDisconnLoginSvr* other);

  // implements Message ----------------------------------------------

  MsgNotifyUserDisconnLoginSvr* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgNotifyUserDisconnLoginSvr& from);
  void MergeFrom(const MsgNotifyUserDisconnLoginSvr& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_NOTIFY_USER_DISCONN_LOGIN_SVR];
  inline bool has_msgtype() const;
  inline void clear_msgtype();
  static const int kMsgTypeFieldNumber = 1;
  inline ::MsgPB::EMsgType msgtype() const;
  inline void set_msgtype(::MsgPB::EMsgType value);

  // repeated int64 IggID = 2;
  inline int iggid_size() const;
  inline void clear_iggid();
  static const int kIggIDFieldNumber = 2;
  inline ::google::protobuf::int64 iggid(int index) const;
  inline void set_iggid(int index, ::google::protobuf::int64 value);
  inline void add_iggid(::google::protobuf::int64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      iggid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_iggid();

  // @@protoc_insertion_point(class_scope:MsgPB.MsgNotifyUserDisconnLoginSvr)
 private:
  inline void set_has_msgtype();
  inline void clear_has_msgtype();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > iggid_;
  int msgtype_;
  friend void  protobuf_AddDesc_MsgLogin_2eproto();
  friend void protobuf_AssignDesc_MsgLogin_2eproto();
  friend void protobuf_ShutdownFile_MsgLogin_2eproto();

  void InitAsDefaultInstance();
  static MsgNotifyUserDisconnLoginSvr* default_instance_;
};
// -------------------------------------------------------------------

class MsgLoginServerValidate : public ::google::protobuf::Message {
 public:
  MsgLoginServerValidate();
  virtual ~MsgLoginServerValidate();

  MsgLoginServerValidate(const MsgLoginServerValidate& from);

  inline MsgLoginServerValidate& operator=(const MsgLoginServerValidate& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgLoginServerValidate& default_instance();

  void Swap(MsgLoginServerValidate* other);

  // implements Message ----------------------------------------------

  MsgLoginServerValidate* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgLoginServerValidate& from);
  void MergeFrom(const MsgLoginServerValidate& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_LOGIN_SERVER_VALIDATE];
  inline bool has_msgtype() const;
  inline void clear_msgtype();
  static const int kMsgTypeFieldNumber = 1;
  inline ::MsgPB::EMsgType msgtype() const;
  inline void set_msgtype(::MsgPB::EMsgType value);

  // optional int64 IggID = 2;
  inline bool has_iggid() const;
  inline void clear_iggid();
  static const int kIggIDFieldNumber = 2;
  inline ::google::protobuf::int64 iggid() const;
  inline void set_iggid(::google::protobuf::int64 value);

  // optional string checkText = 3;
  inline bool has_checktext() const;
  inline void clear_checktext();
  static const int kCheckTextFieldNumber = 3;
  inline const ::std::string& checktext() const;
  inline void set_checktext(const ::std::string& value);
  inline void set_checktext(const char* value);
  inline void set_checktext(const char* value, size_t size);
  inline ::std::string* mutable_checktext();
  inline ::std::string* release_checktext();
  inline void set_allocated_checktext(::std::string* checktext);

  // optional int32 platId = 4;
  inline bool has_platid() const;
  inline void clear_platid();
  static const int kPlatIdFieldNumber = 4;
  inline ::google::protobuf::int32 platid() const;
  inline void set_platid(::google::protobuf::int32 value);

  // optional string platAccount = 5;
  inline bool has_plataccount() const;
  inline void clear_plataccount();
  static const int kPlatAccountFieldNumber = 5;
  inline const ::std::string& plataccount() const;
  inline void set_plataccount(const ::std::string& value);
  inline void set_plataccount(const char* value);
  inline void set_plataccount(const char* value, size_t size);
  inline ::std::string* mutable_plataccount();
  inline ::std::string* release_plataccount();
  inline void set_allocated_plataccount(::std::string* plataccount);

  // optional string dbkey = 6;
  inline bool has_dbkey() const;
  inline void clear_dbkey();
  static const int kDbkeyFieldNumber = 6;
  inline const ::std::string& dbkey() const;
  inline void set_dbkey(const ::std::string& value);
  inline void set_dbkey(const char* value);
  inline void set_dbkey(const char* value, size_t size);
  inline ::std::string* mutable_dbkey();
  inline ::std::string* release_dbkey();
  inline void set_allocated_dbkey(::std::string* dbkey);

  // optional int32 gs_id = 7;
  inline bool has_gs_id() const;
  inline void clear_gs_id();
  static const int kGsIdFieldNumber = 7;
  inline ::google::protobuf::int32 gs_id() const;
  inline void set_gs_id(::google::protobuf::int32 value);

  // optional int32 original_area_id = 8;
  inline bool has_original_area_id() const;
  inline void clear_original_area_id();
  static const int kOriginalAreaIdFieldNumber = 8;
  inline ::google::protobuf::int32 original_area_id() const;
  inline void set_original_area_id(::google::protobuf::int32 value);

  // optional string country_code = 9;
  inline bool has_country_code() const;
  inline void clear_country_code();
  static const int kCountryCodeFieldNumber = 9;
  inline const ::std::string& country_code() const;
  inline void set_country_code(const ::std::string& value);
  inline void set_country_code(const char* value);
  inline void set_country_code(const char* value, size_t size);
  inline ::std::string* mutable_country_code();
  inline ::std::string* release_country_code();
  inline void set_allocated_country_code(::std::string* country_code);

  // @@protoc_insertion_point(class_scope:MsgPB.MsgLoginServerValidate)
 private:
  inline void set_has_msgtype();
  inline void clear_has_msgtype();
  inline void set_has_iggid();
  inline void clear_has_iggid();
  inline void set_has_checktext();
  inline void clear_has_checktext();
  inline void set_has_platid();
  inline void clear_has_platid();
  inline void set_has_plataccount();
  inline void clear_has_plataccount();
  inline void set_has_dbkey();
  inline void clear_has_dbkey();
  inline void set_has_gs_id();
  inline void clear_has_gs_id();
  inline void set_has_original_area_id();
  inline void clear_has_original_area_id();
  inline void set_has_country_code();
  inline void clear_has_country_code();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 iggid_;
  int msgtype_;
  ::google::protobuf::int32 platid_;
  ::std::string* checktext_;
  ::std::string* plataccount_;
  ::std::string* dbkey_;
  ::google::protobuf::int32 gs_id_;
  ::google::protobuf::int32 original_area_id_;
  ::std::string* country_code_;
  friend void  protobuf_AddDesc_MsgLogin_2eproto();
  friend void protobuf_AssignDesc_MsgLogin_2eproto();
  friend void protobuf_ShutdownFile_MsgLogin_2eproto();

  void InitAsDefaultInstance();
  static MsgLoginServerValidate* default_instance_;
};
// -------------------------------------------------------------------

class MsgPlayerLoginSuccess_MGRS_TO_OTHER : public ::google::protobuf::Message {
 public:
  MsgPlayerLoginSuccess_MGRS_TO_OTHER();
  virtual ~MsgPlayerLoginSuccess_MGRS_TO_OTHER();

  MsgPlayerLoginSuccess_MGRS_TO_OTHER(const MsgPlayerLoginSuccess_MGRS_TO_OTHER& from);

  inline MsgPlayerLoginSuccess_MGRS_TO_OTHER& operator=(const MsgPlayerLoginSuccess_MGRS_TO_OTHER& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgPlayerLoginSuccess_MGRS_TO_OTHER& default_instance();

  void Swap(MsgPlayerLoginSuccess_MGRS_TO_OTHER* other);

  // implements Message ----------------------------------------------

  MsgPlayerLoginSuccess_MGRS_TO_OTHER* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgPlayerLoginSuccess_MGRS_TO_OTHER& from);
  void MergeFrom(const MsgPlayerLoginSuccess_MGRS_TO_OTHER& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_PLAYER_LOGIN_SUCCESS_MGRS_TO_OTHER];
  inline bool has_msgtype() const;
  inline void clear_msgtype();
  static const int kMsgTypeFieldNumber = 1;
  inline ::MsgPB::EMsgType msgtype() const;
  inline void set_msgtype(::MsgPB::EMsgType value);

  // optional int64 iggid = 2;
  inline bool has_iggid() const;
  inline void clear_iggid();
  static const int kIggidFieldNumber = 2;
  inline ::google::protobuf::int64 iggid() const;
  inline void set_iggid(::google::protobuf::int64 value);

  // optional string dbkey = 3;
  inline bool has_dbkey() const;
  inline void clear_dbkey();
  static const int kDbkeyFieldNumber = 3;
  inline const ::std::string& dbkey() const;
  inline void set_dbkey(const ::std::string& value);
  inline void set_dbkey(const char* value);
  inline void set_dbkey(const char* value, size_t size);
  inline ::std::string* mutable_dbkey();
  inline ::std::string* release_dbkey();
  inline void set_allocated_dbkey(::std::string* dbkey);

  // optional string nickname = 4;
  inline bool has_nickname() const;
  inline void clear_nickname();
  static const int kNicknameFieldNumber = 4;
  inline const ::std::string& nickname() const;
  inline void set_nickname(const ::std::string& value);
  inline void set_nickname(const char* value);
  inline void set_nickname(const char* value, size_t size);
  inline ::std::string* mutable_nickname();
  inline ::std::string* release_nickname();
  inline void set_allocated_nickname(::std::string* nickname);

  // @@protoc_insertion_point(class_scope:MsgPB.MsgPlayerLoginSuccess_MGRS_TO_OTHER)
 private:
  inline void set_has_msgtype();
  inline void clear_has_msgtype();
  inline void set_has_iggid();
  inline void clear_has_iggid();
  inline void set_has_dbkey();
  inline void clear_has_dbkey();
  inline void set_has_nickname();
  inline void clear_has_nickname();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 iggid_;
  ::std::string* dbkey_;
  ::std::string* nickname_;
  int msgtype_;
  friend void  protobuf_AddDesc_MsgLogin_2eproto();
  friend void protobuf_AssignDesc_MsgLogin_2eproto();
  friend void protobuf_ShutdownFile_MsgLogin_2eproto();

  void InitAsDefaultInstance();
  static MsgPlayerLoginSuccess_MGRS_TO_OTHER* default_instance_;
};
// -------------------------------------------------------------------

class MsgDeleteAccountC2S : public ::google::protobuf::Message {
 public:
  MsgDeleteAccountC2S();
  virtual ~MsgDeleteAccountC2S();

  MsgDeleteAccountC2S(const MsgDeleteAccountC2S& from);

  inline MsgDeleteAccountC2S& operator=(const MsgDeleteAccountC2S& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgDeleteAccountC2S& default_instance();

  void Swap(MsgDeleteAccountC2S* other);

  // implements Message ----------------------------------------------

  MsgDeleteAccountC2S* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgDeleteAccountC2S& from);
  void MergeFrom(const MsgDeleteAccountC2S& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_DELETE_ACCOUNT_C2S];
  inline bool has_msgtype() const;
  inline void clear_msgtype();
  static const int kMsgTypeFieldNumber = 1;
  inline ::MsgPB::EMsgType msgtype() const;
  inline void set_msgtype(::MsgPB::EMsgType value);

  // optional int64 iggid = 2;
  inline bool has_iggid() const;
  inline void clear_iggid();
  static const int kIggidFieldNumber = 2;
  inline ::google::protobuf::int64 iggid() const;
  inline void set_iggid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:MsgPB.MsgDeleteAccountC2S)
 private:
  inline void set_has_msgtype();
  inline void clear_has_msgtype();
  inline void set_has_iggid();
  inline void clear_has_iggid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 iggid_;
  int msgtype_;
  friend void  protobuf_AddDesc_MsgLogin_2eproto();
  friend void protobuf_AssignDesc_MsgLogin_2eproto();
  friend void protobuf_ShutdownFile_MsgLogin_2eproto();

  void InitAsDefaultInstance();
  static MsgDeleteAccountC2S* default_instance_;
};
// -------------------------------------------------------------------

class MsgDeleteAccountS2C : public ::google::protobuf::Message {
 public:
  MsgDeleteAccountS2C();
  virtual ~MsgDeleteAccountS2C();

  MsgDeleteAccountS2C(const MsgDeleteAccountS2C& from);

  inline MsgDeleteAccountS2C& operator=(const MsgDeleteAccountS2C& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgDeleteAccountS2C& default_instance();

  void Swap(MsgDeleteAccountS2C* other);

  // implements Message ----------------------------------------------

  MsgDeleteAccountS2C* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgDeleteAccountS2C& from);
  void MergeFrom(const MsgDeleteAccountS2C& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_DELETE_ACCOUNT_S2C];
  inline bool has_msgtype() const;
  inline void clear_msgtype();
  static const int kMsgTypeFieldNumber = 1;
  inline ::MsgPB::EMsgType msgtype() const;
  inline void set_msgtype(::MsgPB::EMsgType value);

  // optional int64 iggid = 2;
  inline bool has_iggid() const;
  inline void clear_iggid();
  static const int kIggidFieldNumber = 2;
  inline ::google::protobuf::int64 iggid() const;
  inline void set_iggid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:MsgPB.MsgDeleteAccountS2C)
 private:
  inline void set_has_msgtype();
  inline void clear_has_msgtype();
  inline void set_has_iggid();
  inline void clear_has_iggid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 iggid_;
  int msgtype_;
  friend void  protobuf_AddDesc_MsgLogin_2eproto();
  friend void protobuf_AssignDesc_MsgLogin_2eproto();
  friend void protobuf_ShutdownFile_MsgLogin_2eproto();

  void InitAsDefaultInstance();
  static MsgDeleteAccountS2C* default_instance_;
};
// ===================================================================


// ===================================================================

// MsgPlatformAccountCheckC2LS

// optional .MsgPB.EMsgType msgType = 1 [default = _MSG_CHECK_PLATFORM_ACCOUNTC_C2LS];
inline bool MsgPlatformAccountCheckC2LS::has_msgtype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgPlatformAccountCheckC2LS::set_has_msgtype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgPlatformAccountCheckC2LS::clear_has_msgtype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgPlatformAccountCheckC2LS::clear_msgtype() {
  msgtype_ = 1032;
  clear_has_msgtype();
}
inline ::MsgPB::EMsgType MsgPlatformAccountCheckC2LS::msgtype() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgPlatformAccountCheckC2LS.msgType)
  return static_cast< ::MsgPB::EMsgType >(msgtype_);
}
inline void MsgPlatformAccountCheckC2LS::set_msgtype(::MsgPB::EMsgType value) {
  assert(::MsgPB::EMsgType_IsValid(value));
  set_has_msgtype();
  msgtype_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgPlatformAccountCheckC2LS.msgType)
}

// optional int32 platform = 2;
inline bool MsgPlatformAccountCheckC2LS::has_platform() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MsgPlatformAccountCheckC2LS::set_has_platform() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MsgPlatformAccountCheckC2LS::clear_has_platform() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MsgPlatformAccountCheckC2LS::clear_platform() {
  platform_ = 0;
  clear_has_platform();
}
inline ::google::protobuf::int32 MsgPlatformAccountCheckC2LS::platform() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgPlatformAccountCheckC2LS.platform)
  return platform_;
}
inline void MsgPlatformAccountCheckC2LS::set_platform(::google::protobuf::int32 value) {
  set_has_platform();
  platform_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgPlatformAccountCheckC2LS.platform)
}

// optional string account = 3;
inline bool MsgPlatformAccountCheckC2LS::has_account() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MsgPlatformAccountCheckC2LS::set_has_account() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MsgPlatformAccountCheckC2LS::clear_has_account() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MsgPlatformAccountCheckC2LS::clear_account() {
  if (account_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    account_->clear();
  }
  clear_has_account();
}
inline const ::std::string& MsgPlatformAccountCheckC2LS::account() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgPlatformAccountCheckC2LS.account)
  return *account_;
}
inline void MsgPlatformAccountCheckC2LS::set_account(const ::std::string& value) {
  set_has_account();
  if (account_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    account_ = new ::std::string;
  }
  account_->assign(value);
  // @@protoc_insertion_point(field_set:MsgPB.MsgPlatformAccountCheckC2LS.account)
}
inline void MsgPlatformAccountCheckC2LS::set_account(const char* value) {
  set_has_account();
  if (account_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    account_ = new ::std::string;
  }
  account_->assign(value);
  // @@protoc_insertion_point(field_set_char:MsgPB.MsgPlatformAccountCheckC2LS.account)
}
inline void MsgPlatformAccountCheckC2LS::set_account(const char* value, size_t size) {
  set_has_account();
  if (account_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    account_ = new ::std::string;
  }
  account_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:MsgPB.MsgPlatformAccountCheckC2LS.account)
}
inline ::std::string* MsgPlatformAccountCheckC2LS::mutable_account() {
  set_has_account();
  if (account_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    account_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:MsgPB.MsgPlatformAccountCheckC2LS.account)
  return account_;
}
inline ::std::string* MsgPlatformAccountCheckC2LS::release_account() {
  clear_has_account();
  if (account_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = account_;
    account_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void MsgPlatformAccountCheckC2LS::set_allocated_account(::std::string* account) {
  if (account_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete account_;
  }
  if (account) {
    set_has_account();
    account_ = account;
  } else {
    clear_has_account();
    account_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:MsgPB.MsgPlatformAccountCheckC2LS.account)
}

// optional int32 client_ver = 4;
inline bool MsgPlatformAccountCheckC2LS::has_client_ver() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MsgPlatformAccountCheckC2LS::set_has_client_ver() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MsgPlatformAccountCheckC2LS::clear_has_client_ver() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MsgPlatformAccountCheckC2LS::clear_client_ver() {
  client_ver_ = 0;
  clear_has_client_ver();
}
inline ::google::protobuf::int32 MsgPlatformAccountCheckC2LS::client_ver() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgPlatformAccountCheckC2LS.client_ver)
  return client_ver_;
}
inline void MsgPlatformAccountCheckC2LS::set_client_ver(::google::protobuf::int32 value) {
  set_has_client_ver();
  client_ver_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgPlatformAccountCheckC2LS.client_ver)
}

// optional string pwd = 5;
inline bool MsgPlatformAccountCheckC2LS::has_pwd() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void MsgPlatformAccountCheckC2LS::set_has_pwd() {
  _has_bits_[0] |= 0x00000010u;
}
inline void MsgPlatformAccountCheckC2LS::clear_has_pwd() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void MsgPlatformAccountCheckC2LS::clear_pwd() {
  if (pwd_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    pwd_->clear();
  }
  clear_has_pwd();
}
inline const ::std::string& MsgPlatformAccountCheckC2LS::pwd() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgPlatformAccountCheckC2LS.pwd)
  return *pwd_;
}
inline void MsgPlatformAccountCheckC2LS::set_pwd(const ::std::string& value) {
  set_has_pwd();
  if (pwd_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    pwd_ = new ::std::string;
  }
  pwd_->assign(value);
  // @@protoc_insertion_point(field_set:MsgPB.MsgPlatformAccountCheckC2LS.pwd)
}
inline void MsgPlatformAccountCheckC2LS::set_pwd(const char* value) {
  set_has_pwd();
  if (pwd_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    pwd_ = new ::std::string;
  }
  pwd_->assign(value);
  // @@protoc_insertion_point(field_set_char:MsgPB.MsgPlatformAccountCheckC2LS.pwd)
}
inline void MsgPlatformAccountCheckC2LS::set_pwd(const char* value, size_t size) {
  set_has_pwd();
  if (pwd_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    pwd_ = new ::std::string;
  }
  pwd_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:MsgPB.MsgPlatformAccountCheckC2LS.pwd)
}
inline ::std::string* MsgPlatformAccountCheckC2LS::mutable_pwd() {
  set_has_pwd();
  if (pwd_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    pwd_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:MsgPB.MsgPlatformAccountCheckC2LS.pwd)
  return pwd_;
}
inline ::std::string* MsgPlatformAccountCheckC2LS::release_pwd() {
  clear_has_pwd();
  if (pwd_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = pwd_;
    pwd_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void MsgPlatformAccountCheckC2LS::set_allocated_pwd(::std::string* pwd) {
  if (pwd_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete pwd_;
  }
  if (pwd) {
    set_has_pwd();
    pwd_ = pwd;
  } else {
    clear_has_pwd();
    pwd_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:MsgPB.MsgPlatformAccountCheckC2LS.pwd)
}

// -------------------------------------------------------------------

// MsgPlatformAccountCheckLS2C

// optional .MsgPB.EMsgType msgType = 1 [default = _MSG_CHECK_PLATFORM_ACCOUNTC_LS2C];
inline bool MsgPlatformAccountCheckLS2C::has_msgtype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgPlatformAccountCheckLS2C::set_has_msgtype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgPlatformAccountCheckLS2C::clear_has_msgtype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgPlatformAccountCheckLS2C::clear_msgtype() {
  msgtype_ = 1033;
  clear_has_msgtype();
}
inline ::MsgPB::EMsgType MsgPlatformAccountCheckLS2C::msgtype() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgPlatformAccountCheckLS2C.msgType)
  return static_cast< ::MsgPB::EMsgType >(msgtype_);
}
inline void MsgPlatformAccountCheckLS2C::set_msgtype(::MsgPB::EMsgType value) {
  assert(::MsgPB::EMsgType_IsValid(value));
  set_has_msgtype();
  msgtype_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgPlatformAccountCheckLS2C.msgType)
}

// optional int64 iggid = 2;
inline bool MsgPlatformAccountCheckLS2C::has_iggid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MsgPlatformAccountCheckLS2C::set_has_iggid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MsgPlatformAccountCheckLS2C::clear_has_iggid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MsgPlatformAccountCheckLS2C::clear_iggid() {
  iggid_ = GOOGLE_LONGLONG(0);
  clear_has_iggid();
}
inline ::google::protobuf::int64 MsgPlatformAccountCheckLS2C::iggid() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgPlatformAccountCheckLS2C.iggid)
  return iggid_;
}
inline void MsgPlatformAccountCheckLS2C::set_iggid(::google::protobuf::int64 value) {
  set_has_iggid();
  iggid_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgPlatformAccountCheckLS2C.iggid)
}

// optional int32 platform = 3;
inline bool MsgPlatformAccountCheckLS2C::has_platform() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MsgPlatformAccountCheckLS2C::set_has_platform() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MsgPlatformAccountCheckLS2C::clear_has_platform() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MsgPlatformAccountCheckLS2C::clear_platform() {
  platform_ = 0;
  clear_has_platform();
}
inline ::google::protobuf::int32 MsgPlatformAccountCheckLS2C::platform() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgPlatformAccountCheckLS2C.platform)
  return platform_;
}
inline void MsgPlatformAccountCheckLS2C::set_platform(::google::protobuf::int32 value) {
  set_has_platform();
  platform_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgPlatformAccountCheckLS2C.platform)
}

// optional string account = 4;
inline bool MsgPlatformAccountCheckLS2C::has_account() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MsgPlatformAccountCheckLS2C::set_has_account() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MsgPlatformAccountCheckLS2C::clear_has_account() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MsgPlatformAccountCheckLS2C::clear_account() {
  if (account_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    account_->clear();
  }
  clear_has_account();
}
inline const ::std::string& MsgPlatformAccountCheckLS2C::account() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgPlatformAccountCheckLS2C.account)
  return *account_;
}
inline void MsgPlatformAccountCheckLS2C::set_account(const ::std::string& value) {
  set_has_account();
  if (account_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    account_ = new ::std::string;
  }
  account_->assign(value);
  // @@protoc_insertion_point(field_set:MsgPB.MsgPlatformAccountCheckLS2C.account)
}
inline void MsgPlatformAccountCheckLS2C::set_account(const char* value) {
  set_has_account();
  if (account_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    account_ = new ::std::string;
  }
  account_->assign(value);
  // @@protoc_insertion_point(field_set_char:MsgPB.MsgPlatformAccountCheckLS2C.account)
}
inline void MsgPlatformAccountCheckLS2C::set_account(const char* value, size_t size) {
  set_has_account();
  if (account_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    account_ = new ::std::string;
  }
  account_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:MsgPB.MsgPlatformAccountCheckLS2C.account)
}
inline ::std::string* MsgPlatformAccountCheckLS2C::mutable_account() {
  set_has_account();
  if (account_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    account_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:MsgPB.MsgPlatformAccountCheckLS2C.account)
  return account_;
}
inline ::std::string* MsgPlatformAccountCheckLS2C::release_account() {
  clear_has_account();
  if (account_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = account_;
    account_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void MsgPlatformAccountCheckLS2C::set_allocated_account(::std::string* account) {
  if (account_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete account_;
  }
  if (account) {
    set_has_account();
    account_ = account;
  } else {
    clear_has_account();
    account_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:MsgPB.MsgPlatformAccountCheckLS2C.account)
}

// optional int32 nVideo = 5;
inline bool MsgPlatformAccountCheckLS2C::has_nvideo() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void MsgPlatformAccountCheckLS2C::set_has_nvideo() {
  _has_bits_[0] |= 0x00000010u;
}
inline void MsgPlatformAccountCheckLS2C::clear_has_nvideo() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void MsgPlatformAccountCheckLS2C::clear_nvideo() {
  nvideo_ = 0;
  clear_has_nvideo();
}
inline ::google::protobuf::int32 MsgPlatformAccountCheckLS2C::nvideo() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgPlatformAccountCheckLS2C.nVideo)
  return nvideo_;
}
inline void MsgPlatformAccountCheckLS2C::set_nvideo(::google::protobuf::int32 value) {
  set_has_nvideo();
  nvideo_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgPlatformAccountCheckLS2C.nVideo)
}

// -------------------------------------------------------------------

// MsgRegisterAccountC2LS

// optional .MsgPB.EMsgType msgType = 1 [default = _MSG_REGISTER_ACCOUNTC_C2LS];
inline bool MsgRegisterAccountC2LS::has_msgtype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgRegisterAccountC2LS::set_has_msgtype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgRegisterAccountC2LS::clear_has_msgtype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgRegisterAccountC2LS::clear_msgtype() {
  msgtype_ = 1064;
  clear_has_msgtype();
}
inline ::MsgPB::EMsgType MsgRegisterAccountC2LS::msgtype() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgRegisterAccountC2LS.msgType)
  return static_cast< ::MsgPB::EMsgType >(msgtype_);
}
inline void MsgRegisterAccountC2LS::set_msgtype(::MsgPB::EMsgType value) {
  assert(::MsgPB::EMsgType_IsValid(value));
  set_has_msgtype();
  msgtype_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgRegisterAccountC2LS.msgType)
}

// optional int32 platform = 2;
inline bool MsgRegisterAccountC2LS::has_platform() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MsgRegisterAccountC2LS::set_has_platform() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MsgRegisterAccountC2LS::clear_has_platform() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MsgRegisterAccountC2LS::clear_platform() {
  platform_ = 0;
  clear_has_platform();
}
inline ::google::protobuf::int32 MsgRegisterAccountC2LS::platform() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgRegisterAccountC2LS.platform)
  return platform_;
}
inline void MsgRegisterAccountC2LS::set_platform(::google::protobuf::int32 value) {
  set_has_platform();
  platform_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgRegisterAccountC2LS.platform)
}

// optional string account = 3;
inline bool MsgRegisterAccountC2LS::has_account() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MsgRegisterAccountC2LS::set_has_account() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MsgRegisterAccountC2LS::clear_has_account() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MsgRegisterAccountC2LS::clear_account() {
  if (account_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    account_->clear();
  }
  clear_has_account();
}
inline const ::std::string& MsgRegisterAccountC2LS::account() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgRegisterAccountC2LS.account)
  return *account_;
}
inline void MsgRegisterAccountC2LS::set_account(const ::std::string& value) {
  set_has_account();
  if (account_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    account_ = new ::std::string;
  }
  account_->assign(value);
  // @@protoc_insertion_point(field_set:MsgPB.MsgRegisterAccountC2LS.account)
}
inline void MsgRegisterAccountC2LS::set_account(const char* value) {
  set_has_account();
  if (account_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    account_ = new ::std::string;
  }
  account_->assign(value);
  // @@protoc_insertion_point(field_set_char:MsgPB.MsgRegisterAccountC2LS.account)
}
inline void MsgRegisterAccountC2LS::set_account(const char* value, size_t size) {
  set_has_account();
  if (account_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    account_ = new ::std::string;
  }
  account_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:MsgPB.MsgRegisterAccountC2LS.account)
}
inline ::std::string* MsgRegisterAccountC2LS::mutable_account() {
  set_has_account();
  if (account_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    account_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:MsgPB.MsgRegisterAccountC2LS.account)
  return account_;
}
inline ::std::string* MsgRegisterAccountC2LS::release_account() {
  clear_has_account();
  if (account_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = account_;
    account_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void MsgRegisterAccountC2LS::set_allocated_account(::std::string* account) {
  if (account_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete account_;
  }
  if (account) {
    set_has_account();
    account_ = account;
  } else {
    clear_has_account();
    account_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:MsgPB.MsgRegisterAccountC2LS.account)
}

// optional string pwd = 4;
inline bool MsgRegisterAccountC2LS::has_pwd() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MsgRegisterAccountC2LS::set_has_pwd() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MsgRegisterAccountC2LS::clear_has_pwd() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MsgRegisterAccountC2LS::clear_pwd() {
  if (pwd_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    pwd_->clear();
  }
  clear_has_pwd();
}
inline const ::std::string& MsgRegisterAccountC2LS::pwd() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgRegisterAccountC2LS.pwd)
  return *pwd_;
}
inline void MsgRegisterAccountC2LS::set_pwd(const ::std::string& value) {
  set_has_pwd();
  if (pwd_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    pwd_ = new ::std::string;
  }
  pwd_->assign(value);
  // @@protoc_insertion_point(field_set:MsgPB.MsgRegisterAccountC2LS.pwd)
}
inline void MsgRegisterAccountC2LS::set_pwd(const char* value) {
  set_has_pwd();
  if (pwd_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    pwd_ = new ::std::string;
  }
  pwd_->assign(value);
  // @@protoc_insertion_point(field_set_char:MsgPB.MsgRegisterAccountC2LS.pwd)
}
inline void MsgRegisterAccountC2LS::set_pwd(const char* value, size_t size) {
  set_has_pwd();
  if (pwd_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    pwd_ = new ::std::string;
  }
  pwd_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:MsgPB.MsgRegisterAccountC2LS.pwd)
}
inline ::std::string* MsgRegisterAccountC2LS::mutable_pwd() {
  set_has_pwd();
  if (pwd_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    pwd_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:MsgPB.MsgRegisterAccountC2LS.pwd)
  return pwd_;
}
inline ::std::string* MsgRegisterAccountC2LS::release_pwd() {
  clear_has_pwd();
  if (pwd_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = pwd_;
    pwd_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void MsgRegisterAccountC2LS::set_allocated_pwd(::std::string* pwd) {
  if (pwd_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete pwd_;
  }
  if (pwd) {
    set_has_pwd();
    pwd_ = pwd;
  } else {
    clear_has_pwd();
    pwd_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:MsgPB.MsgRegisterAccountC2LS.pwd)
}

// -------------------------------------------------------------------

// MsgRegisterAccountLS2C

// optional .MsgPB.EMsgType msgType = 1 [default = _MSG_REGISTER_ACCOUNTC_LS2C];
inline bool MsgRegisterAccountLS2C::has_msgtype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgRegisterAccountLS2C::set_has_msgtype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgRegisterAccountLS2C::clear_has_msgtype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgRegisterAccountLS2C::clear_msgtype() {
  msgtype_ = 1065;
  clear_has_msgtype();
}
inline ::MsgPB::EMsgType MsgRegisterAccountLS2C::msgtype() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgRegisterAccountLS2C.msgType)
  return static_cast< ::MsgPB::EMsgType >(msgtype_);
}
inline void MsgRegisterAccountLS2C::set_msgtype(::MsgPB::EMsgType value) {
  assert(::MsgPB::EMsgType_IsValid(value));
  set_has_msgtype();
  msgtype_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgRegisterAccountLS2C.msgType)
}

// optional int32 platform = 2;
inline bool MsgRegisterAccountLS2C::has_platform() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MsgRegisterAccountLS2C::set_has_platform() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MsgRegisterAccountLS2C::clear_has_platform() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MsgRegisterAccountLS2C::clear_platform() {
  platform_ = 0;
  clear_has_platform();
}
inline ::google::protobuf::int32 MsgRegisterAccountLS2C::platform() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgRegisterAccountLS2C.platform)
  return platform_;
}
inline void MsgRegisterAccountLS2C::set_platform(::google::protobuf::int32 value) {
  set_has_platform();
  platform_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgRegisterAccountLS2C.platform)
}

// optional string account = 3;
inline bool MsgRegisterAccountLS2C::has_account() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MsgRegisterAccountLS2C::set_has_account() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MsgRegisterAccountLS2C::clear_has_account() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MsgRegisterAccountLS2C::clear_account() {
  if (account_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    account_->clear();
  }
  clear_has_account();
}
inline const ::std::string& MsgRegisterAccountLS2C::account() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgRegisterAccountLS2C.account)
  return *account_;
}
inline void MsgRegisterAccountLS2C::set_account(const ::std::string& value) {
  set_has_account();
  if (account_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    account_ = new ::std::string;
  }
  account_->assign(value);
  // @@protoc_insertion_point(field_set:MsgPB.MsgRegisterAccountLS2C.account)
}
inline void MsgRegisterAccountLS2C::set_account(const char* value) {
  set_has_account();
  if (account_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    account_ = new ::std::string;
  }
  account_->assign(value);
  // @@protoc_insertion_point(field_set_char:MsgPB.MsgRegisterAccountLS2C.account)
}
inline void MsgRegisterAccountLS2C::set_account(const char* value, size_t size) {
  set_has_account();
  if (account_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    account_ = new ::std::string;
  }
  account_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:MsgPB.MsgRegisterAccountLS2C.account)
}
inline ::std::string* MsgRegisterAccountLS2C::mutable_account() {
  set_has_account();
  if (account_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    account_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:MsgPB.MsgRegisterAccountLS2C.account)
  return account_;
}
inline ::std::string* MsgRegisterAccountLS2C::release_account() {
  clear_has_account();
  if (account_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = account_;
    account_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void MsgRegisterAccountLS2C::set_allocated_account(::std::string* account) {
  if (account_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete account_;
  }
  if (account) {
    set_has_account();
    account_ = account;
  } else {
    clear_has_account();
    account_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:MsgPB.MsgRegisterAccountLS2C.account)
}

// -------------------------------------------------------------------

// MsgClientLoginToLS

// optional .MsgPB.EMsgType msgType = 1 [default = _MSG_CLIENT_LOGIN_TO_LS];
inline bool MsgClientLoginToLS::has_msgtype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgClientLoginToLS::set_has_msgtype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgClientLoginToLS::clear_has_msgtype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgClientLoginToLS::clear_msgtype() {
  msgtype_ = 1000;
  clear_has_msgtype();
}
inline ::MsgPB::EMsgType MsgClientLoginToLS::msgtype() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgClientLoginToLS.msgType)
  return static_cast< ::MsgPB::EMsgType >(msgtype_);
}
inline void MsgClientLoginToLS::set_msgtype(::MsgPB::EMsgType value) {
  assert(::MsgPB::EMsgType_IsValid(value));
  set_has_msgtype();
  msgtype_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgClientLoginToLS.msgType)
}

// optional int64 IggID = 2;
inline bool MsgClientLoginToLS::has_iggid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MsgClientLoginToLS::set_has_iggid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MsgClientLoginToLS::clear_has_iggid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MsgClientLoginToLS::clear_iggid() {
  iggid_ = GOOGLE_LONGLONG(0);
  clear_has_iggid();
}
inline ::google::protobuf::int64 MsgClientLoginToLS::iggid() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgClientLoginToLS.IggID)
  return iggid_;
}
inline void MsgClientLoginToLS::set_iggid(::google::protobuf::int64 value) {
  set_has_iggid();
  iggid_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgClientLoginToLS.IggID)
}

// optional string IggKey = 3;
inline bool MsgClientLoginToLS::has_iggkey() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MsgClientLoginToLS::set_has_iggkey() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MsgClientLoginToLS::clear_has_iggkey() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MsgClientLoginToLS::clear_iggkey() {
  if (iggkey_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    iggkey_->clear();
  }
  clear_has_iggkey();
}
inline const ::std::string& MsgClientLoginToLS::iggkey() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgClientLoginToLS.IggKey)
  return *iggkey_;
}
inline void MsgClientLoginToLS::set_iggkey(const ::std::string& value) {
  set_has_iggkey();
  if (iggkey_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    iggkey_ = new ::std::string;
  }
  iggkey_->assign(value);
  // @@protoc_insertion_point(field_set:MsgPB.MsgClientLoginToLS.IggKey)
}
inline void MsgClientLoginToLS::set_iggkey(const char* value) {
  set_has_iggkey();
  if (iggkey_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    iggkey_ = new ::std::string;
  }
  iggkey_->assign(value);
  // @@protoc_insertion_point(field_set_char:MsgPB.MsgClientLoginToLS.IggKey)
}
inline void MsgClientLoginToLS::set_iggkey(const char* value, size_t size) {
  set_has_iggkey();
  if (iggkey_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    iggkey_ = new ::std::string;
  }
  iggkey_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:MsgPB.MsgClientLoginToLS.IggKey)
}
inline ::std::string* MsgClientLoginToLS::mutable_iggkey() {
  set_has_iggkey();
  if (iggkey_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    iggkey_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:MsgPB.MsgClientLoginToLS.IggKey)
  return iggkey_;
}
inline ::std::string* MsgClientLoginToLS::release_iggkey() {
  clear_has_iggkey();
  if (iggkey_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = iggkey_;
    iggkey_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void MsgClientLoginToLS::set_allocated_iggkey(::std::string* iggkey) {
  if (iggkey_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete iggkey_;
  }
  if (iggkey) {
    set_has_iggkey();
    iggkey_ = iggkey;
  } else {
    clear_has_iggkey();
    iggkey_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:MsgPB.MsgClientLoginToLS.IggKey)
}

// optional string SessionKey = 4;
inline bool MsgClientLoginToLS::has_sessionkey() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MsgClientLoginToLS::set_has_sessionkey() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MsgClientLoginToLS::clear_has_sessionkey() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MsgClientLoginToLS::clear_sessionkey() {
  if (sessionkey_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sessionkey_->clear();
  }
  clear_has_sessionkey();
}
inline const ::std::string& MsgClientLoginToLS::sessionkey() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgClientLoginToLS.SessionKey)
  return *sessionkey_;
}
inline void MsgClientLoginToLS::set_sessionkey(const ::std::string& value) {
  set_has_sessionkey();
  if (sessionkey_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sessionkey_ = new ::std::string;
  }
  sessionkey_->assign(value);
  // @@protoc_insertion_point(field_set:MsgPB.MsgClientLoginToLS.SessionKey)
}
inline void MsgClientLoginToLS::set_sessionkey(const char* value) {
  set_has_sessionkey();
  if (sessionkey_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sessionkey_ = new ::std::string;
  }
  sessionkey_->assign(value);
  // @@protoc_insertion_point(field_set_char:MsgPB.MsgClientLoginToLS.SessionKey)
}
inline void MsgClientLoginToLS::set_sessionkey(const char* value, size_t size) {
  set_has_sessionkey();
  if (sessionkey_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sessionkey_ = new ::std::string;
  }
  sessionkey_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:MsgPB.MsgClientLoginToLS.SessionKey)
}
inline ::std::string* MsgClientLoginToLS::mutable_sessionkey() {
  set_has_sessionkey();
  if (sessionkey_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sessionkey_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:MsgPB.MsgClientLoginToLS.SessionKey)
  return sessionkey_;
}
inline ::std::string* MsgClientLoginToLS::release_sessionkey() {
  clear_has_sessionkey();
  if (sessionkey_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = sessionkey_;
    sessionkey_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void MsgClientLoginToLS::set_allocated_sessionkey(::std::string* sessionkey) {
  if (sessionkey_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete sessionkey_;
  }
  if (sessionkey) {
    set_has_sessionkey();
    sessionkey_ = sessionkey;
  } else {
    clear_has_sessionkey();
    sessionkey_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:MsgPB.MsgClientLoginToLS.SessionKey)
}

// optional int32 versionCode = 5;
inline bool MsgClientLoginToLS::has_versioncode() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void MsgClientLoginToLS::set_has_versioncode() {
  _has_bits_[0] |= 0x00000010u;
}
inline void MsgClientLoginToLS::clear_has_versioncode() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void MsgClientLoginToLS::clear_versioncode() {
  versioncode_ = 0;
  clear_has_versioncode();
}
inline ::google::protobuf::int32 MsgClientLoginToLS::versioncode() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgClientLoginToLS.versionCode)
  return versioncode_;
}
inline void MsgClientLoginToLS::set_versioncode(::google::protobuf::int32 value) {
  set_has_versioncode();
  versioncode_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgClientLoginToLS.versionCode)
}

// optional int32 client_svn_ver = 6;
inline bool MsgClientLoginToLS::has_client_svn_ver() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void MsgClientLoginToLS::set_has_client_svn_ver() {
  _has_bits_[0] |= 0x00000020u;
}
inline void MsgClientLoginToLS::clear_has_client_svn_ver() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void MsgClientLoginToLS::clear_client_svn_ver() {
  client_svn_ver_ = 0;
  clear_has_client_svn_ver();
}
inline ::google::protobuf::int32 MsgClientLoginToLS::client_svn_ver() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgClientLoginToLS.client_svn_ver)
  return client_svn_ver_;
}
inline void MsgClientLoginToLS::set_client_svn_ver(::google::protobuf::int32 value) {
  set_has_client_svn_ver();
  client_svn_ver_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgClientLoginToLS.client_svn_ver)
}

// optional int32 ignore_update = 7;
inline bool MsgClientLoginToLS::has_ignore_update() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void MsgClientLoginToLS::set_has_ignore_update() {
  _has_bits_[0] |= 0x00000040u;
}
inline void MsgClientLoginToLS::clear_has_ignore_update() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void MsgClientLoginToLS::clear_ignore_update() {
  ignore_update_ = 0;
  clear_has_ignore_update();
}
inline ::google::protobuf::int32 MsgClientLoginToLS::ignore_update() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgClientLoginToLS.ignore_update)
  return ignore_update_;
}
inline void MsgClientLoginToLS::set_ignore_update(::google::protobuf::int32 value) {
  set_has_ignore_update();
  ignore_update_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgClientLoginToLS.ignore_update)
}

// optional uint32 area_id = 8;
inline bool MsgClientLoginToLS::has_area_id() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void MsgClientLoginToLS::set_has_area_id() {
  _has_bits_[0] |= 0x00000080u;
}
inline void MsgClientLoginToLS::clear_has_area_id() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void MsgClientLoginToLS::clear_area_id() {
  area_id_ = 0u;
  clear_has_area_id();
}
inline ::google::protobuf::uint32 MsgClientLoginToLS::area_id() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgClientLoginToLS.area_id)
  return area_id_;
}
inline void MsgClientLoginToLS::set_area_id(::google::protobuf::uint32 value) {
  set_has_area_id();
  area_id_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgClientLoginToLS.area_id)
}

// -------------------------------------------------------------------

// MsgLoginResp

// optional .MsgPB.EMsgType msgType = 1 [default = _MSG_LOGIN_RESP];
inline bool MsgLoginResp::has_msgtype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgLoginResp::set_has_msgtype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgLoginResp::clear_has_msgtype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgLoginResp::clear_msgtype() {
  msgtype_ = 1001;
  clear_has_msgtype();
}
inline ::MsgPB::EMsgType MsgLoginResp::msgtype() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgLoginResp.msgType)
  return static_cast< ::MsgPB::EMsgType >(msgtype_);
}
inline void MsgLoginResp::set_msgtype(::MsgPB::EMsgType value) {
  assert(::MsgPB::EMsgType_IsValid(value));
  set_has_msgtype();
  msgtype_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgLoginResp.msgType)
}

// optional .MsgPB.LOGIN_RESULT loginResult = 2;
inline bool MsgLoginResp::has_loginresult() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MsgLoginResp::set_has_loginresult() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MsgLoginResp::clear_has_loginresult() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MsgLoginResp::clear_loginresult() {
  loginresult_ = 0;
  clear_has_loginresult();
}
inline ::MsgPB::LOGIN_RESULT MsgLoginResp::loginresult() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgLoginResp.loginResult)
  return static_cast< ::MsgPB::LOGIN_RESULT >(loginresult_);
}
inline void MsgLoginResp::set_loginresult(::MsgPB::LOGIN_RESULT value) {
  assert(::MsgPB::LOGIN_RESULT_IsValid(value));
  set_has_loginresult();
  loginresult_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgLoginResp.loginResult)
}

// optional int64 IggID = 3;
inline bool MsgLoginResp::has_iggid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MsgLoginResp::set_has_iggid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MsgLoginResp::clear_has_iggid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MsgLoginResp::clear_iggid() {
  iggid_ = GOOGLE_LONGLONG(0);
  clear_has_iggid();
}
inline ::google::protobuf::int64 MsgLoginResp::iggid() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgLoginResp.IggID)
  return iggid_;
}
inline void MsgLoginResp::set_iggid(::google::protobuf::int64 value) {
  set_has_iggid();
  iggid_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgLoginResp.IggID)
}

// optional int32 LoginTime = 4;
inline bool MsgLoginResp::has_logintime() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MsgLoginResp::set_has_logintime() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MsgLoginResp::clear_has_logintime() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MsgLoginResp::clear_logintime() {
  logintime_ = 0;
  clear_has_logintime();
}
inline ::google::protobuf::int32 MsgLoginResp::logintime() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgLoginResp.LoginTime)
  return logintime_;
}
inline void MsgLoginResp::set_logintime(::google::protobuf::int32 value) {
  set_has_logintime();
  logintime_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgLoginResp.LoginTime)
}

// optional int32 TimeZone = 5;
inline bool MsgLoginResp::has_timezone() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void MsgLoginResp::set_has_timezone() {
  _has_bits_[0] |= 0x00000010u;
}
inline void MsgLoginResp::clear_has_timezone() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void MsgLoginResp::clear_timezone() {
  timezone_ = 0;
  clear_has_timezone();
}
inline ::google::protobuf::int32 MsgLoginResp::timezone() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgLoginResp.TimeZone)
  return timezone_;
}
inline void MsgLoginResp::set_timezone(::google::protobuf::int32 value) {
  set_has_timezone();
  timezone_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgLoginResp.TimeZone)
}

// optional string apple_app_addr = 6;
inline bool MsgLoginResp::has_apple_app_addr() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void MsgLoginResp::set_has_apple_app_addr() {
  _has_bits_[0] |= 0x00000020u;
}
inline void MsgLoginResp::clear_has_apple_app_addr() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void MsgLoginResp::clear_apple_app_addr() {
  if (apple_app_addr_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    apple_app_addr_->clear();
  }
  clear_has_apple_app_addr();
}
inline const ::std::string& MsgLoginResp::apple_app_addr() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgLoginResp.apple_app_addr)
  return *apple_app_addr_;
}
inline void MsgLoginResp::set_apple_app_addr(const ::std::string& value) {
  set_has_apple_app_addr();
  if (apple_app_addr_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    apple_app_addr_ = new ::std::string;
  }
  apple_app_addr_->assign(value);
  // @@protoc_insertion_point(field_set:MsgPB.MsgLoginResp.apple_app_addr)
}
inline void MsgLoginResp::set_apple_app_addr(const char* value) {
  set_has_apple_app_addr();
  if (apple_app_addr_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    apple_app_addr_ = new ::std::string;
  }
  apple_app_addr_->assign(value);
  // @@protoc_insertion_point(field_set_char:MsgPB.MsgLoginResp.apple_app_addr)
}
inline void MsgLoginResp::set_apple_app_addr(const char* value, size_t size) {
  set_has_apple_app_addr();
  if (apple_app_addr_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    apple_app_addr_ = new ::std::string;
  }
  apple_app_addr_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:MsgPB.MsgLoginResp.apple_app_addr)
}
inline ::std::string* MsgLoginResp::mutable_apple_app_addr() {
  set_has_apple_app_addr();
  if (apple_app_addr_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    apple_app_addr_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:MsgPB.MsgLoginResp.apple_app_addr)
  return apple_app_addr_;
}
inline ::std::string* MsgLoginResp::release_apple_app_addr() {
  clear_has_apple_app_addr();
  if (apple_app_addr_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = apple_app_addr_;
    apple_app_addr_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void MsgLoginResp::set_allocated_apple_app_addr(::std::string* apple_app_addr) {
  if (apple_app_addr_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete apple_app_addr_;
  }
  if (apple_app_addr) {
    set_has_apple_app_addr();
    apple_app_addr_ = apple_app_addr;
  } else {
    clear_has_apple_app_addr();
    apple_app_addr_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:MsgPB.MsgLoginResp.apple_app_addr)
}

// optional string android_app_addr = 7;
inline bool MsgLoginResp::has_android_app_addr() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void MsgLoginResp::set_has_android_app_addr() {
  _has_bits_[0] |= 0x00000040u;
}
inline void MsgLoginResp::clear_has_android_app_addr() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void MsgLoginResp::clear_android_app_addr() {
  if (android_app_addr_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    android_app_addr_->clear();
  }
  clear_has_android_app_addr();
}
inline const ::std::string& MsgLoginResp::android_app_addr() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgLoginResp.android_app_addr)
  return *android_app_addr_;
}
inline void MsgLoginResp::set_android_app_addr(const ::std::string& value) {
  set_has_android_app_addr();
  if (android_app_addr_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    android_app_addr_ = new ::std::string;
  }
  android_app_addr_->assign(value);
  // @@protoc_insertion_point(field_set:MsgPB.MsgLoginResp.android_app_addr)
}
inline void MsgLoginResp::set_android_app_addr(const char* value) {
  set_has_android_app_addr();
  if (android_app_addr_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    android_app_addr_ = new ::std::string;
  }
  android_app_addr_->assign(value);
  // @@protoc_insertion_point(field_set_char:MsgPB.MsgLoginResp.android_app_addr)
}
inline void MsgLoginResp::set_android_app_addr(const char* value, size_t size) {
  set_has_android_app_addr();
  if (android_app_addr_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    android_app_addr_ = new ::std::string;
  }
  android_app_addr_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:MsgPB.MsgLoginResp.android_app_addr)
}
inline ::std::string* MsgLoginResp::mutable_android_app_addr() {
  set_has_android_app_addr();
  if (android_app_addr_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    android_app_addr_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:MsgPB.MsgLoginResp.android_app_addr)
  return android_app_addr_;
}
inline ::std::string* MsgLoginResp::release_android_app_addr() {
  clear_has_android_app_addr();
  if (android_app_addr_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = android_app_addr_;
    android_app_addr_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void MsgLoginResp::set_allocated_android_app_addr(::std::string* android_app_addr) {
  if (android_app_addr_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete android_app_addr_;
  }
  if (android_app_addr) {
    set_has_android_app_addr();
    android_app_addr_ = android_app_addr;
  } else {
    clear_has_android_app_addr();
    android_app_addr_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:MsgPB.MsgLoginResp.android_app_addr)
}

// optional string s_update_note_addr = 8;
inline bool MsgLoginResp::has_s_update_note_addr() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void MsgLoginResp::set_has_s_update_note_addr() {
  _has_bits_[0] |= 0x00000080u;
}
inline void MsgLoginResp::clear_has_s_update_note_addr() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void MsgLoginResp::clear_s_update_note_addr() {
  if (s_update_note_addr_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    s_update_note_addr_->clear();
  }
  clear_has_s_update_note_addr();
}
inline const ::std::string& MsgLoginResp::s_update_note_addr() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgLoginResp.s_update_note_addr)
  return *s_update_note_addr_;
}
inline void MsgLoginResp::set_s_update_note_addr(const ::std::string& value) {
  set_has_s_update_note_addr();
  if (s_update_note_addr_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    s_update_note_addr_ = new ::std::string;
  }
  s_update_note_addr_->assign(value);
  // @@protoc_insertion_point(field_set:MsgPB.MsgLoginResp.s_update_note_addr)
}
inline void MsgLoginResp::set_s_update_note_addr(const char* value) {
  set_has_s_update_note_addr();
  if (s_update_note_addr_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    s_update_note_addr_ = new ::std::string;
  }
  s_update_note_addr_->assign(value);
  // @@protoc_insertion_point(field_set_char:MsgPB.MsgLoginResp.s_update_note_addr)
}
inline void MsgLoginResp::set_s_update_note_addr(const char* value, size_t size) {
  set_has_s_update_note_addr();
  if (s_update_note_addr_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    s_update_note_addr_ = new ::std::string;
  }
  s_update_note_addr_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:MsgPB.MsgLoginResp.s_update_note_addr)
}
inline ::std::string* MsgLoginResp::mutable_s_update_note_addr() {
  set_has_s_update_note_addr();
  if (s_update_note_addr_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    s_update_note_addr_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:MsgPB.MsgLoginResp.s_update_note_addr)
  return s_update_note_addr_;
}
inline ::std::string* MsgLoginResp::release_s_update_note_addr() {
  clear_has_s_update_note_addr();
  if (s_update_note_addr_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = s_update_note_addr_;
    s_update_note_addr_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void MsgLoginResp::set_allocated_s_update_note_addr(::std::string* s_update_note_addr) {
  if (s_update_note_addr_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete s_update_note_addr_;
  }
  if (s_update_note_addr) {
    set_has_s_update_note_addr();
    s_update_note_addr_ = s_update_note_addr;
  } else {
    clear_has_s_update_note_addr();
    s_update_note_addr_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:MsgPB.MsgLoginResp.s_update_note_addr)
}

// optional string s_announcement_addr = 9;
inline bool MsgLoginResp::has_s_announcement_addr() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void MsgLoginResp::set_has_s_announcement_addr() {
  _has_bits_[0] |= 0x00000100u;
}
inline void MsgLoginResp::clear_has_s_announcement_addr() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void MsgLoginResp::clear_s_announcement_addr() {
  if (s_announcement_addr_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    s_announcement_addr_->clear();
  }
  clear_has_s_announcement_addr();
}
inline const ::std::string& MsgLoginResp::s_announcement_addr() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgLoginResp.s_announcement_addr)
  return *s_announcement_addr_;
}
inline void MsgLoginResp::set_s_announcement_addr(const ::std::string& value) {
  set_has_s_announcement_addr();
  if (s_announcement_addr_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    s_announcement_addr_ = new ::std::string;
  }
  s_announcement_addr_->assign(value);
  // @@protoc_insertion_point(field_set:MsgPB.MsgLoginResp.s_announcement_addr)
}
inline void MsgLoginResp::set_s_announcement_addr(const char* value) {
  set_has_s_announcement_addr();
  if (s_announcement_addr_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    s_announcement_addr_ = new ::std::string;
  }
  s_announcement_addr_->assign(value);
  // @@protoc_insertion_point(field_set_char:MsgPB.MsgLoginResp.s_announcement_addr)
}
inline void MsgLoginResp::set_s_announcement_addr(const char* value, size_t size) {
  set_has_s_announcement_addr();
  if (s_announcement_addr_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    s_announcement_addr_ = new ::std::string;
  }
  s_announcement_addr_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:MsgPB.MsgLoginResp.s_announcement_addr)
}
inline ::std::string* MsgLoginResp::mutable_s_announcement_addr() {
  set_has_s_announcement_addr();
  if (s_announcement_addr_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    s_announcement_addr_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:MsgPB.MsgLoginResp.s_announcement_addr)
  return s_announcement_addr_;
}
inline ::std::string* MsgLoginResp::release_s_announcement_addr() {
  clear_has_s_announcement_addr();
  if (s_announcement_addr_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = s_announcement_addr_;
    s_announcement_addr_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void MsgLoginResp::set_allocated_s_announcement_addr(::std::string* s_announcement_addr) {
  if (s_announcement_addr_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete s_announcement_addr_;
  }
  if (s_announcement_addr) {
    set_has_s_announcement_addr();
    s_announcement_addr_ = s_announcement_addr;
  } else {
    clear_has_s_announcement_addr();
    s_announcement_addr_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:MsgPB.MsgLoginResp.s_announcement_addr)
}

// -------------------------------------------------------------------

// MsgLoginValidate

// optional .MsgPB.EMsgType msgType = 1 [default = _MSG_LOGIN_VALIDATE];
inline bool MsgLoginValidate::has_msgtype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgLoginValidate::set_has_msgtype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgLoginValidate::clear_has_msgtype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgLoginValidate::clear_msgtype() {
  msgtype_ = 1003;
  clear_has_msgtype();
}
inline ::MsgPB::EMsgType MsgLoginValidate::msgtype() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgLoginValidate.msgType)
  return static_cast< ::MsgPB::EMsgType >(msgtype_);
}
inline void MsgLoginValidate::set_msgtype(::MsgPB::EMsgType value) {
  assert(::MsgPB::EMsgType_IsValid(value));
  set_has_msgtype();
  msgtype_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgLoginValidate.msgType)
}

// optional int64 IggID = 2;
inline bool MsgLoginValidate::has_iggid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MsgLoginValidate::set_has_iggid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MsgLoginValidate::clear_has_iggid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MsgLoginValidate::clear_iggid() {
  iggid_ = GOOGLE_LONGLONG(0);
  clear_has_iggid();
}
inline ::google::protobuf::int64 MsgLoginValidate::iggid() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgLoginValidate.IggID)
  return iggid_;
}
inline void MsgLoginValidate::set_iggid(::google::protobuf::int64 value) {
  set_has_iggid();
  iggid_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgLoginValidate.IggID)
}

// optional string ip = 3;
inline bool MsgLoginValidate::has_ip() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MsgLoginValidate::set_has_ip() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MsgLoginValidate::clear_has_ip() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MsgLoginValidate::clear_ip() {
  if (ip_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    ip_->clear();
  }
  clear_has_ip();
}
inline const ::std::string& MsgLoginValidate::ip() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgLoginValidate.ip)
  return *ip_;
}
inline void MsgLoginValidate::set_ip(const ::std::string& value) {
  set_has_ip();
  if (ip_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    ip_ = new ::std::string;
  }
  ip_->assign(value);
  // @@protoc_insertion_point(field_set:MsgPB.MsgLoginValidate.ip)
}
inline void MsgLoginValidate::set_ip(const char* value) {
  set_has_ip();
  if (ip_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    ip_ = new ::std::string;
  }
  ip_->assign(value);
  // @@protoc_insertion_point(field_set_char:MsgPB.MsgLoginValidate.ip)
}
inline void MsgLoginValidate::set_ip(const char* value, size_t size) {
  set_has_ip();
  if (ip_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    ip_ = new ::std::string;
  }
  ip_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:MsgPB.MsgLoginValidate.ip)
}
inline ::std::string* MsgLoginValidate::mutable_ip() {
  set_has_ip();
  if (ip_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    ip_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:MsgPB.MsgLoginValidate.ip)
  return ip_;
}
inline ::std::string* MsgLoginValidate::release_ip() {
  clear_has_ip();
  if (ip_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = ip_;
    ip_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void MsgLoginValidate::set_allocated_ip(::std::string* ip) {
  if (ip_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete ip_;
  }
  if (ip) {
    set_has_ip();
    ip_ = ip;
  } else {
    clear_has_ip();
    ip_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:MsgPB.MsgLoginValidate.ip)
}

// optional int32 port = 4;
inline bool MsgLoginValidate::has_port() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MsgLoginValidate::set_has_port() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MsgLoginValidate::clear_has_port() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MsgLoginValidate::clear_port() {
  port_ = 0;
  clear_has_port();
}
inline ::google::protobuf::int32 MsgLoginValidate::port() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgLoginValidate.port)
  return port_;
}
inline void MsgLoginValidate::set_port(::google::protobuf::int32 value) {
  set_has_port();
  port_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgLoginValidate.port)
}

// optional string checkText = 5;
inline bool MsgLoginValidate::has_checktext() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void MsgLoginValidate::set_has_checktext() {
  _has_bits_[0] |= 0x00000010u;
}
inline void MsgLoginValidate::clear_has_checktext() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void MsgLoginValidate::clear_checktext() {
  if (checktext_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    checktext_->clear();
  }
  clear_has_checktext();
}
inline const ::std::string& MsgLoginValidate::checktext() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgLoginValidate.checkText)
  return *checktext_;
}
inline void MsgLoginValidate::set_checktext(const ::std::string& value) {
  set_has_checktext();
  if (checktext_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    checktext_ = new ::std::string;
  }
  checktext_->assign(value);
  // @@protoc_insertion_point(field_set:MsgPB.MsgLoginValidate.checkText)
}
inline void MsgLoginValidate::set_checktext(const char* value) {
  set_has_checktext();
  if (checktext_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    checktext_ = new ::std::string;
  }
  checktext_->assign(value);
  // @@protoc_insertion_point(field_set_char:MsgPB.MsgLoginValidate.checkText)
}
inline void MsgLoginValidate::set_checktext(const char* value, size_t size) {
  set_has_checktext();
  if (checktext_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    checktext_ = new ::std::string;
  }
  checktext_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:MsgPB.MsgLoginValidate.checkText)
}
inline ::std::string* MsgLoginValidate::mutable_checktext() {
  set_has_checktext();
  if (checktext_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    checktext_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:MsgPB.MsgLoginValidate.checkText)
  return checktext_;
}
inline ::std::string* MsgLoginValidate::release_checktext() {
  clear_has_checktext();
  if (checktext_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = checktext_;
    checktext_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void MsgLoginValidate::set_allocated_checktext(::std::string* checktext) {
  if (checktext_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete checktext_;
  }
  if (checktext) {
    set_has_checktext();
    checktext_ = checktext;
  } else {
    clear_has_checktext();
    checktext_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:MsgPB.MsgLoginValidate.checkText)
}

// -------------------------------------------------------------------

// MsgLoginQueueUpInfo

// optional .MsgPB.EMsgType msgType = 1 [default = _MSG_LOGIN_QUEUE_UP_INFO];
inline bool MsgLoginQueueUpInfo::has_msgtype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgLoginQueueUpInfo::set_has_msgtype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgLoginQueueUpInfo::clear_has_msgtype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgLoginQueueUpInfo::clear_msgtype() {
  msgtype_ = 1080;
  clear_has_msgtype();
}
inline ::MsgPB::EMsgType MsgLoginQueueUpInfo::msgtype() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgLoginQueueUpInfo.msgType)
  return static_cast< ::MsgPB::EMsgType >(msgtype_);
}
inline void MsgLoginQueueUpInfo::set_msgtype(::MsgPB::EMsgType value) {
  assert(::MsgPB::EMsgType_IsValid(value));
  set_has_msgtype();
  msgtype_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgLoginQueueUpInfo.msgType)
}

// optional .MsgPB.LOGIN_QUEUE_UP_ACTION action = 2;
inline bool MsgLoginQueueUpInfo::has_action() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MsgLoginQueueUpInfo::set_has_action() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MsgLoginQueueUpInfo::clear_has_action() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MsgLoginQueueUpInfo::clear_action() {
  action_ = 1;
  clear_has_action();
}
inline ::MsgPB::LOGIN_QUEUE_UP_ACTION MsgLoginQueueUpInfo::action() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgLoginQueueUpInfo.action)
  return static_cast< ::MsgPB::LOGIN_QUEUE_UP_ACTION >(action_);
}
inline void MsgLoginQueueUpInfo::set_action(::MsgPB::LOGIN_QUEUE_UP_ACTION value) {
  assert(::MsgPB::LOGIN_QUEUE_UP_ACTION_IsValid(value));
  set_has_action();
  action_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgLoginQueueUpInfo.action)
}

// optional int64 IggID = 3;
inline bool MsgLoginQueueUpInfo::has_iggid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MsgLoginQueueUpInfo::set_has_iggid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MsgLoginQueueUpInfo::clear_has_iggid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MsgLoginQueueUpInfo::clear_iggid() {
  iggid_ = GOOGLE_LONGLONG(0);
  clear_has_iggid();
}
inline ::google::protobuf::int64 MsgLoginQueueUpInfo::iggid() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgLoginQueueUpInfo.IggID)
  return iggid_;
}
inline void MsgLoginQueueUpInfo::set_iggid(::google::protobuf::int64 value) {
  set_has_iggid();
  iggid_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgLoginQueueUpInfo.IggID)
}

// optional int32 curPos = 4;
inline bool MsgLoginQueueUpInfo::has_curpos() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MsgLoginQueueUpInfo::set_has_curpos() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MsgLoginQueueUpInfo::clear_has_curpos() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MsgLoginQueueUpInfo::clear_curpos() {
  curpos_ = 0;
  clear_has_curpos();
}
inline ::google::protobuf::int32 MsgLoginQueueUpInfo::curpos() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgLoginQueueUpInfo.curPos)
  return curpos_;
}
inline void MsgLoginQueueUpInfo::set_curpos(::google::protobuf::int32 value) {
  set_has_curpos();
  curpos_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgLoginQueueUpInfo.curPos)
}

// -------------------------------------------------------------------

// MsgQueryRegionRequeset

// optional .MsgPB.EMsgType msgType = 1 [default = _MSG_QUERY_REGION];
inline bool MsgQueryRegionRequeset::has_msgtype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgQueryRegionRequeset::set_has_msgtype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgQueryRegionRequeset::clear_has_msgtype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgQueryRegionRequeset::clear_msgtype() {
  msgtype_ = 1013;
  clear_has_msgtype();
}
inline ::MsgPB::EMsgType MsgQueryRegionRequeset::msgtype() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgQueryRegionRequeset.msgType)
  return static_cast< ::MsgPB::EMsgType >(msgtype_);
}
inline void MsgQueryRegionRequeset::set_msgtype(::MsgPB::EMsgType value) {
  assert(::MsgPB::EMsgType_IsValid(value));
  set_has_msgtype();
  msgtype_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgQueryRegionRequeset.msgType)
}

// -------------------------------------------------------------------

// MsgQueryRegionResponse

// optional .MsgPB.EMsgType msgType = 1 [default = _MSG_QUERY_REGION_RESPONSE];
inline bool MsgQueryRegionResponse::has_msgtype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgQueryRegionResponse::set_has_msgtype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgQueryRegionResponse::clear_has_msgtype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgQueryRegionResponse::clear_msgtype() {
  msgtype_ = 1014;
  clear_has_msgtype();
}
inline ::MsgPB::EMsgType MsgQueryRegionResponse::msgtype() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgQueryRegionResponse.msgType)
  return static_cast< ::MsgPB::EMsgType >(msgtype_);
}
inline void MsgQueryRegionResponse::set_msgtype(::MsgPB::EMsgType value) {
  assert(::MsgPB::EMsgType_IsValid(value));
  set_has_msgtype();
  msgtype_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgQueryRegionResponse.msgType)
}

// repeated string region_lst = 2;
inline int MsgQueryRegionResponse::region_lst_size() const {
  return region_lst_.size();
}
inline void MsgQueryRegionResponse::clear_region_lst() {
  region_lst_.Clear();
}
inline const ::std::string& MsgQueryRegionResponse::region_lst(int index) const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgQueryRegionResponse.region_lst)
  return region_lst_.Get(index);
}
inline ::std::string* MsgQueryRegionResponse::mutable_region_lst(int index) {
  // @@protoc_insertion_point(field_mutable:MsgPB.MsgQueryRegionResponse.region_lst)
  return region_lst_.Mutable(index);
}
inline void MsgQueryRegionResponse::set_region_lst(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:MsgPB.MsgQueryRegionResponse.region_lst)
  region_lst_.Mutable(index)->assign(value);
}
inline void MsgQueryRegionResponse::set_region_lst(int index, const char* value) {
  region_lst_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:MsgPB.MsgQueryRegionResponse.region_lst)
}
inline void MsgQueryRegionResponse::set_region_lst(int index, const char* value, size_t size) {
  region_lst_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:MsgPB.MsgQueryRegionResponse.region_lst)
}
inline ::std::string* MsgQueryRegionResponse::add_region_lst() {
  return region_lst_.Add();
}
inline void MsgQueryRegionResponse::add_region_lst(const ::std::string& value) {
  region_lst_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:MsgPB.MsgQueryRegionResponse.region_lst)
}
inline void MsgQueryRegionResponse::add_region_lst(const char* value) {
  region_lst_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:MsgPB.MsgQueryRegionResponse.region_lst)
}
inline void MsgQueryRegionResponse::add_region_lst(const char* value, size_t size) {
  region_lst_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:MsgPB.MsgQueryRegionResponse.region_lst)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
MsgQueryRegionResponse::region_lst() const {
  // @@protoc_insertion_point(field_list:MsgPB.MsgQueryRegionResponse.region_lst)
  return region_lst_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
MsgQueryRegionResponse::mutable_region_lst() {
  // @@protoc_insertion_point(field_mutable_list:MsgPB.MsgQueryRegionResponse.region_lst)
  return &region_lst_;
}

// -------------------------------------------------------------------

// MsgEncryptorCode

// optional .MsgPB.EMsgType msgType = 1 [default = _MSG_ENCRYPTOR_CODE];
inline bool MsgEncryptorCode::has_msgtype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgEncryptorCode::set_has_msgtype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgEncryptorCode::clear_has_msgtype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgEncryptorCode::clear_msgtype() {
  msgtype_ = 1011;
  clear_has_msgtype();
}
inline ::MsgPB::EMsgType MsgEncryptorCode::msgtype() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgEncryptorCode.msgType)
  return static_cast< ::MsgPB::EMsgType >(msgtype_);
}
inline void MsgEncryptorCode::set_msgtype(::MsgPB::EMsgType value) {
  assert(::MsgPB::EMsgType_IsValid(value));
  set_has_msgtype();
  msgtype_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgEncryptorCode.msgType)
}

// -------------------------------------------------------------------

// MsgEncryptorCodeResp

// optional .MsgPB.EMsgType msgType = 1 [default = _MSG_ENCRYPTOR_CODE_RESP];
inline bool MsgEncryptorCodeResp::has_msgtype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgEncryptorCodeResp::set_has_msgtype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgEncryptorCodeResp::clear_has_msgtype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgEncryptorCodeResp::clear_msgtype() {
  msgtype_ = 1012;
  clear_has_msgtype();
}
inline ::MsgPB::EMsgType MsgEncryptorCodeResp::msgtype() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgEncryptorCodeResp.msgType)
  return static_cast< ::MsgPB::EMsgType >(msgtype_);
}
inline void MsgEncryptorCodeResp::set_msgtype(::MsgPB::EMsgType value) {
  assert(::MsgPB::EMsgType_IsValid(value));
  set_has_msgtype();
  msgtype_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgEncryptorCodeResp.msgType)
}

// optional uint32 code = 2;
inline bool MsgEncryptorCodeResp::has_code() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MsgEncryptorCodeResp::set_has_code() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MsgEncryptorCodeResp::clear_has_code() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MsgEncryptorCodeResp::clear_code() {
  code_ = 0u;
  clear_has_code();
}
inline ::google::protobuf::uint32 MsgEncryptorCodeResp::code() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgEncryptorCodeResp.code)
  return code_;
}
inline void MsgEncryptorCodeResp::set_code(::google::protobuf::uint32 value) {
  set_has_code();
  code_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgEncryptorCodeResp.code)
}

// -------------------------------------------------------------------

// MsgClientLoginToGS

// optional .MsgPB.EMsgType msgType = 1 [default = _MSG_CLIENT_LOGIN_TO_GS];
inline bool MsgClientLoginToGS::has_msgtype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgClientLoginToGS::set_has_msgtype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgClientLoginToGS::clear_has_msgtype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgClientLoginToGS::clear_msgtype() {
  msgtype_ = 1006;
  clear_has_msgtype();
}
inline ::MsgPB::EMsgType MsgClientLoginToGS::msgtype() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgClientLoginToGS.msgType)
  return static_cast< ::MsgPB::EMsgType >(msgtype_);
}
inline void MsgClientLoginToGS::set_msgtype(::MsgPB::EMsgType value) {
  assert(::MsgPB::EMsgType_IsValid(value));
  set_has_msgtype();
  msgtype_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgClientLoginToGS.msgType)
}

// optional int64 IggID = 2;
inline bool MsgClientLoginToGS::has_iggid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MsgClientLoginToGS::set_has_iggid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MsgClientLoginToGS::clear_has_iggid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MsgClientLoginToGS::clear_iggid() {
  iggid_ = GOOGLE_LONGLONG(0);
  clear_has_iggid();
}
inline ::google::protobuf::int64 MsgClientLoginToGS::iggid() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgClientLoginToGS.IggID)
  return iggid_;
}
inline void MsgClientLoginToGS::set_iggid(::google::protobuf::int64 value) {
  set_has_iggid();
  iggid_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgClientLoginToGS.IggID)
}

// optional string checkText = 3;
inline bool MsgClientLoginToGS::has_checktext() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MsgClientLoginToGS::set_has_checktext() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MsgClientLoginToGS::clear_has_checktext() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MsgClientLoginToGS::clear_checktext() {
  if (checktext_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    checktext_->clear();
  }
  clear_has_checktext();
}
inline const ::std::string& MsgClientLoginToGS::checktext() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgClientLoginToGS.checkText)
  return *checktext_;
}
inline void MsgClientLoginToGS::set_checktext(const ::std::string& value) {
  set_has_checktext();
  if (checktext_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    checktext_ = new ::std::string;
  }
  checktext_->assign(value);
  // @@protoc_insertion_point(field_set:MsgPB.MsgClientLoginToGS.checkText)
}
inline void MsgClientLoginToGS::set_checktext(const char* value) {
  set_has_checktext();
  if (checktext_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    checktext_ = new ::std::string;
  }
  checktext_->assign(value);
  // @@protoc_insertion_point(field_set_char:MsgPB.MsgClientLoginToGS.checkText)
}
inline void MsgClientLoginToGS::set_checktext(const char* value, size_t size) {
  set_has_checktext();
  if (checktext_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    checktext_ = new ::std::string;
  }
  checktext_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:MsgPB.MsgClientLoginToGS.checkText)
}
inline ::std::string* MsgClientLoginToGS::mutable_checktext() {
  set_has_checktext();
  if (checktext_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    checktext_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:MsgPB.MsgClientLoginToGS.checkText)
  return checktext_;
}
inline ::std::string* MsgClientLoginToGS::release_checktext() {
  clear_has_checktext();
  if (checktext_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = checktext_;
    checktext_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void MsgClientLoginToGS::set_allocated_checktext(::std::string* checktext) {
  if (checktext_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete checktext_;
  }
  if (checktext) {
    set_has_checktext();
    checktext_ = checktext;
  } else {
    clear_has_checktext();
    checktext_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:MsgPB.MsgClientLoginToGS.checkText)
}

// optional bytes nickName = 4;
inline bool MsgClientLoginToGS::has_nickname() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MsgClientLoginToGS::set_has_nickname() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MsgClientLoginToGS::clear_has_nickname() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MsgClientLoginToGS::clear_nickname() {
  if (nickname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    nickname_->clear();
  }
  clear_has_nickname();
}
inline const ::std::string& MsgClientLoginToGS::nickname() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgClientLoginToGS.nickName)
  return *nickname_;
}
inline void MsgClientLoginToGS::set_nickname(const ::std::string& value) {
  set_has_nickname();
  if (nickname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    nickname_ = new ::std::string;
  }
  nickname_->assign(value);
  // @@protoc_insertion_point(field_set:MsgPB.MsgClientLoginToGS.nickName)
}
inline void MsgClientLoginToGS::set_nickname(const char* value) {
  set_has_nickname();
  if (nickname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    nickname_ = new ::std::string;
  }
  nickname_->assign(value);
  // @@protoc_insertion_point(field_set_char:MsgPB.MsgClientLoginToGS.nickName)
}
inline void MsgClientLoginToGS::set_nickname(const void* value, size_t size) {
  set_has_nickname();
  if (nickname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    nickname_ = new ::std::string;
  }
  nickname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:MsgPB.MsgClientLoginToGS.nickName)
}
inline ::std::string* MsgClientLoginToGS::mutable_nickname() {
  set_has_nickname();
  if (nickname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    nickname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:MsgPB.MsgClientLoginToGS.nickName)
  return nickname_;
}
inline ::std::string* MsgClientLoginToGS::release_nickname() {
  clear_has_nickname();
  if (nickname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = nickname_;
    nickname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void MsgClientLoginToGS::set_allocated_nickname(::std::string* nickname) {
  if (nickname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete nickname_;
  }
  if (nickname) {
    set_has_nickname();
    nickname_ = nickname;
  } else {
    clear_has_nickname();
    nickname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:MsgPB.MsgClientLoginToGS.nickName)
}

// optional int32 GameID = 5;
inline bool MsgClientLoginToGS::has_gameid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void MsgClientLoginToGS::set_has_gameid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void MsgClientLoginToGS::clear_has_gameid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void MsgClientLoginToGS::clear_gameid() {
  gameid_ = 0;
  clear_has_gameid();
}
inline ::google::protobuf::int32 MsgClientLoginToGS::gameid() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgClientLoginToGS.GameID)
  return gameid_;
}
inline void MsgClientLoginToGS::set_gameid(::google::protobuf::int32 value) {
  set_has_gameid();
  gameid_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgClientLoginToGS.GameID)
}

// optional int32 deviceID = 6;
inline bool MsgClientLoginToGS::has_deviceid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void MsgClientLoginToGS::set_has_deviceid() {
  _has_bits_[0] |= 0x00000020u;
}
inline void MsgClientLoginToGS::clear_has_deviceid() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void MsgClientLoginToGS::clear_deviceid() {
  deviceid_ = 0;
  clear_has_deviceid();
}
inline ::google::protobuf::int32 MsgClientLoginToGS::deviceid() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgClientLoginToGS.deviceID)
  return deviceid_;
}
inline void MsgClientLoginToGS::set_deviceid(::google::protobuf::int32 value) {
  set_has_deviceid();
  deviceid_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgClientLoginToGS.deviceID)
}

// optional int32 versionCode = 7;
inline bool MsgClientLoginToGS::has_versioncode() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void MsgClientLoginToGS::set_has_versioncode() {
  _has_bits_[0] |= 0x00000040u;
}
inline void MsgClientLoginToGS::clear_has_versioncode() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void MsgClientLoginToGS::clear_versioncode() {
  versioncode_ = 0;
  clear_has_versioncode();
}
inline ::google::protobuf::int32 MsgClientLoginToGS::versioncode() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgClientLoginToGS.versionCode)
  return versioncode_;
}
inline void MsgClientLoginToGS::set_versioncode(::google::protobuf::int32 value) {
  set_has_versioncode();
  versioncode_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgClientLoginToGS.versionCode)
}

// optional bool CliendMode = 8 [default = false];
inline bool MsgClientLoginToGS::has_cliendmode() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void MsgClientLoginToGS::set_has_cliendmode() {
  _has_bits_[0] |= 0x00000080u;
}
inline void MsgClientLoginToGS::clear_has_cliendmode() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void MsgClientLoginToGS::clear_cliendmode() {
  cliendmode_ = false;
  clear_has_cliendmode();
}
inline bool MsgClientLoginToGS::cliendmode() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgClientLoginToGS.CliendMode)
  return cliendmode_;
}
inline void MsgClientLoginToGS::set_cliendmode(bool value) {
  set_has_cliendmode();
  cliendmode_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgClientLoginToGS.CliendMode)
}

// optional bool UploadData = 9 [default = false];
inline bool MsgClientLoginToGS::has_uploaddata() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void MsgClientLoginToGS::set_has_uploaddata() {
  _has_bits_[0] |= 0x00000100u;
}
inline void MsgClientLoginToGS::clear_has_uploaddata() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void MsgClientLoginToGS::clear_uploaddata() {
  uploaddata_ = false;
  clear_has_uploaddata();
}
inline bool MsgClientLoginToGS::uploaddata() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgClientLoginToGS.UploadData)
  return uploaddata_;
}
inline void MsgClientLoginToGS::set_uploaddata(bool value) {
  set_has_uploaddata();
  uploaddata_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgClientLoginToGS.UploadData)
}

// optional string Device = 10;
inline bool MsgClientLoginToGS::has_device() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void MsgClientLoginToGS::set_has_device() {
  _has_bits_[0] |= 0x00000200u;
}
inline void MsgClientLoginToGS::clear_has_device() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void MsgClientLoginToGS::clear_device() {
  if (device_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    device_->clear();
  }
  clear_has_device();
}
inline const ::std::string& MsgClientLoginToGS::device() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgClientLoginToGS.Device)
  return *device_;
}
inline void MsgClientLoginToGS::set_device(const ::std::string& value) {
  set_has_device();
  if (device_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    device_ = new ::std::string;
  }
  device_->assign(value);
  // @@protoc_insertion_point(field_set:MsgPB.MsgClientLoginToGS.Device)
}
inline void MsgClientLoginToGS::set_device(const char* value) {
  set_has_device();
  if (device_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    device_ = new ::std::string;
  }
  device_->assign(value);
  // @@protoc_insertion_point(field_set_char:MsgPB.MsgClientLoginToGS.Device)
}
inline void MsgClientLoginToGS::set_device(const char* value, size_t size) {
  set_has_device();
  if (device_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    device_ = new ::std::string;
  }
  device_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:MsgPB.MsgClientLoginToGS.Device)
}
inline ::std::string* MsgClientLoginToGS::mutable_device() {
  set_has_device();
  if (device_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    device_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:MsgPB.MsgClientLoginToGS.Device)
  return device_;
}
inline ::std::string* MsgClientLoginToGS::release_device() {
  clear_has_device();
  if (device_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = device_;
    device_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void MsgClientLoginToGS::set_allocated_device(::std::string* device) {
  if (device_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete device_;
  }
  if (device) {
    set_has_device();
    device_ = device;
  } else {
    clear_has_device();
    device_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:MsgPB.MsgClientLoginToGS.Device)
}

// optional int32 client_svn_ver = 11;
inline bool MsgClientLoginToGS::has_client_svn_ver() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void MsgClientLoginToGS::set_has_client_svn_ver() {
  _has_bits_[0] |= 0x00000400u;
}
inline void MsgClientLoginToGS::clear_has_client_svn_ver() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void MsgClientLoginToGS::clear_client_svn_ver() {
  client_svn_ver_ = 0;
  clear_has_client_svn_ver();
}
inline ::google::protobuf::int32 MsgClientLoginToGS::client_svn_ver() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgClientLoginToGS.client_svn_ver)
  return client_svn_ver_;
}
inline void MsgClientLoginToGS::set_client_svn_ver(::google::protobuf::int32 value) {
  set_has_client_svn_ver();
  client_svn_ver_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgClientLoginToGS.client_svn_ver)
}

// optional bool is_adult = 12 [default = false];
inline bool MsgClientLoginToGS::has_is_adult() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void MsgClientLoginToGS::set_has_is_adult() {
  _has_bits_[0] |= 0x00000800u;
}
inline void MsgClientLoginToGS::clear_has_is_adult() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void MsgClientLoginToGS::clear_is_adult() {
  is_adult_ = false;
  clear_has_is_adult();
}
inline bool MsgClientLoginToGS::is_adult() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgClientLoginToGS.is_adult)
  return is_adult_;
}
inline void MsgClientLoginToGS::set_is_adult(bool value) {
  set_has_is_adult();
  is_adult_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgClientLoginToGS.is_adult)
}

// -------------------------------------------------------------------

// MsgGSResp

// optional .MsgPB.EMsgType msgType = 1 [default = _MSG_GS_RESP];
inline bool MsgGSResp::has_msgtype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgGSResp::set_has_msgtype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgGSResp::clear_has_msgtype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgGSResp::clear_msgtype() {
  msgtype_ = 1002;
  clear_has_msgtype();
}
inline ::MsgPB::EMsgType MsgGSResp::msgtype() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgGSResp.msgType)
  return static_cast< ::MsgPB::EMsgType >(msgtype_);
}
inline void MsgGSResp::set_msgtype(::MsgPB::EMsgType value) {
  assert(::MsgPB::EMsgType_IsValid(value));
  set_has_msgtype();
  msgtype_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgGSResp.msgType)
}

// optional .MsgPB.LOGIN_RESULT loginResult = 2;
inline bool MsgGSResp::has_loginresult() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MsgGSResp::set_has_loginresult() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MsgGSResp::clear_has_loginresult() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MsgGSResp::clear_loginresult() {
  loginresult_ = 0;
  clear_has_loginresult();
}
inline ::MsgPB::LOGIN_RESULT MsgGSResp::loginresult() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgGSResp.loginResult)
  return static_cast< ::MsgPB::LOGIN_RESULT >(loginresult_);
}
inline void MsgGSResp::set_loginresult(::MsgPB::LOGIN_RESULT value) {
  assert(::MsgPB::LOGIN_RESULT_IsValid(value));
  set_has_loginresult();
  loginresult_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgGSResp.loginResult)
}

// optional int64 IggID = 3;
inline bool MsgGSResp::has_iggid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MsgGSResp::set_has_iggid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MsgGSResp::clear_has_iggid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MsgGSResp::clear_iggid() {
  iggid_ = GOOGLE_LONGLONG(0);
  clear_has_iggid();
}
inline ::google::protobuf::int64 MsgGSResp::iggid() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgGSResp.IggID)
  return iggid_;
}
inline void MsgGSResp::set_iggid(::google::protobuf::int64 value) {
  set_has_iggid();
  iggid_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgGSResp.IggID)
}

// optional int64 LoginTime = 4;
inline bool MsgGSResp::has_logintime() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MsgGSResp::set_has_logintime() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MsgGSResp::clear_has_logintime() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MsgGSResp::clear_logintime() {
  logintime_ = GOOGLE_LONGLONG(0);
  clear_has_logintime();
}
inline ::google::protobuf::int64 MsgGSResp::logintime() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgGSResp.LoginTime)
  return logintime_;
}
inline void MsgGSResp::set_logintime(::google::protobuf::int64 value) {
  set_has_logintime();
  logintime_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgGSResp.LoginTime)
}

// optional int32 TimeZone = 5;
inline bool MsgGSResp::has_timezone() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void MsgGSResp::set_has_timezone() {
  _has_bits_[0] |= 0x00000010u;
}
inline void MsgGSResp::clear_has_timezone() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void MsgGSResp::clear_timezone() {
  timezone_ = 0;
  clear_has_timezone();
}
inline ::google::protobuf::int32 MsgGSResp::timezone() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgGSResp.TimeZone)
  return timezone_;
}
inline void MsgGSResp::set_timezone(::google::protobuf::int32 value) {
  set_has_timezone();
  timezone_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgGSResp.TimeZone)
}

// optional bool DeviceChanged = 6 [default = false];
inline bool MsgGSResp::has_devicechanged() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void MsgGSResp::set_has_devicechanged() {
  _has_bits_[0] |= 0x00000020u;
}
inline void MsgGSResp::clear_has_devicechanged() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void MsgGSResp::clear_devicechanged() {
  devicechanged_ = false;
  clear_has_devicechanged();
}
inline bool MsgGSResp::devicechanged() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgGSResp.DeviceChanged)
  return devicechanged_;
}
inline void MsgGSResp::set_devicechanged(bool value) {
  set_has_devicechanged();
  devicechanged_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgGSResp.DeviceChanged)
}

// optional int64 LastClientUploadDataSerial = 7 [default = 0];
inline bool MsgGSResp::has_lastclientuploaddataserial() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void MsgGSResp::set_has_lastclientuploaddataserial() {
  _has_bits_[0] |= 0x00000040u;
}
inline void MsgGSResp::clear_has_lastclientuploaddataserial() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void MsgGSResp::clear_lastclientuploaddataserial() {
  lastclientuploaddataserial_ = GOOGLE_LONGLONG(0);
  clear_has_lastclientuploaddataserial();
}
inline ::google::protobuf::int64 MsgGSResp::lastclientuploaddataserial() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgGSResp.LastClientUploadDataSerial)
  return lastclientuploaddataserial_;
}
inline void MsgGSResp::set_lastclientuploaddataserial(::google::protobuf::int64 value) {
  set_has_lastclientuploaddataserial();
  lastclientuploaddataserial_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgGSResp.LastClientUploadDataSerial)
}

// optional int32 Client_History_Msg = 8;
inline bool MsgGSResp::has_client_history_msg() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void MsgGSResp::set_has_client_history_msg() {
  _has_bits_[0] |= 0x00000080u;
}
inline void MsgGSResp::clear_has_client_history_msg() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void MsgGSResp::clear_client_history_msg() {
  client_history_msg_ = 0;
  clear_has_client_history_msg();
}
inline ::google::protobuf::int32 MsgGSResp::client_history_msg() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgGSResp.Client_History_Msg)
  return client_history_msg_;
}
inline void MsgGSResp::set_client_history_msg(::google::protobuf::int32 value) {
  set_has_client_history_msg();
  client_history_msg_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgGSResp.Client_History_Msg)
}

// optional int32 NewbieStep = 9;
inline bool MsgGSResp::has_newbiestep() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void MsgGSResp::set_has_newbiestep() {
  _has_bits_[0] |= 0x00000100u;
}
inline void MsgGSResp::clear_has_newbiestep() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void MsgGSResp::clear_newbiestep() {
  newbiestep_ = 0;
  clear_has_newbiestep();
}
inline ::google::protobuf::int32 MsgGSResp::newbiestep() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgGSResp.NewbieStep)
  return newbiestep_;
}
inline void MsgGSResp::set_newbiestep(::google::protobuf::int32 value) {
  set_has_newbiestep();
  newbiestep_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgGSResp.NewbieStep)
}

// -------------------------------------------------------------------

// MsgNotifyFirstLogin

// optional .MsgPB.EMsgType msgType = 1 [default = _MSG_NOTIFY_FIRST_LOGIN];
inline bool MsgNotifyFirstLogin::has_msgtype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgNotifyFirstLogin::set_has_msgtype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgNotifyFirstLogin::clear_has_msgtype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgNotifyFirstLogin::clear_msgtype() {
  msgtype_ = 1007;
  clear_has_msgtype();
}
inline ::MsgPB::EMsgType MsgNotifyFirstLogin::msgtype() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgNotifyFirstLogin.msgType)
  return static_cast< ::MsgPB::EMsgType >(msgtype_);
}
inline void MsgNotifyFirstLogin::set_msgtype(::MsgPB::EMsgType value) {
  assert(::MsgPB::EMsgType_IsValid(value));
  set_has_msgtype();
  msgtype_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgNotifyFirstLogin.msgType)
}

// -------------------------------------------------------------------

// MsgServerVersion

// optional .MsgPB.EMsgType msgType = 1 [default = _MSG_SERVER_VERSION];
inline bool MsgServerVersion::has_msgtype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgServerVersion::set_has_msgtype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgServerVersion::clear_has_msgtype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgServerVersion::clear_msgtype() {
  msgtype_ = 1008;
  clear_has_msgtype();
}
inline ::MsgPB::EMsgType MsgServerVersion::msgtype() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgServerVersion.msgType)
  return static_cast< ::MsgPB::EMsgType >(msgtype_);
}
inline void MsgServerVersion::set_msgtype(::MsgPB::EMsgType value) {
  assert(::MsgPB::EMsgType_IsValid(value));
  set_has_msgtype();
  msgtype_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgServerVersion.msgType)
}

// optional uint32 versionId = 2;
inline bool MsgServerVersion::has_versionid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MsgServerVersion::set_has_versionid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MsgServerVersion::clear_has_versionid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MsgServerVersion::clear_versionid() {
  versionid_ = 0u;
  clear_has_versionid();
}
inline ::google::protobuf::uint32 MsgServerVersion::versionid() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgServerVersion.versionId)
  return versionid_;
}
inline void MsgServerVersion::set_versionid(::google::protobuf::uint32 value) {
  set_has_versionid();
  versionid_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgServerVersion.versionId)
}

// optional uint32 year = 3;
inline bool MsgServerVersion::has_year() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MsgServerVersion::set_has_year() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MsgServerVersion::clear_has_year() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MsgServerVersion::clear_year() {
  year_ = 0u;
  clear_has_year();
}
inline ::google::protobuf::uint32 MsgServerVersion::year() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgServerVersion.year)
  return year_;
}
inline void MsgServerVersion::set_year(::google::protobuf::uint32 value) {
  set_has_year();
  year_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgServerVersion.year)
}

// optional uint32 month = 4;
inline bool MsgServerVersion::has_month() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MsgServerVersion::set_has_month() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MsgServerVersion::clear_has_month() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MsgServerVersion::clear_month() {
  month_ = 0u;
  clear_has_month();
}
inline ::google::protobuf::uint32 MsgServerVersion::month() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgServerVersion.month)
  return month_;
}
inline void MsgServerVersion::set_month(::google::protobuf::uint32 value) {
  set_has_month();
  month_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgServerVersion.month)
}

// optional uint32 day = 5;
inline bool MsgServerVersion::has_day() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void MsgServerVersion::set_has_day() {
  _has_bits_[0] |= 0x00000010u;
}
inline void MsgServerVersion::clear_has_day() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void MsgServerVersion::clear_day() {
  day_ = 0u;
  clear_has_day();
}
inline ::google::protobuf::uint32 MsgServerVersion::day() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgServerVersion.day)
  return day_;
}
inline void MsgServerVersion::set_day(::google::protobuf::uint32 value) {
  set_has_day();
  day_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgServerVersion.day)
}

// optional uint32 hour = 6;
inline bool MsgServerVersion::has_hour() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void MsgServerVersion::set_has_hour() {
  _has_bits_[0] |= 0x00000020u;
}
inline void MsgServerVersion::clear_has_hour() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void MsgServerVersion::clear_hour() {
  hour_ = 0u;
  clear_has_hour();
}
inline ::google::protobuf::uint32 MsgServerVersion::hour() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgServerVersion.hour)
  return hour_;
}
inline void MsgServerVersion::set_hour(::google::protobuf::uint32 value) {
  set_has_hour();
  hour_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgServerVersion.hour)
}

// optional uint32 minute = 7;
inline bool MsgServerVersion::has_minute() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void MsgServerVersion::set_has_minute() {
  _has_bits_[0] |= 0x00000040u;
}
inline void MsgServerVersion::clear_has_minute() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void MsgServerVersion::clear_minute() {
  minute_ = 0u;
  clear_has_minute();
}
inline ::google::protobuf::uint32 MsgServerVersion::minute() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgServerVersion.minute)
  return minute_;
}
inline void MsgServerVersion::set_minute(::google::protobuf::uint32 value) {
  set_has_minute();
  minute_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgServerVersion.minute)
}

// optional uint32 second = 8;
inline bool MsgServerVersion::has_second() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void MsgServerVersion::set_has_second() {
  _has_bits_[0] |= 0x00000080u;
}
inline void MsgServerVersion::clear_has_second() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void MsgServerVersion::clear_second() {
  second_ = 0u;
  clear_has_second();
}
inline ::google::protobuf::uint32 MsgServerVersion::second() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgServerVersion.second)
  return second_;
}
inline void MsgServerVersion::set_second(::google::protobuf::uint32 value) {
  set_has_second();
  second_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgServerVersion.second)
}

// -------------------------------------------------------------------

// MsgUserLoginOtherPlace

// optional .MsgPB.EMsgType msgType = 1 [default = _MSG_USER_LOGIN_OTHER_PLACE];
inline bool MsgUserLoginOtherPlace::has_msgtype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgUserLoginOtherPlace::set_has_msgtype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgUserLoginOtherPlace::clear_has_msgtype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgUserLoginOtherPlace::clear_msgtype() {
  msgtype_ = 1018;
  clear_has_msgtype();
}
inline ::MsgPB::EMsgType MsgUserLoginOtherPlace::msgtype() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgUserLoginOtherPlace.msgType)
  return static_cast< ::MsgPB::EMsgType >(msgtype_);
}
inline void MsgUserLoginOtherPlace::set_msgtype(::MsgPB::EMsgType value) {
  assert(::MsgPB::EMsgType_IsValid(value));
  set_has_msgtype();
  msgtype_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgUserLoginOtherPlace.msgType)
}

// -------------------------------------------------------------------

// MsgClientReConnectToGS

// optional .MsgPB.EMsgType msgType = 1 [default = _MSG_CLIENT_RECONNECT_TO_GS];
inline bool MsgClientReConnectToGS::has_msgtype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgClientReConnectToGS::set_has_msgtype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgClientReConnectToGS::clear_has_msgtype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgClientReConnectToGS::clear_msgtype() {
  msgtype_ = 1017;
  clear_has_msgtype();
}
inline ::MsgPB::EMsgType MsgClientReConnectToGS::msgtype() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgClientReConnectToGS.msgType)
  return static_cast< ::MsgPB::EMsgType >(msgtype_);
}
inline void MsgClientReConnectToGS::set_msgtype(::MsgPB::EMsgType value) {
  assert(::MsgPB::EMsgType_IsValid(value));
  set_has_msgtype();
  msgtype_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgClientReConnectToGS.msgType)
}

// optional int64 IggID = 2;
inline bool MsgClientReConnectToGS::has_iggid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MsgClientReConnectToGS::set_has_iggid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MsgClientReConnectToGS::clear_has_iggid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MsgClientReConnectToGS::clear_iggid() {
  iggid_ = GOOGLE_LONGLONG(0);
  clear_has_iggid();
}
inline ::google::protobuf::int64 MsgClientReConnectToGS::iggid() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgClientReConnectToGS.IggID)
  return iggid_;
}
inline void MsgClientReConnectToGS::set_iggid(::google::protobuf::int64 value) {
  set_has_iggid();
  iggid_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgClientReConnectToGS.IggID)
}

// optional string checkText = 3;
inline bool MsgClientReConnectToGS::has_checktext() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MsgClientReConnectToGS::set_has_checktext() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MsgClientReConnectToGS::clear_has_checktext() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MsgClientReConnectToGS::clear_checktext() {
  if (checktext_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    checktext_->clear();
  }
  clear_has_checktext();
}
inline const ::std::string& MsgClientReConnectToGS::checktext() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgClientReConnectToGS.checkText)
  return *checktext_;
}
inline void MsgClientReConnectToGS::set_checktext(const ::std::string& value) {
  set_has_checktext();
  if (checktext_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    checktext_ = new ::std::string;
  }
  checktext_->assign(value);
  // @@protoc_insertion_point(field_set:MsgPB.MsgClientReConnectToGS.checkText)
}
inline void MsgClientReConnectToGS::set_checktext(const char* value) {
  set_has_checktext();
  if (checktext_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    checktext_ = new ::std::string;
  }
  checktext_->assign(value);
  // @@protoc_insertion_point(field_set_char:MsgPB.MsgClientReConnectToGS.checkText)
}
inline void MsgClientReConnectToGS::set_checktext(const char* value, size_t size) {
  set_has_checktext();
  if (checktext_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    checktext_ = new ::std::string;
  }
  checktext_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:MsgPB.MsgClientReConnectToGS.checkText)
}
inline ::std::string* MsgClientReConnectToGS::mutable_checktext() {
  set_has_checktext();
  if (checktext_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    checktext_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:MsgPB.MsgClientReConnectToGS.checkText)
  return checktext_;
}
inline ::std::string* MsgClientReConnectToGS::release_checktext() {
  clear_has_checktext();
  if (checktext_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = checktext_;
    checktext_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void MsgClientReConnectToGS::set_allocated_checktext(::std::string* checktext) {
  if (checktext_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete checktext_;
  }
  if (checktext) {
    set_has_checktext();
    checktext_ = checktext;
  } else {
    clear_has_checktext();
    checktext_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:MsgPB.MsgClientReConnectToGS.checkText)
}

// optional string msgMd5 = 4;
inline bool MsgClientReConnectToGS::has_msgmd5() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MsgClientReConnectToGS::set_has_msgmd5() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MsgClientReConnectToGS::clear_has_msgmd5() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MsgClientReConnectToGS::clear_msgmd5() {
  if (msgmd5_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    msgmd5_->clear();
  }
  clear_has_msgmd5();
}
inline const ::std::string& MsgClientReConnectToGS::msgmd5() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgClientReConnectToGS.msgMd5)
  return *msgmd5_;
}
inline void MsgClientReConnectToGS::set_msgmd5(const ::std::string& value) {
  set_has_msgmd5();
  if (msgmd5_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    msgmd5_ = new ::std::string;
  }
  msgmd5_->assign(value);
  // @@protoc_insertion_point(field_set:MsgPB.MsgClientReConnectToGS.msgMd5)
}
inline void MsgClientReConnectToGS::set_msgmd5(const char* value) {
  set_has_msgmd5();
  if (msgmd5_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    msgmd5_ = new ::std::string;
  }
  msgmd5_->assign(value);
  // @@protoc_insertion_point(field_set_char:MsgPB.MsgClientReConnectToGS.msgMd5)
}
inline void MsgClientReConnectToGS::set_msgmd5(const char* value, size_t size) {
  set_has_msgmd5();
  if (msgmd5_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    msgmd5_ = new ::std::string;
  }
  msgmd5_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:MsgPB.MsgClientReConnectToGS.msgMd5)
}
inline ::std::string* MsgClientReConnectToGS::mutable_msgmd5() {
  set_has_msgmd5();
  if (msgmd5_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    msgmd5_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:MsgPB.MsgClientReConnectToGS.msgMd5)
  return msgmd5_;
}
inline ::std::string* MsgClientReConnectToGS::release_msgmd5() {
  clear_has_msgmd5();
  if (msgmd5_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = msgmd5_;
    msgmd5_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void MsgClientReConnectToGS::set_allocated_msgmd5(::std::string* msgmd5) {
  if (msgmd5_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete msgmd5_;
  }
  if (msgmd5) {
    set_has_msgmd5();
    msgmd5_ = msgmd5;
  } else {
    clear_has_msgmd5();
    msgmd5_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:MsgPB.MsgClientReConnectToGS.msgMd5)
}

// optional int64 msgLastRecvMsgIndex = 5;
inline bool MsgClientReConnectToGS::has_msglastrecvmsgindex() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void MsgClientReConnectToGS::set_has_msglastrecvmsgindex() {
  _has_bits_[0] |= 0x00000010u;
}
inline void MsgClientReConnectToGS::clear_has_msglastrecvmsgindex() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void MsgClientReConnectToGS::clear_msglastrecvmsgindex() {
  msglastrecvmsgindex_ = GOOGLE_LONGLONG(0);
  clear_has_msglastrecvmsgindex();
}
inline ::google::protobuf::int64 MsgClientReConnectToGS::msglastrecvmsgindex() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgClientReConnectToGS.msgLastRecvMsgIndex)
  return msglastrecvmsgindex_;
}
inline void MsgClientReConnectToGS::set_msglastrecvmsgindex(::google::protobuf::int64 value) {
  set_has_msglastrecvmsgindex();
  msglastrecvmsgindex_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgClientReConnectToGS.msgLastRecvMsgIndex)
}

// optional bool CliendMode = 6 [default = false];
inline bool MsgClientReConnectToGS::has_cliendmode() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void MsgClientReConnectToGS::set_has_cliendmode() {
  _has_bits_[0] |= 0x00000020u;
}
inline void MsgClientReConnectToGS::clear_has_cliendmode() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void MsgClientReConnectToGS::clear_cliendmode() {
  cliendmode_ = false;
  clear_has_cliendmode();
}
inline bool MsgClientReConnectToGS::cliendmode() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgClientReConnectToGS.CliendMode)
  return cliendmode_;
}
inline void MsgClientReConnectToGS::set_cliendmode(bool value) {
  set_has_cliendmode();
  cliendmode_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgClientReConnectToGS.CliendMode)
}

// optional bool UploadData = 7 [default = false];
inline bool MsgClientReConnectToGS::has_uploaddata() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void MsgClientReConnectToGS::set_has_uploaddata() {
  _has_bits_[0] |= 0x00000040u;
}
inline void MsgClientReConnectToGS::clear_has_uploaddata() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void MsgClientReConnectToGS::clear_uploaddata() {
  uploaddata_ = false;
  clear_has_uploaddata();
}
inline bool MsgClientReConnectToGS::uploaddata() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgClientReConnectToGS.UploadData)
  return uploaddata_;
}
inline void MsgClientReConnectToGS::set_uploaddata(bool value) {
  set_has_uploaddata();
  uploaddata_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgClientReConnectToGS.UploadData)
}

// -------------------------------------------------------------------

// MsgServerRecvLastPack

// optional .MsgPB.EMsgType msgType = 1 [default = _MSG_SERVER_RECV_LAST_PACK];
inline bool MsgServerRecvLastPack::has_msgtype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgServerRecvLastPack::set_has_msgtype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgServerRecvLastPack::clear_has_msgtype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgServerRecvLastPack::clear_msgtype() {
  msgtype_ = 1021;
  clear_has_msgtype();
}
inline ::MsgPB::EMsgType MsgServerRecvLastPack::msgtype() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgServerRecvLastPack.msgType)
  return static_cast< ::MsgPB::EMsgType >(msgtype_);
}
inline void MsgServerRecvLastPack::set_msgtype(::MsgPB::EMsgType value) {
  assert(::MsgPB::EMsgType_IsValid(value));
  set_has_msgtype();
  msgtype_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgServerRecvLastPack.msgType)
}

// optional int32 ret = 2;
inline bool MsgServerRecvLastPack::has_ret() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MsgServerRecvLastPack::set_has_ret() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MsgServerRecvLastPack::clear_has_ret() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MsgServerRecvLastPack::clear_ret() {
  ret_ = 0;
  clear_has_ret();
}
inline ::google::protobuf::int32 MsgServerRecvLastPack::ret() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgServerRecvLastPack.ret)
  return ret_;
}
inline void MsgServerRecvLastPack::set_ret(::google::protobuf::int32 value) {
  set_has_ret();
  ret_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgServerRecvLastPack.ret)
}

// optional string msgMd5 = 3;
inline bool MsgServerRecvLastPack::has_msgmd5() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MsgServerRecvLastPack::set_has_msgmd5() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MsgServerRecvLastPack::clear_has_msgmd5() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MsgServerRecvLastPack::clear_msgmd5() {
  if (msgmd5_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    msgmd5_->clear();
  }
  clear_has_msgmd5();
}
inline const ::std::string& MsgServerRecvLastPack::msgmd5() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgServerRecvLastPack.msgMd5)
  return *msgmd5_;
}
inline void MsgServerRecvLastPack::set_msgmd5(const ::std::string& value) {
  set_has_msgmd5();
  if (msgmd5_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    msgmd5_ = new ::std::string;
  }
  msgmd5_->assign(value);
  // @@protoc_insertion_point(field_set:MsgPB.MsgServerRecvLastPack.msgMd5)
}
inline void MsgServerRecvLastPack::set_msgmd5(const char* value) {
  set_has_msgmd5();
  if (msgmd5_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    msgmd5_ = new ::std::string;
  }
  msgmd5_->assign(value);
  // @@protoc_insertion_point(field_set_char:MsgPB.MsgServerRecvLastPack.msgMd5)
}
inline void MsgServerRecvLastPack::set_msgmd5(const char* value, size_t size) {
  set_has_msgmd5();
  if (msgmd5_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    msgmd5_ = new ::std::string;
  }
  msgmd5_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:MsgPB.MsgServerRecvLastPack.msgMd5)
}
inline ::std::string* MsgServerRecvLastPack::mutable_msgmd5() {
  set_has_msgmd5();
  if (msgmd5_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    msgmd5_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:MsgPB.MsgServerRecvLastPack.msgMd5)
  return msgmd5_;
}
inline ::std::string* MsgServerRecvLastPack::release_msgmd5() {
  clear_has_msgmd5();
  if (msgmd5_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = msgmd5_;
    msgmd5_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void MsgServerRecvLastPack::set_allocated_msgmd5(::std::string* msgmd5) {
  if (msgmd5_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete msgmd5_;
  }
  if (msgmd5) {
    set_has_msgmd5();
    msgmd5_ = msgmd5;
  } else {
    clear_has_msgmd5();
    msgmd5_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:MsgPB.MsgServerRecvLastPack.msgMd5)
}

// optional int64 msgLastRecvMsgIndex = 4;
inline bool MsgServerRecvLastPack::has_msglastrecvmsgindex() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MsgServerRecvLastPack::set_has_msglastrecvmsgindex() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MsgServerRecvLastPack::clear_has_msglastrecvmsgindex() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MsgServerRecvLastPack::clear_msglastrecvmsgindex() {
  msglastrecvmsgindex_ = GOOGLE_LONGLONG(0);
  clear_has_msglastrecvmsgindex();
}
inline ::google::protobuf::int64 MsgServerRecvLastPack::msglastrecvmsgindex() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgServerRecvLastPack.msgLastRecvMsgIndex)
  return msglastrecvmsgindex_;
}
inline void MsgServerRecvLastPack::set_msglastrecvmsgindex(::google::protobuf::int64 value) {
  set_has_msglastrecvmsgindex();
  msglastrecvmsgindex_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgServerRecvLastPack.msgLastRecvMsgIndex)
}

// optional int32 loginTime = 5;
inline bool MsgServerRecvLastPack::has_logintime() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void MsgServerRecvLastPack::set_has_logintime() {
  _has_bits_[0] |= 0x00000010u;
}
inline void MsgServerRecvLastPack::clear_has_logintime() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void MsgServerRecvLastPack::clear_logintime() {
  logintime_ = 0;
  clear_has_logintime();
}
inline ::google::protobuf::int32 MsgServerRecvLastPack::logintime() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgServerRecvLastPack.loginTime)
  return logintime_;
}
inline void MsgServerRecvLastPack::set_logintime(::google::protobuf::int32 value) {
  set_has_logintime();
  logintime_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgServerRecvLastPack.loginTime)
}

// optional int32 timeZone = 6;
inline bool MsgServerRecvLastPack::has_timezone() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void MsgServerRecvLastPack::set_has_timezone() {
  _has_bits_[0] |= 0x00000020u;
}
inline void MsgServerRecvLastPack::clear_has_timezone() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void MsgServerRecvLastPack::clear_timezone() {
  timezone_ = 0;
  clear_has_timezone();
}
inline ::google::protobuf::int32 MsgServerRecvLastPack::timezone() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgServerRecvLastPack.timeZone)
  return timezone_;
}
inline void MsgServerRecvLastPack::set_timezone(::google::protobuf::int32 value) {
  set_has_timezone();
  timezone_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgServerRecvLastPack.timeZone)
}

// -------------------------------------------------------------------

// MsgClientLoginIntra

// optional .MsgPB.EMsgType msgType = 1 [default = _MSG_CLIENT_LOGIN_INTRA];
inline bool MsgClientLoginIntra::has_msgtype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgClientLoginIntra::set_has_msgtype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgClientLoginIntra::clear_has_msgtype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgClientLoginIntra::clear_msgtype() {
  msgtype_ = 1019;
  clear_has_msgtype();
}
inline ::MsgPB::EMsgType MsgClientLoginIntra::msgtype() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgClientLoginIntra.msgType)
  return static_cast< ::MsgPB::EMsgType >(msgtype_);
}
inline void MsgClientLoginIntra::set_msgtype(::MsgPB::EMsgType value) {
  assert(::MsgPB::EMsgType_IsValid(value));
  set_has_msgtype();
  msgtype_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgClientLoginIntra.msgType)
}

// optional int64 IggID = 2;
inline bool MsgClientLoginIntra::has_iggid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MsgClientLoginIntra::set_has_iggid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MsgClientLoginIntra::clear_has_iggid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MsgClientLoginIntra::clear_iggid() {
  iggid_ = GOOGLE_LONGLONG(0);
  clear_has_iggid();
}
inline ::google::protobuf::int64 MsgClientLoginIntra::iggid() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgClientLoginIntra.IggID)
  return iggid_;
}
inline void MsgClientLoginIntra::set_iggid(::google::protobuf::int64 value) {
  set_has_iggid();
  iggid_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgClientLoginIntra.IggID)
}

// optional int32 platId = 3;
inline bool MsgClientLoginIntra::has_platid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MsgClientLoginIntra::set_has_platid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MsgClientLoginIntra::clear_has_platid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MsgClientLoginIntra::clear_platid() {
  platid_ = 0;
  clear_has_platid();
}
inline ::google::protobuf::int32 MsgClientLoginIntra::platid() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgClientLoginIntra.platId)
  return platid_;
}
inline void MsgClientLoginIntra::set_platid(::google::protobuf::int32 value) {
  set_has_platid();
  platid_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgClientLoginIntra.platId)
}

// optional string platAccount = 4;
inline bool MsgClientLoginIntra::has_plataccount() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MsgClientLoginIntra::set_has_plataccount() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MsgClientLoginIntra::clear_has_plataccount() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MsgClientLoginIntra::clear_plataccount() {
  if (plataccount_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    plataccount_->clear();
  }
  clear_has_plataccount();
}
inline const ::std::string& MsgClientLoginIntra::plataccount() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgClientLoginIntra.platAccount)
  return *plataccount_;
}
inline void MsgClientLoginIntra::set_plataccount(const ::std::string& value) {
  set_has_plataccount();
  if (plataccount_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    plataccount_ = new ::std::string;
  }
  plataccount_->assign(value);
  // @@protoc_insertion_point(field_set:MsgPB.MsgClientLoginIntra.platAccount)
}
inline void MsgClientLoginIntra::set_plataccount(const char* value) {
  set_has_plataccount();
  if (plataccount_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    plataccount_ = new ::std::string;
  }
  plataccount_->assign(value);
  // @@protoc_insertion_point(field_set_char:MsgPB.MsgClientLoginIntra.platAccount)
}
inline void MsgClientLoginIntra::set_plataccount(const char* value, size_t size) {
  set_has_plataccount();
  if (plataccount_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    plataccount_ = new ::std::string;
  }
  plataccount_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:MsgPB.MsgClientLoginIntra.platAccount)
}
inline ::std::string* MsgClientLoginIntra::mutable_plataccount() {
  set_has_plataccount();
  if (plataccount_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    plataccount_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:MsgPB.MsgClientLoginIntra.platAccount)
  return plataccount_;
}
inline ::std::string* MsgClientLoginIntra::release_plataccount() {
  clear_has_plataccount();
  if (plataccount_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = plataccount_;
    plataccount_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void MsgClientLoginIntra::set_allocated_plataccount(::std::string* plataccount) {
  if (plataccount_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete plataccount_;
  }
  if (plataccount) {
    set_has_plataccount();
    plataccount_ = plataccount;
  } else {
    clear_has_plataccount();
    plataccount_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:MsgPB.MsgClientLoginIntra.platAccount)
}

// optional uint32 area_id = 5;
inline bool MsgClientLoginIntra::has_area_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void MsgClientLoginIntra::set_has_area_id() {
  _has_bits_[0] |= 0x00000010u;
}
inline void MsgClientLoginIntra::clear_has_area_id() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void MsgClientLoginIntra::clear_area_id() {
  area_id_ = 0u;
  clear_has_area_id();
}
inline ::google::protobuf::uint32 MsgClientLoginIntra::area_id() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgClientLoginIntra.area_id)
  return area_id_;
}
inline void MsgClientLoginIntra::set_area_id(::google::protobuf::uint32 value) {
  set_has_area_id();
  area_id_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgClientLoginIntra.area_id)
}

// optional string country_code = 6;
inline bool MsgClientLoginIntra::has_country_code() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void MsgClientLoginIntra::set_has_country_code() {
  _has_bits_[0] |= 0x00000020u;
}
inline void MsgClientLoginIntra::clear_has_country_code() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void MsgClientLoginIntra::clear_country_code() {
  if (country_code_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    country_code_->clear();
  }
  clear_has_country_code();
}
inline const ::std::string& MsgClientLoginIntra::country_code() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgClientLoginIntra.country_code)
  return *country_code_;
}
inline void MsgClientLoginIntra::set_country_code(const ::std::string& value) {
  set_has_country_code();
  if (country_code_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    country_code_ = new ::std::string;
  }
  country_code_->assign(value);
  // @@protoc_insertion_point(field_set:MsgPB.MsgClientLoginIntra.country_code)
}
inline void MsgClientLoginIntra::set_country_code(const char* value) {
  set_has_country_code();
  if (country_code_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    country_code_ = new ::std::string;
  }
  country_code_->assign(value);
  // @@protoc_insertion_point(field_set_char:MsgPB.MsgClientLoginIntra.country_code)
}
inline void MsgClientLoginIntra::set_country_code(const char* value, size_t size) {
  set_has_country_code();
  if (country_code_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    country_code_ = new ::std::string;
  }
  country_code_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:MsgPB.MsgClientLoginIntra.country_code)
}
inline ::std::string* MsgClientLoginIntra::mutable_country_code() {
  set_has_country_code();
  if (country_code_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    country_code_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:MsgPB.MsgClientLoginIntra.country_code)
  return country_code_;
}
inline ::std::string* MsgClientLoginIntra::release_country_code() {
  clear_has_country_code();
  if (country_code_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = country_code_;
    country_code_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void MsgClientLoginIntra::set_allocated_country_code(::std::string* country_code) {
  if (country_code_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete country_code_;
  }
  if (country_code) {
    set_has_country_code();
    country_code_ = country_code;
  } else {
    clear_has_country_code();
    country_code_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:MsgPB.MsgClientLoginIntra.country_code)
}

// -------------------------------------------------------------------

// MsgLoginQueueUpStart

// optional .MsgPB.EMsgType msgType = 1 [default = _MSG_LOGIN_QUEUE_UP_START];
inline bool MsgLoginQueueUpStart::has_msgtype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgLoginQueueUpStart::set_has_msgtype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgLoginQueueUpStart::clear_has_msgtype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgLoginQueueUpStart::clear_msgtype() {
  msgtype_ = 1081;
  clear_has_msgtype();
}
inline ::MsgPB::EMsgType MsgLoginQueueUpStart::msgtype() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgLoginQueueUpStart.msgType)
  return static_cast< ::MsgPB::EMsgType >(msgtype_);
}
inline void MsgLoginQueueUpStart::set_msgtype(::MsgPB::EMsgType value) {
  assert(::MsgPB::EMsgType_IsValid(value));
  set_has_msgtype();
  msgtype_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgLoginQueueUpStart.msgType)
}

// optional int64 IggID = 2;
inline bool MsgLoginQueueUpStart::has_iggid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MsgLoginQueueUpStart::set_has_iggid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MsgLoginQueueUpStart::clear_has_iggid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MsgLoginQueueUpStart::clear_iggid() {
  iggid_ = GOOGLE_LONGLONG(0);
  clear_has_iggid();
}
inline ::google::protobuf::int64 MsgLoginQueueUpStart::iggid() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgLoginQueueUpStart.IggID)
  return iggid_;
}
inline void MsgLoginQueueUpStart::set_iggid(::google::protobuf::int64 value) {
  set_has_iggid();
  iggid_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgLoginQueueUpStart.IggID)
}

// -------------------------------------------------------------------

// MsgLoginQueueUpInfoIntra_LoginQueueUpInfo

// optional int64 IggID = 1;
inline bool MsgLoginQueueUpInfoIntra_LoginQueueUpInfo::has_iggid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgLoginQueueUpInfoIntra_LoginQueueUpInfo::set_has_iggid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgLoginQueueUpInfoIntra_LoginQueueUpInfo::clear_has_iggid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgLoginQueueUpInfoIntra_LoginQueueUpInfo::clear_iggid() {
  iggid_ = GOOGLE_LONGLONG(0);
  clear_has_iggid();
}
inline ::google::protobuf::int64 MsgLoginQueueUpInfoIntra_LoginQueueUpInfo::iggid() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgLoginQueueUpInfoIntra.LoginQueueUpInfo.IggID)
  return iggid_;
}
inline void MsgLoginQueueUpInfoIntra_LoginQueueUpInfo::set_iggid(::google::protobuf::int64 value) {
  set_has_iggid();
  iggid_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgLoginQueueUpInfoIntra.LoginQueueUpInfo.IggID)
}

// optional int32 curPos = 2;
inline bool MsgLoginQueueUpInfoIntra_LoginQueueUpInfo::has_curpos() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MsgLoginQueueUpInfoIntra_LoginQueueUpInfo::set_has_curpos() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MsgLoginQueueUpInfoIntra_LoginQueueUpInfo::clear_has_curpos() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MsgLoginQueueUpInfoIntra_LoginQueueUpInfo::clear_curpos() {
  curpos_ = 0;
  clear_has_curpos();
}
inline ::google::protobuf::int32 MsgLoginQueueUpInfoIntra_LoginQueueUpInfo::curpos() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgLoginQueueUpInfoIntra.LoginQueueUpInfo.curPos)
  return curpos_;
}
inline void MsgLoginQueueUpInfoIntra_LoginQueueUpInfo::set_curpos(::google::protobuf::int32 value) {
  set_has_curpos();
  curpos_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgLoginQueueUpInfoIntra.LoginQueueUpInfo.curPos)
}

// -------------------------------------------------------------------

// MsgLoginQueueUpInfoIntra

// optional .MsgPB.EMsgType msgType = 1 [default = _MSG_LOGIN_QUEUE_UP_INFO_INTRA];
inline bool MsgLoginQueueUpInfoIntra::has_msgtype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgLoginQueueUpInfoIntra::set_has_msgtype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgLoginQueueUpInfoIntra::clear_has_msgtype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgLoginQueueUpInfoIntra::clear_msgtype() {
  msgtype_ = 1083;
  clear_has_msgtype();
}
inline ::MsgPB::EMsgType MsgLoginQueueUpInfoIntra::msgtype() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgLoginQueueUpInfoIntra.msgType)
  return static_cast< ::MsgPB::EMsgType >(msgtype_);
}
inline void MsgLoginQueueUpInfoIntra::set_msgtype(::MsgPB::EMsgType value) {
  assert(::MsgPB::EMsgType_IsValid(value));
  set_has_msgtype();
  msgtype_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgLoginQueueUpInfoIntra.msgType)
}

// repeated .MsgPB.MsgLoginQueueUpInfoIntra.LoginQueueUpInfo LoginQueueInfo = 2;
inline int MsgLoginQueueUpInfoIntra::loginqueueinfo_size() const {
  return loginqueueinfo_.size();
}
inline void MsgLoginQueueUpInfoIntra::clear_loginqueueinfo() {
  loginqueueinfo_.Clear();
}
inline const ::MsgPB::MsgLoginQueueUpInfoIntra_LoginQueueUpInfo& MsgLoginQueueUpInfoIntra::loginqueueinfo(int index) const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgLoginQueueUpInfoIntra.LoginQueueInfo)
  return loginqueueinfo_.Get(index);
}
inline ::MsgPB::MsgLoginQueueUpInfoIntra_LoginQueueUpInfo* MsgLoginQueueUpInfoIntra::mutable_loginqueueinfo(int index) {
  // @@protoc_insertion_point(field_mutable:MsgPB.MsgLoginQueueUpInfoIntra.LoginQueueInfo)
  return loginqueueinfo_.Mutable(index);
}
inline ::MsgPB::MsgLoginQueueUpInfoIntra_LoginQueueUpInfo* MsgLoginQueueUpInfoIntra::add_loginqueueinfo() {
  // @@protoc_insertion_point(field_add:MsgPB.MsgLoginQueueUpInfoIntra.LoginQueueInfo)
  return loginqueueinfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::MsgPB::MsgLoginQueueUpInfoIntra_LoginQueueUpInfo >&
MsgLoginQueueUpInfoIntra::loginqueueinfo() const {
  // @@protoc_insertion_point(field_list:MsgPB.MsgLoginQueueUpInfoIntra.LoginQueueInfo)
  return loginqueueinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::MsgPB::MsgLoginQueueUpInfoIntra_LoginQueueUpInfo >*
MsgLoginQueueUpInfoIntra::mutable_loginqueueinfo() {
  // @@protoc_insertion_point(field_mutable_list:MsgPB.MsgLoginQueueUpInfoIntra.LoginQueueInfo)
  return &loginqueueinfo_;
}

// -------------------------------------------------------------------

// MsgNotifyUserDisconnLoginSvr

// optional .MsgPB.EMsgType msgType = 1 [default = _MSG_NOTIFY_USER_DISCONN_LOGIN_SVR];
inline bool MsgNotifyUserDisconnLoginSvr::has_msgtype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgNotifyUserDisconnLoginSvr::set_has_msgtype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgNotifyUserDisconnLoginSvr::clear_has_msgtype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgNotifyUserDisconnLoginSvr::clear_msgtype() {
  msgtype_ = 1082;
  clear_has_msgtype();
}
inline ::MsgPB::EMsgType MsgNotifyUserDisconnLoginSvr::msgtype() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgNotifyUserDisconnLoginSvr.msgType)
  return static_cast< ::MsgPB::EMsgType >(msgtype_);
}
inline void MsgNotifyUserDisconnLoginSvr::set_msgtype(::MsgPB::EMsgType value) {
  assert(::MsgPB::EMsgType_IsValid(value));
  set_has_msgtype();
  msgtype_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgNotifyUserDisconnLoginSvr.msgType)
}

// repeated int64 IggID = 2;
inline int MsgNotifyUserDisconnLoginSvr::iggid_size() const {
  return iggid_.size();
}
inline void MsgNotifyUserDisconnLoginSvr::clear_iggid() {
  iggid_.Clear();
}
inline ::google::protobuf::int64 MsgNotifyUserDisconnLoginSvr::iggid(int index) const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgNotifyUserDisconnLoginSvr.IggID)
  return iggid_.Get(index);
}
inline void MsgNotifyUserDisconnLoginSvr::set_iggid(int index, ::google::protobuf::int64 value) {
  iggid_.Set(index, value);
  // @@protoc_insertion_point(field_set:MsgPB.MsgNotifyUserDisconnLoginSvr.IggID)
}
inline void MsgNotifyUserDisconnLoginSvr::add_iggid(::google::protobuf::int64 value) {
  iggid_.Add(value);
  // @@protoc_insertion_point(field_add:MsgPB.MsgNotifyUserDisconnLoginSvr.IggID)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
MsgNotifyUserDisconnLoginSvr::iggid() const {
  // @@protoc_insertion_point(field_list:MsgPB.MsgNotifyUserDisconnLoginSvr.IggID)
  return iggid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
MsgNotifyUserDisconnLoginSvr::mutable_iggid() {
  // @@protoc_insertion_point(field_mutable_list:MsgPB.MsgNotifyUserDisconnLoginSvr.IggID)
  return &iggid_;
}

// -------------------------------------------------------------------

// MsgLoginServerValidate

// optional .MsgPB.EMsgType msgType = 1 [default = _MSG_LOGIN_SERVER_VALIDATE];
inline bool MsgLoginServerValidate::has_msgtype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgLoginServerValidate::set_has_msgtype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgLoginServerValidate::clear_has_msgtype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgLoginServerValidate::clear_msgtype() {
  msgtype_ = 1020;
  clear_has_msgtype();
}
inline ::MsgPB::EMsgType MsgLoginServerValidate::msgtype() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgLoginServerValidate.msgType)
  return static_cast< ::MsgPB::EMsgType >(msgtype_);
}
inline void MsgLoginServerValidate::set_msgtype(::MsgPB::EMsgType value) {
  assert(::MsgPB::EMsgType_IsValid(value));
  set_has_msgtype();
  msgtype_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgLoginServerValidate.msgType)
}

// optional int64 IggID = 2;
inline bool MsgLoginServerValidate::has_iggid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MsgLoginServerValidate::set_has_iggid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MsgLoginServerValidate::clear_has_iggid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MsgLoginServerValidate::clear_iggid() {
  iggid_ = GOOGLE_LONGLONG(0);
  clear_has_iggid();
}
inline ::google::protobuf::int64 MsgLoginServerValidate::iggid() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgLoginServerValidate.IggID)
  return iggid_;
}
inline void MsgLoginServerValidate::set_iggid(::google::protobuf::int64 value) {
  set_has_iggid();
  iggid_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgLoginServerValidate.IggID)
}

// optional string checkText = 3;
inline bool MsgLoginServerValidate::has_checktext() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MsgLoginServerValidate::set_has_checktext() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MsgLoginServerValidate::clear_has_checktext() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MsgLoginServerValidate::clear_checktext() {
  if (checktext_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    checktext_->clear();
  }
  clear_has_checktext();
}
inline const ::std::string& MsgLoginServerValidate::checktext() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgLoginServerValidate.checkText)
  return *checktext_;
}
inline void MsgLoginServerValidate::set_checktext(const ::std::string& value) {
  set_has_checktext();
  if (checktext_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    checktext_ = new ::std::string;
  }
  checktext_->assign(value);
  // @@protoc_insertion_point(field_set:MsgPB.MsgLoginServerValidate.checkText)
}
inline void MsgLoginServerValidate::set_checktext(const char* value) {
  set_has_checktext();
  if (checktext_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    checktext_ = new ::std::string;
  }
  checktext_->assign(value);
  // @@protoc_insertion_point(field_set_char:MsgPB.MsgLoginServerValidate.checkText)
}
inline void MsgLoginServerValidate::set_checktext(const char* value, size_t size) {
  set_has_checktext();
  if (checktext_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    checktext_ = new ::std::string;
  }
  checktext_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:MsgPB.MsgLoginServerValidate.checkText)
}
inline ::std::string* MsgLoginServerValidate::mutable_checktext() {
  set_has_checktext();
  if (checktext_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    checktext_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:MsgPB.MsgLoginServerValidate.checkText)
  return checktext_;
}
inline ::std::string* MsgLoginServerValidate::release_checktext() {
  clear_has_checktext();
  if (checktext_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = checktext_;
    checktext_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void MsgLoginServerValidate::set_allocated_checktext(::std::string* checktext) {
  if (checktext_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete checktext_;
  }
  if (checktext) {
    set_has_checktext();
    checktext_ = checktext;
  } else {
    clear_has_checktext();
    checktext_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:MsgPB.MsgLoginServerValidate.checkText)
}

// optional int32 platId = 4;
inline bool MsgLoginServerValidate::has_platid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MsgLoginServerValidate::set_has_platid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MsgLoginServerValidate::clear_has_platid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MsgLoginServerValidate::clear_platid() {
  platid_ = 0;
  clear_has_platid();
}
inline ::google::protobuf::int32 MsgLoginServerValidate::platid() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgLoginServerValidate.platId)
  return platid_;
}
inline void MsgLoginServerValidate::set_platid(::google::protobuf::int32 value) {
  set_has_platid();
  platid_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgLoginServerValidate.platId)
}

// optional string platAccount = 5;
inline bool MsgLoginServerValidate::has_plataccount() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void MsgLoginServerValidate::set_has_plataccount() {
  _has_bits_[0] |= 0x00000010u;
}
inline void MsgLoginServerValidate::clear_has_plataccount() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void MsgLoginServerValidate::clear_plataccount() {
  if (plataccount_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    plataccount_->clear();
  }
  clear_has_plataccount();
}
inline const ::std::string& MsgLoginServerValidate::plataccount() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgLoginServerValidate.platAccount)
  return *plataccount_;
}
inline void MsgLoginServerValidate::set_plataccount(const ::std::string& value) {
  set_has_plataccount();
  if (plataccount_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    plataccount_ = new ::std::string;
  }
  plataccount_->assign(value);
  // @@protoc_insertion_point(field_set:MsgPB.MsgLoginServerValidate.platAccount)
}
inline void MsgLoginServerValidate::set_plataccount(const char* value) {
  set_has_plataccount();
  if (plataccount_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    plataccount_ = new ::std::string;
  }
  plataccount_->assign(value);
  // @@protoc_insertion_point(field_set_char:MsgPB.MsgLoginServerValidate.platAccount)
}
inline void MsgLoginServerValidate::set_plataccount(const char* value, size_t size) {
  set_has_plataccount();
  if (plataccount_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    plataccount_ = new ::std::string;
  }
  plataccount_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:MsgPB.MsgLoginServerValidate.platAccount)
}
inline ::std::string* MsgLoginServerValidate::mutable_plataccount() {
  set_has_plataccount();
  if (plataccount_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    plataccount_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:MsgPB.MsgLoginServerValidate.platAccount)
  return plataccount_;
}
inline ::std::string* MsgLoginServerValidate::release_plataccount() {
  clear_has_plataccount();
  if (plataccount_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = plataccount_;
    plataccount_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void MsgLoginServerValidate::set_allocated_plataccount(::std::string* plataccount) {
  if (plataccount_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete plataccount_;
  }
  if (plataccount) {
    set_has_plataccount();
    plataccount_ = plataccount;
  } else {
    clear_has_plataccount();
    plataccount_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:MsgPB.MsgLoginServerValidate.platAccount)
}

// optional string dbkey = 6;
inline bool MsgLoginServerValidate::has_dbkey() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void MsgLoginServerValidate::set_has_dbkey() {
  _has_bits_[0] |= 0x00000020u;
}
inline void MsgLoginServerValidate::clear_has_dbkey() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void MsgLoginServerValidate::clear_dbkey() {
  if (dbkey_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    dbkey_->clear();
  }
  clear_has_dbkey();
}
inline const ::std::string& MsgLoginServerValidate::dbkey() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgLoginServerValidate.dbkey)
  return *dbkey_;
}
inline void MsgLoginServerValidate::set_dbkey(const ::std::string& value) {
  set_has_dbkey();
  if (dbkey_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    dbkey_ = new ::std::string;
  }
  dbkey_->assign(value);
  // @@protoc_insertion_point(field_set:MsgPB.MsgLoginServerValidate.dbkey)
}
inline void MsgLoginServerValidate::set_dbkey(const char* value) {
  set_has_dbkey();
  if (dbkey_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    dbkey_ = new ::std::string;
  }
  dbkey_->assign(value);
  // @@protoc_insertion_point(field_set_char:MsgPB.MsgLoginServerValidate.dbkey)
}
inline void MsgLoginServerValidate::set_dbkey(const char* value, size_t size) {
  set_has_dbkey();
  if (dbkey_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    dbkey_ = new ::std::string;
  }
  dbkey_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:MsgPB.MsgLoginServerValidate.dbkey)
}
inline ::std::string* MsgLoginServerValidate::mutable_dbkey() {
  set_has_dbkey();
  if (dbkey_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    dbkey_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:MsgPB.MsgLoginServerValidate.dbkey)
  return dbkey_;
}
inline ::std::string* MsgLoginServerValidate::release_dbkey() {
  clear_has_dbkey();
  if (dbkey_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = dbkey_;
    dbkey_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void MsgLoginServerValidate::set_allocated_dbkey(::std::string* dbkey) {
  if (dbkey_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete dbkey_;
  }
  if (dbkey) {
    set_has_dbkey();
    dbkey_ = dbkey;
  } else {
    clear_has_dbkey();
    dbkey_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:MsgPB.MsgLoginServerValidate.dbkey)
}

// optional int32 gs_id = 7;
inline bool MsgLoginServerValidate::has_gs_id() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void MsgLoginServerValidate::set_has_gs_id() {
  _has_bits_[0] |= 0x00000040u;
}
inline void MsgLoginServerValidate::clear_has_gs_id() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void MsgLoginServerValidate::clear_gs_id() {
  gs_id_ = 0;
  clear_has_gs_id();
}
inline ::google::protobuf::int32 MsgLoginServerValidate::gs_id() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgLoginServerValidate.gs_id)
  return gs_id_;
}
inline void MsgLoginServerValidate::set_gs_id(::google::protobuf::int32 value) {
  set_has_gs_id();
  gs_id_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgLoginServerValidate.gs_id)
}

// optional int32 original_area_id = 8;
inline bool MsgLoginServerValidate::has_original_area_id() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void MsgLoginServerValidate::set_has_original_area_id() {
  _has_bits_[0] |= 0x00000080u;
}
inline void MsgLoginServerValidate::clear_has_original_area_id() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void MsgLoginServerValidate::clear_original_area_id() {
  original_area_id_ = 0;
  clear_has_original_area_id();
}
inline ::google::protobuf::int32 MsgLoginServerValidate::original_area_id() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgLoginServerValidate.original_area_id)
  return original_area_id_;
}
inline void MsgLoginServerValidate::set_original_area_id(::google::protobuf::int32 value) {
  set_has_original_area_id();
  original_area_id_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgLoginServerValidate.original_area_id)
}

// optional string country_code = 9;
inline bool MsgLoginServerValidate::has_country_code() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void MsgLoginServerValidate::set_has_country_code() {
  _has_bits_[0] |= 0x00000100u;
}
inline void MsgLoginServerValidate::clear_has_country_code() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void MsgLoginServerValidate::clear_country_code() {
  if (country_code_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    country_code_->clear();
  }
  clear_has_country_code();
}
inline const ::std::string& MsgLoginServerValidate::country_code() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgLoginServerValidate.country_code)
  return *country_code_;
}
inline void MsgLoginServerValidate::set_country_code(const ::std::string& value) {
  set_has_country_code();
  if (country_code_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    country_code_ = new ::std::string;
  }
  country_code_->assign(value);
  // @@protoc_insertion_point(field_set:MsgPB.MsgLoginServerValidate.country_code)
}
inline void MsgLoginServerValidate::set_country_code(const char* value) {
  set_has_country_code();
  if (country_code_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    country_code_ = new ::std::string;
  }
  country_code_->assign(value);
  // @@protoc_insertion_point(field_set_char:MsgPB.MsgLoginServerValidate.country_code)
}
inline void MsgLoginServerValidate::set_country_code(const char* value, size_t size) {
  set_has_country_code();
  if (country_code_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    country_code_ = new ::std::string;
  }
  country_code_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:MsgPB.MsgLoginServerValidate.country_code)
}
inline ::std::string* MsgLoginServerValidate::mutable_country_code() {
  set_has_country_code();
  if (country_code_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    country_code_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:MsgPB.MsgLoginServerValidate.country_code)
  return country_code_;
}
inline ::std::string* MsgLoginServerValidate::release_country_code() {
  clear_has_country_code();
  if (country_code_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = country_code_;
    country_code_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void MsgLoginServerValidate::set_allocated_country_code(::std::string* country_code) {
  if (country_code_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete country_code_;
  }
  if (country_code) {
    set_has_country_code();
    country_code_ = country_code;
  } else {
    clear_has_country_code();
    country_code_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:MsgPB.MsgLoginServerValidate.country_code)
}

// -------------------------------------------------------------------

// MsgPlayerLoginSuccess_MGRS_TO_OTHER

// optional .MsgPB.EMsgType msgType = 1 [default = _MSG_PLAYER_LOGIN_SUCCESS_MGRS_TO_OTHER];
inline bool MsgPlayerLoginSuccess_MGRS_TO_OTHER::has_msgtype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgPlayerLoginSuccess_MGRS_TO_OTHER::set_has_msgtype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgPlayerLoginSuccess_MGRS_TO_OTHER::clear_has_msgtype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgPlayerLoginSuccess_MGRS_TO_OTHER::clear_msgtype() {
  msgtype_ = 1158;
  clear_has_msgtype();
}
inline ::MsgPB::EMsgType MsgPlayerLoginSuccess_MGRS_TO_OTHER::msgtype() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgPlayerLoginSuccess_MGRS_TO_OTHER.msgType)
  return static_cast< ::MsgPB::EMsgType >(msgtype_);
}
inline void MsgPlayerLoginSuccess_MGRS_TO_OTHER::set_msgtype(::MsgPB::EMsgType value) {
  assert(::MsgPB::EMsgType_IsValid(value));
  set_has_msgtype();
  msgtype_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgPlayerLoginSuccess_MGRS_TO_OTHER.msgType)
}

// optional int64 iggid = 2;
inline bool MsgPlayerLoginSuccess_MGRS_TO_OTHER::has_iggid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MsgPlayerLoginSuccess_MGRS_TO_OTHER::set_has_iggid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MsgPlayerLoginSuccess_MGRS_TO_OTHER::clear_has_iggid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MsgPlayerLoginSuccess_MGRS_TO_OTHER::clear_iggid() {
  iggid_ = GOOGLE_LONGLONG(0);
  clear_has_iggid();
}
inline ::google::protobuf::int64 MsgPlayerLoginSuccess_MGRS_TO_OTHER::iggid() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgPlayerLoginSuccess_MGRS_TO_OTHER.iggid)
  return iggid_;
}
inline void MsgPlayerLoginSuccess_MGRS_TO_OTHER::set_iggid(::google::protobuf::int64 value) {
  set_has_iggid();
  iggid_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgPlayerLoginSuccess_MGRS_TO_OTHER.iggid)
}

// optional string dbkey = 3;
inline bool MsgPlayerLoginSuccess_MGRS_TO_OTHER::has_dbkey() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MsgPlayerLoginSuccess_MGRS_TO_OTHER::set_has_dbkey() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MsgPlayerLoginSuccess_MGRS_TO_OTHER::clear_has_dbkey() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MsgPlayerLoginSuccess_MGRS_TO_OTHER::clear_dbkey() {
  if (dbkey_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    dbkey_->clear();
  }
  clear_has_dbkey();
}
inline const ::std::string& MsgPlayerLoginSuccess_MGRS_TO_OTHER::dbkey() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgPlayerLoginSuccess_MGRS_TO_OTHER.dbkey)
  return *dbkey_;
}
inline void MsgPlayerLoginSuccess_MGRS_TO_OTHER::set_dbkey(const ::std::string& value) {
  set_has_dbkey();
  if (dbkey_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    dbkey_ = new ::std::string;
  }
  dbkey_->assign(value);
  // @@protoc_insertion_point(field_set:MsgPB.MsgPlayerLoginSuccess_MGRS_TO_OTHER.dbkey)
}
inline void MsgPlayerLoginSuccess_MGRS_TO_OTHER::set_dbkey(const char* value) {
  set_has_dbkey();
  if (dbkey_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    dbkey_ = new ::std::string;
  }
  dbkey_->assign(value);
  // @@protoc_insertion_point(field_set_char:MsgPB.MsgPlayerLoginSuccess_MGRS_TO_OTHER.dbkey)
}
inline void MsgPlayerLoginSuccess_MGRS_TO_OTHER::set_dbkey(const char* value, size_t size) {
  set_has_dbkey();
  if (dbkey_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    dbkey_ = new ::std::string;
  }
  dbkey_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:MsgPB.MsgPlayerLoginSuccess_MGRS_TO_OTHER.dbkey)
}
inline ::std::string* MsgPlayerLoginSuccess_MGRS_TO_OTHER::mutable_dbkey() {
  set_has_dbkey();
  if (dbkey_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    dbkey_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:MsgPB.MsgPlayerLoginSuccess_MGRS_TO_OTHER.dbkey)
  return dbkey_;
}
inline ::std::string* MsgPlayerLoginSuccess_MGRS_TO_OTHER::release_dbkey() {
  clear_has_dbkey();
  if (dbkey_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = dbkey_;
    dbkey_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void MsgPlayerLoginSuccess_MGRS_TO_OTHER::set_allocated_dbkey(::std::string* dbkey) {
  if (dbkey_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete dbkey_;
  }
  if (dbkey) {
    set_has_dbkey();
    dbkey_ = dbkey;
  } else {
    clear_has_dbkey();
    dbkey_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:MsgPB.MsgPlayerLoginSuccess_MGRS_TO_OTHER.dbkey)
}

// optional string nickname = 4;
inline bool MsgPlayerLoginSuccess_MGRS_TO_OTHER::has_nickname() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MsgPlayerLoginSuccess_MGRS_TO_OTHER::set_has_nickname() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MsgPlayerLoginSuccess_MGRS_TO_OTHER::clear_has_nickname() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MsgPlayerLoginSuccess_MGRS_TO_OTHER::clear_nickname() {
  if (nickname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    nickname_->clear();
  }
  clear_has_nickname();
}
inline const ::std::string& MsgPlayerLoginSuccess_MGRS_TO_OTHER::nickname() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgPlayerLoginSuccess_MGRS_TO_OTHER.nickname)
  return *nickname_;
}
inline void MsgPlayerLoginSuccess_MGRS_TO_OTHER::set_nickname(const ::std::string& value) {
  set_has_nickname();
  if (nickname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    nickname_ = new ::std::string;
  }
  nickname_->assign(value);
  // @@protoc_insertion_point(field_set:MsgPB.MsgPlayerLoginSuccess_MGRS_TO_OTHER.nickname)
}
inline void MsgPlayerLoginSuccess_MGRS_TO_OTHER::set_nickname(const char* value) {
  set_has_nickname();
  if (nickname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    nickname_ = new ::std::string;
  }
  nickname_->assign(value);
  // @@protoc_insertion_point(field_set_char:MsgPB.MsgPlayerLoginSuccess_MGRS_TO_OTHER.nickname)
}
inline void MsgPlayerLoginSuccess_MGRS_TO_OTHER::set_nickname(const char* value, size_t size) {
  set_has_nickname();
  if (nickname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    nickname_ = new ::std::string;
  }
  nickname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:MsgPB.MsgPlayerLoginSuccess_MGRS_TO_OTHER.nickname)
}
inline ::std::string* MsgPlayerLoginSuccess_MGRS_TO_OTHER::mutable_nickname() {
  set_has_nickname();
  if (nickname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    nickname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:MsgPB.MsgPlayerLoginSuccess_MGRS_TO_OTHER.nickname)
  return nickname_;
}
inline ::std::string* MsgPlayerLoginSuccess_MGRS_TO_OTHER::release_nickname() {
  clear_has_nickname();
  if (nickname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = nickname_;
    nickname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void MsgPlayerLoginSuccess_MGRS_TO_OTHER::set_allocated_nickname(::std::string* nickname) {
  if (nickname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete nickname_;
  }
  if (nickname) {
    set_has_nickname();
    nickname_ = nickname;
  } else {
    clear_has_nickname();
    nickname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:MsgPB.MsgPlayerLoginSuccess_MGRS_TO_OTHER.nickname)
}

// -------------------------------------------------------------------

// MsgDeleteAccountC2S

// optional .MsgPB.EMsgType msgType = 1 [default = _MSG_DELETE_ACCOUNT_C2S];
inline bool MsgDeleteAccountC2S::has_msgtype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgDeleteAccountC2S::set_has_msgtype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgDeleteAccountC2S::clear_has_msgtype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgDeleteAccountC2S::clear_msgtype() {
  msgtype_ = 1142;
  clear_has_msgtype();
}
inline ::MsgPB::EMsgType MsgDeleteAccountC2S::msgtype() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgDeleteAccountC2S.msgType)
  return static_cast< ::MsgPB::EMsgType >(msgtype_);
}
inline void MsgDeleteAccountC2S::set_msgtype(::MsgPB::EMsgType value) {
  assert(::MsgPB::EMsgType_IsValid(value));
  set_has_msgtype();
  msgtype_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgDeleteAccountC2S.msgType)
}

// optional int64 iggid = 2;
inline bool MsgDeleteAccountC2S::has_iggid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MsgDeleteAccountC2S::set_has_iggid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MsgDeleteAccountC2S::clear_has_iggid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MsgDeleteAccountC2S::clear_iggid() {
  iggid_ = GOOGLE_LONGLONG(0);
  clear_has_iggid();
}
inline ::google::protobuf::int64 MsgDeleteAccountC2S::iggid() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgDeleteAccountC2S.iggid)
  return iggid_;
}
inline void MsgDeleteAccountC2S::set_iggid(::google::protobuf::int64 value) {
  set_has_iggid();
  iggid_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgDeleteAccountC2S.iggid)
}

// -------------------------------------------------------------------

// MsgDeleteAccountS2C

// optional .MsgPB.EMsgType msgType = 1 [default = _MSG_DELETE_ACCOUNT_S2C];
inline bool MsgDeleteAccountS2C::has_msgtype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgDeleteAccountS2C::set_has_msgtype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgDeleteAccountS2C::clear_has_msgtype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgDeleteAccountS2C::clear_msgtype() {
  msgtype_ = 1143;
  clear_has_msgtype();
}
inline ::MsgPB::EMsgType MsgDeleteAccountS2C::msgtype() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgDeleteAccountS2C.msgType)
  return static_cast< ::MsgPB::EMsgType >(msgtype_);
}
inline void MsgDeleteAccountS2C::set_msgtype(::MsgPB::EMsgType value) {
  assert(::MsgPB::EMsgType_IsValid(value));
  set_has_msgtype();
  msgtype_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgDeleteAccountS2C.msgType)
}

// optional int64 iggid = 2;
inline bool MsgDeleteAccountS2C::has_iggid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MsgDeleteAccountS2C::set_has_iggid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MsgDeleteAccountS2C::clear_has_iggid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MsgDeleteAccountS2C::clear_iggid() {
  iggid_ = GOOGLE_LONGLONG(0);
  clear_has_iggid();
}
inline ::google::protobuf::int64 MsgDeleteAccountS2C::iggid() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgDeleteAccountS2C.iggid)
  return iggid_;
}
inline void MsgDeleteAccountS2C::set_iggid(::google::protobuf::int64 value) {
  set_has_iggid();
  iggid_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgDeleteAccountS2C.iggid)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace MsgPB

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::MsgPB::LOGIN_QUEUE_UP_ACTION> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::MsgPB::LOGIN_QUEUE_UP_ACTION>() {
  return ::MsgPB::LOGIN_QUEUE_UP_ACTION_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_MsgLogin_2eproto__INCLUDED
