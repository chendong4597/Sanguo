// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MsgMail.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "MsgMail.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace MsgPB {

namespace {

const ::google::protobuf::Descriptor* MsgMailData_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgMailData_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgMailPackageData_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgMailPackageData_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgMailComplete_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgMailComplete_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgMailNotifyS2C_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgMailNotifyS2C_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgMailReceiveC2S_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgMailReceiveC2S_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgMailReceiveResultS2C_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgMailReceiveResultS2C_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgMailReadC2S_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgMailReadC2S_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgMailReadResultS2C_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgMailReadResultS2C_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* MsgMailReadResultS2C_RESULT_descriptor_ = NULL;
const ::google::protobuf::Descriptor* MsgMailClaimC2S_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgMailClaimC2S_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgMailClaimResultS2C_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgMailClaimResultS2C_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* MsgMailClaimResultS2C_RESULT_descriptor_ = NULL;
const ::google::protobuf::Descriptor* MsgMailDeleteC2S_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgMailDeleteC2S_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgMailDeleteResultS2C_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgMailDeleteResultS2C_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* MsgMailDeleteResultS2C_RESULT_descriptor_ = NULL;
const ::google::protobuf::Descriptor* MsgMailSyncS2S_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgMailSyncS2S_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* MsgMailSyncS2S_MODE_descriptor_ = NULL;
const ::google::protobuf::Descriptor* MsgMailMapLoadS2S_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgMailMapLoadS2S_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgMailMapDelS2S_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgMailMapDelS2S_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgMailGetNewCountS2S_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgMailGetNewCountS2S_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgMailGetNewCountResultS2S_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgMailGetNewCountResultS2S_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgMailTemplateGet_C2S_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgMailTemplateGet_C2S_reflection_ = NULL;
const ::google::protobuf::Descriptor* MailTemplateInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MailTemplateInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgMailTemplate_S2C_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgMailTemplate_S2C_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgMailTemplate_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgMailTemplate_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgMailTemplateChange_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgMailTemplateChange_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgMailTemplateCreate_S2S_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgMailTemplateCreate_S2S_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* MAIL_RECEIVE_TYPE_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_MsgMail_2eproto() {
  protobuf_AddDesc_MsgMail_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "MsgMail.proto");
  GOOGLE_CHECK(file != NULL);
  MsgMailData_descriptor_ = file->message_type(0);
  static const int MsgMailData_offsets_[13] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMailData, uuid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMailData, sender_iggid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMailData, sender_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMailData, recipient_iggid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMailData, title_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMailData, content_text_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMailData, status_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMailData, create_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMailData, expiration_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMailData, coin_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMailData, ticket_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMailData, cash_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMailData, template_id_),
  };
  MsgMailData_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgMailData_descriptor_,
      MsgMailData::default_instance_,
      MsgMailData_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMailData, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMailData, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgMailData));
  MsgMailPackageData_descriptor_ = file->message_type(1);
  static const int MsgMailPackageData_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMailPackageData, uuid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMailPackageData, recipient_iggid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMailPackageData, mail_uuid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMailPackageData, item_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMailPackageData, new_item_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMailPackageData, expiration_time_),
  };
  MsgMailPackageData_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgMailPackageData_descriptor_,
      MsgMailPackageData::default_instance_,
      MsgMailPackageData_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMailPackageData, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMailPackageData, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgMailPackageData));
  MsgMailComplete_descriptor_ = file->message_type(2);
  static const int MsgMailComplete_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMailComplete, main_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMailComplete, package_),
  };
  MsgMailComplete_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgMailComplete_descriptor_,
      MsgMailComplete::default_instance_,
      MsgMailComplete_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMailComplete, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMailComplete, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgMailComplete));
  MsgMailNotifyS2C_descriptor_ = file->message_type(3);
  static const int MsgMailNotifyS2C_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMailNotifyS2C, msgtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMailNotifyS2C, unread_count_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMailNotifyS2C, iggid_),
  };
  MsgMailNotifyS2C_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgMailNotifyS2C_descriptor_,
      MsgMailNotifyS2C::default_instance_,
      MsgMailNotifyS2C_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMailNotifyS2C, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMailNotifyS2C, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgMailNotifyS2C));
  MsgMailReceiveC2S_descriptor_ = file->message_type(4);
  static const int MsgMailReceiveC2S_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMailReceiveC2S, msgtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMailReceiveC2S, iggid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMailReceiveC2S, timestamp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMailReceiveC2S, receive_type_),
  };
  MsgMailReceiveC2S_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgMailReceiveC2S_descriptor_,
      MsgMailReceiveC2S::default_instance_,
      MsgMailReceiveC2S_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMailReceiveC2S, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMailReceiveC2S, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgMailReceiveC2S));
  MsgMailReceiveResultS2C_descriptor_ = file->message_type(5);
  static const int MsgMailReceiveResultS2C_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMailReceiveResultS2C, msgtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMailReceiveResultS2C, timestamp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMailReceiveResultS2C, complete_mail_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMailReceiveResultS2C, receive_type_),
  };
  MsgMailReceiveResultS2C_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgMailReceiveResultS2C_descriptor_,
      MsgMailReceiveResultS2C::default_instance_,
      MsgMailReceiveResultS2C_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMailReceiveResultS2C, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMailReceiveResultS2C, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgMailReceiveResultS2C));
  MsgMailReadC2S_descriptor_ = file->message_type(6);
  static const int MsgMailReadC2S_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMailReadC2S, msgtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMailReadC2S, iggid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMailReadC2S, mail_uuid_),
  };
  MsgMailReadC2S_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgMailReadC2S_descriptor_,
      MsgMailReadC2S::default_instance_,
      MsgMailReadC2S_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMailReadC2S, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMailReadC2S, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgMailReadC2S));
  MsgMailReadResultS2C_descriptor_ = file->message_type(7);
  static const int MsgMailReadResultS2C_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMailReadResultS2C, msgtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMailReadResultS2C, result_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMailReadResultS2C, mail_uuid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMailReadResultS2C, status_),
  };
  MsgMailReadResultS2C_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgMailReadResultS2C_descriptor_,
      MsgMailReadResultS2C::default_instance_,
      MsgMailReadResultS2C_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMailReadResultS2C, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMailReadResultS2C, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgMailReadResultS2C));
  MsgMailReadResultS2C_RESULT_descriptor_ = MsgMailReadResultS2C_descriptor_->enum_type(0);
  MsgMailClaimC2S_descriptor_ = file->message_type(8);
  static const int MsgMailClaimC2S_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMailClaimC2S, msgtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMailClaimC2S, iggid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMailClaimC2S, mail_uuids_),
  };
  MsgMailClaimC2S_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgMailClaimC2S_descriptor_,
      MsgMailClaimC2S::default_instance_,
      MsgMailClaimC2S_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMailClaimC2S, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMailClaimC2S, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgMailClaimC2S));
  MsgMailClaimResultS2C_descriptor_ = file->message_type(9);
  static const int MsgMailClaimResultS2C_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMailClaimResultS2C, msgtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMailClaimResultS2C, result_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMailClaimResultS2C, coin_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMailClaimResultS2C, ticket_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMailClaimResultS2C, cash_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMailClaimResultS2C, item_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMailClaimResultS2C, mail_uuids_),
  };
  MsgMailClaimResultS2C_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgMailClaimResultS2C_descriptor_,
      MsgMailClaimResultS2C::default_instance_,
      MsgMailClaimResultS2C_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMailClaimResultS2C, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMailClaimResultS2C, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgMailClaimResultS2C));
  MsgMailClaimResultS2C_RESULT_descriptor_ = MsgMailClaimResultS2C_descriptor_->enum_type(0);
  MsgMailDeleteC2S_descriptor_ = file->message_type(10);
  static const int MsgMailDeleteC2S_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMailDeleteC2S, msgtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMailDeleteC2S, iggid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMailDeleteC2S, mail_uuids_),
  };
  MsgMailDeleteC2S_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgMailDeleteC2S_descriptor_,
      MsgMailDeleteC2S::default_instance_,
      MsgMailDeleteC2S_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMailDeleteC2S, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMailDeleteC2S, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgMailDeleteC2S));
  MsgMailDeleteResultS2C_descriptor_ = file->message_type(11);
  static const int MsgMailDeleteResultS2C_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMailDeleteResultS2C, msgtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMailDeleteResultS2C, result_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMailDeleteResultS2C, mail_uuids_),
  };
  MsgMailDeleteResultS2C_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgMailDeleteResultS2C_descriptor_,
      MsgMailDeleteResultS2C::default_instance_,
      MsgMailDeleteResultS2C_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMailDeleteResultS2C, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMailDeleteResultS2C, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgMailDeleteResultS2C));
  MsgMailDeleteResultS2C_RESULT_descriptor_ = MsgMailDeleteResultS2C_descriptor_->enum_type(0);
  MsgMailSyncS2S_descriptor_ = file->message_type(12);
  static const int MsgMailSyncS2S_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMailSyncS2S, msgtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMailSyncS2S, mode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMailSyncS2S, complete_mail_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMailSyncS2S, iggid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMailSyncS2S, timestamp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMailSyncS2S, receive_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMailSyncS2S, end_flag_),
  };
  MsgMailSyncS2S_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgMailSyncS2S_descriptor_,
      MsgMailSyncS2S::default_instance_,
      MsgMailSyncS2S_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMailSyncS2S, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMailSyncS2S, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgMailSyncS2S));
  MsgMailSyncS2S_MODE_descriptor_ = MsgMailSyncS2S_descriptor_->enum_type(0);
  MsgMailMapLoadS2S_descriptor_ = file->message_type(13);
  static const int MsgMailMapLoadS2S_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMailMapLoadS2S, msgtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMailMapLoadS2S, iggid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMailMapLoadS2S, timestamp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMailMapLoadS2S, receive_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMailMapLoadS2S, ms_mails_),
  };
  MsgMailMapLoadS2S_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgMailMapLoadS2S_descriptor_,
      MsgMailMapLoadS2S::default_instance_,
      MsgMailMapLoadS2S_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMailMapLoadS2S, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMailMapLoadS2S, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgMailMapLoadS2S));
  MsgMailMapDelS2S_descriptor_ = file->message_type(14);
  static const int MsgMailMapDelS2S_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMailMapDelS2S, msgtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMailMapDelS2S, mail_uuids_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMailMapDelS2S, iggid_),
  };
  MsgMailMapDelS2S_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgMailMapDelS2S_descriptor_,
      MsgMailMapDelS2S::default_instance_,
      MsgMailMapDelS2S_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMailMapDelS2S, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMailMapDelS2S, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgMailMapDelS2S));
  MsgMailGetNewCountS2S_descriptor_ = file->message_type(15);
  static const int MsgMailGetNewCountS2S_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMailGetNewCountS2S, msgtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMailGetNewCountS2S, iggid_),
  };
  MsgMailGetNewCountS2S_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgMailGetNewCountS2S_descriptor_,
      MsgMailGetNewCountS2S::default_instance_,
      MsgMailGetNewCountS2S_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMailGetNewCountS2S, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMailGetNewCountS2S, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgMailGetNewCountS2S));
  MsgMailGetNewCountResultS2S_descriptor_ = file->message_type(16);
  static const int MsgMailGetNewCountResultS2S_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMailGetNewCountResultS2S, msgtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMailGetNewCountResultS2S, count_),
  };
  MsgMailGetNewCountResultS2S_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgMailGetNewCountResultS2S_descriptor_,
      MsgMailGetNewCountResultS2S::default_instance_,
      MsgMailGetNewCountResultS2S_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMailGetNewCountResultS2S, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMailGetNewCountResultS2S, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgMailGetNewCountResultS2S));
  MsgMailTemplateGet_C2S_descriptor_ = file->message_type(17);
  static const int MsgMailTemplateGet_C2S_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMailTemplateGet_C2S, msgtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMailTemplateGet_C2S, iggid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMailTemplateGet_C2S, mail_template_id_),
  };
  MsgMailTemplateGet_C2S_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgMailTemplateGet_C2S_descriptor_,
      MsgMailTemplateGet_C2S::default_instance_,
      MsgMailTemplateGet_C2S_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMailTemplateGet_C2S, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMailTemplateGet_C2S, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgMailTemplateGet_C2S));
  MailTemplateInfo_descriptor_ = file->message_type(18);
  static const int MailTemplateInfo_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MailTemplateInfo, mail_template_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MailTemplateInfo, mail_template_),
  };
  MailTemplateInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MailTemplateInfo_descriptor_,
      MailTemplateInfo::default_instance_,
      MailTemplateInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MailTemplateInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MailTemplateInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MailTemplateInfo));
  MsgMailTemplate_S2C_descriptor_ = file->message_type(19);
  static const int MsgMailTemplate_S2C_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMailTemplate_S2C, msgtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMailTemplate_S2C, iggid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMailTemplate_S2C, mail_template_),
  };
  MsgMailTemplate_S2C_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgMailTemplate_S2C_descriptor_,
      MsgMailTemplate_S2C::default_instance_,
      MsgMailTemplate_S2C_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMailTemplate_S2C, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMailTemplate_S2C, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgMailTemplate_S2C));
  MsgMailTemplate_descriptor_ = file->message_type(20);
  static const int MsgMailTemplate_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMailTemplate, msgtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMailTemplate, mail_template_),
  };
  MsgMailTemplate_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgMailTemplate_descriptor_,
      MsgMailTemplate::default_instance_,
      MsgMailTemplate_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMailTemplate, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMailTemplate, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgMailTemplate));
  MsgMailTemplateChange_descriptor_ = file->message_type(21);
  static const int MsgMailTemplateChange_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMailTemplateChange, msgtype_),
  };
  MsgMailTemplateChange_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgMailTemplateChange_descriptor_,
      MsgMailTemplateChange::default_instance_,
      MsgMailTemplateChange_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMailTemplateChange, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMailTemplateChange, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgMailTemplateChange));
  MsgMailTemplateCreate_S2S_descriptor_ = file->message_type(22);
  static const int MsgMailTemplateCreate_S2S_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMailTemplateCreate_S2S, msgtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMailTemplateCreate_S2S, mail_template_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMailTemplateCreate_S2S, iggid_),
  };
  MsgMailTemplateCreate_S2S_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgMailTemplateCreate_S2S_descriptor_,
      MsgMailTemplateCreate_S2S::default_instance_,
      MsgMailTemplateCreate_S2S_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMailTemplateCreate_S2S, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMailTemplateCreate_S2S, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgMailTemplateCreate_S2S));
  MAIL_RECEIVE_TYPE_descriptor_ = file->enum_type(0);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_MsgMail_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgMailData_descriptor_, &MsgMailData::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgMailPackageData_descriptor_, &MsgMailPackageData::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgMailComplete_descriptor_, &MsgMailComplete::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgMailNotifyS2C_descriptor_, &MsgMailNotifyS2C::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgMailReceiveC2S_descriptor_, &MsgMailReceiveC2S::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgMailReceiveResultS2C_descriptor_, &MsgMailReceiveResultS2C::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgMailReadC2S_descriptor_, &MsgMailReadC2S::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgMailReadResultS2C_descriptor_, &MsgMailReadResultS2C::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgMailClaimC2S_descriptor_, &MsgMailClaimC2S::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgMailClaimResultS2C_descriptor_, &MsgMailClaimResultS2C::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgMailDeleteC2S_descriptor_, &MsgMailDeleteC2S::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgMailDeleteResultS2C_descriptor_, &MsgMailDeleteResultS2C::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgMailSyncS2S_descriptor_, &MsgMailSyncS2S::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgMailMapLoadS2S_descriptor_, &MsgMailMapLoadS2S::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgMailMapDelS2S_descriptor_, &MsgMailMapDelS2S::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgMailGetNewCountS2S_descriptor_, &MsgMailGetNewCountS2S::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgMailGetNewCountResultS2S_descriptor_, &MsgMailGetNewCountResultS2S::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgMailTemplateGet_C2S_descriptor_, &MsgMailTemplateGet_C2S::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MailTemplateInfo_descriptor_, &MailTemplateInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgMailTemplate_S2C_descriptor_, &MsgMailTemplate_S2C::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgMailTemplate_descriptor_, &MsgMailTemplate::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgMailTemplateChange_descriptor_, &MsgMailTemplateChange::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgMailTemplateCreate_S2S_descriptor_, &MsgMailTemplateCreate_S2S::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_MsgMail_2eproto() {
  delete MsgMailData::default_instance_;
  delete MsgMailData_reflection_;
  delete MsgMailPackageData::default_instance_;
  delete MsgMailPackageData_reflection_;
  delete MsgMailComplete::default_instance_;
  delete MsgMailComplete_reflection_;
  delete MsgMailNotifyS2C::default_instance_;
  delete MsgMailNotifyS2C_reflection_;
  delete MsgMailReceiveC2S::default_instance_;
  delete MsgMailReceiveC2S_reflection_;
  delete MsgMailReceiveResultS2C::default_instance_;
  delete MsgMailReceiveResultS2C_reflection_;
  delete MsgMailReadC2S::default_instance_;
  delete MsgMailReadC2S_reflection_;
  delete MsgMailReadResultS2C::default_instance_;
  delete MsgMailReadResultS2C_reflection_;
  delete MsgMailClaimC2S::default_instance_;
  delete MsgMailClaimC2S_reflection_;
  delete MsgMailClaimResultS2C::default_instance_;
  delete MsgMailClaimResultS2C_reflection_;
  delete MsgMailDeleteC2S::default_instance_;
  delete MsgMailDeleteC2S_reflection_;
  delete MsgMailDeleteResultS2C::default_instance_;
  delete MsgMailDeleteResultS2C_reflection_;
  delete MsgMailSyncS2S::default_instance_;
  delete MsgMailSyncS2S_reflection_;
  delete MsgMailMapLoadS2S::default_instance_;
  delete MsgMailMapLoadS2S_reflection_;
  delete MsgMailMapDelS2S::default_instance_;
  delete MsgMailMapDelS2S_reflection_;
  delete MsgMailGetNewCountS2S::default_instance_;
  delete MsgMailGetNewCountS2S_reflection_;
  delete MsgMailGetNewCountResultS2S::default_instance_;
  delete MsgMailGetNewCountResultS2S_reflection_;
  delete MsgMailTemplateGet_C2S::default_instance_;
  delete MsgMailTemplateGet_C2S_reflection_;
  delete MailTemplateInfo::default_instance_;
  delete MailTemplateInfo_reflection_;
  delete MsgMailTemplate_S2C::default_instance_;
  delete MsgMailTemplate_S2C_reflection_;
  delete MsgMailTemplate::default_instance_;
  delete MsgMailTemplate_reflection_;
  delete MsgMailTemplateChange::default_instance_;
  delete MsgMailTemplateChange_reflection_;
  delete MsgMailTemplateCreate_S2S::default_instance_;
  delete MsgMailTemplateCreate_S2S_reflection_;
}

void protobuf_AddDesc_MsgMail_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::MsgPB::protobuf_AddDesc_MsgType_2eproto();
  ::MsgPB::protobuf_AddDesc_MsgGameDef_2eproto();
  ::MsgPB::protobuf_AddDesc_MsgItem_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\rMsgMail.proto\022\005MsgPB\032\rMsgType.proto\032\020M"
    "sgGameDef.proto\032\rMsgItem.proto\"\227\002\n\013MsgMa"
    "ilData\022\014\n\004uuid\030\001 \001(\003\022\024\n\014sender_iggid\030\002 \001"
    "(\003\022\023\n\013sender_name\030\003 \001(\t\022\027\n\017recipient_igg"
    "id\030\004 \001(\003\022\r\n\005title\030\005 \001(\t\022\024\n\014content_text\030"
    "\006 \001(\t\022\"\n\006status\030\007 \001(\0162\022.MsgPB.MAIL_STATU"
    "S\022\023\n\013create_time\030\010 \001(\003\022\027\n\017expiration_tim"
    "e\030\t \001(\003\022\014\n\004coin\030\n \001(\005\022\016\n\006ticket\030\013 \001(\005\022\014\n"
    "\004cash\030\014 \001(\005\022\023\n\013template_id\030\r \001(\005\"\241\001\n\022Msg"
    "MailPackageData\022\014\n\004uuid\030\001 \001(\003\022\027\n\017recipie"
    "nt_iggid\030\002 \001(\003\022\021\n\tmail_uuid\030\003 \001(\003\022&\n\004ite"
    "m\030\004 \001(\0132\030.MsgPB.MsgItemCommonData\022\020\n\010new"
    "_item\030\005 \001(\010\022\027\n\017expiration_time\030\006 \001(\003\"_\n\017"
    "MsgMailComplete\022 \n\004main\030\001 \001(\0132\022.MsgPB.Ms"
    "gMailData\022*\n\007package\030\002 \003(\0132\031.MsgPB.MsgMa"
    "ilPackageData\"o\n\020MsgMailNotifyS2C\0226\n\007msg"
    "Type\030\001 \001(\0162\017.MsgPB.EMsgType:\024_MSG_MAIL_N"
    "OTIFY_S2C\022\024\n\014unread_count\030\002 \001(\005\022\r\n\005iggid"
    "\030\003 \001(\003\"\236\001\n\021MsgMailReceiveC2S\0227\n\007msgType\030"
    "\001 \001(\0162\017.MsgPB.EMsgType:\025_MSG_MAIL_RECEIV"
    "E_C2S\022\r\n\005iggid\030\002 \001(\003\022\021\n\ttimestamp\030\003 \001(\003\022"
    ".\n\014receive_type\030\004 \001(\0162\030.MsgPB.MAIL_RECEI"
    "VE_TYPE\"\313\001\n\027MsgMailReceiveResultS2C\022>\n\007m"
    "sgType\030\001 \001(\0162\017.MsgPB.EMsgType:\034_MSG_MAIL"
    "_RECEIVE_RESULT_S2C\022\021\n\ttimestamp\030\002 \001(\003\022-"
    "\n\rcomplete_mail\030\003 \003(\0132\026.MsgPB.MsgMailCom"
    "plete\022.\n\014receive_type\030\004 \001(\0162\030.MsgPB.MAIL"
    "_RECEIVE_TYPE\"h\n\016MsgMailReadC2S\0224\n\007msgTy"
    "pe\030\001 \001(\0162\017.MsgPB.EMsgType:\022_MSG_MAIL_REA"
    "D_C2S\022\r\n\005iggid\030\002 \001(\003\022\021\n\tmail_uuid\030\003 \001(\003\""
    "\353\001\n\024MsgMailReadResultS2C\022;\n\007msgType\030\001 \001("
    "\0162\017.MsgPB.EMsgType:\031_MSG_MAIL_READ_RESUL"
    "T_S2C\0222\n\006result\030\002 \001(\0162\".MsgPB.MsgMailRea"
    "dResultS2C.RESULT\022\021\n\tmail_uuid\030\003 \001(\003\022\"\n\006"
    "status\030\004 \001(\0162\022.MsgPB.MAIL_STATUS\"+\n\006RESU"
    "LT\022\024\n\007FAILURE\020\377\377\377\377\377\377\377\377\377\001\022\013\n\007SUCCESS\020\000\"\203\001"
    "\n\017MsgMailClaimC2S\0225\n\007msgType\030\001 \001(\0162\017.Msg"
    "PB.EMsgType:\023_MSG_MAIL_CLAIM_C2S\022\r\n\005iggi"
    "d\030\002 \001(\003\022*\n\nmail_uuids\030\003 \003(\0132\026.MsgPB.MsgR"
    "epeatedUUID\"\356\003\n\025MsgMailClaimResultS2C\022<\n"
    "\007msgType\030\001 \001(\0162\017.MsgPB.EMsgType:\032_MSG_MA"
    "IL_CLAIM_RESULT_S2C\0223\n\006result\030\002 \001(\0162#.Ms"
    "gPB.MsgMailClaimResultS2C.RESULT\022\014\n\004coin"
    "\030\003 \001(\005\022\016\n\006ticket\030\004 \001(\005\022\014\n\004cash\030\005 \001(\005\022\037\n\004"
    "item\030\006 \003(\0132\021.MsgPB.ItemReward\022*\n\nmail_uu"
    "ids\030\007 \003(\0132\026.MsgPB.MsgRepeatedUUID\"\350\001\n\006RE"
    "SULT\022\024\n\007FAILURE\020\377\377\377\377\377\377\377\377\377\001\022\013\n\007SUCCESS\020\000\022"
    "\022\n\016PACKET_IS_FULL\020\003\022\030\n\024CLAIM_MAIL_NO_PLA"
    "YER\020\004\022\032\n\026CLAIM_MAIL_BAD_REQUEST\020\005\022\036\n\032CLA"
    "IM_MAIL_NO_ITEMAPPAKCET\020\006\022\026\n\022CLAIM_MAIL_"
    "NO_MAIL\020\007\022\033\n\027CLAIM_MAIL_NO_MAIL_DATA\020\010\022\034"
    "\n\030CLAIM_MAIL_ALREADY_CLAIM\020\t\"\205\001\n\020MsgMail"
    "DeleteC2S\0226\n\007msgType\030\001 \001(\0162\017.MsgPB.EMsgT"
    "ype:\024_MSG_MAIL_DELETE_C2S\022\r\n\005iggid\030\002 \001(\003"
    "\022*\n\nmail_uuids\030\003 \003(\0132\026.MsgPB.MsgRepeated"
    "UUID\"\366\001\n\026MsgMailDeleteResultS2C\022=\n\007msgTy"
    "pe\030\001 \001(\0162\017.MsgPB.EMsgType:\033_MSG_MAIL_DEL"
    "ETE_RESULT_S2C\0224\n\006result\030\002 \001(\0162$.MsgPB.M"
    "sgMailDeleteResultS2C.RESULT\022*\n\nmail_uui"
    "ds\030\003 \003(\0132\026.MsgPB.MsgRepeatedUUID\";\n\006RESU"
    "LT\022\024\n\007FAILURE\020\377\377\377\377\377\377\377\377\377\001\022\013\n\007SUCCESS\020\000\022\016\n"
    "\nHAS_PACKET\020\001\"\263\002\n\016MsgMailSyncS2S\0224\n\007msgT"
    "ype\030\001 \001(\0162\017.MsgPB.EMsgType:\022_MSG_MAIL_SY"
    "NC_S2C\022(\n\004mode\030\002 \001(\0162\032.MsgPB.MsgMailSync"
    "S2S.MODE\022-\n\rcomplete_mail\030\003 \003(\0132\026.MsgPB."
    "MsgMailComplete\022\r\n\005iggid\030\004 \001(\003\022\021\n\ttimest"
    "amp\030\005 \001(\003\022.\n\014receive_type\030\006 \001(\0162\030.MsgPB."
    "MAIL_RECEIVE_TYPE\022\020\n\010end_flag\030\007 \001(\010\".\n\004M"
    "ODE\022\007\n\003NEW\020\000\022\014\n\010MAP_SYNC\020\001\022\017\n\013LOAD_RESUL"
    "T\020\002\"\261\001\n\021MsgMailMapLoadS2S\0228\n\007msgType\030\001 \001"
    "(\0162\017.MsgPB.EMsgType:\026_MSG_MAIL_MAP_LOAD_"
    "S2C\022\r\n\005iggid\030\002 \001(\003\022\021\n\ttimestamp\030\003 \001(\003\022.\n"
    "\014receive_type\030\004 \001(\0162\030.MsgPB.MAIL_RECEIVE"
    "_TYPE\022\020\n\010ms_mails\030\005 \003(\003\"\206\001\n\020MsgMailMapDe"
    "lS2S\0227\n\007msgType\030\001 \001(\0162\017.MsgPB.EMsgType:\025"
    "_MSG_MAIL_MAP_DEL_S2C\022*\n\nmail_uuids\030\002 \003("
    "\0132\026.MsgPB.MsgRepeatedUUID\022\r\n\005iggid\030\003 \001(\003"
    "\"e\n\025MsgMailGetNewCountS2S\022=\n\007msgType\030\001 \001"
    "(\0162\017.MsgPB.EMsgType:\033_MSG_MAIL_GET_NEW_C"
    "OUNT_S2C\022\r\n\005iggid\030\002 \001(\003\"r\n\033MsgMailGetNew"
    "CountResultS2S\022D\n\007msgType\030\001 \001(\0162\017.MsgPB."
    "EMsgType:\"_MSG_MAIL_GET_NEW_COUNT_RESULT"
    "_S2C\022\r\n\005count\030\002 \001(\005\"\177\n\026MsgMailTemplateGe"
    "t_C2S\022<\n\007msgType\030\001 \001(\0162\017.MsgPB.EMsgType:"
    "\032_MSG_MAIL_TEMPLATE_GET_C2S\022\r\n\005iggid\030\002 \001"
    "(\003\022\030\n\020mail_template_id\030\003 \003(\005\"C\n\020MailTemp"
    "lateInfo\022\030\n\020mail_template_id\030\001 \001(\005\022\025\n\rma"
    "il_template\030\002 \001(\t\"\216\001\n\023MsgMailTemplate_S2"
    "C\0228\n\007msgType\030\001 \001(\0162\017.MsgPB.EMsgType:\026_MS"
    "G_MAIL_TEMPLATE_S2C\022\r\n\005iggid\030\002 \001(\003\022.\n\rma"
    "il_template\030\003 \003(\0132\027.MsgPB.MailTemplateIn"
    "fo\"w\n\017MsgMailTemplate\0224\n\007msgType\030\001 \001(\0162\017"
    ".MsgPB.EMsgType:\022_MSG_MAIL_TEMPLATE\022.\n\rm"
    "ail_template\030\003 \003(\0132\027.MsgPB.MailTemplateI"
    "nfo\"T\n\025MsgMailTemplateChange\022;\n\007msgType\030"
    "\001 \001(\0162\017.MsgPB.EMsgType:\031_MSG_MAIL_TEMPLA"
    "TE_CHANGE\"\205\001\n\031MsgMailTemplateCreate_S2S\022"
    "\?\n\007msgType\030\001 \001(\0162\017.MsgPB.EMsgType:\035_MSG_"
    "MAIL_TEMPLATE_CREATE_S2S\022\030\n\020mail_templat"
    "e_id\030\002 \001(\005\022\r\n\005iggid\030\003 \003(\003*I\n\021MAIL_RECEIV"
    "E_TYPE\022\031\n\025MAIL_RECEIVE_TYPE_ALL\020\001\022\031\n\025MAI"
    "L_RECEIVE_TYPE_NEW\020\002", 4060);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "MsgMail.proto", &protobuf_RegisterTypes);
  MsgMailData::default_instance_ = new MsgMailData();
  MsgMailPackageData::default_instance_ = new MsgMailPackageData();
  MsgMailComplete::default_instance_ = new MsgMailComplete();
  MsgMailNotifyS2C::default_instance_ = new MsgMailNotifyS2C();
  MsgMailReceiveC2S::default_instance_ = new MsgMailReceiveC2S();
  MsgMailReceiveResultS2C::default_instance_ = new MsgMailReceiveResultS2C();
  MsgMailReadC2S::default_instance_ = new MsgMailReadC2S();
  MsgMailReadResultS2C::default_instance_ = new MsgMailReadResultS2C();
  MsgMailClaimC2S::default_instance_ = new MsgMailClaimC2S();
  MsgMailClaimResultS2C::default_instance_ = new MsgMailClaimResultS2C();
  MsgMailDeleteC2S::default_instance_ = new MsgMailDeleteC2S();
  MsgMailDeleteResultS2C::default_instance_ = new MsgMailDeleteResultS2C();
  MsgMailSyncS2S::default_instance_ = new MsgMailSyncS2S();
  MsgMailMapLoadS2S::default_instance_ = new MsgMailMapLoadS2S();
  MsgMailMapDelS2S::default_instance_ = new MsgMailMapDelS2S();
  MsgMailGetNewCountS2S::default_instance_ = new MsgMailGetNewCountS2S();
  MsgMailGetNewCountResultS2S::default_instance_ = new MsgMailGetNewCountResultS2S();
  MsgMailTemplateGet_C2S::default_instance_ = new MsgMailTemplateGet_C2S();
  MailTemplateInfo::default_instance_ = new MailTemplateInfo();
  MsgMailTemplate_S2C::default_instance_ = new MsgMailTemplate_S2C();
  MsgMailTemplate::default_instance_ = new MsgMailTemplate();
  MsgMailTemplateChange::default_instance_ = new MsgMailTemplateChange();
  MsgMailTemplateCreate_S2S::default_instance_ = new MsgMailTemplateCreate_S2S();
  MsgMailData::default_instance_->InitAsDefaultInstance();
  MsgMailPackageData::default_instance_->InitAsDefaultInstance();
  MsgMailComplete::default_instance_->InitAsDefaultInstance();
  MsgMailNotifyS2C::default_instance_->InitAsDefaultInstance();
  MsgMailReceiveC2S::default_instance_->InitAsDefaultInstance();
  MsgMailReceiveResultS2C::default_instance_->InitAsDefaultInstance();
  MsgMailReadC2S::default_instance_->InitAsDefaultInstance();
  MsgMailReadResultS2C::default_instance_->InitAsDefaultInstance();
  MsgMailClaimC2S::default_instance_->InitAsDefaultInstance();
  MsgMailClaimResultS2C::default_instance_->InitAsDefaultInstance();
  MsgMailDeleteC2S::default_instance_->InitAsDefaultInstance();
  MsgMailDeleteResultS2C::default_instance_->InitAsDefaultInstance();
  MsgMailSyncS2S::default_instance_->InitAsDefaultInstance();
  MsgMailMapLoadS2S::default_instance_->InitAsDefaultInstance();
  MsgMailMapDelS2S::default_instance_->InitAsDefaultInstance();
  MsgMailGetNewCountS2S::default_instance_->InitAsDefaultInstance();
  MsgMailGetNewCountResultS2S::default_instance_->InitAsDefaultInstance();
  MsgMailTemplateGet_C2S::default_instance_->InitAsDefaultInstance();
  MailTemplateInfo::default_instance_->InitAsDefaultInstance();
  MsgMailTemplate_S2C::default_instance_->InitAsDefaultInstance();
  MsgMailTemplate::default_instance_->InitAsDefaultInstance();
  MsgMailTemplateChange::default_instance_->InitAsDefaultInstance();
  MsgMailTemplateCreate_S2S::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_MsgMail_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_MsgMail_2eproto {
  StaticDescriptorInitializer_MsgMail_2eproto() {
    protobuf_AddDesc_MsgMail_2eproto();
  }
} static_descriptor_initializer_MsgMail_2eproto_;
const ::google::protobuf::EnumDescriptor* MAIL_RECEIVE_TYPE_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MAIL_RECEIVE_TYPE_descriptor_;
}
bool MAIL_RECEIVE_TYPE_IsValid(int value) {
  switch(value) {
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#ifndef _MSC_VER
const int MsgMailData::kUuidFieldNumber;
const int MsgMailData::kSenderIggidFieldNumber;
const int MsgMailData::kSenderNameFieldNumber;
const int MsgMailData::kRecipientIggidFieldNumber;
const int MsgMailData::kTitleFieldNumber;
const int MsgMailData::kContentTextFieldNumber;
const int MsgMailData::kStatusFieldNumber;
const int MsgMailData::kCreateTimeFieldNumber;
const int MsgMailData::kExpirationTimeFieldNumber;
const int MsgMailData::kCoinFieldNumber;
const int MsgMailData::kTicketFieldNumber;
const int MsgMailData::kCashFieldNumber;
const int MsgMailData::kTemplateIdFieldNumber;
#endif  // !_MSC_VER

MsgMailData::MsgMailData()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.MsgMailData)
}

void MsgMailData::InitAsDefaultInstance() {
}

MsgMailData::MsgMailData(const MsgMailData& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.MsgMailData)
}

void MsgMailData::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  uuid_ = GOOGLE_LONGLONG(0);
  sender_iggid_ = GOOGLE_LONGLONG(0);
  sender_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  recipient_iggid_ = GOOGLE_LONGLONG(0);
  title_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  content_text_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  status_ = 0;
  create_time_ = GOOGLE_LONGLONG(0);
  expiration_time_ = GOOGLE_LONGLONG(0);
  coin_ = 0;
  ticket_ = 0;
  cash_ = 0;
  template_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgMailData::~MsgMailData() {
  // @@protoc_insertion_point(destructor:MsgPB.MsgMailData)
  SharedDtor();
}

void MsgMailData::SharedDtor() {
  if (sender_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete sender_name_;
  }
  if (title_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete title_;
  }
  if (content_text_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete content_text_;
  }
  if (this != default_instance_) {
  }
}

void MsgMailData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgMailData::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgMailData_descriptor_;
}

const MsgMailData& MsgMailData::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgMail_2eproto();
  return *default_instance_;
}

MsgMailData* MsgMailData::default_instance_ = NULL;

MsgMailData* MsgMailData::New() const {
  return new MsgMailData;
}

void MsgMailData::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<MsgMailData*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 255) {
    ZR_(uuid_, sender_iggid_);
    ZR_(create_time_, status_);
    if (has_sender_name()) {
      if (sender_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        sender_name_->clear();
      }
    }
    recipient_iggid_ = GOOGLE_LONGLONG(0);
    if (has_title()) {
      if (title_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        title_->clear();
      }
    }
    if (has_content_text()) {
      if (content_text_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        content_text_->clear();
      }
    }
  }
  if (_has_bits_[8 / 32] & 7936) {
    ZR_(coin_, template_id_);
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgMailData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.MsgMailData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 uuid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &uuid_)));
          set_has_uuid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_sender_iggid;
        break;
      }

      // optional int64 sender_iggid = 2;
      case 2: {
        if (tag == 16) {
         parse_sender_iggid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &sender_iggid_)));
          set_has_sender_iggid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_sender_name;
        break;
      }

      // optional string sender_name = 3;
      case 3: {
        if (tag == 26) {
         parse_sender_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sender_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->sender_name().data(), this->sender_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "sender_name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_recipient_iggid;
        break;
      }

      // optional int64 recipient_iggid = 4;
      case 4: {
        if (tag == 32) {
         parse_recipient_iggid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &recipient_iggid_)));
          set_has_recipient_iggid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_title;
        break;
      }

      // optional string title = 5;
      case 5: {
        if (tag == 42) {
         parse_title:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_title()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->title().data(), this->title().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "title");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_content_text;
        break;
      }

      // optional string content_text = 6;
      case 6: {
        if (tag == 50) {
         parse_content_text:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_content_text()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->content_text().data(), this->content_text().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "content_text");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_status;
        break;
      }

      // optional .MsgPB.MAIL_STATUS status = 7;
      case 7: {
        if (tag == 56) {
         parse_status:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::MAIL_STATUS_IsValid(value)) {
            set_status(static_cast< ::MsgPB::MAIL_STATUS >(value));
          } else {
            mutable_unknown_fields()->AddVarint(7, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_create_time;
        break;
      }

      // optional int64 create_time = 8;
      case 8: {
        if (tag == 64) {
         parse_create_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &create_time_)));
          set_has_create_time();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_expiration_time;
        break;
      }

      // optional int64 expiration_time = 9;
      case 9: {
        if (tag == 72) {
         parse_expiration_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &expiration_time_)));
          set_has_expiration_time();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(80)) goto parse_coin;
        break;
      }

      // optional int32 coin = 10;
      case 10: {
        if (tag == 80) {
         parse_coin:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &coin_)));
          set_has_coin();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(88)) goto parse_ticket;
        break;
      }

      // optional int32 ticket = 11;
      case 11: {
        if (tag == 88) {
         parse_ticket:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ticket_)));
          set_has_ticket();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(96)) goto parse_cash;
        break;
      }

      // optional int32 cash = 12;
      case 12: {
        if (tag == 96) {
         parse_cash:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cash_)));
          set_has_cash();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(104)) goto parse_template_id;
        break;
      }

      // optional int32 template_id = 13;
      case 13: {
        if (tag == 104) {
         parse_template_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &template_id_)));
          set_has_template_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.MsgMailData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.MsgMailData)
  return false;
#undef DO_
}

void MsgMailData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.MsgMailData)
  // optional int64 uuid = 1;
  if (has_uuid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->uuid(), output);
  }

  // optional int64 sender_iggid = 2;
  if (has_sender_iggid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->sender_iggid(), output);
  }

  // optional string sender_name = 3;
  if (has_sender_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sender_name().data(), this->sender_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "sender_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->sender_name(), output);
  }

  // optional int64 recipient_iggid = 4;
  if (has_recipient_iggid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->recipient_iggid(), output);
  }

  // optional string title = 5;
  if (has_title()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->title().data(), this->title().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "title");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->title(), output);
  }

  // optional string content_text = 6;
  if (has_content_text()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->content_text().data(), this->content_text().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "content_text");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->content_text(), output);
  }

  // optional .MsgPB.MAIL_STATUS status = 7;
  if (has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      7, this->status(), output);
  }

  // optional int64 create_time = 8;
  if (has_create_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(8, this->create_time(), output);
  }

  // optional int64 expiration_time = 9;
  if (has_expiration_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(9, this->expiration_time(), output);
  }

  // optional int32 coin = 10;
  if (has_coin()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->coin(), output);
  }

  // optional int32 ticket = 11;
  if (has_ticket()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->ticket(), output);
  }

  // optional int32 cash = 12;
  if (has_cash()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(12, this->cash(), output);
  }

  // optional int32 template_id = 13;
  if (has_template_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(13, this->template_id(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.MsgMailData)
}

::google::protobuf::uint8* MsgMailData::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.MsgMailData)
  // optional int64 uuid = 1;
  if (has_uuid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->uuid(), target);
  }

  // optional int64 sender_iggid = 2;
  if (has_sender_iggid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->sender_iggid(), target);
  }

  // optional string sender_name = 3;
  if (has_sender_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sender_name().data(), this->sender_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "sender_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->sender_name(), target);
  }

  // optional int64 recipient_iggid = 4;
  if (has_recipient_iggid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->recipient_iggid(), target);
  }

  // optional string title = 5;
  if (has_title()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->title().data(), this->title().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "title");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->title(), target);
  }

  // optional string content_text = 6;
  if (has_content_text()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->content_text().data(), this->content_text().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "content_text");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->content_text(), target);
  }

  // optional .MsgPB.MAIL_STATUS status = 7;
  if (has_status()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      7, this->status(), target);
  }

  // optional int64 create_time = 8;
  if (has_create_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(8, this->create_time(), target);
  }

  // optional int64 expiration_time = 9;
  if (has_expiration_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(9, this->expiration_time(), target);
  }

  // optional int32 coin = 10;
  if (has_coin()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->coin(), target);
  }

  // optional int32 ticket = 11;
  if (has_ticket()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->ticket(), target);
  }

  // optional int32 cash = 12;
  if (has_cash()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(12, this->cash(), target);
  }

  // optional int32 template_id = 13;
  if (has_template_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(13, this->template_id(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.MsgMailData)
  return target;
}

int MsgMailData::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 uuid = 1;
    if (has_uuid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->uuid());
    }

    // optional int64 sender_iggid = 2;
    if (has_sender_iggid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->sender_iggid());
    }

    // optional string sender_name = 3;
    if (has_sender_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->sender_name());
    }

    // optional int64 recipient_iggid = 4;
    if (has_recipient_iggid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->recipient_iggid());
    }

    // optional string title = 5;
    if (has_title()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->title());
    }

    // optional string content_text = 6;
    if (has_content_text()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->content_text());
    }

    // optional .MsgPB.MAIL_STATUS status = 7;
    if (has_status()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->status());
    }

    // optional int64 create_time = 8;
    if (has_create_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->create_time());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional int64 expiration_time = 9;
    if (has_expiration_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->expiration_time());
    }

    // optional int32 coin = 10;
    if (has_coin()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->coin());
    }

    // optional int32 ticket = 11;
    if (has_ticket()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->ticket());
    }

    // optional int32 cash = 12;
    if (has_cash()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->cash());
    }

    // optional int32 template_id = 13;
    if (has_template_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->template_id());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgMailData::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgMailData* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgMailData*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgMailData::MergeFrom(const MsgMailData& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_uuid()) {
      set_uuid(from.uuid());
    }
    if (from.has_sender_iggid()) {
      set_sender_iggid(from.sender_iggid());
    }
    if (from.has_sender_name()) {
      set_sender_name(from.sender_name());
    }
    if (from.has_recipient_iggid()) {
      set_recipient_iggid(from.recipient_iggid());
    }
    if (from.has_title()) {
      set_title(from.title());
    }
    if (from.has_content_text()) {
      set_content_text(from.content_text());
    }
    if (from.has_status()) {
      set_status(from.status());
    }
    if (from.has_create_time()) {
      set_create_time(from.create_time());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_expiration_time()) {
      set_expiration_time(from.expiration_time());
    }
    if (from.has_coin()) {
      set_coin(from.coin());
    }
    if (from.has_ticket()) {
      set_ticket(from.ticket());
    }
    if (from.has_cash()) {
      set_cash(from.cash());
    }
    if (from.has_template_id()) {
      set_template_id(from.template_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgMailData::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgMailData::CopyFrom(const MsgMailData& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgMailData::IsInitialized() const {

  return true;
}

void MsgMailData::Swap(MsgMailData* other) {
  if (other != this) {
    std::swap(uuid_, other->uuid_);
    std::swap(sender_iggid_, other->sender_iggid_);
    std::swap(sender_name_, other->sender_name_);
    std::swap(recipient_iggid_, other->recipient_iggid_);
    std::swap(title_, other->title_);
    std::swap(content_text_, other->content_text_);
    std::swap(status_, other->status_);
    std::swap(create_time_, other->create_time_);
    std::swap(expiration_time_, other->expiration_time_);
    std::swap(coin_, other->coin_);
    std::swap(ticket_, other->ticket_);
    std::swap(cash_, other->cash_);
    std::swap(template_id_, other->template_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgMailData::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgMailData_descriptor_;
  metadata.reflection = MsgMailData_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgMailPackageData::kUuidFieldNumber;
const int MsgMailPackageData::kRecipientIggidFieldNumber;
const int MsgMailPackageData::kMailUuidFieldNumber;
const int MsgMailPackageData::kItemFieldNumber;
const int MsgMailPackageData::kNewItemFieldNumber;
const int MsgMailPackageData::kExpirationTimeFieldNumber;
#endif  // !_MSC_VER

MsgMailPackageData::MsgMailPackageData()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.MsgMailPackageData)
}

void MsgMailPackageData::InitAsDefaultInstance() {
  item_ = const_cast< ::MsgPB::MsgItemCommonData*>(&::MsgPB::MsgItemCommonData::default_instance());
}

MsgMailPackageData::MsgMailPackageData(const MsgMailPackageData& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.MsgMailPackageData)
}

void MsgMailPackageData::SharedCtor() {
  _cached_size_ = 0;
  uuid_ = GOOGLE_LONGLONG(0);
  recipient_iggid_ = GOOGLE_LONGLONG(0);
  mail_uuid_ = GOOGLE_LONGLONG(0);
  item_ = NULL;
  new_item_ = false;
  expiration_time_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgMailPackageData::~MsgMailPackageData() {
  // @@protoc_insertion_point(destructor:MsgPB.MsgMailPackageData)
  SharedDtor();
}

void MsgMailPackageData::SharedDtor() {
  if (this != default_instance_) {
    delete item_;
  }
}

void MsgMailPackageData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgMailPackageData::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgMailPackageData_descriptor_;
}

const MsgMailPackageData& MsgMailPackageData::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgMail_2eproto();
  return *default_instance_;
}

MsgMailPackageData* MsgMailPackageData::default_instance_ = NULL;

MsgMailPackageData* MsgMailPackageData::New() const {
  return new MsgMailPackageData;
}

void MsgMailPackageData::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<MsgMailPackageData*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 63) {
    ZR_(uuid_, mail_uuid_);
    ZR_(expiration_time_, new_item_);
    if (has_item()) {
      if (item_ != NULL) item_->::MsgPB::MsgItemCommonData::Clear();
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgMailPackageData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.MsgMailPackageData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 uuid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &uuid_)));
          set_has_uuid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_recipient_iggid;
        break;
      }

      // optional int64 recipient_iggid = 2;
      case 2: {
        if (tag == 16) {
         parse_recipient_iggid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &recipient_iggid_)));
          set_has_recipient_iggid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_mail_uuid;
        break;
      }

      // optional int64 mail_uuid = 3;
      case 3: {
        if (tag == 24) {
         parse_mail_uuid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &mail_uuid_)));
          set_has_mail_uuid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_item;
        break;
      }

      // optional .MsgPB.MsgItemCommonData item = 4;
      case 4: {
        if (tag == 34) {
         parse_item:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_item()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_new_item;
        break;
      }

      // optional bool new_item = 5;
      case 5: {
        if (tag == 40) {
         parse_new_item:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &new_item_)));
          set_has_new_item();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_expiration_time;
        break;
      }

      // optional int64 expiration_time = 6;
      case 6: {
        if (tag == 48) {
         parse_expiration_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &expiration_time_)));
          set_has_expiration_time();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.MsgMailPackageData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.MsgMailPackageData)
  return false;
#undef DO_
}

void MsgMailPackageData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.MsgMailPackageData)
  // optional int64 uuid = 1;
  if (has_uuid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->uuid(), output);
  }

  // optional int64 recipient_iggid = 2;
  if (has_recipient_iggid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->recipient_iggid(), output);
  }

  // optional int64 mail_uuid = 3;
  if (has_mail_uuid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->mail_uuid(), output);
  }

  // optional .MsgPB.MsgItemCommonData item = 4;
  if (has_item()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->item(), output);
  }

  // optional bool new_item = 5;
  if (has_new_item()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->new_item(), output);
  }

  // optional int64 expiration_time = 6;
  if (has_expiration_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(6, this->expiration_time(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.MsgMailPackageData)
}

::google::protobuf::uint8* MsgMailPackageData::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.MsgMailPackageData)
  // optional int64 uuid = 1;
  if (has_uuid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->uuid(), target);
  }

  // optional int64 recipient_iggid = 2;
  if (has_recipient_iggid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->recipient_iggid(), target);
  }

  // optional int64 mail_uuid = 3;
  if (has_mail_uuid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->mail_uuid(), target);
  }

  // optional .MsgPB.MsgItemCommonData item = 4;
  if (has_item()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->item(), target);
  }

  // optional bool new_item = 5;
  if (has_new_item()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->new_item(), target);
  }

  // optional int64 expiration_time = 6;
  if (has_expiration_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(6, this->expiration_time(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.MsgMailPackageData)
  return target;
}

int MsgMailPackageData::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 uuid = 1;
    if (has_uuid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->uuid());
    }

    // optional int64 recipient_iggid = 2;
    if (has_recipient_iggid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->recipient_iggid());
    }

    // optional int64 mail_uuid = 3;
    if (has_mail_uuid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->mail_uuid());
    }

    // optional .MsgPB.MsgItemCommonData item = 4;
    if (has_item()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->item());
    }

    // optional bool new_item = 5;
    if (has_new_item()) {
      total_size += 1 + 1;
    }

    // optional int64 expiration_time = 6;
    if (has_expiration_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->expiration_time());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgMailPackageData::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgMailPackageData* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgMailPackageData*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgMailPackageData::MergeFrom(const MsgMailPackageData& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_uuid()) {
      set_uuid(from.uuid());
    }
    if (from.has_recipient_iggid()) {
      set_recipient_iggid(from.recipient_iggid());
    }
    if (from.has_mail_uuid()) {
      set_mail_uuid(from.mail_uuid());
    }
    if (from.has_item()) {
      mutable_item()->::MsgPB::MsgItemCommonData::MergeFrom(from.item());
    }
    if (from.has_new_item()) {
      set_new_item(from.new_item());
    }
    if (from.has_expiration_time()) {
      set_expiration_time(from.expiration_time());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgMailPackageData::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgMailPackageData::CopyFrom(const MsgMailPackageData& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgMailPackageData::IsInitialized() const {

  return true;
}

void MsgMailPackageData::Swap(MsgMailPackageData* other) {
  if (other != this) {
    std::swap(uuid_, other->uuid_);
    std::swap(recipient_iggid_, other->recipient_iggid_);
    std::swap(mail_uuid_, other->mail_uuid_);
    std::swap(item_, other->item_);
    std::swap(new_item_, other->new_item_);
    std::swap(expiration_time_, other->expiration_time_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgMailPackageData::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgMailPackageData_descriptor_;
  metadata.reflection = MsgMailPackageData_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgMailComplete::kMainFieldNumber;
const int MsgMailComplete::kPackageFieldNumber;
#endif  // !_MSC_VER

MsgMailComplete::MsgMailComplete()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.MsgMailComplete)
}

void MsgMailComplete::InitAsDefaultInstance() {
  main_ = const_cast< ::MsgPB::MsgMailData*>(&::MsgPB::MsgMailData::default_instance());
}

MsgMailComplete::MsgMailComplete(const MsgMailComplete& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.MsgMailComplete)
}

void MsgMailComplete::SharedCtor() {
  _cached_size_ = 0;
  main_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgMailComplete::~MsgMailComplete() {
  // @@protoc_insertion_point(destructor:MsgPB.MsgMailComplete)
  SharedDtor();
}

void MsgMailComplete::SharedDtor() {
  if (this != default_instance_) {
    delete main_;
  }
}

void MsgMailComplete::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgMailComplete::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgMailComplete_descriptor_;
}

const MsgMailComplete& MsgMailComplete::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgMail_2eproto();
  return *default_instance_;
}

MsgMailComplete* MsgMailComplete::default_instance_ = NULL;

MsgMailComplete* MsgMailComplete::New() const {
  return new MsgMailComplete;
}

void MsgMailComplete::Clear() {
  if (has_main()) {
    if (main_ != NULL) main_->::MsgPB::MsgMailData::Clear();
  }
  package_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgMailComplete::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.MsgMailComplete)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .MsgPB.MsgMailData main = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_main()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_package;
        break;
      }

      // repeated .MsgPB.MsgMailPackageData package = 2;
      case 2: {
        if (tag == 18) {
         parse_package:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_package()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_package;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.MsgMailComplete)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.MsgMailComplete)
  return false;
#undef DO_
}

void MsgMailComplete::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.MsgMailComplete)
  // optional .MsgPB.MsgMailData main = 1;
  if (has_main()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->main(), output);
  }

  // repeated .MsgPB.MsgMailPackageData package = 2;
  for (int i = 0; i < this->package_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->package(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.MsgMailComplete)
}

::google::protobuf::uint8* MsgMailComplete::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.MsgMailComplete)
  // optional .MsgPB.MsgMailData main = 1;
  if (has_main()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->main(), target);
  }

  // repeated .MsgPB.MsgMailPackageData package = 2;
  for (int i = 0; i < this->package_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->package(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.MsgMailComplete)
  return target;
}

int MsgMailComplete::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .MsgPB.MsgMailData main = 1;
    if (has_main()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->main());
    }

  }
  // repeated .MsgPB.MsgMailPackageData package = 2;
  total_size += 1 * this->package_size();
  for (int i = 0; i < this->package_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->package(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgMailComplete::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgMailComplete* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgMailComplete*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgMailComplete::MergeFrom(const MsgMailComplete& from) {
  GOOGLE_CHECK_NE(&from, this);
  package_.MergeFrom(from.package_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_main()) {
      mutable_main()->::MsgPB::MsgMailData::MergeFrom(from.main());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgMailComplete::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgMailComplete::CopyFrom(const MsgMailComplete& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgMailComplete::IsInitialized() const {

  return true;
}

void MsgMailComplete::Swap(MsgMailComplete* other) {
  if (other != this) {
    std::swap(main_, other->main_);
    package_.Swap(&other->package_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgMailComplete::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgMailComplete_descriptor_;
  metadata.reflection = MsgMailComplete_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgMailNotifyS2C::kMsgTypeFieldNumber;
const int MsgMailNotifyS2C::kUnreadCountFieldNumber;
const int MsgMailNotifyS2C::kIggidFieldNumber;
#endif  // !_MSC_VER

MsgMailNotifyS2C::MsgMailNotifyS2C()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.MsgMailNotifyS2C)
}

void MsgMailNotifyS2C::InitAsDefaultInstance() {
}

MsgMailNotifyS2C::MsgMailNotifyS2C(const MsgMailNotifyS2C& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.MsgMailNotifyS2C)
}

void MsgMailNotifyS2C::SharedCtor() {
  _cached_size_ = 0;
  msgtype_ = 2900;
  unread_count_ = 0;
  iggid_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgMailNotifyS2C::~MsgMailNotifyS2C() {
  // @@protoc_insertion_point(destructor:MsgPB.MsgMailNotifyS2C)
  SharedDtor();
}

void MsgMailNotifyS2C::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgMailNotifyS2C::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgMailNotifyS2C::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgMailNotifyS2C_descriptor_;
}

const MsgMailNotifyS2C& MsgMailNotifyS2C::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgMail_2eproto();
  return *default_instance_;
}

MsgMailNotifyS2C* MsgMailNotifyS2C::default_instance_ = NULL;

MsgMailNotifyS2C* MsgMailNotifyS2C::New() const {
  return new MsgMailNotifyS2C;
}

void MsgMailNotifyS2C::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<MsgMailNotifyS2C*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 7) {
    ZR_(unread_count_, iggid_);
    msgtype_ = 2900;
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgMailNotifyS2C::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.MsgMailNotifyS2C)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_MAIL_NOTIFY_S2C];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::EMsgType_IsValid(value)) {
            set_msgtype(static_cast< ::MsgPB::EMsgType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_unread_count;
        break;
      }

      // optional int32 unread_count = 2;
      case 2: {
        if (tag == 16) {
         parse_unread_count:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &unread_count_)));
          set_has_unread_count();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_iggid;
        break;
      }

      // optional int64 iggid = 3;
      case 3: {
        if (tag == 24) {
         parse_iggid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &iggid_)));
          set_has_iggid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.MsgMailNotifyS2C)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.MsgMailNotifyS2C)
  return false;
#undef DO_
}

void MsgMailNotifyS2C::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.MsgMailNotifyS2C)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_MAIL_NOTIFY_S2C];
  if (has_msgtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->msgtype(), output);
  }

  // optional int32 unread_count = 2;
  if (has_unread_count()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->unread_count(), output);
  }

  // optional int64 iggid = 3;
  if (has_iggid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->iggid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.MsgMailNotifyS2C)
}

::google::protobuf::uint8* MsgMailNotifyS2C::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.MsgMailNotifyS2C)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_MAIL_NOTIFY_S2C];
  if (has_msgtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->msgtype(), target);
  }

  // optional int32 unread_count = 2;
  if (has_unread_count()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->unread_count(), target);
  }

  // optional int64 iggid = 3;
  if (has_iggid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->iggid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.MsgMailNotifyS2C)
  return target;
}

int MsgMailNotifyS2C::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_MAIL_NOTIFY_S2C];
    if (has_msgtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgtype());
    }

    // optional int32 unread_count = 2;
    if (has_unread_count()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->unread_count());
    }

    // optional int64 iggid = 3;
    if (has_iggid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->iggid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgMailNotifyS2C::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgMailNotifyS2C* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgMailNotifyS2C*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgMailNotifyS2C::MergeFrom(const MsgMailNotifyS2C& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msgtype()) {
      set_msgtype(from.msgtype());
    }
    if (from.has_unread_count()) {
      set_unread_count(from.unread_count());
    }
    if (from.has_iggid()) {
      set_iggid(from.iggid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgMailNotifyS2C::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgMailNotifyS2C::CopyFrom(const MsgMailNotifyS2C& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgMailNotifyS2C::IsInitialized() const {

  return true;
}

void MsgMailNotifyS2C::Swap(MsgMailNotifyS2C* other) {
  if (other != this) {
    std::swap(msgtype_, other->msgtype_);
    std::swap(unread_count_, other->unread_count_);
    std::swap(iggid_, other->iggid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgMailNotifyS2C::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgMailNotifyS2C_descriptor_;
  metadata.reflection = MsgMailNotifyS2C_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgMailReceiveC2S::kMsgTypeFieldNumber;
const int MsgMailReceiveC2S::kIggidFieldNumber;
const int MsgMailReceiveC2S::kTimestampFieldNumber;
const int MsgMailReceiveC2S::kReceiveTypeFieldNumber;
#endif  // !_MSC_VER

MsgMailReceiveC2S::MsgMailReceiveC2S()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.MsgMailReceiveC2S)
}

void MsgMailReceiveC2S::InitAsDefaultInstance() {
}

MsgMailReceiveC2S::MsgMailReceiveC2S(const MsgMailReceiveC2S& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.MsgMailReceiveC2S)
}

void MsgMailReceiveC2S::SharedCtor() {
  _cached_size_ = 0;
  msgtype_ = 2910;
  iggid_ = GOOGLE_LONGLONG(0);
  timestamp_ = GOOGLE_LONGLONG(0);
  receive_type_ = 1;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgMailReceiveC2S::~MsgMailReceiveC2S() {
  // @@protoc_insertion_point(destructor:MsgPB.MsgMailReceiveC2S)
  SharedDtor();
}

void MsgMailReceiveC2S::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgMailReceiveC2S::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgMailReceiveC2S::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgMailReceiveC2S_descriptor_;
}

const MsgMailReceiveC2S& MsgMailReceiveC2S::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgMail_2eproto();
  return *default_instance_;
}

MsgMailReceiveC2S* MsgMailReceiveC2S::default_instance_ = NULL;

MsgMailReceiveC2S* MsgMailReceiveC2S::New() const {
  return new MsgMailReceiveC2S;
}

void MsgMailReceiveC2S::Clear() {
  if (_has_bits_[0 / 32] & 15) {
    msgtype_ = 2910;
    iggid_ = GOOGLE_LONGLONG(0);
    timestamp_ = GOOGLE_LONGLONG(0);
    receive_type_ = 1;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgMailReceiveC2S::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.MsgMailReceiveC2S)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_MAIL_RECEIVE_C2S];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::EMsgType_IsValid(value)) {
            set_msgtype(static_cast< ::MsgPB::EMsgType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_iggid;
        break;
      }

      // optional int64 iggid = 2;
      case 2: {
        if (tag == 16) {
         parse_iggid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &iggid_)));
          set_has_iggid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_timestamp;
        break;
      }

      // optional int64 timestamp = 3;
      case 3: {
        if (tag == 24) {
         parse_timestamp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &timestamp_)));
          set_has_timestamp();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_receive_type;
        break;
      }

      // optional .MsgPB.MAIL_RECEIVE_TYPE receive_type = 4;
      case 4: {
        if (tag == 32) {
         parse_receive_type:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::MAIL_RECEIVE_TYPE_IsValid(value)) {
            set_receive_type(static_cast< ::MsgPB::MAIL_RECEIVE_TYPE >(value));
          } else {
            mutable_unknown_fields()->AddVarint(4, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.MsgMailReceiveC2S)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.MsgMailReceiveC2S)
  return false;
#undef DO_
}

void MsgMailReceiveC2S::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.MsgMailReceiveC2S)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_MAIL_RECEIVE_C2S];
  if (has_msgtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->msgtype(), output);
  }

  // optional int64 iggid = 2;
  if (has_iggid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->iggid(), output);
  }

  // optional int64 timestamp = 3;
  if (has_timestamp()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->timestamp(), output);
  }

  // optional .MsgPB.MAIL_RECEIVE_TYPE receive_type = 4;
  if (has_receive_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->receive_type(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.MsgMailReceiveC2S)
}

::google::protobuf::uint8* MsgMailReceiveC2S::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.MsgMailReceiveC2S)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_MAIL_RECEIVE_C2S];
  if (has_msgtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->msgtype(), target);
  }

  // optional int64 iggid = 2;
  if (has_iggid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->iggid(), target);
  }

  // optional int64 timestamp = 3;
  if (has_timestamp()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->timestamp(), target);
  }

  // optional .MsgPB.MAIL_RECEIVE_TYPE receive_type = 4;
  if (has_receive_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->receive_type(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.MsgMailReceiveC2S)
  return target;
}

int MsgMailReceiveC2S::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_MAIL_RECEIVE_C2S];
    if (has_msgtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgtype());
    }

    // optional int64 iggid = 2;
    if (has_iggid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->iggid());
    }

    // optional int64 timestamp = 3;
    if (has_timestamp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->timestamp());
    }

    // optional .MsgPB.MAIL_RECEIVE_TYPE receive_type = 4;
    if (has_receive_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->receive_type());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgMailReceiveC2S::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgMailReceiveC2S* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgMailReceiveC2S*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgMailReceiveC2S::MergeFrom(const MsgMailReceiveC2S& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msgtype()) {
      set_msgtype(from.msgtype());
    }
    if (from.has_iggid()) {
      set_iggid(from.iggid());
    }
    if (from.has_timestamp()) {
      set_timestamp(from.timestamp());
    }
    if (from.has_receive_type()) {
      set_receive_type(from.receive_type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgMailReceiveC2S::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgMailReceiveC2S::CopyFrom(const MsgMailReceiveC2S& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgMailReceiveC2S::IsInitialized() const {

  return true;
}

void MsgMailReceiveC2S::Swap(MsgMailReceiveC2S* other) {
  if (other != this) {
    std::swap(msgtype_, other->msgtype_);
    std::swap(iggid_, other->iggid_);
    std::swap(timestamp_, other->timestamp_);
    std::swap(receive_type_, other->receive_type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgMailReceiveC2S::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgMailReceiveC2S_descriptor_;
  metadata.reflection = MsgMailReceiveC2S_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgMailReceiveResultS2C::kMsgTypeFieldNumber;
const int MsgMailReceiveResultS2C::kTimestampFieldNumber;
const int MsgMailReceiveResultS2C::kCompleteMailFieldNumber;
const int MsgMailReceiveResultS2C::kReceiveTypeFieldNumber;
#endif  // !_MSC_VER

MsgMailReceiveResultS2C::MsgMailReceiveResultS2C()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.MsgMailReceiveResultS2C)
}

void MsgMailReceiveResultS2C::InitAsDefaultInstance() {
}

MsgMailReceiveResultS2C::MsgMailReceiveResultS2C(const MsgMailReceiveResultS2C& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.MsgMailReceiveResultS2C)
}

void MsgMailReceiveResultS2C::SharedCtor() {
  _cached_size_ = 0;
  msgtype_ = 2911;
  timestamp_ = GOOGLE_LONGLONG(0);
  receive_type_ = 1;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgMailReceiveResultS2C::~MsgMailReceiveResultS2C() {
  // @@protoc_insertion_point(destructor:MsgPB.MsgMailReceiveResultS2C)
  SharedDtor();
}

void MsgMailReceiveResultS2C::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgMailReceiveResultS2C::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgMailReceiveResultS2C::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgMailReceiveResultS2C_descriptor_;
}

const MsgMailReceiveResultS2C& MsgMailReceiveResultS2C::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgMail_2eproto();
  return *default_instance_;
}

MsgMailReceiveResultS2C* MsgMailReceiveResultS2C::default_instance_ = NULL;

MsgMailReceiveResultS2C* MsgMailReceiveResultS2C::New() const {
  return new MsgMailReceiveResultS2C;
}

void MsgMailReceiveResultS2C::Clear() {
  if (_has_bits_[0 / 32] & 11) {
    msgtype_ = 2911;
    timestamp_ = GOOGLE_LONGLONG(0);
    receive_type_ = 1;
  }
  complete_mail_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgMailReceiveResultS2C::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.MsgMailReceiveResultS2C)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_MAIL_RECEIVE_RESULT_S2C];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::EMsgType_IsValid(value)) {
            set_msgtype(static_cast< ::MsgPB::EMsgType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_timestamp;
        break;
      }

      // optional int64 timestamp = 2;
      case 2: {
        if (tag == 16) {
         parse_timestamp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &timestamp_)));
          set_has_timestamp();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_complete_mail;
        break;
      }

      // repeated .MsgPB.MsgMailComplete complete_mail = 3;
      case 3: {
        if (tag == 26) {
         parse_complete_mail:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_complete_mail()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_complete_mail;
        if (input->ExpectTag(32)) goto parse_receive_type;
        break;
      }

      // optional .MsgPB.MAIL_RECEIVE_TYPE receive_type = 4;
      case 4: {
        if (tag == 32) {
         parse_receive_type:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::MAIL_RECEIVE_TYPE_IsValid(value)) {
            set_receive_type(static_cast< ::MsgPB::MAIL_RECEIVE_TYPE >(value));
          } else {
            mutable_unknown_fields()->AddVarint(4, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.MsgMailReceiveResultS2C)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.MsgMailReceiveResultS2C)
  return false;
#undef DO_
}

void MsgMailReceiveResultS2C::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.MsgMailReceiveResultS2C)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_MAIL_RECEIVE_RESULT_S2C];
  if (has_msgtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->msgtype(), output);
  }

  // optional int64 timestamp = 2;
  if (has_timestamp()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->timestamp(), output);
  }

  // repeated .MsgPB.MsgMailComplete complete_mail = 3;
  for (int i = 0; i < this->complete_mail_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->complete_mail(i), output);
  }

  // optional .MsgPB.MAIL_RECEIVE_TYPE receive_type = 4;
  if (has_receive_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->receive_type(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.MsgMailReceiveResultS2C)
}

::google::protobuf::uint8* MsgMailReceiveResultS2C::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.MsgMailReceiveResultS2C)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_MAIL_RECEIVE_RESULT_S2C];
  if (has_msgtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->msgtype(), target);
  }

  // optional int64 timestamp = 2;
  if (has_timestamp()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->timestamp(), target);
  }

  // repeated .MsgPB.MsgMailComplete complete_mail = 3;
  for (int i = 0; i < this->complete_mail_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->complete_mail(i), target);
  }

  // optional .MsgPB.MAIL_RECEIVE_TYPE receive_type = 4;
  if (has_receive_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->receive_type(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.MsgMailReceiveResultS2C)
  return target;
}

int MsgMailReceiveResultS2C::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_MAIL_RECEIVE_RESULT_S2C];
    if (has_msgtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgtype());
    }

    // optional int64 timestamp = 2;
    if (has_timestamp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->timestamp());
    }

    // optional .MsgPB.MAIL_RECEIVE_TYPE receive_type = 4;
    if (has_receive_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->receive_type());
    }

  }
  // repeated .MsgPB.MsgMailComplete complete_mail = 3;
  total_size += 1 * this->complete_mail_size();
  for (int i = 0; i < this->complete_mail_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->complete_mail(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgMailReceiveResultS2C::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgMailReceiveResultS2C* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgMailReceiveResultS2C*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgMailReceiveResultS2C::MergeFrom(const MsgMailReceiveResultS2C& from) {
  GOOGLE_CHECK_NE(&from, this);
  complete_mail_.MergeFrom(from.complete_mail_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msgtype()) {
      set_msgtype(from.msgtype());
    }
    if (from.has_timestamp()) {
      set_timestamp(from.timestamp());
    }
    if (from.has_receive_type()) {
      set_receive_type(from.receive_type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgMailReceiveResultS2C::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgMailReceiveResultS2C::CopyFrom(const MsgMailReceiveResultS2C& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgMailReceiveResultS2C::IsInitialized() const {

  return true;
}

void MsgMailReceiveResultS2C::Swap(MsgMailReceiveResultS2C* other) {
  if (other != this) {
    std::swap(msgtype_, other->msgtype_);
    std::swap(timestamp_, other->timestamp_);
    complete_mail_.Swap(&other->complete_mail_);
    std::swap(receive_type_, other->receive_type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgMailReceiveResultS2C::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgMailReceiveResultS2C_descriptor_;
  metadata.reflection = MsgMailReceiveResultS2C_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgMailReadC2S::kMsgTypeFieldNumber;
const int MsgMailReadC2S::kIggidFieldNumber;
const int MsgMailReadC2S::kMailUuidFieldNumber;
#endif  // !_MSC_VER

MsgMailReadC2S::MsgMailReadC2S()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.MsgMailReadC2S)
}

void MsgMailReadC2S::InitAsDefaultInstance() {
}

MsgMailReadC2S::MsgMailReadC2S(const MsgMailReadC2S& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.MsgMailReadC2S)
}

void MsgMailReadC2S::SharedCtor() {
  _cached_size_ = 0;
  msgtype_ = 2912;
  iggid_ = GOOGLE_LONGLONG(0);
  mail_uuid_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgMailReadC2S::~MsgMailReadC2S() {
  // @@protoc_insertion_point(destructor:MsgPB.MsgMailReadC2S)
  SharedDtor();
}

void MsgMailReadC2S::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgMailReadC2S::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgMailReadC2S::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgMailReadC2S_descriptor_;
}

const MsgMailReadC2S& MsgMailReadC2S::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgMail_2eproto();
  return *default_instance_;
}

MsgMailReadC2S* MsgMailReadC2S::default_instance_ = NULL;

MsgMailReadC2S* MsgMailReadC2S::New() const {
  return new MsgMailReadC2S;
}

void MsgMailReadC2S::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<MsgMailReadC2S*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 7) {
    ZR_(iggid_, mail_uuid_);
    msgtype_ = 2912;
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgMailReadC2S::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.MsgMailReadC2S)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_MAIL_READ_C2S];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::EMsgType_IsValid(value)) {
            set_msgtype(static_cast< ::MsgPB::EMsgType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_iggid;
        break;
      }

      // optional int64 iggid = 2;
      case 2: {
        if (tag == 16) {
         parse_iggid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &iggid_)));
          set_has_iggid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_mail_uuid;
        break;
      }

      // optional int64 mail_uuid = 3;
      case 3: {
        if (tag == 24) {
         parse_mail_uuid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &mail_uuid_)));
          set_has_mail_uuid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.MsgMailReadC2S)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.MsgMailReadC2S)
  return false;
#undef DO_
}

void MsgMailReadC2S::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.MsgMailReadC2S)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_MAIL_READ_C2S];
  if (has_msgtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->msgtype(), output);
  }

  // optional int64 iggid = 2;
  if (has_iggid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->iggid(), output);
  }

  // optional int64 mail_uuid = 3;
  if (has_mail_uuid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->mail_uuid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.MsgMailReadC2S)
}

::google::protobuf::uint8* MsgMailReadC2S::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.MsgMailReadC2S)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_MAIL_READ_C2S];
  if (has_msgtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->msgtype(), target);
  }

  // optional int64 iggid = 2;
  if (has_iggid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->iggid(), target);
  }

  // optional int64 mail_uuid = 3;
  if (has_mail_uuid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->mail_uuid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.MsgMailReadC2S)
  return target;
}

int MsgMailReadC2S::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_MAIL_READ_C2S];
    if (has_msgtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgtype());
    }

    // optional int64 iggid = 2;
    if (has_iggid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->iggid());
    }

    // optional int64 mail_uuid = 3;
    if (has_mail_uuid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->mail_uuid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgMailReadC2S::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgMailReadC2S* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgMailReadC2S*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgMailReadC2S::MergeFrom(const MsgMailReadC2S& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msgtype()) {
      set_msgtype(from.msgtype());
    }
    if (from.has_iggid()) {
      set_iggid(from.iggid());
    }
    if (from.has_mail_uuid()) {
      set_mail_uuid(from.mail_uuid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgMailReadC2S::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgMailReadC2S::CopyFrom(const MsgMailReadC2S& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgMailReadC2S::IsInitialized() const {

  return true;
}

void MsgMailReadC2S::Swap(MsgMailReadC2S* other) {
  if (other != this) {
    std::swap(msgtype_, other->msgtype_);
    std::swap(iggid_, other->iggid_);
    std::swap(mail_uuid_, other->mail_uuid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgMailReadC2S::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgMailReadC2S_descriptor_;
  metadata.reflection = MsgMailReadC2S_reflection_;
  return metadata;
}


// ===================================================================

const ::google::protobuf::EnumDescriptor* MsgMailReadResultS2C_RESULT_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgMailReadResultS2C_RESULT_descriptor_;
}
bool MsgMailReadResultS2C_RESULT_IsValid(int value) {
  switch(value) {
    case -1:
    case 0:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const MsgMailReadResultS2C_RESULT MsgMailReadResultS2C::FAILURE;
const MsgMailReadResultS2C_RESULT MsgMailReadResultS2C::SUCCESS;
const MsgMailReadResultS2C_RESULT MsgMailReadResultS2C::RESULT_MIN;
const MsgMailReadResultS2C_RESULT MsgMailReadResultS2C::RESULT_MAX;
const int MsgMailReadResultS2C::RESULT_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int MsgMailReadResultS2C::kMsgTypeFieldNumber;
const int MsgMailReadResultS2C::kResultFieldNumber;
const int MsgMailReadResultS2C::kMailUuidFieldNumber;
const int MsgMailReadResultS2C::kStatusFieldNumber;
#endif  // !_MSC_VER

MsgMailReadResultS2C::MsgMailReadResultS2C()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.MsgMailReadResultS2C)
}

void MsgMailReadResultS2C::InitAsDefaultInstance() {
}

MsgMailReadResultS2C::MsgMailReadResultS2C(const MsgMailReadResultS2C& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.MsgMailReadResultS2C)
}

void MsgMailReadResultS2C::SharedCtor() {
  _cached_size_ = 0;
  msgtype_ = 2913;
  result_ = -1;
  mail_uuid_ = GOOGLE_LONGLONG(0);
  status_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgMailReadResultS2C::~MsgMailReadResultS2C() {
  // @@protoc_insertion_point(destructor:MsgPB.MsgMailReadResultS2C)
  SharedDtor();
}

void MsgMailReadResultS2C::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgMailReadResultS2C::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgMailReadResultS2C::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgMailReadResultS2C_descriptor_;
}

const MsgMailReadResultS2C& MsgMailReadResultS2C::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgMail_2eproto();
  return *default_instance_;
}

MsgMailReadResultS2C* MsgMailReadResultS2C::default_instance_ = NULL;

MsgMailReadResultS2C* MsgMailReadResultS2C::New() const {
  return new MsgMailReadResultS2C;
}

void MsgMailReadResultS2C::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<MsgMailReadResultS2C*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 15) {
    ZR_(mail_uuid_, status_);
    msgtype_ = 2913;
    result_ = -1;
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgMailReadResultS2C::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.MsgMailReadResultS2C)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_MAIL_READ_RESULT_S2C];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::EMsgType_IsValid(value)) {
            set_msgtype(static_cast< ::MsgPB::EMsgType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_result;
        break;
      }

      // optional .MsgPB.MsgMailReadResultS2C.RESULT result = 2;
      case 2: {
        if (tag == 16) {
         parse_result:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::MsgMailReadResultS2C_RESULT_IsValid(value)) {
            set_result(static_cast< ::MsgPB::MsgMailReadResultS2C_RESULT >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_mail_uuid;
        break;
      }

      // optional int64 mail_uuid = 3;
      case 3: {
        if (tag == 24) {
         parse_mail_uuid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &mail_uuid_)));
          set_has_mail_uuid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_status;
        break;
      }

      // optional .MsgPB.MAIL_STATUS status = 4;
      case 4: {
        if (tag == 32) {
         parse_status:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::MAIL_STATUS_IsValid(value)) {
            set_status(static_cast< ::MsgPB::MAIL_STATUS >(value));
          } else {
            mutable_unknown_fields()->AddVarint(4, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.MsgMailReadResultS2C)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.MsgMailReadResultS2C)
  return false;
#undef DO_
}

void MsgMailReadResultS2C::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.MsgMailReadResultS2C)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_MAIL_READ_RESULT_S2C];
  if (has_msgtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->msgtype(), output);
  }

  // optional .MsgPB.MsgMailReadResultS2C.RESULT result = 2;
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->result(), output);
  }

  // optional int64 mail_uuid = 3;
  if (has_mail_uuid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->mail_uuid(), output);
  }

  // optional .MsgPB.MAIL_STATUS status = 4;
  if (has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->status(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.MsgMailReadResultS2C)
}

::google::protobuf::uint8* MsgMailReadResultS2C::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.MsgMailReadResultS2C)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_MAIL_READ_RESULT_S2C];
  if (has_msgtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->msgtype(), target);
  }

  // optional .MsgPB.MsgMailReadResultS2C.RESULT result = 2;
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->result(), target);
  }

  // optional int64 mail_uuid = 3;
  if (has_mail_uuid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->mail_uuid(), target);
  }

  // optional .MsgPB.MAIL_STATUS status = 4;
  if (has_status()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->status(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.MsgMailReadResultS2C)
  return target;
}

int MsgMailReadResultS2C::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_MAIL_READ_RESULT_S2C];
    if (has_msgtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgtype());
    }

    // optional .MsgPB.MsgMailReadResultS2C.RESULT result = 2;
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->result());
    }

    // optional int64 mail_uuid = 3;
    if (has_mail_uuid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->mail_uuid());
    }

    // optional .MsgPB.MAIL_STATUS status = 4;
    if (has_status()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->status());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgMailReadResultS2C::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgMailReadResultS2C* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgMailReadResultS2C*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgMailReadResultS2C::MergeFrom(const MsgMailReadResultS2C& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msgtype()) {
      set_msgtype(from.msgtype());
    }
    if (from.has_result()) {
      set_result(from.result());
    }
    if (from.has_mail_uuid()) {
      set_mail_uuid(from.mail_uuid());
    }
    if (from.has_status()) {
      set_status(from.status());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgMailReadResultS2C::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgMailReadResultS2C::CopyFrom(const MsgMailReadResultS2C& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgMailReadResultS2C::IsInitialized() const {

  return true;
}

void MsgMailReadResultS2C::Swap(MsgMailReadResultS2C* other) {
  if (other != this) {
    std::swap(msgtype_, other->msgtype_);
    std::swap(result_, other->result_);
    std::swap(mail_uuid_, other->mail_uuid_);
    std::swap(status_, other->status_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgMailReadResultS2C::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgMailReadResultS2C_descriptor_;
  metadata.reflection = MsgMailReadResultS2C_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgMailClaimC2S::kMsgTypeFieldNumber;
const int MsgMailClaimC2S::kIggidFieldNumber;
const int MsgMailClaimC2S::kMailUuidsFieldNumber;
#endif  // !_MSC_VER

MsgMailClaimC2S::MsgMailClaimC2S()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.MsgMailClaimC2S)
}

void MsgMailClaimC2S::InitAsDefaultInstance() {
}

MsgMailClaimC2S::MsgMailClaimC2S(const MsgMailClaimC2S& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.MsgMailClaimC2S)
}

void MsgMailClaimC2S::SharedCtor() {
  _cached_size_ = 0;
  msgtype_ = 2914;
  iggid_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgMailClaimC2S::~MsgMailClaimC2S() {
  // @@protoc_insertion_point(destructor:MsgPB.MsgMailClaimC2S)
  SharedDtor();
}

void MsgMailClaimC2S::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgMailClaimC2S::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgMailClaimC2S::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgMailClaimC2S_descriptor_;
}

const MsgMailClaimC2S& MsgMailClaimC2S::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgMail_2eproto();
  return *default_instance_;
}

MsgMailClaimC2S* MsgMailClaimC2S::default_instance_ = NULL;

MsgMailClaimC2S* MsgMailClaimC2S::New() const {
  return new MsgMailClaimC2S;
}

void MsgMailClaimC2S::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    msgtype_ = 2914;
    iggid_ = GOOGLE_LONGLONG(0);
  }
  mail_uuids_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgMailClaimC2S::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.MsgMailClaimC2S)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_MAIL_CLAIM_C2S];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::EMsgType_IsValid(value)) {
            set_msgtype(static_cast< ::MsgPB::EMsgType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_iggid;
        break;
      }

      // optional int64 iggid = 2;
      case 2: {
        if (tag == 16) {
         parse_iggid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &iggid_)));
          set_has_iggid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_mail_uuids;
        break;
      }

      // repeated .MsgPB.MsgRepeatedUUID mail_uuids = 3;
      case 3: {
        if (tag == 26) {
         parse_mail_uuids:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_mail_uuids()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_mail_uuids;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.MsgMailClaimC2S)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.MsgMailClaimC2S)
  return false;
#undef DO_
}

void MsgMailClaimC2S::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.MsgMailClaimC2S)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_MAIL_CLAIM_C2S];
  if (has_msgtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->msgtype(), output);
  }

  // optional int64 iggid = 2;
  if (has_iggid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->iggid(), output);
  }

  // repeated .MsgPB.MsgRepeatedUUID mail_uuids = 3;
  for (int i = 0; i < this->mail_uuids_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->mail_uuids(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.MsgMailClaimC2S)
}

::google::protobuf::uint8* MsgMailClaimC2S::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.MsgMailClaimC2S)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_MAIL_CLAIM_C2S];
  if (has_msgtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->msgtype(), target);
  }

  // optional int64 iggid = 2;
  if (has_iggid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->iggid(), target);
  }

  // repeated .MsgPB.MsgRepeatedUUID mail_uuids = 3;
  for (int i = 0; i < this->mail_uuids_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->mail_uuids(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.MsgMailClaimC2S)
  return target;
}

int MsgMailClaimC2S::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_MAIL_CLAIM_C2S];
    if (has_msgtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgtype());
    }

    // optional int64 iggid = 2;
    if (has_iggid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->iggid());
    }

  }
  // repeated .MsgPB.MsgRepeatedUUID mail_uuids = 3;
  total_size += 1 * this->mail_uuids_size();
  for (int i = 0; i < this->mail_uuids_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->mail_uuids(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgMailClaimC2S::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgMailClaimC2S* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgMailClaimC2S*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgMailClaimC2S::MergeFrom(const MsgMailClaimC2S& from) {
  GOOGLE_CHECK_NE(&from, this);
  mail_uuids_.MergeFrom(from.mail_uuids_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msgtype()) {
      set_msgtype(from.msgtype());
    }
    if (from.has_iggid()) {
      set_iggid(from.iggid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgMailClaimC2S::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgMailClaimC2S::CopyFrom(const MsgMailClaimC2S& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgMailClaimC2S::IsInitialized() const {

  return true;
}

void MsgMailClaimC2S::Swap(MsgMailClaimC2S* other) {
  if (other != this) {
    std::swap(msgtype_, other->msgtype_);
    std::swap(iggid_, other->iggid_);
    mail_uuids_.Swap(&other->mail_uuids_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgMailClaimC2S::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgMailClaimC2S_descriptor_;
  metadata.reflection = MsgMailClaimC2S_reflection_;
  return metadata;
}


// ===================================================================

const ::google::protobuf::EnumDescriptor* MsgMailClaimResultS2C_RESULT_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgMailClaimResultS2C_RESULT_descriptor_;
}
bool MsgMailClaimResultS2C_RESULT_IsValid(int value) {
  switch(value) {
    case -1:
    case 0:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const MsgMailClaimResultS2C_RESULT MsgMailClaimResultS2C::FAILURE;
const MsgMailClaimResultS2C_RESULT MsgMailClaimResultS2C::SUCCESS;
const MsgMailClaimResultS2C_RESULT MsgMailClaimResultS2C::PACKET_IS_FULL;
const MsgMailClaimResultS2C_RESULT MsgMailClaimResultS2C::CLAIM_MAIL_NO_PLAYER;
const MsgMailClaimResultS2C_RESULT MsgMailClaimResultS2C::CLAIM_MAIL_BAD_REQUEST;
const MsgMailClaimResultS2C_RESULT MsgMailClaimResultS2C::CLAIM_MAIL_NO_ITEMAPPAKCET;
const MsgMailClaimResultS2C_RESULT MsgMailClaimResultS2C::CLAIM_MAIL_NO_MAIL;
const MsgMailClaimResultS2C_RESULT MsgMailClaimResultS2C::CLAIM_MAIL_NO_MAIL_DATA;
const MsgMailClaimResultS2C_RESULT MsgMailClaimResultS2C::CLAIM_MAIL_ALREADY_CLAIM;
const MsgMailClaimResultS2C_RESULT MsgMailClaimResultS2C::RESULT_MIN;
const MsgMailClaimResultS2C_RESULT MsgMailClaimResultS2C::RESULT_MAX;
const int MsgMailClaimResultS2C::RESULT_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int MsgMailClaimResultS2C::kMsgTypeFieldNumber;
const int MsgMailClaimResultS2C::kResultFieldNumber;
const int MsgMailClaimResultS2C::kCoinFieldNumber;
const int MsgMailClaimResultS2C::kTicketFieldNumber;
const int MsgMailClaimResultS2C::kCashFieldNumber;
const int MsgMailClaimResultS2C::kItemFieldNumber;
const int MsgMailClaimResultS2C::kMailUuidsFieldNumber;
#endif  // !_MSC_VER

MsgMailClaimResultS2C::MsgMailClaimResultS2C()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.MsgMailClaimResultS2C)
}

void MsgMailClaimResultS2C::InitAsDefaultInstance() {
}

MsgMailClaimResultS2C::MsgMailClaimResultS2C(const MsgMailClaimResultS2C& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.MsgMailClaimResultS2C)
}

void MsgMailClaimResultS2C::SharedCtor() {
  _cached_size_ = 0;
  msgtype_ = 2915;
  result_ = -1;
  coin_ = 0;
  ticket_ = 0;
  cash_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgMailClaimResultS2C::~MsgMailClaimResultS2C() {
  // @@protoc_insertion_point(destructor:MsgPB.MsgMailClaimResultS2C)
  SharedDtor();
}

void MsgMailClaimResultS2C::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgMailClaimResultS2C::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgMailClaimResultS2C::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgMailClaimResultS2C_descriptor_;
}

const MsgMailClaimResultS2C& MsgMailClaimResultS2C::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgMail_2eproto();
  return *default_instance_;
}

MsgMailClaimResultS2C* MsgMailClaimResultS2C::default_instance_ = NULL;

MsgMailClaimResultS2C* MsgMailClaimResultS2C::New() const {
  return new MsgMailClaimResultS2C;
}

void MsgMailClaimResultS2C::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<MsgMailClaimResultS2C*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 31) {
    ZR_(coin_, ticket_);
    msgtype_ = 2915;
    result_ = -1;
    cash_ = 0;
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  item_.Clear();
  mail_uuids_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgMailClaimResultS2C::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.MsgMailClaimResultS2C)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_MAIL_CLAIM_RESULT_S2C];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::EMsgType_IsValid(value)) {
            set_msgtype(static_cast< ::MsgPB::EMsgType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_result;
        break;
      }

      // optional .MsgPB.MsgMailClaimResultS2C.RESULT result = 2;
      case 2: {
        if (tag == 16) {
         parse_result:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::MsgMailClaimResultS2C_RESULT_IsValid(value)) {
            set_result(static_cast< ::MsgPB::MsgMailClaimResultS2C_RESULT >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_coin;
        break;
      }

      // optional int32 coin = 3;
      case 3: {
        if (tag == 24) {
         parse_coin:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &coin_)));
          set_has_coin();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_ticket;
        break;
      }

      // optional int32 ticket = 4;
      case 4: {
        if (tag == 32) {
         parse_ticket:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ticket_)));
          set_has_ticket();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_cash;
        break;
      }

      // optional int32 cash = 5;
      case 5: {
        if (tag == 40) {
         parse_cash:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cash_)));
          set_has_cash();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_item;
        break;
      }

      // repeated .MsgPB.ItemReward item = 6;
      case 6: {
        if (tag == 50) {
         parse_item:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_item()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_item;
        if (input->ExpectTag(58)) goto parse_mail_uuids;
        break;
      }

      // repeated .MsgPB.MsgRepeatedUUID mail_uuids = 7;
      case 7: {
        if (tag == 58) {
         parse_mail_uuids:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_mail_uuids()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_mail_uuids;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.MsgMailClaimResultS2C)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.MsgMailClaimResultS2C)
  return false;
#undef DO_
}

void MsgMailClaimResultS2C::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.MsgMailClaimResultS2C)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_MAIL_CLAIM_RESULT_S2C];
  if (has_msgtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->msgtype(), output);
  }

  // optional .MsgPB.MsgMailClaimResultS2C.RESULT result = 2;
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->result(), output);
  }

  // optional int32 coin = 3;
  if (has_coin()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->coin(), output);
  }

  // optional int32 ticket = 4;
  if (has_ticket()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->ticket(), output);
  }

  // optional int32 cash = 5;
  if (has_cash()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->cash(), output);
  }

  // repeated .MsgPB.ItemReward item = 6;
  for (int i = 0; i < this->item_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->item(i), output);
  }

  // repeated .MsgPB.MsgRepeatedUUID mail_uuids = 7;
  for (int i = 0; i < this->mail_uuids_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->mail_uuids(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.MsgMailClaimResultS2C)
}

::google::protobuf::uint8* MsgMailClaimResultS2C::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.MsgMailClaimResultS2C)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_MAIL_CLAIM_RESULT_S2C];
  if (has_msgtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->msgtype(), target);
  }

  // optional .MsgPB.MsgMailClaimResultS2C.RESULT result = 2;
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->result(), target);
  }

  // optional int32 coin = 3;
  if (has_coin()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->coin(), target);
  }

  // optional int32 ticket = 4;
  if (has_ticket()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->ticket(), target);
  }

  // optional int32 cash = 5;
  if (has_cash()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->cash(), target);
  }

  // repeated .MsgPB.ItemReward item = 6;
  for (int i = 0; i < this->item_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        6, this->item(i), target);
  }

  // repeated .MsgPB.MsgRepeatedUUID mail_uuids = 7;
  for (int i = 0; i < this->mail_uuids_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        7, this->mail_uuids(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.MsgMailClaimResultS2C)
  return target;
}

int MsgMailClaimResultS2C::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_MAIL_CLAIM_RESULT_S2C];
    if (has_msgtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgtype());
    }

    // optional .MsgPB.MsgMailClaimResultS2C.RESULT result = 2;
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->result());
    }

    // optional int32 coin = 3;
    if (has_coin()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->coin());
    }

    // optional int32 ticket = 4;
    if (has_ticket()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->ticket());
    }

    // optional int32 cash = 5;
    if (has_cash()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->cash());
    }

  }
  // repeated .MsgPB.ItemReward item = 6;
  total_size += 1 * this->item_size();
  for (int i = 0; i < this->item_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->item(i));
  }

  // repeated .MsgPB.MsgRepeatedUUID mail_uuids = 7;
  total_size += 1 * this->mail_uuids_size();
  for (int i = 0; i < this->mail_uuids_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->mail_uuids(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgMailClaimResultS2C::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgMailClaimResultS2C* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgMailClaimResultS2C*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgMailClaimResultS2C::MergeFrom(const MsgMailClaimResultS2C& from) {
  GOOGLE_CHECK_NE(&from, this);
  item_.MergeFrom(from.item_);
  mail_uuids_.MergeFrom(from.mail_uuids_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msgtype()) {
      set_msgtype(from.msgtype());
    }
    if (from.has_result()) {
      set_result(from.result());
    }
    if (from.has_coin()) {
      set_coin(from.coin());
    }
    if (from.has_ticket()) {
      set_ticket(from.ticket());
    }
    if (from.has_cash()) {
      set_cash(from.cash());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgMailClaimResultS2C::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgMailClaimResultS2C::CopyFrom(const MsgMailClaimResultS2C& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgMailClaimResultS2C::IsInitialized() const {

  return true;
}

void MsgMailClaimResultS2C::Swap(MsgMailClaimResultS2C* other) {
  if (other != this) {
    std::swap(msgtype_, other->msgtype_);
    std::swap(result_, other->result_);
    std::swap(coin_, other->coin_);
    std::swap(ticket_, other->ticket_);
    std::swap(cash_, other->cash_);
    item_.Swap(&other->item_);
    mail_uuids_.Swap(&other->mail_uuids_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgMailClaimResultS2C::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgMailClaimResultS2C_descriptor_;
  metadata.reflection = MsgMailClaimResultS2C_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgMailDeleteC2S::kMsgTypeFieldNumber;
const int MsgMailDeleteC2S::kIggidFieldNumber;
const int MsgMailDeleteC2S::kMailUuidsFieldNumber;
#endif  // !_MSC_VER

MsgMailDeleteC2S::MsgMailDeleteC2S()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.MsgMailDeleteC2S)
}

void MsgMailDeleteC2S::InitAsDefaultInstance() {
}

MsgMailDeleteC2S::MsgMailDeleteC2S(const MsgMailDeleteC2S& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.MsgMailDeleteC2S)
}

void MsgMailDeleteC2S::SharedCtor() {
  _cached_size_ = 0;
  msgtype_ = 2916;
  iggid_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgMailDeleteC2S::~MsgMailDeleteC2S() {
  // @@protoc_insertion_point(destructor:MsgPB.MsgMailDeleteC2S)
  SharedDtor();
}

void MsgMailDeleteC2S::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgMailDeleteC2S::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgMailDeleteC2S::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgMailDeleteC2S_descriptor_;
}

const MsgMailDeleteC2S& MsgMailDeleteC2S::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgMail_2eproto();
  return *default_instance_;
}

MsgMailDeleteC2S* MsgMailDeleteC2S::default_instance_ = NULL;

MsgMailDeleteC2S* MsgMailDeleteC2S::New() const {
  return new MsgMailDeleteC2S;
}

void MsgMailDeleteC2S::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    msgtype_ = 2916;
    iggid_ = GOOGLE_LONGLONG(0);
  }
  mail_uuids_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgMailDeleteC2S::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.MsgMailDeleteC2S)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_MAIL_DELETE_C2S];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::EMsgType_IsValid(value)) {
            set_msgtype(static_cast< ::MsgPB::EMsgType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_iggid;
        break;
      }

      // optional int64 iggid = 2;
      case 2: {
        if (tag == 16) {
         parse_iggid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &iggid_)));
          set_has_iggid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_mail_uuids;
        break;
      }

      // repeated .MsgPB.MsgRepeatedUUID mail_uuids = 3;
      case 3: {
        if (tag == 26) {
         parse_mail_uuids:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_mail_uuids()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_mail_uuids;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.MsgMailDeleteC2S)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.MsgMailDeleteC2S)
  return false;
#undef DO_
}

void MsgMailDeleteC2S::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.MsgMailDeleteC2S)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_MAIL_DELETE_C2S];
  if (has_msgtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->msgtype(), output);
  }

  // optional int64 iggid = 2;
  if (has_iggid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->iggid(), output);
  }

  // repeated .MsgPB.MsgRepeatedUUID mail_uuids = 3;
  for (int i = 0; i < this->mail_uuids_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->mail_uuids(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.MsgMailDeleteC2S)
}

::google::protobuf::uint8* MsgMailDeleteC2S::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.MsgMailDeleteC2S)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_MAIL_DELETE_C2S];
  if (has_msgtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->msgtype(), target);
  }

  // optional int64 iggid = 2;
  if (has_iggid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->iggid(), target);
  }

  // repeated .MsgPB.MsgRepeatedUUID mail_uuids = 3;
  for (int i = 0; i < this->mail_uuids_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->mail_uuids(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.MsgMailDeleteC2S)
  return target;
}

int MsgMailDeleteC2S::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_MAIL_DELETE_C2S];
    if (has_msgtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgtype());
    }

    // optional int64 iggid = 2;
    if (has_iggid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->iggid());
    }

  }
  // repeated .MsgPB.MsgRepeatedUUID mail_uuids = 3;
  total_size += 1 * this->mail_uuids_size();
  for (int i = 0; i < this->mail_uuids_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->mail_uuids(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgMailDeleteC2S::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgMailDeleteC2S* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgMailDeleteC2S*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgMailDeleteC2S::MergeFrom(const MsgMailDeleteC2S& from) {
  GOOGLE_CHECK_NE(&from, this);
  mail_uuids_.MergeFrom(from.mail_uuids_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msgtype()) {
      set_msgtype(from.msgtype());
    }
    if (from.has_iggid()) {
      set_iggid(from.iggid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgMailDeleteC2S::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgMailDeleteC2S::CopyFrom(const MsgMailDeleteC2S& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgMailDeleteC2S::IsInitialized() const {

  return true;
}

void MsgMailDeleteC2S::Swap(MsgMailDeleteC2S* other) {
  if (other != this) {
    std::swap(msgtype_, other->msgtype_);
    std::swap(iggid_, other->iggid_);
    mail_uuids_.Swap(&other->mail_uuids_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgMailDeleteC2S::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgMailDeleteC2S_descriptor_;
  metadata.reflection = MsgMailDeleteC2S_reflection_;
  return metadata;
}


// ===================================================================

const ::google::protobuf::EnumDescriptor* MsgMailDeleteResultS2C_RESULT_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgMailDeleteResultS2C_RESULT_descriptor_;
}
bool MsgMailDeleteResultS2C_RESULT_IsValid(int value) {
  switch(value) {
    case -1:
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const MsgMailDeleteResultS2C_RESULT MsgMailDeleteResultS2C::FAILURE;
const MsgMailDeleteResultS2C_RESULT MsgMailDeleteResultS2C::SUCCESS;
const MsgMailDeleteResultS2C_RESULT MsgMailDeleteResultS2C::HAS_PACKET;
const MsgMailDeleteResultS2C_RESULT MsgMailDeleteResultS2C::RESULT_MIN;
const MsgMailDeleteResultS2C_RESULT MsgMailDeleteResultS2C::RESULT_MAX;
const int MsgMailDeleteResultS2C::RESULT_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int MsgMailDeleteResultS2C::kMsgTypeFieldNumber;
const int MsgMailDeleteResultS2C::kResultFieldNumber;
const int MsgMailDeleteResultS2C::kMailUuidsFieldNumber;
#endif  // !_MSC_VER

MsgMailDeleteResultS2C::MsgMailDeleteResultS2C()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.MsgMailDeleteResultS2C)
}

void MsgMailDeleteResultS2C::InitAsDefaultInstance() {
}

MsgMailDeleteResultS2C::MsgMailDeleteResultS2C(const MsgMailDeleteResultS2C& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.MsgMailDeleteResultS2C)
}

void MsgMailDeleteResultS2C::SharedCtor() {
  _cached_size_ = 0;
  msgtype_ = 2917;
  result_ = -1;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgMailDeleteResultS2C::~MsgMailDeleteResultS2C() {
  // @@protoc_insertion_point(destructor:MsgPB.MsgMailDeleteResultS2C)
  SharedDtor();
}

void MsgMailDeleteResultS2C::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgMailDeleteResultS2C::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgMailDeleteResultS2C::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgMailDeleteResultS2C_descriptor_;
}

const MsgMailDeleteResultS2C& MsgMailDeleteResultS2C::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgMail_2eproto();
  return *default_instance_;
}

MsgMailDeleteResultS2C* MsgMailDeleteResultS2C::default_instance_ = NULL;

MsgMailDeleteResultS2C* MsgMailDeleteResultS2C::New() const {
  return new MsgMailDeleteResultS2C;
}

void MsgMailDeleteResultS2C::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    msgtype_ = 2917;
    result_ = -1;
  }
  mail_uuids_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgMailDeleteResultS2C::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.MsgMailDeleteResultS2C)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_MAIL_DELETE_RESULT_S2C];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::EMsgType_IsValid(value)) {
            set_msgtype(static_cast< ::MsgPB::EMsgType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_result;
        break;
      }

      // optional .MsgPB.MsgMailDeleteResultS2C.RESULT result = 2;
      case 2: {
        if (tag == 16) {
         parse_result:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::MsgMailDeleteResultS2C_RESULT_IsValid(value)) {
            set_result(static_cast< ::MsgPB::MsgMailDeleteResultS2C_RESULT >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_mail_uuids;
        break;
      }

      // repeated .MsgPB.MsgRepeatedUUID mail_uuids = 3;
      case 3: {
        if (tag == 26) {
         parse_mail_uuids:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_mail_uuids()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_mail_uuids;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.MsgMailDeleteResultS2C)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.MsgMailDeleteResultS2C)
  return false;
#undef DO_
}

void MsgMailDeleteResultS2C::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.MsgMailDeleteResultS2C)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_MAIL_DELETE_RESULT_S2C];
  if (has_msgtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->msgtype(), output);
  }

  // optional .MsgPB.MsgMailDeleteResultS2C.RESULT result = 2;
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->result(), output);
  }

  // repeated .MsgPB.MsgRepeatedUUID mail_uuids = 3;
  for (int i = 0; i < this->mail_uuids_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->mail_uuids(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.MsgMailDeleteResultS2C)
}

::google::protobuf::uint8* MsgMailDeleteResultS2C::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.MsgMailDeleteResultS2C)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_MAIL_DELETE_RESULT_S2C];
  if (has_msgtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->msgtype(), target);
  }

  // optional .MsgPB.MsgMailDeleteResultS2C.RESULT result = 2;
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->result(), target);
  }

  // repeated .MsgPB.MsgRepeatedUUID mail_uuids = 3;
  for (int i = 0; i < this->mail_uuids_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->mail_uuids(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.MsgMailDeleteResultS2C)
  return target;
}

int MsgMailDeleteResultS2C::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_MAIL_DELETE_RESULT_S2C];
    if (has_msgtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgtype());
    }

    // optional .MsgPB.MsgMailDeleteResultS2C.RESULT result = 2;
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->result());
    }

  }
  // repeated .MsgPB.MsgRepeatedUUID mail_uuids = 3;
  total_size += 1 * this->mail_uuids_size();
  for (int i = 0; i < this->mail_uuids_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->mail_uuids(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgMailDeleteResultS2C::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgMailDeleteResultS2C* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgMailDeleteResultS2C*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgMailDeleteResultS2C::MergeFrom(const MsgMailDeleteResultS2C& from) {
  GOOGLE_CHECK_NE(&from, this);
  mail_uuids_.MergeFrom(from.mail_uuids_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msgtype()) {
      set_msgtype(from.msgtype());
    }
    if (from.has_result()) {
      set_result(from.result());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgMailDeleteResultS2C::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgMailDeleteResultS2C::CopyFrom(const MsgMailDeleteResultS2C& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgMailDeleteResultS2C::IsInitialized() const {

  return true;
}

void MsgMailDeleteResultS2C::Swap(MsgMailDeleteResultS2C* other) {
  if (other != this) {
    std::swap(msgtype_, other->msgtype_);
    std::swap(result_, other->result_);
    mail_uuids_.Swap(&other->mail_uuids_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgMailDeleteResultS2C::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgMailDeleteResultS2C_descriptor_;
  metadata.reflection = MsgMailDeleteResultS2C_reflection_;
  return metadata;
}


// ===================================================================

const ::google::protobuf::EnumDescriptor* MsgMailSyncS2S_MODE_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgMailSyncS2S_MODE_descriptor_;
}
bool MsgMailSyncS2S_MODE_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const MsgMailSyncS2S_MODE MsgMailSyncS2S::NEW;
const MsgMailSyncS2S_MODE MsgMailSyncS2S::MAP_SYNC;
const MsgMailSyncS2S_MODE MsgMailSyncS2S::LOAD_RESULT;
const MsgMailSyncS2S_MODE MsgMailSyncS2S::MODE_MIN;
const MsgMailSyncS2S_MODE MsgMailSyncS2S::MODE_MAX;
const int MsgMailSyncS2S::MODE_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int MsgMailSyncS2S::kMsgTypeFieldNumber;
const int MsgMailSyncS2S::kModeFieldNumber;
const int MsgMailSyncS2S::kCompleteMailFieldNumber;
const int MsgMailSyncS2S::kIggidFieldNumber;
const int MsgMailSyncS2S::kTimestampFieldNumber;
const int MsgMailSyncS2S::kReceiveTypeFieldNumber;
const int MsgMailSyncS2S::kEndFlagFieldNumber;
#endif  // !_MSC_VER

MsgMailSyncS2S::MsgMailSyncS2S()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.MsgMailSyncS2S)
}

void MsgMailSyncS2S::InitAsDefaultInstance() {
}

MsgMailSyncS2S::MsgMailSyncS2S(const MsgMailSyncS2S& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.MsgMailSyncS2S)
}

void MsgMailSyncS2S::SharedCtor() {
  _cached_size_ = 0;
  msgtype_ = 2940;
  mode_ = 0;
  iggid_ = GOOGLE_LONGLONG(0);
  timestamp_ = GOOGLE_LONGLONG(0);
  receive_type_ = 1;
  end_flag_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgMailSyncS2S::~MsgMailSyncS2S() {
  // @@protoc_insertion_point(destructor:MsgPB.MsgMailSyncS2S)
  SharedDtor();
}

void MsgMailSyncS2S::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgMailSyncS2S::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgMailSyncS2S::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgMailSyncS2S_descriptor_;
}

const MsgMailSyncS2S& MsgMailSyncS2S::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgMail_2eproto();
  return *default_instance_;
}

MsgMailSyncS2S* MsgMailSyncS2S::default_instance_ = NULL;

MsgMailSyncS2S* MsgMailSyncS2S::New() const {
  return new MsgMailSyncS2S;
}

void MsgMailSyncS2S::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<MsgMailSyncS2S*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 123) {
    ZR_(iggid_, timestamp_);
    msgtype_ = 2940;
    mode_ = 0;
    receive_type_ = 1;
    end_flag_ = false;
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  complete_mail_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgMailSyncS2S::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.MsgMailSyncS2S)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_MAIL_SYNC_S2C];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::EMsgType_IsValid(value)) {
            set_msgtype(static_cast< ::MsgPB::EMsgType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_mode;
        break;
      }

      // optional .MsgPB.MsgMailSyncS2S.MODE mode = 2;
      case 2: {
        if (tag == 16) {
         parse_mode:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::MsgMailSyncS2S_MODE_IsValid(value)) {
            set_mode(static_cast< ::MsgPB::MsgMailSyncS2S_MODE >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_complete_mail;
        break;
      }

      // repeated .MsgPB.MsgMailComplete complete_mail = 3;
      case 3: {
        if (tag == 26) {
         parse_complete_mail:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_complete_mail()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_complete_mail;
        if (input->ExpectTag(32)) goto parse_iggid;
        break;
      }

      // optional int64 iggid = 4;
      case 4: {
        if (tag == 32) {
         parse_iggid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &iggid_)));
          set_has_iggid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_timestamp;
        break;
      }

      // optional int64 timestamp = 5;
      case 5: {
        if (tag == 40) {
         parse_timestamp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &timestamp_)));
          set_has_timestamp();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_receive_type;
        break;
      }

      // optional .MsgPB.MAIL_RECEIVE_TYPE receive_type = 6;
      case 6: {
        if (tag == 48) {
         parse_receive_type:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::MAIL_RECEIVE_TYPE_IsValid(value)) {
            set_receive_type(static_cast< ::MsgPB::MAIL_RECEIVE_TYPE >(value));
          } else {
            mutable_unknown_fields()->AddVarint(6, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_end_flag;
        break;
      }

      // optional bool end_flag = 7;
      case 7: {
        if (tag == 56) {
         parse_end_flag:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &end_flag_)));
          set_has_end_flag();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.MsgMailSyncS2S)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.MsgMailSyncS2S)
  return false;
#undef DO_
}

void MsgMailSyncS2S::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.MsgMailSyncS2S)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_MAIL_SYNC_S2C];
  if (has_msgtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->msgtype(), output);
  }

  // optional .MsgPB.MsgMailSyncS2S.MODE mode = 2;
  if (has_mode()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->mode(), output);
  }

  // repeated .MsgPB.MsgMailComplete complete_mail = 3;
  for (int i = 0; i < this->complete_mail_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->complete_mail(i), output);
  }

  // optional int64 iggid = 4;
  if (has_iggid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->iggid(), output);
  }

  // optional int64 timestamp = 5;
  if (has_timestamp()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(5, this->timestamp(), output);
  }

  // optional .MsgPB.MAIL_RECEIVE_TYPE receive_type = 6;
  if (has_receive_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      6, this->receive_type(), output);
  }

  // optional bool end_flag = 7;
  if (has_end_flag()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(7, this->end_flag(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.MsgMailSyncS2S)
}

::google::protobuf::uint8* MsgMailSyncS2S::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.MsgMailSyncS2S)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_MAIL_SYNC_S2C];
  if (has_msgtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->msgtype(), target);
  }

  // optional .MsgPB.MsgMailSyncS2S.MODE mode = 2;
  if (has_mode()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->mode(), target);
  }

  // repeated .MsgPB.MsgMailComplete complete_mail = 3;
  for (int i = 0; i < this->complete_mail_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->complete_mail(i), target);
  }

  // optional int64 iggid = 4;
  if (has_iggid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->iggid(), target);
  }

  // optional int64 timestamp = 5;
  if (has_timestamp()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(5, this->timestamp(), target);
  }

  // optional .MsgPB.MAIL_RECEIVE_TYPE receive_type = 6;
  if (has_receive_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      6, this->receive_type(), target);
  }

  // optional bool end_flag = 7;
  if (has_end_flag()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(7, this->end_flag(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.MsgMailSyncS2S)
  return target;
}

int MsgMailSyncS2S::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_MAIL_SYNC_S2C];
    if (has_msgtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgtype());
    }

    // optional .MsgPB.MsgMailSyncS2S.MODE mode = 2;
    if (has_mode()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->mode());
    }

    // optional int64 iggid = 4;
    if (has_iggid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->iggid());
    }

    // optional int64 timestamp = 5;
    if (has_timestamp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->timestamp());
    }

    // optional .MsgPB.MAIL_RECEIVE_TYPE receive_type = 6;
    if (has_receive_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->receive_type());
    }

    // optional bool end_flag = 7;
    if (has_end_flag()) {
      total_size += 1 + 1;
    }

  }
  // repeated .MsgPB.MsgMailComplete complete_mail = 3;
  total_size += 1 * this->complete_mail_size();
  for (int i = 0; i < this->complete_mail_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->complete_mail(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgMailSyncS2S::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgMailSyncS2S* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgMailSyncS2S*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgMailSyncS2S::MergeFrom(const MsgMailSyncS2S& from) {
  GOOGLE_CHECK_NE(&from, this);
  complete_mail_.MergeFrom(from.complete_mail_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msgtype()) {
      set_msgtype(from.msgtype());
    }
    if (from.has_mode()) {
      set_mode(from.mode());
    }
    if (from.has_iggid()) {
      set_iggid(from.iggid());
    }
    if (from.has_timestamp()) {
      set_timestamp(from.timestamp());
    }
    if (from.has_receive_type()) {
      set_receive_type(from.receive_type());
    }
    if (from.has_end_flag()) {
      set_end_flag(from.end_flag());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgMailSyncS2S::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgMailSyncS2S::CopyFrom(const MsgMailSyncS2S& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgMailSyncS2S::IsInitialized() const {

  return true;
}

void MsgMailSyncS2S::Swap(MsgMailSyncS2S* other) {
  if (other != this) {
    std::swap(msgtype_, other->msgtype_);
    std::swap(mode_, other->mode_);
    complete_mail_.Swap(&other->complete_mail_);
    std::swap(iggid_, other->iggid_);
    std::swap(timestamp_, other->timestamp_);
    std::swap(receive_type_, other->receive_type_);
    std::swap(end_flag_, other->end_flag_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgMailSyncS2S::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgMailSyncS2S_descriptor_;
  metadata.reflection = MsgMailSyncS2S_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgMailMapLoadS2S::kMsgTypeFieldNumber;
const int MsgMailMapLoadS2S::kIggidFieldNumber;
const int MsgMailMapLoadS2S::kTimestampFieldNumber;
const int MsgMailMapLoadS2S::kReceiveTypeFieldNumber;
const int MsgMailMapLoadS2S::kMsMailsFieldNumber;
#endif  // !_MSC_VER

MsgMailMapLoadS2S::MsgMailMapLoadS2S()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.MsgMailMapLoadS2S)
}

void MsgMailMapLoadS2S::InitAsDefaultInstance() {
}

MsgMailMapLoadS2S::MsgMailMapLoadS2S(const MsgMailMapLoadS2S& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.MsgMailMapLoadS2S)
}

void MsgMailMapLoadS2S::SharedCtor() {
  _cached_size_ = 0;
  msgtype_ = 2941;
  iggid_ = GOOGLE_LONGLONG(0);
  timestamp_ = GOOGLE_LONGLONG(0);
  receive_type_ = 1;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgMailMapLoadS2S::~MsgMailMapLoadS2S() {
  // @@protoc_insertion_point(destructor:MsgPB.MsgMailMapLoadS2S)
  SharedDtor();
}

void MsgMailMapLoadS2S::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgMailMapLoadS2S::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgMailMapLoadS2S::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgMailMapLoadS2S_descriptor_;
}

const MsgMailMapLoadS2S& MsgMailMapLoadS2S::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgMail_2eproto();
  return *default_instance_;
}

MsgMailMapLoadS2S* MsgMailMapLoadS2S::default_instance_ = NULL;

MsgMailMapLoadS2S* MsgMailMapLoadS2S::New() const {
  return new MsgMailMapLoadS2S;
}

void MsgMailMapLoadS2S::Clear() {
  if (_has_bits_[0 / 32] & 15) {
    msgtype_ = 2941;
    iggid_ = GOOGLE_LONGLONG(0);
    timestamp_ = GOOGLE_LONGLONG(0);
    receive_type_ = 1;
  }
  ms_mails_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgMailMapLoadS2S::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.MsgMailMapLoadS2S)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_MAIL_MAP_LOAD_S2C];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::EMsgType_IsValid(value)) {
            set_msgtype(static_cast< ::MsgPB::EMsgType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_iggid;
        break;
      }

      // optional int64 iggid = 2;
      case 2: {
        if (tag == 16) {
         parse_iggid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &iggid_)));
          set_has_iggid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_timestamp;
        break;
      }

      // optional int64 timestamp = 3;
      case 3: {
        if (tag == 24) {
         parse_timestamp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &timestamp_)));
          set_has_timestamp();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_receive_type;
        break;
      }

      // optional .MsgPB.MAIL_RECEIVE_TYPE receive_type = 4;
      case 4: {
        if (tag == 32) {
         parse_receive_type:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::MAIL_RECEIVE_TYPE_IsValid(value)) {
            set_receive_type(static_cast< ::MsgPB::MAIL_RECEIVE_TYPE >(value));
          } else {
            mutable_unknown_fields()->AddVarint(4, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_ms_mails;
        break;
      }

      // repeated int64 ms_mails = 5;
      case 5: {
        if (tag == 40) {
         parse_ms_mails:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 40, input, this->mutable_ms_mails())));
        } else if (tag == 42) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_ms_mails())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_ms_mails;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.MsgMailMapLoadS2S)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.MsgMailMapLoadS2S)
  return false;
#undef DO_
}

void MsgMailMapLoadS2S::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.MsgMailMapLoadS2S)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_MAIL_MAP_LOAD_S2C];
  if (has_msgtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->msgtype(), output);
  }

  // optional int64 iggid = 2;
  if (has_iggid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->iggid(), output);
  }

  // optional int64 timestamp = 3;
  if (has_timestamp()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->timestamp(), output);
  }

  // optional .MsgPB.MAIL_RECEIVE_TYPE receive_type = 4;
  if (has_receive_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->receive_type(), output);
  }

  // repeated int64 ms_mails = 5;
  for (int i = 0; i < this->ms_mails_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(
      5, this->ms_mails(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.MsgMailMapLoadS2S)
}

::google::protobuf::uint8* MsgMailMapLoadS2S::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.MsgMailMapLoadS2S)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_MAIL_MAP_LOAD_S2C];
  if (has_msgtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->msgtype(), target);
  }

  // optional int64 iggid = 2;
  if (has_iggid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->iggid(), target);
  }

  // optional int64 timestamp = 3;
  if (has_timestamp()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->timestamp(), target);
  }

  // optional .MsgPB.MAIL_RECEIVE_TYPE receive_type = 4;
  if (has_receive_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->receive_type(), target);
  }

  // repeated int64 ms_mails = 5;
  for (int i = 0; i < this->ms_mails_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64ToArray(5, this->ms_mails(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.MsgMailMapLoadS2S)
  return target;
}

int MsgMailMapLoadS2S::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_MAIL_MAP_LOAD_S2C];
    if (has_msgtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgtype());
    }

    // optional int64 iggid = 2;
    if (has_iggid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->iggid());
    }

    // optional int64 timestamp = 3;
    if (has_timestamp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->timestamp());
    }

    // optional .MsgPB.MAIL_RECEIVE_TYPE receive_type = 4;
    if (has_receive_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->receive_type());
    }

  }
  // repeated int64 ms_mails = 5;
  {
    int data_size = 0;
    for (int i = 0; i < this->ms_mails_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int64Size(this->ms_mails(i));
    }
    total_size += 1 * this->ms_mails_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgMailMapLoadS2S::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgMailMapLoadS2S* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgMailMapLoadS2S*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgMailMapLoadS2S::MergeFrom(const MsgMailMapLoadS2S& from) {
  GOOGLE_CHECK_NE(&from, this);
  ms_mails_.MergeFrom(from.ms_mails_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msgtype()) {
      set_msgtype(from.msgtype());
    }
    if (from.has_iggid()) {
      set_iggid(from.iggid());
    }
    if (from.has_timestamp()) {
      set_timestamp(from.timestamp());
    }
    if (from.has_receive_type()) {
      set_receive_type(from.receive_type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgMailMapLoadS2S::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgMailMapLoadS2S::CopyFrom(const MsgMailMapLoadS2S& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgMailMapLoadS2S::IsInitialized() const {

  return true;
}

void MsgMailMapLoadS2S::Swap(MsgMailMapLoadS2S* other) {
  if (other != this) {
    std::swap(msgtype_, other->msgtype_);
    std::swap(iggid_, other->iggid_);
    std::swap(timestamp_, other->timestamp_);
    std::swap(receive_type_, other->receive_type_);
    ms_mails_.Swap(&other->ms_mails_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgMailMapLoadS2S::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgMailMapLoadS2S_descriptor_;
  metadata.reflection = MsgMailMapLoadS2S_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgMailMapDelS2S::kMsgTypeFieldNumber;
const int MsgMailMapDelS2S::kMailUuidsFieldNumber;
const int MsgMailMapDelS2S::kIggidFieldNumber;
#endif  // !_MSC_VER

MsgMailMapDelS2S::MsgMailMapDelS2S()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.MsgMailMapDelS2S)
}

void MsgMailMapDelS2S::InitAsDefaultInstance() {
}

MsgMailMapDelS2S::MsgMailMapDelS2S(const MsgMailMapDelS2S& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.MsgMailMapDelS2S)
}

void MsgMailMapDelS2S::SharedCtor() {
  _cached_size_ = 0;
  msgtype_ = 2942;
  iggid_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgMailMapDelS2S::~MsgMailMapDelS2S() {
  // @@protoc_insertion_point(destructor:MsgPB.MsgMailMapDelS2S)
  SharedDtor();
}

void MsgMailMapDelS2S::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgMailMapDelS2S::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgMailMapDelS2S::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgMailMapDelS2S_descriptor_;
}

const MsgMailMapDelS2S& MsgMailMapDelS2S::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgMail_2eproto();
  return *default_instance_;
}

MsgMailMapDelS2S* MsgMailMapDelS2S::default_instance_ = NULL;

MsgMailMapDelS2S* MsgMailMapDelS2S::New() const {
  return new MsgMailMapDelS2S;
}

void MsgMailMapDelS2S::Clear() {
  if (_has_bits_[0 / 32] & 5) {
    msgtype_ = 2942;
    iggid_ = GOOGLE_LONGLONG(0);
  }
  mail_uuids_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgMailMapDelS2S::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.MsgMailMapDelS2S)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_MAIL_MAP_DEL_S2C];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::EMsgType_IsValid(value)) {
            set_msgtype(static_cast< ::MsgPB::EMsgType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_mail_uuids;
        break;
      }

      // repeated .MsgPB.MsgRepeatedUUID mail_uuids = 2;
      case 2: {
        if (tag == 18) {
         parse_mail_uuids:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_mail_uuids()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_mail_uuids;
        if (input->ExpectTag(24)) goto parse_iggid;
        break;
      }

      // optional int64 iggid = 3;
      case 3: {
        if (tag == 24) {
         parse_iggid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &iggid_)));
          set_has_iggid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.MsgMailMapDelS2S)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.MsgMailMapDelS2S)
  return false;
#undef DO_
}

void MsgMailMapDelS2S::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.MsgMailMapDelS2S)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_MAIL_MAP_DEL_S2C];
  if (has_msgtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->msgtype(), output);
  }

  // repeated .MsgPB.MsgRepeatedUUID mail_uuids = 2;
  for (int i = 0; i < this->mail_uuids_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->mail_uuids(i), output);
  }

  // optional int64 iggid = 3;
  if (has_iggid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->iggid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.MsgMailMapDelS2S)
}

::google::protobuf::uint8* MsgMailMapDelS2S::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.MsgMailMapDelS2S)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_MAIL_MAP_DEL_S2C];
  if (has_msgtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->msgtype(), target);
  }

  // repeated .MsgPB.MsgRepeatedUUID mail_uuids = 2;
  for (int i = 0; i < this->mail_uuids_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->mail_uuids(i), target);
  }

  // optional int64 iggid = 3;
  if (has_iggid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->iggid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.MsgMailMapDelS2S)
  return target;
}

int MsgMailMapDelS2S::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_MAIL_MAP_DEL_S2C];
    if (has_msgtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgtype());
    }

    // optional int64 iggid = 3;
    if (has_iggid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->iggid());
    }

  }
  // repeated .MsgPB.MsgRepeatedUUID mail_uuids = 2;
  total_size += 1 * this->mail_uuids_size();
  for (int i = 0; i < this->mail_uuids_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->mail_uuids(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgMailMapDelS2S::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgMailMapDelS2S* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgMailMapDelS2S*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgMailMapDelS2S::MergeFrom(const MsgMailMapDelS2S& from) {
  GOOGLE_CHECK_NE(&from, this);
  mail_uuids_.MergeFrom(from.mail_uuids_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msgtype()) {
      set_msgtype(from.msgtype());
    }
    if (from.has_iggid()) {
      set_iggid(from.iggid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgMailMapDelS2S::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgMailMapDelS2S::CopyFrom(const MsgMailMapDelS2S& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgMailMapDelS2S::IsInitialized() const {

  return true;
}

void MsgMailMapDelS2S::Swap(MsgMailMapDelS2S* other) {
  if (other != this) {
    std::swap(msgtype_, other->msgtype_);
    mail_uuids_.Swap(&other->mail_uuids_);
    std::swap(iggid_, other->iggid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgMailMapDelS2S::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgMailMapDelS2S_descriptor_;
  metadata.reflection = MsgMailMapDelS2S_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgMailGetNewCountS2S::kMsgTypeFieldNumber;
const int MsgMailGetNewCountS2S::kIggidFieldNumber;
#endif  // !_MSC_VER

MsgMailGetNewCountS2S::MsgMailGetNewCountS2S()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.MsgMailGetNewCountS2S)
}

void MsgMailGetNewCountS2S::InitAsDefaultInstance() {
}

MsgMailGetNewCountS2S::MsgMailGetNewCountS2S(const MsgMailGetNewCountS2S& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.MsgMailGetNewCountS2S)
}

void MsgMailGetNewCountS2S::SharedCtor() {
  _cached_size_ = 0;
  msgtype_ = 2943;
  iggid_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgMailGetNewCountS2S::~MsgMailGetNewCountS2S() {
  // @@protoc_insertion_point(destructor:MsgPB.MsgMailGetNewCountS2S)
  SharedDtor();
}

void MsgMailGetNewCountS2S::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgMailGetNewCountS2S::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgMailGetNewCountS2S::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgMailGetNewCountS2S_descriptor_;
}

const MsgMailGetNewCountS2S& MsgMailGetNewCountS2S::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgMail_2eproto();
  return *default_instance_;
}

MsgMailGetNewCountS2S* MsgMailGetNewCountS2S::default_instance_ = NULL;

MsgMailGetNewCountS2S* MsgMailGetNewCountS2S::New() const {
  return new MsgMailGetNewCountS2S;
}

void MsgMailGetNewCountS2S::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    msgtype_ = 2943;
    iggid_ = GOOGLE_LONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgMailGetNewCountS2S::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.MsgMailGetNewCountS2S)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_MAIL_GET_NEW_COUNT_S2C];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::EMsgType_IsValid(value)) {
            set_msgtype(static_cast< ::MsgPB::EMsgType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_iggid;
        break;
      }

      // optional int64 iggid = 2;
      case 2: {
        if (tag == 16) {
         parse_iggid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &iggid_)));
          set_has_iggid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.MsgMailGetNewCountS2S)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.MsgMailGetNewCountS2S)
  return false;
#undef DO_
}

void MsgMailGetNewCountS2S::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.MsgMailGetNewCountS2S)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_MAIL_GET_NEW_COUNT_S2C];
  if (has_msgtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->msgtype(), output);
  }

  // optional int64 iggid = 2;
  if (has_iggid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->iggid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.MsgMailGetNewCountS2S)
}

::google::protobuf::uint8* MsgMailGetNewCountS2S::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.MsgMailGetNewCountS2S)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_MAIL_GET_NEW_COUNT_S2C];
  if (has_msgtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->msgtype(), target);
  }

  // optional int64 iggid = 2;
  if (has_iggid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->iggid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.MsgMailGetNewCountS2S)
  return target;
}

int MsgMailGetNewCountS2S::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_MAIL_GET_NEW_COUNT_S2C];
    if (has_msgtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgtype());
    }

    // optional int64 iggid = 2;
    if (has_iggid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->iggid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgMailGetNewCountS2S::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgMailGetNewCountS2S* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgMailGetNewCountS2S*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgMailGetNewCountS2S::MergeFrom(const MsgMailGetNewCountS2S& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msgtype()) {
      set_msgtype(from.msgtype());
    }
    if (from.has_iggid()) {
      set_iggid(from.iggid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgMailGetNewCountS2S::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgMailGetNewCountS2S::CopyFrom(const MsgMailGetNewCountS2S& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgMailGetNewCountS2S::IsInitialized() const {

  return true;
}

void MsgMailGetNewCountS2S::Swap(MsgMailGetNewCountS2S* other) {
  if (other != this) {
    std::swap(msgtype_, other->msgtype_);
    std::swap(iggid_, other->iggid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgMailGetNewCountS2S::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgMailGetNewCountS2S_descriptor_;
  metadata.reflection = MsgMailGetNewCountS2S_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgMailGetNewCountResultS2S::kMsgTypeFieldNumber;
const int MsgMailGetNewCountResultS2S::kCountFieldNumber;
#endif  // !_MSC_VER

MsgMailGetNewCountResultS2S::MsgMailGetNewCountResultS2S()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.MsgMailGetNewCountResultS2S)
}

void MsgMailGetNewCountResultS2S::InitAsDefaultInstance() {
}

MsgMailGetNewCountResultS2S::MsgMailGetNewCountResultS2S(const MsgMailGetNewCountResultS2S& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.MsgMailGetNewCountResultS2S)
}

void MsgMailGetNewCountResultS2S::SharedCtor() {
  _cached_size_ = 0;
  msgtype_ = 2944;
  count_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgMailGetNewCountResultS2S::~MsgMailGetNewCountResultS2S() {
  // @@protoc_insertion_point(destructor:MsgPB.MsgMailGetNewCountResultS2S)
  SharedDtor();
}

void MsgMailGetNewCountResultS2S::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgMailGetNewCountResultS2S::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgMailGetNewCountResultS2S::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgMailGetNewCountResultS2S_descriptor_;
}

const MsgMailGetNewCountResultS2S& MsgMailGetNewCountResultS2S::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgMail_2eproto();
  return *default_instance_;
}

MsgMailGetNewCountResultS2S* MsgMailGetNewCountResultS2S::default_instance_ = NULL;

MsgMailGetNewCountResultS2S* MsgMailGetNewCountResultS2S::New() const {
  return new MsgMailGetNewCountResultS2S;
}

void MsgMailGetNewCountResultS2S::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    msgtype_ = 2944;
    count_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgMailGetNewCountResultS2S::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.MsgMailGetNewCountResultS2S)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_MAIL_GET_NEW_COUNT_RESULT_S2C];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::EMsgType_IsValid(value)) {
            set_msgtype(static_cast< ::MsgPB::EMsgType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_count;
        break;
      }

      // optional int32 count = 2;
      case 2: {
        if (tag == 16) {
         parse_count:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &count_)));
          set_has_count();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.MsgMailGetNewCountResultS2S)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.MsgMailGetNewCountResultS2S)
  return false;
#undef DO_
}

void MsgMailGetNewCountResultS2S::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.MsgMailGetNewCountResultS2S)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_MAIL_GET_NEW_COUNT_RESULT_S2C];
  if (has_msgtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->msgtype(), output);
  }

  // optional int32 count = 2;
  if (has_count()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->count(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.MsgMailGetNewCountResultS2S)
}

::google::protobuf::uint8* MsgMailGetNewCountResultS2S::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.MsgMailGetNewCountResultS2S)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_MAIL_GET_NEW_COUNT_RESULT_S2C];
  if (has_msgtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->msgtype(), target);
  }

  // optional int32 count = 2;
  if (has_count()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->count(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.MsgMailGetNewCountResultS2S)
  return target;
}

int MsgMailGetNewCountResultS2S::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_MAIL_GET_NEW_COUNT_RESULT_S2C];
    if (has_msgtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgtype());
    }

    // optional int32 count = 2;
    if (has_count()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->count());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgMailGetNewCountResultS2S::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgMailGetNewCountResultS2S* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgMailGetNewCountResultS2S*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgMailGetNewCountResultS2S::MergeFrom(const MsgMailGetNewCountResultS2S& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msgtype()) {
      set_msgtype(from.msgtype());
    }
    if (from.has_count()) {
      set_count(from.count());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgMailGetNewCountResultS2S::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgMailGetNewCountResultS2S::CopyFrom(const MsgMailGetNewCountResultS2S& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgMailGetNewCountResultS2S::IsInitialized() const {

  return true;
}

void MsgMailGetNewCountResultS2S::Swap(MsgMailGetNewCountResultS2S* other) {
  if (other != this) {
    std::swap(msgtype_, other->msgtype_);
    std::swap(count_, other->count_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgMailGetNewCountResultS2S::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgMailGetNewCountResultS2S_descriptor_;
  metadata.reflection = MsgMailGetNewCountResultS2S_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgMailTemplateGet_C2S::kMsgTypeFieldNumber;
const int MsgMailTemplateGet_C2S::kIggidFieldNumber;
const int MsgMailTemplateGet_C2S::kMailTemplateIdFieldNumber;
#endif  // !_MSC_VER

MsgMailTemplateGet_C2S::MsgMailTemplateGet_C2S()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.MsgMailTemplateGet_C2S)
}

void MsgMailTemplateGet_C2S::InitAsDefaultInstance() {
}

MsgMailTemplateGet_C2S::MsgMailTemplateGet_C2S(const MsgMailTemplateGet_C2S& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.MsgMailTemplateGet_C2S)
}

void MsgMailTemplateGet_C2S::SharedCtor() {
  _cached_size_ = 0;
  msgtype_ = 2945;
  iggid_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgMailTemplateGet_C2S::~MsgMailTemplateGet_C2S() {
  // @@protoc_insertion_point(destructor:MsgPB.MsgMailTemplateGet_C2S)
  SharedDtor();
}

void MsgMailTemplateGet_C2S::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgMailTemplateGet_C2S::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgMailTemplateGet_C2S::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgMailTemplateGet_C2S_descriptor_;
}

const MsgMailTemplateGet_C2S& MsgMailTemplateGet_C2S::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgMail_2eproto();
  return *default_instance_;
}

MsgMailTemplateGet_C2S* MsgMailTemplateGet_C2S::default_instance_ = NULL;

MsgMailTemplateGet_C2S* MsgMailTemplateGet_C2S::New() const {
  return new MsgMailTemplateGet_C2S;
}

void MsgMailTemplateGet_C2S::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    msgtype_ = 2945;
    iggid_ = GOOGLE_LONGLONG(0);
  }
  mail_template_id_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgMailTemplateGet_C2S::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.MsgMailTemplateGet_C2S)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_MAIL_TEMPLATE_GET_C2S];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::EMsgType_IsValid(value)) {
            set_msgtype(static_cast< ::MsgPB::EMsgType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_iggid;
        break;
      }

      // optional int64 iggid = 2;
      case 2: {
        if (tag == 16) {
         parse_iggid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &iggid_)));
          set_has_iggid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_mail_template_id;
        break;
      }

      // repeated int32 mail_template_id = 3;
      case 3: {
        if (tag == 24) {
         parse_mail_template_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 24, input, this->mutable_mail_template_id())));
        } else if (tag == 26) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_mail_template_id())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_mail_template_id;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.MsgMailTemplateGet_C2S)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.MsgMailTemplateGet_C2S)
  return false;
#undef DO_
}

void MsgMailTemplateGet_C2S::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.MsgMailTemplateGet_C2S)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_MAIL_TEMPLATE_GET_C2S];
  if (has_msgtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->msgtype(), output);
  }

  // optional int64 iggid = 2;
  if (has_iggid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->iggid(), output);
  }

  // repeated int32 mail_template_id = 3;
  for (int i = 0; i < this->mail_template_id_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      3, this->mail_template_id(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.MsgMailTemplateGet_C2S)
}

::google::protobuf::uint8* MsgMailTemplateGet_C2S::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.MsgMailTemplateGet_C2S)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_MAIL_TEMPLATE_GET_C2S];
  if (has_msgtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->msgtype(), target);
  }

  // optional int64 iggid = 2;
  if (has_iggid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->iggid(), target);
  }

  // repeated int32 mail_template_id = 3;
  for (int i = 0; i < this->mail_template_id_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(3, this->mail_template_id(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.MsgMailTemplateGet_C2S)
  return target;
}

int MsgMailTemplateGet_C2S::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_MAIL_TEMPLATE_GET_C2S];
    if (has_msgtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgtype());
    }

    // optional int64 iggid = 2;
    if (has_iggid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->iggid());
    }

  }
  // repeated int32 mail_template_id = 3;
  {
    int data_size = 0;
    for (int i = 0; i < this->mail_template_id_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->mail_template_id(i));
    }
    total_size += 1 * this->mail_template_id_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgMailTemplateGet_C2S::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgMailTemplateGet_C2S* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgMailTemplateGet_C2S*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgMailTemplateGet_C2S::MergeFrom(const MsgMailTemplateGet_C2S& from) {
  GOOGLE_CHECK_NE(&from, this);
  mail_template_id_.MergeFrom(from.mail_template_id_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msgtype()) {
      set_msgtype(from.msgtype());
    }
    if (from.has_iggid()) {
      set_iggid(from.iggid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgMailTemplateGet_C2S::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgMailTemplateGet_C2S::CopyFrom(const MsgMailTemplateGet_C2S& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgMailTemplateGet_C2S::IsInitialized() const {

  return true;
}

void MsgMailTemplateGet_C2S::Swap(MsgMailTemplateGet_C2S* other) {
  if (other != this) {
    std::swap(msgtype_, other->msgtype_);
    std::swap(iggid_, other->iggid_);
    mail_template_id_.Swap(&other->mail_template_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgMailTemplateGet_C2S::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgMailTemplateGet_C2S_descriptor_;
  metadata.reflection = MsgMailTemplateGet_C2S_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MailTemplateInfo::kMailTemplateIdFieldNumber;
const int MailTemplateInfo::kMailTemplateFieldNumber;
#endif  // !_MSC_VER

MailTemplateInfo::MailTemplateInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.MailTemplateInfo)
}

void MailTemplateInfo::InitAsDefaultInstance() {
}

MailTemplateInfo::MailTemplateInfo(const MailTemplateInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.MailTemplateInfo)
}

void MailTemplateInfo::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  mail_template_id_ = 0;
  mail_template_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MailTemplateInfo::~MailTemplateInfo() {
  // @@protoc_insertion_point(destructor:MsgPB.MailTemplateInfo)
  SharedDtor();
}

void MailTemplateInfo::SharedDtor() {
  if (mail_template_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete mail_template_;
  }
  if (this != default_instance_) {
  }
}

void MailTemplateInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MailTemplateInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MailTemplateInfo_descriptor_;
}

const MailTemplateInfo& MailTemplateInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgMail_2eproto();
  return *default_instance_;
}

MailTemplateInfo* MailTemplateInfo::default_instance_ = NULL;

MailTemplateInfo* MailTemplateInfo::New() const {
  return new MailTemplateInfo;
}

void MailTemplateInfo::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    mail_template_id_ = 0;
    if (has_mail_template()) {
      if (mail_template_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        mail_template_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MailTemplateInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.MailTemplateInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 mail_template_id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &mail_template_id_)));
          set_has_mail_template_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_mail_template;
        break;
      }

      // optional string mail_template = 2;
      case 2: {
        if (tag == 18) {
         parse_mail_template:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_mail_template()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->mail_template().data(), this->mail_template().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "mail_template");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.MailTemplateInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.MailTemplateInfo)
  return false;
#undef DO_
}

void MailTemplateInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.MailTemplateInfo)
  // optional int32 mail_template_id = 1;
  if (has_mail_template_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->mail_template_id(), output);
  }

  // optional string mail_template = 2;
  if (has_mail_template()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->mail_template().data(), this->mail_template().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "mail_template");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->mail_template(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.MailTemplateInfo)
}

::google::protobuf::uint8* MailTemplateInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.MailTemplateInfo)
  // optional int32 mail_template_id = 1;
  if (has_mail_template_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->mail_template_id(), target);
  }

  // optional string mail_template = 2;
  if (has_mail_template()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->mail_template().data(), this->mail_template().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "mail_template");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->mail_template(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.MailTemplateInfo)
  return target;
}

int MailTemplateInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 mail_template_id = 1;
    if (has_mail_template_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->mail_template_id());
    }

    // optional string mail_template = 2;
    if (has_mail_template()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->mail_template());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MailTemplateInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MailTemplateInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MailTemplateInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MailTemplateInfo::MergeFrom(const MailTemplateInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_mail_template_id()) {
      set_mail_template_id(from.mail_template_id());
    }
    if (from.has_mail_template()) {
      set_mail_template(from.mail_template());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MailTemplateInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MailTemplateInfo::CopyFrom(const MailTemplateInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MailTemplateInfo::IsInitialized() const {

  return true;
}

void MailTemplateInfo::Swap(MailTemplateInfo* other) {
  if (other != this) {
    std::swap(mail_template_id_, other->mail_template_id_);
    std::swap(mail_template_, other->mail_template_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MailTemplateInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MailTemplateInfo_descriptor_;
  metadata.reflection = MailTemplateInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgMailTemplate_S2C::kMsgTypeFieldNumber;
const int MsgMailTemplate_S2C::kIggidFieldNumber;
const int MsgMailTemplate_S2C::kMailTemplateFieldNumber;
#endif  // !_MSC_VER

MsgMailTemplate_S2C::MsgMailTemplate_S2C()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.MsgMailTemplate_S2C)
}

void MsgMailTemplate_S2C::InitAsDefaultInstance() {
}

MsgMailTemplate_S2C::MsgMailTemplate_S2C(const MsgMailTemplate_S2C& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.MsgMailTemplate_S2C)
}

void MsgMailTemplate_S2C::SharedCtor() {
  _cached_size_ = 0;
  msgtype_ = 2946;
  iggid_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgMailTemplate_S2C::~MsgMailTemplate_S2C() {
  // @@protoc_insertion_point(destructor:MsgPB.MsgMailTemplate_S2C)
  SharedDtor();
}

void MsgMailTemplate_S2C::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgMailTemplate_S2C::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgMailTemplate_S2C::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgMailTemplate_S2C_descriptor_;
}

const MsgMailTemplate_S2C& MsgMailTemplate_S2C::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgMail_2eproto();
  return *default_instance_;
}

MsgMailTemplate_S2C* MsgMailTemplate_S2C::default_instance_ = NULL;

MsgMailTemplate_S2C* MsgMailTemplate_S2C::New() const {
  return new MsgMailTemplate_S2C;
}

void MsgMailTemplate_S2C::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    msgtype_ = 2946;
    iggid_ = GOOGLE_LONGLONG(0);
  }
  mail_template_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgMailTemplate_S2C::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.MsgMailTemplate_S2C)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_MAIL_TEMPLATE_S2C];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::EMsgType_IsValid(value)) {
            set_msgtype(static_cast< ::MsgPB::EMsgType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_iggid;
        break;
      }

      // optional int64 iggid = 2;
      case 2: {
        if (tag == 16) {
         parse_iggid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &iggid_)));
          set_has_iggid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_mail_template;
        break;
      }

      // repeated .MsgPB.MailTemplateInfo mail_template = 3;
      case 3: {
        if (tag == 26) {
         parse_mail_template:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_mail_template()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_mail_template;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.MsgMailTemplate_S2C)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.MsgMailTemplate_S2C)
  return false;
#undef DO_
}

void MsgMailTemplate_S2C::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.MsgMailTemplate_S2C)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_MAIL_TEMPLATE_S2C];
  if (has_msgtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->msgtype(), output);
  }

  // optional int64 iggid = 2;
  if (has_iggid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->iggid(), output);
  }

  // repeated .MsgPB.MailTemplateInfo mail_template = 3;
  for (int i = 0; i < this->mail_template_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->mail_template(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.MsgMailTemplate_S2C)
}

::google::protobuf::uint8* MsgMailTemplate_S2C::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.MsgMailTemplate_S2C)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_MAIL_TEMPLATE_S2C];
  if (has_msgtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->msgtype(), target);
  }

  // optional int64 iggid = 2;
  if (has_iggid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->iggid(), target);
  }

  // repeated .MsgPB.MailTemplateInfo mail_template = 3;
  for (int i = 0; i < this->mail_template_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->mail_template(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.MsgMailTemplate_S2C)
  return target;
}

int MsgMailTemplate_S2C::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_MAIL_TEMPLATE_S2C];
    if (has_msgtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgtype());
    }

    // optional int64 iggid = 2;
    if (has_iggid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->iggid());
    }

  }
  // repeated .MsgPB.MailTemplateInfo mail_template = 3;
  total_size += 1 * this->mail_template_size();
  for (int i = 0; i < this->mail_template_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->mail_template(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgMailTemplate_S2C::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgMailTemplate_S2C* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgMailTemplate_S2C*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgMailTemplate_S2C::MergeFrom(const MsgMailTemplate_S2C& from) {
  GOOGLE_CHECK_NE(&from, this);
  mail_template_.MergeFrom(from.mail_template_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msgtype()) {
      set_msgtype(from.msgtype());
    }
    if (from.has_iggid()) {
      set_iggid(from.iggid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgMailTemplate_S2C::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgMailTemplate_S2C::CopyFrom(const MsgMailTemplate_S2C& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgMailTemplate_S2C::IsInitialized() const {

  return true;
}

void MsgMailTemplate_S2C::Swap(MsgMailTemplate_S2C* other) {
  if (other != this) {
    std::swap(msgtype_, other->msgtype_);
    std::swap(iggid_, other->iggid_);
    mail_template_.Swap(&other->mail_template_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgMailTemplate_S2C::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgMailTemplate_S2C_descriptor_;
  metadata.reflection = MsgMailTemplate_S2C_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgMailTemplate::kMsgTypeFieldNumber;
const int MsgMailTemplate::kMailTemplateFieldNumber;
#endif  // !_MSC_VER

MsgMailTemplate::MsgMailTemplate()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.MsgMailTemplate)
}

void MsgMailTemplate::InitAsDefaultInstance() {
}

MsgMailTemplate::MsgMailTemplate(const MsgMailTemplate& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.MsgMailTemplate)
}

void MsgMailTemplate::SharedCtor() {
  _cached_size_ = 0;
  msgtype_ = 2947;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgMailTemplate::~MsgMailTemplate() {
  // @@protoc_insertion_point(destructor:MsgPB.MsgMailTemplate)
  SharedDtor();
}

void MsgMailTemplate::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgMailTemplate::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgMailTemplate::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgMailTemplate_descriptor_;
}

const MsgMailTemplate& MsgMailTemplate::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgMail_2eproto();
  return *default_instance_;
}

MsgMailTemplate* MsgMailTemplate::default_instance_ = NULL;

MsgMailTemplate* MsgMailTemplate::New() const {
  return new MsgMailTemplate;
}

void MsgMailTemplate::Clear() {
  msgtype_ = 2947;
  mail_template_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgMailTemplate::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.MsgMailTemplate)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_MAIL_TEMPLATE];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::EMsgType_IsValid(value)) {
            set_msgtype(static_cast< ::MsgPB::EMsgType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_mail_template;
        break;
      }

      // repeated .MsgPB.MailTemplateInfo mail_template = 3;
      case 3: {
        if (tag == 26) {
         parse_mail_template:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_mail_template()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_mail_template;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.MsgMailTemplate)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.MsgMailTemplate)
  return false;
#undef DO_
}

void MsgMailTemplate::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.MsgMailTemplate)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_MAIL_TEMPLATE];
  if (has_msgtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->msgtype(), output);
  }

  // repeated .MsgPB.MailTemplateInfo mail_template = 3;
  for (int i = 0; i < this->mail_template_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->mail_template(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.MsgMailTemplate)
}

::google::protobuf::uint8* MsgMailTemplate::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.MsgMailTemplate)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_MAIL_TEMPLATE];
  if (has_msgtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->msgtype(), target);
  }

  // repeated .MsgPB.MailTemplateInfo mail_template = 3;
  for (int i = 0; i < this->mail_template_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->mail_template(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.MsgMailTemplate)
  return target;
}

int MsgMailTemplate::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_MAIL_TEMPLATE];
    if (has_msgtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgtype());
    }

  }
  // repeated .MsgPB.MailTemplateInfo mail_template = 3;
  total_size += 1 * this->mail_template_size();
  for (int i = 0; i < this->mail_template_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->mail_template(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgMailTemplate::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgMailTemplate* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgMailTemplate*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgMailTemplate::MergeFrom(const MsgMailTemplate& from) {
  GOOGLE_CHECK_NE(&from, this);
  mail_template_.MergeFrom(from.mail_template_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msgtype()) {
      set_msgtype(from.msgtype());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgMailTemplate::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgMailTemplate::CopyFrom(const MsgMailTemplate& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgMailTemplate::IsInitialized() const {

  return true;
}

void MsgMailTemplate::Swap(MsgMailTemplate* other) {
  if (other != this) {
    std::swap(msgtype_, other->msgtype_);
    mail_template_.Swap(&other->mail_template_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgMailTemplate::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgMailTemplate_descriptor_;
  metadata.reflection = MsgMailTemplate_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgMailTemplateChange::kMsgTypeFieldNumber;
#endif  // !_MSC_VER

MsgMailTemplateChange::MsgMailTemplateChange()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.MsgMailTemplateChange)
}

void MsgMailTemplateChange::InitAsDefaultInstance() {
}

MsgMailTemplateChange::MsgMailTemplateChange(const MsgMailTemplateChange& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.MsgMailTemplateChange)
}

void MsgMailTemplateChange::SharedCtor() {
  _cached_size_ = 0;
  msgtype_ = 2948;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgMailTemplateChange::~MsgMailTemplateChange() {
  // @@protoc_insertion_point(destructor:MsgPB.MsgMailTemplateChange)
  SharedDtor();
}

void MsgMailTemplateChange::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgMailTemplateChange::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgMailTemplateChange::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgMailTemplateChange_descriptor_;
}

const MsgMailTemplateChange& MsgMailTemplateChange::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgMail_2eproto();
  return *default_instance_;
}

MsgMailTemplateChange* MsgMailTemplateChange::default_instance_ = NULL;

MsgMailTemplateChange* MsgMailTemplateChange::New() const {
  return new MsgMailTemplateChange;
}

void MsgMailTemplateChange::Clear() {
  msgtype_ = 2948;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgMailTemplateChange::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.MsgMailTemplateChange)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_MAIL_TEMPLATE_CHANGE];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::EMsgType_IsValid(value)) {
            set_msgtype(static_cast< ::MsgPB::EMsgType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.MsgMailTemplateChange)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.MsgMailTemplateChange)
  return false;
#undef DO_
}

void MsgMailTemplateChange::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.MsgMailTemplateChange)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_MAIL_TEMPLATE_CHANGE];
  if (has_msgtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->msgtype(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.MsgMailTemplateChange)
}

::google::protobuf::uint8* MsgMailTemplateChange::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.MsgMailTemplateChange)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_MAIL_TEMPLATE_CHANGE];
  if (has_msgtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->msgtype(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.MsgMailTemplateChange)
  return target;
}

int MsgMailTemplateChange::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_MAIL_TEMPLATE_CHANGE];
    if (has_msgtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgtype());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgMailTemplateChange::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgMailTemplateChange* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgMailTemplateChange*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgMailTemplateChange::MergeFrom(const MsgMailTemplateChange& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msgtype()) {
      set_msgtype(from.msgtype());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgMailTemplateChange::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgMailTemplateChange::CopyFrom(const MsgMailTemplateChange& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgMailTemplateChange::IsInitialized() const {

  return true;
}

void MsgMailTemplateChange::Swap(MsgMailTemplateChange* other) {
  if (other != this) {
    std::swap(msgtype_, other->msgtype_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgMailTemplateChange::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgMailTemplateChange_descriptor_;
  metadata.reflection = MsgMailTemplateChange_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgMailTemplateCreate_S2S::kMsgTypeFieldNumber;
const int MsgMailTemplateCreate_S2S::kMailTemplateIdFieldNumber;
const int MsgMailTemplateCreate_S2S::kIggidFieldNumber;
#endif  // !_MSC_VER

MsgMailTemplateCreate_S2S::MsgMailTemplateCreate_S2S()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.MsgMailTemplateCreate_S2S)
}

void MsgMailTemplateCreate_S2S::InitAsDefaultInstance() {
}

MsgMailTemplateCreate_S2S::MsgMailTemplateCreate_S2S(const MsgMailTemplateCreate_S2S& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.MsgMailTemplateCreate_S2S)
}

void MsgMailTemplateCreate_S2S::SharedCtor() {
  _cached_size_ = 0;
  msgtype_ = 2949;
  mail_template_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgMailTemplateCreate_S2S::~MsgMailTemplateCreate_S2S() {
  // @@protoc_insertion_point(destructor:MsgPB.MsgMailTemplateCreate_S2S)
  SharedDtor();
}

void MsgMailTemplateCreate_S2S::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgMailTemplateCreate_S2S::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgMailTemplateCreate_S2S::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgMailTemplateCreate_S2S_descriptor_;
}

const MsgMailTemplateCreate_S2S& MsgMailTemplateCreate_S2S::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgMail_2eproto();
  return *default_instance_;
}

MsgMailTemplateCreate_S2S* MsgMailTemplateCreate_S2S::default_instance_ = NULL;

MsgMailTemplateCreate_S2S* MsgMailTemplateCreate_S2S::New() const {
  return new MsgMailTemplateCreate_S2S;
}

void MsgMailTemplateCreate_S2S::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    msgtype_ = 2949;
    mail_template_id_ = 0;
  }
  iggid_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgMailTemplateCreate_S2S::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.MsgMailTemplateCreate_S2S)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_MAIL_TEMPLATE_CREATE_S2S];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::EMsgType_IsValid(value)) {
            set_msgtype(static_cast< ::MsgPB::EMsgType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_mail_template_id;
        break;
      }

      // optional int32 mail_template_id = 2;
      case 2: {
        if (tag == 16) {
         parse_mail_template_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &mail_template_id_)));
          set_has_mail_template_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_iggid;
        break;
      }

      // repeated int64 iggid = 3;
      case 3: {
        if (tag == 24) {
         parse_iggid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 24, input, this->mutable_iggid())));
        } else if (tag == 26) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_iggid())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_iggid;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.MsgMailTemplateCreate_S2S)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.MsgMailTemplateCreate_S2S)
  return false;
#undef DO_
}

void MsgMailTemplateCreate_S2S::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.MsgMailTemplateCreate_S2S)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_MAIL_TEMPLATE_CREATE_S2S];
  if (has_msgtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->msgtype(), output);
  }

  // optional int32 mail_template_id = 2;
  if (has_mail_template_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->mail_template_id(), output);
  }

  // repeated int64 iggid = 3;
  for (int i = 0; i < this->iggid_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(
      3, this->iggid(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.MsgMailTemplateCreate_S2S)
}

::google::protobuf::uint8* MsgMailTemplateCreate_S2S::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.MsgMailTemplateCreate_S2S)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_MAIL_TEMPLATE_CREATE_S2S];
  if (has_msgtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->msgtype(), target);
  }

  // optional int32 mail_template_id = 2;
  if (has_mail_template_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->mail_template_id(), target);
  }

  // repeated int64 iggid = 3;
  for (int i = 0; i < this->iggid_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64ToArray(3, this->iggid(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.MsgMailTemplateCreate_S2S)
  return target;
}

int MsgMailTemplateCreate_S2S::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_MAIL_TEMPLATE_CREATE_S2S];
    if (has_msgtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgtype());
    }

    // optional int32 mail_template_id = 2;
    if (has_mail_template_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->mail_template_id());
    }

  }
  // repeated int64 iggid = 3;
  {
    int data_size = 0;
    for (int i = 0; i < this->iggid_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int64Size(this->iggid(i));
    }
    total_size += 1 * this->iggid_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgMailTemplateCreate_S2S::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgMailTemplateCreate_S2S* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgMailTemplateCreate_S2S*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgMailTemplateCreate_S2S::MergeFrom(const MsgMailTemplateCreate_S2S& from) {
  GOOGLE_CHECK_NE(&from, this);
  iggid_.MergeFrom(from.iggid_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msgtype()) {
      set_msgtype(from.msgtype());
    }
    if (from.has_mail_template_id()) {
      set_mail_template_id(from.mail_template_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgMailTemplateCreate_S2S::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgMailTemplateCreate_S2S::CopyFrom(const MsgMailTemplateCreate_S2S& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgMailTemplateCreate_S2S::IsInitialized() const {

  return true;
}

void MsgMailTemplateCreate_S2S::Swap(MsgMailTemplateCreate_S2S* other) {
  if (other != this) {
    std::swap(msgtype_, other->msgtype_);
    std::swap(mail_template_id_, other->mail_template_id_);
    iggid_.Swap(&other->iggid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgMailTemplateCreate_S2S::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgMailTemplateCreate_S2S_descriptor_;
  metadata.reflection = MsgMailTemplateCreate_S2S_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace MsgPB

// @@protoc_insertion_point(global_scope)
