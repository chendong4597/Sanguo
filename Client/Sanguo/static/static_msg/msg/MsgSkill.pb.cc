// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MsgSkill.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "MsgSkill.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace MsgPB {

namespace {

const ::google::protobuf::Descriptor* MsgSkillCastSkillFrontC2S_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgSkillCastSkillFrontC2S_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgSkillCastSkillC2GS_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgSkillCastSkillC2GS_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgSkillCastSkillResultGS2C_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgSkillCastSkillResultGS2C_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgSkillAddBuffGS2MS_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgSkillAddBuffGS2MS_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgSkillAddBuffResultMS2GS_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgSkillAddBuffResultMS2GS_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgSkillDelBuffGS2MS_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgSkillDelBuffGS2MS_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgSkillDelBuffResultMS2GS_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgSkillDelBuffResultMS2GS_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgSkillMapObjCastSkillMS2C_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgSkillMapObjCastSkillMS2C_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgSkillEffectDmgMS2C_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgSkillEffectDmgMS2C_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgPassiveSkillEffectDmgMS2C_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgPassiveSkillEffectDmgMS2C_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgSkillEffectDotDmgMS2C_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgSkillEffectDotDmgMS2C_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgSkillEffectAddBuffMS2C_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgSkillEffectAddBuffMS2C_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgSkillEffectSummonMS2C_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgSkillEffectSummonMS2C_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgSkillEffectRestoreMS2C_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgSkillEffectRestoreMS2C_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgSkillEffectDotRestoreMS2C_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgSkillEffectDotRestoreMS2C_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgSkillEffectResurrectionMS2C_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgSkillEffectResurrectionMS2C_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgSkillTeleportMS2C_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgSkillTeleportMS2C_reflection_ = NULL;
const ::google::protobuf::Descriptor* PreviewInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PreviewInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgSkillPreviewS2C_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgSkillPreviewS2C_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgSkillActivePassiveC2S_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgSkillActivePassiveC2S_reflection_ = NULL;
const ::google::protobuf::Descriptor* ActivePassiveSkillResult_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ActivePassiveSkillResult_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgSkillActivePassiveS2C_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgSkillActivePassiveS2C_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgSkillInactivePassiveC2S_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgSkillInactivePassiveC2S_reflection_ = NULL;
const ::google::protobuf::Descriptor* InactivePassiveSkillResult_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  InactivePassiveSkillResult_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgSkillInactivePassiveS2C_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgSkillInactivePassiveS2C_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgSkillManualMagicBallHurt_C2MS_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgSkillManualMagicBallHurt_C2MS_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* ENUM_CASTSKILL_RESULT_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* ENUM_ADDBUFF_RESULT_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* ENUM_DELBUFF_RESULT_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_MsgSkill_2eproto() {
  protobuf_AddDesc_MsgSkill_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "MsgSkill.proto");
  GOOGLE_CHECK(file != NULL);
  MsgSkillCastSkillFrontC2S_descriptor_ = file->message_type(0);
  static const int MsgSkillCastSkillFrontC2S_offsets_[9] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSkillCastSkillFrontC2S, serialid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSkillCastSkillFrontC2S, msgtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSkillCastSkillFrontC2S, target_mapobjectids_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSkillCastSkillFrontC2S, caster_pos_x_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSkillCastSkillFrontC2S, caster_pos_y_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSkillCastSkillFrontC2S, target_pos_x_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSkillCastSkillFrontC2S, target_pos_y_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSkillCastSkillFrontC2S, skill_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSkillCastSkillFrontC2S, caster_id_),
  };
  MsgSkillCastSkillFrontC2S_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgSkillCastSkillFrontC2S_descriptor_,
      MsgSkillCastSkillFrontC2S::default_instance_,
      MsgSkillCastSkillFrontC2S_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSkillCastSkillFrontC2S, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSkillCastSkillFrontC2S, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgSkillCastSkillFrontC2S));
  MsgSkillCastSkillC2GS_descriptor_ = file->message_type(1);
  static const int MsgSkillCastSkillC2GS_offsets_[11] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSkillCastSkillC2GS, serialid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSkillCastSkillC2GS, msgtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSkillCastSkillC2GS, weapon_uuid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSkillCastSkillC2GS, skillindex_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSkillCastSkillC2GS, target_mapobjectids_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSkillCastSkillC2GS, caster_pos_x_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSkillCastSkillC2GS, caster_pos_y_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSkillCastSkillC2GS, target_pos_x_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSkillCastSkillC2GS, target_pos_y_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSkillCastSkillC2GS, debug_skill_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSkillCastSkillC2GS, clienttimems_),
  };
  MsgSkillCastSkillC2GS_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgSkillCastSkillC2GS_descriptor_,
      MsgSkillCastSkillC2GS::default_instance_,
      MsgSkillCastSkillC2GS_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSkillCastSkillC2GS, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSkillCastSkillC2GS, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgSkillCastSkillC2GS));
  MsgSkillCastSkillResultGS2C_descriptor_ = file->message_type(2);
  static const int MsgSkillCastSkillResultGS2C_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSkillCastSkillResultGS2C, serialid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSkillCastSkillResultGS2C, msgtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSkillCastSkillResultGS2C, result_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSkillCastSkillResultGS2C, skillid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSkillCastSkillResultGS2C, iggid_),
  };
  MsgSkillCastSkillResultGS2C_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgSkillCastSkillResultGS2C_descriptor_,
      MsgSkillCastSkillResultGS2C::default_instance_,
      MsgSkillCastSkillResultGS2C_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSkillCastSkillResultGS2C, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSkillCastSkillResultGS2C, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgSkillCastSkillResultGS2C));
  MsgSkillAddBuffGS2MS_descriptor_ = file->message_type(3);
  static const int MsgSkillAddBuffGS2MS_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSkillAddBuffGS2MS, serialid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSkillAddBuffGS2MS, msgtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSkillAddBuffGS2MS, iggid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSkillAddBuffGS2MS, buffid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSkillAddBuffGS2MS, attr_runtime_effect_rate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSkillAddBuffGS2MS, target_mapobjectid_),
  };
  MsgSkillAddBuffGS2MS_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgSkillAddBuffGS2MS_descriptor_,
      MsgSkillAddBuffGS2MS::default_instance_,
      MsgSkillAddBuffGS2MS_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSkillAddBuffGS2MS, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSkillAddBuffGS2MS, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgSkillAddBuffGS2MS));
  MsgSkillAddBuffResultMS2GS_descriptor_ = file->message_type(4);
  static const int MsgSkillAddBuffResultMS2GS_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSkillAddBuffResultMS2GS, serialid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSkillAddBuffResultMS2GS, msgtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSkillAddBuffResultMS2GS, iggid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSkillAddBuffResultMS2GS, result_),
  };
  MsgSkillAddBuffResultMS2GS_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgSkillAddBuffResultMS2GS_descriptor_,
      MsgSkillAddBuffResultMS2GS::default_instance_,
      MsgSkillAddBuffResultMS2GS_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSkillAddBuffResultMS2GS, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSkillAddBuffResultMS2GS, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgSkillAddBuffResultMS2GS));
  MsgSkillDelBuffGS2MS_descriptor_ = file->message_type(5);
  static const int MsgSkillDelBuffGS2MS_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSkillDelBuffGS2MS, serialid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSkillDelBuffGS2MS, msgtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSkillDelBuffGS2MS, iggid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSkillDelBuffGS2MS, buffid_),
  };
  MsgSkillDelBuffGS2MS_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgSkillDelBuffGS2MS_descriptor_,
      MsgSkillDelBuffGS2MS::default_instance_,
      MsgSkillDelBuffGS2MS_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSkillDelBuffGS2MS, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSkillDelBuffGS2MS, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgSkillDelBuffGS2MS));
  MsgSkillDelBuffResultMS2GS_descriptor_ = file->message_type(6);
  static const int MsgSkillDelBuffResultMS2GS_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSkillDelBuffResultMS2GS, serialid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSkillDelBuffResultMS2GS, msgtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSkillDelBuffResultMS2GS, iggid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSkillDelBuffResultMS2GS, result_),
  };
  MsgSkillDelBuffResultMS2GS_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgSkillDelBuffResultMS2GS_descriptor_,
      MsgSkillDelBuffResultMS2GS::default_instance_,
      MsgSkillDelBuffResultMS2GS_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSkillDelBuffResultMS2GS, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSkillDelBuffResultMS2GS, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgSkillDelBuffResultMS2GS));
  MsgSkillMapObjCastSkillMS2C_descriptor_ = file->message_type(7);
  static const int MsgSkillMapObjCastSkillMS2C_offsets_[11] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSkillMapObjCastSkillMS2C, serialid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSkillMapObjCastSkillMS2C, msgtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSkillMapObjCastSkillMS2C, iggid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSkillMapObjCastSkillMS2C, caster_mapobjectid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSkillMapObjCastSkillMS2C, target_mapobjectids_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSkillMapObjCastSkillMS2C, skill_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSkillMapObjCastSkillMS2C, target_pos_x_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSkillMapObjCastSkillMS2C, target_pos_y_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSkillMapObjCastSkillMS2C, caster_pos_x_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSkillMapObjCastSkillMS2C, caster_pos_y_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSkillMapObjCastSkillMS2C, magicball_mapobj_id_),
  };
  MsgSkillMapObjCastSkillMS2C_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgSkillMapObjCastSkillMS2C_descriptor_,
      MsgSkillMapObjCastSkillMS2C::default_instance_,
      MsgSkillMapObjCastSkillMS2C_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSkillMapObjCastSkillMS2C, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSkillMapObjCastSkillMS2C, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgSkillMapObjCastSkillMS2C));
  MsgSkillEffectDmgMS2C_descriptor_ = file->message_type(8);
  static const int MsgSkillEffectDmgMS2C_offsets_[12] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSkillEffectDmgMS2C, serialid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSkillEffectDmgMS2C, msgtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSkillEffectDmgMS2C, iggid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSkillEffectDmgMS2C, caster_mapobjectid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSkillEffectDmgMS2C, target_mapobjectid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSkillEffectDmgMS2C, skill_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSkillEffectDmgMS2C, dmg_val_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSkillEffectDmgMS2C, criticl_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSkillEffectDmgMS2C, currhp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSkillEffectDmgMS2C, target_skill_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSkillEffectDmgMS2C, mp_dmg_val_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSkillEffectDmgMS2C, durability_),
  };
  MsgSkillEffectDmgMS2C_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgSkillEffectDmgMS2C_descriptor_,
      MsgSkillEffectDmgMS2C::default_instance_,
      MsgSkillEffectDmgMS2C_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSkillEffectDmgMS2C, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSkillEffectDmgMS2C, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgSkillEffectDmgMS2C));
  MsgPassiveSkillEffectDmgMS2C_descriptor_ = file->message_type(9);
  static const int MsgPassiveSkillEffectDmgMS2C_offsets_[12] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgPassiveSkillEffectDmgMS2C, serialid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgPassiveSkillEffectDmgMS2C, msgtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgPassiveSkillEffectDmgMS2C, iggid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgPassiveSkillEffectDmgMS2C, caster_mapobjectid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgPassiveSkillEffectDmgMS2C, target_mapobjectid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgPassiveSkillEffectDmgMS2C, skill_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgPassiveSkillEffectDmgMS2C, dmg_val_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgPassiveSkillEffectDmgMS2C, criticl_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgPassiveSkillEffectDmgMS2C, currhp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgPassiveSkillEffectDmgMS2C, target_skill_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgPassiveSkillEffectDmgMS2C, mp_dmg_val_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgPassiveSkillEffectDmgMS2C, durability_),
  };
  MsgPassiveSkillEffectDmgMS2C_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgPassiveSkillEffectDmgMS2C_descriptor_,
      MsgPassiveSkillEffectDmgMS2C::default_instance_,
      MsgPassiveSkillEffectDmgMS2C_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgPassiveSkillEffectDmgMS2C, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgPassiveSkillEffectDmgMS2C, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgPassiveSkillEffectDmgMS2C));
  MsgSkillEffectDotDmgMS2C_descriptor_ = file->message_type(10);
  static const int MsgSkillEffectDotDmgMS2C_offsets_[11] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSkillEffectDotDmgMS2C, serialid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSkillEffectDotDmgMS2C, msgtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSkillEffectDotDmgMS2C, iggid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSkillEffectDotDmgMS2C, caster_mapobjectid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSkillEffectDotDmgMS2C, target_mapobjectid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSkillEffectDotDmgMS2C, skill_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSkillEffectDotDmgMS2C, dmg_val_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSkillEffectDotDmgMS2C, criticl_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSkillEffectDotDmgMS2C, mp_dmg_val_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSkillEffectDotDmgMS2C, currhp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSkillEffectDotDmgMS2C, durability_),
  };
  MsgSkillEffectDotDmgMS2C_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgSkillEffectDotDmgMS2C_descriptor_,
      MsgSkillEffectDotDmgMS2C::default_instance_,
      MsgSkillEffectDotDmgMS2C_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSkillEffectDotDmgMS2C, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSkillEffectDotDmgMS2C, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgSkillEffectDotDmgMS2C));
  MsgSkillEffectAddBuffMS2C_descriptor_ = file->message_type(11);
  static const int MsgSkillEffectAddBuffMS2C_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSkillEffectAddBuffMS2C, serialid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSkillEffectAddBuffMS2C, msgtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSkillEffectAddBuffMS2C, iggid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSkillEffectAddBuffMS2C, caster_mapobjectid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSkillEffectAddBuffMS2C, target_mapobjectid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSkillEffectAddBuffMS2C, skill_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSkillEffectAddBuffMS2C, buffid_),
  };
  MsgSkillEffectAddBuffMS2C_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgSkillEffectAddBuffMS2C_descriptor_,
      MsgSkillEffectAddBuffMS2C::default_instance_,
      MsgSkillEffectAddBuffMS2C_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSkillEffectAddBuffMS2C, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSkillEffectAddBuffMS2C, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgSkillEffectAddBuffMS2C));
  MsgSkillEffectSummonMS2C_descriptor_ = file->message_type(12);
  static const int MsgSkillEffectSummonMS2C_offsets_[8] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSkillEffectSummonMS2C, serialid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSkillEffectSummonMS2C, msgtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSkillEffectSummonMS2C, iggid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSkillEffectSummonMS2C, caster_mapobjectid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSkillEffectSummonMS2C, target_mapobjectid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSkillEffectSummonMS2C, skill_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSkillEffectSummonMS2C, summon_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSkillEffectSummonMS2C, pos_),
  };
  MsgSkillEffectSummonMS2C_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgSkillEffectSummonMS2C_descriptor_,
      MsgSkillEffectSummonMS2C::default_instance_,
      MsgSkillEffectSummonMS2C_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSkillEffectSummonMS2C, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSkillEffectSummonMS2C, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgSkillEffectSummonMS2C));
  MsgSkillEffectRestoreMS2C_descriptor_ = file->message_type(13);
  static const int MsgSkillEffectRestoreMS2C_offsets_[9] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSkillEffectRestoreMS2C, serialid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSkillEffectRestoreMS2C, msgtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSkillEffectRestoreMS2C, iggid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSkillEffectRestoreMS2C, caster_mapobjectid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSkillEffectRestoreMS2C, target_mapobjectid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSkillEffectRestoreMS2C, skill_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSkillEffectRestoreMS2C, hp_val_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSkillEffectRestoreMS2C, mp_val_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSkillEffectRestoreMS2C, currhp_),
  };
  MsgSkillEffectRestoreMS2C_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgSkillEffectRestoreMS2C_descriptor_,
      MsgSkillEffectRestoreMS2C::default_instance_,
      MsgSkillEffectRestoreMS2C_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSkillEffectRestoreMS2C, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSkillEffectRestoreMS2C, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgSkillEffectRestoreMS2C));
  MsgSkillEffectDotRestoreMS2C_descriptor_ = file->message_type(14);
  static const int MsgSkillEffectDotRestoreMS2C_offsets_[9] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSkillEffectDotRestoreMS2C, serialid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSkillEffectDotRestoreMS2C, msgtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSkillEffectDotRestoreMS2C, iggid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSkillEffectDotRestoreMS2C, caster_mapobjectid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSkillEffectDotRestoreMS2C, target_mapobjectid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSkillEffectDotRestoreMS2C, skill_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSkillEffectDotRestoreMS2C, hp_val_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSkillEffectDotRestoreMS2C, mp_val_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSkillEffectDotRestoreMS2C, currhp_),
  };
  MsgSkillEffectDotRestoreMS2C_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgSkillEffectDotRestoreMS2C_descriptor_,
      MsgSkillEffectDotRestoreMS2C::default_instance_,
      MsgSkillEffectDotRestoreMS2C_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSkillEffectDotRestoreMS2C, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSkillEffectDotRestoreMS2C, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgSkillEffectDotRestoreMS2C));
  MsgSkillEffectResurrectionMS2C_descriptor_ = file->message_type(15);
  static const int MsgSkillEffectResurrectionMS2C_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSkillEffectResurrectionMS2C, serialid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSkillEffectResurrectionMS2C, msgtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSkillEffectResurrectionMS2C, iggid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSkillEffectResurrectionMS2C, caster_mapobjectid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSkillEffectResurrectionMS2C, target_mapobjectid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSkillEffectResurrectionMS2C, skill_id_),
  };
  MsgSkillEffectResurrectionMS2C_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgSkillEffectResurrectionMS2C_descriptor_,
      MsgSkillEffectResurrectionMS2C::default_instance_,
      MsgSkillEffectResurrectionMS2C_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSkillEffectResurrectionMS2C, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSkillEffectResurrectionMS2C, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgSkillEffectResurrectionMS2C));
  MsgSkillTeleportMS2C_descriptor_ = file->message_type(16);
  static const int MsgSkillTeleportMS2C_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSkillTeleportMS2C, msgtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSkillTeleportMS2C, iggid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSkillTeleportMS2C, serialid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSkillTeleportMS2C, caster_mapobjectid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSkillTeleportMS2C, skill_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSkillTeleportMS2C, target_pos_x_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSkillTeleportMS2C, target_pos_y_),
  };
  MsgSkillTeleportMS2C_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgSkillTeleportMS2C_descriptor_,
      MsgSkillTeleportMS2C::default_instance_,
      MsgSkillTeleportMS2C_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSkillTeleportMS2C, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSkillTeleportMS2C, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgSkillTeleportMS2C));
  PreviewInfo_descriptor_ = file->message_type(17);
  static const int PreviewInfo_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PreviewInfo, millisecond_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PreviewInfo, target_pos_x_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PreviewInfo, target_pos_y_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PreviewInfo, skill_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PreviewInfo, target_mapobjectids_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PreviewInfo, caster_pos_x_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PreviewInfo, caster_pos_y_),
  };
  PreviewInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PreviewInfo_descriptor_,
      PreviewInfo::default_instance_,
      PreviewInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PreviewInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PreviewInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PreviewInfo));
  MsgSkillPreviewS2C_descriptor_ = file->message_type(18);
  static const int MsgSkillPreviewS2C_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSkillPreviewS2C, msgtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSkillPreviewS2C, iggid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSkillPreviewS2C, serialid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSkillPreviewS2C, caster_mapobjectid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSkillPreviewS2C, skills_),
  };
  MsgSkillPreviewS2C_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgSkillPreviewS2C_descriptor_,
      MsgSkillPreviewS2C::default_instance_,
      MsgSkillPreviewS2C_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSkillPreviewS2C, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSkillPreviewS2C, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgSkillPreviewS2C));
  MsgSkillActivePassiveC2S_descriptor_ = file->message_type(19);
  static const int MsgSkillActivePassiveC2S_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSkillActivePassiveC2S, msgtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSkillActivePassiveC2S, iggid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSkillActivePassiveC2S, passive_skill_id_),
  };
  MsgSkillActivePassiveC2S_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgSkillActivePassiveC2S_descriptor_,
      MsgSkillActivePassiveC2S::default_instance_,
      MsgSkillActivePassiveC2S_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSkillActivePassiveC2S, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSkillActivePassiveC2S, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgSkillActivePassiveC2S));
  ActivePassiveSkillResult_descriptor_ = file->message_type(20);
  static const int ActivePassiveSkillResult_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActivePassiveSkillResult, ec_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActivePassiveSkillResult, passive_skill_id_),
  };
  ActivePassiveSkillResult_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ActivePassiveSkillResult_descriptor_,
      ActivePassiveSkillResult::default_instance_,
      ActivePassiveSkillResult_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActivePassiveSkillResult, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActivePassiveSkillResult, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ActivePassiveSkillResult));
  MsgSkillActivePassiveS2C_descriptor_ = file->message_type(21);
  static const int MsgSkillActivePassiveS2C_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSkillActivePassiveS2C, msgtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSkillActivePassiveS2C, iggid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSkillActivePassiveS2C, results_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSkillActivePassiveS2C, caster_map_object_id_),
  };
  MsgSkillActivePassiveS2C_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgSkillActivePassiveS2C_descriptor_,
      MsgSkillActivePassiveS2C::default_instance_,
      MsgSkillActivePassiveS2C_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSkillActivePassiveS2C, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSkillActivePassiveS2C, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgSkillActivePassiveS2C));
  MsgSkillInactivePassiveC2S_descriptor_ = file->message_type(22);
  static const int MsgSkillInactivePassiveC2S_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSkillInactivePassiveC2S, msgtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSkillInactivePassiveC2S, iggid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSkillInactivePassiveC2S, passive_skill_id_),
  };
  MsgSkillInactivePassiveC2S_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgSkillInactivePassiveC2S_descriptor_,
      MsgSkillInactivePassiveC2S::default_instance_,
      MsgSkillInactivePassiveC2S_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSkillInactivePassiveC2S, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSkillInactivePassiveC2S, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgSkillInactivePassiveC2S));
  InactivePassiveSkillResult_descriptor_ = file->message_type(23);
  static const int InactivePassiveSkillResult_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InactivePassiveSkillResult, ec_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InactivePassiveSkillResult, passive_skill_id_),
  };
  InactivePassiveSkillResult_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      InactivePassiveSkillResult_descriptor_,
      InactivePassiveSkillResult::default_instance_,
      InactivePassiveSkillResult_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InactivePassiveSkillResult, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InactivePassiveSkillResult, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(InactivePassiveSkillResult));
  MsgSkillInactivePassiveS2C_descriptor_ = file->message_type(24);
  static const int MsgSkillInactivePassiveS2C_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSkillInactivePassiveS2C, msgtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSkillInactivePassiveS2C, iggid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSkillInactivePassiveS2C, results_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSkillInactivePassiveS2C, caster_map_object_id_),
  };
  MsgSkillInactivePassiveS2C_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgSkillInactivePassiveS2C_descriptor_,
      MsgSkillInactivePassiveS2C::default_instance_,
      MsgSkillInactivePassiveS2C_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSkillInactivePassiveS2C, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSkillInactivePassiveS2C, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgSkillInactivePassiveS2C));
  MsgSkillManualMagicBallHurt_C2MS_descriptor_ = file->message_type(25);
  static const int MsgSkillManualMagicBallHurt_C2MS_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSkillManualMagicBallHurt_C2MS, msgtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSkillManualMagicBallHurt_C2MS, iggid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSkillManualMagicBallHurt_C2MS, magic_objid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSkillManualMagicBallHurt_C2MS, pos_x_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSkillManualMagicBallHurt_C2MS, pos_y_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSkillManualMagicBallHurt_C2MS, hurt_map_objs_),
  };
  MsgSkillManualMagicBallHurt_C2MS_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgSkillManualMagicBallHurt_C2MS_descriptor_,
      MsgSkillManualMagicBallHurt_C2MS::default_instance_,
      MsgSkillManualMagicBallHurt_C2MS_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSkillManualMagicBallHurt_C2MS, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSkillManualMagicBallHurt_C2MS, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgSkillManualMagicBallHurt_C2MS));
  ENUM_CASTSKILL_RESULT_descriptor_ = file->enum_type(0);
  ENUM_ADDBUFF_RESULT_descriptor_ = file->enum_type(1);
  ENUM_DELBUFF_RESULT_descriptor_ = file->enum_type(2);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_MsgSkill_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgSkillCastSkillFrontC2S_descriptor_, &MsgSkillCastSkillFrontC2S::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgSkillCastSkillC2GS_descriptor_, &MsgSkillCastSkillC2GS::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgSkillCastSkillResultGS2C_descriptor_, &MsgSkillCastSkillResultGS2C::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgSkillAddBuffGS2MS_descriptor_, &MsgSkillAddBuffGS2MS::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgSkillAddBuffResultMS2GS_descriptor_, &MsgSkillAddBuffResultMS2GS::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgSkillDelBuffGS2MS_descriptor_, &MsgSkillDelBuffGS2MS::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgSkillDelBuffResultMS2GS_descriptor_, &MsgSkillDelBuffResultMS2GS::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgSkillMapObjCastSkillMS2C_descriptor_, &MsgSkillMapObjCastSkillMS2C::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgSkillEffectDmgMS2C_descriptor_, &MsgSkillEffectDmgMS2C::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgPassiveSkillEffectDmgMS2C_descriptor_, &MsgPassiveSkillEffectDmgMS2C::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgSkillEffectDotDmgMS2C_descriptor_, &MsgSkillEffectDotDmgMS2C::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgSkillEffectAddBuffMS2C_descriptor_, &MsgSkillEffectAddBuffMS2C::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgSkillEffectSummonMS2C_descriptor_, &MsgSkillEffectSummonMS2C::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgSkillEffectRestoreMS2C_descriptor_, &MsgSkillEffectRestoreMS2C::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgSkillEffectDotRestoreMS2C_descriptor_, &MsgSkillEffectDotRestoreMS2C::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgSkillEffectResurrectionMS2C_descriptor_, &MsgSkillEffectResurrectionMS2C::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgSkillTeleportMS2C_descriptor_, &MsgSkillTeleportMS2C::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PreviewInfo_descriptor_, &PreviewInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgSkillPreviewS2C_descriptor_, &MsgSkillPreviewS2C::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgSkillActivePassiveC2S_descriptor_, &MsgSkillActivePassiveC2S::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ActivePassiveSkillResult_descriptor_, &ActivePassiveSkillResult::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgSkillActivePassiveS2C_descriptor_, &MsgSkillActivePassiveS2C::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgSkillInactivePassiveC2S_descriptor_, &MsgSkillInactivePassiveC2S::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    InactivePassiveSkillResult_descriptor_, &InactivePassiveSkillResult::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgSkillInactivePassiveS2C_descriptor_, &MsgSkillInactivePassiveS2C::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgSkillManualMagicBallHurt_C2MS_descriptor_, &MsgSkillManualMagicBallHurt_C2MS::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_MsgSkill_2eproto() {
  delete MsgSkillCastSkillFrontC2S::default_instance_;
  delete MsgSkillCastSkillFrontC2S_reflection_;
  delete MsgSkillCastSkillC2GS::default_instance_;
  delete MsgSkillCastSkillC2GS_reflection_;
  delete MsgSkillCastSkillResultGS2C::default_instance_;
  delete MsgSkillCastSkillResultGS2C_reflection_;
  delete MsgSkillAddBuffGS2MS::default_instance_;
  delete MsgSkillAddBuffGS2MS_reflection_;
  delete MsgSkillAddBuffResultMS2GS::default_instance_;
  delete MsgSkillAddBuffResultMS2GS_reflection_;
  delete MsgSkillDelBuffGS2MS::default_instance_;
  delete MsgSkillDelBuffGS2MS_reflection_;
  delete MsgSkillDelBuffResultMS2GS::default_instance_;
  delete MsgSkillDelBuffResultMS2GS_reflection_;
  delete MsgSkillMapObjCastSkillMS2C::default_instance_;
  delete MsgSkillMapObjCastSkillMS2C_reflection_;
  delete MsgSkillEffectDmgMS2C::default_instance_;
  delete MsgSkillEffectDmgMS2C_reflection_;
  delete MsgPassiveSkillEffectDmgMS2C::default_instance_;
  delete MsgPassiveSkillEffectDmgMS2C_reflection_;
  delete MsgSkillEffectDotDmgMS2C::default_instance_;
  delete MsgSkillEffectDotDmgMS2C_reflection_;
  delete MsgSkillEffectAddBuffMS2C::default_instance_;
  delete MsgSkillEffectAddBuffMS2C_reflection_;
  delete MsgSkillEffectSummonMS2C::default_instance_;
  delete MsgSkillEffectSummonMS2C_reflection_;
  delete MsgSkillEffectRestoreMS2C::default_instance_;
  delete MsgSkillEffectRestoreMS2C_reflection_;
  delete MsgSkillEffectDotRestoreMS2C::default_instance_;
  delete MsgSkillEffectDotRestoreMS2C_reflection_;
  delete MsgSkillEffectResurrectionMS2C::default_instance_;
  delete MsgSkillEffectResurrectionMS2C_reflection_;
  delete MsgSkillTeleportMS2C::default_instance_;
  delete MsgSkillTeleportMS2C_reflection_;
  delete PreviewInfo::default_instance_;
  delete PreviewInfo_reflection_;
  delete MsgSkillPreviewS2C::default_instance_;
  delete MsgSkillPreviewS2C_reflection_;
  delete MsgSkillActivePassiveC2S::default_instance_;
  delete MsgSkillActivePassiveC2S_reflection_;
  delete ActivePassiveSkillResult::default_instance_;
  delete ActivePassiveSkillResult_reflection_;
  delete MsgSkillActivePassiveS2C::default_instance_;
  delete MsgSkillActivePassiveS2C_reflection_;
  delete MsgSkillInactivePassiveC2S::default_instance_;
  delete MsgSkillInactivePassiveC2S_reflection_;
  delete InactivePassiveSkillResult::default_instance_;
  delete InactivePassiveSkillResult_reflection_;
  delete MsgSkillInactivePassiveS2C::default_instance_;
  delete MsgSkillInactivePassiveS2C_reflection_;
  delete MsgSkillManualMagicBallHurt_C2MS::default_instance_;
  delete MsgSkillManualMagicBallHurt_C2MS_reflection_;
}

void protobuf_AddDesc_MsgSkill_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::MsgPB::protobuf_AddDesc_MsgType_2eproto();
  ::MsgPB::protobuf_AddDesc_MsgGameDef_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\016MsgSkill.proto\022\005MsgPB\032\rMsgType.proto\032\020"
    "MsgGameDef.proto\"\212\002\n\031MsgSkillCastSkillFr"
    "ontC2S\022\020\n\010SerialID\030\001 \001(\003\022A\n\007msgType\030\002 \001("
    "\0162\017.MsgPB.EMsgType:\037_MSG_SKILL_CAST_SKIL"
    "L_FRONT_C2S\022\033\n\023target_mapobjectids\030\003 \003(\005"
    "\022\024\n\014caster_pos_x\030\004 \001(\003\022\024\n\014caster_pos_y\030\005"
    " \001(\003\022\024\n\014target_pos_x\030\006 \001(\003\022\024\n\014target_pos"
    "_y\030\007 \001(\003\022\020\n\010skill_id\030\010 \001(\005\022\021\n\tcaster_id\030"
    "\t \001(\005\"\263\002\n\025MsgSkillCastSkillC2GS\022\020\n\010Seria"
    "lID\030\001 \001(\003\022<\n\007msgType\030\002 \001(\0162\017.MsgPB.EMsgT"
    "ype:\032_MSG_SKILL_CAST_SKILL_C2GS\022\023\n\013weapo"
    "n_uuid\030\003 \001(\003\022\022\n\nskillindex\030\004 \001(\005\022\033\n\023targ"
    "et_mapobjectids\030\005 \003(\005\022\024\n\014caster_pos_x\030\006 "
    "\001(\003\022\024\n\014caster_pos_y\030\007 \001(\003\022\024\n\014target_pos_"
    "x\030\010 \001(\003\022\024\n\014target_pos_y\030\t \001(\003\022\026\n\016debug_s"
    "kill_id\030\n \001(\005\022\024\n\014clienttimems\030\013 \001(\003\"\276\001\n\033"
    "MsgSkillCastSkillResultGS2C\022\020\n\010SerialID\030"
    "\001 \001(\003\022\?\n\007msgType\030\002 \001(\0162\017.MsgPB.EMsgType:"
    "\035_MSG_SKILL_CAST_SKILL_RS_GS2C\022,\n\006result"
    "\030\003 \001(\0162\034.MsgPB.ENUM_CASTSKILL_RESULT\022\017\n\007"
    "skillid\030\004 \001(\005\022\r\n\005iggid\030\005 \001(\003\"\302\001\n\024MsgSkil"
    "lAddBuffGS2MS\022\020\n\010SerialID\030\001 \001(\003\022;\n\007msgTy"
    "pe\030\002 \001(\0162\017.MsgPB.EMsgType:\031_MSG_SKILL_AD"
    "D_BUFF_GS2MS\022\r\n\005iggid\030\003 \001(\003\022\016\n\006buffid\030\004 "
    "\001(\005\022 \n\030attr_runtime_effect_rate\030\005 \001(\005\022\032\n"
    "\022target_mapobjectid\030\006 \001(\005\"\251\001\n\032MsgSkillAd"
    "dBuffResultMS2GS\022\020\n\010SerialID\030\001 \001(\003\022>\n\007ms"
    "gType\030\002 \001(\0162\017.MsgPB.EMsgType:\034_MSG_SKILL"
    "_ADD_BUFF_RS_MS2GS\022\r\n\005iggid\030\003 \001(\003\022*\n\006res"
    "ult\030\004 \001(\0162\032.MsgPB.ENUM_ADDBUFF_RESULT\"\204\001"
    "\n\024MsgSkillDelBuffGS2MS\022\020\n\010SerialID\030\001 \001(\003"
    "\022;\n\007msgType\030\002 \001(\0162\017.MsgPB.EMsgType:\031_MSG"
    "_SKILL_DEL_BUFF_GS2MS\022\r\n\005iggid\030\003 \001(\003\022\016\n\006"
    "buffid\030\004 \001(\005\"\251\001\n\032MsgSkillDelBuffResultMS"
    "2GS\022\020\n\010SerialID\030\001 \001(\003\022>\n\007msgType\030\002 \001(\0162\017"
    ".MsgPB.EMsgType:\034_MSG_SKILL_DEL_BUFF_RS_"
    "MS2GS\022\r\n\005iggid\030\003 \001(\003\022*\n\006result\030\004 \001(\0162\032.M"
    "sgPB.ENUM_DELBUFF_RESULT\"\303\002\n\033MsgSkillMap"
    "ObjCastSkillMS2C\022\020\n\010SerialID\030\001 \001(\003\022C\n\007ms"
    "gType\030\002 \001(\0162\017.MsgPB.EMsgType:!_MSG_SKILL"
    "_MAPOBJ_CAST_SKILL_MS2C\022\r\n\005iggid\030\003 \001(\003\022\032"
    "\n\022caster_mapobjectid\030\004 \001(\005\022\033\n\023target_map"
    "objectids\030\005 \003(\005\022\020\n\010skill_id\030\006 \001(\005\022\024\n\014tar"
    "get_pos_x\030\007 \001(\003\022\024\n\014target_pos_y\030\010 \001(\003\022\024\n"
    "\014caster_pos_x\030\t \001(\003\022\024\n\014caster_pos_y\030\n \001("
    "\003\022\033\n\023magicball_mapobj_id\030\013 \001(\005\"\260\002\n\025MsgSk"
    "illEffectDmgMS2C\022\020\n\010SerialID\030\001 \001(\003\022<\n\007ms"
    "gType\030\002 \001(\0162\017.MsgPB.EMsgType:\032_MSG_SKILL"
    "_EFFECT_Dmg_MS2C\022\r\n\005iggid\030\003 \001(\003\022\032\n\022caste"
    "r_mapobjectid\030\004 \001(\005\022\032\n\022target_mapobjecti"
    "d\030\005 \001(\005\022\020\n\010skill_id\030\006 \001(\005\022\017\n\007dmg_val\030\007 \001"
    "(\005\022\017\n\007criticl\030\010 \001(\010\022\016\n\006currhp\030\t \001(\005\022\024\n\014t"
    "arget_skill\030\n \001(\005\022\022\n\nmp_dmg_val\030\013 \001(\005\022\022\n"
    "\ndurability\030\014 \001(\005\"\271\002\n\034MsgPassiveSkillEff"
    "ectDmgMS2C\022\020\n\010SerialID\030\001 \001(\003\022>\n\007msgType\030"
    "\002 \001(\0162\017.MsgPB.EMsgType:\034_MSG_PASSIVE_EFF"
    "ECT_Dmg_MS2C\022\r\n\005iggid\030\003 \001(\003\022\032\n\022caster_ma"
    "pobjectid\030\004 \001(\005\022\032\n\022target_mapobjectid\030\005 "
    "\001(\005\022\020\n\010skill_id\030\006 \001(\005\022\017\n\007dmg_val\030\007 \001(\005\022\017"
    "\n\007criticl\030\010 \001(\010\022\016\n\006currhp\030\t \001(\005\022\024\n\014targe"
    "t_skill\030\n \001(\005\022\022\n\nmp_dmg_val\030\013 \001(\005\022\022\n\ndur"
    "ability\030\014 \001(\005\"\240\002\n\030MsgSkillEffectDotDmgMS"
    "2C\022\020\n\010SerialID\030\001 \001(\003\022\?\n\007msgType\030\002 \001(\0162\017."
    "MsgPB.EMsgType:\035_MSG_SKILL_EFFECT_DotDmg"
    "_MS2C\022\r\n\005iggid\030\003 \001(\003\022\032\n\022caster_mapobject"
    "id\030\004 \001(\005\022\032\n\022target_mapobjectid\030\005 \001(\005\022\020\n\010"
    "skill_id\030\006 \001(\005\022\017\n\007dmg_val\030\007 \001(\005\022\017\n\007criti"
    "cl\030\010 \001(\010\022\022\n\nmp_dmg_val\030\t \001(\005\022\016\n\006currhp\030\n"
    " \001(\005\022\022\n\ndurability\030\013 \001(\005\"\330\001\n\031MsgSkillEff"
    "ectAddBuffMS2C\022\020\n\010SerialID\030\001 \001(\003\022@\n\007msgT"
    "ype\030\002 \001(\0162\017.MsgPB.EMsgType:\036_MSG_SKILL_E"
    "FFECT_AddBuff_MS2C\022\r\n\005iggid\030\003 \001(\003\022\032\n\022cas"
    "ter_mapobjectid\030\004 \001(\005\022\032\n\022target_mapobjec"
    "tid\030\005 \001(\005\022\020\n\010skill_id\030\006 \001(\005\022\016\n\006buffid\030\007 "
    "\001(\005\"\367\001\n\030MsgSkillEffectSummonMS2C\022\020\n\010Seri"
    "alID\030\001 \001(\003\022\?\n\007msgType\030\002 \001(\0162\017.MsgPB.EMsg"
    "Type:\035_MSG_SKILL_EFFECT_Summon_MS2C\022\r\n\005i"
    "ggid\030\003 \001(\003\022\032\n\022caster_mapobjectid\030\004 \001(\005\022\032"
    "\n\022target_mapobjectid\030\005 \001(\005\022\020\n\010skill_id\030\006"
    " \001(\005\022\021\n\tsummon_id\030\007 \003(\005\022\034\n\003pos\030\010 \003(\0132\017.M"
    "sgPB.MsgPoint\"\370\001\n\031MsgSkillEffectRestoreM"
    "S2C\022\020\n\010SerialID\030\001 \001(\003\022@\n\007msgType\030\002 \001(\0162\017"
    ".MsgPB.EMsgType:\036_MSG_SKILL_EFFECT_Resto"
    "re_MS2C\022\r\n\005iggid\030\003 \001(\003\022\032\n\022caster_mapobje"
    "ctid\030\004 \001(\005\022\032\n\022target_mapobjectid\030\005 \001(\005\022\020"
    "\n\010skill_id\030\006 \001(\005\022\016\n\006hp_val\030\007 \001(\005\022\016\n\006mp_v"
    "al\030\010 \001(\005\022\016\n\006currhp\030\t \001(\005\"\376\001\n\034MsgSkillEff"
    "ectDotRestoreMS2C\022\020\n\010SerialID\030\001 \001(\003\022C\n\007m"
    "sgType\030\002 \001(\0162\017.MsgPB.EMsgType:!_MSG_SKIL"
    "L_EFFECT_DotRestore_MS2C\022\r\n\005iggid\030\003 \001(\003\022"
    "\032\n\022caster_mapobjectid\030\004 \001(\005\022\032\n\022target_ma"
    "pobjectid\030\005 \001(\005\022\020\n\010skill_id\030\006 \001(\005\022\016\n\006hp_"
    "val\030\007 \001(\005\022\016\n\006mp_val\030\010 \001(\005\022\016\n\006currhp\030\t \001("
    "\005\"\322\001\n\036MsgSkillEffectResurrectionMS2C\022\020\n\010"
    "SerialID\030\001 \001(\003\022E\n\007msgType\030\002 \001(\0162\017.MsgPB."
    "EMsgType:#_MSG_SKILL_EFFECT_Resurrection"
    "_MS2C\022\r\n\005iggid\030\003 \001(\003\022\032\n\022caster_mapobject"
    "id\030\004 \001(\005\022\032\n\022target_mapobjectid\030\005 \001(\005\022\020\n\010"
    "skill_id\030\006 \001(\005\"\324\001\n\024MsgSkillTeleportMS2C\022"
    "A\n\007msgType\030\001 \001(\0162\017.MsgPB.EMsgType:\037_MSG_"
    "SKILL_MAPOBJ_TELEPORT_MS2C\022\r\n\005iggid\030\002 \001("
    "\003\022\020\n\010SerialID\030\003 \001(\003\022\032\n\022caster_mapobjecti"
    "d\030\004 \001(\005\022\020\n\010skill_id\030\005 \001(\005\022\024\n\014target_pos_"
    "x\030\006 \001(\005\022\024\n\014target_pos_y\030\007 \001(\005\"\251\001\n\013Previe"
    "wInfo\022\023\n\013millisecond\030\001 \001(\005\022\024\n\014target_pos"
    "_x\030\002 \001(\005\022\024\n\014target_pos_y\030\003 \001(\005\022\020\n\010skill_"
    "id\030\004 \001(\005\022\033\n\023target_mapobjectids\030\005 \003(\005\022\024\n"
    "\014caster_pos_x\030\006 \001(\005\022\024\n\014caster_pos_y\030\007 \001("
    "\005\"\257\001\n\022MsgSkillPreviewS2C\0228\n\007msgType\030\001 \001("
    "\0162\017.MsgPB.EMsgType:\026_MSG_SKILL_PREVIEW_S"
    "2C\022\r\n\005iggid\030\002 \001(\003\022\020\n\010SerialID\030\003 \001(\003\022\032\n\022c"
    "aster_mapobjectid\030\004 \001(\005\022\"\n\006skills\030\005 \003(\0132"
    "\022.MsgPB.PreviewInfo\"\204\001\n\030MsgSkillActivePa"
    "ssiveC2S\022\?\n\007msgType\030\001 \001(\0162\017.MsgPB.EMsgTy"
    "pe:\035_MSG_SKILL_ACTIVE_PASSIVE_C2S\022\r\n\005igg"
    "id\030\002 \001(\003\022\030\n\020passive_skill_id\030\003 \003(\005\"T\n\030Ac"
    "tivePassiveSkillResult\022\036\n\002ec\030\001 \001(\0162\022.Msg"
    "PB.E_ErrorCode\022\030\n\020passive_skill_id\030\002 \001(\005"
    "\"\272\001\n\030MsgSkillActivePassiveS2C\022\?\n\007msgType"
    "\030\001 \001(\0162\017.MsgPB.EMsgType:\035_MSG_SKILL_ACTI"
    "VE_PASSIVE_S2C\022\r\n\005iggid\030\002 \001(\003\0220\n\007results"
    "\030\003 \003(\0132\037.MsgPB.ActivePassiveSkillResult\022"
    "\034\n\024caster_map_object_id\030\004 \001(\005\"\210\001\n\032MsgSki"
    "llInactivePassiveC2S\022A\n\007msgType\030\001 \001(\0162\017."
    "MsgPB.EMsgType:\037_MSG_SKILL_INACTIVE_PASS"
    "IVE_C2S\022\r\n\005iggid\030\002 \001(\003\022\030\n\020passive_skill_"
    "id\030\003 \003(\005\"V\n\032InactivePassiveSkillResult\022\036"
    "\n\002ec\030\001 \001(\0162\022.MsgPB.E_ErrorCode\022\030\n\020passiv"
    "e_skill_id\030\002 \001(\005\"\300\001\n\032MsgSkillInactivePas"
    "siveS2C\022A\n\007msgType\030\001 \001(\0162\017.MsgPB.EMsgTyp"
    "e:\037_MSG_SKILL_INACTIVE_PASSIVE_S2C\022\r\n\005ig"
    "gid\030\002 \001(\003\0222\n\007results\030\003 \003(\0132!.MsgPB.Inact"
    "ivePassiveSkillResult\022\034\n\024caster_map_obje"
    "ct_id\030\004 \001(\005\"\305\001\n MsgSkillManualMagicBallH"
    "urt_C2MS\022H\n\007msgType\030\001 \001(\0162\017.MsgPB.EMsgTy"
    "pe:&_MSG_SKILL_MANUAL_MAGIC_BALL_HURT_C2"
    "MS\022\r\n\005iggid\030\002 \001(\003\022\023\n\013magic_objid\030\003 \001(\005\022\r"
    "\n\005pos_x\030\004 \001(\005\022\r\n\005pos_y\030\005 \001(\005\022\025\n\rhurt_map"
    "_objs\030\006 \003(\005*\244\006\n\025ENUM_CASTSKILL_RESULT\022\025\n"
    "\021CASTSKILL_SUCCESS\020\000\022\035\n\031CASTSKILL_SKILLT"
    "YPE_ERROR\020\001\022\032\n\026CASTSKILL_CASTER_FAILE\020\002\022"
    "\032\n\026CASTSKILL_TARGET_FAILE\020\003\022#\n\037CASTSKILL"
    "_TARGET_DISTANCE_FAILE\020\004\022\036\n\032CASTSKILL_SK"
    "ILL_DATA_ERROR\020\005\022\035\n\031CASTSKILL_MAGICBALL_"
    "ERROR\020\006\022\035\n\031CASTSKILL_DIRECTDMG_ERROR\020\007\022\035"
    "\n\031CASTSKILL_MAGICAREA_ERROR\020\010\022\"\n\036CASTSKI"
    "LL_GAMESERVER_MSG_ERROR\020\t\022!\n\035CASTSKILL_M"
    "APSERVER_MSG_ERROR\020\n\022\036\n\032CASTSKILL_ITEMPA"
    "CKET_ERROR\020\013\022\032\n\026CASTSKILL_WEAPON_ERROR\020\014"
    "\022\037\n\033CASTSKILL_WEAPON_DATA_ERROR\020\r\022 \n\034CAS"
    "TSKILL_WEAPON_SKILL_ERROR\020\016\022%\n!CASTSKILL"
    "_WEAPON_SKILL_DATA_ERROR\020\017\022#\n\037CASTSKILL_"
    "GLOBAL_COOLDOWN_ERROR\020\020\022\"\n\036CASTSKILL_SKI"
    "LL_COOLDOWN_ERROR\020\021\022\027\n\023CASTSKILL_MAP_ERR"
    "OR\020\022\022\030\n\024CASTSKILL_MP_LACKING\020\023\022\036\n\032CASTSK"
    "ILL_CASTER_POS_ERROR\020\024\022\032\n\026CASTSKILL_CANT"
    "_TRIGGER\020\025\022\032\n\026CASTSKILL_ITEM_LACKING\020\026\022\035"
    "\n\031CASTSKILL_SKILL_NOT_EXIST\020\027\022\033\n\027CASTSKI"
    "LL_FORBID_BATTLE\020\030*\351\001\n\023ENUM_ADDBUFF_RESU"
    "LT\022\023\n\017ADDBUFF_SUCCESS\020\000\022\031\n\025ADDBUFF_ADDBU"
    "FF_FAILE\020\001\022\030\n\024ADDBUFF_CASTER_FAILE\020\002\022\030\n\024"
    "ADDBUFF_TARGET_FAILE\020\003\022\033\n\027ADDBUFF_BUFF_D"
    "ATA_ERROR\020\004\022\037\n\033ADDBUFF_MAPSERVER_MSG_ERR"
    "OR\020\005\022\025\n\021ADDBUFF_MAP_ERROR\020\006\022\031\n\025ADDBUFF_F"
    "ORBID_BATTLE\020\007*\353\001\n\023ENUM_DELBUFF_RESULT\022\023"
    "\n\017DELBUFF_SUCCESS\020\000\022\031\n\025DELBUFF_ADDBUFF_F"
    "AILE\020\001\022\030\n\024DELBUFF_CASTER_FAILE\020\002\022\032\n\026DELB"
    "UFF_BUFF_NOT_EXIST\020\003\022\033\n\027DELBUFF_BUFF_DAT"
    "A_ERROR\020\004\022\037\n\033DELBUFF_MAPSERVER_MSG_ERROR"
    "\020\005\022\025\n\021DELBUFF_MAP_ERROR\020\006\022\031\n\025DELBUFF_FOR"
    "BID_BATTLE\020\007", 6812);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "MsgSkill.proto", &protobuf_RegisterTypes);
  MsgSkillCastSkillFrontC2S::default_instance_ = new MsgSkillCastSkillFrontC2S();
  MsgSkillCastSkillC2GS::default_instance_ = new MsgSkillCastSkillC2GS();
  MsgSkillCastSkillResultGS2C::default_instance_ = new MsgSkillCastSkillResultGS2C();
  MsgSkillAddBuffGS2MS::default_instance_ = new MsgSkillAddBuffGS2MS();
  MsgSkillAddBuffResultMS2GS::default_instance_ = new MsgSkillAddBuffResultMS2GS();
  MsgSkillDelBuffGS2MS::default_instance_ = new MsgSkillDelBuffGS2MS();
  MsgSkillDelBuffResultMS2GS::default_instance_ = new MsgSkillDelBuffResultMS2GS();
  MsgSkillMapObjCastSkillMS2C::default_instance_ = new MsgSkillMapObjCastSkillMS2C();
  MsgSkillEffectDmgMS2C::default_instance_ = new MsgSkillEffectDmgMS2C();
  MsgPassiveSkillEffectDmgMS2C::default_instance_ = new MsgPassiveSkillEffectDmgMS2C();
  MsgSkillEffectDotDmgMS2C::default_instance_ = new MsgSkillEffectDotDmgMS2C();
  MsgSkillEffectAddBuffMS2C::default_instance_ = new MsgSkillEffectAddBuffMS2C();
  MsgSkillEffectSummonMS2C::default_instance_ = new MsgSkillEffectSummonMS2C();
  MsgSkillEffectRestoreMS2C::default_instance_ = new MsgSkillEffectRestoreMS2C();
  MsgSkillEffectDotRestoreMS2C::default_instance_ = new MsgSkillEffectDotRestoreMS2C();
  MsgSkillEffectResurrectionMS2C::default_instance_ = new MsgSkillEffectResurrectionMS2C();
  MsgSkillTeleportMS2C::default_instance_ = new MsgSkillTeleportMS2C();
  PreviewInfo::default_instance_ = new PreviewInfo();
  MsgSkillPreviewS2C::default_instance_ = new MsgSkillPreviewS2C();
  MsgSkillActivePassiveC2S::default_instance_ = new MsgSkillActivePassiveC2S();
  ActivePassiveSkillResult::default_instance_ = new ActivePassiveSkillResult();
  MsgSkillActivePassiveS2C::default_instance_ = new MsgSkillActivePassiveS2C();
  MsgSkillInactivePassiveC2S::default_instance_ = new MsgSkillInactivePassiveC2S();
  InactivePassiveSkillResult::default_instance_ = new InactivePassiveSkillResult();
  MsgSkillInactivePassiveS2C::default_instance_ = new MsgSkillInactivePassiveS2C();
  MsgSkillManualMagicBallHurt_C2MS::default_instance_ = new MsgSkillManualMagicBallHurt_C2MS();
  MsgSkillCastSkillFrontC2S::default_instance_->InitAsDefaultInstance();
  MsgSkillCastSkillC2GS::default_instance_->InitAsDefaultInstance();
  MsgSkillCastSkillResultGS2C::default_instance_->InitAsDefaultInstance();
  MsgSkillAddBuffGS2MS::default_instance_->InitAsDefaultInstance();
  MsgSkillAddBuffResultMS2GS::default_instance_->InitAsDefaultInstance();
  MsgSkillDelBuffGS2MS::default_instance_->InitAsDefaultInstance();
  MsgSkillDelBuffResultMS2GS::default_instance_->InitAsDefaultInstance();
  MsgSkillMapObjCastSkillMS2C::default_instance_->InitAsDefaultInstance();
  MsgSkillEffectDmgMS2C::default_instance_->InitAsDefaultInstance();
  MsgPassiveSkillEffectDmgMS2C::default_instance_->InitAsDefaultInstance();
  MsgSkillEffectDotDmgMS2C::default_instance_->InitAsDefaultInstance();
  MsgSkillEffectAddBuffMS2C::default_instance_->InitAsDefaultInstance();
  MsgSkillEffectSummonMS2C::default_instance_->InitAsDefaultInstance();
  MsgSkillEffectRestoreMS2C::default_instance_->InitAsDefaultInstance();
  MsgSkillEffectDotRestoreMS2C::default_instance_->InitAsDefaultInstance();
  MsgSkillEffectResurrectionMS2C::default_instance_->InitAsDefaultInstance();
  MsgSkillTeleportMS2C::default_instance_->InitAsDefaultInstance();
  PreviewInfo::default_instance_->InitAsDefaultInstance();
  MsgSkillPreviewS2C::default_instance_->InitAsDefaultInstance();
  MsgSkillActivePassiveC2S::default_instance_->InitAsDefaultInstance();
  ActivePassiveSkillResult::default_instance_->InitAsDefaultInstance();
  MsgSkillActivePassiveS2C::default_instance_->InitAsDefaultInstance();
  MsgSkillInactivePassiveC2S::default_instance_->InitAsDefaultInstance();
  InactivePassiveSkillResult::default_instance_->InitAsDefaultInstance();
  MsgSkillInactivePassiveS2C::default_instance_->InitAsDefaultInstance();
  MsgSkillManualMagicBallHurt_C2MS::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_MsgSkill_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_MsgSkill_2eproto {
  StaticDescriptorInitializer_MsgSkill_2eproto() {
    protobuf_AddDesc_MsgSkill_2eproto();
  }
} static_descriptor_initializer_MsgSkill_2eproto_;
const ::google::protobuf::EnumDescriptor* ENUM_CASTSKILL_RESULT_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ENUM_CASTSKILL_RESULT_descriptor_;
}
bool ENUM_CASTSKILL_RESULT_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
    case 18:
    case 19:
    case 20:
    case 21:
    case 22:
    case 23:
    case 24:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* ENUM_ADDBUFF_RESULT_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ENUM_ADDBUFF_RESULT_descriptor_;
}
bool ENUM_ADDBUFF_RESULT_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* ENUM_DELBUFF_RESULT_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ENUM_DELBUFF_RESULT_descriptor_;
}
bool ENUM_DELBUFF_RESULT_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#ifndef _MSC_VER
const int MsgSkillCastSkillFrontC2S::kSerialIDFieldNumber;
const int MsgSkillCastSkillFrontC2S::kMsgTypeFieldNumber;
const int MsgSkillCastSkillFrontC2S::kTargetMapobjectidsFieldNumber;
const int MsgSkillCastSkillFrontC2S::kCasterPosXFieldNumber;
const int MsgSkillCastSkillFrontC2S::kCasterPosYFieldNumber;
const int MsgSkillCastSkillFrontC2S::kTargetPosXFieldNumber;
const int MsgSkillCastSkillFrontC2S::kTargetPosYFieldNumber;
const int MsgSkillCastSkillFrontC2S::kSkillIdFieldNumber;
const int MsgSkillCastSkillFrontC2S::kCasterIdFieldNumber;
#endif  // !_MSC_VER

MsgSkillCastSkillFrontC2S::MsgSkillCastSkillFrontC2S()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.MsgSkillCastSkillFrontC2S)
}

void MsgSkillCastSkillFrontC2S::InitAsDefaultInstance() {
}

MsgSkillCastSkillFrontC2S::MsgSkillCastSkillFrontC2S(const MsgSkillCastSkillFrontC2S& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.MsgSkillCastSkillFrontC2S)
}

void MsgSkillCastSkillFrontC2S::SharedCtor() {
  _cached_size_ = 0;
  serialid_ = GOOGLE_LONGLONG(0);
  msgtype_ = 1249;
  caster_pos_x_ = GOOGLE_LONGLONG(0);
  caster_pos_y_ = GOOGLE_LONGLONG(0);
  target_pos_x_ = GOOGLE_LONGLONG(0);
  target_pos_y_ = GOOGLE_LONGLONG(0);
  skill_id_ = 0;
  caster_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgSkillCastSkillFrontC2S::~MsgSkillCastSkillFrontC2S() {
  // @@protoc_insertion_point(destructor:MsgPB.MsgSkillCastSkillFrontC2S)
  SharedDtor();
}

void MsgSkillCastSkillFrontC2S::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgSkillCastSkillFrontC2S::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgSkillCastSkillFrontC2S::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgSkillCastSkillFrontC2S_descriptor_;
}

const MsgSkillCastSkillFrontC2S& MsgSkillCastSkillFrontC2S::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgSkill_2eproto();
  return *default_instance_;
}

MsgSkillCastSkillFrontC2S* MsgSkillCastSkillFrontC2S::default_instance_ = NULL;

MsgSkillCastSkillFrontC2S* MsgSkillCastSkillFrontC2S::New() const {
  return new MsgSkillCastSkillFrontC2S;
}

void MsgSkillCastSkillFrontC2S::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<MsgSkillCastSkillFrontC2S*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 251) {
    ZR_(caster_pos_x_, caster_pos_y_);
    ZR_(skill_id_, target_pos_y_);
    serialid_ = GOOGLE_LONGLONG(0);
    msgtype_ = 1249;
  }
  caster_id_ = 0;

#undef OFFSET_OF_FIELD_
#undef ZR_

  target_mapobjectids_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgSkillCastSkillFrontC2S::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.MsgSkillCastSkillFrontC2S)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 SerialID = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &serialid_)));
          set_has_serialid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_msgType;
        break;
      }

      // optional .MsgPB.EMsgType msgType = 2 [default = _MSG_SKILL_CAST_SKILL_FRONT_C2S];
      case 2: {
        if (tag == 16) {
         parse_msgType:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::EMsgType_IsValid(value)) {
            set_msgtype(static_cast< ::MsgPB::EMsgType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_target_mapobjectids;
        break;
      }

      // repeated int32 target_mapobjectids = 3;
      case 3: {
        if (tag == 24) {
         parse_target_mapobjectids:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 24, input, this->mutable_target_mapobjectids())));
        } else if (tag == 26) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_target_mapobjectids())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_target_mapobjectids;
        if (input->ExpectTag(32)) goto parse_caster_pos_x;
        break;
      }

      // optional int64 caster_pos_x = 4;
      case 4: {
        if (tag == 32) {
         parse_caster_pos_x:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &caster_pos_x_)));
          set_has_caster_pos_x();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_caster_pos_y;
        break;
      }

      // optional int64 caster_pos_y = 5;
      case 5: {
        if (tag == 40) {
         parse_caster_pos_y:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &caster_pos_y_)));
          set_has_caster_pos_y();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_target_pos_x;
        break;
      }

      // optional int64 target_pos_x = 6;
      case 6: {
        if (tag == 48) {
         parse_target_pos_x:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &target_pos_x_)));
          set_has_target_pos_x();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_target_pos_y;
        break;
      }

      // optional int64 target_pos_y = 7;
      case 7: {
        if (tag == 56) {
         parse_target_pos_y:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &target_pos_y_)));
          set_has_target_pos_y();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_skill_id;
        break;
      }

      // optional int32 skill_id = 8;
      case 8: {
        if (tag == 64) {
         parse_skill_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &skill_id_)));
          set_has_skill_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_caster_id;
        break;
      }

      // optional int32 caster_id = 9;
      case 9: {
        if (tag == 72) {
         parse_caster_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &caster_id_)));
          set_has_caster_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.MsgSkillCastSkillFrontC2S)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.MsgSkillCastSkillFrontC2S)
  return false;
#undef DO_
}

void MsgSkillCastSkillFrontC2S::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.MsgSkillCastSkillFrontC2S)
  // optional int64 SerialID = 1;
  if (has_serialid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->serialid(), output);
  }

  // optional .MsgPB.EMsgType msgType = 2 [default = _MSG_SKILL_CAST_SKILL_FRONT_C2S];
  if (has_msgtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->msgtype(), output);
  }

  // repeated int32 target_mapobjectids = 3;
  for (int i = 0; i < this->target_mapobjectids_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      3, this->target_mapobjectids(i), output);
  }

  // optional int64 caster_pos_x = 4;
  if (has_caster_pos_x()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->caster_pos_x(), output);
  }

  // optional int64 caster_pos_y = 5;
  if (has_caster_pos_y()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(5, this->caster_pos_y(), output);
  }

  // optional int64 target_pos_x = 6;
  if (has_target_pos_x()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(6, this->target_pos_x(), output);
  }

  // optional int64 target_pos_y = 7;
  if (has_target_pos_y()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(7, this->target_pos_y(), output);
  }

  // optional int32 skill_id = 8;
  if (has_skill_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->skill_id(), output);
  }

  // optional int32 caster_id = 9;
  if (has_caster_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->caster_id(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.MsgSkillCastSkillFrontC2S)
}

::google::protobuf::uint8* MsgSkillCastSkillFrontC2S::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.MsgSkillCastSkillFrontC2S)
  // optional int64 SerialID = 1;
  if (has_serialid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->serialid(), target);
  }

  // optional .MsgPB.EMsgType msgType = 2 [default = _MSG_SKILL_CAST_SKILL_FRONT_C2S];
  if (has_msgtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->msgtype(), target);
  }

  // repeated int32 target_mapobjectids = 3;
  for (int i = 0; i < this->target_mapobjectids_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(3, this->target_mapobjectids(i), target);
  }

  // optional int64 caster_pos_x = 4;
  if (has_caster_pos_x()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->caster_pos_x(), target);
  }

  // optional int64 caster_pos_y = 5;
  if (has_caster_pos_y()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(5, this->caster_pos_y(), target);
  }

  // optional int64 target_pos_x = 6;
  if (has_target_pos_x()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(6, this->target_pos_x(), target);
  }

  // optional int64 target_pos_y = 7;
  if (has_target_pos_y()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(7, this->target_pos_y(), target);
  }

  // optional int32 skill_id = 8;
  if (has_skill_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->skill_id(), target);
  }

  // optional int32 caster_id = 9;
  if (has_caster_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->caster_id(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.MsgSkillCastSkillFrontC2S)
  return target;
}

int MsgSkillCastSkillFrontC2S::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 SerialID = 1;
    if (has_serialid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->serialid());
    }

    // optional .MsgPB.EMsgType msgType = 2 [default = _MSG_SKILL_CAST_SKILL_FRONT_C2S];
    if (has_msgtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgtype());
    }

    // optional int64 caster_pos_x = 4;
    if (has_caster_pos_x()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->caster_pos_x());
    }

    // optional int64 caster_pos_y = 5;
    if (has_caster_pos_y()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->caster_pos_y());
    }

    // optional int64 target_pos_x = 6;
    if (has_target_pos_x()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->target_pos_x());
    }

    // optional int64 target_pos_y = 7;
    if (has_target_pos_y()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->target_pos_y());
    }

    // optional int32 skill_id = 8;
    if (has_skill_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->skill_id());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional int32 caster_id = 9;
    if (has_caster_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->caster_id());
    }

  }
  // repeated int32 target_mapobjectids = 3;
  {
    int data_size = 0;
    for (int i = 0; i < this->target_mapobjectids_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->target_mapobjectids(i));
    }
    total_size += 1 * this->target_mapobjectids_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgSkillCastSkillFrontC2S::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgSkillCastSkillFrontC2S* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgSkillCastSkillFrontC2S*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgSkillCastSkillFrontC2S::MergeFrom(const MsgSkillCastSkillFrontC2S& from) {
  GOOGLE_CHECK_NE(&from, this);
  target_mapobjectids_.MergeFrom(from.target_mapobjectids_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_serialid()) {
      set_serialid(from.serialid());
    }
    if (from.has_msgtype()) {
      set_msgtype(from.msgtype());
    }
    if (from.has_caster_pos_x()) {
      set_caster_pos_x(from.caster_pos_x());
    }
    if (from.has_caster_pos_y()) {
      set_caster_pos_y(from.caster_pos_y());
    }
    if (from.has_target_pos_x()) {
      set_target_pos_x(from.target_pos_x());
    }
    if (from.has_target_pos_y()) {
      set_target_pos_y(from.target_pos_y());
    }
    if (from.has_skill_id()) {
      set_skill_id(from.skill_id());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_caster_id()) {
      set_caster_id(from.caster_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgSkillCastSkillFrontC2S::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgSkillCastSkillFrontC2S::CopyFrom(const MsgSkillCastSkillFrontC2S& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgSkillCastSkillFrontC2S::IsInitialized() const {

  return true;
}

void MsgSkillCastSkillFrontC2S::Swap(MsgSkillCastSkillFrontC2S* other) {
  if (other != this) {
    std::swap(serialid_, other->serialid_);
    std::swap(msgtype_, other->msgtype_);
    target_mapobjectids_.Swap(&other->target_mapobjectids_);
    std::swap(caster_pos_x_, other->caster_pos_x_);
    std::swap(caster_pos_y_, other->caster_pos_y_);
    std::swap(target_pos_x_, other->target_pos_x_);
    std::swap(target_pos_y_, other->target_pos_y_);
    std::swap(skill_id_, other->skill_id_);
    std::swap(caster_id_, other->caster_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgSkillCastSkillFrontC2S::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgSkillCastSkillFrontC2S_descriptor_;
  metadata.reflection = MsgSkillCastSkillFrontC2S_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgSkillCastSkillC2GS::kSerialIDFieldNumber;
const int MsgSkillCastSkillC2GS::kMsgTypeFieldNumber;
const int MsgSkillCastSkillC2GS::kWeaponUuidFieldNumber;
const int MsgSkillCastSkillC2GS::kSkillindexFieldNumber;
const int MsgSkillCastSkillC2GS::kTargetMapobjectidsFieldNumber;
const int MsgSkillCastSkillC2GS::kCasterPosXFieldNumber;
const int MsgSkillCastSkillC2GS::kCasterPosYFieldNumber;
const int MsgSkillCastSkillC2GS::kTargetPosXFieldNumber;
const int MsgSkillCastSkillC2GS::kTargetPosYFieldNumber;
const int MsgSkillCastSkillC2GS::kDebugSkillIdFieldNumber;
const int MsgSkillCastSkillC2GS::kClienttimemsFieldNumber;
#endif  // !_MSC_VER

MsgSkillCastSkillC2GS::MsgSkillCastSkillC2GS()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.MsgSkillCastSkillC2GS)
}

void MsgSkillCastSkillC2GS::InitAsDefaultInstance() {
}

MsgSkillCastSkillC2GS::MsgSkillCastSkillC2GS(const MsgSkillCastSkillC2GS& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.MsgSkillCastSkillC2GS)
}

void MsgSkillCastSkillC2GS::SharedCtor() {
  _cached_size_ = 0;
  serialid_ = GOOGLE_LONGLONG(0);
  msgtype_ = 1250;
  weapon_uuid_ = GOOGLE_LONGLONG(0);
  skillindex_ = 0;
  caster_pos_x_ = GOOGLE_LONGLONG(0);
  caster_pos_y_ = GOOGLE_LONGLONG(0);
  target_pos_x_ = GOOGLE_LONGLONG(0);
  target_pos_y_ = GOOGLE_LONGLONG(0);
  debug_skill_id_ = 0;
  clienttimems_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgSkillCastSkillC2GS::~MsgSkillCastSkillC2GS() {
  // @@protoc_insertion_point(destructor:MsgPB.MsgSkillCastSkillC2GS)
  SharedDtor();
}

void MsgSkillCastSkillC2GS::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgSkillCastSkillC2GS::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgSkillCastSkillC2GS::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgSkillCastSkillC2GS_descriptor_;
}

const MsgSkillCastSkillC2GS& MsgSkillCastSkillC2GS::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgSkill_2eproto();
  return *default_instance_;
}

MsgSkillCastSkillC2GS* MsgSkillCastSkillC2GS::default_instance_ = NULL;

MsgSkillCastSkillC2GS* MsgSkillCastSkillC2GS::New() const {
  return new MsgSkillCastSkillC2GS;
}

void MsgSkillCastSkillC2GS::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<MsgSkillCastSkillC2GS*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 239) {
    ZR_(serialid_, weapon_uuid_);
    ZR_(caster_pos_x_, target_pos_x_);
    msgtype_ = 1250;
    skillindex_ = 0;
  }
  ZR_(target_pos_y_, debug_skill_id_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  target_mapobjectids_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgSkillCastSkillC2GS::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.MsgSkillCastSkillC2GS)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 SerialID = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &serialid_)));
          set_has_serialid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_msgType;
        break;
      }

      // optional .MsgPB.EMsgType msgType = 2 [default = _MSG_SKILL_CAST_SKILL_C2GS];
      case 2: {
        if (tag == 16) {
         parse_msgType:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::EMsgType_IsValid(value)) {
            set_msgtype(static_cast< ::MsgPB::EMsgType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_weapon_uuid;
        break;
      }

      // optional int64 weapon_uuid = 3;
      case 3: {
        if (tag == 24) {
         parse_weapon_uuid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &weapon_uuid_)));
          set_has_weapon_uuid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_skillindex;
        break;
      }

      // optional int32 skillindex = 4;
      case 4: {
        if (tag == 32) {
         parse_skillindex:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &skillindex_)));
          set_has_skillindex();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_target_mapobjectids;
        break;
      }

      // repeated int32 target_mapobjectids = 5;
      case 5: {
        if (tag == 40) {
         parse_target_mapobjectids:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 40, input, this->mutable_target_mapobjectids())));
        } else if (tag == 42) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_target_mapobjectids())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_target_mapobjectids;
        if (input->ExpectTag(48)) goto parse_caster_pos_x;
        break;
      }

      // optional int64 caster_pos_x = 6;
      case 6: {
        if (tag == 48) {
         parse_caster_pos_x:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &caster_pos_x_)));
          set_has_caster_pos_x();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_caster_pos_y;
        break;
      }

      // optional int64 caster_pos_y = 7;
      case 7: {
        if (tag == 56) {
         parse_caster_pos_y:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &caster_pos_y_)));
          set_has_caster_pos_y();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_target_pos_x;
        break;
      }

      // optional int64 target_pos_x = 8;
      case 8: {
        if (tag == 64) {
         parse_target_pos_x:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &target_pos_x_)));
          set_has_target_pos_x();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_target_pos_y;
        break;
      }

      // optional int64 target_pos_y = 9;
      case 9: {
        if (tag == 72) {
         parse_target_pos_y:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &target_pos_y_)));
          set_has_target_pos_y();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(80)) goto parse_debug_skill_id;
        break;
      }

      // optional int32 debug_skill_id = 10;
      case 10: {
        if (tag == 80) {
         parse_debug_skill_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &debug_skill_id_)));
          set_has_debug_skill_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(88)) goto parse_clienttimems;
        break;
      }

      // optional int64 clienttimems = 11;
      case 11: {
        if (tag == 88) {
         parse_clienttimems:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &clienttimems_)));
          set_has_clienttimems();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.MsgSkillCastSkillC2GS)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.MsgSkillCastSkillC2GS)
  return false;
#undef DO_
}

void MsgSkillCastSkillC2GS::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.MsgSkillCastSkillC2GS)
  // optional int64 SerialID = 1;
  if (has_serialid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->serialid(), output);
  }

  // optional .MsgPB.EMsgType msgType = 2 [default = _MSG_SKILL_CAST_SKILL_C2GS];
  if (has_msgtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->msgtype(), output);
  }

  // optional int64 weapon_uuid = 3;
  if (has_weapon_uuid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->weapon_uuid(), output);
  }

  // optional int32 skillindex = 4;
  if (has_skillindex()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->skillindex(), output);
  }

  // repeated int32 target_mapobjectids = 5;
  for (int i = 0; i < this->target_mapobjectids_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      5, this->target_mapobjectids(i), output);
  }

  // optional int64 caster_pos_x = 6;
  if (has_caster_pos_x()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(6, this->caster_pos_x(), output);
  }

  // optional int64 caster_pos_y = 7;
  if (has_caster_pos_y()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(7, this->caster_pos_y(), output);
  }

  // optional int64 target_pos_x = 8;
  if (has_target_pos_x()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(8, this->target_pos_x(), output);
  }

  // optional int64 target_pos_y = 9;
  if (has_target_pos_y()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(9, this->target_pos_y(), output);
  }

  // optional int32 debug_skill_id = 10;
  if (has_debug_skill_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->debug_skill_id(), output);
  }

  // optional int64 clienttimems = 11;
  if (has_clienttimems()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(11, this->clienttimems(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.MsgSkillCastSkillC2GS)
}

::google::protobuf::uint8* MsgSkillCastSkillC2GS::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.MsgSkillCastSkillC2GS)
  // optional int64 SerialID = 1;
  if (has_serialid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->serialid(), target);
  }

  // optional .MsgPB.EMsgType msgType = 2 [default = _MSG_SKILL_CAST_SKILL_C2GS];
  if (has_msgtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->msgtype(), target);
  }

  // optional int64 weapon_uuid = 3;
  if (has_weapon_uuid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->weapon_uuid(), target);
  }

  // optional int32 skillindex = 4;
  if (has_skillindex()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->skillindex(), target);
  }

  // repeated int32 target_mapobjectids = 5;
  for (int i = 0; i < this->target_mapobjectids_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(5, this->target_mapobjectids(i), target);
  }

  // optional int64 caster_pos_x = 6;
  if (has_caster_pos_x()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(6, this->caster_pos_x(), target);
  }

  // optional int64 caster_pos_y = 7;
  if (has_caster_pos_y()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(7, this->caster_pos_y(), target);
  }

  // optional int64 target_pos_x = 8;
  if (has_target_pos_x()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(8, this->target_pos_x(), target);
  }

  // optional int64 target_pos_y = 9;
  if (has_target_pos_y()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(9, this->target_pos_y(), target);
  }

  // optional int32 debug_skill_id = 10;
  if (has_debug_skill_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->debug_skill_id(), target);
  }

  // optional int64 clienttimems = 11;
  if (has_clienttimems()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(11, this->clienttimems(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.MsgSkillCastSkillC2GS)
  return target;
}

int MsgSkillCastSkillC2GS::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 SerialID = 1;
    if (has_serialid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->serialid());
    }

    // optional .MsgPB.EMsgType msgType = 2 [default = _MSG_SKILL_CAST_SKILL_C2GS];
    if (has_msgtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgtype());
    }

    // optional int64 weapon_uuid = 3;
    if (has_weapon_uuid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->weapon_uuid());
    }

    // optional int32 skillindex = 4;
    if (has_skillindex()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->skillindex());
    }

    // optional int64 caster_pos_x = 6;
    if (has_caster_pos_x()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->caster_pos_x());
    }

    // optional int64 caster_pos_y = 7;
    if (has_caster_pos_y()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->caster_pos_y());
    }

    // optional int64 target_pos_x = 8;
    if (has_target_pos_x()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->target_pos_x());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional int64 target_pos_y = 9;
    if (has_target_pos_y()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->target_pos_y());
    }

    // optional int32 debug_skill_id = 10;
    if (has_debug_skill_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->debug_skill_id());
    }

    // optional int64 clienttimems = 11;
    if (has_clienttimems()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->clienttimems());
    }

  }
  // repeated int32 target_mapobjectids = 5;
  {
    int data_size = 0;
    for (int i = 0; i < this->target_mapobjectids_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->target_mapobjectids(i));
    }
    total_size += 1 * this->target_mapobjectids_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgSkillCastSkillC2GS::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgSkillCastSkillC2GS* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgSkillCastSkillC2GS*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgSkillCastSkillC2GS::MergeFrom(const MsgSkillCastSkillC2GS& from) {
  GOOGLE_CHECK_NE(&from, this);
  target_mapobjectids_.MergeFrom(from.target_mapobjectids_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_serialid()) {
      set_serialid(from.serialid());
    }
    if (from.has_msgtype()) {
      set_msgtype(from.msgtype());
    }
    if (from.has_weapon_uuid()) {
      set_weapon_uuid(from.weapon_uuid());
    }
    if (from.has_skillindex()) {
      set_skillindex(from.skillindex());
    }
    if (from.has_caster_pos_x()) {
      set_caster_pos_x(from.caster_pos_x());
    }
    if (from.has_caster_pos_y()) {
      set_caster_pos_y(from.caster_pos_y());
    }
    if (from.has_target_pos_x()) {
      set_target_pos_x(from.target_pos_x());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_target_pos_y()) {
      set_target_pos_y(from.target_pos_y());
    }
    if (from.has_debug_skill_id()) {
      set_debug_skill_id(from.debug_skill_id());
    }
    if (from.has_clienttimems()) {
      set_clienttimems(from.clienttimems());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgSkillCastSkillC2GS::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgSkillCastSkillC2GS::CopyFrom(const MsgSkillCastSkillC2GS& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgSkillCastSkillC2GS::IsInitialized() const {

  return true;
}

void MsgSkillCastSkillC2GS::Swap(MsgSkillCastSkillC2GS* other) {
  if (other != this) {
    std::swap(serialid_, other->serialid_);
    std::swap(msgtype_, other->msgtype_);
    std::swap(weapon_uuid_, other->weapon_uuid_);
    std::swap(skillindex_, other->skillindex_);
    target_mapobjectids_.Swap(&other->target_mapobjectids_);
    std::swap(caster_pos_x_, other->caster_pos_x_);
    std::swap(caster_pos_y_, other->caster_pos_y_);
    std::swap(target_pos_x_, other->target_pos_x_);
    std::swap(target_pos_y_, other->target_pos_y_);
    std::swap(debug_skill_id_, other->debug_skill_id_);
    std::swap(clienttimems_, other->clienttimems_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgSkillCastSkillC2GS::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgSkillCastSkillC2GS_descriptor_;
  metadata.reflection = MsgSkillCastSkillC2GS_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgSkillCastSkillResultGS2C::kSerialIDFieldNumber;
const int MsgSkillCastSkillResultGS2C::kMsgTypeFieldNumber;
const int MsgSkillCastSkillResultGS2C::kResultFieldNumber;
const int MsgSkillCastSkillResultGS2C::kSkillidFieldNumber;
const int MsgSkillCastSkillResultGS2C::kIggidFieldNumber;
#endif  // !_MSC_VER

MsgSkillCastSkillResultGS2C::MsgSkillCastSkillResultGS2C()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.MsgSkillCastSkillResultGS2C)
}

void MsgSkillCastSkillResultGS2C::InitAsDefaultInstance() {
}

MsgSkillCastSkillResultGS2C::MsgSkillCastSkillResultGS2C(const MsgSkillCastSkillResultGS2C& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.MsgSkillCastSkillResultGS2C)
}

void MsgSkillCastSkillResultGS2C::SharedCtor() {
  _cached_size_ = 0;
  serialid_ = GOOGLE_LONGLONG(0);
  msgtype_ = 1251;
  result_ = 0;
  skillid_ = 0;
  iggid_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgSkillCastSkillResultGS2C::~MsgSkillCastSkillResultGS2C() {
  // @@protoc_insertion_point(destructor:MsgPB.MsgSkillCastSkillResultGS2C)
  SharedDtor();
}

void MsgSkillCastSkillResultGS2C::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgSkillCastSkillResultGS2C::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgSkillCastSkillResultGS2C::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgSkillCastSkillResultGS2C_descriptor_;
}

const MsgSkillCastSkillResultGS2C& MsgSkillCastSkillResultGS2C::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgSkill_2eproto();
  return *default_instance_;
}

MsgSkillCastSkillResultGS2C* MsgSkillCastSkillResultGS2C::default_instance_ = NULL;

MsgSkillCastSkillResultGS2C* MsgSkillCastSkillResultGS2C::New() const {
  return new MsgSkillCastSkillResultGS2C;
}

void MsgSkillCastSkillResultGS2C::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<MsgSkillCastSkillResultGS2C*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 31) {
    ZR_(result_, skillid_);
    serialid_ = GOOGLE_LONGLONG(0);
    msgtype_ = 1251;
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgSkillCastSkillResultGS2C::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.MsgSkillCastSkillResultGS2C)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 SerialID = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &serialid_)));
          set_has_serialid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_msgType;
        break;
      }

      // optional .MsgPB.EMsgType msgType = 2 [default = _MSG_SKILL_CAST_SKILL_RS_GS2C];
      case 2: {
        if (tag == 16) {
         parse_msgType:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::EMsgType_IsValid(value)) {
            set_msgtype(static_cast< ::MsgPB::EMsgType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_result;
        break;
      }

      // optional .MsgPB.ENUM_CASTSKILL_RESULT result = 3;
      case 3: {
        if (tag == 24) {
         parse_result:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::ENUM_CASTSKILL_RESULT_IsValid(value)) {
            set_result(static_cast< ::MsgPB::ENUM_CASTSKILL_RESULT >(value));
          } else {
            mutable_unknown_fields()->AddVarint(3, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_skillid;
        break;
      }

      // optional int32 skillid = 4;
      case 4: {
        if (tag == 32) {
         parse_skillid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &skillid_)));
          set_has_skillid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_iggid;
        break;
      }

      // optional int64 iggid = 5;
      case 5: {
        if (tag == 40) {
         parse_iggid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &iggid_)));
          set_has_iggid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.MsgSkillCastSkillResultGS2C)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.MsgSkillCastSkillResultGS2C)
  return false;
#undef DO_
}

void MsgSkillCastSkillResultGS2C::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.MsgSkillCastSkillResultGS2C)
  // optional int64 SerialID = 1;
  if (has_serialid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->serialid(), output);
  }

  // optional .MsgPB.EMsgType msgType = 2 [default = _MSG_SKILL_CAST_SKILL_RS_GS2C];
  if (has_msgtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->msgtype(), output);
  }

  // optional .MsgPB.ENUM_CASTSKILL_RESULT result = 3;
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->result(), output);
  }

  // optional int32 skillid = 4;
  if (has_skillid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->skillid(), output);
  }

  // optional int64 iggid = 5;
  if (has_iggid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(5, this->iggid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.MsgSkillCastSkillResultGS2C)
}

::google::protobuf::uint8* MsgSkillCastSkillResultGS2C::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.MsgSkillCastSkillResultGS2C)
  // optional int64 SerialID = 1;
  if (has_serialid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->serialid(), target);
  }

  // optional .MsgPB.EMsgType msgType = 2 [default = _MSG_SKILL_CAST_SKILL_RS_GS2C];
  if (has_msgtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->msgtype(), target);
  }

  // optional .MsgPB.ENUM_CASTSKILL_RESULT result = 3;
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->result(), target);
  }

  // optional int32 skillid = 4;
  if (has_skillid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->skillid(), target);
  }

  // optional int64 iggid = 5;
  if (has_iggid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(5, this->iggid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.MsgSkillCastSkillResultGS2C)
  return target;
}

int MsgSkillCastSkillResultGS2C::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 SerialID = 1;
    if (has_serialid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->serialid());
    }

    // optional .MsgPB.EMsgType msgType = 2 [default = _MSG_SKILL_CAST_SKILL_RS_GS2C];
    if (has_msgtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgtype());
    }

    // optional .MsgPB.ENUM_CASTSKILL_RESULT result = 3;
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->result());
    }

    // optional int32 skillid = 4;
    if (has_skillid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->skillid());
    }

    // optional int64 iggid = 5;
    if (has_iggid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->iggid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgSkillCastSkillResultGS2C::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgSkillCastSkillResultGS2C* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgSkillCastSkillResultGS2C*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgSkillCastSkillResultGS2C::MergeFrom(const MsgSkillCastSkillResultGS2C& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_serialid()) {
      set_serialid(from.serialid());
    }
    if (from.has_msgtype()) {
      set_msgtype(from.msgtype());
    }
    if (from.has_result()) {
      set_result(from.result());
    }
    if (from.has_skillid()) {
      set_skillid(from.skillid());
    }
    if (from.has_iggid()) {
      set_iggid(from.iggid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgSkillCastSkillResultGS2C::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgSkillCastSkillResultGS2C::CopyFrom(const MsgSkillCastSkillResultGS2C& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgSkillCastSkillResultGS2C::IsInitialized() const {

  return true;
}

void MsgSkillCastSkillResultGS2C::Swap(MsgSkillCastSkillResultGS2C* other) {
  if (other != this) {
    std::swap(serialid_, other->serialid_);
    std::swap(msgtype_, other->msgtype_);
    std::swap(result_, other->result_);
    std::swap(skillid_, other->skillid_);
    std::swap(iggid_, other->iggid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgSkillCastSkillResultGS2C::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgSkillCastSkillResultGS2C_descriptor_;
  metadata.reflection = MsgSkillCastSkillResultGS2C_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgSkillAddBuffGS2MS::kSerialIDFieldNumber;
const int MsgSkillAddBuffGS2MS::kMsgTypeFieldNumber;
const int MsgSkillAddBuffGS2MS::kIggidFieldNumber;
const int MsgSkillAddBuffGS2MS::kBuffidFieldNumber;
const int MsgSkillAddBuffGS2MS::kAttrRuntimeEffectRateFieldNumber;
const int MsgSkillAddBuffGS2MS::kTargetMapobjectidFieldNumber;
#endif  // !_MSC_VER

MsgSkillAddBuffGS2MS::MsgSkillAddBuffGS2MS()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.MsgSkillAddBuffGS2MS)
}

void MsgSkillAddBuffGS2MS::InitAsDefaultInstance() {
}

MsgSkillAddBuffGS2MS::MsgSkillAddBuffGS2MS(const MsgSkillAddBuffGS2MS& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.MsgSkillAddBuffGS2MS)
}

void MsgSkillAddBuffGS2MS::SharedCtor() {
  _cached_size_ = 0;
  serialid_ = GOOGLE_LONGLONG(0);
  msgtype_ = 1254;
  iggid_ = GOOGLE_LONGLONG(0);
  buffid_ = 0;
  attr_runtime_effect_rate_ = 0;
  target_mapobjectid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgSkillAddBuffGS2MS::~MsgSkillAddBuffGS2MS() {
  // @@protoc_insertion_point(destructor:MsgPB.MsgSkillAddBuffGS2MS)
  SharedDtor();
}

void MsgSkillAddBuffGS2MS::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgSkillAddBuffGS2MS::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgSkillAddBuffGS2MS::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgSkillAddBuffGS2MS_descriptor_;
}

const MsgSkillAddBuffGS2MS& MsgSkillAddBuffGS2MS::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgSkill_2eproto();
  return *default_instance_;
}

MsgSkillAddBuffGS2MS* MsgSkillAddBuffGS2MS::default_instance_ = NULL;

MsgSkillAddBuffGS2MS* MsgSkillAddBuffGS2MS::New() const {
  return new MsgSkillAddBuffGS2MS;
}

void MsgSkillAddBuffGS2MS::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<MsgSkillAddBuffGS2MS*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 63) {
    ZR_(serialid_, iggid_);
    ZR_(buffid_, target_mapobjectid_);
    msgtype_ = 1254;
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgSkillAddBuffGS2MS::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.MsgSkillAddBuffGS2MS)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 SerialID = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &serialid_)));
          set_has_serialid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_msgType;
        break;
      }

      // optional .MsgPB.EMsgType msgType = 2 [default = _MSG_SKILL_ADD_BUFF_GS2MS];
      case 2: {
        if (tag == 16) {
         parse_msgType:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::EMsgType_IsValid(value)) {
            set_msgtype(static_cast< ::MsgPB::EMsgType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_iggid;
        break;
      }

      // optional int64 iggid = 3;
      case 3: {
        if (tag == 24) {
         parse_iggid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &iggid_)));
          set_has_iggid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_buffid;
        break;
      }

      // optional int32 buffid = 4;
      case 4: {
        if (tag == 32) {
         parse_buffid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &buffid_)));
          set_has_buffid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_attr_runtime_effect_rate;
        break;
      }

      // optional int32 attr_runtime_effect_rate = 5;
      case 5: {
        if (tag == 40) {
         parse_attr_runtime_effect_rate:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &attr_runtime_effect_rate_)));
          set_has_attr_runtime_effect_rate();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_target_mapobjectid;
        break;
      }

      // optional int32 target_mapobjectid = 6;
      case 6: {
        if (tag == 48) {
         parse_target_mapobjectid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &target_mapobjectid_)));
          set_has_target_mapobjectid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.MsgSkillAddBuffGS2MS)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.MsgSkillAddBuffGS2MS)
  return false;
#undef DO_
}

void MsgSkillAddBuffGS2MS::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.MsgSkillAddBuffGS2MS)
  // optional int64 SerialID = 1;
  if (has_serialid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->serialid(), output);
  }

  // optional .MsgPB.EMsgType msgType = 2 [default = _MSG_SKILL_ADD_BUFF_GS2MS];
  if (has_msgtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->msgtype(), output);
  }

  // optional int64 iggid = 3;
  if (has_iggid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->iggid(), output);
  }

  // optional int32 buffid = 4;
  if (has_buffid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->buffid(), output);
  }

  // optional int32 attr_runtime_effect_rate = 5;
  if (has_attr_runtime_effect_rate()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->attr_runtime_effect_rate(), output);
  }

  // optional int32 target_mapobjectid = 6;
  if (has_target_mapobjectid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->target_mapobjectid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.MsgSkillAddBuffGS2MS)
}

::google::protobuf::uint8* MsgSkillAddBuffGS2MS::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.MsgSkillAddBuffGS2MS)
  // optional int64 SerialID = 1;
  if (has_serialid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->serialid(), target);
  }

  // optional .MsgPB.EMsgType msgType = 2 [default = _MSG_SKILL_ADD_BUFF_GS2MS];
  if (has_msgtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->msgtype(), target);
  }

  // optional int64 iggid = 3;
  if (has_iggid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->iggid(), target);
  }

  // optional int32 buffid = 4;
  if (has_buffid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->buffid(), target);
  }

  // optional int32 attr_runtime_effect_rate = 5;
  if (has_attr_runtime_effect_rate()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->attr_runtime_effect_rate(), target);
  }

  // optional int32 target_mapobjectid = 6;
  if (has_target_mapobjectid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->target_mapobjectid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.MsgSkillAddBuffGS2MS)
  return target;
}

int MsgSkillAddBuffGS2MS::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 SerialID = 1;
    if (has_serialid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->serialid());
    }

    // optional .MsgPB.EMsgType msgType = 2 [default = _MSG_SKILL_ADD_BUFF_GS2MS];
    if (has_msgtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgtype());
    }

    // optional int64 iggid = 3;
    if (has_iggid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->iggid());
    }

    // optional int32 buffid = 4;
    if (has_buffid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->buffid());
    }

    // optional int32 attr_runtime_effect_rate = 5;
    if (has_attr_runtime_effect_rate()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->attr_runtime_effect_rate());
    }

    // optional int32 target_mapobjectid = 6;
    if (has_target_mapobjectid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->target_mapobjectid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgSkillAddBuffGS2MS::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgSkillAddBuffGS2MS* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgSkillAddBuffGS2MS*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgSkillAddBuffGS2MS::MergeFrom(const MsgSkillAddBuffGS2MS& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_serialid()) {
      set_serialid(from.serialid());
    }
    if (from.has_msgtype()) {
      set_msgtype(from.msgtype());
    }
    if (from.has_iggid()) {
      set_iggid(from.iggid());
    }
    if (from.has_buffid()) {
      set_buffid(from.buffid());
    }
    if (from.has_attr_runtime_effect_rate()) {
      set_attr_runtime_effect_rate(from.attr_runtime_effect_rate());
    }
    if (from.has_target_mapobjectid()) {
      set_target_mapobjectid(from.target_mapobjectid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgSkillAddBuffGS2MS::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgSkillAddBuffGS2MS::CopyFrom(const MsgSkillAddBuffGS2MS& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgSkillAddBuffGS2MS::IsInitialized() const {

  return true;
}

void MsgSkillAddBuffGS2MS::Swap(MsgSkillAddBuffGS2MS* other) {
  if (other != this) {
    std::swap(serialid_, other->serialid_);
    std::swap(msgtype_, other->msgtype_);
    std::swap(iggid_, other->iggid_);
    std::swap(buffid_, other->buffid_);
    std::swap(attr_runtime_effect_rate_, other->attr_runtime_effect_rate_);
    std::swap(target_mapobjectid_, other->target_mapobjectid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgSkillAddBuffGS2MS::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgSkillAddBuffGS2MS_descriptor_;
  metadata.reflection = MsgSkillAddBuffGS2MS_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgSkillAddBuffResultMS2GS::kSerialIDFieldNumber;
const int MsgSkillAddBuffResultMS2GS::kMsgTypeFieldNumber;
const int MsgSkillAddBuffResultMS2GS::kIggidFieldNumber;
const int MsgSkillAddBuffResultMS2GS::kResultFieldNumber;
#endif  // !_MSC_VER

MsgSkillAddBuffResultMS2GS::MsgSkillAddBuffResultMS2GS()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.MsgSkillAddBuffResultMS2GS)
}

void MsgSkillAddBuffResultMS2GS::InitAsDefaultInstance() {
}

MsgSkillAddBuffResultMS2GS::MsgSkillAddBuffResultMS2GS(const MsgSkillAddBuffResultMS2GS& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.MsgSkillAddBuffResultMS2GS)
}

void MsgSkillAddBuffResultMS2GS::SharedCtor() {
  _cached_size_ = 0;
  serialid_ = GOOGLE_LONGLONG(0);
  msgtype_ = 1255;
  iggid_ = GOOGLE_LONGLONG(0);
  result_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgSkillAddBuffResultMS2GS::~MsgSkillAddBuffResultMS2GS() {
  // @@protoc_insertion_point(destructor:MsgPB.MsgSkillAddBuffResultMS2GS)
  SharedDtor();
}

void MsgSkillAddBuffResultMS2GS::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgSkillAddBuffResultMS2GS::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgSkillAddBuffResultMS2GS::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgSkillAddBuffResultMS2GS_descriptor_;
}

const MsgSkillAddBuffResultMS2GS& MsgSkillAddBuffResultMS2GS::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgSkill_2eproto();
  return *default_instance_;
}

MsgSkillAddBuffResultMS2GS* MsgSkillAddBuffResultMS2GS::default_instance_ = NULL;

MsgSkillAddBuffResultMS2GS* MsgSkillAddBuffResultMS2GS::New() const {
  return new MsgSkillAddBuffResultMS2GS;
}

void MsgSkillAddBuffResultMS2GS::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<MsgSkillAddBuffResultMS2GS*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 15) {
    ZR_(serialid_, iggid_);
    msgtype_ = 1255;
    result_ = 0;
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgSkillAddBuffResultMS2GS::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.MsgSkillAddBuffResultMS2GS)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 SerialID = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &serialid_)));
          set_has_serialid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_msgType;
        break;
      }

      // optional .MsgPB.EMsgType msgType = 2 [default = _MSG_SKILL_ADD_BUFF_RS_MS2GS];
      case 2: {
        if (tag == 16) {
         parse_msgType:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::EMsgType_IsValid(value)) {
            set_msgtype(static_cast< ::MsgPB::EMsgType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_iggid;
        break;
      }

      // optional int64 iggid = 3;
      case 3: {
        if (tag == 24) {
         parse_iggid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &iggid_)));
          set_has_iggid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_result;
        break;
      }

      // optional .MsgPB.ENUM_ADDBUFF_RESULT result = 4;
      case 4: {
        if (tag == 32) {
         parse_result:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::ENUM_ADDBUFF_RESULT_IsValid(value)) {
            set_result(static_cast< ::MsgPB::ENUM_ADDBUFF_RESULT >(value));
          } else {
            mutable_unknown_fields()->AddVarint(4, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.MsgSkillAddBuffResultMS2GS)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.MsgSkillAddBuffResultMS2GS)
  return false;
#undef DO_
}

void MsgSkillAddBuffResultMS2GS::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.MsgSkillAddBuffResultMS2GS)
  // optional int64 SerialID = 1;
  if (has_serialid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->serialid(), output);
  }

  // optional .MsgPB.EMsgType msgType = 2 [default = _MSG_SKILL_ADD_BUFF_RS_MS2GS];
  if (has_msgtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->msgtype(), output);
  }

  // optional int64 iggid = 3;
  if (has_iggid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->iggid(), output);
  }

  // optional .MsgPB.ENUM_ADDBUFF_RESULT result = 4;
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->result(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.MsgSkillAddBuffResultMS2GS)
}

::google::protobuf::uint8* MsgSkillAddBuffResultMS2GS::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.MsgSkillAddBuffResultMS2GS)
  // optional int64 SerialID = 1;
  if (has_serialid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->serialid(), target);
  }

  // optional .MsgPB.EMsgType msgType = 2 [default = _MSG_SKILL_ADD_BUFF_RS_MS2GS];
  if (has_msgtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->msgtype(), target);
  }

  // optional int64 iggid = 3;
  if (has_iggid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->iggid(), target);
  }

  // optional .MsgPB.ENUM_ADDBUFF_RESULT result = 4;
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->result(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.MsgSkillAddBuffResultMS2GS)
  return target;
}

int MsgSkillAddBuffResultMS2GS::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 SerialID = 1;
    if (has_serialid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->serialid());
    }

    // optional .MsgPB.EMsgType msgType = 2 [default = _MSG_SKILL_ADD_BUFF_RS_MS2GS];
    if (has_msgtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgtype());
    }

    // optional int64 iggid = 3;
    if (has_iggid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->iggid());
    }

    // optional .MsgPB.ENUM_ADDBUFF_RESULT result = 4;
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->result());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgSkillAddBuffResultMS2GS::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgSkillAddBuffResultMS2GS* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgSkillAddBuffResultMS2GS*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgSkillAddBuffResultMS2GS::MergeFrom(const MsgSkillAddBuffResultMS2GS& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_serialid()) {
      set_serialid(from.serialid());
    }
    if (from.has_msgtype()) {
      set_msgtype(from.msgtype());
    }
    if (from.has_iggid()) {
      set_iggid(from.iggid());
    }
    if (from.has_result()) {
      set_result(from.result());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgSkillAddBuffResultMS2GS::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgSkillAddBuffResultMS2GS::CopyFrom(const MsgSkillAddBuffResultMS2GS& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgSkillAddBuffResultMS2GS::IsInitialized() const {

  return true;
}

void MsgSkillAddBuffResultMS2GS::Swap(MsgSkillAddBuffResultMS2GS* other) {
  if (other != this) {
    std::swap(serialid_, other->serialid_);
    std::swap(msgtype_, other->msgtype_);
    std::swap(iggid_, other->iggid_);
    std::swap(result_, other->result_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgSkillAddBuffResultMS2GS::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgSkillAddBuffResultMS2GS_descriptor_;
  metadata.reflection = MsgSkillAddBuffResultMS2GS_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgSkillDelBuffGS2MS::kSerialIDFieldNumber;
const int MsgSkillDelBuffGS2MS::kMsgTypeFieldNumber;
const int MsgSkillDelBuffGS2MS::kIggidFieldNumber;
const int MsgSkillDelBuffGS2MS::kBuffidFieldNumber;
#endif  // !_MSC_VER

MsgSkillDelBuffGS2MS::MsgSkillDelBuffGS2MS()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.MsgSkillDelBuffGS2MS)
}

void MsgSkillDelBuffGS2MS::InitAsDefaultInstance() {
}

MsgSkillDelBuffGS2MS::MsgSkillDelBuffGS2MS(const MsgSkillDelBuffGS2MS& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.MsgSkillDelBuffGS2MS)
}

void MsgSkillDelBuffGS2MS::SharedCtor() {
  _cached_size_ = 0;
  serialid_ = GOOGLE_LONGLONG(0);
  msgtype_ = 1256;
  iggid_ = GOOGLE_LONGLONG(0);
  buffid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgSkillDelBuffGS2MS::~MsgSkillDelBuffGS2MS() {
  // @@protoc_insertion_point(destructor:MsgPB.MsgSkillDelBuffGS2MS)
  SharedDtor();
}

void MsgSkillDelBuffGS2MS::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgSkillDelBuffGS2MS::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgSkillDelBuffGS2MS::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgSkillDelBuffGS2MS_descriptor_;
}

const MsgSkillDelBuffGS2MS& MsgSkillDelBuffGS2MS::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgSkill_2eproto();
  return *default_instance_;
}

MsgSkillDelBuffGS2MS* MsgSkillDelBuffGS2MS::default_instance_ = NULL;

MsgSkillDelBuffGS2MS* MsgSkillDelBuffGS2MS::New() const {
  return new MsgSkillDelBuffGS2MS;
}

void MsgSkillDelBuffGS2MS::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<MsgSkillDelBuffGS2MS*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 15) {
    ZR_(serialid_, iggid_);
    msgtype_ = 1256;
    buffid_ = 0;
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgSkillDelBuffGS2MS::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.MsgSkillDelBuffGS2MS)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 SerialID = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &serialid_)));
          set_has_serialid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_msgType;
        break;
      }

      // optional .MsgPB.EMsgType msgType = 2 [default = _MSG_SKILL_DEL_BUFF_GS2MS];
      case 2: {
        if (tag == 16) {
         parse_msgType:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::EMsgType_IsValid(value)) {
            set_msgtype(static_cast< ::MsgPB::EMsgType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_iggid;
        break;
      }

      // optional int64 iggid = 3;
      case 3: {
        if (tag == 24) {
         parse_iggid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &iggid_)));
          set_has_iggid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_buffid;
        break;
      }

      // optional int32 buffid = 4;
      case 4: {
        if (tag == 32) {
         parse_buffid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &buffid_)));
          set_has_buffid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.MsgSkillDelBuffGS2MS)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.MsgSkillDelBuffGS2MS)
  return false;
#undef DO_
}

void MsgSkillDelBuffGS2MS::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.MsgSkillDelBuffGS2MS)
  // optional int64 SerialID = 1;
  if (has_serialid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->serialid(), output);
  }

  // optional .MsgPB.EMsgType msgType = 2 [default = _MSG_SKILL_DEL_BUFF_GS2MS];
  if (has_msgtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->msgtype(), output);
  }

  // optional int64 iggid = 3;
  if (has_iggid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->iggid(), output);
  }

  // optional int32 buffid = 4;
  if (has_buffid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->buffid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.MsgSkillDelBuffGS2MS)
}

::google::protobuf::uint8* MsgSkillDelBuffGS2MS::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.MsgSkillDelBuffGS2MS)
  // optional int64 SerialID = 1;
  if (has_serialid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->serialid(), target);
  }

  // optional .MsgPB.EMsgType msgType = 2 [default = _MSG_SKILL_DEL_BUFF_GS2MS];
  if (has_msgtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->msgtype(), target);
  }

  // optional int64 iggid = 3;
  if (has_iggid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->iggid(), target);
  }

  // optional int32 buffid = 4;
  if (has_buffid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->buffid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.MsgSkillDelBuffGS2MS)
  return target;
}

int MsgSkillDelBuffGS2MS::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 SerialID = 1;
    if (has_serialid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->serialid());
    }

    // optional .MsgPB.EMsgType msgType = 2 [default = _MSG_SKILL_DEL_BUFF_GS2MS];
    if (has_msgtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgtype());
    }

    // optional int64 iggid = 3;
    if (has_iggid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->iggid());
    }

    // optional int32 buffid = 4;
    if (has_buffid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->buffid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgSkillDelBuffGS2MS::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgSkillDelBuffGS2MS* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgSkillDelBuffGS2MS*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgSkillDelBuffGS2MS::MergeFrom(const MsgSkillDelBuffGS2MS& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_serialid()) {
      set_serialid(from.serialid());
    }
    if (from.has_msgtype()) {
      set_msgtype(from.msgtype());
    }
    if (from.has_iggid()) {
      set_iggid(from.iggid());
    }
    if (from.has_buffid()) {
      set_buffid(from.buffid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgSkillDelBuffGS2MS::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgSkillDelBuffGS2MS::CopyFrom(const MsgSkillDelBuffGS2MS& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgSkillDelBuffGS2MS::IsInitialized() const {

  return true;
}

void MsgSkillDelBuffGS2MS::Swap(MsgSkillDelBuffGS2MS* other) {
  if (other != this) {
    std::swap(serialid_, other->serialid_);
    std::swap(msgtype_, other->msgtype_);
    std::swap(iggid_, other->iggid_);
    std::swap(buffid_, other->buffid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgSkillDelBuffGS2MS::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgSkillDelBuffGS2MS_descriptor_;
  metadata.reflection = MsgSkillDelBuffGS2MS_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgSkillDelBuffResultMS2GS::kSerialIDFieldNumber;
const int MsgSkillDelBuffResultMS2GS::kMsgTypeFieldNumber;
const int MsgSkillDelBuffResultMS2GS::kIggidFieldNumber;
const int MsgSkillDelBuffResultMS2GS::kResultFieldNumber;
#endif  // !_MSC_VER

MsgSkillDelBuffResultMS2GS::MsgSkillDelBuffResultMS2GS()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.MsgSkillDelBuffResultMS2GS)
}

void MsgSkillDelBuffResultMS2GS::InitAsDefaultInstance() {
}

MsgSkillDelBuffResultMS2GS::MsgSkillDelBuffResultMS2GS(const MsgSkillDelBuffResultMS2GS& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.MsgSkillDelBuffResultMS2GS)
}

void MsgSkillDelBuffResultMS2GS::SharedCtor() {
  _cached_size_ = 0;
  serialid_ = GOOGLE_LONGLONG(0);
  msgtype_ = 1257;
  iggid_ = GOOGLE_LONGLONG(0);
  result_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgSkillDelBuffResultMS2GS::~MsgSkillDelBuffResultMS2GS() {
  // @@protoc_insertion_point(destructor:MsgPB.MsgSkillDelBuffResultMS2GS)
  SharedDtor();
}

void MsgSkillDelBuffResultMS2GS::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgSkillDelBuffResultMS2GS::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgSkillDelBuffResultMS2GS::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgSkillDelBuffResultMS2GS_descriptor_;
}

const MsgSkillDelBuffResultMS2GS& MsgSkillDelBuffResultMS2GS::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgSkill_2eproto();
  return *default_instance_;
}

MsgSkillDelBuffResultMS2GS* MsgSkillDelBuffResultMS2GS::default_instance_ = NULL;

MsgSkillDelBuffResultMS2GS* MsgSkillDelBuffResultMS2GS::New() const {
  return new MsgSkillDelBuffResultMS2GS;
}

void MsgSkillDelBuffResultMS2GS::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<MsgSkillDelBuffResultMS2GS*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 15) {
    ZR_(serialid_, iggid_);
    msgtype_ = 1257;
    result_ = 0;
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgSkillDelBuffResultMS2GS::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.MsgSkillDelBuffResultMS2GS)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 SerialID = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &serialid_)));
          set_has_serialid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_msgType;
        break;
      }

      // optional .MsgPB.EMsgType msgType = 2 [default = _MSG_SKILL_DEL_BUFF_RS_MS2GS];
      case 2: {
        if (tag == 16) {
         parse_msgType:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::EMsgType_IsValid(value)) {
            set_msgtype(static_cast< ::MsgPB::EMsgType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_iggid;
        break;
      }

      // optional int64 iggid = 3;
      case 3: {
        if (tag == 24) {
         parse_iggid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &iggid_)));
          set_has_iggid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_result;
        break;
      }

      // optional .MsgPB.ENUM_DELBUFF_RESULT result = 4;
      case 4: {
        if (tag == 32) {
         parse_result:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::ENUM_DELBUFF_RESULT_IsValid(value)) {
            set_result(static_cast< ::MsgPB::ENUM_DELBUFF_RESULT >(value));
          } else {
            mutable_unknown_fields()->AddVarint(4, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.MsgSkillDelBuffResultMS2GS)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.MsgSkillDelBuffResultMS2GS)
  return false;
#undef DO_
}

void MsgSkillDelBuffResultMS2GS::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.MsgSkillDelBuffResultMS2GS)
  // optional int64 SerialID = 1;
  if (has_serialid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->serialid(), output);
  }

  // optional .MsgPB.EMsgType msgType = 2 [default = _MSG_SKILL_DEL_BUFF_RS_MS2GS];
  if (has_msgtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->msgtype(), output);
  }

  // optional int64 iggid = 3;
  if (has_iggid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->iggid(), output);
  }

  // optional .MsgPB.ENUM_DELBUFF_RESULT result = 4;
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->result(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.MsgSkillDelBuffResultMS2GS)
}

::google::protobuf::uint8* MsgSkillDelBuffResultMS2GS::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.MsgSkillDelBuffResultMS2GS)
  // optional int64 SerialID = 1;
  if (has_serialid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->serialid(), target);
  }

  // optional .MsgPB.EMsgType msgType = 2 [default = _MSG_SKILL_DEL_BUFF_RS_MS2GS];
  if (has_msgtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->msgtype(), target);
  }

  // optional int64 iggid = 3;
  if (has_iggid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->iggid(), target);
  }

  // optional .MsgPB.ENUM_DELBUFF_RESULT result = 4;
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->result(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.MsgSkillDelBuffResultMS2GS)
  return target;
}

int MsgSkillDelBuffResultMS2GS::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 SerialID = 1;
    if (has_serialid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->serialid());
    }

    // optional .MsgPB.EMsgType msgType = 2 [default = _MSG_SKILL_DEL_BUFF_RS_MS2GS];
    if (has_msgtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgtype());
    }

    // optional int64 iggid = 3;
    if (has_iggid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->iggid());
    }

    // optional .MsgPB.ENUM_DELBUFF_RESULT result = 4;
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->result());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgSkillDelBuffResultMS2GS::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgSkillDelBuffResultMS2GS* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgSkillDelBuffResultMS2GS*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgSkillDelBuffResultMS2GS::MergeFrom(const MsgSkillDelBuffResultMS2GS& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_serialid()) {
      set_serialid(from.serialid());
    }
    if (from.has_msgtype()) {
      set_msgtype(from.msgtype());
    }
    if (from.has_iggid()) {
      set_iggid(from.iggid());
    }
    if (from.has_result()) {
      set_result(from.result());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgSkillDelBuffResultMS2GS::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgSkillDelBuffResultMS2GS::CopyFrom(const MsgSkillDelBuffResultMS2GS& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgSkillDelBuffResultMS2GS::IsInitialized() const {

  return true;
}

void MsgSkillDelBuffResultMS2GS::Swap(MsgSkillDelBuffResultMS2GS* other) {
  if (other != this) {
    std::swap(serialid_, other->serialid_);
    std::swap(msgtype_, other->msgtype_);
    std::swap(iggid_, other->iggid_);
    std::swap(result_, other->result_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgSkillDelBuffResultMS2GS::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgSkillDelBuffResultMS2GS_descriptor_;
  metadata.reflection = MsgSkillDelBuffResultMS2GS_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgSkillMapObjCastSkillMS2C::kSerialIDFieldNumber;
const int MsgSkillMapObjCastSkillMS2C::kMsgTypeFieldNumber;
const int MsgSkillMapObjCastSkillMS2C::kIggidFieldNumber;
const int MsgSkillMapObjCastSkillMS2C::kCasterMapobjectidFieldNumber;
const int MsgSkillMapObjCastSkillMS2C::kTargetMapobjectidsFieldNumber;
const int MsgSkillMapObjCastSkillMS2C::kSkillIdFieldNumber;
const int MsgSkillMapObjCastSkillMS2C::kTargetPosXFieldNumber;
const int MsgSkillMapObjCastSkillMS2C::kTargetPosYFieldNumber;
const int MsgSkillMapObjCastSkillMS2C::kCasterPosXFieldNumber;
const int MsgSkillMapObjCastSkillMS2C::kCasterPosYFieldNumber;
const int MsgSkillMapObjCastSkillMS2C::kMagicballMapobjIdFieldNumber;
#endif  // !_MSC_VER

MsgSkillMapObjCastSkillMS2C::MsgSkillMapObjCastSkillMS2C()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.MsgSkillMapObjCastSkillMS2C)
}

void MsgSkillMapObjCastSkillMS2C::InitAsDefaultInstance() {
}

MsgSkillMapObjCastSkillMS2C::MsgSkillMapObjCastSkillMS2C(const MsgSkillMapObjCastSkillMS2C& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.MsgSkillMapObjCastSkillMS2C)
}

void MsgSkillMapObjCastSkillMS2C::SharedCtor() {
  _cached_size_ = 0;
  serialid_ = GOOGLE_LONGLONG(0);
  msgtype_ = 1260;
  iggid_ = GOOGLE_LONGLONG(0);
  caster_mapobjectid_ = 0;
  skill_id_ = 0;
  target_pos_x_ = GOOGLE_LONGLONG(0);
  target_pos_y_ = GOOGLE_LONGLONG(0);
  caster_pos_x_ = GOOGLE_LONGLONG(0);
  caster_pos_y_ = GOOGLE_LONGLONG(0);
  magicball_mapobj_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgSkillMapObjCastSkillMS2C::~MsgSkillMapObjCastSkillMS2C() {
  // @@protoc_insertion_point(destructor:MsgPB.MsgSkillMapObjCastSkillMS2C)
  SharedDtor();
}

void MsgSkillMapObjCastSkillMS2C::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgSkillMapObjCastSkillMS2C::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgSkillMapObjCastSkillMS2C::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgSkillMapObjCastSkillMS2C_descriptor_;
}

const MsgSkillMapObjCastSkillMS2C& MsgSkillMapObjCastSkillMS2C::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgSkill_2eproto();
  return *default_instance_;
}

MsgSkillMapObjCastSkillMS2C* MsgSkillMapObjCastSkillMS2C::default_instance_ = NULL;

MsgSkillMapObjCastSkillMS2C* MsgSkillMapObjCastSkillMS2C::New() const {
  return new MsgSkillMapObjCastSkillMS2C;
}

void MsgSkillMapObjCastSkillMS2C::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<MsgSkillMapObjCastSkillMS2C*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 239) {
    ZR_(serialid_, iggid_);
    ZR_(target_pos_x_, skill_id_);
    msgtype_ = 1260;
    caster_mapobjectid_ = 0;
  }
  ZR_(magicball_mapobj_id_, caster_pos_y_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  target_mapobjectids_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgSkillMapObjCastSkillMS2C::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.MsgSkillMapObjCastSkillMS2C)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 SerialID = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &serialid_)));
          set_has_serialid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_msgType;
        break;
      }

      // optional .MsgPB.EMsgType msgType = 2 [default = _MSG_SKILL_MAPOBJ_CAST_SKILL_MS2C];
      case 2: {
        if (tag == 16) {
         parse_msgType:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::EMsgType_IsValid(value)) {
            set_msgtype(static_cast< ::MsgPB::EMsgType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_iggid;
        break;
      }

      // optional int64 iggid = 3;
      case 3: {
        if (tag == 24) {
         parse_iggid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &iggid_)));
          set_has_iggid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_caster_mapobjectid;
        break;
      }

      // optional int32 caster_mapobjectid = 4;
      case 4: {
        if (tag == 32) {
         parse_caster_mapobjectid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &caster_mapobjectid_)));
          set_has_caster_mapobjectid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_target_mapobjectids;
        break;
      }

      // repeated int32 target_mapobjectids = 5;
      case 5: {
        if (tag == 40) {
         parse_target_mapobjectids:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 40, input, this->mutable_target_mapobjectids())));
        } else if (tag == 42) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_target_mapobjectids())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_target_mapobjectids;
        if (input->ExpectTag(48)) goto parse_skill_id;
        break;
      }

      // optional int32 skill_id = 6;
      case 6: {
        if (tag == 48) {
         parse_skill_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &skill_id_)));
          set_has_skill_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_target_pos_x;
        break;
      }

      // optional int64 target_pos_x = 7;
      case 7: {
        if (tag == 56) {
         parse_target_pos_x:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &target_pos_x_)));
          set_has_target_pos_x();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_target_pos_y;
        break;
      }

      // optional int64 target_pos_y = 8;
      case 8: {
        if (tag == 64) {
         parse_target_pos_y:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &target_pos_y_)));
          set_has_target_pos_y();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_caster_pos_x;
        break;
      }

      // optional int64 caster_pos_x = 9;
      case 9: {
        if (tag == 72) {
         parse_caster_pos_x:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &caster_pos_x_)));
          set_has_caster_pos_x();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(80)) goto parse_caster_pos_y;
        break;
      }

      // optional int64 caster_pos_y = 10;
      case 10: {
        if (tag == 80) {
         parse_caster_pos_y:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &caster_pos_y_)));
          set_has_caster_pos_y();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(88)) goto parse_magicball_mapobj_id;
        break;
      }

      // optional int32 magicball_mapobj_id = 11;
      case 11: {
        if (tag == 88) {
         parse_magicball_mapobj_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &magicball_mapobj_id_)));
          set_has_magicball_mapobj_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.MsgSkillMapObjCastSkillMS2C)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.MsgSkillMapObjCastSkillMS2C)
  return false;
#undef DO_
}

void MsgSkillMapObjCastSkillMS2C::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.MsgSkillMapObjCastSkillMS2C)
  // optional int64 SerialID = 1;
  if (has_serialid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->serialid(), output);
  }

  // optional .MsgPB.EMsgType msgType = 2 [default = _MSG_SKILL_MAPOBJ_CAST_SKILL_MS2C];
  if (has_msgtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->msgtype(), output);
  }

  // optional int64 iggid = 3;
  if (has_iggid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->iggid(), output);
  }

  // optional int32 caster_mapobjectid = 4;
  if (has_caster_mapobjectid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->caster_mapobjectid(), output);
  }

  // repeated int32 target_mapobjectids = 5;
  for (int i = 0; i < this->target_mapobjectids_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      5, this->target_mapobjectids(i), output);
  }

  // optional int32 skill_id = 6;
  if (has_skill_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->skill_id(), output);
  }

  // optional int64 target_pos_x = 7;
  if (has_target_pos_x()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(7, this->target_pos_x(), output);
  }

  // optional int64 target_pos_y = 8;
  if (has_target_pos_y()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(8, this->target_pos_y(), output);
  }

  // optional int64 caster_pos_x = 9;
  if (has_caster_pos_x()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(9, this->caster_pos_x(), output);
  }

  // optional int64 caster_pos_y = 10;
  if (has_caster_pos_y()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(10, this->caster_pos_y(), output);
  }

  // optional int32 magicball_mapobj_id = 11;
  if (has_magicball_mapobj_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->magicball_mapobj_id(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.MsgSkillMapObjCastSkillMS2C)
}

::google::protobuf::uint8* MsgSkillMapObjCastSkillMS2C::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.MsgSkillMapObjCastSkillMS2C)
  // optional int64 SerialID = 1;
  if (has_serialid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->serialid(), target);
  }

  // optional .MsgPB.EMsgType msgType = 2 [default = _MSG_SKILL_MAPOBJ_CAST_SKILL_MS2C];
  if (has_msgtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->msgtype(), target);
  }

  // optional int64 iggid = 3;
  if (has_iggid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->iggid(), target);
  }

  // optional int32 caster_mapobjectid = 4;
  if (has_caster_mapobjectid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->caster_mapobjectid(), target);
  }

  // repeated int32 target_mapobjectids = 5;
  for (int i = 0; i < this->target_mapobjectids_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(5, this->target_mapobjectids(i), target);
  }

  // optional int32 skill_id = 6;
  if (has_skill_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->skill_id(), target);
  }

  // optional int64 target_pos_x = 7;
  if (has_target_pos_x()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(7, this->target_pos_x(), target);
  }

  // optional int64 target_pos_y = 8;
  if (has_target_pos_y()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(8, this->target_pos_y(), target);
  }

  // optional int64 caster_pos_x = 9;
  if (has_caster_pos_x()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(9, this->caster_pos_x(), target);
  }

  // optional int64 caster_pos_y = 10;
  if (has_caster_pos_y()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(10, this->caster_pos_y(), target);
  }

  // optional int32 magicball_mapobj_id = 11;
  if (has_magicball_mapobj_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->magicball_mapobj_id(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.MsgSkillMapObjCastSkillMS2C)
  return target;
}

int MsgSkillMapObjCastSkillMS2C::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 SerialID = 1;
    if (has_serialid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->serialid());
    }

    // optional .MsgPB.EMsgType msgType = 2 [default = _MSG_SKILL_MAPOBJ_CAST_SKILL_MS2C];
    if (has_msgtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgtype());
    }

    // optional int64 iggid = 3;
    if (has_iggid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->iggid());
    }

    // optional int32 caster_mapobjectid = 4;
    if (has_caster_mapobjectid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->caster_mapobjectid());
    }

    // optional int32 skill_id = 6;
    if (has_skill_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->skill_id());
    }

    // optional int64 target_pos_x = 7;
    if (has_target_pos_x()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->target_pos_x());
    }

    // optional int64 target_pos_y = 8;
    if (has_target_pos_y()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->target_pos_y());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional int64 caster_pos_x = 9;
    if (has_caster_pos_x()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->caster_pos_x());
    }

    // optional int64 caster_pos_y = 10;
    if (has_caster_pos_y()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->caster_pos_y());
    }

    // optional int32 magicball_mapobj_id = 11;
    if (has_magicball_mapobj_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->magicball_mapobj_id());
    }

  }
  // repeated int32 target_mapobjectids = 5;
  {
    int data_size = 0;
    for (int i = 0; i < this->target_mapobjectids_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->target_mapobjectids(i));
    }
    total_size += 1 * this->target_mapobjectids_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgSkillMapObjCastSkillMS2C::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgSkillMapObjCastSkillMS2C* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgSkillMapObjCastSkillMS2C*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgSkillMapObjCastSkillMS2C::MergeFrom(const MsgSkillMapObjCastSkillMS2C& from) {
  GOOGLE_CHECK_NE(&from, this);
  target_mapobjectids_.MergeFrom(from.target_mapobjectids_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_serialid()) {
      set_serialid(from.serialid());
    }
    if (from.has_msgtype()) {
      set_msgtype(from.msgtype());
    }
    if (from.has_iggid()) {
      set_iggid(from.iggid());
    }
    if (from.has_caster_mapobjectid()) {
      set_caster_mapobjectid(from.caster_mapobjectid());
    }
    if (from.has_skill_id()) {
      set_skill_id(from.skill_id());
    }
    if (from.has_target_pos_x()) {
      set_target_pos_x(from.target_pos_x());
    }
    if (from.has_target_pos_y()) {
      set_target_pos_y(from.target_pos_y());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_caster_pos_x()) {
      set_caster_pos_x(from.caster_pos_x());
    }
    if (from.has_caster_pos_y()) {
      set_caster_pos_y(from.caster_pos_y());
    }
    if (from.has_magicball_mapobj_id()) {
      set_magicball_mapobj_id(from.magicball_mapobj_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgSkillMapObjCastSkillMS2C::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgSkillMapObjCastSkillMS2C::CopyFrom(const MsgSkillMapObjCastSkillMS2C& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgSkillMapObjCastSkillMS2C::IsInitialized() const {

  return true;
}

void MsgSkillMapObjCastSkillMS2C::Swap(MsgSkillMapObjCastSkillMS2C* other) {
  if (other != this) {
    std::swap(serialid_, other->serialid_);
    std::swap(msgtype_, other->msgtype_);
    std::swap(iggid_, other->iggid_);
    std::swap(caster_mapobjectid_, other->caster_mapobjectid_);
    target_mapobjectids_.Swap(&other->target_mapobjectids_);
    std::swap(skill_id_, other->skill_id_);
    std::swap(target_pos_x_, other->target_pos_x_);
    std::swap(target_pos_y_, other->target_pos_y_);
    std::swap(caster_pos_x_, other->caster_pos_x_);
    std::swap(caster_pos_y_, other->caster_pos_y_);
    std::swap(magicball_mapobj_id_, other->magicball_mapobj_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgSkillMapObjCastSkillMS2C::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgSkillMapObjCastSkillMS2C_descriptor_;
  metadata.reflection = MsgSkillMapObjCastSkillMS2C_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgSkillEffectDmgMS2C::kSerialIDFieldNumber;
const int MsgSkillEffectDmgMS2C::kMsgTypeFieldNumber;
const int MsgSkillEffectDmgMS2C::kIggidFieldNumber;
const int MsgSkillEffectDmgMS2C::kCasterMapobjectidFieldNumber;
const int MsgSkillEffectDmgMS2C::kTargetMapobjectidFieldNumber;
const int MsgSkillEffectDmgMS2C::kSkillIdFieldNumber;
const int MsgSkillEffectDmgMS2C::kDmgValFieldNumber;
const int MsgSkillEffectDmgMS2C::kCriticlFieldNumber;
const int MsgSkillEffectDmgMS2C::kCurrhpFieldNumber;
const int MsgSkillEffectDmgMS2C::kTargetSkillFieldNumber;
const int MsgSkillEffectDmgMS2C::kMpDmgValFieldNumber;
const int MsgSkillEffectDmgMS2C::kDurabilityFieldNumber;
#endif  // !_MSC_VER

MsgSkillEffectDmgMS2C::MsgSkillEffectDmgMS2C()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.MsgSkillEffectDmgMS2C)
}

void MsgSkillEffectDmgMS2C::InitAsDefaultInstance() {
}

MsgSkillEffectDmgMS2C::MsgSkillEffectDmgMS2C(const MsgSkillEffectDmgMS2C& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.MsgSkillEffectDmgMS2C)
}

void MsgSkillEffectDmgMS2C::SharedCtor() {
  _cached_size_ = 0;
  serialid_ = GOOGLE_LONGLONG(0);
  msgtype_ = 1270;
  iggid_ = GOOGLE_LONGLONG(0);
  caster_mapobjectid_ = 0;
  target_mapobjectid_ = 0;
  skill_id_ = 0;
  dmg_val_ = 0;
  criticl_ = false;
  currhp_ = 0;
  target_skill_ = 0;
  mp_dmg_val_ = 0;
  durability_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgSkillEffectDmgMS2C::~MsgSkillEffectDmgMS2C() {
  // @@protoc_insertion_point(destructor:MsgPB.MsgSkillEffectDmgMS2C)
  SharedDtor();
}

void MsgSkillEffectDmgMS2C::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgSkillEffectDmgMS2C::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgSkillEffectDmgMS2C::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgSkillEffectDmgMS2C_descriptor_;
}

const MsgSkillEffectDmgMS2C& MsgSkillEffectDmgMS2C::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgSkill_2eproto();
  return *default_instance_;
}

MsgSkillEffectDmgMS2C* MsgSkillEffectDmgMS2C::default_instance_ = NULL;

MsgSkillEffectDmgMS2C* MsgSkillEffectDmgMS2C::New() const {
  return new MsgSkillEffectDmgMS2C;
}

void MsgSkillEffectDmgMS2C::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<MsgSkillEffectDmgMS2C*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 255) {
    ZR_(serialid_, iggid_);
    ZR_(caster_mapobjectid_, criticl_);
    msgtype_ = 1270;
  }
  ZR_(currhp_, durability_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgSkillEffectDmgMS2C::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.MsgSkillEffectDmgMS2C)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 SerialID = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &serialid_)));
          set_has_serialid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_msgType;
        break;
      }

      // optional .MsgPB.EMsgType msgType = 2 [default = _MSG_SKILL_EFFECT_Dmg_MS2C];
      case 2: {
        if (tag == 16) {
         parse_msgType:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::EMsgType_IsValid(value)) {
            set_msgtype(static_cast< ::MsgPB::EMsgType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_iggid;
        break;
      }

      // optional int64 iggid = 3;
      case 3: {
        if (tag == 24) {
         parse_iggid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &iggid_)));
          set_has_iggid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_caster_mapobjectid;
        break;
      }

      // optional int32 caster_mapobjectid = 4;
      case 4: {
        if (tag == 32) {
         parse_caster_mapobjectid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &caster_mapobjectid_)));
          set_has_caster_mapobjectid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_target_mapobjectid;
        break;
      }

      // optional int32 target_mapobjectid = 5;
      case 5: {
        if (tag == 40) {
         parse_target_mapobjectid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &target_mapobjectid_)));
          set_has_target_mapobjectid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_skill_id;
        break;
      }

      // optional int32 skill_id = 6;
      case 6: {
        if (tag == 48) {
         parse_skill_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &skill_id_)));
          set_has_skill_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_dmg_val;
        break;
      }

      // optional int32 dmg_val = 7;
      case 7: {
        if (tag == 56) {
         parse_dmg_val:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &dmg_val_)));
          set_has_dmg_val();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_criticl;
        break;
      }

      // optional bool criticl = 8;
      case 8: {
        if (tag == 64) {
         parse_criticl:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &criticl_)));
          set_has_criticl();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_currhp;
        break;
      }

      // optional int32 currhp = 9;
      case 9: {
        if (tag == 72) {
         parse_currhp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &currhp_)));
          set_has_currhp();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(80)) goto parse_target_skill;
        break;
      }

      // optional int32 target_skill = 10;
      case 10: {
        if (tag == 80) {
         parse_target_skill:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &target_skill_)));
          set_has_target_skill();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(88)) goto parse_mp_dmg_val;
        break;
      }

      // optional int32 mp_dmg_val = 11;
      case 11: {
        if (tag == 88) {
         parse_mp_dmg_val:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &mp_dmg_val_)));
          set_has_mp_dmg_val();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(96)) goto parse_durability;
        break;
      }

      // optional int32 durability = 12;
      case 12: {
        if (tag == 96) {
         parse_durability:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &durability_)));
          set_has_durability();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.MsgSkillEffectDmgMS2C)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.MsgSkillEffectDmgMS2C)
  return false;
#undef DO_
}

void MsgSkillEffectDmgMS2C::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.MsgSkillEffectDmgMS2C)
  // optional int64 SerialID = 1;
  if (has_serialid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->serialid(), output);
  }

  // optional .MsgPB.EMsgType msgType = 2 [default = _MSG_SKILL_EFFECT_Dmg_MS2C];
  if (has_msgtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->msgtype(), output);
  }

  // optional int64 iggid = 3;
  if (has_iggid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->iggid(), output);
  }

  // optional int32 caster_mapobjectid = 4;
  if (has_caster_mapobjectid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->caster_mapobjectid(), output);
  }

  // optional int32 target_mapobjectid = 5;
  if (has_target_mapobjectid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->target_mapobjectid(), output);
  }

  // optional int32 skill_id = 6;
  if (has_skill_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->skill_id(), output);
  }

  // optional int32 dmg_val = 7;
  if (has_dmg_val()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->dmg_val(), output);
  }

  // optional bool criticl = 8;
  if (has_criticl()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(8, this->criticl(), output);
  }

  // optional int32 currhp = 9;
  if (has_currhp()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->currhp(), output);
  }

  // optional int32 target_skill = 10;
  if (has_target_skill()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->target_skill(), output);
  }

  // optional int32 mp_dmg_val = 11;
  if (has_mp_dmg_val()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->mp_dmg_val(), output);
  }

  // optional int32 durability = 12;
  if (has_durability()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(12, this->durability(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.MsgSkillEffectDmgMS2C)
}

::google::protobuf::uint8* MsgSkillEffectDmgMS2C::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.MsgSkillEffectDmgMS2C)
  // optional int64 SerialID = 1;
  if (has_serialid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->serialid(), target);
  }

  // optional .MsgPB.EMsgType msgType = 2 [default = _MSG_SKILL_EFFECT_Dmg_MS2C];
  if (has_msgtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->msgtype(), target);
  }

  // optional int64 iggid = 3;
  if (has_iggid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->iggid(), target);
  }

  // optional int32 caster_mapobjectid = 4;
  if (has_caster_mapobjectid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->caster_mapobjectid(), target);
  }

  // optional int32 target_mapobjectid = 5;
  if (has_target_mapobjectid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->target_mapobjectid(), target);
  }

  // optional int32 skill_id = 6;
  if (has_skill_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->skill_id(), target);
  }

  // optional int32 dmg_val = 7;
  if (has_dmg_val()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->dmg_val(), target);
  }

  // optional bool criticl = 8;
  if (has_criticl()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(8, this->criticl(), target);
  }

  // optional int32 currhp = 9;
  if (has_currhp()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->currhp(), target);
  }

  // optional int32 target_skill = 10;
  if (has_target_skill()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->target_skill(), target);
  }

  // optional int32 mp_dmg_val = 11;
  if (has_mp_dmg_val()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->mp_dmg_val(), target);
  }

  // optional int32 durability = 12;
  if (has_durability()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(12, this->durability(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.MsgSkillEffectDmgMS2C)
  return target;
}

int MsgSkillEffectDmgMS2C::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 SerialID = 1;
    if (has_serialid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->serialid());
    }

    // optional .MsgPB.EMsgType msgType = 2 [default = _MSG_SKILL_EFFECT_Dmg_MS2C];
    if (has_msgtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgtype());
    }

    // optional int64 iggid = 3;
    if (has_iggid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->iggid());
    }

    // optional int32 caster_mapobjectid = 4;
    if (has_caster_mapobjectid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->caster_mapobjectid());
    }

    // optional int32 target_mapobjectid = 5;
    if (has_target_mapobjectid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->target_mapobjectid());
    }

    // optional int32 skill_id = 6;
    if (has_skill_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->skill_id());
    }

    // optional int32 dmg_val = 7;
    if (has_dmg_val()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->dmg_val());
    }

    // optional bool criticl = 8;
    if (has_criticl()) {
      total_size += 1 + 1;
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional int32 currhp = 9;
    if (has_currhp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->currhp());
    }

    // optional int32 target_skill = 10;
    if (has_target_skill()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->target_skill());
    }

    // optional int32 mp_dmg_val = 11;
    if (has_mp_dmg_val()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->mp_dmg_val());
    }

    // optional int32 durability = 12;
    if (has_durability()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->durability());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgSkillEffectDmgMS2C::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgSkillEffectDmgMS2C* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgSkillEffectDmgMS2C*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgSkillEffectDmgMS2C::MergeFrom(const MsgSkillEffectDmgMS2C& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_serialid()) {
      set_serialid(from.serialid());
    }
    if (from.has_msgtype()) {
      set_msgtype(from.msgtype());
    }
    if (from.has_iggid()) {
      set_iggid(from.iggid());
    }
    if (from.has_caster_mapobjectid()) {
      set_caster_mapobjectid(from.caster_mapobjectid());
    }
    if (from.has_target_mapobjectid()) {
      set_target_mapobjectid(from.target_mapobjectid());
    }
    if (from.has_skill_id()) {
      set_skill_id(from.skill_id());
    }
    if (from.has_dmg_val()) {
      set_dmg_val(from.dmg_val());
    }
    if (from.has_criticl()) {
      set_criticl(from.criticl());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_currhp()) {
      set_currhp(from.currhp());
    }
    if (from.has_target_skill()) {
      set_target_skill(from.target_skill());
    }
    if (from.has_mp_dmg_val()) {
      set_mp_dmg_val(from.mp_dmg_val());
    }
    if (from.has_durability()) {
      set_durability(from.durability());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgSkillEffectDmgMS2C::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgSkillEffectDmgMS2C::CopyFrom(const MsgSkillEffectDmgMS2C& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgSkillEffectDmgMS2C::IsInitialized() const {

  return true;
}

void MsgSkillEffectDmgMS2C::Swap(MsgSkillEffectDmgMS2C* other) {
  if (other != this) {
    std::swap(serialid_, other->serialid_);
    std::swap(msgtype_, other->msgtype_);
    std::swap(iggid_, other->iggid_);
    std::swap(caster_mapobjectid_, other->caster_mapobjectid_);
    std::swap(target_mapobjectid_, other->target_mapobjectid_);
    std::swap(skill_id_, other->skill_id_);
    std::swap(dmg_val_, other->dmg_val_);
    std::swap(criticl_, other->criticl_);
    std::swap(currhp_, other->currhp_);
    std::swap(target_skill_, other->target_skill_);
    std::swap(mp_dmg_val_, other->mp_dmg_val_);
    std::swap(durability_, other->durability_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgSkillEffectDmgMS2C::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgSkillEffectDmgMS2C_descriptor_;
  metadata.reflection = MsgSkillEffectDmgMS2C_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgPassiveSkillEffectDmgMS2C::kSerialIDFieldNumber;
const int MsgPassiveSkillEffectDmgMS2C::kMsgTypeFieldNumber;
const int MsgPassiveSkillEffectDmgMS2C::kIggidFieldNumber;
const int MsgPassiveSkillEffectDmgMS2C::kCasterMapobjectidFieldNumber;
const int MsgPassiveSkillEffectDmgMS2C::kTargetMapobjectidFieldNumber;
const int MsgPassiveSkillEffectDmgMS2C::kSkillIdFieldNumber;
const int MsgPassiveSkillEffectDmgMS2C::kDmgValFieldNumber;
const int MsgPassiveSkillEffectDmgMS2C::kCriticlFieldNumber;
const int MsgPassiveSkillEffectDmgMS2C::kCurrhpFieldNumber;
const int MsgPassiveSkillEffectDmgMS2C::kTargetSkillFieldNumber;
const int MsgPassiveSkillEffectDmgMS2C::kMpDmgValFieldNumber;
const int MsgPassiveSkillEffectDmgMS2C::kDurabilityFieldNumber;
#endif  // !_MSC_VER

MsgPassiveSkillEffectDmgMS2C::MsgPassiveSkillEffectDmgMS2C()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.MsgPassiveSkillEffectDmgMS2C)
}

void MsgPassiveSkillEffectDmgMS2C::InitAsDefaultInstance() {
}

MsgPassiveSkillEffectDmgMS2C::MsgPassiveSkillEffectDmgMS2C(const MsgPassiveSkillEffectDmgMS2C& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.MsgPassiveSkillEffectDmgMS2C)
}

void MsgPassiveSkillEffectDmgMS2C::SharedCtor() {
  _cached_size_ = 0;
  serialid_ = GOOGLE_LONGLONG(0);
  msgtype_ = 1278;
  iggid_ = GOOGLE_LONGLONG(0);
  caster_mapobjectid_ = 0;
  target_mapobjectid_ = 0;
  skill_id_ = 0;
  dmg_val_ = 0;
  criticl_ = false;
  currhp_ = 0;
  target_skill_ = 0;
  mp_dmg_val_ = 0;
  durability_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgPassiveSkillEffectDmgMS2C::~MsgPassiveSkillEffectDmgMS2C() {
  // @@protoc_insertion_point(destructor:MsgPB.MsgPassiveSkillEffectDmgMS2C)
  SharedDtor();
}

void MsgPassiveSkillEffectDmgMS2C::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgPassiveSkillEffectDmgMS2C::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgPassiveSkillEffectDmgMS2C::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgPassiveSkillEffectDmgMS2C_descriptor_;
}

const MsgPassiveSkillEffectDmgMS2C& MsgPassiveSkillEffectDmgMS2C::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgSkill_2eproto();
  return *default_instance_;
}

MsgPassiveSkillEffectDmgMS2C* MsgPassiveSkillEffectDmgMS2C::default_instance_ = NULL;

MsgPassiveSkillEffectDmgMS2C* MsgPassiveSkillEffectDmgMS2C::New() const {
  return new MsgPassiveSkillEffectDmgMS2C;
}

void MsgPassiveSkillEffectDmgMS2C::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<MsgPassiveSkillEffectDmgMS2C*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 255) {
    ZR_(serialid_, iggid_);
    ZR_(caster_mapobjectid_, criticl_);
    msgtype_ = 1278;
  }
  ZR_(currhp_, durability_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgPassiveSkillEffectDmgMS2C::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.MsgPassiveSkillEffectDmgMS2C)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 SerialID = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &serialid_)));
          set_has_serialid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_msgType;
        break;
      }

      // optional .MsgPB.EMsgType msgType = 2 [default = _MSG_PASSIVE_EFFECT_Dmg_MS2C];
      case 2: {
        if (tag == 16) {
         parse_msgType:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::EMsgType_IsValid(value)) {
            set_msgtype(static_cast< ::MsgPB::EMsgType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_iggid;
        break;
      }

      // optional int64 iggid = 3;
      case 3: {
        if (tag == 24) {
         parse_iggid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &iggid_)));
          set_has_iggid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_caster_mapobjectid;
        break;
      }

      // optional int32 caster_mapobjectid = 4;
      case 4: {
        if (tag == 32) {
         parse_caster_mapobjectid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &caster_mapobjectid_)));
          set_has_caster_mapobjectid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_target_mapobjectid;
        break;
      }

      // optional int32 target_mapobjectid = 5;
      case 5: {
        if (tag == 40) {
         parse_target_mapobjectid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &target_mapobjectid_)));
          set_has_target_mapobjectid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_skill_id;
        break;
      }

      // optional int32 skill_id = 6;
      case 6: {
        if (tag == 48) {
         parse_skill_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &skill_id_)));
          set_has_skill_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_dmg_val;
        break;
      }

      // optional int32 dmg_val = 7;
      case 7: {
        if (tag == 56) {
         parse_dmg_val:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &dmg_val_)));
          set_has_dmg_val();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_criticl;
        break;
      }

      // optional bool criticl = 8;
      case 8: {
        if (tag == 64) {
         parse_criticl:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &criticl_)));
          set_has_criticl();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_currhp;
        break;
      }

      // optional int32 currhp = 9;
      case 9: {
        if (tag == 72) {
         parse_currhp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &currhp_)));
          set_has_currhp();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(80)) goto parse_target_skill;
        break;
      }

      // optional int32 target_skill = 10;
      case 10: {
        if (tag == 80) {
         parse_target_skill:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &target_skill_)));
          set_has_target_skill();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(88)) goto parse_mp_dmg_val;
        break;
      }

      // optional int32 mp_dmg_val = 11;
      case 11: {
        if (tag == 88) {
         parse_mp_dmg_val:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &mp_dmg_val_)));
          set_has_mp_dmg_val();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(96)) goto parse_durability;
        break;
      }

      // optional int32 durability = 12;
      case 12: {
        if (tag == 96) {
         parse_durability:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &durability_)));
          set_has_durability();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.MsgPassiveSkillEffectDmgMS2C)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.MsgPassiveSkillEffectDmgMS2C)
  return false;
#undef DO_
}

void MsgPassiveSkillEffectDmgMS2C::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.MsgPassiveSkillEffectDmgMS2C)
  // optional int64 SerialID = 1;
  if (has_serialid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->serialid(), output);
  }

  // optional .MsgPB.EMsgType msgType = 2 [default = _MSG_PASSIVE_EFFECT_Dmg_MS2C];
  if (has_msgtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->msgtype(), output);
  }

  // optional int64 iggid = 3;
  if (has_iggid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->iggid(), output);
  }

  // optional int32 caster_mapobjectid = 4;
  if (has_caster_mapobjectid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->caster_mapobjectid(), output);
  }

  // optional int32 target_mapobjectid = 5;
  if (has_target_mapobjectid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->target_mapobjectid(), output);
  }

  // optional int32 skill_id = 6;
  if (has_skill_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->skill_id(), output);
  }

  // optional int32 dmg_val = 7;
  if (has_dmg_val()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->dmg_val(), output);
  }

  // optional bool criticl = 8;
  if (has_criticl()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(8, this->criticl(), output);
  }

  // optional int32 currhp = 9;
  if (has_currhp()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->currhp(), output);
  }

  // optional int32 target_skill = 10;
  if (has_target_skill()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->target_skill(), output);
  }

  // optional int32 mp_dmg_val = 11;
  if (has_mp_dmg_val()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->mp_dmg_val(), output);
  }

  // optional int32 durability = 12;
  if (has_durability()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(12, this->durability(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.MsgPassiveSkillEffectDmgMS2C)
}

::google::protobuf::uint8* MsgPassiveSkillEffectDmgMS2C::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.MsgPassiveSkillEffectDmgMS2C)
  // optional int64 SerialID = 1;
  if (has_serialid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->serialid(), target);
  }

  // optional .MsgPB.EMsgType msgType = 2 [default = _MSG_PASSIVE_EFFECT_Dmg_MS2C];
  if (has_msgtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->msgtype(), target);
  }

  // optional int64 iggid = 3;
  if (has_iggid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->iggid(), target);
  }

  // optional int32 caster_mapobjectid = 4;
  if (has_caster_mapobjectid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->caster_mapobjectid(), target);
  }

  // optional int32 target_mapobjectid = 5;
  if (has_target_mapobjectid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->target_mapobjectid(), target);
  }

  // optional int32 skill_id = 6;
  if (has_skill_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->skill_id(), target);
  }

  // optional int32 dmg_val = 7;
  if (has_dmg_val()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->dmg_val(), target);
  }

  // optional bool criticl = 8;
  if (has_criticl()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(8, this->criticl(), target);
  }

  // optional int32 currhp = 9;
  if (has_currhp()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->currhp(), target);
  }

  // optional int32 target_skill = 10;
  if (has_target_skill()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->target_skill(), target);
  }

  // optional int32 mp_dmg_val = 11;
  if (has_mp_dmg_val()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->mp_dmg_val(), target);
  }

  // optional int32 durability = 12;
  if (has_durability()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(12, this->durability(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.MsgPassiveSkillEffectDmgMS2C)
  return target;
}

int MsgPassiveSkillEffectDmgMS2C::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 SerialID = 1;
    if (has_serialid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->serialid());
    }

    // optional .MsgPB.EMsgType msgType = 2 [default = _MSG_PASSIVE_EFFECT_Dmg_MS2C];
    if (has_msgtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgtype());
    }

    // optional int64 iggid = 3;
    if (has_iggid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->iggid());
    }

    // optional int32 caster_mapobjectid = 4;
    if (has_caster_mapobjectid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->caster_mapobjectid());
    }

    // optional int32 target_mapobjectid = 5;
    if (has_target_mapobjectid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->target_mapobjectid());
    }

    // optional int32 skill_id = 6;
    if (has_skill_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->skill_id());
    }

    // optional int32 dmg_val = 7;
    if (has_dmg_val()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->dmg_val());
    }

    // optional bool criticl = 8;
    if (has_criticl()) {
      total_size += 1 + 1;
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional int32 currhp = 9;
    if (has_currhp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->currhp());
    }

    // optional int32 target_skill = 10;
    if (has_target_skill()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->target_skill());
    }

    // optional int32 mp_dmg_val = 11;
    if (has_mp_dmg_val()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->mp_dmg_val());
    }

    // optional int32 durability = 12;
    if (has_durability()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->durability());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgPassiveSkillEffectDmgMS2C::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgPassiveSkillEffectDmgMS2C* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgPassiveSkillEffectDmgMS2C*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgPassiveSkillEffectDmgMS2C::MergeFrom(const MsgPassiveSkillEffectDmgMS2C& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_serialid()) {
      set_serialid(from.serialid());
    }
    if (from.has_msgtype()) {
      set_msgtype(from.msgtype());
    }
    if (from.has_iggid()) {
      set_iggid(from.iggid());
    }
    if (from.has_caster_mapobjectid()) {
      set_caster_mapobjectid(from.caster_mapobjectid());
    }
    if (from.has_target_mapobjectid()) {
      set_target_mapobjectid(from.target_mapobjectid());
    }
    if (from.has_skill_id()) {
      set_skill_id(from.skill_id());
    }
    if (from.has_dmg_val()) {
      set_dmg_val(from.dmg_val());
    }
    if (from.has_criticl()) {
      set_criticl(from.criticl());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_currhp()) {
      set_currhp(from.currhp());
    }
    if (from.has_target_skill()) {
      set_target_skill(from.target_skill());
    }
    if (from.has_mp_dmg_val()) {
      set_mp_dmg_val(from.mp_dmg_val());
    }
    if (from.has_durability()) {
      set_durability(from.durability());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgPassiveSkillEffectDmgMS2C::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgPassiveSkillEffectDmgMS2C::CopyFrom(const MsgPassiveSkillEffectDmgMS2C& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgPassiveSkillEffectDmgMS2C::IsInitialized() const {

  return true;
}

void MsgPassiveSkillEffectDmgMS2C::Swap(MsgPassiveSkillEffectDmgMS2C* other) {
  if (other != this) {
    std::swap(serialid_, other->serialid_);
    std::swap(msgtype_, other->msgtype_);
    std::swap(iggid_, other->iggid_);
    std::swap(caster_mapobjectid_, other->caster_mapobjectid_);
    std::swap(target_mapobjectid_, other->target_mapobjectid_);
    std::swap(skill_id_, other->skill_id_);
    std::swap(dmg_val_, other->dmg_val_);
    std::swap(criticl_, other->criticl_);
    std::swap(currhp_, other->currhp_);
    std::swap(target_skill_, other->target_skill_);
    std::swap(mp_dmg_val_, other->mp_dmg_val_);
    std::swap(durability_, other->durability_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgPassiveSkillEffectDmgMS2C::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgPassiveSkillEffectDmgMS2C_descriptor_;
  metadata.reflection = MsgPassiveSkillEffectDmgMS2C_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgSkillEffectDotDmgMS2C::kSerialIDFieldNumber;
const int MsgSkillEffectDotDmgMS2C::kMsgTypeFieldNumber;
const int MsgSkillEffectDotDmgMS2C::kIggidFieldNumber;
const int MsgSkillEffectDotDmgMS2C::kCasterMapobjectidFieldNumber;
const int MsgSkillEffectDotDmgMS2C::kTargetMapobjectidFieldNumber;
const int MsgSkillEffectDotDmgMS2C::kSkillIdFieldNumber;
const int MsgSkillEffectDotDmgMS2C::kDmgValFieldNumber;
const int MsgSkillEffectDotDmgMS2C::kCriticlFieldNumber;
const int MsgSkillEffectDotDmgMS2C::kMpDmgValFieldNumber;
const int MsgSkillEffectDotDmgMS2C::kCurrhpFieldNumber;
const int MsgSkillEffectDotDmgMS2C::kDurabilityFieldNumber;
#endif  // !_MSC_VER

MsgSkillEffectDotDmgMS2C::MsgSkillEffectDotDmgMS2C()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.MsgSkillEffectDotDmgMS2C)
}

void MsgSkillEffectDotDmgMS2C::InitAsDefaultInstance() {
}

MsgSkillEffectDotDmgMS2C::MsgSkillEffectDotDmgMS2C(const MsgSkillEffectDotDmgMS2C& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.MsgSkillEffectDotDmgMS2C)
}

void MsgSkillEffectDotDmgMS2C::SharedCtor() {
  _cached_size_ = 0;
  serialid_ = GOOGLE_LONGLONG(0);
  msgtype_ = 1271;
  iggid_ = GOOGLE_LONGLONG(0);
  caster_mapobjectid_ = 0;
  target_mapobjectid_ = 0;
  skill_id_ = 0;
  dmg_val_ = 0;
  criticl_ = false;
  mp_dmg_val_ = 0;
  currhp_ = 0;
  durability_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgSkillEffectDotDmgMS2C::~MsgSkillEffectDotDmgMS2C() {
  // @@protoc_insertion_point(destructor:MsgPB.MsgSkillEffectDotDmgMS2C)
  SharedDtor();
}

void MsgSkillEffectDotDmgMS2C::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgSkillEffectDotDmgMS2C::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgSkillEffectDotDmgMS2C::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgSkillEffectDotDmgMS2C_descriptor_;
}

const MsgSkillEffectDotDmgMS2C& MsgSkillEffectDotDmgMS2C::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgSkill_2eproto();
  return *default_instance_;
}

MsgSkillEffectDotDmgMS2C* MsgSkillEffectDotDmgMS2C::default_instance_ = NULL;

MsgSkillEffectDotDmgMS2C* MsgSkillEffectDotDmgMS2C::New() const {
  return new MsgSkillEffectDotDmgMS2C;
}

void MsgSkillEffectDotDmgMS2C::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<MsgSkillEffectDotDmgMS2C*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 255) {
    ZR_(serialid_, iggid_);
    ZR_(caster_mapobjectid_, criticl_);
    msgtype_ = 1271;
  }
  ZR_(mp_dmg_val_, durability_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgSkillEffectDotDmgMS2C::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.MsgSkillEffectDotDmgMS2C)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 SerialID = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &serialid_)));
          set_has_serialid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_msgType;
        break;
      }

      // optional .MsgPB.EMsgType msgType = 2 [default = _MSG_SKILL_EFFECT_DotDmg_MS2C];
      case 2: {
        if (tag == 16) {
         parse_msgType:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::EMsgType_IsValid(value)) {
            set_msgtype(static_cast< ::MsgPB::EMsgType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_iggid;
        break;
      }

      // optional int64 iggid = 3;
      case 3: {
        if (tag == 24) {
         parse_iggid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &iggid_)));
          set_has_iggid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_caster_mapobjectid;
        break;
      }

      // optional int32 caster_mapobjectid = 4;
      case 4: {
        if (tag == 32) {
         parse_caster_mapobjectid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &caster_mapobjectid_)));
          set_has_caster_mapobjectid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_target_mapobjectid;
        break;
      }

      // optional int32 target_mapobjectid = 5;
      case 5: {
        if (tag == 40) {
         parse_target_mapobjectid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &target_mapobjectid_)));
          set_has_target_mapobjectid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_skill_id;
        break;
      }

      // optional int32 skill_id = 6;
      case 6: {
        if (tag == 48) {
         parse_skill_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &skill_id_)));
          set_has_skill_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_dmg_val;
        break;
      }

      // optional int32 dmg_val = 7;
      case 7: {
        if (tag == 56) {
         parse_dmg_val:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &dmg_val_)));
          set_has_dmg_val();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_criticl;
        break;
      }

      // optional bool criticl = 8;
      case 8: {
        if (tag == 64) {
         parse_criticl:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &criticl_)));
          set_has_criticl();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_mp_dmg_val;
        break;
      }

      // optional int32 mp_dmg_val = 9;
      case 9: {
        if (tag == 72) {
         parse_mp_dmg_val:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &mp_dmg_val_)));
          set_has_mp_dmg_val();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(80)) goto parse_currhp;
        break;
      }

      // optional int32 currhp = 10;
      case 10: {
        if (tag == 80) {
         parse_currhp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &currhp_)));
          set_has_currhp();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(88)) goto parse_durability;
        break;
      }

      // optional int32 durability = 11;
      case 11: {
        if (tag == 88) {
         parse_durability:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &durability_)));
          set_has_durability();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.MsgSkillEffectDotDmgMS2C)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.MsgSkillEffectDotDmgMS2C)
  return false;
#undef DO_
}

void MsgSkillEffectDotDmgMS2C::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.MsgSkillEffectDotDmgMS2C)
  // optional int64 SerialID = 1;
  if (has_serialid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->serialid(), output);
  }

  // optional .MsgPB.EMsgType msgType = 2 [default = _MSG_SKILL_EFFECT_DotDmg_MS2C];
  if (has_msgtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->msgtype(), output);
  }

  // optional int64 iggid = 3;
  if (has_iggid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->iggid(), output);
  }

  // optional int32 caster_mapobjectid = 4;
  if (has_caster_mapobjectid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->caster_mapobjectid(), output);
  }

  // optional int32 target_mapobjectid = 5;
  if (has_target_mapobjectid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->target_mapobjectid(), output);
  }

  // optional int32 skill_id = 6;
  if (has_skill_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->skill_id(), output);
  }

  // optional int32 dmg_val = 7;
  if (has_dmg_val()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->dmg_val(), output);
  }

  // optional bool criticl = 8;
  if (has_criticl()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(8, this->criticl(), output);
  }

  // optional int32 mp_dmg_val = 9;
  if (has_mp_dmg_val()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->mp_dmg_val(), output);
  }

  // optional int32 currhp = 10;
  if (has_currhp()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->currhp(), output);
  }

  // optional int32 durability = 11;
  if (has_durability()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->durability(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.MsgSkillEffectDotDmgMS2C)
}

::google::protobuf::uint8* MsgSkillEffectDotDmgMS2C::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.MsgSkillEffectDotDmgMS2C)
  // optional int64 SerialID = 1;
  if (has_serialid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->serialid(), target);
  }

  // optional .MsgPB.EMsgType msgType = 2 [default = _MSG_SKILL_EFFECT_DotDmg_MS2C];
  if (has_msgtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->msgtype(), target);
  }

  // optional int64 iggid = 3;
  if (has_iggid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->iggid(), target);
  }

  // optional int32 caster_mapobjectid = 4;
  if (has_caster_mapobjectid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->caster_mapobjectid(), target);
  }

  // optional int32 target_mapobjectid = 5;
  if (has_target_mapobjectid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->target_mapobjectid(), target);
  }

  // optional int32 skill_id = 6;
  if (has_skill_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->skill_id(), target);
  }

  // optional int32 dmg_val = 7;
  if (has_dmg_val()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->dmg_val(), target);
  }

  // optional bool criticl = 8;
  if (has_criticl()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(8, this->criticl(), target);
  }

  // optional int32 mp_dmg_val = 9;
  if (has_mp_dmg_val()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->mp_dmg_val(), target);
  }

  // optional int32 currhp = 10;
  if (has_currhp()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->currhp(), target);
  }

  // optional int32 durability = 11;
  if (has_durability()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->durability(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.MsgSkillEffectDotDmgMS2C)
  return target;
}

int MsgSkillEffectDotDmgMS2C::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 SerialID = 1;
    if (has_serialid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->serialid());
    }

    // optional .MsgPB.EMsgType msgType = 2 [default = _MSG_SKILL_EFFECT_DotDmg_MS2C];
    if (has_msgtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgtype());
    }

    // optional int64 iggid = 3;
    if (has_iggid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->iggid());
    }

    // optional int32 caster_mapobjectid = 4;
    if (has_caster_mapobjectid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->caster_mapobjectid());
    }

    // optional int32 target_mapobjectid = 5;
    if (has_target_mapobjectid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->target_mapobjectid());
    }

    // optional int32 skill_id = 6;
    if (has_skill_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->skill_id());
    }

    // optional int32 dmg_val = 7;
    if (has_dmg_val()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->dmg_val());
    }

    // optional bool criticl = 8;
    if (has_criticl()) {
      total_size += 1 + 1;
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional int32 mp_dmg_val = 9;
    if (has_mp_dmg_val()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->mp_dmg_val());
    }

    // optional int32 currhp = 10;
    if (has_currhp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->currhp());
    }

    // optional int32 durability = 11;
    if (has_durability()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->durability());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgSkillEffectDotDmgMS2C::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgSkillEffectDotDmgMS2C* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgSkillEffectDotDmgMS2C*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgSkillEffectDotDmgMS2C::MergeFrom(const MsgSkillEffectDotDmgMS2C& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_serialid()) {
      set_serialid(from.serialid());
    }
    if (from.has_msgtype()) {
      set_msgtype(from.msgtype());
    }
    if (from.has_iggid()) {
      set_iggid(from.iggid());
    }
    if (from.has_caster_mapobjectid()) {
      set_caster_mapobjectid(from.caster_mapobjectid());
    }
    if (from.has_target_mapobjectid()) {
      set_target_mapobjectid(from.target_mapobjectid());
    }
    if (from.has_skill_id()) {
      set_skill_id(from.skill_id());
    }
    if (from.has_dmg_val()) {
      set_dmg_val(from.dmg_val());
    }
    if (from.has_criticl()) {
      set_criticl(from.criticl());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_mp_dmg_val()) {
      set_mp_dmg_val(from.mp_dmg_val());
    }
    if (from.has_currhp()) {
      set_currhp(from.currhp());
    }
    if (from.has_durability()) {
      set_durability(from.durability());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgSkillEffectDotDmgMS2C::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgSkillEffectDotDmgMS2C::CopyFrom(const MsgSkillEffectDotDmgMS2C& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgSkillEffectDotDmgMS2C::IsInitialized() const {

  return true;
}

void MsgSkillEffectDotDmgMS2C::Swap(MsgSkillEffectDotDmgMS2C* other) {
  if (other != this) {
    std::swap(serialid_, other->serialid_);
    std::swap(msgtype_, other->msgtype_);
    std::swap(iggid_, other->iggid_);
    std::swap(caster_mapobjectid_, other->caster_mapobjectid_);
    std::swap(target_mapobjectid_, other->target_mapobjectid_);
    std::swap(skill_id_, other->skill_id_);
    std::swap(dmg_val_, other->dmg_val_);
    std::swap(criticl_, other->criticl_);
    std::swap(mp_dmg_val_, other->mp_dmg_val_);
    std::swap(currhp_, other->currhp_);
    std::swap(durability_, other->durability_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgSkillEffectDotDmgMS2C::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgSkillEffectDotDmgMS2C_descriptor_;
  metadata.reflection = MsgSkillEffectDotDmgMS2C_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgSkillEffectAddBuffMS2C::kSerialIDFieldNumber;
const int MsgSkillEffectAddBuffMS2C::kMsgTypeFieldNumber;
const int MsgSkillEffectAddBuffMS2C::kIggidFieldNumber;
const int MsgSkillEffectAddBuffMS2C::kCasterMapobjectidFieldNumber;
const int MsgSkillEffectAddBuffMS2C::kTargetMapobjectidFieldNumber;
const int MsgSkillEffectAddBuffMS2C::kSkillIdFieldNumber;
const int MsgSkillEffectAddBuffMS2C::kBuffidFieldNumber;
#endif  // !_MSC_VER

MsgSkillEffectAddBuffMS2C::MsgSkillEffectAddBuffMS2C()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.MsgSkillEffectAddBuffMS2C)
}

void MsgSkillEffectAddBuffMS2C::InitAsDefaultInstance() {
}

MsgSkillEffectAddBuffMS2C::MsgSkillEffectAddBuffMS2C(const MsgSkillEffectAddBuffMS2C& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.MsgSkillEffectAddBuffMS2C)
}

void MsgSkillEffectAddBuffMS2C::SharedCtor() {
  _cached_size_ = 0;
  serialid_ = GOOGLE_LONGLONG(0);
  msgtype_ = 1272;
  iggid_ = GOOGLE_LONGLONG(0);
  caster_mapobjectid_ = 0;
  target_mapobjectid_ = 0;
  skill_id_ = 0;
  buffid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgSkillEffectAddBuffMS2C::~MsgSkillEffectAddBuffMS2C() {
  // @@protoc_insertion_point(destructor:MsgPB.MsgSkillEffectAddBuffMS2C)
  SharedDtor();
}

void MsgSkillEffectAddBuffMS2C::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgSkillEffectAddBuffMS2C::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgSkillEffectAddBuffMS2C::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgSkillEffectAddBuffMS2C_descriptor_;
}

const MsgSkillEffectAddBuffMS2C& MsgSkillEffectAddBuffMS2C::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgSkill_2eproto();
  return *default_instance_;
}

MsgSkillEffectAddBuffMS2C* MsgSkillEffectAddBuffMS2C::default_instance_ = NULL;

MsgSkillEffectAddBuffMS2C* MsgSkillEffectAddBuffMS2C::New() const {
  return new MsgSkillEffectAddBuffMS2C;
}

void MsgSkillEffectAddBuffMS2C::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<MsgSkillEffectAddBuffMS2C*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 127) {
    ZR_(serialid_, iggid_);
    ZR_(caster_mapobjectid_, buffid_);
    msgtype_ = 1272;
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgSkillEffectAddBuffMS2C::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.MsgSkillEffectAddBuffMS2C)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 SerialID = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &serialid_)));
          set_has_serialid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_msgType;
        break;
      }

      // optional .MsgPB.EMsgType msgType = 2 [default = _MSG_SKILL_EFFECT_AddBuff_MS2C];
      case 2: {
        if (tag == 16) {
         parse_msgType:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::EMsgType_IsValid(value)) {
            set_msgtype(static_cast< ::MsgPB::EMsgType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_iggid;
        break;
      }

      // optional int64 iggid = 3;
      case 3: {
        if (tag == 24) {
         parse_iggid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &iggid_)));
          set_has_iggid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_caster_mapobjectid;
        break;
      }

      // optional int32 caster_mapobjectid = 4;
      case 4: {
        if (tag == 32) {
         parse_caster_mapobjectid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &caster_mapobjectid_)));
          set_has_caster_mapobjectid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_target_mapobjectid;
        break;
      }

      // optional int32 target_mapobjectid = 5;
      case 5: {
        if (tag == 40) {
         parse_target_mapobjectid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &target_mapobjectid_)));
          set_has_target_mapobjectid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_skill_id;
        break;
      }

      // optional int32 skill_id = 6;
      case 6: {
        if (tag == 48) {
         parse_skill_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &skill_id_)));
          set_has_skill_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_buffid;
        break;
      }

      // optional int32 buffid = 7;
      case 7: {
        if (tag == 56) {
         parse_buffid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &buffid_)));
          set_has_buffid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.MsgSkillEffectAddBuffMS2C)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.MsgSkillEffectAddBuffMS2C)
  return false;
#undef DO_
}

void MsgSkillEffectAddBuffMS2C::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.MsgSkillEffectAddBuffMS2C)
  // optional int64 SerialID = 1;
  if (has_serialid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->serialid(), output);
  }

  // optional .MsgPB.EMsgType msgType = 2 [default = _MSG_SKILL_EFFECT_AddBuff_MS2C];
  if (has_msgtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->msgtype(), output);
  }

  // optional int64 iggid = 3;
  if (has_iggid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->iggid(), output);
  }

  // optional int32 caster_mapobjectid = 4;
  if (has_caster_mapobjectid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->caster_mapobjectid(), output);
  }

  // optional int32 target_mapobjectid = 5;
  if (has_target_mapobjectid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->target_mapobjectid(), output);
  }

  // optional int32 skill_id = 6;
  if (has_skill_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->skill_id(), output);
  }

  // optional int32 buffid = 7;
  if (has_buffid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->buffid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.MsgSkillEffectAddBuffMS2C)
}

::google::protobuf::uint8* MsgSkillEffectAddBuffMS2C::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.MsgSkillEffectAddBuffMS2C)
  // optional int64 SerialID = 1;
  if (has_serialid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->serialid(), target);
  }

  // optional .MsgPB.EMsgType msgType = 2 [default = _MSG_SKILL_EFFECT_AddBuff_MS2C];
  if (has_msgtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->msgtype(), target);
  }

  // optional int64 iggid = 3;
  if (has_iggid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->iggid(), target);
  }

  // optional int32 caster_mapobjectid = 4;
  if (has_caster_mapobjectid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->caster_mapobjectid(), target);
  }

  // optional int32 target_mapobjectid = 5;
  if (has_target_mapobjectid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->target_mapobjectid(), target);
  }

  // optional int32 skill_id = 6;
  if (has_skill_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->skill_id(), target);
  }

  // optional int32 buffid = 7;
  if (has_buffid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->buffid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.MsgSkillEffectAddBuffMS2C)
  return target;
}

int MsgSkillEffectAddBuffMS2C::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 SerialID = 1;
    if (has_serialid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->serialid());
    }

    // optional .MsgPB.EMsgType msgType = 2 [default = _MSG_SKILL_EFFECT_AddBuff_MS2C];
    if (has_msgtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgtype());
    }

    // optional int64 iggid = 3;
    if (has_iggid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->iggid());
    }

    // optional int32 caster_mapobjectid = 4;
    if (has_caster_mapobjectid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->caster_mapobjectid());
    }

    // optional int32 target_mapobjectid = 5;
    if (has_target_mapobjectid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->target_mapobjectid());
    }

    // optional int32 skill_id = 6;
    if (has_skill_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->skill_id());
    }

    // optional int32 buffid = 7;
    if (has_buffid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->buffid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgSkillEffectAddBuffMS2C::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgSkillEffectAddBuffMS2C* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgSkillEffectAddBuffMS2C*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgSkillEffectAddBuffMS2C::MergeFrom(const MsgSkillEffectAddBuffMS2C& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_serialid()) {
      set_serialid(from.serialid());
    }
    if (from.has_msgtype()) {
      set_msgtype(from.msgtype());
    }
    if (from.has_iggid()) {
      set_iggid(from.iggid());
    }
    if (from.has_caster_mapobjectid()) {
      set_caster_mapobjectid(from.caster_mapobjectid());
    }
    if (from.has_target_mapobjectid()) {
      set_target_mapobjectid(from.target_mapobjectid());
    }
    if (from.has_skill_id()) {
      set_skill_id(from.skill_id());
    }
    if (from.has_buffid()) {
      set_buffid(from.buffid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgSkillEffectAddBuffMS2C::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgSkillEffectAddBuffMS2C::CopyFrom(const MsgSkillEffectAddBuffMS2C& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgSkillEffectAddBuffMS2C::IsInitialized() const {

  return true;
}

void MsgSkillEffectAddBuffMS2C::Swap(MsgSkillEffectAddBuffMS2C* other) {
  if (other != this) {
    std::swap(serialid_, other->serialid_);
    std::swap(msgtype_, other->msgtype_);
    std::swap(iggid_, other->iggid_);
    std::swap(caster_mapobjectid_, other->caster_mapobjectid_);
    std::swap(target_mapobjectid_, other->target_mapobjectid_);
    std::swap(skill_id_, other->skill_id_);
    std::swap(buffid_, other->buffid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgSkillEffectAddBuffMS2C::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgSkillEffectAddBuffMS2C_descriptor_;
  metadata.reflection = MsgSkillEffectAddBuffMS2C_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgSkillEffectSummonMS2C::kSerialIDFieldNumber;
const int MsgSkillEffectSummonMS2C::kMsgTypeFieldNumber;
const int MsgSkillEffectSummonMS2C::kIggidFieldNumber;
const int MsgSkillEffectSummonMS2C::kCasterMapobjectidFieldNumber;
const int MsgSkillEffectSummonMS2C::kTargetMapobjectidFieldNumber;
const int MsgSkillEffectSummonMS2C::kSkillIdFieldNumber;
const int MsgSkillEffectSummonMS2C::kSummonIdFieldNumber;
const int MsgSkillEffectSummonMS2C::kPosFieldNumber;
#endif  // !_MSC_VER

MsgSkillEffectSummonMS2C::MsgSkillEffectSummonMS2C()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.MsgSkillEffectSummonMS2C)
}

void MsgSkillEffectSummonMS2C::InitAsDefaultInstance() {
}

MsgSkillEffectSummonMS2C::MsgSkillEffectSummonMS2C(const MsgSkillEffectSummonMS2C& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.MsgSkillEffectSummonMS2C)
}

void MsgSkillEffectSummonMS2C::SharedCtor() {
  _cached_size_ = 0;
  serialid_ = GOOGLE_LONGLONG(0);
  msgtype_ = 1273;
  iggid_ = GOOGLE_LONGLONG(0);
  caster_mapobjectid_ = 0;
  target_mapobjectid_ = 0;
  skill_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgSkillEffectSummonMS2C::~MsgSkillEffectSummonMS2C() {
  // @@protoc_insertion_point(destructor:MsgPB.MsgSkillEffectSummonMS2C)
  SharedDtor();
}

void MsgSkillEffectSummonMS2C::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgSkillEffectSummonMS2C::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgSkillEffectSummonMS2C::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgSkillEffectSummonMS2C_descriptor_;
}

const MsgSkillEffectSummonMS2C& MsgSkillEffectSummonMS2C::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgSkill_2eproto();
  return *default_instance_;
}

MsgSkillEffectSummonMS2C* MsgSkillEffectSummonMS2C::default_instance_ = NULL;

MsgSkillEffectSummonMS2C* MsgSkillEffectSummonMS2C::New() const {
  return new MsgSkillEffectSummonMS2C;
}

void MsgSkillEffectSummonMS2C::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<MsgSkillEffectSummonMS2C*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 63) {
    ZR_(serialid_, iggid_);
    ZR_(caster_mapobjectid_, skill_id_);
    msgtype_ = 1273;
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  summon_id_.Clear();
  pos_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgSkillEffectSummonMS2C::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.MsgSkillEffectSummonMS2C)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 SerialID = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &serialid_)));
          set_has_serialid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_msgType;
        break;
      }

      // optional .MsgPB.EMsgType msgType = 2 [default = _MSG_SKILL_EFFECT_Summon_MS2C];
      case 2: {
        if (tag == 16) {
         parse_msgType:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::EMsgType_IsValid(value)) {
            set_msgtype(static_cast< ::MsgPB::EMsgType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_iggid;
        break;
      }

      // optional int64 iggid = 3;
      case 3: {
        if (tag == 24) {
         parse_iggid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &iggid_)));
          set_has_iggid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_caster_mapobjectid;
        break;
      }

      // optional int32 caster_mapobjectid = 4;
      case 4: {
        if (tag == 32) {
         parse_caster_mapobjectid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &caster_mapobjectid_)));
          set_has_caster_mapobjectid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_target_mapobjectid;
        break;
      }

      // optional int32 target_mapobjectid = 5;
      case 5: {
        if (tag == 40) {
         parse_target_mapobjectid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &target_mapobjectid_)));
          set_has_target_mapobjectid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_skill_id;
        break;
      }

      // optional int32 skill_id = 6;
      case 6: {
        if (tag == 48) {
         parse_skill_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &skill_id_)));
          set_has_skill_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_summon_id;
        break;
      }

      // repeated int32 summon_id = 7;
      case 7: {
        if (tag == 56) {
         parse_summon_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 56, input, this->mutable_summon_id())));
        } else if (tag == 58) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_summon_id())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_summon_id;
        if (input->ExpectTag(66)) goto parse_pos;
        break;
      }

      // repeated .MsgPB.MsgPoint pos = 8;
      case 8: {
        if (tag == 66) {
         parse_pos:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_pos()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_pos;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.MsgSkillEffectSummonMS2C)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.MsgSkillEffectSummonMS2C)
  return false;
#undef DO_
}

void MsgSkillEffectSummonMS2C::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.MsgSkillEffectSummonMS2C)
  // optional int64 SerialID = 1;
  if (has_serialid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->serialid(), output);
  }

  // optional .MsgPB.EMsgType msgType = 2 [default = _MSG_SKILL_EFFECT_Summon_MS2C];
  if (has_msgtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->msgtype(), output);
  }

  // optional int64 iggid = 3;
  if (has_iggid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->iggid(), output);
  }

  // optional int32 caster_mapobjectid = 4;
  if (has_caster_mapobjectid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->caster_mapobjectid(), output);
  }

  // optional int32 target_mapobjectid = 5;
  if (has_target_mapobjectid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->target_mapobjectid(), output);
  }

  // optional int32 skill_id = 6;
  if (has_skill_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->skill_id(), output);
  }

  // repeated int32 summon_id = 7;
  for (int i = 0; i < this->summon_id_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      7, this->summon_id(i), output);
  }

  // repeated .MsgPB.MsgPoint pos = 8;
  for (int i = 0; i < this->pos_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->pos(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.MsgSkillEffectSummonMS2C)
}

::google::protobuf::uint8* MsgSkillEffectSummonMS2C::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.MsgSkillEffectSummonMS2C)
  // optional int64 SerialID = 1;
  if (has_serialid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->serialid(), target);
  }

  // optional .MsgPB.EMsgType msgType = 2 [default = _MSG_SKILL_EFFECT_Summon_MS2C];
  if (has_msgtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->msgtype(), target);
  }

  // optional int64 iggid = 3;
  if (has_iggid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->iggid(), target);
  }

  // optional int32 caster_mapobjectid = 4;
  if (has_caster_mapobjectid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->caster_mapobjectid(), target);
  }

  // optional int32 target_mapobjectid = 5;
  if (has_target_mapobjectid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->target_mapobjectid(), target);
  }

  // optional int32 skill_id = 6;
  if (has_skill_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->skill_id(), target);
  }

  // repeated int32 summon_id = 7;
  for (int i = 0; i < this->summon_id_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(7, this->summon_id(i), target);
  }

  // repeated .MsgPB.MsgPoint pos = 8;
  for (int i = 0; i < this->pos_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        8, this->pos(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.MsgSkillEffectSummonMS2C)
  return target;
}

int MsgSkillEffectSummonMS2C::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 SerialID = 1;
    if (has_serialid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->serialid());
    }

    // optional .MsgPB.EMsgType msgType = 2 [default = _MSG_SKILL_EFFECT_Summon_MS2C];
    if (has_msgtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgtype());
    }

    // optional int64 iggid = 3;
    if (has_iggid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->iggid());
    }

    // optional int32 caster_mapobjectid = 4;
    if (has_caster_mapobjectid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->caster_mapobjectid());
    }

    // optional int32 target_mapobjectid = 5;
    if (has_target_mapobjectid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->target_mapobjectid());
    }

    // optional int32 skill_id = 6;
    if (has_skill_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->skill_id());
    }

  }
  // repeated int32 summon_id = 7;
  {
    int data_size = 0;
    for (int i = 0; i < this->summon_id_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->summon_id(i));
    }
    total_size += 1 * this->summon_id_size() + data_size;
  }

  // repeated .MsgPB.MsgPoint pos = 8;
  total_size += 1 * this->pos_size();
  for (int i = 0; i < this->pos_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->pos(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgSkillEffectSummonMS2C::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgSkillEffectSummonMS2C* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgSkillEffectSummonMS2C*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgSkillEffectSummonMS2C::MergeFrom(const MsgSkillEffectSummonMS2C& from) {
  GOOGLE_CHECK_NE(&from, this);
  summon_id_.MergeFrom(from.summon_id_);
  pos_.MergeFrom(from.pos_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_serialid()) {
      set_serialid(from.serialid());
    }
    if (from.has_msgtype()) {
      set_msgtype(from.msgtype());
    }
    if (from.has_iggid()) {
      set_iggid(from.iggid());
    }
    if (from.has_caster_mapobjectid()) {
      set_caster_mapobjectid(from.caster_mapobjectid());
    }
    if (from.has_target_mapobjectid()) {
      set_target_mapobjectid(from.target_mapobjectid());
    }
    if (from.has_skill_id()) {
      set_skill_id(from.skill_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgSkillEffectSummonMS2C::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgSkillEffectSummonMS2C::CopyFrom(const MsgSkillEffectSummonMS2C& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgSkillEffectSummonMS2C::IsInitialized() const {

  return true;
}

void MsgSkillEffectSummonMS2C::Swap(MsgSkillEffectSummonMS2C* other) {
  if (other != this) {
    std::swap(serialid_, other->serialid_);
    std::swap(msgtype_, other->msgtype_);
    std::swap(iggid_, other->iggid_);
    std::swap(caster_mapobjectid_, other->caster_mapobjectid_);
    std::swap(target_mapobjectid_, other->target_mapobjectid_);
    std::swap(skill_id_, other->skill_id_);
    summon_id_.Swap(&other->summon_id_);
    pos_.Swap(&other->pos_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgSkillEffectSummonMS2C::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgSkillEffectSummonMS2C_descriptor_;
  metadata.reflection = MsgSkillEffectSummonMS2C_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgSkillEffectRestoreMS2C::kSerialIDFieldNumber;
const int MsgSkillEffectRestoreMS2C::kMsgTypeFieldNumber;
const int MsgSkillEffectRestoreMS2C::kIggidFieldNumber;
const int MsgSkillEffectRestoreMS2C::kCasterMapobjectidFieldNumber;
const int MsgSkillEffectRestoreMS2C::kTargetMapobjectidFieldNumber;
const int MsgSkillEffectRestoreMS2C::kSkillIdFieldNumber;
const int MsgSkillEffectRestoreMS2C::kHpValFieldNumber;
const int MsgSkillEffectRestoreMS2C::kMpValFieldNumber;
const int MsgSkillEffectRestoreMS2C::kCurrhpFieldNumber;
#endif  // !_MSC_VER

MsgSkillEffectRestoreMS2C::MsgSkillEffectRestoreMS2C()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.MsgSkillEffectRestoreMS2C)
}

void MsgSkillEffectRestoreMS2C::InitAsDefaultInstance() {
}

MsgSkillEffectRestoreMS2C::MsgSkillEffectRestoreMS2C(const MsgSkillEffectRestoreMS2C& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.MsgSkillEffectRestoreMS2C)
}

void MsgSkillEffectRestoreMS2C::SharedCtor() {
  _cached_size_ = 0;
  serialid_ = GOOGLE_LONGLONG(0);
  msgtype_ = 1274;
  iggid_ = GOOGLE_LONGLONG(0);
  caster_mapobjectid_ = 0;
  target_mapobjectid_ = 0;
  skill_id_ = 0;
  hp_val_ = 0;
  mp_val_ = 0;
  currhp_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgSkillEffectRestoreMS2C::~MsgSkillEffectRestoreMS2C() {
  // @@protoc_insertion_point(destructor:MsgPB.MsgSkillEffectRestoreMS2C)
  SharedDtor();
}

void MsgSkillEffectRestoreMS2C::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgSkillEffectRestoreMS2C::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgSkillEffectRestoreMS2C::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgSkillEffectRestoreMS2C_descriptor_;
}

const MsgSkillEffectRestoreMS2C& MsgSkillEffectRestoreMS2C::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgSkill_2eproto();
  return *default_instance_;
}

MsgSkillEffectRestoreMS2C* MsgSkillEffectRestoreMS2C::default_instance_ = NULL;

MsgSkillEffectRestoreMS2C* MsgSkillEffectRestoreMS2C::New() const {
  return new MsgSkillEffectRestoreMS2C;
}

void MsgSkillEffectRestoreMS2C::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<MsgSkillEffectRestoreMS2C*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 255) {
    ZR_(serialid_, iggid_);
    ZR_(caster_mapobjectid_, mp_val_);
    msgtype_ = 1274;
  }
  currhp_ = 0;

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgSkillEffectRestoreMS2C::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.MsgSkillEffectRestoreMS2C)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 SerialID = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &serialid_)));
          set_has_serialid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_msgType;
        break;
      }

      // optional .MsgPB.EMsgType msgType = 2 [default = _MSG_SKILL_EFFECT_Restore_MS2C];
      case 2: {
        if (tag == 16) {
         parse_msgType:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::EMsgType_IsValid(value)) {
            set_msgtype(static_cast< ::MsgPB::EMsgType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_iggid;
        break;
      }

      // optional int64 iggid = 3;
      case 3: {
        if (tag == 24) {
         parse_iggid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &iggid_)));
          set_has_iggid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_caster_mapobjectid;
        break;
      }

      // optional int32 caster_mapobjectid = 4;
      case 4: {
        if (tag == 32) {
         parse_caster_mapobjectid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &caster_mapobjectid_)));
          set_has_caster_mapobjectid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_target_mapobjectid;
        break;
      }

      // optional int32 target_mapobjectid = 5;
      case 5: {
        if (tag == 40) {
         parse_target_mapobjectid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &target_mapobjectid_)));
          set_has_target_mapobjectid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_skill_id;
        break;
      }

      // optional int32 skill_id = 6;
      case 6: {
        if (tag == 48) {
         parse_skill_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &skill_id_)));
          set_has_skill_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_hp_val;
        break;
      }

      // optional int32 hp_val = 7;
      case 7: {
        if (tag == 56) {
         parse_hp_val:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &hp_val_)));
          set_has_hp_val();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_mp_val;
        break;
      }

      // optional int32 mp_val = 8;
      case 8: {
        if (tag == 64) {
         parse_mp_val:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &mp_val_)));
          set_has_mp_val();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_currhp;
        break;
      }

      // optional int32 currhp = 9;
      case 9: {
        if (tag == 72) {
         parse_currhp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &currhp_)));
          set_has_currhp();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.MsgSkillEffectRestoreMS2C)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.MsgSkillEffectRestoreMS2C)
  return false;
#undef DO_
}

void MsgSkillEffectRestoreMS2C::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.MsgSkillEffectRestoreMS2C)
  // optional int64 SerialID = 1;
  if (has_serialid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->serialid(), output);
  }

  // optional .MsgPB.EMsgType msgType = 2 [default = _MSG_SKILL_EFFECT_Restore_MS2C];
  if (has_msgtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->msgtype(), output);
  }

  // optional int64 iggid = 3;
  if (has_iggid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->iggid(), output);
  }

  // optional int32 caster_mapobjectid = 4;
  if (has_caster_mapobjectid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->caster_mapobjectid(), output);
  }

  // optional int32 target_mapobjectid = 5;
  if (has_target_mapobjectid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->target_mapobjectid(), output);
  }

  // optional int32 skill_id = 6;
  if (has_skill_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->skill_id(), output);
  }

  // optional int32 hp_val = 7;
  if (has_hp_val()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->hp_val(), output);
  }

  // optional int32 mp_val = 8;
  if (has_mp_val()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->mp_val(), output);
  }

  // optional int32 currhp = 9;
  if (has_currhp()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->currhp(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.MsgSkillEffectRestoreMS2C)
}

::google::protobuf::uint8* MsgSkillEffectRestoreMS2C::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.MsgSkillEffectRestoreMS2C)
  // optional int64 SerialID = 1;
  if (has_serialid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->serialid(), target);
  }

  // optional .MsgPB.EMsgType msgType = 2 [default = _MSG_SKILL_EFFECT_Restore_MS2C];
  if (has_msgtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->msgtype(), target);
  }

  // optional int64 iggid = 3;
  if (has_iggid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->iggid(), target);
  }

  // optional int32 caster_mapobjectid = 4;
  if (has_caster_mapobjectid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->caster_mapobjectid(), target);
  }

  // optional int32 target_mapobjectid = 5;
  if (has_target_mapobjectid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->target_mapobjectid(), target);
  }

  // optional int32 skill_id = 6;
  if (has_skill_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->skill_id(), target);
  }

  // optional int32 hp_val = 7;
  if (has_hp_val()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->hp_val(), target);
  }

  // optional int32 mp_val = 8;
  if (has_mp_val()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->mp_val(), target);
  }

  // optional int32 currhp = 9;
  if (has_currhp()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->currhp(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.MsgSkillEffectRestoreMS2C)
  return target;
}

int MsgSkillEffectRestoreMS2C::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 SerialID = 1;
    if (has_serialid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->serialid());
    }

    // optional .MsgPB.EMsgType msgType = 2 [default = _MSG_SKILL_EFFECT_Restore_MS2C];
    if (has_msgtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgtype());
    }

    // optional int64 iggid = 3;
    if (has_iggid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->iggid());
    }

    // optional int32 caster_mapobjectid = 4;
    if (has_caster_mapobjectid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->caster_mapobjectid());
    }

    // optional int32 target_mapobjectid = 5;
    if (has_target_mapobjectid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->target_mapobjectid());
    }

    // optional int32 skill_id = 6;
    if (has_skill_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->skill_id());
    }

    // optional int32 hp_val = 7;
    if (has_hp_val()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->hp_val());
    }

    // optional int32 mp_val = 8;
    if (has_mp_val()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->mp_val());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional int32 currhp = 9;
    if (has_currhp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->currhp());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgSkillEffectRestoreMS2C::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgSkillEffectRestoreMS2C* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgSkillEffectRestoreMS2C*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgSkillEffectRestoreMS2C::MergeFrom(const MsgSkillEffectRestoreMS2C& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_serialid()) {
      set_serialid(from.serialid());
    }
    if (from.has_msgtype()) {
      set_msgtype(from.msgtype());
    }
    if (from.has_iggid()) {
      set_iggid(from.iggid());
    }
    if (from.has_caster_mapobjectid()) {
      set_caster_mapobjectid(from.caster_mapobjectid());
    }
    if (from.has_target_mapobjectid()) {
      set_target_mapobjectid(from.target_mapobjectid());
    }
    if (from.has_skill_id()) {
      set_skill_id(from.skill_id());
    }
    if (from.has_hp_val()) {
      set_hp_val(from.hp_val());
    }
    if (from.has_mp_val()) {
      set_mp_val(from.mp_val());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_currhp()) {
      set_currhp(from.currhp());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgSkillEffectRestoreMS2C::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgSkillEffectRestoreMS2C::CopyFrom(const MsgSkillEffectRestoreMS2C& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgSkillEffectRestoreMS2C::IsInitialized() const {

  return true;
}

void MsgSkillEffectRestoreMS2C::Swap(MsgSkillEffectRestoreMS2C* other) {
  if (other != this) {
    std::swap(serialid_, other->serialid_);
    std::swap(msgtype_, other->msgtype_);
    std::swap(iggid_, other->iggid_);
    std::swap(caster_mapobjectid_, other->caster_mapobjectid_);
    std::swap(target_mapobjectid_, other->target_mapobjectid_);
    std::swap(skill_id_, other->skill_id_);
    std::swap(hp_val_, other->hp_val_);
    std::swap(mp_val_, other->mp_val_);
    std::swap(currhp_, other->currhp_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgSkillEffectRestoreMS2C::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgSkillEffectRestoreMS2C_descriptor_;
  metadata.reflection = MsgSkillEffectRestoreMS2C_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgSkillEffectDotRestoreMS2C::kSerialIDFieldNumber;
const int MsgSkillEffectDotRestoreMS2C::kMsgTypeFieldNumber;
const int MsgSkillEffectDotRestoreMS2C::kIggidFieldNumber;
const int MsgSkillEffectDotRestoreMS2C::kCasterMapobjectidFieldNumber;
const int MsgSkillEffectDotRestoreMS2C::kTargetMapobjectidFieldNumber;
const int MsgSkillEffectDotRestoreMS2C::kSkillIdFieldNumber;
const int MsgSkillEffectDotRestoreMS2C::kHpValFieldNumber;
const int MsgSkillEffectDotRestoreMS2C::kMpValFieldNumber;
const int MsgSkillEffectDotRestoreMS2C::kCurrhpFieldNumber;
#endif  // !_MSC_VER

MsgSkillEffectDotRestoreMS2C::MsgSkillEffectDotRestoreMS2C()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.MsgSkillEffectDotRestoreMS2C)
}

void MsgSkillEffectDotRestoreMS2C::InitAsDefaultInstance() {
}

MsgSkillEffectDotRestoreMS2C::MsgSkillEffectDotRestoreMS2C(const MsgSkillEffectDotRestoreMS2C& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.MsgSkillEffectDotRestoreMS2C)
}

void MsgSkillEffectDotRestoreMS2C::SharedCtor() {
  _cached_size_ = 0;
  serialid_ = GOOGLE_LONGLONG(0);
  msgtype_ = 1275;
  iggid_ = GOOGLE_LONGLONG(0);
  caster_mapobjectid_ = 0;
  target_mapobjectid_ = 0;
  skill_id_ = 0;
  hp_val_ = 0;
  mp_val_ = 0;
  currhp_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgSkillEffectDotRestoreMS2C::~MsgSkillEffectDotRestoreMS2C() {
  // @@protoc_insertion_point(destructor:MsgPB.MsgSkillEffectDotRestoreMS2C)
  SharedDtor();
}

void MsgSkillEffectDotRestoreMS2C::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgSkillEffectDotRestoreMS2C::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgSkillEffectDotRestoreMS2C::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgSkillEffectDotRestoreMS2C_descriptor_;
}

const MsgSkillEffectDotRestoreMS2C& MsgSkillEffectDotRestoreMS2C::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgSkill_2eproto();
  return *default_instance_;
}

MsgSkillEffectDotRestoreMS2C* MsgSkillEffectDotRestoreMS2C::default_instance_ = NULL;

MsgSkillEffectDotRestoreMS2C* MsgSkillEffectDotRestoreMS2C::New() const {
  return new MsgSkillEffectDotRestoreMS2C;
}

void MsgSkillEffectDotRestoreMS2C::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<MsgSkillEffectDotRestoreMS2C*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 255) {
    ZR_(serialid_, iggid_);
    ZR_(caster_mapobjectid_, mp_val_);
    msgtype_ = 1275;
  }
  currhp_ = 0;

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgSkillEffectDotRestoreMS2C::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.MsgSkillEffectDotRestoreMS2C)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 SerialID = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &serialid_)));
          set_has_serialid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_msgType;
        break;
      }

      // optional .MsgPB.EMsgType msgType = 2 [default = _MSG_SKILL_EFFECT_DotRestore_MS2C];
      case 2: {
        if (tag == 16) {
         parse_msgType:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::EMsgType_IsValid(value)) {
            set_msgtype(static_cast< ::MsgPB::EMsgType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_iggid;
        break;
      }

      // optional int64 iggid = 3;
      case 3: {
        if (tag == 24) {
         parse_iggid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &iggid_)));
          set_has_iggid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_caster_mapobjectid;
        break;
      }

      // optional int32 caster_mapobjectid = 4;
      case 4: {
        if (tag == 32) {
         parse_caster_mapobjectid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &caster_mapobjectid_)));
          set_has_caster_mapobjectid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_target_mapobjectid;
        break;
      }

      // optional int32 target_mapobjectid = 5;
      case 5: {
        if (tag == 40) {
         parse_target_mapobjectid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &target_mapobjectid_)));
          set_has_target_mapobjectid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_skill_id;
        break;
      }

      // optional int32 skill_id = 6;
      case 6: {
        if (tag == 48) {
         parse_skill_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &skill_id_)));
          set_has_skill_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_hp_val;
        break;
      }

      // optional int32 hp_val = 7;
      case 7: {
        if (tag == 56) {
         parse_hp_val:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &hp_val_)));
          set_has_hp_val();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_mp_val;
        break;
      }

      // optional int32 mp_val = 8;
      case 8: {
        if (tag == 64) {
         parse_mp_val:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &mp_val_)));
          set_has_mp_val();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_currhp;
        break;
      }

      // optional int32 currhp = 9;
      case 9: {
        if (tag == 72) {
         parse_currhp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &currhp_)));
          set_has_currhp();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.MsgSkillEffectDotRestoreMS2C)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.MsgSkillEffectDotRestoreMS2C)
  return false;
#undef DO_
}

void MsgSkillEffectDotRestoreMS2C::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.MsgSkillEffectDotRestoreMS2C)
  // optional int64 SerialID = 1;
  if (has_serialid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->serialid(), output);
  }

  // optional .MsgPB.EMsgType msgType = 2 [default = _MSG_SKILL_EFFECT_DotRestore_MS2C];
  if (has_msgtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->msgtype(), output);
  }

  // optional int64 iggid = 3;
  if (has_iggid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->iggid(), output);
  }

  // optional int32 caster_mapobjectid = 4;
  if (has_caster_mapobjectid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->caster_mapobjectid(), output);
  }

  // optional int32 target_mapobjectid = 5;
  if (has_target_mapobjectid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->target_mapobjectid(), output);
  }

  // optional int32 skill_id = 6;
  if (has_skill_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->skill_id(), output);
  }

  // optional int32 hp_val = 7;
  if (has_hp_val()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->hp_val(), output);
  }

  // optional int32 mp_val = 8;
  if (has_mp_val()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->mp_val(), output);
  }

  // optional int32 currhp = 9;
  if (has_currhp()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->currhp(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.MsgSkillEffectDotRestoreMS2C)
}

::google::protobuf::uint8* MsgSkillEffectDotRestoreMS2C::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.MsgSkillEffectDotRestoreMS2C)
  // optional int64 SerialID = 1;
  if (has_serialid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->serialid(), target);
  }

  // optional .MsgPB.EMsgType msgType = 2 [default = _MSG_SKILL_EFFECT_DotRestore_MS2C];
  if (has_msgtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->msgtype(), target);
  }

  // optional int64 iggid = 3;
  if (has_iggid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->iggid(), target);
  }

  // optional int32 caster_mapobjectid = 4;
  if (has_caster_mapobjectid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->caster_mapobjectid(), target);
  }

  // optional int32 target_mapobjectid = 5;
  if (has_target_mapobjectid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->target_mapobjectid(), target);
  }

  // optional int32 skill_id = 6;
  if (has_skill_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->skill_id(), target);
  }

  // optional int32 hp_val = 7;
  if (has_hp_val()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->hp_val(), target);
  }

  // optional int32 mp_val = 8;
  if (has_mp_val()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->mp_val(), target);
  }

  // optional int32 currhp = 9;
  if (has_currhp()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->currhp(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.MsgSkillEffectDotRestoreMS2C)
  return target;
}

int MsgSkillEffectDotRestoreMS2C::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 SerialID = 1;
    if (has_serialid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->serialid());
    }

    // optional .MsgPB.EMsgType msgType = 2 [default = _MSG_SKILL_EFFECT_DotRestore_MS2C];
    if (has_msgtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgtype());
    }

    // optional int64 iggid = 3;
    if (has_iggid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->iggid());
    }

    // optional int32 caster_mapobjectid = 4;
    if (has_caster_mapobjectid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->caster_mapobjectid());
    }

    // optional int32 target_mapobjectid = 5;
    if (has_target_mapobjectid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->target_mapobjectid());
    }

    // optional int32 skill_id = 6;
    if (has_skill_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->skill_id());
    }

    // optional int32 hp_val = 7;
    if (has_hp_val()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->hp_val());
    }

    // optional int32 mp_val = 8;
    if (has_mp_val()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->mp_val());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional int32 currhp = 9;
    if (has_currhp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->currhp());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgSkillEffectDotRestoreMS2C::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgSkillEffectDotRestoreMS2C* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgSkillEffectDotRestoreMS2C*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgSkillEffectDotRestoreMS2C::MergeFrom(const MsgSkillEffectDotRestoreMS2C& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_serialid()) {
      set_serialid(from.serialid());
    }
    if (from.has_msgtype()) {
      set_msgtype(from.msgtype());
    }
    if (from.has_iggid()) {
      set_iggid(from.iggid());
    }
    if (from.has_caster_mapobjectid()) {
      set_caster_mapobjectid(from.caster_mapobjectid());
    }
    if (from.has_target_mapobjectid()) {
      set_target_mapobjectid(from.target_mapobjectid());
    }
    if (from.has_skill_id()) {
      set_skill_id(from.skill_id());
    }
    if (from.has_hp_val()) {
      set_hp_val(from.hp_val());
    }
    if (from.has_mp_val()) {
      set_mp_val(from.mp_val());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_currhp()) {
      set_currhp(from.currhp());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgSkillEffectDotRestoreMS2C::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgSkillEffectDotRestoreMS2C::CopyFrom(const MsgSkillEffectDotRestoreMS2C& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgSkillEffectDotRestoreMS2C::IsInitialized() const {

  return true;
}

void MsgSkillEffectDotRestoreMS2C::Swap(MsgSkillEffectDotRestoreMS2C* other) {
  if (other != this) {
    std::swap(serialid_, other->serialid_);
    std::swap(msgtype_, other->msgtype_);
    std::swap(iggid_, other->iggid_);
    std::swap(caster_mapobjectid_, other->caster_mapobjectid_);
    std::swap(target_mapobjectid_, other->target_mapobjectid_);
    std::swap(skill_id_, other->skill_id_);
    std::swap(hp_val_, other->hp_val_);
    std::swap(mp_val_, other->mp_val_);
    std::swap(currhp_, other->currhp_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgSkillEffectDotRestoreMS2C::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgSkillEffectDotRestoreMS2C_descriptor_;
  metadata.reflection = MsgSkillEffectDotRestoreMS2C_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgSkillEffectResurrectionMS2C::kSerialIDFieldNumber;
const int MsgSkillEffectResurrectionMS2C::kMsgTypeFieldNumber;
const int MsgSkillEffectResurrectionMS2C::kIggidFieldNumber;
const int MsgSkillEffectResurrectionMS2C::kCasterMapobjectidFieldNumber;
const int MsgSkillEffectResurrectionMS2C::kTargetMapobjectidFieldNumber;
const int MsgSkillEffectResurrectionMS2C::kSkillIdFieldNumber;
#endif  // !_MSC_VER

MsgSkillEffectResurrectionMS2C::MsgSkillEffectResurrectionMS2C()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.MsgSkillEffectResurrectionMS2C)
}

void MsgSkillEffectResurrectionMS2C::InitAsDefaultInstance() {
}

MsgSkillEffectResurrectionMS2C::MsgSkillEffectResurrectionMS2C(const MsgSkillEffectResurrectionMS2C& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.MsgSkillEffectResurrectionMS2C)
}

void MsgSkillEffectResurrectionMS2C::SharedCtor() {
  _cached_size_ = 0;
  serialid_ = GOOGLE_LONGLONG(0);
  msgtype_ = 1276;
  iggid_ = GOOGLE_LONGLONG(0);
  caster_mapobjectid_ = 0;
  target_mapobjectid_ = 0;
  skill_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgSkillEffectResurrectionMS2C::~MsgSkillEffectResurrectionMS2C() {
  // @@protoc_insertion_point(destructor:MsgPB.MsgSkillEffectResurrectionMS2C)
  SharedDtor();
}

void MsgSkillEffectResurrectionMS2C::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgSkillEffectResurrectionMS2C::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgSkillEffectResurrectionMS2C::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgSkillEffectResurrectionMS2C_descriptor_;
}

const MsgSkillEffectResurrectionMS2C& MsgSkillEffectResurrectionMS2C::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgSkill_2eproto();
  return *default_instance_;
}

MsgSkillEffectResurrectionMS2C* MsgSkillEffectResurrectionMS2C::default_instance_ = NULL;

MsgSkillEffectResurrectionMS2C* MsgSkillEffectResurrectionMS2C::New() const {
  return new MsgSkillEffectResurrectionMS2C;
}

void MsgSkillEffectResurrectionMS2C::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<MsgSkillEffectResurrectionMS2C*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 63) {
    ZR_(serialid_, iggid_);
    ZR_(caster_mapobjectid_, skill_id_);
    msgtype_ = 1276;
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgSkillEffectResurrectionMS2C::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.MsgSkillEffectResurrectionMS2C)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 SerialID = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &serialid_)));
          set_has_serialid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_msgType;
        break;
      }

      // optional .MsgPB.EMsgType msgType = 2 [default = _MSG_SKILL_EFFECT_Resurrection_MS2C];
      case 2: {
        if (tag == 16) {
         parse_msgType:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::EMsgType_IsValid(value)) {
            set_msgtype(static_cast< ::MsgPB::EMsgType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_iggid;
        break;
      }

      // optional int64 iggid = 3;
      case 3: {
        if (tag == 24) {
         parse_iggid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &iggid_)));
          set_has_iggid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_caster_mapobjectid;
        break;
      }

      // optional int32 caster_mapobjectid = 4;
      case 4: {
        if (tag == 32) {
         parse_caster_mapobjectid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &caster_mapobjectid_)));
          set_has_caster_mapobjectid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_target_mapobjectid;
        break;
      }

      // optional int32 target_mapobjectid = 5;
      case 5: {
        if (tag == 40) {
         parse_target_mapobjectid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &target_mapobjectid_)));
          set_has_target_mapobjectid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_skill_id;
        break;
      }

      // optional int32 skill_id = 6;
      case 6: {
        if (tag == 48) {
         parse_skill_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &skill_id_)));
          set_has_skill_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.MsgSkillEffectResurrectionMS2C)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.MsgSkillEffectResurrectionMS2C)
  return false;
#undef DO_
}

void MsgSkillEffectResurrectionMS2C::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.MsgSkillEffectResurrectionMS2C)
  // optional int64 SerialID = 1;
  if (has_serialid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->serialid(), output);
  }

  // optional .MsgPB.EMsgType msgType = 2 [default = _MSG_SKILL_EFFECT_Resurrection_MS2C];
  if (has_msgtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->msgtype(), output);
  }

  // optional int64 iggid = 3;
  if (has_iggid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->iggid(), output);
  }

  // optional int32 caster_mapobjectid = 4;
  if (has_caster_mapobjectid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->caster_mapobjectid(), output);
  }

  // optional int32 target_mapobjectid = 5;
  if (has_target_mapobjectid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->target_mapobjectid(), output);
  }

  // optional int32 skill_id = 6;
  if (has_skill_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->skill_id(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.MsgSkillEffectResurrectionMS2C)
}

::google::protobuf::uint8* MsgSkillEffectResurrectionMS2C::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.MsgSkillEffectResurrectionMS2C)
  // optional int64 SerialID = 1;
  if (has_serialid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->serialid(), target);
  }

  // optional .MsgPB.EMsgType msgType = 2 [default = _MSG_SKILL_EFFECT_Resurrection_MS2C];
  if (has_msgtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->msgtype(), target);
  }

  // optional int64 iggid = 3;
  if (has_iggid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->iggid(), target);
  }

  // optional int32 caster_mapobjectid = 4;
  if (has_caster_mapobjectid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->caster_mapobjectid(), target);
  }

  // optional int32 target_mapobjectid = 5;
  if (has_target_mapobjectid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->target_mapobjectid(), target);
  }

  // optional int32 skill_id = 6;
  if (has_skill_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->skill_id(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.MsgSkillEffectResurrectionMS2C)
  return target;
}

int MsgSkillEffectResurrectionMS2C::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 SerialID = 1;
    if (has_serialid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->serialid());
    }

    // optional .MsgPB.EMsgType msgType = 2 [default = _MSG_SKILL_EFFECT_Resurrection_MS2C];
    if (has_msgtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgtype());
    }

    // optional int64 iggid = 3;
    if (has_iggid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->iggid());
    }

    // optional int32 caster_mapobjectid = 4;
    if (has_caster_mapobjectid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->caster_mapobjectid());
    }

    // optional int32 target_mapobjectid = 5;
    if (has_target_mapobjectid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->target_mapobjectid());
    }

    // optional int32 skill_id = 6;
    if (has_skill_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->skill_id());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgSkillEffectResurrectionMS2C::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgSkillEffectResurrectionMS2C* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgSkillEffectResurrectionMS2C*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgSkillEffectResurrectionMS2C::MergeFrom(const MsgSkillEffectResurrectionMS2C& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_serialid()) {
      set_serialid(from.serialid());
    }
    if (from.has_msgtype()) {
      set_msgtype(from.msgtype());
    }
    if (from.has_iggid()) {
      set_iggid(from.iggid());
    }
    if (from.has_caster_mapobjectid()) {
      set_caster_mapobjectid(from.caster_mapobjectid());
    }
    if (from.has_target_mapobjectid()) {
      set_target_mapobjectid(from.target_mapobjectid());
    }
    if (from.has_skill_id()) {
      set_skill_id(from.skill_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgSkillEffectResurrectionMS2C::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgSkillEffectResurrectionMS2C::CopyFrom(const MsgSkillEffectResurrectionMS2C& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgSkillEffectResurrectionMS2C::IsInitialized() const {

  return true;
}

void MsgSkillEffectResurrectionMS2C::Swap(MsgSkillEffectResurrectionMS2C* other) {
  if (other != this) {
    std::swap(serialid_, other->serialid_);
    std::swap(msgtype_, other->msgtype_);
    std::swap(iggid_, other->iggid_);
    std::swap(caster_mapobjectid_, other->caster_mapobjectid_);
    std::swap(target_mapobjectid_, other->target_mapobjectid_);
    std::swap(skill_id_, other->skill_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgSkillEffectResurrectionMS2C::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgSkillEffectResurrectionMS2C_descriptor_;
  metadata.reflection = MsgSkillEffectResurrectionMS2C_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgSkillTeleportMS2C::kMsgTypeFieldNumber;
const int MsgSkillTeleportMS2C::kIggidFieldNumber;
const int MsgSkillTeleportMS2C::kSerialIDFieldNumber;
const int MsgSkillTeleportMS2C::kCasterMapobjectidFieldNumber;
const int MsgSkillTeleportMS2C::kSkillIdFieldNumber;
const int MsgSkillTeleportMS2C::kTargetPosXFieldNumber;
const int MsgSkillTeleportMS2C::kTargetPosYFieldNumber;
#endif  // !_MSC_VER

MsgSkillTeleportMS2C::MsgSkillTeleportMS2C()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.MsgSkillTeleportMS2C)
}

void MsgSkillTeleportMS2C::InitAsDefaultInstance() {
}

MsgSkillTeleportMS2C::MsgSkillTeleportMS2C(const MsgSkillTeleportMS2C& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.MsgSkillTeleportMS2C)
}

void MsgSkillTeleportMS2C::SharedCtor() {
  _cached_size_ = 0;
  msgtype_ = 1261;
  iggid_ = GOOGLE_LONGLONG(0);
  serialid_ = GOOGLE_LONGLONG(0);
  caster_mapobjectid_ = 0;
  skill_id_ = 0;
  target_pos_x_ = 0;
  target_pos_y_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgSkillTeleportMS2C::~MsgSkillTeleportMS2C() {
  // @@protoc_insertion_point(destructor:MsgPB.MsgSkillTeleportMS2C)
  SharedDtor();
}

void MsgSkillTeleportMS2C::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgSkillTeleportMS2C::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgSkillTeleportMS2C::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgSkillTeleportMS2C_descriptor_;
}

const MsgSkillTeleportMS2C& MsgSkillTeleportMS2C::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgSkill_2eproto();
  return *default_instance_;
}

MsgSkillTeleportMS2C* MsgSkillTeleportMS2C::default_instance_ = NULL;

MsgSkillTeleportMS2C* MsgSkillTeleportMS2C::New() const {
  return new MsgSkillTeleportMS2C;
}

void MsgSkillTeleportMS2C::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<MsgSkillTeleportMS2C*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 127) {
    ZR_(caster_mapobjectid_, target_pos_y_);
    msgtype_ = 1261;
    iggid_ = GOOGLE_LONGLONG(0);
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgSkillTeleportMS2C::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.MsgSkillTeleportMS2C)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_SKILL_MAPOBJ_TELEPORT_MS2C];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::EMsgType_IsValid(value)) {
            set_msgtype(static_cast< ::MsgPB::EMsgType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_iggid;
        break;
      }

      // optional int64 iggid = 2;
      case 2: {
        if (tag == 16) {
         parse_iggid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &iggid_)));
          set_has_iggid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_SerialID;
        break;
      }

      // optional int64 SerialID = 3;
      case 3: {
        if (tag == 24) {
         parse_SerialID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &serialid_)));
          set_has_serialid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_caster_mapobjectid;
        break;
      }

      // optional int32 caster_mapobjectid = 4;
      case 4: {
        if (tag == 32) {
         parse_caster_mapobjectid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &caster_mapobjectid_)));
          set_has_caster_mapobjectid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_skill_id;
        break;
      }

      // optional int32 skill_id = 5;
      case 5: {
        if (tag == 40) {
         parse_skill_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &skill_id_)));
          set_has_skill_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_target_pos_x;
        break;
      }

      // optional int32 target_pos_x = 6;
      case 6: {
        if (tag == 48) {
         parse_target_pos_x:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &target_pos_x_)));
          set_has_target_pos_x();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_target_pos_y;
        break;
      }

      // optional int32 target_pos_y = 7;
      case 7: {
        if (tag == 56) {
         parse_target_pos_y:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &target_pos_y_)));
          set_has_target_pos_y();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.MsgSkillTeleportMS2C)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.MsgSkillTeleportMS2C)
  return false;
#undef DO_
}

void MsgSkillTeleportMS2C::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.MsgSkillTeleportMS2C)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_SKILL_MAPOBJ_TELEPORT_MS2C];
  if (has_msgtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->msgtype(), output);
  }

  // optional int64 iggid = 2;
  if (has_iggid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->iggid(), output);
  }

  // optional int64 SerialID = 3;
  if (has_serialid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->serialid(), output);
  }

  // optional int32 caster_mapobjectid = 4;
  if (has_caster_mapobjectid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->caster_mapobjectid(), output);
  }

  // optional int32 skill_id = 5;
  if (has_skill_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->skill_id(), output);
  }

  // optional int32 target_pos_x = 6;
  if (has_target_pos_x()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->target_pos_x(), output);
  }

  // optional int32 target_pos_y = 7;
  if (has_target_pos_y()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->target_pos_y(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.MsgSkillTeleportMS2C)
}

::google::protobuf::uint8* MsgSkillTeleportMS2C::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.MsgSkillTeleportMS2C)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_SKILL_MAPOBJ_TELEPORT_MS2C];
  if (has_msgtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->msgtype(), target);
  }

  // optional int64 iggid = 2;
  if (has_iggid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->iggid(), target);
  }

  // optional int64 SerialID = 3;
  if (has_serialid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->serialid(), target);
  }

  // optional int32 caster_mapobjectid = 4;
  if (has_caster_mapobjectid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->caster_mapobjectid(), target);
  }

  // optional int32 skill_id = 5;
  if (has_skill_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->skill_id(), target);
  }

  // optional int32 target_pos_x = 6;
  if (has_target_pos_x()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->target_pos_x(), target);
  }

  // optional int32 target_pos_y = 7;
  if (has_target_pos_y()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->target_pos_y(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.MsgSkillTeleportMS2C)
  return target;
}

int MsgSkillTeleportMS2C::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_SKILL_MAPOBJ_TELEPORT_MS2C];
    if (has_msgtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgtype());
    }

    // optional int64 iggid = 2;
    if (has_iggid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->iggid());
    }

    // optional int64 SerialID = 3;
    if (has_serialid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->serialid());
    }

    // optional int32 caster_mapobjectid = 4;
    if (has_caster_mapobjectid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->caster_mapobjectid());
    }

    // optional int32 skill_id = 5;
    if (has_skill_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->skill_id());
    }

    // optional int32 target_pos_x = 6;
    if (has_target_pos_x()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->target_pos_x());
    }

    // optional int32 target_pos_y = 7;
    if (has_target_pos_y()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->target_pos_y());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgSkillTeleportMS2C::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgSkillTeleportMS2C* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgSkillTeleportMS2C*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgSkillTeleportMS2C::MergeFrom(const MsgSkillTeleportMS2C& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msgtype()) {
      set_msgtype(from.msgtype());
    }
    if (from.has_iggid()) {
      set_iggid(from.iggid());
    }
    if (from.has_serialid()) {
      set_serialid(from.serialid());
    }
    if (from.has_caster_mapobjectid()) {
      set_caster_mapobjectid(from.caster_mapobjectid());
    }
    if (from.has_skill_id()) {
      set_skill_id(from.skill_id());
    }
    if (from.has_target_pos_x()) {
      set_target_pos_x(from.target_pos_x());
    }
    if (from.has_target_pos_y()) {
      set_target_pos_y(from.target_pos_y());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgSkillTeleportMS2C::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgSkillTeleportMS2C::CopyFrom(const MsgSkillTeleportMS2C& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgSkillTeleportMS2C::IsInitialized() const {

  return true;
}

void MsgSkillTeleportMS2C::Swap(MsgSkillTeleportMS2C* other) {
  if (other != this) {
    std::swap(msgtype_, other->msgtype_);
    std::swap(iggid_, other->iggid_);
    std::swap(serialid_, other->serialid_);
    std::swap(caster_mapobjectid_, other->caster_mapobjectid_);
    std::swap(skill_id_, other->skill_id_);
    std::swap(target_pos_x_, other->target_pos_x_);
    std::swap(target_pos_y_, other->target_pos_y_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgSkillTeleportMS2C::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgSkillTeleportMS2C_descriptor_;
  metadata.reflection = MsgSkillTeleportMS2C_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PreviewInfo::kMillisecondFieldNumber;
const int PreviewInfo::kTargetPosXFieldNumber;
const int PreviewInfo::kTargetPosYFieldNumber;
const int PreviewInfo::kSkillIdFieldNumber;
const int PreviewInfo::kTargetMapobjectidsFieldNumber;
const int PreviewInfo::kCasterPosXFieldNumber;
const int PreviewInfo::kCasterPosYFieldNumber;
#endif  // !_MSC_VER

PreviewInfo::PreviewInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.PreviewInfo)
}

void PreviewInfo::InitAsDefaultInstance() {
}

PreviewInfo::PreviewInfo(const PreviewInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.PreviewInfo)
}

void PreviewInfo::SharedCtor() {
  _cached_size_ = 0;
  millisecond_ = 0;
  target_pos_x_ = 0;
  target_pos_y_ = 0;
  skill_id_ = 0;
  caster_pos_x_ = 0;
  caster_pos_y_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PreviewInfo::~PreviewInfo() {
  // @@protoc_insertion_point(destructor:MsgPB.PreviewInfo)
  SharedDtor();
}

void PreviewInfo::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PreviewInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PreviewInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PreviewInfo_descriptor_;
}

const PreviewInfo& PreviewInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgSkill_2eproto();
  return *default_instance_;
}

PreviewInfo* PreviewInfo::default_instance_ = NULL;

PreviewInfo* PreviewInfo::New() const {
  return new PreviewInfo;
}

void PreviewInfo::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<PreviewInfo*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 111) {
    ZR_(millisecond_, skill_id_);
    ZR_(caster_pos_x_, caster_pos_y_);
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  target_mapobjectids_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PreviewInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.PreviewInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 millisecond = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &millisecond_)));
          set_has_millisecond();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_target_pos_x;
        break;
      }

      // optional int32 target_pos_x = 2;
      case 2: {
        if (tag == 16) {
         parse_target_pos_x:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &target_pos_x_)));
          set_has_target_pos_x();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_target_pos_y;
        break;
      }

      // optional int32 target_pos_y = 3;
      case 3: {
        if (tag == 24) {
         parse_target_pos_y:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &target_pos_y_)));
          set_has_target_pos_y();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_skill_id;
        break;
      }

      // optional int32 skill_id = 4;
      case 4: {
        if (tag == 32) {
         parse_skill_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &skill_id_)));
          set_has_skill_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_target_mapobjectids;
        break;
      }

      // repeated int32 target_mapobjectids = 5;
      case 5: {
        if (tag == 40) {
         parse_target_mapobjectids:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 40, input, this->mutable_target_mapobjectids())));
        } else if (tag == 42) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_target_mapobjectids())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_target_mapobjectids;
        if (input->ExpectTag(48)) goto parse_caster_pos_x;
        break;
      }

      // optional int32 caster_pos_x = 6;
      case 6: {
        if (tag == 48) {
         parse_caster_pos_x:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &caster_pos_x_)));
          set_has_caster_pos_x();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_caster_pos_y;
        break;
      }

      // optional int32 caster_pos_y = 7;
      case 7: {
        if (tag == 56) {
         parse_caster_pos_y:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &caster_pos_y_)));
          set_has_caster_pos_y();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.PreviewInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.PreviewInfo)
  return false;
#undef DO_
}

void PreviewInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.PreviewInfo)
  // optional int32 millisecond = 1;
  if (has_millisecond()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->millisecond(), output);
  }

  // optional int32 target_pos_x = 2;
  if (has_target_pos_x()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->target_pos_x(), output);
  }

  // optional int32 target_pos_y = 3;
  if (has_target_pos_y()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->target_pos_y(), output);
  }

  // optional int32 skill_id = 4;
  if (has_skill_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->skill_id(), output);
  }

  // repeated int32 target_mapobjectids = 5;
  for (int i = 0; i < this->target_mapobjectids_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      5, this->target_mapobjectids(i), output);
  }

  // optional int32 caster_pos_x = 6;
  if (has_caster_pos_x()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->caster_pos_x(), output);
  }

  // optional int32 caster_pos_y = 7;
  if (has_caster_pos_y()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->caster_pos_y(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.PreviewInfo)
}

::google::protobuf::uint8* PreviewInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.PreviewInfo)
  // optional int32 millisecond = 1;
  if (has_millisecond()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->millisecond(), target);
  }

  // optional int32 target_pos_x = 2;
  if (has_target_pos_x()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->target_pos_x(), target);
  }

  // optional int32 target_pos_y = 3;
  if (has_target_pos_y()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->target_pos_y(), target);
  }

  // optional int32 skill_id = 4;
  if (has_skill_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->skill_id(), target);
  }

  // repeated int32 target_mapobjectids = 5;
  for (int i = 0; i < this->target_mapobjectids_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(5, this->target_mapobjectids(i), target);
  }

  // optional int32 caster_pos_x = 6;
  if (has_caster_pos_x()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->caster_pos_x(), target);
  }

  // optional int32 caster_pos_y = 7;
  if (has_caster_pos_y()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->caster_pos_y(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.PreviewInfo)
  return target;
}

int PreviewInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 millisecond = 1;
    if (has_millisecond()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->millisecond());
    }

    // optional int32 target_pos_x = 2;
    if (has_target_pos_x()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->target_pos_x());
    }

    // optional int32 target_pos_y = 3;
    if (has_target_pos_y()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->target_pos_y());
    }

    // optional int32 skill_id = 4;
    if (has_skill_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->skill_id());
    }

    // optional int32 caster_pos_x = 6;
    if (has_caster_pos_x()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->caster_pos_x());
    }

    // optional int32 caster_pos_y = 7;
    if (has_caster_pos_y()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->caster_pos_y());
    }

  }
  // repeated int32 target_mapobjectids = 5;
  {
    int data_size = 0;
    for (int i = 0; i < this->target_mapobjectids_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->target_mapobjectids(i));
    }
    total_size += 1 * this->target_mapobjectids_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PreviewInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PreviewInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PreviewInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PreviewInfo::MergeFrom(const PreviewInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  target_mapobjectids_.MergeFrom(from.target_mapobjectids_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_millisecond()) {
      set_millisecond(from.millisecond());
    }
    if (from.has_target_pos_x()) {
      set_target_pos_x(from.target_pos_x());
    }
    if (from.has_target_pos_y()) {
      set_target_pos_y(from.target_pos_y());
    }
    if (from.has_skill_id()) {
      set_skill_id(from.skill_id());
    }
    if (from.has_caster_pos_x()) {
      set_caster_pos_x(from.caster_pos_x());
    }
    if (from.has_caster_pos_y()) {
      set_caster_pos_y(from.caster_pos_y());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PreviewInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PreviewInfo::CopyFrom(const PreviewInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PreviewInfo::IsInitialized() const {

  return true;
}

void PreviewInfo::Swap(PreviewInfo* other) {
  if (other != this) {
    std::swap(millisecond_, other->millisecond_);
    std::swap(target_pos_x_, other->target_pos_x_);
    std::swap(target_pos_y_, other->target_pos_y_);
    std::swap(skill_id_, other->skill_id_);
    target_mapobjectids_.Swap(&other->target_mapobjectids_);
    std::swap(caster_pos_x_, other->caster_pos_x_);
    std::swap(caster_pos_y_, other->caster_pos_y_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PreviewInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PreviewInfo_descriptor_;
  metadata.reflection = PreviewInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgSkillPreviewS2C::kMsgTypeFieldNumber;
const int MsgSkillPreviewS2C::kIggidFieldNumber;
const int MsgSkillPreviewS2C::kSerialIDFieldNumber;
const int MsgSkillPreviewS2C::kCasterMapobjectidFieldNumber;
const int MsgSkillPreviewS2C::kSkillsFieldNumber;
#endif  // !_MSC_VER

MsgSkillPreviewS2C::MsgSkillPreviewS2C()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.MsgSkillPreviewS2C)
}

void MsgSkillPreviewS2C::InitAsDefaultInstance() {
}

MsgSkillPreviewS2C::MsgSkillPreviewS2C(const MsgSkillPreviewS2C& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.MsgSkillPreviewS2C)
}

void MsgSkillPreviewS2C::SharedCtor() {
  _cached_size_ = 0;
  msgtype_ = 1262;
  iggid_ = GOOGLE_LONGLONG(0);
  serialid_ = GOOGLE_LONGLONG(0);
  caster_mapobjectid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgSkillPreviewS2C::~MsgSkillPreviewS2C() {
  // @@protoc_insertion_point(destructor:MsgPB.MsgSkillPreviewS2C)
  SharedDtor();
}

void MsgSkillPreviewS2C::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgSkillPreviewS2C::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgSkillPreviewS2C::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgSkillPreviewS2C_descriptor_;
}

const MsgSkillPreviewS2C& MsgSkillPreviewS2C::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgSkill_2eproto();
  return *default_instance_;
}

MsgSkillPreviewS2C* MsgSkillPreviewS2C::default_instance_ = NULL;

MsgSkillPreviewS2C* MsgSkillPreviewS2C::New() const {
  return new MsgSkillPreviewS2C;
}

void MsgSkillPreviewS2C::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<MsgSkillPreviewS2C*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 15) {
    ZR_(caster_mapobjectid_, serialid_);
    msgtype_ = 1262;
    iggid_ = GOOGLE_LONGLONG(0);
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  skills_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgSkillPreviewS2C::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.MsgSkillPreviewS2C)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_SKILL_PREVIEW_S2C];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::EMsgType_IsValid(value)) {
            set_msgtype(static_cast< ::MsgPB::EMsgType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_iggid;
        break;
      }

      // optional int64 iggid = 2;
      case 2: {
        if (tag == 16) {
         parse_iggid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &iggid_)));
          set_has_iggid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_SerialID;
        break;
      }

      // optional int64 SerialID = 3;
      case 3: {
        if (tag == 24) {
         parse_SerialID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &serialid_)));
          set_has_serialid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_caster_mapobjectid;
        break;
      }

      // optional int32 caster_mapobjectid = 4;
      case 4: {
        if (tag == 32) {
         parse_caster_mapobjectid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &caster_mapobjectid_)));
          set_has_caster_mapobjectid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_skills;
        break;
      }

      // repeated .MsgPB.PreviewInfo skills = 5;
      case 5: {
        if (tag == 42) {
         parse_skills:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_skills()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_skills;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.MsgSkillPreviewS2C)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.MsgSkillPreviewS2C)
  return false;
#undef DO_
}

void MsgSkillPreviewS2C::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.MsgSkillPreviewS2C)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_SKILL_PREVIEW_S2C];
  if (has_msgtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->msgtype(), output);
  }

  // optional int64 iggid = 2;
  if (has_iggid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->iggid(), output);
  }

  // optional int64 SerialID = 3;
  if (has_serialid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->serialid(), output);
  }

  // optional int32 caster_mapobjectid = 4;
  if (has_caster_mapobjectid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->caster_mapobjectid(), output);
  }

  // repeated .MsgPB.PreviewInfo skills = 5;
  for (int i = 0; i < this->skills_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->skills(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.MsgSkillPreviewS2C)
}

::google::protobuf::uint8* MsgSkillPreviewS2C::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.MsgSkillPreviewS2C)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_SKILL_PREVIEW_S2C];
  if (has_msgtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->msgtype(), target);
  }

  // optional int64 iggid = 2;
  if (has_iggid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->iggid(), target);
  }

  // optional int64 SerialID = 3;
  if (has_serialid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->serialid(), target);
  }

  // optional int32 caster_mapobjectid = 4;
  if (has_caster_mapobjectid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->caster_mapobjectid(), target);
  }

  // repeated .MsgPB.PreviewInfo skills = 5;
  for (int i = 0; i < this->skills_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->skills(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.MsgSkillPreviewS2C)
  return target;
}

int MsgSkillPreviewS2C::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_SKILL_PREVIEW_S2C];
    if (has_msgtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgtype());
    }

    // optional int64 iggid = 2;
    if (has_iggid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->iggid());
    }

    // optional int64 SerialID = 3;
    if (has_serialid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->serialid());
    }

    // optional int32 caster_mapobjectid = 4;
    if (has_caster_mapobjectid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->caster_mapobjectid());
    }

  }
  // repeated .MsgPB.PreviewInfo skills = 5;
  total_size += 1 * this->skills_size();
  for (int i = 0; i < this->skills_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->skills(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgSkillPreviewS2C::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgSkillPreviewS2C* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgSkillPreviewS2C*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgSkillPreviewS2C::MergeFrom(const MsgSkillPreviewS2C& from) {
  GOOGLE_CHECK_NE(&from, this);
  skills_.MergeFrom(from.skills_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msgtype()) {
      set_msgtype(from.msgtype());
    }
    if (from.has_iggid()) {
      set_iggid(from.iggid());
    }
    if (from.has_serialid()) {
      set_serialid(from.serialid());
    }
    if (from.has_caster_mapobjectid()) {
      set_caster_mapobjectid(from.caster_mapobjectid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgSkillPreviewS2C::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgSkillPreviewS2C::CopyFrom(const MsgSkillPreviewS2C& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgSkillPreviewS2C::IsInitialized() const {

  return true;
}

void MsgSkillPreviewS2C::Swap(MsgSkillPreviewS2C* other) {
  if (other != this) {
    std::swap(msgtype_, other->msgtype_);
    std::swap(iggid_, other->iggid_);
    std::swap(serialid_, other->serialid_);
    std::swap(caster_mapobjectid_, other->caster_mapobjectid_);
    skills_.Swap(&other->skills_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgSkillPreviewS2C::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgSkillPreviewS2C_descriptor_;
  metadata.reflection = MsgSkillPreviewS2C_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgSkillActivePassiveC2S::kMsgTypeFieldNumber;
const int MsgSkillActivePassiveC2S::kIggidFieldNumber;
const int MsgSkillActivePassiveC2S::kPassiveSkillIdFieldNumber;
#endif  // !_MSC_VER

MsgSkillActivePassiveC2S::MsgSkillActivePassiveC2S()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.MsgSkillActivePassiveC2S)
}

void MsgSkillActivePassiveC2S::InitAsDefaultInstance() {
}

MsgSkillActivePassiveC2S::MsgSkillActivePassiveC2S(const MsgSkillActivePassiveC2S& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.MsgSkillActivePassiveC2S)
}

void MsgSkillActivePassiveC2S::SharedCtor() {
  _cached_size_ = 0;
  msgtype_ = 1263;
  iggid_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgSkillActivePassiveC2S::~MsgSkillActivePassiveC2S() {
  // @@protoc_insertion_point(destructor:MsgPB.MsgSkillActivePassiveC2S)
  SharedDtor();
}

void MsgSkillActivePassiveC2S::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgSkillActivePassiveC2S::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgSkillActivePassiveC2S::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgSkillActivePassiveC2S_descriptor_;
}

const MsgSkillActivePassiveC2S& MsgSkillActivePassiveC2S::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgSkill_2eproto();
  return *default_instance_;
}

MsgSkillActivePassiveC2S* MsgSkillActivePassiveC2S::default_instance_ = NULL;

MsgSkillActivePassiveC2S* MsgSkillActivePassiveC2S::New() const {
  return new MsgSkillActivePassiveC2S;
}

void MsgSkillActivePassiveC2S::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    msgtype_ = 1263;
    iggid_ = GOOGLE_LONGLONG(0);
  }
  passive_skill_id_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgSkillActivePassiveC2S::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.MsgSkillActivePassiveC2S)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_SKILL_ACTIVE_PASSIVE_C2S];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::EMsgType_IsValid(value)) {
            set_msgtype(static_cast< ::MsgPB::EMsgType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_iggid;
        break;
      }

      // optional int64 iggid = 2;
      case 2: {
        if (tag == 16) {
         parse_iggid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &iggid_)));
          set_has_iggid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_passive_skill_id;
        break;
      }

      // repeated int32 passive_skill_id = 3;
      case 3: {
        if (tag == 24) {
         parse_passive_skill_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 24, input, this->mutable_passive_skill_id())));
        } else if (tag == 26) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_passive_skill_id())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_passive_skill_id;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.MsgSkillActivePassiveC2S)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.MsgSkillActivePassiveC2S)
  return false;
#undef DO_
}

void MsgSkillActivePassiveC2S::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.MsgSkillActivePassiveC2S)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_SKILL_ACTIVE_PASSIVE_C2S];
  if (has_msgtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->msgtype(), output);
  }

  // optional int64 iggid = 2;
  if (has_iggid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->iggid(), output);
  }

  // repeated int32 passive_skill_id = 3;
  for (int i = 0; i < this->passive_skill_id_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      3, this->passive_skill_id(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.MsgSkillActivePassiveC2S)
}

::google::protobuf::uint8* MsgSkillActivePassiveC2S::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.MsgSkillActivePassiveC2S)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_SKILL_ACTIVE_PASSIVE_C2S];
  if (has_msgtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->msgtype(), target);
  }

  // optional int64 iggid = 2;
  if (has_iggid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->iggid(), target);
  }

  // repeated int32 passive_skill_id = 3;
  for (int i = 0; i < this->passive_skill_id_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(3, this->passive_skill_id(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.MsgSkillActivePassiveC2S)
  return target;
}

int MsgSkillActivePassiveC2S::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_SKILL_ACTIVE_PASSIVE_C2S];
    if (has_msgtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgtype());
    }

    // optional int64 iggid = 2;
    if (has_iggid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->iggid());
    }

  }
  // repeated int32 passive_skill_id = 3;
  {
    int data_size = 0;
    for (int i = 0; i < this->passive_skill_id_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->passive_skill_id(i));
    }
    total_size += 1 * this->passive_skill_id_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgSkillActivePassiveC2S::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgSkillActivePassiveC2S* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgSkillActivePassiveC2S*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgSkillActivePassiveC2S::MergeFrom(const MsgSkillActivePassiveC2S& from) {
  GOOGLE_CHECK_NE(&from, this);
  passive_skill_id_.MergeFrom(from.passive_skill_id_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msgtype()) {
      set_msgtype(from.msgtype());
    }
    if (from.has_iggid()) {
      set_iggid(from.iggid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgSkillActivePassiveC2S::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgSkillActivePassiveC2S::CopyFrom(const MsgSkillActivePassiveC2S& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgSkillActivePassiveC2S::IsInitialized() const {

  return true;
}

void MsgSkillActivePassiveC2S::Swap(MsgSkillActivePassiveC2S* other) {
  if (other != this) {
    std::swap(msgtype_, other->msgtype_);
    std::swap(iggid_, other->iggid_);
    passive_skill_id_.Swap(&other->passive_skill_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgSkillActivePassiveC2S::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgSkillActivePassiveC2S_descriptor_;
  metadata.reflection = MsgSkillActivePassiveC2S_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ActivePassiveSkillResult::kEcFieldNumber;
const int ActivePassiveSkillResult::kPassiveSkillIdFieldNumber;
#endif  // !_MSC_VER

ActivePassiveSkillResult::ActivePassiveSkillResult()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.ActivePassiveSkillResult)
}

void ActivePassiveSkillResult::InitAsDefaultInstance() {
}

ActivePassiveSkillResult::ActivePassiveSkillResult(const ActivePassiveSkillResult& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.ActivePassiveSkillResult)
}

void ActivePassiveSkillResult::SharedCtor() {
  _cached_size_ = 0;
  ec_ = 0;
  passive_skill_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ActivePassiveSkillResult::~ActivePassiveSkillResult() {
  // @@protoc_insertion_point(destructor:MsgPB.ActivePassiveSkillResult)
  SharedDtor();
}

void ActivePassiveSkillResult::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ActivePassiveSkillResult::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ActivePassiveSkillResult::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ActivePassiveSkillResult_descriptor_;
}

const ActivePassiveSkillResult& ActivePassiveSkillResult::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgSkill_2eproto();
  return *default_instance_;
}

ActivePassiveSkillResult* ActivePassiveSkillResult::default_instance_ = NULL;

ActivePassiveSkillResult* ActivePassiveSkillResult::New() const {
  return new ActivePassiveSkillResult;
}

void ActivePassiveSkillResult::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<ActivePassiveSkillResult*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(ec_, passive_skill_id_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ActivePassiveSkillResult::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.ActivePassiveSkillResult)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .MsgPB.E_ErrorCode ec = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::E_ErrorCode_IsValid(value)) {
            set_ec(static_cast< ::MsgPB::E_ErrorCode >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_passive_skill_id;
        break;
      }

      // optional int32 passive_skill_id = 2;
      case 2: {
        if (tag == 16) {
         parse_passive_skill_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &passive_skill_id_)));
          set_has_passive_skill_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.ActivePassiveSkillResult)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.ActivePassiveSkillResult)
  return false;
#undef DO_
}

void ActivePassiveSkillResult::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.ActivePassiveSkillResult)
  // optional .MsgPB.E_ErrorCode ec = 1;
  if (has_ec()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->ec(), output);
  }

  // optional int32 passive_skill_id = 2;
  if (has_passive_skill_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->passive_skill_id(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.ActivePassiveSkillResult)
}

::google::protobuf::uint8* ActivePassiveSkillResult::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.ActivePassiveSkillResult)
  // optional .MsgPB.E_ErrorCode ec = 1;
  if (has_ec()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->ec(), target);
  }

  // optional int32 passive_skill_id = 2;
  if (has_passive_skill_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->passive_skill_id(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.ActivePassiveSkillResult)
  return target;
}

int ActivePassiveSkillResult::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .MsgPB.E_ErrorCode ec = 1;
    if (has_ec()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->ec());
    }

    // optional int32 passive_skill_id = 2;
    if (has_passive_skill_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->passive_skill_id());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ActivePassiveSkillResult::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ActivePassiveSkillResult* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ActivePassiveSkillResult*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ActivePassiveSkillResult::MergeFrom(const ActivePassiveSkillResult& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_ec()) {
      set_ec(from.ec());
    }
    if (from.has_passive_skill_id()) {
      set_passive_skill_id(from.passive_skill_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ActivePassiveSkillResult::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ActivePassiveSkillResult::CopyFrom(const ActivePassiveSkillResult& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ActivePassiveSkillResult::IsInitialized() const {

  return true;
}

void ActivePassiveSkillResult::Swap(ActivePassiveSkillResult* other) {
  if (other != this) {
    std::swap(ec_, other->ec_);
    std::swap(passive_skill_id_, other->passive_skill_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ActivePassiveSkillResult::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ActivePassiveSkillResult_descriptor_;
  metadata.reflection = ActivePassiveSkillResult_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgSkillActivePassiveS2C::kMsgTypeFieldNumber;
const int MsgSkillActivePassiveS2C::kIggidFieldNumber;
const int MsgSkillActivePassiveS2C::kResultsFieldNumber;
const int MsgSkillActivePassiveS2C::kCasterMapObjectIdFieldNumber;
#endif  // !_MSC_VER

MsgSkillActivePassiveS2C::MsgSkillActivePassiveS2C()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.MsgSkillActivePassiveS2C)
}

void MsgSkillActivePassiveS2C::InitAsDefaultInstance() {
}

MsgSkillActivePassiveS2C::MsgSkillActivePassiveS2C(const MsgSkillActivePassiveS2C& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.MsgSkillActivePassiveS2C)
}

void MsgSkillActivePassiveS2C::SharedCtor() {
  _cached_size_ = 0;
  msgtype_ = 1264;
  iggid_ = GOOGLE_LONGLONG(0);
  caster_map_object_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgSkillActivePassiveS2C::~MsgSkillActivePassiveS2C() {
  // @@protoc_insertion_point(destructor:MsgPB.MsgSkillActivePassiveS2C)
  SharedDtor();
}

void MsgSkillActivePassiveS2C::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgSkillActivePassiveS2C::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgSkillActivePassiveS2C::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgSkillActivePassiveS2C_descriptor_;
}

const MsgSkillActivePassiveS2C& MsgSkillActivePassiveS2C::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgSkill_2eproto();
  return *default_instance_;
}

MsgSkillActivePassiveS2C* MsgSkillActivePassiveS2C::default_instance_ = NULL;

MsgSkillActivePassiveS2C* MsgSkillActivePassiveS2C::New() const {
  return new MsgSkillActivePassiveS2C;
}

void MsgSkillActivePassiveS2C::Clear() {
  if (_has_bits_[0 / 32] & 11) {
    msgtype_ = 1264;
    iggid_ = GOOGLE_LONGLONG(0);
    caster_map_object_id_ = 0;
  }
  results_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgSkillActivePassiveS2C::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.MsgSkillActivePassiveS2C)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_SKILL_ACTIVE_PASSIVE_S2C];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::EMsgType_IsValid(value)) {
            set_msgtype(static_cast< ::MsgPB::EMsgType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_iggid;
        break;
      }

      // optional int64 iggid = 2;
      case 2: {
        if (tag == 16) {
         parse_iggid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &iggid_)));
          set_has_iggid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_results;
        break;
      }

      // repeated .MsgPB.ActivePassiveSkillResult results = 3;
      case 3: {
        if (tag == 26) {
         parse_results:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_results()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_results;
        if (input->ExpectTag(32)) goto parse_caster_map_object_id;
        break;
      }

      // optional int32 caster_map_object_id = 4;
      case 4: {
        if (tag == 32) {
         parse_caster_map_object_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &caster_map_object_id_)));
          set_has_caster_map_object_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.MsgSkillActivePassiveS2C)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.MsgSkillActivePassiveS2C)
  return false;
#undef DO_
}

void MsgSkillActivePassiveS2C::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.MsgSkillActivePassiveS2C)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_SKILL_ACTIVE_PASSIVE_S2C];
  if (has_msgtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->msgtype(), output);
  }

  // optional int64 iggid = 2;
  if (has_iggid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->iggid(), output);
  }

  // repeated .MsgPB.ActivePassiveSkillResult results = 3;
  for (int i = 0; i < this->results_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->results(i), output);
  }

  // optional int32 caster_map_object_id = 4;
  if (has_caster_map_object_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->caster_map_object_id(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.MsgSkillActivePassiveS2C)
}

::google::protobuf::uint8* MsgSkillActivePassiveS2C::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.MsgSkillActivePassiveS2C)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_SKILL_ACTIVE_PASSIVE_S2C];
  if (has_msgtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->msgtype(), target);
  }

  // optional int64 iggid = 2;
  if (has_iggid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->iggid(), target);
  }

  // repeated .MsgPB.ActivePassiveSkillResult results = 3;
  for (int i = 0; i < this->results_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->results(i), target);
  }

  // optional int32 caster_map_object_id = 4;
  if (has_caster_map_object_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->caster_map_object_id(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.MsgSkillActivePassiveS2C)
  return target;
}

int MsgSkillActivePassiveS2C::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_SKILL_ACTIVE_PASSIVE_S2C];
    if (has_msgtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgtype());
    }

    // optional int64 iggid = 2;
    if (has_iggid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->iggid());
    }

    // optional int32 caster_map_object_id = 4;
    if (has_caster_map_object_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->caster_map_object_id());
    }

  }
  // repeated .MsgPB.ActivePassiveSkillResult results = 3;
  total_size += 1 * this->results_size();
  for (int i = 0; i < this->results_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->results(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgSkillActivePassiveS2C::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgSkillActivePassiveS2C* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgSkillActivePassiveS2C*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgSkillActivePassiveS2C::MergeFrom(const MsgSkillActivePassiveS2C& from) {
  GOOGLE_CHECK_NE(&from, this);
  results_.MergeFrom(from.results_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msgtype()) {
      set_msgtype(from.msgtype());
    }
    if (from.has_iggid()) {
      set_iggid(from.iggid());
    }
    if (from.has_caster_map_object_id()) {
      set_caster_map_object_id(from.caster_map_object_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgSkillActivePassiveS2C::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgSkillActivePassiveS2C::CopyFrom(const MsgSkillActivePassiveS2C& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgSkillActivePassiveS2C::IsInitialized() const {

  return true;
}

void MsgSkillActivePassiveS2C::Swap(MsgSkillActivePassiveS2C* other) {
  if (other != this) {
    std::swap(msgtype_, other->msgtype_);
    std::swap(iggid_, other->iggid_);
    results_.Swap(&other->results_);
    std::swap(caster_map_object_id_, other->caster_map_object_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgSkillActivePassiveS2C::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgSkillActivePassiveS2C_descriptor_;
  metadata.reflection = MsgSkillActivePassiveS2C_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgSkillInactivePassiveC2S::kMsgTypeFieldNumber;
const int MsgSkillInactivePassiveC2S::kIggidFieldNumber;
const int MsgSkillInactivePassiveC2S::kPassiveSkillIdFieldNumber;
#endif  // !_MSC_VER

MsgSkillInactivePassiveC2S::MsgSkillInactivePassiveC2S()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.MsgSkillInactivePassiveC2S)
}

void MsgSkillInactivePassiveC2S::InitAsDefaultInstance() {
}

MsgSkillInactivePassiveC2S::MsgSkillInactivePassiveC2S(const MsgSkillInactivePassiveC2S& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.MsgSkillInactivePassiveC2S)
}

void MsgSkillInactivePassiveC2S::SharedCtor() {
  _cached_size_ = 0;
  msgtype_ = 1265;
  iggid_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgSkillInactivePassiveC2S::~MsgSkillInactivePassiveC2S() {
  // @@protoc_insertion_point(destructor:MsgPB.MsgSkillInactivePassiveC2S)
  SharedDtor();
}

void MsgSkillInactivePassiveC2S::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgSkillInactivePassiveC2S::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgSkillInactivePassiveC2S::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgSkillInactivePassiveC2S_descriptor_;
}

const MsgSkillInactivePassiveC2S& MsgSkillInactivePassiveC2S::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgSkill_2eproto();
  return *default_instance_;
}

MsgSkillInactivePassiveC2S* MsgSkillInactivePassiveC2S::default_instance_ = NULL;

MsgSkillInactivePassiveC2S* MsgSkillInactivePassiveC2S::New() const {
  return new MsgSkillInactivePassiveC2S;
}

void MsgSkillInactivePassiveC2S::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    msgtype_ = 1265;
    iggid_ = GOOGLE_LONGLONG(0);
  }
  passive_skill_id_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgSkillInactivePassiveC2S::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.MsgSkillInactivePassiveC2S)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_SKILL_INACTIVE_PASSIVE_C2S];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::EMsgType_IsValid(value)) {
            set_msgtype(static_cast< ::MsgPB::EMsgType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_iggid;
        break;
      }

      // optional int64 iggid = 2;
      case 2: {
        if (tag == 16) {
         parse_iggid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &iggid_)));
          set_has_iggid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_passive_skill_id;
        break;
      }

      // repeated int32 passive_skill_id = 3;
      case 3: {
        if (tag == 24) {
         parse_passive_skill_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 24, input, this->mutable_passive_skill_id())));
        } else if (tag == 26) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_passive_skill_id())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_passive_skill_id;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.MsgSkillInactivePassiveC2S)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.MsgSkillInactivePassiveC2S)
  return false;
#undef DO_
}

void MsgSkillInactivePassiveC2S::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.MsgSkillInactivePassiveC2S)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_SKILL_INACTIVE_PASSIVE_C2S];
  if (has_msgtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->msgtype(), output);
  }

  // optional int64 iggid = 2;
  if (has_iggid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->iggid(), output);
  }

  // repeated int32 passive_skill_id = 3;
  for (int i = 0; i < this->passive_skill_id_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      3, this->passive_skill_id(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.MsgSkillInactivePassiveC2S)
}

::google::protobuf::uint8* MsgSkillInactivePassiveC2S::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.MsgSkillInactivePassiveC2S)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_SKILL_INACTIVE_PASSIVE_C2S];
  if (has_msgtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->msgtype(), target);
  }

  // optional int64 iggid = 2;
  if (has_iggid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->iggid(), target);
  }

  // repeated int32 passive_skill_id = 3;
  for (int i = 0; i < this->passive_skill_id_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(3, this->passive_skill_id(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.MsgSkillInactivePassiveC2S)
  return target;
}

int MsgSkillInactivePassiveC2S::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_SKILL_INACTIVE_PASSIVE_C2S];
    if (has_msgtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgtype());
    }

    // optional int64 iggid = 2;
    if (has_iggid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->iggid());
    }

  }
  // repeated int32 passive_skill_id = 3;
  {
    int data_size = 0;
    for (int i = 0; i < this->passive_skill_id_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->passive_skill_id(i));
    }
    total_size += 1 * this->passive_skill_id_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgSkillInactivePassiveC2S::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgSkillInactivePassiveC2S* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgSkillInactivePassiveC2S*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgSkillInactivePassiveC2S::MergeFrom(const MsgSkillInactivePassiveC2S& from) {
  GOOGLE_CHECK_NE(&from, this);
  passive_skill_id_.MergeFrom(from.passive_skill_id_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msgtype()) {
      set_msgtype(from.msgtype());
    }
    if (from.has_iggid()) {
      set_iggid(from.iggid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgSkillInactivePassiveC2S::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgSkillInactivePassiveC2S::CopyFrom(const MsgSkillInactivePassiveC2S& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgSkillInactivePassiveC2S::IsInitialized() const {

  return true;
}

void MsgSkillInactivePassiveC2S::Swap(MsgSkillInactivePassiveC2S* other) {
  if (other != this) {
    std::swap(msgtype_, other->msgtype_);
    std::swap(iggid_, other->iggid_);
    passive_skill_id_.Swap(&other->passive_skill_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgSkillInactivePassiveC2S::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgSkillInactivePassiveC2S_descriptor_;
  metadata.reflection = MsgSkillInactivePassiveC2S_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int InactivePassiveSkillResult::kEcFieldNumber;
const int InactivePassiveSkillResult::kPassiveSkillIdFieldNumber;
#endif  // !_MSC_VER

InactivePassiveSkillResult::InactivePassiveSkillResult()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.InactivePassiveSkillResult)
}

void InactivePassiveSkillResult::InitAsDefaultInstance() {
}

InactivePassiveSkillResult::InactivePassiveSkillResult(const InactivePassiveSkillResult& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.InactivePassiveSkillResult)
}

void InactivePassiveSkillResult::SharedCtor() {
  _cached_size_ = 0;
  ec_ = 0;
  passive_skill_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

InactivePassiveSkillResult::~InactivePassiveSkillResult() {
  // @@protoc_insertion_point(destructor:MsgPB.InactivePassiveSkillResult)
  SharedDtor();
}

void InactivePassiveSkillResult::SharedDtor() {
  if (this != default_instance_) {
  }
}

void InactivePassiveSkillResult::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* InactivePassiveSkillResult::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return InactivePassiveSkillResult_descriptor_;
}

const InactivePassiveSkillResult& InactivePassiveSkillResult::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgSkill_2eproto();
  return *default_instance_;
}

InactivePassiveSkillResult* InactivePassiveSkillResult::default_instance_ = NULL;

InactivePassiveSkillResult* InactivePassiveSkillResult::New() const {
  return new InactivePassiveSkillResult;
}

void InactivePassiveSkillResult::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<InactivePassiveSkillResult*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(ec_, passive_skill_id_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool InactivePassiveSkillResult::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.InactivePassiveSkillResult)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .MsgPB.E_ErrorCode ec = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::E_ErrorCode_IsValid(value)) {
            set_ec(static_cast< ::MsgPB::E_ErrorCode >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_passive_skill_id;
        break;
      }

      // optional int32 passive_skill_id = 2;
      case 2: {
        if (tag == 16) {
         parse_passive_skill_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &passive_skill_id_)));
          set_has_passive_skill_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.InactivePassiveSkillResult)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.InactivePassiveSkillResult)
  return false;
#undef DO_
}

void InactivePassiveSkillResult::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.InactivePassiveSkillResult)
  // optional .MsgPB.E_ErrorCode ec = 1;
  if (has_ec()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->ec(), output);
  }

  // optional int32 passive_skill_id = 2;
  if (has_passive_skill_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->passive_skill_id(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.InactivePassiveSkillResult)
}

::google::protobuf::uint8* InactivePassiveSkillResult::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.InactivePassiveSkillResult)
  // optional .MsgPB.E_ErrorCode ec = 1;
  if (has_ec()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->ec(), target);
  }

  // optional int32 passive_skill_id = 2;
  if (has_passive_skill_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->passive_skill_id(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.InactivePassiveSkillResult)
  return target;
}

int InactivePassiveSkillResult::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .MsgPB.E_ErrorCode ec = 1;
    if (has_ec()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->ec());
    }

    // optional int32 passive_skill_id = 2;
    if (has_passive_skill_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->passive_skill_id());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void InactivePassiveSkillResult::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const InactivePassiveSkillResult* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const InactivePassiveSkillResult*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void InactivePassiveSkillResult::MergeFrom(const InactivePassiveSkillResult& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_ec()) {
      set_ec(from.ec());
    }
    if (from.has_passive_skill_id()) {
      set_passive_skill_id(from.passive_skill_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void InactivePassiveSkillResult::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InactivePassiveSkillResult::CopyFrom(const InactivePassiveSkillResult& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InactivePassiveSkillResult::IsInitialized() const {

  return true;
}

void InactivePassiveSkillResult::Swap(InactivePassiveSkillResult* other) {
  if (other != this) {
    std::swap(ec_, other->ec_);
    std::swap(passive_skill_id_, other->passive_skill_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata InactivePassiveSkillResult::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = InactivePassiveSkillResult_descriptor_;
  metadata.reflection = InactivePassiveSkillResult_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgSkillInactivePassiveS2C::kMsgTypeFieldNumber;
const int MsgSkillInactivePassiveS2C::kIggidFieldNumber;
const int MsgSkillInactivePassiveS2C::kResultsFieldNumber;
const int MsgSkillInactivePassiveS2C::kCasterMapObjectIdFieldNumber;
#endif  // !_MSC_VER

MsgSkillInactivePassiveS2C::MsgSkillInactivePassiveS2C()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.MsgSkillInactivePassiveS2C)
}

void MsgSkillInactivePassiveS2C::InitAsDefaultInstance() {
}

MsgSkillInactivePassiveS2C::MsgSkillInactivePassiveS2C(const MsgSkillInactivePassiveS2C& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.MsgSkillInactivePassiveS2C)
}

void MsgSkillInactivePassiveS2C::SharedCtor() {
  _cached_size_ = 0;
  msgtype_ = 1266;
  iggid_ = GOOGLE_LONGLONG(0);
  caster_map_object_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgSkillInactivePassiveS2C::~MsgSkillInactivePassiveS2C() {
  // @@protoc_insertion_point(destructor:MsgPB.MsgSkillInactivePassiveS2C)
  SharedDtor();
}

void MsgSkillInactivePassiveS2C::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgSkillInactivePassiveS2C::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgSkillInactivePassiveS2C::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgSkillInactivePassiveS2C_descriptor_;
}

const MsgSkillInactivePassiveS2C& MsgSkillInactivePassiveS2C::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgSkill_2eproto();
  return *default_instance_;
}

MsgSkillInactivePassiveS2C* MsgSkillInactivePassiveS2C::default_instance_ = NULL;

MsgSkillInactivePassiveS2C* MsgSkillInactivePassiveS2C::New() const {
  return new MsgSkillInactivePassiveS2C;
}

void MsgSkillInactivePassiveS2C::Clear() {
  if (_has_bits_[0 / 32] & 11) {
    msgtype_ = 1266;
    iggid_ = GOOGLE_LONGLONG(0);
    caster_map_object_id_ = 0;
  }
  results_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgSkillInactivePassiveS2C::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.MsgSkillInactivePassiveS2C)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_SKILL_INACTIVE_PASSIVE_S2C];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::EMsgType_IsValid(value)) {
            set_msgtype(static_cast< ::MsgPB::EMsgType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_iggid;
        break;
      }

      // optional int64 iggid = 2;
      case 2: {
        if (tag == 16) {
         parse_iggid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &iggid_)));
          set_has_iggid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_results;
        break;
      }

      // repeated .MsgPB.InactivePassiveSkillResult results = 3;
      case 3: {
        if (tag == 26) {
         parse_results:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_results()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_results;
        if (input->ExpectTag(32)) goto parse_caster_map_object_id;
        break;
      }

      // optional int32 caster_map_object_id = 4;
      case 4: {
        if (tag == 32) {
         parse_caster_map_object_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &caster_map_object_id_)));
          set_has_caster_map_object_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.MsgSkillInactivePassiveS2C)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.MsgSkillInactivePassiveS2C)
  return false;
#undef DO_
}

void MsgSkillInactivePassiveS2C::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.MsgSkillInactivePassiveS2C)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_SKILL_INACTIVE_PASSIVE_S2C];
  if (has_msgtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->msgtype(), output);
  }

  // optional int64 iggid = 2;
  if (has_iggid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->iggid(), output);
  }

  // repeated .MsgPB.InactivePassiveSkillResult results = 3;
  for (int i = 0; i < this->results_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->results(i), output);
  }

  // optional int32 caster_map_object_id = 4;
  if (has_caster_map_object_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->caster_map_object_id(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.MsgSkillInactivePassiveS2C)
}

::google::protobuf::uint8* MsgSkillInactivePassiveS2C::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.MsgSkillInactivePassiveS2C)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_SKILL_INACTIVE_PASSIVE_S2C];
  if (has_msgtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->msgtype(), target);
  }

  // optional int64 iggid = 2;
  if (has_iggid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->iggid(), target);
  }

  // repeated .MsgPB.InactivePassiveSkillResult results = 3;
  for (int i = 0; i < this->results_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->results(i), target);
  }

  // optional int32 caster_map_object_id = 4;
  if (has_caster_map_object_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->caster_map_object_id(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.MsgSkillInactivePassiveS2C)
  return target;
}

int MsgSkillInactivePassiveS2C::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_SKILL_INACTIVE_PASSIVE_S2C];
    if (has_msgtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgtype());
    }

    // optional int64 iggid = 2;
    if (has_iggid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->iggid());
    }

    // optional int32 caster_map_object_id = 4;
    if (has_caster_map_object_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->caster_map_object_id());
    }

  }
  // repeated .MsgPB.InactivePassiveSkillResult results = 3;
  total_size += 1 * this->results_size();
  for (int i = 0; i < this->results_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->results(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgSkillInactivePassiveS2C::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgSkillInactivePassiveS2C* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgSkillInactivePassiveS2C*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgSkillInactivePassiveS2C::MergeFrom(const MsgSkillInactivePassiveS2C& from) {
  GOOGLE_CHECK_NE(&from, this);
  results_.MergeFrom(from.results_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msgtype()) {
      set_msgtype(from.msgtype());
    }
    if (from.has_iggid()) {
      set_iggid(from.iggid());
    }
    if (from.has_caster_map_object_id()) {
      set_caster_map_object_id(from.caster_map_object_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgSkillInactivePassiveS2C::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgSkillInactivePassiveS2C::CopyFrom(const MsgSkillInactivePassiveS2C& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgSkillInactivePassiveS2C::IsInitialized() const {

  return true;
}

void MsgSkillInactivePassiveS2C::Swap(MsgSkillInactivePassiveS2C* other) {
  if (other != this) {
    std::swap(msgtype_, other->msgtype_);
    std::swap(iggid_, other->iggid_);
    results_.Swap(&other->results_);
    std::swap(caster_map_object_id_, other->caster_map_object_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgSkillInactivePassiveS2C::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgSkillInactivePassiveS2C_descriptor_;
  metadata.reflection = MsgSkillInactivePassiveS2C_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgSkillManualMagicBallHurt_C2MS::kMsgTypeFieldNumber;
const int MsgSkillManualMagicBallHurt_C2MS::kIggidFieldNumber;
const int MsgSkillManualMagicBallHurt_C2MS::kMagicObjidFieldNumber;
const int MsgSkillManualMagicBallHurt_C2MS::kPosXFieldNumber;
const int MsgSkillManualMagicBallHurt_C2MS::kPosYFieldNumber;
const int MsgSkillManualMagicBallHurt_C2MS::kHurtMapObjsFieldNumber;
#endif  // !_MSC_VER

MsgSkillManualMagicBallHurt_C2MS::MsgSkillManualMagicBallHurt_C2MS()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.MsgSkillManualMagicBallHurt_C2MS)
}

void MsgSkillManualMagicBallHurt_C2MS::InitAsDefaultInstance() {
}

MsgSkillManualMagicBallHurt_C2MS::MsgSkillManualMagicBallHurt_C2MS(const MsgSkillManualMagicBallHurt_C2MS& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.MsgSkillManualMagicBallHurt_C2MS)
}

void MsgSkillManualMagicBallHurt_C2MS::SharedCtor() {
  _cached_size_ = 0;
  msgtype_ = 1279;
  iggid_ = GOOGLE_LONGLONG(0);
  magic_objid_ = 0;
  pos_x_ = 0;
  pos_y_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgSkillManualMagicBallHurt_C2MS::~MsgSkillManualMagicBallHurt_C2MS() {
  // @@protoc_insertion_point(destructor:MsgPB.MsgSkillManualMagicBallHurt_C2MS)
  SharedDtor();
}

void MsgSkillManualMagicBallHurt_C2MS::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgSkillManualMagicBallHurt_C2MS::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgSkillManualMagicBallHurt_C2MS::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgSkillManualMagicBallHurt_C2MS_descriptor_;
}

const MsgSkillManualMagicBallHurt_C2MS& MsgSkillManualMagicBallHurt_C2MS::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgSkill_2eproto();
  return *default_instance_;
}

MsgSkillManualMagicBallHurt_C2MS* MsgSkillManualMagicBallHurt_C2MS::default_instance_ = NULL;

MsgSkillManualMagicBallHurt_C2MS* MsgSkillManualMagicBallHurt_C2MS::New() const {
  return new MsgSkillManualMagicBallHurt_C2MS;
}

void MsgSkillManualMagicBallHurt_C2MS::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<MsgSkillManualMagicBallHurt_C2MS*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 31) {
    ZR_(magic_objid_, pos_y_);
    msgtype_ = 1279;
    iggid_ = GOOGLE_LONGLONG(0);
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  hurt_map_objs_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgSkillManualMagicBallHurt_C2MS::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.MsgSkillManualMagicBallHurt_C2MS)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_SKILL_MANUAL_MAGIC_BALL_HURT_C2MS];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::EMsgType_IsValid(value)) {
            set_msgtype(static_cast< ::MsgPB::EMsgType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_iggid;
        break;
      }

      // optional int64 iggid = 2;
      case 2: {
        if (tag == 16) {
         parse_iggid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &iggid_)));
          set_has_iggid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_magic_objid;
        break;
      }

      // optional int32 magic_objid = 3;
      case 3: {
        if (tag == 24) {
         parse_magic_objid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &magic_objid_)));
          set_has_magic_objid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_pos_x;
        break;
      }

      // optional int32 pos_x = 4;
      case 4: {
        if (tag == 32) {
         parse_pos_x:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pos_x_)));
          set_has_pos_x();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_pos_y;
        break;
      }

      // optional int32 pos_y = 5;
      case 5: {
        if (tag == 40) {
         parse_pos_y:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pos_y_)));
          set_has_pos_y();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_hurt_map_objs;
        break;
      }

      // repeated int32 hurt_map_objs = 6;
      case 6: {
        if (tag == 48) {
         parse_hurt_map_objs:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 48, input, this->mutable_hurt_map_objs())));
        } else if (tag == 50) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_hurt_map_objs())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_hurt_map_objs;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.MsgSkillManualMagicBallHurt_C2MS)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.MsgSkillManualMagicBallHurt_C2MS)
  return false;
#undef DO_
}

void MsgSkillManualMagicBallHurt_C2MS::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.MsgSkillManualMagicBallHurt_C2MS)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_SKILL_MANUAL_MAGIC_BALL_HURT_C2MS];
  if (has_msgtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->msgtype(), output);
  }

  // optional int64 iggid = 2;
  if (has_iggid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->iggid(), output);
  }

  // optional int32 magic_objid = 3;
  if (has_magic_objid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->magic_objid(), output);
  }

  // optional int32 pos_x = 4;
  if (has_pos_x()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->pos_x(), output);
  }

  // optional int32 pos_y = 5;
  if (has_pos_y()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->pos_y(), output);
  }

  // repeated int32 hurt_map_objs = 6;
  for (int i = 0; i < this->hurt_map_objs_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      6, this->hurt_map_objs(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.MsgSkillManualMagicBallHurt_C2MS)
}

::google::protobuf::uint8* MsgSkillManualMagicBallHurt_C2MS::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.MsgSkillManualMagicBallHurt_C2MS)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_SKILL_MANUAL_MAGIC_BALL_HURT_C2MS];
  if (has_msgtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->msgtype(), target);
  }

  // optional int64 iggid = 2;
  if (has_iggid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->iggid(), target);
  }

  // optional int32 magic_objid = 3;
  if (has_magic_objid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->magic_objid(), target);
  }

  // optional int32 pos_x = 4;
  if (has_pos_x()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->pos_x(), target);
  }

  // optional int32 pos_y = 5;
  if (has_pos_y()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->pos_y(), target);
  }

  // repeated int32 hurt_map_objs = 6;
  for (int i = 0; i < this->hurt_map_objs_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(6, this->hurt_map_objs(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.MsgSkillManualMagicBallHurt_C2MS)
  return target;
}

int MsgSkillManualMagicBallHurt_C2MS::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_SKILL_MANUAL_MAGIC_BALL_HURT_C2MS];
    if (has_msgtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgtype());
    }

    // optional int64 iggid = 2;
    if (has_iggid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->iggid());
    }

    // optional int32 magic_objid = 3;
    if (has_magic_objid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->magic_objid());
    }

    // optional int32 pos_x = 4;
    if (has_pos_x()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pos_x());
    }

    // optional int32 pos_y = 5;
    if (has_pos_y()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pos_y());
    }

  }
  // repeated int32 hurt_map_objs = 6;
  {
    int data_size = 0;
    for (int i = 0; i < this->hurt_map_objs_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->hurt_map_objs(i));
    }
    total_size += 1 * this->hurt_map_objs_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgSkillManualMagicBallHurt_C2MS::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgSkillManualMagicBallHurt_C2MS* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgSkillManualMagicBallHurt_C2MS*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgSkillManualMagicBallHurt_C2MS::MergeFrom(const MsgSkillManualMagicBallHurt_C2MS& from) {
  GOOGLE_CHECK_NE(&from, this);
  hurt_map_objs_.MergeFrom(from.hurt_map_objs_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msgtype()) {
      set_msgtype(from.msgtype());
    }
    if (from.has_iggid()) {
      set_iggid(from.iggid());
    }
    if (from.has_magic_objid()) {
      set_magic_objid(from.magic_objid());
    }
    if (from.has_pos_x()) {
      set_pos_x(from.pos_x());
    }
    if (from.has_pos_y()) {
      set_pos_y(from.pos_y());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgSkillManualMagicBallHurt_C2MS::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgSkillManualMagicBallHurt_C2MS::CopyFrom(const MsgSkillManualMagicBallHurt_C2MS& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgSkillManualMagicBallHurt_C2MS::IsInitialized() const {

  return true;
}

void MsgSkillManualMagicBallHurt_C2MS::Swap(MsgSkillManualMagicBallHurt_C2MS* other) {
  if (other != this) {
    std::swap(msgtype_, other->msgtype_);
    std::swap(iggid_, other->iggid_);
    std::swap(magic_objid_, other->magic_objid_);
    std::swap(pos_x_, other->pos_x_);
    std::swap(pos_y_, other->pos_y_);
    hurt_map_objs_.Swap(&other->hurt_map_objs_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgSkillManualMagicBallHurt_C2MS::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgSkillManualMagicBallHurt_C2MS_descriptor_;
  metadata.reflection = MsgSkillManualMagicBallHurt_C2MS_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace MsgPB

// @@protoc_insertion_point(global_scope)
