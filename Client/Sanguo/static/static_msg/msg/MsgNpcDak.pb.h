// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MsgNpcDak.proto

#ifndef PROTOBUF_MsgNpcDak_2eproto__INCLUDED
#define PROTOBUF_MsgNpcDak_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "MsgType.pb.h"
// @@protoc_insertion_point(includes)

namespace MsgPB {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_MsgNpcDak_2eproto();
void protobuf_AssignDesc_MsgNpcDak_2eproto();
void protobuf_ShutdownFile_MsgNpcDak_2eproto();

class MsgNpcDakData;
class MsgNpcDakData_DakEvent;
class MsgNpcDakData_DakEnvoy;
class MsgNpcDakSyncS2C;
class MsgNpcDakUpdateCountryS2C;
class MsgNpcDakStartEventS2C;
class MsgNpcDakEndEventS2C;
class MsgNpcDakRobC2S;
class MsgNpcDakTrigInteractiveC2S;
class MsgNpcDakTrigInteractiveS2C;
class MsgNpcDakTrigInteractiveS2C_ParamData;
class MsgNpcDakEnvoyC2S;
class MsgNpcDakEnvoyS2C;
class MsgNpcDakEnvoySetParamC2S;
class MsgNpcDakEnvoySetParamS2C;
class MsgNpcDakEventShopStartC2S;

enum MsgNpcDakTrigInteractiveS2C_RESULT {
  MsgNpcDakTrigInteractiveS2C_RESULT_SUCCESS = 0,
  MsgNpcDakTrigInteractiveS2C_RESULT_ERR = 1
};
bool MsgNpcDakTrigInteractiveS2C_RESULT_IsValid(int value);
const MsgNpcDakTrigInteractiveS2C_RESULT MsgNpcDakTrigInteractiveS2C_RESULT_RESULT_MIN = MsgNpcDakTrigInteractiveS2C_RESULT_SUCCESS;
const MsgNpcDakTrigInteractiveS2C_RESULT MsgNpcDakTrigInteractiveS2C_RESULT_RESULT_MAX = MsgNpcDakTrigInteractiveS2C_RESULT_ERR;
const int MsgNpcDakTrigInteractiveS2C_RESULT_RESULT_ARRAYSIZE = MsgNpcDakTrigInteractiveS2C_RESULT_RESULT_MAX + 1;

const ::google::protobuf::EnumDescriptor* MsgNpcDakTrigInteractiveS2C_RESULT_descriptor();
inline const ::std::string& MsgNpcDakTrigInteractiveS2C_RESULT_Name(MsgNpcDakTrigInteractiveS2C_RESULT value) {
  return ::google::protobuf::internal::NameOfEnum(
    MsgNpcDakTrigInteractiveS2C_RESULT_descriptor(), value);
}
inline bool MsgNpcDakTrigInteractiveS2C_RESULT_Parse(
    const ::std::string& name, MsgNpcDakTrigInteractiveS2C_RESULT* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MsgNpcDakTrigInteractiveS2C_RESULT>(
    MsgNpcDakTrigInteractiveS2C_RESULT_descriptor(), name, value);
}
enum MsgNpcDakEnvoyS2C_RESULT {
  MsgNpcDakEnvoyS2C_RESULT_SUCCESS = 0,
  MsgNpcDakEnvoyS2C_RESULT_ERR = 1
};
bool MsgNpcDakEnvoyS2C_RESULT_IsValid(int value);
const MsgNpcDakEnvoyS2C_RESULT MsgNpcDakEnvoyS2C_RESULT_RESULT_MIN = MsgNpcDakEnvoyS2C_RESULT_SUCCESS;
const MsgNpcDakEnvoyS2C_RESULT MsgNpcDakEnvoyS2C_RESULT_RESULT_MAX = MsgNpcDakEnvoyS2C_RESULT_ERR;
const int MsgNpcDakEnvoyS2C_RESULT_RESULT_ARRAYSIZE = MsgNpcDakEnvoyS2C_RESULT_RESULT_MAX + 1;

const ::google::protobuf::EnumDescriptor* MsgNpcDakEnvoyS2C_RESULT_descriptor();
inline const ::std::string& MsgNpcDakEnvoyS2C_RESULT_Name(MsgNpcDakEnvoyS2C_RESULT value) {
  return ::google::protobuf::internal::NameOfEnum(
    MsgNpcDakEnvoyS2C_RESULT_descriptor(), value);
}
inline bool MsgNpcDakEnvoyS2C_RESULT_Parse(
    const ::std::string& name, MsgNpcDakEnvoyS2C_RESULT* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MsgNpcDakEnvoyS2C_RESULT>(
    MsgNpcDakEnvoyS2C_RESULT_descriptor(), name, value);
}
enum MsgNpcDakEnvoySetParamS2C_RESULT {
  MsgNpcDakEnvoySetParamS2C_RESULT_SUCCESS = 0,
  MsgNpcDakEnvoySetParamS2C_RESULT_ERR = 1
};
bool MsgNpcDakEnvoySetParamS2C_RESULT_IsValid(int value);
const MsgNpcDakEnvoySetParamS2C_RESULT MsgNpcDakEnvoySetParamS2C_RESULT_RESULT_MIN = MsgNpcDakEnvoySetParamS2C_RESULT_SUCCESS;
const MsgNpcDakEnvoySetParamS2C_RESULT MsgNpcDakEnvoySetParamS2C_RESULT_RESULT_MAX = MsgNpcDakEnvoySetParamS2C_RESULT_ERR;
const int MsgNpcDakEnvoySetParamS2C_RESULT_RESULT_ARRAYSIZE = MsgNpcDakEnvoySetParamS2C_RESULT_RESULT_MAX + 1;

const ::google::protobuf::EnumDescriptor* MsgNpcDakEnvoySetParamS2C_RESULT_descriptor();
inline const ::std::string& MsgNpcDakEnvoySetParamS2C_RESULT_Name(MsgNpcDakEnvoySetParamS2C_RESULT value) {
  return ::google::protobuf::internal::NameOfEnum(
    MsgNpcDakEnvoySetParamS2C_RESULT_descriptor(), value);
}
inline bool MsgNpcDakEnvoySetParamS2C_RESULT_Parse(
    const ::std::string& name, MsgNpcDakEnvoySetParamS2C_RESULT* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MsgNpcDakEnvoySetParamS2C_RESULT>(
    MsgNpcDakEnvoySetParamS2C_RESULT_descriptor(), name, value);
}
enum NPC_DAK_TRIG_TYPE {
  TRIG_GIFT = 0,
  TRIG_EXCHANGE = 1
};
bool NPC_DAK_TRIG_TYPE_IsValid(int value);
const NPC_DAK_TRIG_TYPE NPC_DAK_TRIG_TYPE_MIN = TRIG_GIFT;
const NPC_DAK_TRIG_TYPE NPC_DAK_TRIG_TYPE_MAX = TRIG_EXCHANGE;
const int NPC_DAK_TRIG_TYPE_ARRAYSIZE = NPC_DAK_TRIG_TYPE_MAX + 1;

const ::google::protobuf::EnumDescriptor* NPC_DAK_TRIG_TYPE_descriptor();
inline const ::std::string& NPC_DAK_TRIG_TYPE_Name(NPC_DAK_TRIG_TYPE value) {
  return ::google::protobuf::internal::NameOfEnum(
    NPC_DAK_TRIG_TYPE_descriptor(), value);
}
inline bool NPC_DAK_TRIG_TYPE_Parse(
    const ::std::string& name, NPC_DAK_TRIG_TYPE* value) {
  return ::google::protobuf::internal::ParseNamedEnum<NPC_DAK_TRIG_TYPE>(
    NPC_DAK_TRIG_TYPE_descriptor(), name, value);
}
// ===================================================================

class MsgNpcDakData_DakEvent : public ::google::protobuf::Message {
 public:
  MsgNpcDakData_DakEvent();
  virtual ~MsgNpcDakData_DakEvent();

  MsgNpcDakData_DakEvent(const MsgNpcDakData_DakEvent& from);

  inline MsgNpcDakData_DakEvent& operator=(const MsgNpcDakData_DakEvent& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgNpcDakData_DakEvent& default_instance();

  void Swap(MsgNpcDakData_DakEvent* other);

  // implements Message ----------------------------------------------

  MsgNpcDakData_DakEvent* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgNpcDakData_DakEvent& from);
  void MergeFrom(const MsgNpcDakData_DakEvent& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 idx = 1;
  inline bool has_idx() const;
  inline void clear_idx();
  static const int kIdxFieldNumber = 1;
  inline ::google::protobuf::int32 idx() const;
  inline void set_idx(::google::protobuf::int32 value);

  // optional int32 dataid = 2;
  inline bool has_dataid() const;
  inline void clear_dataid();
  static const int kDataidFieldNumber = 2;
  inline ::google::protobuf::int32 dataid() const;
  inline void set_dataid(::google::protobuf::int32 value);

  // optional int64 trig_time = 3;
  inline bool has_trig_time() const;
  inline void clear_trig_time();
  static const int kTrigTimeFieldNumber = 3;
  inline ::google::protobuf::int64 trig_time() const;
  inline void set_trig_time(::google::protobuf::int64 value);

  // optional int32 lev = 4;
  inline bool has_lev() const;
  inline void clear_lev();
  static const int kLevFieldNumber = 4;
  inline ::google::protobuf::int32 lev() const;
  inline void set_lev(::google::protobuf::int32 value);

  // optional int32 param = 5;
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 5;
  inline ::google::protobuf::int32 param() const;
  inline void set_param(::google::protobuf::int32 value);

  // optional int32 add_dip = 6;
  inline bool has_add_dip() const;
  inline void clear_add_dip();
  static const int kAddDipFieldNumber = 6;
  inline ::google::protobuf::int32 add_dip() const;
  inline void set_add_dip(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:MsgPB.MsgNpcDakData.DakEvent)
 private:
  inline void set_has_idx();
  inline void clear_has_idx();
  inline void set_has_dataid();
  inline void clear_has_dataid();
  inline void set_has_trig_time();
  inline void clear_has_trig_time();
  inline void set_has_lev();
  inline void clear_has_lev();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_add_dip();
  inline void clear_has_add_dip();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 idx_;
  ::google::protobuf::int32 dataid_;
  ::google::protobuf::int64 trig_time_;
  ::google::protobuf::int32 lev_;
  ::google::protobuf::int32 param_;
  ::google::protobuf::int32 add_dip_;
  friend void  protobuf_AddDesc_MsgNpcDak_2eproto();
  friend void protobuf_AssignDesc_MsgNpcDak_2eproto();
  friend void protobuf_ShutdownFile_MsgNpcDak_2eproto();

  void InitAsDefaultInstance();
  static MsgNpcDakData_DakEvent* default_instance_;
};
// -------------------------------------------------------------------

class MsgNpcDakData_DakEnvoy : public ::google::protobuf::Message {
 public:
  MsgNpcDakData_DakEnvoy();
  virtual ~MsgNpcDakData_DakEnvoy();

  MsgNpcDakData_DakEnvoy(const MsgNpcDakData_DakEnvoy& from);

  inline MsgNpcDakData_DakEnvoy& operator=(const MsgNpcDakData_DakEnvoy& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgNpcDakData_DakEnvoy& default_instance();

  void Swap(MsgNpcDakData_DakEnvoy* other);

  // implements Message ----------------------------------------------

  MsgNpcDakData_DakEnvoy* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgNpcDakData_DakEnvoy& from);
  void MergeFrom(const MsgNpcDakData_DakEnvoy& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 idx = 1;
  inline bool has_idx() const;
  inline void clear_idx();
  static const int kIdxFieldNumber = 1;
  inline ::google::protobuf::int32 idx() const;
  inline void set_idx(::google::protobuf::int32 value);

  // optional int32 dataid = 2;
  inline bool has_dataid() const;
  inline void clear_dataid();
  static const int kDataidFieldNumber = 2;
  inline ::google::protobuf::int32 dataid() const;
  inline void set_dataid(::google::protobuf::int32 value);

  // optional int32 type = 3;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 3;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // optional int64 trig_time = 4;
  inline bool has_trig_time() const;
  inline void clear_trig_time();
  static const int kTrigTimeFieldNumber = 4;
  inline ::google::protobuf::int64 trig_time() const;
  inline void set_trig_time(::google::protobuf::int64 value);

  // optional int32 param = 5;
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 5;
  inline ::google::protobuf::int32 param() const;
  inline void set_param(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:MsgPB.MsgNpcDakData.DakEnvoy)
 private:
  inline void set_has_idx();
  inline void clear_has_idx();
  inline void set_has_dataid();
  inline void clear_has_dataid();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_trig_time();
  inline void clear_has_trig_time();
  inline void set_has_param();
  inline void clear_has_param();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 idx_;
  ::google::protobuf::int32 dataid_;
  ::google::protobuf::int64 trig_time_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 param_;
  friend void  protobuf_AddDesc_MsgNpcDak_2eproto();
  friend void protobuf_AssignDesc_MsgNpcDak_2eproto();
  friend void protobuf_ShutdownFile_MsgNpcDak_2eproto();

  void InitAsDefaultInstance();
  static MsgNpcDakData_DakEnvoy* default_instance_;
};
// -------------------------------------------------------------------

class MsgNpcDakData : public ::google::protobuf::Message {
 public:
  MsgNpcDakData();
  virtual ~MsgNpcDakData();

  MsgNpcDakData(const MsgNpcDakData& from);

  inline MsgNpcDakData& operator=(const MsgNpcDakData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgNpcDakData& default_instance();

  void Swap(MsgNpcDakData* other);

  // implements Message ----------------------------------------------

  MsgNpcDakData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgNpcDakData& from);
  void MergeFrom(const MsgNpcDakData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef MsgNpcDakData_DakEvent DakEvent;
  typedef MsgNpcDakData_DakEnvoy DakEnvoy;

  // accessors -------------------------------------------------------

  // optional int64 uuid = 1;
  inline bool has_uuid() const;
  inline void clear_uuid();
  static const int kUuidFieldNumber = 1;
  inline ::google::protobuf::int64 uuid() const;
  inline void set_uuid(::google::protobuf::int64 value);

  // optional int32 diplomacy = 2;
  inline bool has_diplomacy() const;
  inline void clear_diplomacy();
  static const int kDiplomacyFieldNumber = 2;
  inline ::google::protobuf::int32 diplomacy() const;
  inline void set_diplomacy(::google::protobuf::int32 value);

  // repeated .MsgPB.MsgNpcDakData.DakEvent event = 3;
  inline int event_size() const;
  inline void clear_event();
  static const int kEventFieldNumber = 3;
  inline const ::MsgPB::MsgNpcDakData_DakEvent& event(int index) const;
  inline ::MsgPB::MsgNpcDakData_DakEvent* mutable_event(int index);
  inline ::MsgPB::MsgNpcDakData_DakEvent* add_event();
  inline const ::google::protobuf::RepeatedPtrField< ::MsgPB::MsgNpcDakData_DakEvent >&
      event() const;
  inline ::google::protobuf::RepeatedPtrField< ::MsgPB::MsgNpcDakData_DakEvent >*
      mutable_event();

  // optional int64 dirty = 4;
  inline bool has_dirty() const;
  inline void clear_dirty();
  static const int kDirtyFieldNumber = 4;
  inline ::google::protobuf::int64 dirty() const;
  inline void set_dirty(::google::protobuf::int64 value);

  // repeated .MsgPB.MsgNpcDakData.DakEnvoy envoy = 5;
  inline int envoy_size() const;
  inline void clear_envoy();
  static const int kEnvoyFieldNumber = 5;
  inline const ::MsgPB::MsgNpcDakData_DakEnvoy& envoy(int index) const;
  inline ::MsgPB::MsgNpcDakData_DakEnvoy* mutable_envoy(int index);
  inline ::MsgPB::MsgNpcDakData_DakEnvoy* add_envoy();
  inline const ::google::protobuf::RepeatedPtrField< ::MsgPB::MsgNpcDakData_DakEnvoy >&
      envoy() const;
  inline ::google::protobuf::RepeatedPtrField< ::MsgPB::MsgNpcDakData_DakEnvoy >*
      mutable_envoy();

  // @@protoc_insertion_point(class_scope:MsgPB.MsgNpcDakData)
 private:
  inline void set_has_uuid();
  inline void clear_has_uuid();
  inline void set_has_diplomacy();
  inline void clear_has_diplomacy();
  inline void set_has_dirty();
  inline void clear_has_dirty();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 uuid_;
  ::google::protobuf::RepeatedPtrField< ::MsgPB::MsgNpcDakData_DakEvent > event_;
  ::google::protobuf::int64 dirty_;
  ::google::protobuf::RepeatedPtrField< ::MsgPB::MsgNpcDakData_DakEnvoy > envoy_;
  ::google::protobuf::int32 diplomacy_;
  friend void  protobuf_AddDesc_MsgNpcDak_2eproto();
  friend void protobuf_AssignDesc_MsgNpcDak_2eproto();
  friend void protobuf_ShutdownFile_MsgNpcDak_2eproto();

  void InitAsDefaultInstance();
  static MsgNpcDakData* default_instance_;
};
// -------------------------------------------------------------------

class MsgNpcDakSyncS2C : public ::google::protobuf::Message {
 public:
  MsgNpcDakSyncS2C();
  virtual ~MsgNpcDakSyncS2C();

  MsgNpcDakSyncS2C(const MsgNpcDakSyncS2C& from);

  inline MsgNpcDakSyncS2C& operator=(const MsgNpcDakSyncS2C& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgNpcDakSyncS2C& default_instance();

  void Swap(MsgNpcDakSyncS2C* other);

  // implements Message ----------------------------------------------

  MsgNpcDakSyncS2C* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgNpcDakSyncS2C& from);
  void MergeFrom(const MsgNpcDakSyncS2C& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_NPC_DAK_SYNC_S2C];
  inline bool has_msgtype() const;
  inline void clear_msgtype();
  static const int kMsgTypeFieldNumber = 1;
  inline ::MsgPB::EMsgType msgtype() const;
  inline void set_msgtype(::MsgPB::EMsgType value);

  // repeated .MsgPB.MsgNpcDakData data = 2;
  inline int data_size() const;
  inline void clear_data();
  static const int kDataFieldNumber = 2;
  inline const ::MsgPB::MsgNpcDakData& data(int index) const;
  inline ::MsgPB::MsgNpcDakData* mutable_data(int index);
  inline ::MsgPB::MsgNpcDakData* add_data();
  inline const ::google::protobuf::RepeatedPtrField< ::MsgPB::MsgNpcDakData >&
      data() const;
  inline ::google::protobuf::RepeatedPtrField< ::MsgPB::MsgNpcDakData >*
      mutable_data();

  // @@protoc_insertion_point(class_scope:MsgPB.MsgNpcDakSyncS2C)
 private:
  inline void set_has_msgtype();
  inline void clear_has_msgtype();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::MsgPB::MsgNpcDakData > data_;
  int msgtype_;
  friend void  protobuf_AddDesc_MsgNpcDak_2eproto();
  friend void protobuf_AssignDesc_MsgNpcDak_2eproto();
  friend void protobuf_ShutdownFile_MsgNpcDak_2eproto();

  void InitAsDefaultInstance();
  static MsgNpcDakSyncS2C* default_instance_;
};
// -------------------------------------------------------------------

class MsgNpcDakUpdateCountryS2C : public ::google::protobuf::Message {
 public:
  MsgNpcDakUpdateCountryS2C();
  virtual ~MsgNpcDakUpdateCountryS2C();

  MsgNpcDakUpdateCountryS2C(const MsgNpcDakUpdateCountryS2C& from);

  inline MsgNpcDakUpdateCountryS2C& operator=(const MsgNpcDakUpdateCountryS2C& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgNpcDakUpdateCountryS2C& default_instance();

  void Swap(MsgNpcDakUpdateCountryS2C* other);

  // implements Message ----------------------------------------------

  MsgNpcDakUpdateCountryS2C* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgNpcDakUpdateCountryS2C& from);
  void MergeFrom(const MsgNpcDakUpdateCountryS2C& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_NPC_DAK_UPDATE_COUNTRY_S2C];
  inline bool has_msgtype() const;
  inline void clear_msgtype();
  static const int kMsgTypeFieldNumber = 1;
  inline ::MsgPB::EMsgType msgtype() const;
  inline void set_msgtype(::MsgPB::EMsgType value);

  // optional .MsgPB.MsgNpcDakData data = 2;
  inline bool has_data() const;
  inline void clear_data();
  static const int kDataFieldNumber = 2;
  inline const ::MsgPB::MsgNpcDakData& data() const;
  inline ::MsgPB::MsgNpcDakData* mutable_data();
  inline ::MsgPB::MsgNpcDakData* release_data();
  inline void set_allocated_data(::MsgPB::MsgNpcDakData* data);

  // @@protoc_insertion_point(class_scope:MsgPB.MsgNpcDakUpdateCountryS2C)
 private:
  inline void set_has_msgtype();
  inline void clear_has_msgtype();
  inline void set_has_data();
  inline void clear_has_data();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::MsgPB::MsgNpcDakData* data_;
  int msgtype_;
  friend void  protobuf_AddDesc_MsgNpcDak_2eproto();
  friend void protobuf_AssignDesc_MsgNpcDak_2eproto();
  friend void protobuf_ShutdownFile_MsgNpcDak_2eproto();

  void InitAsDefaultInstance();
  static MsgNpcDakUpdateCountryS2C* default_instance_;
};
// -------------------------------------------------------------------

class MsgNpcDakStartEventS2C : public ::google::protobuf::Message {
 public:
  MsgNpcDakStartEventS2C();
  virtual ~MsgNpcDakStartEventS2C();

  MsgNpcDakStartEventS2C(const MsgNpcDakStartEventS2C& from);

  inline MsgNpcDakStartEventS2C& operator=(const MsgNpcDakStartEventS2C& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgNpcDakStartEventS2C& default_instance();

  void Swap(MsgNpcDakStartEventS2C* other);

  // implements Message ----------------------------------------------

  MsgNpcDakStartEventS2C* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgNpcDakStartEventS2C& from);
  void MergeFrom(const MsgNpcDakStartEventS2C& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_NPC_DAK_START_EVENT_S2C];
  inline bool has_msgtype() const;
  inline void clear_msgtype();
  static const int kMsgTypeFieldNumber = 1;
  inline ::MsgPB::EMsgType msgtype() const;
  inline void set_msgtype(::MsgPB::EMsgType value);

  // optional int32 event_type = 2;
  inline bool has_event_type() const;
  inline void clear_event_type();
  static const int kEventTypeFieldNumber = 2;
  inline ::google::protobuf::int32 event_type() const;
  inline void set_event_type(::google::protobuf::int32 value);

  // optional int32 dataid = 3;
  inline bool has_dataid() const;
  inline void clear_dataid();
  static const int kDataidFieldNumber = 3;
  inline ::google::protobuf::int32 dataid() const;
  inline void set_dataid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:MsgPB.MsgNpcDakStartEventS2C)
 private:
  inline void set_has_msgtype();
  inline void clear_has_msgtype();
  inline void set_has_event_type();
  inline void clear_has_event_type();
  inline void set_has_dataid();
  inline void clear_has_dataid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int msgtype_;
  ::google::protobuf::int32 event_type_;
  ::google::protobuf::int32 dataid_;
  friend void  protobuf_AddDesc_MsgNpcDak_2eproto();
  friend void protobuf_AssignDesc_MsgNpcDak_2eproto();
  friend void protobuf_ShutdownFile_MsgNpcDak_2eproto();

  void InitAsDefaultInstance();
  static MsgNpcDakStartEventS2C* default_instance_;
};
// -------------------------------------------------------------------

class MsgNpcDakEndEventS2C : public ::google::protobuf::Message {
 public:
  MsgNpcDakEndEventS2C();
  virtual ~MsgNpcDakEndEventS2C();

  MsgNpcDakEndEventS2C(const MsgNpcDakEndEventS2C& from);

  inline MsgNpcDakEndEventS2C& operator=(const MsgNpcDakEndEventS2C& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgNpcDakEndEventS2C& default_instance();

  void Swap(MsgNpcDakEndEventS2C* other);

  // implements Message ----------------------------------------------

  MsgNpcDakEndEventS2C* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgNpcDakEndEventS2C& from);
  void MergeFrom(const MsgNpcDakEndEventS2C& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_NPC_DAK_END_EVENT_S2C];
  inline bool has_msgtype() const;
  inline void clear_msgtype();
  static const int kMsgTypeFieldNumber = 1;
  inline ::MsgPB::EMsgType msgtype() const;
  inline void set_msgtype(::MsgPB::EMsgType value);

  // optional int32 event_type = 2;
  inline bool has_event_type() const;
  inline void clear_event_type();
  static const int kEventTypeFieldNumber = 2;
  inline ::google::protobuf::int32 event_type() const;
  inline void set_event_type(::google::protobuf::int32 value);

  // optional int32 dataid = 3;
  inline bool has_dataid() const;
  inline void clear_dataid();
  static const int kDataidFieldNumber = 3;
  inline ::google::protobuf::int32 dataid() const;
  inline void set_dataid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:MsgPB.MsgNpcDakEndEventS2C)
 private:
  inline void set_has_msgtype();
  inline void clear_has_msgtype();
  inline void set_has_event_type();
  inline void clear_has_event_type();
  inline void set_has_dataid();
  inline void clear_has_dataid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int msgtype_;
  ::google::protobuf::int32 event_type_;
  ::google::protobuf::int32 dataid_;
  friend void  protobuf_AddDesc_MsgNpcDak_2eproto();
  friend void protobuf_AssignDesc_MsgNpcDak_2eproto();
  friend void protobuf_ShutdownFile_MsgNpcDak_2eproto();

  void InitAsDefaultInstance();
  static MsgNpcDakEndEventS2C* default_instance_;
};
// -------------------------------------------------------------------

class MsgNpcDakRobC2S : public ::google::protobuf::Message {
 public:
  MsgNpcDakRobC2S();
  virtual ~MsgNpcDakRobC2S();

  MsgNpcDakRobC2S(const MsgNpcDakRobC2S& from);

  inline MsgNpcDakRobC2S& operator=(const MsgNpcDakRobC2S& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgNpcDakRobC2S& default_instance();

  void Swap(MsgNpcDakRobC2S* other);

  // implements Message ----------------------------------------------

  MsgNpcDakRobC2S* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgNpcDakRobC2S& from);
  void MergeFrom(const MsgNpcDakRobC2S& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_NPC_DAK_ROB_C2S];
  inline bool has_msgtype() const;
  inline void clear_msgtype();
  static const int kMsgTypeFieldNumber = 1;
  inline ::MsgPB::EMsgType msgtype() const;
  inline void set_msgtype(::MsgPB::EMsgType value);

  // optional int32 dataid = 2;
  inline bool has_dataid() const;
  inline void clear_dataid();
  static const int kDataidFieldNumber = 2;
  inline ::google::protobuf::int32 dataid() const;
  inline void set_dataid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:MsgPB.MsgNpcDakRobC2S)
 private:
  inline void set_has_msgtype();
  inline void clear_has_msgtype();
  inline void set_has_dataid();
  inline void clear_has_dataid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int msgtype_;
  ::google::protobuf::int32 dataid_;
  friend void  protobuf_AddDesc_MsgNpcDak_2eproto();
  friend void protobuf_AssignDesc_MsgNpcDak_2eproto();
  friend void protobuf_ShutdownFile_MsgNpcDak_2eproto();

  void InitAsDefaultInstance();
  static MsgNpcDakRobC2S* default_instance_;
};
// -------------------------------------------------------------------

class MsgNpcDakTrigInteractiveC2S : public ::google::protobuf::Message {
 public:
  MsgNpcDakTrigInteractiveC2S();
  virtual ~MsgNpcDakTrigInteractiveC2S();

  MsgNpcDakTrigInteractiveC2S(const MsgNpcDakTrigInteractiveC2S& from);

  inline MsgNpcDakTrigInteractiveC2S& operator=(const MsgNpcDakTrigInteractiveC2S& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgNpcDakTrigInteractiveC2S& default_instance();

  void Swap(MsgNpcDakTrigInteractiveC2S* other);

  // implements Message ----------------------------------------------

  MsgNpcDakTrigInteractiveC2S* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgNpcDakTrigInteractiveC2S& from);
  void MergeFrom(const MsgNpcDakTrigInteractiveC2S& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_NPC_DAK_TRIG_INTERACTIVE_C2S];
  inline bool has_msgtype() const;
  inline void clear_msgtype();
  static const int kMsgTypeFieldNumber = 1;
  inline ::MsgPB::EMsgType msgtype() const;
  inline void set_msgtype(::MsgPB::EMsgType value);

  // optional .MsgPB.NPC_DAK_TRIG_TYPE trig_type = 2;
  inline bool has_trig_type() const;
  inline void clear_trig_type();
  static const int kTrigTypeFieldNumber = 2;
  inline ::MsgPB::NPC_DAK_TRIG_TYPE trig_type() const;
  inline void set_trig_type(::MsgPB::NPC_DAK_TRIG_TYPE value);

  // optional int64 uuid = 3;
  inline bool has_uuid() const;
  inline void clear_uuid();
  static const int kUuidFieldNumber = 3;
  inline ::google::protobuf::int64 uuid() const;
  inline void set_uuid(::google::protobuf::int64 value);

  // optional int32 interactive = 4;
  inline bool has_interactive() const;
  inline void clear_interactive();
  static const int kInteractiveFieldNumber = 4;
  inline ::google::protobuf::int32 interactive() const;
  inline void set_interactive(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:MsgPB.MsgNpcDakTrigInteractiveC2S)
 private:
  inline void set_has_msgtype();
  inline void clear_has_msgtype();
  inline void set_has_trig_type();
  inline void clear_has_trig_type();
  inline void set_has_uuid();
  inline void clear_has_uuid();
  inline void set_has_interactive();
  inline void clear_has_interactive();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int msgtype_;
  int trig_type_;
  ::google::protobuf::int64 uuid_;
  ::google::protobuf::int32 interactive_;
  friend void  protobuf_AddDesc_MsgNpcDak_2eproto();
  friend void protobuf_AssignDesc_MsgNpcDak_2eproto();
  friend void protobuf_ShutdownFile_MsgNpcDak_2eproto();

  void InitAsDefaultInstance();
  static MsgNpcDakTrigInteractiveC2S* default_instance_;
};
// -------------------------------------------------------------------

class MsgNpcDakTrigInteractiveS2C_ParamData : public ::google::protobuf::Message {
 public:
  MsgNpcDakTrigInteractiveS2C_ParamData();
  virtual ~MsgNpcDakTrigInteractiveS2C_ParamData();

  MsgNpcDakTrigInteractiveS2C_ParamData(const MsgNpcDakTrigInteractiveS2C_ParamData& from);

  inline MsgNpcDakTrigInteractiveS2C_ParamData& operator=(const MsgNpcDakTrigInteractiveS2C_ParamData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgNpcDakTrigInteractiveS2C_ParamData& default_instance();

  void Swap(MsgNpcDakTrigInteractiveS2C_ParamData* other);

  // implements Message ----------------------------------------------

  MsgNpcDakTrigInteractiveS2C_ParamData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgNpcDakTrigInteractiveS2C_ParamData& from);
  void MergeFrom(const MsgNpcDakTrigInteractiveS2C_ParamData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 dataID = 1;
  inline bool has_dataid() const;
  inline void clear_dataid();
  static const int kDataIDFieldNumber = 1;
  inline ::google::protobuf::int32 dataid() const;
  inline void set_dataid(::google::protobuf::int32 value);

  // optional int32 count = 2;
  inline bool has_count() const;
  inline void clear_count();
  static const int kCountFieldNumber = 2;
  inline ::google::protobuf::int32 count() const;
  inline void set_count(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:MsgPB.MsgNpcDakTrigInteractiveS2C.ParamData)
 private:
  inline void set_has_dataid();
  inline void clear_has_dataid();
  inline void set_has_count();
  inline void clear_has_count();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 dataid_;
  ::google::protobuf::int32 count_;
  friend void  protobuf_AddDesc_MsgNpcDak_2eproto();
  friend void protobuf_AssignDesc_MsgNpcDak_2eproto();
  friend void protobuf_ShutdownFile_MsgNpcDak_2eproto();

  void InitAsDefaultInstance();
  static MsgNpcDakTrigInteractiveS2C_ParamData* default_instance_;
};
// -------------------------------------------------------------------

class MsgNpcDakTrigInteractiveS2C : public ::google::protobuf::Message {
 public:
  MsgNpcDakTrigInteractiveS2C();
  virtual ~MsgNpcDakTrigInteractiveS2C();

  MsgNpcDakTrigInteractiveS2C(const MsgNpcDakTrigInteractiveS2C& from);

  inline MsgNpcDakTrigInteractiveS2C& operator=(const MsgNpcDakTrigInteractiveS2C& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgNpcDakTrigInteractiveS2C& default_instance();

  void Swap(MsgNpcDakTrigInteractiveS2C* other);

  // implements Message ----------------------------------------------

  MsgNpcDakTrigInteractiveS2C* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgNpcDakTrigInteractiveS2C& from);
  void MergeFrom(const MsgNpcDakTrigInteractiveS2C& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef MsgNpcDakTrigInteractiveS2C_ParamData ParamData;

  typedef MsgNpcDakTrigInteractiveS2C_RESULT RESULT;
  static const RESULT SUCCESS = MsgNpcDakTrigInteractiveS2C_RESULT_SUCCESS;
  static const RESULT ERR = MsgNpcDakTrigInteractiveS2C_RESULT_ERR;
  static inline bool RESULT_IsValid(int value) {
    return MsgNpcDakTrigInteractiveS2C_RESULT_IsValid(value);
  }
  static const RESULT RESULT_MIN =
    MsgNpcDakTrigInteractiveS2C_RESULT_RESULT_MIN;
  static const RESULT RESULT_MAX =
    MsgNpcDakTrigInteractiveS2C_RESULT_RESULT_MAX;
  static const int RESULT_ARRAYSIZE =
    MsgNpcDakTrigInteractiveS2C_RESULT_RESULT_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  RESULT_descriptor() {
    return MsgNpcDakTrigInteractiveS2C_RESULT_descriptor();
  }
  static inline const ::std::string& RESULT_Name(RESULT value) {
    return MsgNpcDakTrigInteractiveS2C_RESULT_Name(value);
  }
  static inline bool RESULT_Parse(const ::std::string& name,
      RESULT* value) {
    return MsgNpcDakTrigInteractiveS2C_RESULT_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_NPC_DAK_TRIG_INTERACTIVE_S2C];
  inline bool has_msgtype() const;
  inline void clear_msgtype();
  static const int kMsgTypeFieldNumber = 1;
  inline ::MsgPB::EMsgType msgtype() const;
  inline void set_msgtype(::MsgPB::EMsgType value);

  // optional .MsgPB.NPC_DAK_TRIG_TYPE trig_type = 2;
  inline bool has_trig_type() const;
  inline void clear_trig_type();
  static const int kTrigTypeFieldNumber = 2;
  inline ::MsgPB::NPC_DAK_TRIG_TYPE trig_type() const;
  inline void set_trig_type(::MsgPB::NPC_DAK_TRIG_TYPE value);

  // optional int64 uuid = 3;
  inline bool has_uuid() const;
  inline void clear_uuid();
  static const int kUuidFieldNumber = 3;
  inline ::google::protobuf::int64 uuid() const;
  inline void set_uuid(::google::protobuf::int64 value);

  // optional .MsgPB.MsgNpcDakTrigInteractiveS2C.RESULT res = 4;
  inline bool has_res() const;
  inline void clear_res();
  static const int kResFieldNumber = 4;
  inline ::MsgPB::MsgNpcDakTrigInteractiveS2C_RESULT res() const;
  inline void set_res(::MsgPB::MsgNpcDakTrigInteractiveS2C_RESULT value);

  // repeated .MsgPB.MsgNpcDakTrigInteractiveS2C.ParamData data = 5;
  inline int data_size() const;
  inline void clear_data();
  static const int kDataFieldNumber = 5;
  inline const ::MsgPB::MsgNpcDakTrigInteractiveS2C_ParamData& data(int index) const;
  inline ::MsgPB::MsgNpcDakTrigInteractiveS2C_ParamData* mutable_data(int index);
  inline ::MsgPB::MsgNpcDakTrigInteractiveS2C_ParamData* add_data();
  inline const ::google::protobuf::RepeatedPtrField< ::MsgPB::MsgNpcDakTrigInteractiveS2C_ParamData >&
      data() const;
  inline ::google::protobuf::RepeatedPtrField< ::MsgPB::MsgNpcDakTrigInteractiveS2C_ParamData >*
      mutable_data();

  // optional bool send_mail = 6;
  inline bool has_send_mail() const;
  inline void clear_send_mail();
  static const int kSendMailFieldNumber = 6;
  inline bool send_mail() const;
  inline void set_send_mail(bool value);

  // @@protoc_insertion_point(class_scope:MsgPB.MsgNpcDakTrigInteractiveS2C)
 private:
  inline void set_has_msgtype();
  inline void clear_has_msgtype();
  inline void set_has_trig_type();
  inline void clear_has_trig_type();
  inline void set_has_uuid();
  inline void clear_has_uuid();
  inline void set_has_res();
  inline void clear_has_res();
  inline void set_has_send_mail();
  inline void clear_has_send_mail();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int msgtype_;
  int trig_type_;
  ::google::protobuf::int64 uuid_;
  ::google::protobuf::RepeatedPtrField< ::MsgPB::MsgNpcDakTrigInteractiveS2C_ParamData > data_;
  int res_;
  bool send_mail_;
  friend void  protobuf_AddDesc_MsgNpcDak_2eproto();
  friend void protobuf_AssignDesc_MsgNpcDak_2eproto();
  friend void protobuf_ShutdownFile_MsgNpcDak_2eproto();

  void InitAsDefaultInstance();
  static MsgNpcDakTrigInteractiveS2C* default_instance_;
};
// -------------------------------------------------------------------

class MsgNpcDakEnvoyC2S : public ::google::protobuf::Message {
 public:
  MsgNpcDakEnvoyC2S();
  virtual ~MsgNpcDakEnvoyC2S();

  MsgNpcDakEnvoyC2S(const MsgNpcDakEnvoyC2S& from);

  inline MsgNpcDakEnvoyC2S& operator=(const MsgNpcDakEnvoyC2S& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgNpcDakEnvoyC2S& default_instance();

  void Swap(MsgNpcDakEnvoyC2S* other);

  // implements Message ----------------------------------------------

  MsgNpcDakEnvoyC2S* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgNpcDakEnvoyC2S& from);
  void MergeFrom(const MsgNpcDakEnvoyC2S& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_NPC_DAK_ENVOY_C2S];
  inline bool has_msgtype() const;
  inline void clear_msgtype();
  static const int kMsgTypeFieldNumber = 1;
  inline ::MsgPB::EMsgType msgtype() const;
  inline void set_msgtype(::MsgPB::EMsgType value);

  // optional int32 envoytype = 2;
  inline bool has_envoytype() const;
  inline void clear_envoytype();
  static const int kEnvoytypeFieldNumber = 2;
  inline ::google::protobuf::int32 envoytype() const;
  inline void set_envoytype(::google::protobuf::int32 value);

  // optional int64 uuid = 3;
  inline bool has_uuid() const;
  inline void clear_uuid();
  static const int kUuidFieldNumber = 3;
  inline ::google::protobuf::int64 uuid() const;
  inline void set_uuid(::google::protobuf::int64 value);

  // optional int32 index = 4;
  inline bool has_index() const;
  inline void clear_index();
  static const int kIndexFieldNumber = 4;
  inline ::google::protobuf::int32 index() const;
  inline void set_index(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:MsgPB.MsgNpcDakEnvoyC2S)
 private:
  inline void set_has_msgtype();
  inline void clear_has_msgtype();
  inline void set_has_envoytype();
  inline void clear_has_envoytype();
  inline void set_has_uuid();
  inline void clear_has_uuid();
  inline void set_has_index();
  inline void clear_has_index();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int msgtype_;
  ::google::protobuf::int32 envoytype_;
  ::google::protobuf::int64 uuid_;
  ::google::protobuf::int32 index_;
  friend void  protobuf_AddDesc_MsgNpcDak_2eproto();
  friend void protobuf_AssignDesc_MsgNpcDak_2eproto();
  friend void protobuf_ShutdownFile_MsgNpcDak_2eproto();

  void InitAsDefaultInstance();
  static MsgNpcDakEnvoyC2S* default_instance_;
};
// -------------------------------------------------------------------

class MsgNpcDakEnvoyS2C : public ::google::protobuf::Message {
 public:
  MsgNpcDakEnvoyS2C();
  virtual ~MsgNpcDakEnvoyS2C();

  MsgNpcDakEnvoyS2C(const MsgNpcDakEnvoyS2C& from);

  inline MsgNpcDakEnvoyS2C& operator=(const MsgNpcDakEnvoyS2C& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgNpcDakEnvoyS2C& default_instance();

  void Swap(MsgNpcDakEnvoyS2C* other);

  // implements Message ----------------------------------------------

  MsgNpcDakEnvoyS2C* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgNpcDakEnvoyS2C& from);
  void MergeFrom(const MsgNpcDakEnvoyS2C& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef MsgNpcDakEnvoyS2C_RESULT RESULT;
  static const RESULT SUCCESS = MsgNpcDakEnvoyS2C_RESULT_SUCCESS;
  static const RESULT ERR = MsgNpcDakEnvoyS2C_RESULT_ERR;
  static inline bool RESULT_IsValid(int value) {
    return MsgNpcDakEnvoyS2C_RESULT_IsValid(value);
  }
  static const RESULT RESULT_MIN =
    MsgNpcDakEnvoyS2C_RESULT_RESULT_MIN;
  static const RESULT RESULT_MAX =
    MsgNpcDakEnvoyS2C_RESULT_RESULT_MAX;
  static const int RESULT_ARRAYSIZE =
    MsgNpcDakEnvoyS2C_RESULT_RESULT_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  RESULT_descriptor() {
    return MsgNpcDakEnvoyS2C_RESULT_descriptor();
  }
  static inline const ::std::string& RESULT_Name(RESULT value) {
    return MsgNpcDakEnvoyS2C_RESULT_Name(value);
  }
  static inline bool RESULT_Parse(const ::std::string& name,
      RESULT* value) {
    return MsgNpcDakEnvoyS2C_RESULT_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_NPC_DAK_ENVOY_S2C];
  inline bool has_msgtype() const;
  inline void clear_msgtype();
  static const int kMsgTypeFieldNumber = 1;
  inline ::MsgPB::EMsgType msgtype() const;
  inline void set_msgtype(::MsgPB::EMsgType value);

  // optional int32 envoytype = 2;
  inline bool has_envoytype() const;
  inline void clear_envoytype();
  static const int kEnvoytypeFieldNumber = 2;
  inline ::google::protobuf::int32 envoytype() const;
  inline void set_envoytype(::google::protobuf::int32 value);

  // optional int64 uuid = 3;
  inline bool has_uuid() const;
  inline void clear_uuid();
  static const int kUuidFieldNumber = 3;
  inline ::google::protobuf::int64 uuid() const;
  inline void set_uuid(::google::protobuf::int64 value);

  // optional .MsgPB.MsgNpcDakEnvoyS2C.RESULT res = 4;
  inline bool has_res() const;
  inline void clear_res();
  static const int kResFieldNumber = 4;
  inline ::MsgPB::MsgNpcDakEnvoyS2C_RESULT res() const;
  inline void set_res(::MsgPB::MsgNpcDakEnvoyS2C_RESULT value);

  // optional int32 index = 5;
  inline bool has_index() const;
  inline void clear_index();
  static const int kIndexFieldNumber = 5;
  inline ::google::protobuf::int32 index() const;
  inline void set_index(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:MsgPB.MsgNpcDakEnvoyS2C)
 private:
  inline void set_has_msgtype();
  inline void clear_has_msgtype();
  inline void set_has_envoytype();
  inline void clear_has_envoytype();
  inline void set_has_uuid();
  inline void clear_has_uuid();
  inline void set_has_res();
  inline void clear_has_res();
  inline void set_has_index();
  inline void clear_has_index();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int msgtype_;
  ::google::protobuf::int32 envoytype_;
  ::google::protobuf::int64 uuid_;
  int res_;
  ::google::protobuf::int32 index_;
  friend void  protobuf_AddDesc_MsgNpcDak_2eproto();
  friend void protobuf_AssignDesc_MsgNpcDak_2eproto();
  friend void protobuf_ShutdownFile_MsgNpcDak_2eproto();

  void InitAsDefaultInstance();
  static MsgNpcDakEnvoyS2C* default_instance_;
};
// -------------------------------------------------------------------

class MsgNpcDakEnvoySetParamC2S : public ::google::protobuf::Message {
 public:
  MsgNpcDakEnvoySetParamC2S();
  virtual ~MsgNpcDakEnvoySetParamC2S();

  MsgNpcDakEnvoySetParamC2S(const MsgNpcDakEnvoySetParamC2S& from);

  inline MsgNpcDakEnvoySetParamC2S& operator=(const MsgNpcDakEnvoySetParamC2S& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgNpcDakEnvoySetParamC2S& default_instance();

  void Swap(MsgNpcDakEnvoySetParamC2S* other);

  // implements Message ----------------------------------------------

  MsgNpcDakEnvoySetParamC2S* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgNpcDakEnvoySetParamC2S& from);
  void MergeFrom(const MsgNpcDakEnvoySetParamC2S& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_NPC_DAK_ENVOY_SET_PARAM_C2S];
  inline bool has_msgtype() const;
  inline void clear_msgtype();
  static const int kMsgTypeFieldNumber = 1;
  inline ::MsgPB::EMsgType msgtype() const;
  inline void set_msgtype(::MsgPB::EMsgType value);

  // optional int32 envoy_idx = 2;
  inline bool has_envoy_idx() const;
  inline void clear_envoy_idx();
  static const int kEnvoyIdxFieldNumber = 2;
  inline ::google::protobuf::int32 envoy_idx() const;
  inline void set_envoy_idx(::google::protobuf::int32 value);

  // optional int64 uuid = 3;
  inline bool has_uuid() const;
  inline void clear_uuid();
  static const int kUuidFieldNumber = 3;
  inline ::google::protobuf::int64 uuid() const;
  inline void set_uuid(::google::protobuf::int64 value);

  // optional int32 param = 4;
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 4;
  inline ::google::protobuf::int32 param() const;
  inline void set_param(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:MsgPB.MsgNpcDakEnvoySetParamC2S)
 private:
  inline void set_has_msgtype();
  inline void clear_has_msgtype();
  inline void set_has_envoy_idx();
  inline void clear_has_envoy_idx();
  inline void set_has_uuid();
  inline void clear_has_uuid();
  inline void set_has_param();
  inline void clear_has_param();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int msgtype_;
  ::google::protobuf::int32 envoy_idx_;
  ::google::protobuf::int64 uuid_;
  ::google::protobuf::int32 param_;
  friend void  protobuf_AddDesc_MsgNpcDak_2eproto();
  friend void protobuf_AssignDesc_MsgNpcDak_2eproto();
  friend void protobuf_ShutdownFile_MsgNpcDak_2eproto();

  void InitAsDefaultInstance();
  static MsgNpcDakEnvoySetParamC2S* default_instance_;
};
// -------------------------------------------------------------------

class MsgNpcDakEnvoySetParamS2C : public ::google::protobuf::Message {
 public:
  MsgNpcDakEnvoySetParamS2C();
  virtual ~MsgNpcDakEnvoySetParamS2C();

  MsgNpcDakEnvoySetParamS2C(const MsgNpcDakEnvoySetParamS2C& from);

  inline MsgNpcDakEnvoySetParamS2C& operator=(const MsgNpcDakEnvoySetParamS2C& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgNpcDakEnvoySetParamS2C& default_instance();

  void Swap(MsgNpcDakEnvoySetParamS2C* other);

  // implements Message ----------------------------------------------

  MsgNpcDakEnvoySetParamS2C* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgNpcDakEnvoySetParamS2C& from);
  void MergeFrom(const MsgNpcDakEnvoySetParamS2C& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef MsgNpcDakEnvoySetParamS2C_RESULT RESULT;
  static const RESULT SUCCESS = MsgNpcDakEnvoySetParamS2C_RESULT_SUCCESS;
  static const RESULT ERR = MsgNpcDakEnvoySetParamS2C_RESULT_ERR;
  static inline bool RESULT_IsValid(int value) {
    return MsgNpcDakEnvoySetParamS2C_RESULT_IsValid(value);
  }
  static const RESULT RESULT_MIN =
    MsgNpcDakEnvoySetParamS2C_RESULT_RESULT_MIN;
  static const RESULT RESULT_MAX =
    MsgNpcDakEnvoySetParamS2C_RESULT_RESULT_MAX;
  static const int RESULT_ARRAYSIZE =
    MsgNpcDakEnvoySetParamS2C_RESULT_RESULT_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  RESULT_descriptor() {
    return MsgNpcDakEnvoySetParamS2C_RESULT_descriptor();
  }
  static inline const ::std::string& RESULT_Name(RESULT value) {
    return MsgNpcDakEnvoySetParamS2C_RESULT_Name(value);
  }
  static inline bool RESULT_Parse(const ::std::string& name,
      RESULT* value) {
    return MsgNpcDakEnvoySetParamS2C_RESULT_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_NPC_DAK_ENVOY_SET_PARAM_S2C];
  inline bool has_msgtype() const;
  inline void clear_msgtype();
  static const int kMsgTypeFieldNumber = 1;
  inline ::MsgPB::EMsgType msgtype() const;
  inline void set_msgtype(::MsgPB::EMsgType value);

  // optional int32 envoy_idx = 2;
  inline bool has_envoy_idx() const;
  inline void clear_envoy_idx();
  static const int kEnvoyIdxFieldNumber = 2;
  inline ::google::protobuf::int32 envoy_idx() const;
  inline void set_envoy_idx(::google::protobuf::int32 value);

  // optional int64 uuid = 3;
  inline bool has_uuid() const;
  inline void clear_uuid();
  static const int kUuidFieldNumber = 3;
  inline ::google::protobuf::int64 uuid() const;
  inline void set_uuid(::google::protobuf::int64 value);

  // optional .MsgPB.MsgNpcDakEnvoySetParamS2C.RESULT res = 4;
  inline bool has_res() const;
  inline void clear_res();
  static const int kResFieldNumber = 4;
  inline ::MsgPB::MsgNpcDakEnvoySetParamS2C_RESULT res() const;
  inline void set_res(::MsgPB::MsgNpcDakEnvoySetParamS2C_RESULT value);

  // @@protoc_insertion_point(class_scope:MsgPB.MsgNpcDakEnvoySetParamS2C)
 private:
  inline void set_has_msgtype();
  inline void clear_has_msgtype();
  inline void set_has_envoy_idx();
  inline void clear_has_envoy_idx();
  inline void set_has_uuid();
  inline void clear_has_uuid();
  inline void set_has_res();
  inline void clear_has_res();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int msgtype_;
  ::google::protobuf::int32 envoy_idx_;
  ::google::protobuf::int64 uuid_;
  int res_;
  friend void  protobuf_AddDesc_MsgNpcDak_2eproto();
  friend void protobuf_AssignDesc_MsgNpcDak_2eproto();
  friend void protobuf_ShutdownFile_MsgNpcDak_2eproto();

  void InitAsDefaultInstance();
  static MsgNpcDakEnvoySetParamS2C* default_instance_;
};
// -------------------------------------------------------------------

class MsgNpcDakEventShopStartC2S : public ::google::protobuf::Message {
 public:
  MsgNpcDakEventShopStartC2S();
  virtual ~MsgNpcDakEventShopStartC2S();

  MsgNpcDakEventShopStartC2S(const MsgNpcDakEventShopStartC2S& from);

  inline MsgNpcDakEventShopStartC2S& operator=(const MsgNpcDakEventShopStartC2S& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgNpcDakEventShopStartC2S& default_instance();

  void Swap(MsgNpcDakEventShopStartC2S* other);

  // implements Message ----------------------------------------------

  MsgNpcDakEventShopStartC2S* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgNpcDakEventShopStartC2S& from);
  void MergeFrom(const MsgNpcDakEventShopStartC2S& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_NPC_DAK_EVENT_SHOP_START_C2S];
  inline bool has_msgtype() const;
  inline void clear_msgtype();
  static const int kMsgTypeFieldNumber = 1;
  inline ::MsgPB::EMsgType msgtype() const;
  inline void set_msgtype(::MsgPB::EMsgType value);

  // repeated int32 shopid = 2;
  inline int shopid_size() const;
  inline void clear_shopid();
  static const int kShopidFieldNumber = 2;
  inline ::google::protobuf::int32 shopid(int index) const;
  inline void set_shopid(int index, ::google::protobuf::int32 value);
  inline void add_shopid(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      shopid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_shopid();

  // @@protoc_insertion_point(class_scope:MsgPB.MsgNpcDakEventShopStartC2S)
 private:
  inline void set_has_msgtype();
  inline void clear_has_msgtype();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > shopid_;
  int msgtype_;
  friend void  protobuf_AddDesc_MsgNpcDak_2eproto();
  friend void protobuf_AssignDesc_MsgNpcDak_2eproto();
  friend void protobuf_ShutdownFile_MsgNpcDak_2eproto();

  void InitAsDefaultInstance();
  static MsgNpcDakEventShopStartC2S* default_instance_;
};
// ===================================================================


// ===================================================================

// MsgNpcDakData_DakEvent

// optional int32 idx = 1;
inline bool MsgNpcDakData_DakEvent::has_idx() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgNpcDakData_DakEvent::set_has_idx() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgNpcDakData_DakEvent::clear_has_idx() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgNpcDakData_DakEvent::clear_idx() {
  idx_ = 0;
  clear_has_idx();
}
inline ::google::protobuf::int32 MsgNpcDakData_DakEvent::idx() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgNpcDakData.DakEvent.idx)
  return idx_;
}
inline void MsgNpcDakData_DakEvent::set_idx(::google::protobuf::int32 value) {
  set_has_idx();
  idx_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgNpcDakData.DakEvent.idx)
}

// optional int32 dataid = 2;
inline bool MsgNpcDakData_DakEvent::has_dataid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MsgNpcDakData_DakEvent::set_has_dataid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MsgNpcDakData_DakEvent::clear_has_dataid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MsgNpcDakData_DakEvent::clear_dataid() {
  dataid_ = 0;
  clear_has_dataid();
}
inline ::google::protobuf::int32 MsgNpcDakData_DakEvent::dataid() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgNpcDakData.DakEvent.dataid)
  return dataid_;
}
inline void MsgNpcDakData_DakEvent::set_dataid(::google::protobuf::int32 value) {
  set_has_dataid();
  dataid_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgNpcDakData.DakEvent.dataid)
}

// optional int64 trig_time = 3;
inline bool MsgNpcDakData_DakEvent::has_trig_time() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MsgNpcDakData_DakEvent::set_has_trig_time() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MsgNpcDakData_DakEvent::clear_has_trig_time() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MsgNpcDakData_DakEvent::clear_trig_time() {
  trig_time_ = GOOGLE_LONGLONG(0);
  clear_has_trig_time();
}
inline ::google::protobuf::int64 MsgNpcDakData_DakEvent::trig_time() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgNpcDakData.DakEvent.trig_time)
  return trig_time_;
}
inline void MsgNpcDakData_DakEvent::set_trig_time(::google::protobuf::int64 value) {
  set_has_trig_time();
  trig_time_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgNpcDakData.DakEvent.trig_time)
}

// optional int32 lev = 4;
inline bool MsgNpcDakData_DakEvent::has_lev() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MsgNpcDakData_DakEvent::set_has_lev() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MsgNpcDakData_DakEvent::clear_has_lev() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MsgNpcDakData_DakEvent::clear_lev() {
  lev_ = 0;
  clear_has_lev();
}
inline ::google::protobuf::int32 MsgNpcDakData_DakEvent::lev() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgNpcDakData.DakEvent.lev)
  return lev_;
}
inline void MsgNpcDakData_DakEvent::set_lev(::google::protobuf::int32 value) {
  set_has_lev();
  lev_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgNpcDakData.DakEvent.lev)
}

// optional int32 param = 5;
inline bool MsgNpcDakData_DakEvent::has_param() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void MsgNpcDakData_DakEvent::set_has_param() {
  _has_bits_[0] |= 0x00000010u;
}
inline void MsgNpcDakData_DakEvent::clear_has_param() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void MsgNpcDakData_DakEvent::clear_param() {
  param_ = 0;
  clear_has_param();
}
inline ::google::protobuf::int32 MsgNpcDakData_DakEvent::param() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgNpcDakData.DakEvent.param)
  return param_;
}
inline void MsgNpcDakData_DakEvent::set_param(::google::protobuf::int32 value) {
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgNpcDakData.DakEvent.param)
}

// optional int32 add_dip = 6;
inline bool MsgNpcDakData_DakEvent::has_add_dip() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void MsgNpcDakData_DakEvent::set_has_add_dip() {
  _has_bits_[0] |= 0x00000020u;
}
inline void MsgNpcDakData_DakEvent::clear_has_add_dip() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void MsgNpcDakData_DakEvent::clear_add_dip() {
  add_dip_ = 0;
  clear_has_add_dip();
}
inline ::google::protobuf::int32 MsgNpcDakData_DakEvent::add_dip() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgNpcDakData.DakEvent.add_dip)
  return add_dip_;
}
inline void MsgNpcDakData_DakEvent::set_add_dip(::google::protobuf::int32 value) {
  set_has_add_dip();
  add_dip_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgNpcDakData.DakEvent.add_dip)
}

// -------------------------------------------------------------------

// MsgNpcDakData_DakEnvoy

// optional int32 idx = 1;
inline bool MsgNpcDakData_DakEnvoy::has_idx() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgNpcDakData_DakEnvoy::set_has_idx() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgNpcDakData_DakEnvoy::clear_has_idx() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgNpcDakData_DakEnvoy::clear_idx() {
  idx_ = 0;
  clear_has_idx();
}
inline ::google::protobuf::int32 MsgNpcDakData_DakEnvoy::idx() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgNpcDakData.DakEnvoy.idx)
  return idx_;
}
inline void MsgNpcDakData_DakEnvoy::set_idx(::google::protobuf::int32 value) {
  set_has_idx();
  idx_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgNpcDakData.DakEnvoy.idx)
}

// optional int32 dataid = 2;
inline bool MsgNpcDakData_DakEnvoy::has_dataid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MsgNpcDakData_DakEnvoy::set_has_dataid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MsgNpcDakData_DakEnvoy::clear_has_dataid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MsgNpcDakData_DakEnvoy::clear_dataid() {
  dataid_ = 0;
  clear_has_dataid();
}
inline ::google::protobuf::int32 MsgNpcDakData_DakEnvoy::dataid() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgNpcDakData.DakEnvoy.dataid)
  return dataid_;
}
inline void MsgNpcDakData_DakEnvoy::set_dataid(::google::protobuf::int32 value) {
  set_has_dataid();
  dataid_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgNpcDakData.DakEnvoy.dataid)
}

// optional int32 type = 3;
inline bool MsgNpcDakData_DakEnvoy::has_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MsgNpcDakData_DakEnvoy::set_has_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MsgNpcDakData_DakEnvoy::clear_has_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MsgNpcDakData_DakEnvoy::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 MsgNpcDakData_DakEnvoy::type() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgNpcDakData.DakEnvoy.type)
  return type_;
}
inline void MsgNpcDakData_DakEnvoy::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgNpcDakData.DakEnvoy.type)
}

// optional int64 trig_time = 4;
inline bool MsgNpcDakData_DakEnvoy::has_trig_time() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MsgNpcDakData_DakEnvoy::set_has_trig_time() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MsgNpcDakData_DakEnvoy::clear_has_trig_time() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MsgNpcDakData_DakEnvoy::clear_trig_time() {
  trig_time_ = GOOGLE_LONGLONG(0);
  clear_has_trig_time();
}
inline ::google::protobuf::int64 MsgNpcDakData_DakEnvoy::trig_time() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgNpcDakData.DakEnvoy.trig_time)
  return trig_time_;
}
inline void MsgNpcDakData_DakEnvoy::set_trig_time(::google::protobuf::int64 value) {
  set_has_trig_time();
  trig_time_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgNpcDakData.DakEnvoy.trig_time)
}

// optional int32 param = 5;
inline bool MsgNpcDakData_DakEnvoy::has_param() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void MsgNpcDakData_DakEnvoy::set_has_param() {
  _has_bits_[0] |= 0x00000010u;
}
inline void MsgNpcDakData_DakEnvoy::clear_has_param() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void MsgNpcDakData_DakEnvoy::clear_param() {
  param_ = 0;
  clear_has_param();
}
inline ::google::protobuf::int32 MsgNpcDakData_DakEnvoy::param() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgNpcDakData.DakEnvoy.param)
  return param_;
}
inline void MsgNpcDakData_DakEnvoy::set_param(::google::protobuf::int32 value) {
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgNpcDakData.DakEnvoy.param)
}

// -------------------------------------------------------------------

// MsgNpcDakData

// optional int64 uuid = 1;
inline bool MsgNpcDakData::has_uuid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgNpcDakData::set_has_uuid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgNpcDakData::clear_has_uuid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgNpcDakData::clear_uuid() {
  uuid_ = GOOGLE_LONGLONG(0);
  clear_has_uuid();
}
inline ::google::protobuf::int64 MsgNpcDakData::uuid() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgNpcDakData.uuid)
  return uuid_;
}
inline void MsgNpcDakData::set_uuid(::google::protobuf::int64 value) {
  set_has_uuid();
  uuid_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgNpcDakData.uuid)
}

// optional int32 diplomacy = 2;
inline bool MsgNpcDakData::has_diplomacy() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MsgNpcDakData::set_has_diplomacy() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MsgNpcDakData::clear_has_diplomacy() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MsgNpcDakData::clear_diplomacy() {
  diplomacy_ = 0;
  clear_has_diplomacy();
}
inline ::google::protobuf::int32 MsgNpcDakData::diplomacy() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgNpcDakData.diplomacy)
  return diplomacy_;
}
inline void MsgNpcDakData::set_diplomacy(::google::protobuf::int32 value) {
  set_has_diplomacy();
  diplomacy_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgNpcDakData.diplomacy)
}

// repeated .MsgPB.MsgNpcDakData.DakEvent event = 3;
inline int MsgNpcDakData::event_size() const {
  return event_.size();
}
inline void MsgNpcDakData::clear_event() {
  event_.Clear();
}
inline const ::MsgPB::MsgNpcDakData_DakEvent& MsgNpcDakData::event(int index) const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgNpcDakData.event)
  return event_.Get(index);
}
inline ::MsgPB::MsgNpcDakData_DakEvent* MsgNpcDakData::mutable_event(int index) {
  // @@protoc_insertion_point(field_mutable:MsgPB.MsgNpcDakData.event)
  return event_.Mutable(index);
}
inline ::MsgPB::MsgNpcDakData_DakEvent* MsgNpcDakData::add_event() {
  // @@protoc_insertion_point(field_add:MsgPB.MsgNpcDakData.event)
  return event_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::MsgPB::MsgNpcDakData_DakEvent >&
MsgNpcDakData::event() const {
  // @@protoc_insertion_point(field_list:MsgPB.MsgNpcDakData.event)
  return event_;
}
inline ::google::protobuf::RepeatedPtrField< ::MsgPB::MsgNpcDakData_DakEvent >*
MsgNpcDakData::mutable_event() {
  // @@protoc_insertion_point(field_mutable_list:MsgPB.MsgNpcDakData.event)
  return &event_;
}

// optional int64 dirty = 4;
inline bool MsgNpcDakData::has_dirty() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MsgNpcDakData::set_has_dirty() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MsgNpcDakData::clear_has_dirty() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MsgNpcDakData::clear_dirty() {
  dirty_ = GOOGLE_LONGLONG(0);
  clear_has_dirty();
}
inline ::google::protobuf::int64 MsgNpcDakData::dirty() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgNpcDakData.dirty)
  return dirty_;
}
inline void MsgNpcDakData::set_dirty(::google::protobuf::int64 value) {
  set_has_dirty();
  dirty_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgNpcDakData.dirty)
}

// repeated .MsgPB.MsgNpcDakData.DakEnvoy envoy = 5;
inline int MsgNpcDakData::envoy_size() const {
  return envoy_.size();
}
inline void MsgNpcDakData::clear_envoy() {
  envoy_.Clear();
}
inline const ::MsgPB::MsgNpcDakData_DakEnvoy& MsgNpcDakData::envoy(int index) const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgNpcDakData.envoy)
  return envoy_.Get(index);
}
inline ::MsgPB::MsgNpcDakData_DakEnvoy* MsgNpcDakData::mutable_envoy(int index) {
  // @@protoc_insertion_point(field_mutable:MsgPB.MsgNpcDakData.envoy)
  return envoy_.Mutable(index);
}
inline ::MsgPB::MsgNpcDakData_DakEnvoy* MsgNpcDakData::add_envoy() {
  // @@protoc_insertion_point(field_add:MsgPB.MsgNpcDakData.envoy)
  return envoy_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::MsgPB::MsgNpcDakData_DakEnvoy >&
MsgNpcDakData::envoy() const {
  // @@protoc_insertion_point(field_list:MsgPB.MsgNpcDakData.envoy)
  return envoy_;
}
inline ::google::protobuf::RepeatedPtrField< ::MsgPB::MsgNpcDakData_DakEnvoy >*
MsgNpcDakData::mutable_envoy() {
  // @@protoc_insertion_point(field_mutable_list:MsgPB.MsgNpcDakData.envoy)
  return &envoy_;
}

// -------------------------------------------------------------------

// MsgNpcDakSyncS2C

// optional .MsgPB.EMsgType msgType = 1 [default = _MSG_NPC_DAK_SYNC_S2C];
inline bool MsgNpcDakSyncS2C::has_msgtype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgNpcDakSyncS2C::set_has_msgtype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgNpcDakSyncS2C::clear_has_msgtype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgNpcDakSyncS2C::clear_msgtype() {
  msgtype_ = 4300;
  clear_has_msgtype();
}
inline ::MsgPB::EMsgType MsgNpcDakSyncS2C::msgtype() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgNpcDakSyncS2C.msgType)
  return static_cast< ::MsgPB::EMsgType >(msgtype_);
}
inline void MsgNpcDakSyncS2C::set_msgtype(::MsgPB::EMsgType value) {
  assert(::MsgPB::EMsgType_IsValid(value));
  set_has_msgtype();
  msgtype_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgNpcDakSyncS2C.msgType)
}

// repeated .MsgPB.MsgNpcDakData data = 2;
inline int MsgNpcDakSyncS2C::data_size() const {
  return data_.size();
}
inline void MsgNpcDakSyncS2C::clear_data() {
  data_.Clear();
}
inline const ::MsgPB::MsgNpcDakData& MsgNpcDakSyncS2C::data(int index) const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgNpcDakSyncS2C.data)
  return data_.Get(index);
}
inline ::MsgPB::MsgNpcDakData* MsgNpcDakSyncS2C::mutable_data(int index) {
  // @@protoc_insertion_point(field_mutable:MsgPB.MsgNpcDakSyncS2C.data)
  return data_.Mutable(index);
}
inline ::MsgPB::MsgNpcDakData* MsgNpcDakSyncS2C::add_data() {
  // @@protoc_insertion_point(field_add:MsgPB.MsgNpcDakSyncS2C.data)
  return data_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::MsgPB::MsgNpcDakData >&
MsgNpcDakSyncS2C::data() const {
  // @@protoc_insertion_point(field_list:MsgPB.MsgNpcDakSyncS2C.data)
  return data_;
}
inline ::google::protobuf::RepeatedPtrField< ::MsgPB::MsgNpcDakData >*
MsgNpcDakSyncS2C::mutable_data() {
  // @@protoc_insertion_point(field_mutable_list:MsgPB.MsgNpcDakSyncS2C.data)
  return &data_;
}

// -------------------------------------------------------------------

// MsgNpcDakUpdateCountryS2C

// optional .MsgPB.EMsgType msgType = 1 [default = _MSG_NPC_DAK_UPDATE_COUNTRY_S2C];
inline bool MsgNpcDakUpdateCountryS2C::has_msgtype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgNpcDakUpdateCountryS2C::set_has_msgtype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgNpcDakUpdateCountryS2C::clear_has_msgtype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgNpcDakUpdateCountryS2C::clear_msgtype() {
  msgtype_ = 4301;
  clear_has_msgtype();
}
inline ::MsgPB::EMsgType MsgNpcDakUpdateCountryS2C::msgtype() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgNpcDakUpdateCountryS2C.msgType)
  return static_cast< ::MsgPB::EMsgType >(msgtype_);
}
inline void MsgNpcDakUpdateCountryS2C::set_msgtype(::MsgPB::EMsgType value) {
  assert(::MsgPB::EMsgType_IsValid(value));
  set_has_msgtype();
  msgtype_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgNpcDakUpdateCountryS2C.msgType)
}

// optional .MsgPB.MsgNpcDakData data = 2;
inline bool MsgNpcDakUpdateCountryS2C::has_data() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MsgNpcDakUpdateCountryS2C::set_has_data() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MsgNpcDakUpdateCountryS2C::clear_has_data() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MsgNpcDakUpdateCountryS2C::clear_data() {
  if (data_ != NULL) data_->::MsgPB::MsgNpcDakData::Clear();
  clear_has_data();
}
inline const ::MsgPB::MsgNpcDakData& MsgNpcDakUpdateCountryS2C::data() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgNpcDakUpdateCountryS2C.data)
  return data_ != NULL ? *data_ : *default_instance_->data_;
}
inline ::MsgPB::MsgNpcDakData* MsgNpcDakUpdateCountryS2C::mutable_data() {
  set_has_data();
  if (data_ == NULL) data_ = new ::MsgPB::MsgNpcDakData;
  // @@protoc_insertion_point(field_mutable:MsgPB.MsgNpcDakUpdateCountryS2C.data)
  return data_;
}
inline ::MsgPB::MsgNpcDakData* MsgNpcDakUpdateCountryS2C::release_data() {
  clear_has_data();
  ::MsgPB::MsgNpcDakData* temp = data_;
  data_ = NULL;
  return temp;
}
inline void MsgNpcDakUpdateCountryS2C::set_allocated_data(::MsgPB::MsgNpcDakData* data) {
  delete data_;
  data_ = data;
  if (data) {
    set_has_data();
  } else {
    clear_has_data();
  }
  // @@protoc_insertion_point(field_set_allocated:MsgPB.MsgNpcDakUpdateCountryS2C.data)
}

// -------------------------------------------------------------------

// MsgNpcDakStartEventS2C

// optional .MsgPB.EMsgType msgType = 1 [default = _MSG_NPC_DAK_START_EVENT_S2C];
inline bool MsgNpcDakStartEventS2C::has_msgtype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgNpcDakStartEventS2C::set_has_msgtype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgNpcDakStartEventS2C::clear_has_msgtype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgNpcDakStartEventS2C::clear_msgtype() {
  msgtype_ = 4302;
  clear_has_msgtype();
}
inline ::MsgPB::EMsgType MsgNpcDakStartEventS2C::msgtype() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgNpcDakStartEventS2C.msgType)
  return static_cast< ::MsgPB::EMsgType >(msgtype_);
}
inline void MsgNpcDakStartEventS2C::set_msgtype(::MsgPB::EMsgType value) {
  assert(::MsgPB::EMsgType_IsValid(value));
  set_has_msgtype();
  msgtype_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgNpcDakStartEventS2C.msgType)
}

// optional int32 event_type = 2;
inline bool MsgNpcDakStartEventS2C::has_event_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MsgNpcDakStartEventS2C::set_has_event_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MsgNpcDakStartEventS2C::clear_has_event_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MsgNpcDakStartEventS2C::clear_event_type() {
  event_type_ = 0;
  clear_has_event_type();
}
inline ::google::protobuf::int32 MsgNpcDakStartEventS2C::event_type() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgNpcDakStartEventS2C.event_type)
  return event_type_;
}
inline void MsgNpcDakStartEventS2C::set_event_type(::google::protobuf::int32 value) {
  set_has_event_type();
  event_type_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgNpcDakStartEventS2C.event_type)
}

// optional int32 dataid = 3;
inline bool MsgNpcDakStartEventS2C::has_dataid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MsgNpcDakStartEventS2C::set_has_dataid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MsgNpcDakStartEventS2C::clear_has_dataid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MsgNpcDakStartEventS2C::clear_dataid() {
  dataid_ = 0;
  clear_has_dataid();
}
inline ::google::protobuf::int32 MsgNpcDakStartEventS2C::dataid() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgNpcDakStartEventS2C.dataid)
  return dataid_;
}
inline void MsgNpcDakStartEventS2C::set_dataid(::google::protobuf::int32 value) {
  set_has_dataid();
  dataid_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgNpcDakStartEventS2C.dataid)
}

// -------------------------------------------------------------------

// MsgNpcDakEndEventS2C

// optional .MsgPB.EMsgType msgType = 1 [default = _MSG_NPC_DAK_END_EVENT_S2C];
inline bool MsgNpcDakEndEventS2C::has_msgtype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgNpcDakEndEventS2C::set_has_msgtype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgNpcDakEndEventS2C::clear_has_msgtype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgNpcDakEndEventS2C::clear_msgtype() {
  msgtype_ = 4303;
  clear_has_msgtype();
}
inline ::MsgPB::EMsgType MsgNpcDakEndEventS2C::msgtype() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgNpcDakEndEventS2C.msgType)
  return static_cast< ::MsgPB::EMsgType >(msgtype_);
}
inline void MsgNpcDakEndEventS2C::set_msgtype(::MsgPB::EMsgType value) {
  assert(::MsgPB::EMsgType_IsValid(value));
  set_has_msgtype();
  msgtype_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgNpcDakEndEventS2C.msgType)
}

// optional int32 event_type = 2;
inline bool MsgNpcDakEndEventS2C::has_event_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MsgNpcDakEndEventS2C::set_has_event_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MsgNpcDakEndEventS2C::clear_has_event_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MsgNpcDakEndEventS2C::clear_event_type() {
  event_type_ = 0;
  clear_has_event_type();
}
inline ::google::protobuf::int32 MsgNpcDakEndEventS2C::event_type() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgNpcDakEndEventS2C.event_type)
  return event_type_;
}
inline void MsgNpcDakEndEventS2C::set_event_type(::google::protobuf::int32 value) {
  set_has_event_type();
  event_type_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgNpcDakEndEventS2C.event_type)
}

// optional int32 dataid = 3;
inline bool MsgNpcDakEndEventS2C::has_dataid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MsgNpcDakEndEventS2C::set_has_dataid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MsgNpcDakEndEventS2C::clear_has_dataid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MsgNpcDakEndEventS2C::clear_dataid() {
  dataid_ = 0;
  clear_has_dataid();
}
inline ::google::protobuf::int32 MsgNpcDakEndEventS2C::dataid() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgNpcDakEndEventS2C.dataid)
  return dataid_;
}
inline void MsgNpcDakEndEventS2C::set_dataid(::google::protobuf::int32 value) {
  set_has_dataid();
  dataid_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgNpcDakEndEventS2C.dataid)
}

// -------------------------------------------------------------------

// MsgNpcDakRobC2S

// optional .MsgPB.EMsgType msgType = 1 [default = _MSG_NPC_DAK_ROB_C2S];
inline bool MsgNpcDakRobC2S::has_msgtype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgNpcDakRobC2S::set_has_msgtype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgNpcDakRobC2S::clear_has_msgtype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgNpcDakRobC2S::clear_msgtype() {
  msgtype_ = 4304;
  clear_has_msgtype();
}
inline ::MsgPB::EMsgType MsgNpcDakRobC2S::msgtype() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgNpcDakRobC2S.msgType)
  return static_cast< ::MsgPB::EMsgType >(msgtype_);
}
inline void MsgNpcDakRobC2S::set_msgtype(::MsgPB::EMsgType value) {
  assert(::MsgPB::EMsgType_IsValid(value));
  set_has_msgtype();
  msgtype_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgNpcDakRobC2S.msgType)
}

// optional int32 dataid = 2;
inline bool MsgNpcDakRobC2S::has_dataid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MsgNpcDakRobC2S::set_has_dataid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MsgNpcDakRobC2S::clear_has_dataid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MsgNpcDakRobC2S::clear_dataid() {
  dataid_ = 0;
  clear_has_dataid();
}
inline ::google::protobuf::int32 MsgNpcDakRobC2S::dataid() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgNpcDakRobC2S.dataid)
  return dataid_;
}
inline void MsgNpcDakRobC2S::set_dataid(::google::protobuf::int32 value) {
  set_has_dataid();
  dataid_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgNpcDakRobC2S.dataid)
}

// -------------------------------------------------------------------

// MsgNpcDakTrigInteractiveC2S

// optional .MsgPB.EMsgType msgType = 1 [default = _MSG_NPC_DAK_TRIG_INTERACTIVE_C2S];
inline bool MsgNpcDakTrigInteractiveC2S::has_msgtype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgNpcDakTrigInteractiveC2S::set_has_msgtype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgNpcDakTrigInteractiveC2S::clear_has_msgtype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgNpcDakTrigInteractiveC2S::clear_msgtype() {
  msgtype_ = 4305;
  clear_has_msgtype();
}
inline ::MsgPB::EMsgType MsgNpcDakTrigInteractiveC2S::msgtype() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgNpcDakTrigInteractiveC2S.msgType)
  return static_cast< ::MsgPB::EMsgType >(msgtype_);
}
inline void MsgNpcDakTrigInteractiveC2S::set_msgtype(::MsgPB::EMsgType value) {
  assert(::MsgPB::EMsgType_IsValid(value));
  set_has_msgtype();
  msgtype_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgNpcDakTrigInteractiveC2S.msgType)
}

// optional .MsgPB.NPC_DAK_TRIG_TYPE trig_type = 2;
inline bool MsgNpcDakTrigInteractiveC2S::has_trig_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MsgNpcDakTrigInteractiveC2S::set_has_trig_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MsgNpcDakTrigInteractiveC2S::clear_has_trig_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MsgNpcDakTrigInteractiveC2S::clear_trig_type() {
  trig_type_ = 0;
  clear_has_trig_type();
}
inline ::MsgPB::NPC_DAK_TRIG_TYPE MsgNpcDakTrigInteractiveC2S::trig_type() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgNpcDakTrigInteractiveC2S.trig_type)
  return static_cast< ::MsgPB::NPC_DAK_TRIG_TYPE >(trig_type_);
}
inline void MsgNpcDakTrigInteractiveC2S::set_trig_type(::MsgPB::NPC_DAK_TRIG_TYPE value) {
  assert(::MsgPB::NPC_DAK_TRIG_TYPE_IsValid(value));
  set_has_trig_type();
  trig_type_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgNpcDakTrigInteractiveC2S.trig_type)
}

// optional int64 uuid = 3;
inline bool MsgNpcDakTrigInteractiveC2S::has_uuid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MsgNpcDakTrigInteractiveC2S::set_has_uuid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MsgNpcDakTrigInteractiveC2S::clear_has_uuid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MsgNpcDakTrigInteractiveC2S::clear_uuid() {
  uuid_ = GOOGLE_LONGLONG(0);
  clear_has_uuid();
}
inline ::google::protobuf::int64 MsgNpcDakTrigInteractiveC2S::uuid() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgNpcDakTrigInteractiveC2S.uuid)
  return uuid_;
}
inline void MsgNpcDakTrigInteractiveC2S::set_uuid(::google::protobuf::int64 value) {
  set_has_uuid();
  uuid_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgNpcDakTrigInteractiveC2S.uuid)
}

// optional int32 interactive = 4;
inline bool MsgNpcDakTrigInteractiveC2S::has_interactive() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MsgNpcDakTrigInteractiveC2S::set_has_interactive() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MsgNpcDakTrigInteractiveC2S::clear_has_interactive() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MsgNpcDakTrigInteractiveC2S::clear_interactive() {
  interactive_ = 0;
  clear_has_interactive();
}
inline ::google::protobuf::int32 MsgNpcDakTrigInteractiveC2S::interactive() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgNpcDakTrigInteractiveC2S.interactive)
  return interactive_;
}
inline void MsgNpcDakTrigInteractiveC2S::set_interactive(::google::protobuf::int32 value) {
  set_has_interactive();
  interactive_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgNpcDakTrigInteractiveC2S.interactive)
}

// -------------------------------------------------------------------

// MsgNpcDakTrigInteractiveS2C_ParamData

// optional int32 dataID = 1;
inline bool MsgNpcDakTrigInteractiveS2C_ParamData::has_dataid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgNpcDakTrigInteractiveS2C_ParamData::set_has_dataid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgNpcDakTrigInteractiveS2C_ParamData::clear_has_dataid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgNpcDakTrigInteractiveS2C_ParamData::clear_dataid() {
  dataid_ = 0;
  clear_has_dataid();
}
inline ::google::protobuf::int32 MsgNpcDakTrigInteractiveS2C_ParamData::dataid() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgNpcDakTrigInteractiveS2C.ParamData.dataID)
  return dataid_;
}
inline void MsgNpcDakTrigInteractiveS2C_ParamData::set_dataid(::google::protobuf::int32 value) {
  set_has_dataid();
  dataid_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgNpcDakTrigInteractiveS2C.ParamData.dataID)
}

// optional int32 count = 2;
inline bool MsgNpcDakTrigInteractiveS2C_ParamData::has_count() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MsgNpcDakTrigInteractiveS2C_ParamData::set_has_count() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MsgNpcDakTrigInteractiveS2C_ParamData::clear_has_count() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MsgNpcDakTrigInteractiveS2C_ParamData::clear_count() {
  count_ = 0;
  clear_has_count();
}
inline ::google::protobuf::int32 MsgNpcDakTrigInteractiveS2C_ParamData::count() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgNpcDakTrigInteractiveS2C.ParamData.count)
  return count_;
}
inline void MsgNpcDakTrigInteractiveS2C_ParamData::set_count(::google::protobuf::int32 value) {
  set_has_count();
  count_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgNpcDakTrigInteractiveS2C.ParamData.count)
}

// -------------------------------------------------------------------

// MsgNpcDakTrigInteractiveS2C

// optional .MsgPB.EMsgType msgType = 1 [default = _MSG_NPC_DAK_TRIG_INTERACTIVE_S2C];
inline bool MsgNpcDakTrigInteractiveS2C::has_msgtype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgNpcDakTrigInteractiveS2C::set_has_msgtype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgNpcDakTrigInteractiveS2C::clear_has_msgtype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgNpcDakTrigInteractiveS2C::clear_msgtype() {
  msgtype_ = 4306;
  clear_has_msgtype();
}
inline ::MsgPB::EMsgType MsgNpcDakTrigInteractiveS2C::msgtype() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgNpcDakTrigInteractiveS2C.msgType)
  return static_cast< ::MsgPB::EMsgType >(msgtype_);
}
inline void MsgNpcDakTrigInteractiveS2C::set_msgtype(::MsgPB::EMsgType value) {
  assert(::MsgPB::EMsgType_IsValid(value));
  set_has_msgtype();
  msgtype_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgNpcDakTrigInteractiveS2C.msgType)
}

// optional .MsgPB.NPC_DAK_TRIG_TYPE trig_type = 2;
inline bool MsgNpcDakTrigInteractiveS2C::has_trig_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MsgNpcDakTrigInteractiveS2C::set_has_trig_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MsgNpcDakTrigInteractiveS2C::clear_has_trig_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MsgNpcDakTrigInteractiveS2C::clear_trig_type() {
  trig_type_ = 0;
  clear_has_trig_type();
}
inline ::MsgPB::NPC_DAK_TRIG_TYPE MsgNpcDakTrigInteractiveS2C::trig_type() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgNpcDakTrigInteractiveS2C.trig_type)
  return static_cast< ::MsgPB::NPC_DAK_TRIG_TYPE >(trig_type_);
}
inline void MsgNpcDakTrigInteractiveS2C::set_trig_type(::MsgPB::NPC_DAK_TRIG_TYPE value) {
  assert(::MsgPB::NPC_DAK_TRIG_TYPE_IsValid(value));
  set_has_trig_type();
  trig_type_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgNpcDakTrigInteractiveS2C.trig_type)
}

// optional int64 uuid = 3;
inline bool MsgNpcDakTrigInteractiveS2C::has_uuid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MsgNpcDakTrigInteractiveS2C::set_has_uuid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MsgNpcDakTrigInteractiveS2C::clear_has_uuid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MsgNpcDakTrigInteractiveS2C::clear_uuid() {
  uuid_ = GOOGLE_LONGLONG(0);
  clear_has_uuid();
}
inline ::google::protobuf::int64 MsgNpcDakTrigInteractiveS2C::uuid() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgNpcDakTrigInteractiveS2C.uuid)
  return uuid_;
}
inline void MsgNpcDakTrigInteractiveS2C::set_uuid(::google::protobuf::int64 value) {
  set_has_uuid();
  uuid_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgNpcDakTrigInteractiveS2C.uuid)
}

// optional .MsgPB.MsgNpcDakTrigInteractiveS2C.RESULT res = 4;
inline bool MsgNpcDakTrigInteractiveS2C::has_res() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MsgNpcDakTrigInteractiveS2C::set_has_res() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MsgNpcDakTrigInteractiveS2C::clear_has_res() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MsgNpcDakTrigInteractiveS2C::clear_res() {
  res_ = 0;
  clear_has_res();
}
inline ::MsgPB::MsgNpcDakTrigInteractiveS2C_RESULT MsgNpcDakTrigInteractiveS2C::res() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgNpcDakTrigInteractiveS2C.res)
  return static_cast< ::MsgPB::MsgNpcDakTrigInteractiveS2C_RESULT >(res_);
}
inline void MsgNpcDakTrigInteractiveS2C::set_res(::MsgPB::MsgNpcDakTrigInteractiveS2C_RESULT value) {
  assert(::MsgPB::MsgNpcDakTrigInteractiveS2C_RESULT_IsValid(value));
  set_has_res();
  res_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgNpcDakTrigInteractiveS2C.res)
}

// repeated .MsgPB.MsgNpcDakTrigInteractiveS2C.ParamData data = 5;
inline int MsgNpcDakTrigInteractiveS2C::data_size() const {
  return data_.size();
}
inline void MsgNpcDakTrigInteractiveS2C::clear_data() {
  data_.Clear();
}
inline const ::MsgPB::MsgNpcDakTrigInteractiveS2C_ParamData& MsgNpcDakTrigInteractiveS2C::data(int index) const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgNpcDakTrigInteractiveS2C.data)
  return data_.Get(index);
}
inline ::MsgPB::MsgNpcDakTrigInteractiveS2C_ParamData* MsgNpcDakTrigInteractiveS2C::mutable_data(int index) {
  // @@protoc_insertion_point(field_mutable:MsgPB.MsgNpcDakTrigInteractiveS2C.data)
  return data_.Mutable(index);
}
inline ::MsgPB::MsgNpcDakTrigInteractiveS2C_ParamData* MsgNpcDakTrigInteractiveS2C::add_data() {
  // @@protoc_insertion_point(field_add:MsgPB.MsgNpcDakTrigInteractiveS2C.data)
  return data_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::MsgPB::MsgNpcDakTrigInteractiveS2C_ParamData >&
MsgNpcDakTrigInteractiveS2C::data() const {
  // @@protoc_insertion_point(field_list:MsgPB.MsgNpcDakTrigInteractiveS2C.data)
  return data_;
}
inline ::google::protobuf::RepeatedPtrField< ::MsgPB::MsgNpcDakTrigInteractiveS2C_ParamData >*
MsgNpcDakTrigInteractiveS2C::mutable_data() {
  // @@protoc_insertion_point(field_mutable_list:MsgPB.MsgNpcDakTrigInteractiveS2C.data)
  return &data_;
}

// optional bool send_mail = 6;
inline bool MsgNpcDakTrigInteractiveS2C::has_send_mail() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void MsgNpcDakTrigInteractiveS2C::set_has_send_mail() {
  _has_bits_[0] |= 0x00000020u;
}
inline void MsgNpcDakTrigInteractiveS2C::clear_has_send_mail() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void MsgNpcDakTrigInteractiveS2C::clear_send_mail() {
  send_mail_ = false;
  clear_has_send_mail();
}
inline bool MsgNpcDakTrigInteractiveS2C::send_mail() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgNpcDakTrigInteractiveS2C.send_mail)
  return send_mail_;
}
inline void MsgNpcDakTrigInteractiveS2C::set_send_mail(bool value) {
  set_has_send_mail();
  send_mail_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgNpcDakTrigInteractiveS2C.send_mail)
}

// -------------------------------------------------------------------

// MsgNpcDakEnvoyC2S

// optional .MsgPB.EMsgType msgType = 1 [default = _MSG_NPC_DAK_ENVOY_C2S];
inline bool MsgNpcDakEnvoyC2S::has_msgtype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgNpcDakEnvoyC2S::set_has_msgtype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgNpcDakEnvoyC2S::clear_has_msgtype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgNpcDakEnvoyC2S::clear_msgtype() {
  msgtype_ = 4307;
  clear_has_msgtype();
}
inline ::MsgPB::EMsgType MsgNpcDakEnvoyC2S::msgtype() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgNpcDakEnvoyC2S.msgType)
  return static_cast< ::MsgPB::EMsgType >(msgtype_);
}
inline void MsgNpcDakEnvoyC2S::set_msgtype(::MsgPB::EMsgType value) {
  assert(::MsgPB::EMsgType_IsValid(value));
  set_has_msgtype();
  msgtype_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgNpcDakEnvoyC2S.msgType)
}

// optional int32 envoytype = 2;
inline bool MsgNpcDakEnvoyC2S::has_envoytype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MsgNpcDakEnvoyC2S::set_has_envoytype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MsgNpcDakEnvoyC2S::clear_has_envoytype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MsgNpcDakEnvoyC2S::clear_envoytype() {
  envoytype_ = 0;
  clear_has_envoytype();
}
inline ::google::protobuf::int32 MsgNpcDakEnvoyC2S::envoytype() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgNpcDakEnvoyC2S.envoytype)
  return envoytype_;
}
inline void MsgNpcDakEnvoyC2S::set_envoytype(::google::protobuf::int32 value) {
  set_has_envoytype();
  envoytype_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgNpcDakEnvoyC2S.envoytype)
}

// optional int64 uuid = 3;
inline bool MsgNpcDakEnvoyC2S::has_uuid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MsgNpcDakEnvoyC2S::set_has_uuid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MsgNpcDakEnvoyC2S::clear_has_uuid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MsgNpcDakEnvoyC2S::clear_uuid() {
  uuid_ = GOOGLE_LONGLONG(0);
  clear_has_uuid();
}
inline ::google::protobuf::int64 MsgNpcDakEnvoyC2S::uuid() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgNpcDakEnvoyC2S.uuid)
  return uuid_;
}
inline void MsgNpcDakEnvoyC2S::set_uuid(::google::protobuf::int64 value) {
  set_has_uuid();
  uuid_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgNpcDakEnvoyC2S.uuid)
}

// optional int32 index = 4;
inline bool MsgNpcDakEnvoyC2S::has_index() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MsgNpcDakEnvoyC2S::set_has_index() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MsgNpcDakEnvoyC2S::clear_has_index() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MsgNpcDakEnvoyC2S::clear_index() {
  index_ = 0;
  clear_has_index();
}
inline ::google::protobuf::int32 MsgNpcDakEnvoyC2S::index() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgNpcDakEnvoyC2S.index)
  return index_;
}
inline void MsgNpcDakEnvoyC2S::set_index(::google::protobuf::int32 value) {
  set_has_index();
  index_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgNpcDakEnvoyC2S.index)
}

// -------------------------------------------------------------------

// MsgNpcDakEnvoyS2C

// optional .MsgPB.EMsgType msgType = 1 [default = _MSG_NPC_DAK_ENVOY_S2C];
inline bool MsgNpcDakEnvoyS2C::has_msgtype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgNpcDakEnvoyS2C::set_has_msgtype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgNpcDakEnvoyS2C::clear_has_msgtype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgNpcDakEnvoyS2C::clear_msgtype() {
  msgtype_ = 4308;
  clear_has_msgtype();
}
inline ::MsgPB::EMsgType MsgNpcDakEnvoyS2C::msgtype() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgNpcDakEnvoyS2C.msgType)
  return static_cast< ::MsgPB::EMsgType >(msgtype_);
}
inline void MsgNpcDakEnvoyS2C::set_msgtype(::MsgPB::EMsgType value) {
  assert(::MsgPB::EMsgType_IsValid(value));
  set_has_msgtype();
  msgtype_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgNpcDakEnvoyS2C.msgType)
}

// optional int32 envoytype = 2;
inline bool MsgNpcDakEnvoyS2C::has_envoytype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MsgNpcDakEnvoyS2C::set_has_envoytype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MsgNpcDakEnvoyS2C::clear_has_envoytype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MsgNpcDakEnvoyS2C::clear_envoytype() {
  envoytype_ = 0;
  clear_has_envoytype();
}
inline ::google::protobuf::int32 MsgNpcDakEnvoyS2C::envoytype() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgNpcDakEnvoyS2C.envoytype)
  return envoytype_;
}
inline void MsgNpcDakEnvoyS2C::set_envoytype(::google::protobuf::int32 value) {
  set_has_envoytype();
  envoytype_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgNpcDakEnvoyS2C.envoytype)
}

// optional int64 uuid = 3;
inline bool MsgNpcDakEnvoyS2C::has_uuid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MsgNpcDakEnvoyS2C::set_has_uuid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MsgNpcDakEnvoyS2C::clear_has_uuid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MsgNpcDakEnvoyS2C::clear_uuid() {
  uuid_ = GOOGLE_LONGLONG(0);
  clear_has_uuid();
}
inline ::google::protobuf::int64 MsgNpcDakEnvoyS2C::uuid() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgNpcDakEnvoyS2C.uuid)
  return uuid_;
}
inline void MsgNpcDakEnvoyS2C::set_uuid(::google::protobuf::int64 value) {
  set_has_uuid();
  uuid_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgNpcDakEnvoyS2C.uuid)
}

// optional .MsgPB.MsgNpcDakEnvoyS2C.RESULT res = 4;
inline bool MsgNpcDakEnvoyS2C::has_res() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MsgNpcDakEnvoyS2C::set_has_res() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MsgNpcDakEnvoyS2C::clear_has_res() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MsgNpcDakEnvoyS2C::clear_res() {
  res_ = 0;
  clear_has_res();
}
inline ::MsgPB::MsgNpcDakEnvoyS2C_RESULT MsgNpcDakEnvoyS2C::res() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgNpcDakEnvoyS2C.res)
  return static_cast< ::MsgPB::MsgNpcDakEnvoyS2C_RESULT >(res_);
}
inline void MsgNpcDakEnvoyS2C::set_res(::MsgPB::MsgNpcDakEnvoyS2C_RESULT value) {
  assert(::MsgPB::MsgNpcDakEnvoyS2C_RESULT_IsValid(value));
  set_has_res();
  res_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgNpcDakEnvoyS2C.res)
}

// optional int32 index = 5;
inline bool MsgNpcDakEnvoyS2C::has_index() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void MsgNpcDakEnvoyS2C::set_has_index() {
  _has_bits_[0] |= 0x00000010u;
}
inline void MsgNpcDakEnvoyS2C::clear_has_index() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void MsgNpcDakEnvoyS2C::clear_index() {
  index_ = 0;
  clear_has_index();
}
inline ::google::protobuf::int32 MsgNpcDakEnvoyS2C::index() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgNpcDakEnvoyS2C.index)
  return index_;
}
inline void MsgNpcDakEnvoyS2C::set_index(::google::protobuf::int32 value) {
  set_has_index();
  index_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgNpcDakEnvoyS2C.index)
}

// -------------------------------------------------------------------

// MsgNpcDakEnvoySetParamC2S

// optional .MsgPB.EMsgType msgType = 1 [default = _MSG_NPC_DAK_ENVOY_SET_PARAM_C2S];
inline bool MsgNpcDakEnvoySetParamC2S::has_msgtype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgNpcDakEnvoySetParamC2S::set_has_msgtype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgNpcDakEnvoySetParamC2S::clear_has_msgtype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgNpcDakEnvoySetParamC2S::clear_msgtype() {
  msgtype_ = 4309;
  clear_has_msgtype();
}
inline ::MsgPB::EMsgType MsgNpcDakEnvoySetParamC2S::msgtype() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgNpcDakEnvoySetParamC2S.msgType)
  return static_cast< ::MsgPB::EMsgType >(msgtype_);
}
inline void MsgNpcDakEnvoySetParamC2S::set_msgtype(::MsgPB::EMsgType value) {
  assert(::MsgPB::EMsgType_IsValid(value));
  set_has_msgtype();
  msgtype_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgNpcDakEnvoySetParamC2S.msgType)
}

// optional int32 envoy_idx = 2;
inline bool MsgNpcDakEnvoySetParamC2S::has_envoy_idx() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MsgNpcDakEnvoySetParamC2S::set_has_envoy_idx() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MsgNpcDakEnvoySetParamC2S::clear_has_envoy_idx() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MsgNpcDakEnvoySetParamC2S::clear_envoy_idx() {
  envoy_idx_ = 0;
  clear_has_envoy_idx();
}
inline ::google::protobuf::int32 MsgNpcDakEnvoySetParamC2S::envoy_idx() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgNpcDakEnvoySetParamC2S.envoy_idx)
  return envoy_idx_;
}
inline void MsgNpcDakEnvoySetParamC2S::set_envoy_idx(::google::protobuf::int32 value) {
  set_has_envoy_idx();
  envoy_idx_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgNpcDakEnvoySetParamC2S.envoy_idx)
}

// optional int64 uuid = 3;
inline bool MsgNpcDakEnvoySetParamC2S::has_uuid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MsgNpcDakEnvoySetParamC2S::set_has_uuid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MsgNpcDakEnvoySetParamC2S::clear_has_uuid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MsgNpcDakEnvoySetParamC2S::clear_uuid() {
  uuid_ = GOOGLE_LONGLONG(0);
  clear_has_uuid();
}
inline ::google::protobuf::int64 MsgNpcDakEnvoySetParamC2S::uuid() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgNpcDakEnvoySetParamC2S.uuid)
  return uuid_;
}
inline void MsgNpcDakEnvoySetParamC2S::set_uuid(::google::protobuf::int64 value) {
  set_has_uuid();
  uuid_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgNpcDakEnvoySetParamC2S.uuid)
}

// optional int32 param = 4;
inline bool MsgNpcDakEnvoySetParamC2S::has_param() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MsgNpcDakEnvoySetParamC2S::set_has_param() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MsgNpcDakEnvoySetParamC2S::clear_has_param() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MsgNpcDakEnvoySetParamC2S::clear_param() {
  param_ = 0;
  clear_has_param();
}
inline ::google::protobuf::int32 MsgNpcDakEnvoySetParamC2S::param() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgNpcDakEnvoySetParamC2S.param)
  return param_;
}
inline void MsgNpcDakEnvoySetParamC2S::set_param(::google::protobuf::int32 value) {
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgNpcDakEnvoySetParamC2S.param)
}

// -------------------------------------------------------------------

// MsgNpcDakEnvoySetParamS2C

// optional .MsgPB.EMsgType msgType = 1 [default = _MSG_NPC_DAK_ENVOY_SET_PARAM_S2C];
inline bool MsgNpcDakEnvoySetParamS2C::has_msgtype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgNpcDakEnvoySetParamS2C::set_has_msgtype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgNpcDakEnvoySetParamS2C::clear_has_msgtype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgNpcDakEnvoySetParamS2C::clear_msgtype() {
  msgtype_ = 4310;
  clear_has_msgtype();
}
inline ::MsgPB::EMsgType MsgNpcDakEnvoySetParamS2C::msgtype() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgNpcDakEnvoySetParamS2C.msgType)
  return static_cast< ::MsgPB::EMsgType >(msgtype_);
}
inline void MsgNpcDakEnvoySetParamS2C::set_msgtype(::MsgPB::EMsgType value) {
  assert(::MsgPB::EMsgType_IsValid(value));
  set_has_msgtype();
  msgtype_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgNpcDakEnvoySetParamS2C.msgType)
}

// optional int32 envoy_idx = 2;
inline bool MsgNpcDakEnvoySetParamS2C::has_envoy_idx() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MsgNpcDakEnvoySetParamS2C::set_has_envoy_idx() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MsgNpcDakEnvoySetParamS2C::clear_has_envoy_idx() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MsgNpcDakEnvoySetParamS2C::clear_envoy_idx() {
  envoy_idx_ = 0;
  clear_has_envoy_idx();
}
inline ::google::protobuf::int32 MsgNpcDakEnvoySetParamS2C::envoy_idx() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgNpcDakEnvoySetParamS2C.envoy_idx)
  return envoy_idx_;
}
inline void MsgNpcDakEnvoySetParamS2C::set_envoy_idx(::google::protobuf::int32 value) {
  set_has_envoy_idx();
  envoy_idx_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgNpcDakEnvoySetParamS2C.envoy_idx)
}

// optional int64 uuid = 3;
inline bool MsgNpcDakEnvoySetParamS2C::has_uuid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MsgNpcDakEnvoySetParamS2C::set_has_uuid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MsgNpcDakEnvoySetParamS2C::clear_has_uuid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MsgNpcDakEnvoySetParamS2C::clear_uuid() {
  uuid_ = GOOGLE_LONGLONG(0);
  clear_has_uuid();
}
inline ::google::protobuf::int64 MsgNpcDakEnvoySetParamS2C::uuid() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgNpcDakEnvoySetParamS2C.uuid)
  return uuid_;
}
inline void MsgNpcDakEnvoySetParamS2C::set_uuid(::google::protobuf::int64 value) {
  set_has_uuid();
  uuid_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgNpcDakEnvoySetParamS2C.uuid)
}

// optional .MsgPB.MsgNpcDakEnvoySetParamS2C.RESULT res = 4;
inline bool MsgNpcDakEnvoySetParamS2C::has_res() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MsgNpcDakEnvoySetParamS2C::set_has_res() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MsgNpcDakEnvoySetParamS2C::clear_has_res() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MsgNpcDakEnvoySetParamS2C::clear_res() {
  res_ = 0;
  clear_has_res();
}
inline ::MsgPB::MsgNpcDakEnvoySetParamS2C_RESULT MsgNpcDakEnvoySetParamS2C::res() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgNpcDakEnvoySetParamS2C.res)
  return static_cast< ::MsgPB::MsgNpcDakEnvoySetParamS2C_RESULT >(res_);
}
inline void MsgNpcDakEnvoySetParamS2C::set_res(::MsgPB::MsgNpcDakEnvoySetParamS2C_RESULT value) {
  assert(::MsgPB::MsgNpcDakEnvoySetParamS2C_RESULT_IsValid(value));
  set_has_res();
  res_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgNpcDakEnvoySetParamS2C.res)
}

// -------------------------------------------------------------------

// MsgNpcDakEventShopStartC2S

// optional .MsgPB.EMsgType msgType = 1 [default = _MSG_NPC_DAK_EVENT_SHOP_START_C2S];
inline bool MsgNpcDakEventShopStartC2S::has_msgtype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgNpcDakEventShopStartC2S::set_has_msgtype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgNpcDakEventShopStartC2S::clear_has_msgtype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgNpcDakEventShopStartC2S::clear_msgtype() {
  msgtype_ = 4311;
  clear_has_msgtype();
}
inline ::MsgPB::EMsgType MsgNpcDakEventShopStartC2S::msgtype() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgNpcDakEventShopStartC2S.msgType)
  return static_cast< ::MsgPB::EMsgType >(msgtype_);
}
inline void MsgNpcDakEventShopStartC2S::set_msgtype(::MsgPB::EMsgType value) {
  assert(::MsgPB::EMsgType_IsValid(value));
  set_has_msgtype();
  msgtype_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgNpcDakEventShopStartC2S.msgType)
}

// repeated int32 shopid = 2;
inline int MsgNpcDakEventShopStartC2S::shopid_size() const {
  return shopid_.size();
}
inline void MsgNpcDakEventShopStartC2S::clear_shopid() {
  shopid_.Clear();
}
inline ::google::protobuf::int32 MsgNpcDakEventShopStartC2S::shopid(int index) const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgNpcDakEventShopStartC2S.shopid)
  return shopid_.Get(index);
}
inline void MsgNpcDakEventShopStartC2S::set_shopid(int index, ::google::protobuf::int32 value) {
  shopid_.Set(index, value);
  // @@protoc_insertion_point(field_set:MsgPB.MsgNpcDakEventShopStartC2S.shopid)
}
inline void MsgNpcDakEventShopStartC2S::add_shopid(::google::protobuf::int32 value) {
  shopid_.Add(value);
  // @@protoc_insertion_point(field_add:MsgPB.MsgNpcDakEventShopStartC2S.shopid)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
MsgNpcDakEventShopStartC2S::shopid() const {
  // @@protoc_insertion_point(field_list:MsgPB.MsgNpcDakEventShopStartC2S.shopid)
  return shopid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
MsgNpcDakEventShopStartC2S::mutable_shopid() {
  // @@protoc_insertion_point(field_mutable_list:MsgPB.MsgNpcDakEventShopStartC2S.shopid)
  return &shopid_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace MsgPB

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::MsgPB::MsgNpcDakTrigInteractiveS2C_RESULT> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::MsgPB::MsgNpcDakTrigInteractiveS2C_RESULT>() {
  return ::MsgPB::MsgNpcDakTrigInteractiveS2C_RESULT_descriptor();
}
template <> struct is_proto_enum< ::MsgPB::MsgNpcDakEnvoyS2C_RESULT> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::MsgPB::MsgNpcDakEnvoyS2C_RESULT>() {
  return ::MsgPB::MsgNpcDakEnvoyS2C_RESULT_descriptor();
}
template <> struct is_proto_enum< ::MsgPB::MsgNpcDakEnvoySetParamS2C_RESULT> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::MsgPB::MsgNpcDakEnvoySetParamS2C_RESULT>() {
  return ::MsgPB::MsgNpcDakEnvoySetParamS2C_RESULT_descriptor();
}
template <> struct is_proto_enum< ::MsgPB::NPC_DAK_TRIG_TYPE> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::MsgPB::NPC_DAK_TRIG_TYPE>() {
  return ::MsgPB::NPC_DAK_TRIG_TYPE_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_MsgNpcDak_2eproto__INCLUDED
