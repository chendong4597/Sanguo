// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MsgDBLog.proto

#ifndef PROTOBUF_MsgDBLog_2eproto__INCLUDED
#define PROTOBUF_MsgDBLog_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "MsgType.pb.h"
// @@protoc_insertion_point(includes)

namespace MsgPB {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_MsgDBLog_2eproto();
void protobuf_AssignDesc_MsgDBLog_2eproto();
void protobuf_ShutdownFile_MsgDBLog_2eproto();

class MsgMoneyChangeLog;
class MsgLoginoutLog;
class MsgEventLog;

enum EEventLogType {
  EVENT_LOG_TYPE_LEVEL_UP = 1
};
bool EEventLogType_IsValid(int value);
const EEventLogType EEventLogType_MIN = EVENT_LOG_TYPE_LEVEL_UP;
const EEventLogType EEventLogType_MAX = EVENT_LOG_TYPE_LEVEL_UP;
const int EEventLogType_ARRAYSIZE = EEventLogType_MAX + 1;

const ::google::protobuf::EnumDescriptor* EEventLogType_descriptor();
inline const ::std::string& EEventLogType_Name(EEventLogType value) {
  return ::google::protobuf::internal::NameOfEnum(
    EEventLogType_descriptor(), value);
}
inline bool EEventLogType_Parse(
    const ::std::string& name, EEventLogType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EEventLogType>(
    EEventLogType_descriptor(), name, value);
}
enum LOG_TYPE_TO_LOGSERVER {
  objectlog_item = 0,
  objectlog_money = 1,
  objectlog_item_craft = 2,
  objectlog_mob_drop = 3,
  objectlog_equip = 4,
  objectlog_equip_fix = 5,
  objectlog_equip_wash = 6,
  objectlog_protector = 7,
  objectlog_protector_comfort_lev = 8,
  objectlog_pet = 9,
  objectlog_equip_upgrade = 10,
  playerlog_loginout = 101,
  playerlog_death = 102,
  playerlog_relive = 103,
  playerlog_exp = 104,
  playerlog_recharge = 105,
  playerlog_achievement = 106,
  playerlog_task_npc_repo = 107,
  playerlog_loading_step = 120,
  anti_cheat_item = 150,
  dungeonlog_team = 200,
  dungeonlog_player = 201,
  dungeonlog_bounty = 202,
  monster_product = 301,
  monster_recycle = 302,
  monster_offline_die = 303,
  objectlog_plant = 401
};
bool LOG_TYPE_TO_LOGSERVER_IsValid(int value);
const LOG_TYPE_TO_LOGSERVER LOG_TYPE_TO_LOGSERVER_MIN = objectlog_item;
const LOG_TYPE_TO_LOGSERVER LOG_TYPE_TO_LOGSERVER_MAX = objectlog_plant;
const int LOG_TYPE_TO_LOGSERVER_ARRAYSIZE = LOG_TYPE_TO_LOGSERVER_MAX + 1;

const ::google::protobuf::EnumDescriptor* LOG_TYPE_TO_LOGSERVER_descriptor();
inline const ::std::string& LOG_TYPE_TO_LOGSERVER_Name(LOG_TYPE_TO_LOGSERVER value) {
  return ::google::protobuf::internal::NameOfEnum(
    LOG_TYPE_TO_LOGSERVER_descriptor(), value);
}
inline bool LOG_TYPE_TO_LOGSERVER_Parse(
    const ::std::string& name, LOG_TYPE_TO_LOGSERVER* value) {
  return ::google::protobuf::internal::ParseNamedEnum<LOG_TYPE_TO_LOGSERVER>(
    LOG_TYPE_TO_LOGSERVER_descriptor(), name, value);
}
// ===================================================================

class MsgMoneyChangeLog : public ::google::protobuf::Message {
 public:
  MsgMoneyChangeLog();
  virtual ~MsgMoneyChangeLog();

  MsgMoneyChangeLog(const MsgMoneyChangeLog& from);

  inline MsgMoneyChangeLog& operator=(const MsgMoneyChangeLog& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgMoneyChangeLog& default_instance();

  void Swap(MsgMoneyChangeLog* other);

  // implements Message ----------------------------------------------

  MsgMoneyChangeLog* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgMoneyChangeLog& from);
  void MergeFrom(const MsgMoneyChangeLog& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_MONEY_CHANGE_LOG];
  inline bool has_msgtype() const;
  inline void clear_msgtype();
  static const int kMsgTypeFieldNumber = 1;
  inline ::MsgPB::EMsgType msgtype() const;
  inline void set_msgtype(::MsgPB::EMsgType value);

  // optional int64 iggid = 2;
  inline bool has_iggid() const;
  inline void clear_iggid();
  static const int kIggidFieldNumber = 2;
  inline ::google::protobuf::int64 iggid() const;
  inline void set_iggid(::google::protobuf::int64 value);

  // optional int32 money_type = 3;
  inline bool has_money_type() const;
  inline void clear_money_type();
  static const int kMoneyTypeFieldNumber = 3;
  inline ::google::protobuf::int32 money_type() const;
  inline void set_money_type(::google::protobuf::int32 value);

  // optional int32 expend_type = 4;
  inline bool has_expend_type() const;
  inline void clear_expend_type();
  static const int kExpendTypeFieldNumber = 4;
  inline ::google::protobuf::int32 expend_type() const;
  inline void set_expend_type(::google::protobuf::int32 value);

  // optional int32 change_type_id = 5;
  inline bool has_change_type_id() const;
  inline void clear_change_type_id();
  static const int kChangeTypeIdFieldNumber = 5;
  inline ::google::protobuf::int32 change_type_id() const;
  inline void set_change_type_id(::google::protobuf::int32 value);

  // optional int64 change_num = 6;
  inline bool has_change_num() const;
  inline void clear_change_num();
  static const int kChangeNumFieldNumber = 6;
  inline ::google::protobuf::int64 change_num() const;
  inline void set_change_num(::google::protobuf::int64 value);

  // optional int64 left_num = 7;
  inline bool has_left_num() const;
  inline void clear_left_num();
  static const int kLeftNumFieldNumber = 7;
  inline ::google::protobuf::int64 left_num() const;
  inline void set_left_num(::google::protobuf::int64 value);

  // optional int32 param1 = 8;
  inline bool has_param1() const;
  inline void clear_param1();
  static const int kParam1FieldNumber = 8;
  inline ::google::protobuf::int32 param1() const;
  inline void set_param1(::google::protobuf::int32 value);

  // optional int32 param2 = 9;
  inline bool has_param2() const;
  inline void clear_param2();
  static const int kParam2FieldNumber = 9;
  inline ::google::protobuf::int32 param2() const;
  inline void set_param2(::google::protobuf::int32 value);

  // optional int32 param3 = 10;
  inline bool has_param3() const;
  inline void clear_param3();
  static const int kParam3FieldNumber = 10;
  inline ::google::protobuf::int32 param3() const;
  inline void set_param3(::google::protobuf::int32 value);

  // optional int32 insert_time = 11;
  inline bool has_insert_time() const;
  inline void clear_insert_time();
  static const int kInsertTimeFieldNumber = 11;
  inline ::google::protobuf::int32 insert_time() const;
  inline void set_insert_time(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:MsgPB.MsgMoneyChangeLog)
 private:
  inline void set_has_msgtype();
  inline void clear_has_msgtype();
  inline void set_has_iggid();
  inline void clear_has_iggid();
  inline void set_has_money_type();
  inline void clear_has_money_type();
  inline void set_has_expend_type();
  inline void clear_has_expend_type();
  inline void set_has_change_type_id();
  inline void clear_has_change_type_id();
  inline void set_has_change_num();
  inline void clear_has_change_num();
  inline void set_has_left_num();
  inline void clear_has_left_num();
  inline void set_has_param1();
  inline void clear_has_param1();
  inline void set_has_param2();
  inline void clear_has_param2();
  inline void set_has_param3();
  inline void clear_has_param3();
  inline void set_has_insert_time();
  inline void clear_has_insert_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 iggid_;
  int msgtype_;
  ::google::protobuf::int32 money_type_;
  ::google::protobuf::int32 expend_type_;
  ::google::protobuf::int32 change_type_id_;
  ::google::protobuf::int64 change_num_;
  ::google::protobuf::int64 left_num_;
  ::google::protobuf::int32 param1_;
  ::google::protobuf::int32 param2_;
  ::google::protobuf::int32 param3_;
  ::google::protobuf::int32 insert_time_;
  friend void  protobuf_AddDesc_MsgDBLog_2eproto();
  friend void protobuf_AssignDesc_MsgDBLog_2eproto();
  friend void protobuf_ShutdownFile_MsgDBLog_2eproto();

  void InitAsDefaultInstance();
  static MsgMoneyChangeLog* default_instance_;
};
// -------------------------------------------------------------------

class MsgLoginoutLog : public ::google::protobuf::Message {
 public:
  MsgLoginoutLog();
  virtual ~MsgLoginoutLog();

  MsgLoginoutLog(const MsgLoginoutLog& from);

  inline MsgLoginoutLog& operator=(const MsgLoginoutLog& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgLoginoutLog& default_instance();

  void Swap(MsgLoginoutLog* other);

  // implements Message ----------------------------------------------

  MsgLoginoutLog* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgLoginoutLog& from);
  void MergeFrom(const MsgLoginoutLog& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_LOGINOUT_LOG];
  inline bool has_msgtype() const;
  inline void clear_msgtype();
  static const int kMsgTypeFieldNumber = 1;
  inline ::MsgPB::EMsgType msgtype() const;
  inline void set_msgtype(::MsgPB::EMsgType value);

  // optional int64 iggid = 2;
  inline bool has_iggid() const;
  inline void clear_iggid();
  static const int kIggidFieldNumber = 2;
  inline ::google::protobuf::int64 iggid() const;
  inline void set_iggid(::google::protobuf::int64 value);

  // optional string ip = 3;
  inline bool has_ip() const;
  inline void clear_ip();
  static const int kIpFieldNumber = 3;
  inline const ::std::string& ip() const;
  inline void set_ip(const ::std::string& value);
  inline void set_ip(const char* value);
  inline void set_ip(const char* value, size_t size);
  inline ::std::string* mutable_ip();
  inline ::std::string* release_ip();
  inline void set_allocated_ip(::std::string* ip);

  // optional string mac = 4;
  inline bool has_mac() const;
  inline void clear_mac();
  static const int kMacFieldNumber = 4;
  inline const ::std::string& mac() const;
  inline void set_mac(const ::std::string& value);
  inline void set_mac(const char* value);
  inline void set_mac(const char* value, size_t size);
  inline ::std::string* mutable_mac();
  inline ::std::string* release_mac();
  inline void set_allocated_mac(::std::string* mac);

  // optional string game_id = 5;
  inline bool has_game_id() const;
  inline void clear_game_id();
  static const int kGameIdFieldNumber = 5;
  inline const ::std::string& game_id() const;
  inline void set_game_id(const ::std::string& value);
  inline void set_game_id(const char* value);
  inline void set_game_id(const char* value, size_t size);
  inline ::std::string* mutable_game_id();
  inline ::std::string* release_game_id();
  inline void set_allocated_game_id(::std::string* game_id);

  // optional int32 server_id = 6;
  inline bool has_server_id() const;
  inline void clear_server_id();
  static const int kServerIdFieldNumber = 6;
  inline ::google::protobuf::int32 server_id() const;
  inline void set_server_id(::google::protobuf::int32 value);

  // optional int64 log_time = 7;
  inline bool has_log_time() const;
  inline void clear_log_time();
  static const int kLogTimeFieldNumber = 7;
  inline ::google::protobuf::int64 log_time() const;
  inline void set_log_time(::google::protobuf::int64 value);

  // optional bool is_login = 8;
  inline bool has_is_login() const;
  inline void clear_is_login();
  static const int kIsLoginFieldNumber = 8;
  inline bool is_login() const;
  inline void set_is_login(bool value);

  // optional int32 online_time = 9;
  inline bool has_online_time() const;
  inline void clear_online_time();
  static const int kOnlineTimeFieldNumber = 9;
  inline ::google::protobuf::int32 online_time() const;
  inline void set_online_time(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:MsgPB.MsgLoginoutLog)
 private:
  inline void set_has_msgtype();
  inline void clear_has_msgtype();
  inline void set_has_iggid();
  inline void clear_has_iggid();
  inline void set_has_ip();
  inline void clear_has_ip();
  inline void set_has_mac();
  inline void clear_has_mac();
  inline void set_has_game_id();
  inline void clear_has_game_id();
  inline void set_has_server_id();
  inline void clear_has_server_id();
  inline void set_has_log_time();
  inline void clear_has_log_time();
  inline void set_has_is_login();
  inline void clear_has_is_login();
  inline void set_has_online_time();
  inline void clear_has_online_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 iggid_;
  ::std::string* ip_;
  int msgtype_;
  ::google::protobuf::int32 server_id_;
  ::std::string* mac_;
  ::std::string* game_id_;
  ::google::protobuf::int64 log_time_;
  bool is_login_;
  ::google::protobuf::int32 online_time_;
  friend void  protobuf_AddDesc_MsgDBLog_2eproto();
  friend void protobuf_AssignDesc_MsgDBLog_2eproto();
  friend void protobuf_ShutdownFile_MsgDBLog_2eproto();

  void InitAsDefaultInstance();
  static MsgLoginoutLog* default_instance_;
};
// -------------------------------------------------------------------

class MsgEventLog : public ::google::protobuf::Message {
 public:
  MsgEventLog();
  virtual ~MsgEventLog();

  MsgEventLog(const MsgEventLog& from);

  inline MsgEventLog& operator=(const MsgEventLog& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgEventLog& default_instance();

  void Swap(MsgEventLog* other);

  // implements Message ----------------------------------------------

  MsgEventLog* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgEventLog& from);
  void MergeFrom(const MsgEventLog& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_EVENT_LOG];
  inline bool has_msgtype() const;
  inline void clear_msgtype();
  static const int kMsgTypeFieldNumber = 1;
  inline ::MsgPB::EMsgType msgtype() const;
  inline void set_msgtype(::MsgPB::EMsgType value);

  // optional int64 iggid = 5;
  inline bool has_iggid() const;
  inline void clear_iggid();
  static const int kIggidFieldNumber = 5;
  inline ::google::protobuf::int64 iggid() const;
  inline void set_iggid(::google::protobuf::int64 value);

  // optional string name = 6;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 6;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // optional int32 level = 7;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 7;
  inline ::google::protobuf::int32 level() const;
  inline void set_level(::google::protobuf::int32 value);

  // optional int64 recharge = 8;
  inline bool has_recharge() const;
  inline void clear_recharge();
  static const int kRechargeFieldNumber = 8;
  inline ::google::protobuf::int64 recharge() const;
  inline void set_recharge(::google::protobuf::int64 value);

  // optional int32 emoney = 9;
  inline bool has_emoney() const;
  inline void clear_emoney();
  static const int kEmoneyFieldNumber = 9;
  inline ::google::protobuf::int32 emoney() const;
  inline void set_emoney(::google::protobuf::int32 value);

  // optional int32 event_type = 10;
  inline bool has_event_type() const;
  inline void clear_event_type();
  static const int kEventTypeFieldNumber = 10;
  inline ::google::protobuf::int32 event_type() const;
  inline void set_event_type(::google::protobuf::int32 value);

  // optional int32 channel = 11;
  inline bool has_channel() const;
  inline void clear_channel();
  static const int kChannelFieldNumber = 11;
  inline ::google::protobuf::int32 channel() const;
  inline void set_channel(::google::protobuf::int32 value);

  // optional string param1 = 12;
  inline bool has_param1() const;
  inline void clear_param1();
  static const int kParam1FieldNumber = 12;
  inline const ::std::string& param1() const;
  inline void set_param1(const ::std::string& value);
  inline void set_param1(const char* value);
  inline void set_param1(const char* value, size_t size);
  inline ::std::string* mutable_param1();
  inline ::std::string* release_param1();
  inline void set_allocated_param1(::std::string* param1);

  // optional string param2 = 13;
  inline bool has_param2() const;
  inline void clear_param2();
  static const int kParam2FieldNumber = 13;
  inline const ::std::string& param2() const;
  inline void set_param2(const ::std::string& value);
  inline void set_param2(const char* value);
  inline void set_param2(const char* value, size_t size);
  inline ::std::string* mutable_param2();
  inline ::std::string* release_param2();
  inline void set_allocated_param2(::std::string* param2);

  // optional string param3 = 14;
  inline bool has_param3() const;
  inline void clear_param3();
  static const int kParam3FieldNumber = 14;
  inline const ::std::string& param3() const;
  inline void set_param3(const ::std::string& value);
  inline void set_param3(const char* value);
  inline void set_param3(const char* value, size_t size);
  inline ::std::string* mutable_param3();
  inline ::std::string* release_param3();
  inline void set_allocated_param3(::std::string* param3);

  // optional string param4 = 15;
  inline bool has_param4() const;
  inline void clear_param4();
  static const int kParam4FieldNumber = 15;
  inline const ::std::string& param4() const;
  inline void set_param4(const ::std::string& value);
  inline void set_param4(const char* value);
  inline void set_param4(const char* value, size_t size);
  inline ::std::string* mutable_param4();
  inline ::std::string* release_param4();
  inline void set_allocated_param4(::std::string* param4);

  // optional string param5 = 16;
  inline bool has_param5() const;
  inline void clear_param5();
  static const int kParam5FieldNumber = 16;
  inline const ::std::string& param5() const;
  inline void set_param5(const ::std::string& value);
  inline void set_param5(const char* value);
  inline void set_param5(const char* value, size_t size);
  inline ::std::string* mutable_param5();
  inline ::std::string* release_param5();
  inline void set_allocated_param5(::std::string* param5);

  // optional string param6 = 17;
  inline bool has_param6() const;
  inline void clear_param6();
  static const int kParam6FieldNumber = 17;
  inline const ::std::string& param6() const;
  inline void set_param6(const ::std::string& value);
  inline void set_param6(const char* value);
  inline void set_param6(const char* value, size_t size);
  inline ::std::string* mutable_param6();
  inline ::std::string* release_param6();
  inline void set_allocated_param6(::std::string* param6);

  // optional string param7 = 18;
  inline bool has_param7() const;
  inline void clear_param7();
  static const int kParam7FieldNumber = 18;
  inline const ::std::string& param7() const;
  inline void set_param7(const ::std::string& value);
  inline void set_param7(const char* value);
  inline void set_param7(const char* value, size_t size);
  inline ::std::string* mutable_param7();
  inline ::std::string* release_param7();
  inline void set_allocated_param7(::std::string* param7);

  // optional string param8 = 19;
  inline bool has_param8() const;
  inline void clear_param8();
  static const int kParam8FieldNumber = 19;
  inline const ::std::string& param8() const;
  inline void set_param8(const ::std::string& value);
  inline void set_param8(const char* value);
  inline void set_param8(const char* value, size_t size);
  inline ::std::string* mutable_param8();
  inline ::std::string* release_param8();
  inline void set_allocated_param8(::std::string* param8);

  // @@protoc_insertion_point(class_scope:MsgPB.MsgEventLog)
 private:
  inline void set_has_msgtype();
  inline void clear_has_msgtype();
  inline void set_has_iggid();
  inline void clear_has_iggid();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_recharge();
  inline void clear_has_recharge();
  inline void set_has_emoney();
  inline void clear_has_emoney();
  inline void set_has_event_type();
  inline void clear_has_event_type();
  inline void set_has_channel();
  inline void clear_has_channel();
  inline void set_has_param1();
  inline void clear_has_param1();
  inline void set_has_param2();
  inline void clear_has_param2();
  inline void set_has_param3();
  inline void clear_has_param3();
  inline void set_has_param4();
  inline void clear_has_param4();
  inline void set_has_param5();
  inline void clear_has_param5();
  inline void set_has_param6();
  inline void clear_has_param6();
  inline void set_has_param7();
  inline void clear_has_param7();
  inline void set_has_param8();
  inline void clear_has_param8();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 iggid_;
  int msgtype_;
  ::google::protobuf::int32 level_;
  ::std::string* name_;
  ::google::protobuf::int64 recharge_;
  ::google::protobuf::int32 emoney_;
  ::google::protobuf::int32 event_type_;
  ::std::string* param1_;
  ::std::string* param2_;
  ::std::string* param3_;
  ::std::string* param4_;
  ::std::string* param5_;
  ::std::string* param6_;
  ::std::string* param7_;
  ::std::string* param8_;
  ::google::protobuf::int32 channel_;
  friend void  protobuf_AddDesc_MsgDBLog_2eproto();
  friend void protobuf_AssignDesc_MsgDBLog_2eproto();
  friend void protobuf_ShutdownFile_MsgDBLog_2eproto();

  void InitAsDefaultInstance();
  static MsgEventLog* default_instance_;
};
// ===================================================================


// ===================================================================

// MsgMoneyChangeLog

// optional .MsgPB.EMsgType msgType = 1 [default = _MSG_MONEY_CHANGE_LOG];
inline bool MsgMoneyChangeLog::has_msgtype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgMoneyChangeLog::set_has_msgtype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgMoneyChangeLog::clear_has_msgtype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgMoneyChangeLog::clear_msgtype() {
  msgtype_ = 5800;
  clear_has_msgtype();
}
inline ::MsgPB::EMsgType MsgMoneyChangeLog::msgtype() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgMoneyChangeLog.msgType)
  return static_cast< ::MsgPB::EMsgType >(msgtype_);
}
inline void MsgMoneyChangeLog::set_msgtype(::MsgPB::EMsgType value) {
  assert(::MsgPB::EMsgType_IsValid(value));
  set_has_msgtype();
  msgtype_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgMoneyChangeLog.msgType)
}

// optional int64 iggid = 2;
inline bool MsgMoneyChangeLog::has_iggid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MsgMoneyChangeLog::set_has_iggid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MsgMoneyChangeLog::clear_has_iggid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MsgMoneyChangeLog::clear_iggid() {
  iggid_ = GOOGLE_LONGLONG(0);
  clear_has_iggid();
}
inline ::google::protobuf::int64 MsgMoneyChangeLog::iggid() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgMoneyChangeLog.iggid)
  return iggid_;
}
inline void MsgMoneyChangeLog::set_iggid(::google::protobuf::int64 value) {
  set_has_iggid();
  iggid_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgMoneyChangeLog.iggid)
}

// optional int32 money_type = 3;
inline bool MsgMoneyChangeLog::has_money_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MsgMoneyChangeLog::set_has_money_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MsgMoneyChangeLog::clear_has_money_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MsgMoneyChangeLog::clear_money_type() {
  money_type_ = 0;
  clear_has_money_type();
}
inline ::google::protobuf::int32 MsgMoneyChangeLog::money_type() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgMoneyChangeLog.money_type)
  return money_type_;
}
inline void MsgMoneyChangeLog::set_money_type(::google::protobuf::int32 value) {
  set_has_money_type();
  money_type_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgMoneyChangeLog.money_type)
}

// optional int32 expend_type = 4;
inline bool MsgMoneyChangeLog::has_expend_type() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MsgMoneyChangeLog::set_has_expend_type() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MsgMoneyChangeLog::clear_has_expend_type() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MsgMoneyChangeLog::clear_expend_type() {
  expend_type_ = 0;
  clear_has_expend_type();
}
inline ::google::protobuf::int32 MsgMoneyChangeLog::expend_type() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgMoneyChangeLog.expend_type)
  return expend_type_;
}
inline void MsgMoneyChangeLog::set_expend_type(::google::protobuf::int32 value) {
  set_has_expend_type();
  expend_type_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgMoneyChangeLog.expend_type)
}

// optional int32 change_type_id = 5;
inline bool MsgMoneyChangeLog::has_change_type_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void MsgMoneyChangeLog::set_has_change_type_id() {
  _has_bits_[0] |= 0x00000010u;
}
inline void MsgMoneyChangeLog::clear_has_change_type_id() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void MsgMoneyChangeLog::clear_change_type_id() {
  change_type_id_ = 0;
  clear_has_change_type_id();
}
inline ::google::protobuf::int32 MsgMoneyChangeLog::change_type_id() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgMoneyChangeLog.change_type_id)
  return change_type_id_;
}
inline void MsgMoneyChangeLog::set_change_type_id(::google::protobuf::int32 value) {
  set_has_change_type_id();
  change_type_id_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgMoneyChangeLog.change_type_id)
}

// optional int64 change_num = 6;
inline bool MsgMoneyChangeLog::has_change_num() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void MsgMoneyChangeLog::set_has_change_num() {
  _has_bits_[0] |= 0x00000020u;
}
inline void MsgMoneyChangeLog::clear_has_change_num() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void MsgMoneyChangeLog::clear_change_num() {
  change_num_ = GOOGLE_LONGLONG(0);
  clear_has_change_num();
}
inline ::google::protobuf::int64 MsgMoneyChangeLog::change_num() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgMoneyChangeLog.change_num)
  return change_num_;
}
inline void MsgMoneyChangeLog::set_change_num(::google::protobuf::int64 value) {
  set_has_change_num();
  change_num_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgMoneyChangeLog.change_num)
}

// optional int64 left_num = 7;
inline bool MsgMoneyChangeLog::has_left_num() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void MsgMoneyChangeLog::set_has_left_num() {
  _has_bits_[0] |= 0x00000040u;
}
inline void MsgMoneyChangeLog::clear_has_left_num() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void MsgMoneyChangeLog::clear_left_num() {
  left_num_ = GOOGLE_LONGLONG(0);
  clear_has_left_num();
}
inline ::google::protobuf::int64 MsgMoneyChangeLog::left_num() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgMoneyChangeLog.left_num)
  return left_num_;
}
inline void MsgMoneyChangeLog::set_left_num(::google::protobuf::int64 value) {
  set_has_left_num();
  left_num_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgMoneyChangeLog.left_num)
}

// optional int32 param1 = 8;
inline bool MsgMoneyChangeLog::has_param1() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void MsgMoneyChangeLog::set_has_param1() {
  _has_bits_[0] |= 0x00000080u;
}
inline void MsgMoneyChangeLog::clear_has_param1() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void MsgMoneyChangeLog::clear_param1() {
  param1_ = 0;
  clear_has_param1();
}
inline ::google::protobuf::int32 MsgMoneyChangeLog::param1() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgMoneyChangeLog.param1)
  return param1_;
}
inline void MsgMoneyChangeLog::set_param1(::google::protobuf::int32 value) {
  set_has_param1();
  param1_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgMoneyChangeLog.param1)
}

// optional int32 param2 = 9;
inline bool MsgMoneyChangeLog::has_param2() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void MsgMoneyChangeLog::set_has_param2() {
  _has_bits_[0] |= 0x00000100u;
}
inline void MsgMoneyChangeLog::clear_has_param2() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void MsgMoneyChangeLog::clear_param2() {
  param2_ = 0;
  clear_has_param2();
}
inline ::google::protobuf::int32 MsgMoneyChangeLog::param2() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgMoneyChangeLog.param2)
  return param2_;
}
inline void MsgMoneyChangeLog::set_param2(::google::protobuf::int32 value) {
  set_has_param2();
  param2_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgMoneyChangeLog.param2)
}

// optional int32 param3 = 10;
inline bool MsgMoneyChangeLog::has_param3() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void MsgMoneyChangeLog::set_has_param3() {
  _has_bits_[0] |= 0x00000200u;
}
inline void MsgMoneyChangeLog::clear_has_param3() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void MsgMoneyChangeLog::clear_param3() {
  param3_ = 0;
  clear_has_param3();
}
inline ::google::protobuf::int32 MsgMoneyChangeLog::param3() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgMoneyChangeLog.param3)
  return param3_;
}
inline void MsgMoneyChangeLog::set_param3(::google::protobuf::int32 value) {
  set_has_param3();
  param3_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgMoneyChangeLog.param3)
}

// optional int32 insert_time = 11;
inline bool MsgMoneyChangeLog::has_insert_time() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void MsgMoneyChangeLog::set_has_insert_time() {
  _has_bits_[0] |= 0x00000400u;
}
inline void MsgMoneyChangeLog::clear_has_insert_time() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void MsgMoneyChangeLog::clear_insert_time() {
  insert_time_ = 0;
  clear_has_insert_time();
}
inline ::google::protobuf::int32 MsgMoneyChangeLog::insert_time() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgMoneyChangeLog.insert_time)
  return insert_time_;
}
inline void MsgMoneyChangeLog::set_insert_time(::google::protobuf::int32 value) {
  set_has_insert_time();
  insert_time_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgMoneyChangeLog.insert_time)
}

// -------------------------------------------------------------------

// MsgLoginoutLog

// optional .MsgPB.EMsgType msgType = 1 [default = _MSG_LOGINOUT_LOG];
inline bool MsgLoginoutLog::has_msgtype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgLoginoutLog::set_has_msgtype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgLoginoutLog::clear_has_msgtype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgLoginoutLog::clear_msgtype() {
  msgtype_ = 5810;
  clear_has_msgtype();
}
inline ::MsgPB::EMsgType MsgLoginoutLog::msgtype() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgLoginoutLog.msgType)
  return static_cast< ::MsgPB::EMsgType >(msgtype_);
}
inline void MsgLoginoutLog::set_msgtype(::MsgPB::EMsgType value) {
  assert(::MsgPB::EMsgType_IsValid(value));
  set_has_msgtype();
  msgtype_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgLoginoutLog.msgType)
}

// optional int64 iggid = 2;
inline bool MsgLoginoutLog::has_iggid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MsgLoginoutLog::set_has_iggid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MsgLoginoutLog::clear_has_iggid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MsgLoginoutLog::clear_iggid() {
  iggid_ = GOOGLE_LONGLONG(0);
  clear_has_iggid();
}
inline ::google::protobuf::int64 MsgLoginoutLog::iggid() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgLoginoutLog.iggid)
  return iggid_;
}
inline void MsgLoginoutLog::set_iggid(::google::protobuf::int64 value) {
  set_has_iggid();
  iggid_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgLoginoutLog.iggid)
}

// optional string ip = 3;
inline bool MsgLoginoutLog::has_ip() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MsgLoginoutLog::set_has_ip() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MsgLoginoutLog::clear_has_ip() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MsgLoginoutLog::clear_ip() {
  if (ip_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    ip_->clear();
  }
  clear_has_ip();
}
inline const ::std::string& MsgLoginoutLog::ip() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgLoginoutLog.ip)
  return *ip_;
}
inline void MsgLoginoutLog::set_ip(const ::std::string& value) {
  set_has_ip();
  if (ip_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    ip_ = new ::std::string;
  }
  ip_->assign(value);
  // @@protoc_insertion_point(field_set:MsgPB.MsgLoginoutLog.ip)
}
inline void MsgLoginoutLog::set_ip(const char* value) {
  set_has_ip();
  if (ip_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    ip_ = new ::std::string;
  }
  ip_->assign(value);
  // @@protoc_insertion_point(field_set_char:MsgPB.MsgLoginoutLog.ip)
}
inline void MsgLoginoutLog::set_ip(const char* value, size_t size) {
  set_has_ip();
  if (ip_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    ip_ = new ::std::string;
  }
  ip_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:MsgPB.MsgLoginoutLog.ip)
}
inline ::std::string* MsgLoginoutLog::mutable_ip() {
  set_has_ip();
  if (ip_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    ip_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:MsgPB.MsgLoginoutLog.ip)
  return ip_;
}
inline ::std::string* MsgLoginoutLog::release_ip() {
  clear_has_ip();
  if (ip_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = ip_;
    ip_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void MsgLoginoutLog::set_allocated_ip(::std::string* ip) {
  if (ip_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete ip_;
  }
  if (ip) {
    set_has_ip();
    ip_ = ip;
  } else {
    clear_has_ip();
    ip_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:MsgPB.MsgLoginoutLog.ip)
}

// optional string mac = 4;
inline bool MsgLoginoutLog::has_mac() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MsgLoginoutLog::set_has_mac() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MsgLoginoutLog::clear_has_mac() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MsgLoginoutLog::clear_mac() {
  if (mac_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    mac_->clear();
  }
  clear_has_mac();
}
inline const ::std::string& MsgLoginoutLog::mac() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgLoginoutLog.mac)
  return *mac_;
}
inline void MsgLoginoutLog::set_mac(const ::std::string& value) {
  set_has_mac();
  if (mac_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    mac_ = new ::std::string;
  }
  mac_->assign(value);
  // @@protoc_insertion_point(field_set:MsgPB.MsgLoginoutLog.mac)
}
inline void MsgLoginoutLog::set_mac(const char* value) {
  set_has_mac();
  if (mac_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    mac_ = new ::std::string;
  }
  mac_->assign(value);
  // @@protoc_insertion_point(field_set_char:MsgPB.MsgLoginoutLog.mac)
}
inline void MsgLoginoutLog::set_mac(const char* value, size_t size) {
  set_has_mac();
  if (mac_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    mac_ = new ::std::string;
  }
  mac_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:MsgPB.MsgLoginoutLog.mac)
}
inline ::std::string* MsgLoginoutLog::mutable_mac() {
  set_has_mac();
  if (mac_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    mac_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:MsgPB.MsgLoginoutLog.mac)
  return mac_;
}
inline ::std::string* MsgLoginoutLog::release_mac() {
  clear_has_mac();
  if (mac_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = mac_;
    mac_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void MsgLoginoutLog::set_allocated_mac(::std::string* mac) {
  if (mac_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete mac_;
  }
  if (mac) {
    set_has_mac();
    mac_ = mac;
  } else {
    clear_has_mac();
    mac_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:MsgPB.MsgLoginoutLog.mac)
}

// optional string game_id = 5;
inline bool MsgLoginoutLog::has_game_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void MsgLoginoutLog::set_has_game_id() {
  _has_bits_[0] |= 0x00000010u;
}
inline void MsgLoginoutLog::clear_has_game_id() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void MsgLoginoutLog::clear_game_id() {
  if (game_id_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    game_id_->clear();
  }
  clear_has_game_id();
}
inline const ::std::string& MsgLoginoutLog::game_id() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgLoginoutLog.game_id)
  return *game_id_;
}
inline void MsgLoginoutLog::set_game_id(const ::std::string& value) {
  set_has_game_id();
  if (game_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    game_id_ = new ::std::string;
  }
  game_id_->assign(value);
  // @@protoc_insertion_point(field_set:MsgPB.MsgLoginoutLog.game_id)
}
inline void MsgLoginoutLog::set_game_id(const char* value) {
  set_has_game_id();
  if (game_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    game_id_ = new ::std::string;
  }
  game_id_->assign(value);
  // @@protoc_insertion_point(field_set_char:MsgPB.MsgLoginoutLog.game_id)
}
inline void MsgLoginoutLog::set_game_id(const char* value, size_t size) {
  set_has_game_id();
  if (game_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    game_id_ = new ::std::string;
  }
  game_id_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:MsgPB.MsgLoginoutLog.game_id)
}
inline ::std::string* MsgLoginoutLog::mutable_game_id() {
  set_has_game_id();
  if (game_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    game_id_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:MsgPB.MsgLoginoutLog.game_id)
  return game_id_;
}
inline ::std::string* MsgLoginoutLog::release_game_id() {
  clear_has_game_id();
  if (game_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = game_id_;
    game_id_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void MsgLoginoutLog::set_allocated_game_id(::std::string* game_id) {
  if (game_id_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete game_id_;
  }
  if (game_id) {
    set_has_game_id();
    game_id_ = game_id;
  } else {
    clear_has_game_id();
    game_id_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:MsgPB.MsgLoginoutLog.game_id)
}

// optional int32 server_id = 6;
inline bool MsgLoginoutLog::has_server_id() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void MsgLoginoutLog::set_has_server_id() {
  _has_bits_[0] |= 0x00000020u;
}
inline void MsgLoginoutLog::clear_has_server_id() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void MsgLoginoutLog::clear_server_id() {
  server_id_ = 0;
  clear_has_server_id();
}
inline ::google::protobuf::int32 MsgLoginoutLog::server_id() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgLoginoutLog.server_id)
  return server_id_;
}
inline void MsgLoginoutLog::set_server_id(::google::protobuf::int32 value) {
  set_has_server_id();
  server_id_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgLoginoutLog.server_id)
}

// optional int64 log_time = 7;
inline bool MsgLoginoutLog::has_log_time() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void MsgLoginoutLog::set_has_log_time() {
  _has_bits_[0] |= 0x00000040u;
}
inline void MsgLoginoutLog::clear_has_log_time() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void MsgLoginoutLog::clear_log_time() {
  log_time_ = GOOGLE_LONGLONG(0);
  clear_has_log_time();
}
inline ::google::protobuf::int64 MsgLoginoutLog::log_time() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgLoginoutLog.log_time)
  return log_time_;
}
inline void MsgLoginoutLog::set_log_time(::google::protobuf::int64 value) {
  set_has_log_time();
  log_time_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgLoginoutLog.log_time)
}

// optional bool is_login = 8;
inline bool MsgLoginoutLog::has_is_login() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void MsgLoginoutLog::set_has_is_login() {
  _has_bits_[0] |= 0x00000080u;
}
inline void MsgLoginoutLog::clear_has_is_login() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void MsgLoginoutLog::clear_is_login() {
  is_login_ = false;
  clear_has_is_login();
}
inline bool MsgLoginoutLog::is_login() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgLoginoutLog.is_login)
  return is_login_;
}
inline void MsgLoginoutLog::set_is_login(bool value) {
  set_has_is_login();
  is_login_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgLoginoutLog.is_login)
}

// optional int32 online_time = 9;
inline bool MsgLoginoutLog::has_online_time() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void MsgLoginoutLog::set_has_online_time() {
  _has_bits_[0] |= 0x00000100u;
}
inline void MsgLoginoutLog::clear_has_online_time() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void MsgLoginoutLog::clear_online_time() {
  online_time_ = 0;
  clear_has_online_time();
}
inline ::google::protobuf::int32 MsgLoginoutLog::online_time() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgLoginoutLog.online_time)
  return online_time_;
}
inline void MsgLoginoutLog::set_online_time(::google::protobuf::int32 value) {
  set_has_online_time();
  online_time_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgLoginoutLog.online_time)
}

// -------------------------------------------------------------------

// MsgEventLog

// optional .MsgPB.EMsgType msgType = 1 [default = _MSG_EVENT_LOG];
inline bool MsgEventLog::has_msgtype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgEventLog::set_has_msgtype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgEventLog::clear_has_msgtype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgEventLog::clear_msgtype() {
  msgtype_ = 5811;
  clear_has_msgtype();
}
inline ::MsgPB::EMsgType MsgEventLog::msgtype() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgEventLog.msgType)
  return static_cast< ::MsgPB::EMsgType >(msgtype_);
}
inline void MsgEventLog::set_msgtype(::MsgPB::EMsgType value) {
  assert(::MsgPB::EMsgType_IsValid(value));
  set_has_msgtype();
  msgtype_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgEventLog.msgType)
}

// optional int64 iggid = 5;
inline bool MsgEventLog::has_iggid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MsgEventLog::set_has_iggid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MsgEventLog::clear_has_iggid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MsgEventLog::clear_iggid() {
  iggid_ = GOOGLE_LONGLONG(0);
  clear_has_iggid();
}
inline ::google::protobuf::int64 MsgEventLog::iggid() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgEventLog.iggid)
  return iggid_;
}
inline void MsgEventLog::set_iggid(::google::protobuf::int64 value) {
  set_has_iggid();
  iggid_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgEventLog.iggid)
}

// optional string name = 6;
inline bool MsgEventLog::has_name() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MsgEventLog::set_has_name() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MsgEventLog::clear_has_name() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MsgEventLog::clear_name() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& MsgEventLog::name() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgEventLog.name)
  return *name_;
}
inline void MsgEventLog::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set:MsgPB.MsgEventLog.name)
}
inline void MsgEventLog::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set_char:MsgPB.MsgEventLog.name)
}
inline void MsgEventLog::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:MsgPB.MsgEventLog.name)
}
inline ::std::string* MsgEventLog::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:MsgPB.MsgEventLog.name)
  return name_;
}
inline ::std::string* MsgEventLog::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void MsgEventLog::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:MsgPB.MsgEventLog.name)
}

// optional int32 level = 7;
inline bool MsgEventLog::has_level() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MsgEventLog::set_has_level() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MsgEventLog::clear_has_level() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MsgEventLog::clear_level() {
  level_ = 0;
  clear_has_level();
}
inline ::google::protobuf::int32 MsgEventLog::level() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgEventLog.level)
  return level_;
}
inline void MsgEventLog::set_level(::google::protobuf::int32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgEventLog.level)
}

// optional int64 recharge = 8;
inline bool MsgEventLog::has_recharge() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void MsgEventLog::set_has_recharge() {
  _has_bits_[0] |= 0x00000010u;
}
inline void MsgEventLog::clear_has_recharge() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void MsgEventLog::clear_recharge() {
  recharge_ = GOOGLE_LONGLONG(0);
  clear_has_recharge();
}
inline ::google::protobuf::int64 MsgEventLog::recharge() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgEventLog.recharge)
  return recharge_;
}
inline void MsgEventLog::set_recharge(::google::protobuf::int64 value) {
  set_has_recharge();
  recharge_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgEventLog.recharge)
}

// optional int32 emoney = 9;
inline bool MsgEventLog::has_emoney() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void MsgEventLog::set_has_emoney() {
  _has_bits_[0] |= 0x00000020u;
}
inline void MsgEventLog::clear_has_emoney() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void MsgEventLog::clear_emoney() {
  emoney_ = 0;
  clear_has_emoney();
}
inline ::google::protobuf::int32 MsgEventLog::emoney() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgEventLog.emoney)
  return emoney_;
}
inline void MsgEventLog::set_emoney(::google::protobuf::int32 value) {
  set_has_emoney();
  emoney_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgEventLog.emoney)
}

// optional int32 event_type = 10;
inline bool MsgEventLog::has_event_type() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void MsgEventLog::set_has_event_type() {
  _has_bits_[0] |= 0x00000040u;
}
inline void MsgEventLog::clear_has_event_type() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void MsgEventLog::clear_event_type() {
  event_type_ = 0;
  clear_has_event_type();
}
inline ::google::protobuf::int32 MsgEventLog::event_type() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgEventLog.event_type)
  return event_type_;
}
inline void MsgEventLog::set_event_type(::google::protobuf::int32 value) {
  set_has_event_type();
  event_type_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgEventLog.event_type)
}

// optional int32 channel = 11;
inline bool MsgEventLog::has_channel() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void MsgEventLog::set_has_channel() {
  _has_bits_[0] |= 0x00000080u;
}
inline void MsgEventLog::clear_has_channel() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void MsgEventLog::clear_channel() {
  channel_ = 0;
  clear_has_channel();
}
inline ::google::protobuf::int32 MsgEventLog::channel() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgEventLog.channel)
  return channel_;
}
inline void MsgEventLog::set_channel(::google::protobuf::int32 value) {
  set_has_channel();
  channel_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgEventLog.channel)
}

// optional string param1 = 12;
inline bool MsgEventLog::has_param1() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void MsgEventLog::set_has_param1() {
  _has_bits_[0] |= 0x00000100u;
}
inline void MsgEventLog::clear_has_param1() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void MsgEventLog::clear_param1() {
  if (param1_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    param1_->clear();
  }
  clear_has_param1();
}
inline const ::std::string& MsgEventLog::param1() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgEventLog.param1)
  return *param1_;
}
inline void MsgEventLog::set_param1(const ::std::string& value) {
  set_has_param1();
  if (param1_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    param1_ = new ::std::string;
  }
  param1_->assign(value);
  // @@protoc_insertion_point(field_set:MsgPB.MsgEventLog.param1)
}
inline void MsgEventLog::set_param1(const char* value) {
  set_has_param1();
  if (param1_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    param1_ = new ::std::string;
  }
  param1_->assign(value);
  // @@protoc_insertion_point(field_set_char:MsgPB.MsgEventLog.param1)
}
inline void MsgEventLog::set_param1(const char* value, size_t size) {
  set_has_param1();
  if (param1_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    param1_ = new ::std::string;
  }
  param1_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:MsgPB.MsgEventLog.param1)
}
inline ::std::string* MsgEventLog::mutable_param1() {
  set_has_param1();
  if (param1_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    param1_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:MsgPB.MsgEventLog.param1)
  return param1_;
}
inline ::std::string* MsgEventLog::release_param1() {
  clear_has_param1();
  if (param1_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = param1_;
    param1_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void MsgEventLog::set_allocated_param1(::std::string* param1) {
  if (param1_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete param1_;
  }
  if (param1) {
    set_has_param1();
    param1_ = param1;
  } else {
    clear_has_param1();
    param1_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:MsgPB.MsgEventLog.param1)
}

// optional string param2 = 13;
inline bool MsgEventLog::has_param2() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void MsgEventLog::set_has_param2() {
  _has_bits_[0] |= 0x00000200u;
}
inline void MsgEventLog::clear_has_param2() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void MsgEventLog::clear_param2() {
  if (param2_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    param2_->clear();
  }
  clear_has_param2();
}
inline const ::std::string& MsgEventLog::param2() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgEventLog.param2)
  return *param2_;
}
inline void MsgEventLog::set_param2(const ::std::string& value) {
  set_has_param2();
  if (param2_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    param2_ = new ::std::string;
  }
  param2_->assign(value);
  // @@protoc_insertion_point(field_set:MsgPB.MsgEventLog.param2)
}
inline void MsgEventLog::set_param2(const char* value) {
  set_has_param2();
  if (param2_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    param2_ = new ::std::string;
  }
  param2_->assign(value);
  // @@protoc_insertion_point(field_set_char:MsgPB.MsgEventLog.param2)
}
inline void MsgEventLog::set_param2(const char* value, size_t size) {
  set_has_param2();
  if (param2_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    param2_ = new ::std::string;
  }
  param2_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:MsgPB.MsgEventLog.param2)
}
inline ::std::string* MsgEventLog::mutable_param2() {
  set_has_param2();
  if (param2_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    param2_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:MsgPB.MsgEventLog.param2)
  return param2_;
}
inline ::std::string* MsgEventLog::release_param2() {
  clear_has_param2();
  if (param2_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = param2_;
    param2_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void MsgEventLog::set_allocated_param2(::std::string* param2) {
  if (param2_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete param2_;
  }
  if (param2) {
    set_has_param2();
    param2_ = param2;
  } else {
    clear_has_param2();
    param2_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:MsgPB.MsgEventLog.param2)
}

// optional string param3 = 14;
inline bool MsgEventLog::has_param3() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void MsgEventLog::set_has_param3() {
  _has_bits_[0] |= 0x00000400u;
}
inline void MsgEventLog::clear_has_param3() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void MsgEventLog::clear_param3() {
  if (param3_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    param3_->clear();
  }
  clear_has_param3();
}
inline const ::std::string& MsgEventLog::param3() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgEventLog.param3)
  return *param3_;
}
inline void MsgEventLog::set_param3(const ::std::string& value) {
  set_has_param3();
  if (param3_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    param3_ = new ::std::string;
  }
  param3_->assign(value);
  // @@protoc_insertion_point(field_set:MsgPB.MsgEventLog.param3)
}
inline void MsgEventLog::set_param3(const char* value) {
  set_has_param3();
  if (param3_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    param3_ = new ::std::string;
  }
  param3_->assign(value);
  // @@protoc_insertion_point(field_set_char:MsgPB.MsgEventLog.param3)
}
inline void MsgEventLog::set_param3(const char* value, size_t size) {
  set_has_param3();
  if (param3_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    param3_ = new ::std::string;
  }
  param3_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:MsgPB.MsgEventLog.param3)
}
inline ::std::string* MsgEventLog::mutable_param3() {
  set_has_param3();
  if (param3_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    param3_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:MsgPB.MsgEventLog.param3)
  return param3_;
}
inline ::std::string* MsgEventLog::release_param3() {
  clear_has_param3();
  if (param3_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = param3_;
    param3_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void MsgEventLog::set_allocated_param3(::std::string* param3) {
  if (param3_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete param3_;
  }
  if (param3) {
    set_has_param3();
    param3_ = param3;
  } else {
    clear_has_param3();
    param3_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:MsgPB.MsgEventLog.param3)
}

// optional string param4 = 15;
inline bool MsgEventLog::has_param4() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void MsgEventLog::set_has_param4() {
  _has_bits_[0] |= 0x00000800u;
}
inline void MsgEventLog::clear_has_param4() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void MsgEventLog::clear_param4() {
  if (param4_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    param4_->clear();
  }
  clear_has_param4();
}
inline const ::std::string& MsgEventLog::param4() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgEventLog.param4)
  return *param4_;
}
inline void MsgEventLog::set_param4(const ::std::string& value) {
  set_has_param4();
  if (param4_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    param4_ = new ::std::string;
  }
  param4_->assign(value);
  // @@protoc_insertion_point(field_set:MsgPB.MsgEventLog.param4)
}
inline void MsgEventLog::set_param4(const char* value) {
  set_has_param4();
  if (param4_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    param4_ = new ::std::string;
  }
  param4_->assign(value);
  // @@protoc_insertion_point(field_set_char:MsgPB.MsgEventLog.param4)
}
inline void MsgEventLog::set_param4(const char* value, size_t size) {
  set_has_param4();
  if (param4_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    param4_ = new ::std::string;
  }
  param4_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:MsgPB.MsgEventLog.param4)
}
inline ::std::string* MsgEventLog::mutable_param4() {
  set_has_param4();
  if (param4_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    param4_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:MsgPB.MsgEventLog.param4)
  return param4_;
}
inline ::std::string* MsgEventLog::release_param4() {
  clear_has_param4();
  if (param4_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = param4_;
    param4_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void MsgEventLog::set_allocated_param4(::std::string* param4) {
  if (param4_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete param4_;
  }
  if (param4) {
    set_has_param4();
    param4_ = param4;
  } else {
    clear_has_param4();
    param4_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:MsgPB.MsgEventLog.param4)
}

// optional string param5 = 16;
inline bool MsgEventLog::has_param5() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void MsgEventLog::set_has_param5() {
  _has_bits_[0] |= 0x00001000u;
}
inline void MsgEventLog::clear_has_param5() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void MsgEventLog::clear_param5() {
  if (param5_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    param5_->clear();
  }
  clear_has_param5();
}
inline const ::std::string& MsgEventLog::param5() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgEventLog.param5)
  return *param5_;
}
inline void MsgEventLog::set_param5(const ::std::string& value) {
  set_has_param5();
  if (param5_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    param5_ = new ::std::string;
  }
  param5_->assign(value);
  // @@protoc_insertion_point(field_set:MsgPB.MsgEventLog.param5)
}
inline void MsgEventLog::set_param5(const char* value) {
  set_has_param5();
  if (param5_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    param5_ = new ::std::string;
  }
  param5_->assign(value);
  // @@protoc_insertion_point(field_set_char:MsgPB.MsgEventLog.param5)
}
inline void MsgEventLog::set_param5(const char* value, size_t size) {
  set_has_param5();
  if (param5_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    param5_ = new ::std::string;
  }
  param5_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:MsgPB.MsgEventLog.param5)
}
inline ::std::string* MsgEventLog::mutable_param5() {
  set_has_param5();
  if (param5_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    param5_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:MsgPB.MsgEventLog.param5)
  return param5_;
}
inline ::std::string* MsgEventLog::release_param5() {
  clear_has_param5();
  if (param5_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = param5_;
    param5_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void MsgEventLog::set_allocated_param5(::std::string* param5) {
  if (param5_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete param5_;
  }
  if (param5) {
    set_has_param5();
    param5_ = param5;
  } else {
    clear_has_param5();
    param5_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:MsgPB.MsgEventLog.param5)
}

// optional string param6 = 17;
inline bool MsgEventLog::has_param6() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void MsgEventLog::set_has_param6() {
  _has_bits_[0] |= 0x00002000u;
}
inline void MsgEventLog::clear_has_param6() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void MsgEventLog::clear_param6() {
  if (param6_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    param6_->clear();
  }
  clear_has_param6();
}
inline const ::std::string& MsgEventLog::param6() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgEventLog.param6)
  return *param6_;
}
inline void MsgEventLog::set_param6(const ::std::string& value) {
  set_has_param6();
  if (param6_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    param6_ = new ::std::string;
  }
  param6_->assign(value);
  // @@protoc_insertion_point(field_set:MsgPB.MsgEventLog.param6)
}
inline void MsgEventLog::set_param6(const char* value) {
  set_has_param6();
  if (param6_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    param6_ = new ::std::string;
  }
  param6_->assign(value);
  // @@protoc_insertion_point(field_set_char:MsgPB.MsgEventLog.param6)
}
inline void MsgEventLog::set_param6(const char* value, size_t size) {
  set_has_param6();
  if (param6_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    param6_ = new ::std::string;
  }
  param6_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:MsgPB.MsgEventLog.param6)
}
inline ::std::string* MsgEventLog::mutable_param6() {
  set_has_param6();
  if (param6_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    param6_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:MsgPB.MsgEventLog.param6)
  return param6_;
}
inline ::std::string* MsgEventLog::release_param6() {
  clear_has_param6();
  if (param6_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = param6_;
    param6_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void MsgEventLog::set_allocated_param6(::std::string* param6) {
  if (param6_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete param6_;
  }
  if (param6) {
    set_has_param6();
    param6_ = param6;
  } else {
    clear_has_param6();
    param6_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:MsgPB.MsgEventLog.param6)
}

// optional string param7 = 18;
inline bool MsgEventLog::has_param7() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void MsgEventLog::set_has_param7() {
  _has_bits_[0] |= 0x00004000u;
}
inline void MsgEventLog::clear_has_param7() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void MsgEventLog::clear_param7() {
  if (param7_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    param7_->clear();
  }
  clear_has_param7();
}
inline const ::std::string& MsgEventLog::param7() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgEventLog.param7)
  return *param7_;
}
inline void MsgEventLog::set_param7(const ::std::string& value) {
  set_has_param7();
  if (param7_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    param7_ = new ::std::string;
  }
  param7_->assign(value);
  // @@protoc_insertion_point(field_set:MsgPB.MsgEventLog.param7)
}
inline void MsgEventLog::set_param7(const char* value) {
  set_has_param7();
  if (param7_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    param7_ = new ::std::string;
  }
  param7_->assign(value);
  // @@protoc_insertion_point(field_set_char:MsgPB.MsgEventLog.param7)
}
inline void MsgEventLog::set_param7(const char* value, size_t size) {
  set_has_param7();
  if (param7_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    param7_ = new ::std::string;
  }
  param7_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:MsgPB.MsgEventLog.param7)
}
inline ::std::string* MsgEventLog::mutable_param7() {
  set_has_param7();
  if (param7_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    param7_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:MsgPB.MsgEventLog.param7)
  return param7_;
}
inline ::std::string* MsgEventLog::release_param7() {
  clear_has_param7();
  if (param7_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = param7_;
    param7_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void MsgEventLog::set_allocated_param7(::std::string* param7) {
  if (param7_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete param7_;
  }
  if (param7) {
    set_has_param7();
    param7_ = param7;
  } else {
    clear_has_param7();
    param7_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:MsgPB.MsgEventLog.param7)
}

// optional string param8 = 19;
inline bool MsgEventLog::has_param8() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void MsgEventLog::set_has_param8() {
  _has_bits_[0] |= 0x00008000u;
}
inline void MsgEventLog::clear_has_param8() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void MsgEventLog::clear_param8() {
  if (param8_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    param8_->clear();
  }
  clear_has_param8();
}
inline const ::std::string& MsgEventLog::param8() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgEventLog.param8)
  return *param8_;
}
inline void MsgEventLog::set_param8(const ::std::string& value) {
  set_has_param8();
  if (param8_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    param8_ = new ::std::string;
  }
  param8_->assign(value);
  // @@protoc_insertion_point(field_set:MsgPB.MsgEventLog.param8)
}
inline void MsgEventLog::set_param8(const char* value) {
  set_has_param8();
  if (param8_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    param8_ = new ::std::string;
  }
  param8_->assign(value);
  // @@protoc_insertion_point(field_set_char:MsgPB.MsgEventLog.param8)
}
inline void MsgEventLog::set_param8(const char* value, size_t size) {
  set_has_param8();
  if (param8_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    param8_ = new ::std::string;
  }
  param8_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:MsgPB.MsgEventLog.param8)
}
inline ::std::string* MsgEventLog::mutable_param8() {
  set_has_param8();
  if (param8_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    param8_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:MsgPB.MsgEventLog.param8)
  return param8_;
}
inline ::std::string* MsgEventLog::release_param8() {
  clear_has_param8();
  if (param8_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = param8_;
    param8_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void MsgEventLog::set_allocated_param8(::std::string* param8) {
  if (param8_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete param8_;
  }
  if (param8) {
    set_has_param8();
    param8_ = param8;
  } else {
    clear_has_param8();
    param8_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:MsgPB.MsgEventLog.param8)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace MsgPB

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::MsgPB::EEventLogType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::MsgPB::EEventLogType>() {
  return ::MsgPB::EEventLogType_descriptor();
}
template <> struct is_proto_enum< ::MsgPB::LOG_TYPE_TO_LOGSERVER> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::MsgPB::LOG_TYPE_TO_LOGSERVER>() {
  return ::MsgPB::LOG_TYPE_TO_LOGSERVER_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_MsgDBLog_2eproto__INCLUDED
