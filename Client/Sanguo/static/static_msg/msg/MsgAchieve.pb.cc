// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MsgAchieve.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "MsgAchieve.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace MsgPB {

namespace {

const ::google::protobuf::Descriptor* MsgAchieveData_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgAchieveData_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgAchieveSyncS2C_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgAchieveSyncS2C_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgAchieveUpdateS2C_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgAchieveUpdateS2C_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgAchieveRemoveS2C_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgAchieveRemoveS2C_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgAchieveReceiveRewardC2S_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgAchieveReceiveRewardC2S_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgAchieveReceiveRewardResultS2C_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgAchieveReceiveRewardResultS2C_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* MsgAchieveReceiveRewardResultS2C_RESULT_descriptor_ = NULL;
const ::google::protobuf::Descriptor* MsgAchieveClientTriggerC2S_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgAchieveClientTriggerC2S_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgAchieveClientTriggerResultS2C_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgAchieveClientTriggerResultS2C_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* MsgAchieveClientTriggerResultS2C_RESULT_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_MsgAchieve_2eproto() {
  protobuf_AddDesc_MsgAchieve_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "MsgAchieve.proto");
  GOOGLE_CHECK(file != NULL);
  MsgAchieveData_descriptor_ = file->message_type(0);
  static const int MsgAchieveData_offsets_[8] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgAchieveData, uuid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgAchieveData, status_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgAchieveData, value_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgAchieveData, update_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgAchieveData, complete_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgAchieveData, currently_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgAchieveData, source_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgAchieveData, dirty_),
  };
  MsgAchieveData_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgAchieveData_descriptor_,
      MsgAchieveData::default_instance_,
      MsgAchieveData_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgAchieveData, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgAchieveData, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgAchieveData));
  MsgAchieveSyncS2C_descriptor_ = file->message_type(1);
  static const int MsgAchieveSyncS2C_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgAchieveSyncS2C, msgtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgAchieveSyncS2C, data_),
  };
  MsgAchieveSyncS2C_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgAchieveSyncS2C_descriptor_,
      MsgAchieveSyncS2C::default_instance_,
      MsgAchieveSyncS2C_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgAchieveSyncS2C, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgAchieveSyncS2C, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgAchieveSyncS2C));
  MsgAchieveUpdateS2C_descriptor_ = file->message_type(2);
  static const int MsgAchieveUpdateS2C_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgAchieveUpdateS2C, msgtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgAchieveUpdateS2C, data_),
  };
  MsgAchieveUpdateS2C_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgAchieveUpdateS2C_descriptor_,
      MsgAchieveUpdateS2C::default_instance_,
      MsgAchieveUpdateS2C_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgAchieveUpdateS2C, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgAchieveUpdateS2C, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgAchieveUpdateS2C));
  MsgAchieveRemoveS2C_descriptor_ = file->message_type(3);
  static const int MsgAchieveRemoveS2C_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgAchieveRemoveS2C, msgtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgAchieveRemoveS2C, uuid_),
  };
  MsgAchieveRemoveS2C_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgAchieveRemoveS2C_descriptor_,
      MsgAchieveRemoveS2C::default_instance_,
      MsgAchieveRemoveS2C_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgAchieveRemoveS2C, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgAchieveRemoveS2C, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgAchieveRemoveS2C));
  MsgAchieveReceiveRewardC2S_descriptor_ = file->message_type(4);
  static const int MsgAchieveReceiveRewardC2S_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgAchieveReceiveRewardC2S, msgtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgAchieveReceiveRewardC2S, uuid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgAchieveReceiveRewardC2S, iggid_),
  };
  MsgAchieveReceiveRewardC2S_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgAchieveReceiveRewardC2S_descriptor_,
      MsgAchieveReceiveRewardC2S::default_instance_,
      MsgAchieveReceiveRewardC2S_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgAchieveReceiveRewardC2S, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgAchieveReceiveRewardC2S, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgAchieveReceiveRewardC2S));
  MsgAchieveReceiveRewardResultS2C_descriptor_ = file->message_type(5);
  static const int MsgAchieveReceiveRewardResultS2C_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgAchieveReceiveRewardResultS2C, msgtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgAchieveReceiveRewardResultS2C, uuid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgAchieveReceiveRewardResultS2C, result_),
  };
  MsgAchieveReceiveRewardResultS2C_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgAchieveReceiveRewardResultS2C_descriptor_,
      MsgAchieveReceiveRewardResultS2C::default_instance_,
      MsgAchieveReceiveRewardResultS2C_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgAchieveReceiveRewardResultS2C, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgAchieveReceiveRewardResultS2C, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgAchieveReceiveRewardResultS2C));
  MsgAchieveReceiveRewardResultS2C_RESULT_descriptor_ = MsgAchieveReceiveRewardResultS2C_descriptor_->enum_type(0);
  MsgAchieveClientTriggerC2S_descriptor_ = file->message_type(6);
  static const int MsgAchieveClientTriggerC2S_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgAchieveClientTriggerC2S, msgtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgAchieveClientTriggerC2S, uuid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgAchieveClientTriggerC2S, value_),
  };
  MsgAchieveClientTriggerC2S_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgAchieveClientTriggerC2S_descriptor_,
      MsgAchieveClientTriggerC2S::default_instance_,
      MsgAchieveClientTriggerC2S_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgAchieveClientTriggerC2S, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgAchieveClientTriggerC2S, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgAchieveClientTriggerC2S));
  MsgAchieveClientTriggerResultS2C_descriptor_ = file->message_type(7);
  static const int MsgAchieveClientTriggerResultS2C_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgAchieveClientTriggerResultS2C, msgtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgAchieveClientTriggerResultS2C, uuid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgAchieveClientTriggerResultS2C, value_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgAchieveClientTriggerResultS2C, result_),
  };
  MsgAchieveClientTriggerResultS2C_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgAchieveClientTriggerResultS2C_descriptor_,
      MsgAchieveClientTriggerResultS2C::default_instance_,
      MsgAchieveClientTriggerResultS2C_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgAchieveClientTriggerResultS2C, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgAchieveClientTriggerResultS2C, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgAchieveClientTriggerResultS2C));
  MsgAchieveClientTriggerResultS2C_RESULT_descriptor_ = MsgAchieveClientTriggerResultS2C_descriptor_->enum_type(0);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_MsgAchieve_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgAchieveData_descriptor_, &MsgAchieveData::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgAchieveSyncS2C_descriptor_, &MsgAchieveSyncS2C::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgAchieveUpdateS2C_descriptor_, &MsgAchieveUpdateS2C::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgAchieveRemoveS2C_descriptor_, &MsgAchieveRemoveS2C::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgAchieveReceiveRewardC2S_descriptor_, &MsgAchieveReceiveRewardC2S::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgAchieveReceiveRewardResultS2C_descriptor_, &MsgAchieveReceiveRewardResultS2C::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgAchieveClientTriggerC2S_descriptor_, &MsgAchieveClientTriggerC2S::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgAchieveClientTriggerResultS2C_descriptor_, &MsgAchieveClientTriggerResultS2C::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_MsgAchieve_2eproto() {
  delete MsgAchieveData::default_instance_;
  delete MsgAchieveData_reflection_;
  delete MsgAchieveSyncS2C::default_instance_;
  delete MsgAchieveSyncS2C_reflection_;
  delete MsgAchieveUpdateS2C::default_instance_;
  delete MsgAchieveUpdateS2C_reflection_;
  delete MsgAchieveRemoveS2C::default_instance_;
  delete MsgAchieveRemoveS2C_reflection_;
  delete MsgAchieveReceiveRewardC2S::default_instance_;
  delete MsgAchieveReceiveRewardC2S_reflection_;
  delete MsgAchieveReceiveRewardResultS2C::default_instance_;
  delete MsgAchieveReceiveRewardResultS2C_reflection_;
  delete MsgAchieveClientTriggerC2S::default_instance_;
  delete MsgAchieveClientTriggerC2S_reflection_;
  delete MsgAchieveClientTriggerResultS2C::default_instance_;
  delete MsgAchieveClientTriggerResultS2C_reflection_;
}

void protobuf_AddDesc_MsgAchieve_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::MsgPB::protobuf_AddDesc_MsgType_2eproto();
  ::MsgPB::protobuf_AddDesc_MsgGameDef_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\020MsgAchieve.proto\022\005MsgPB\032\rMsgType.proto"
    "\032\020MsgGameDef.proto\"\262\001\n\016MsgAchieveData\022\014\n"
    "\004uuid\030\001 \001(\003\022%\n\006status\030\002 \001(\0162\025.MsgPB.ACHI"
    "EVE_STATUS\022\r\n\005value\030\003 \001(\005\022\023\n\013update_time"
    "\030\004 \001(\003\022\025\n\rcomplete_time\030\005 \001(\003\022\021\n\tcurrent"
    "ly\030\006 \001(\005\022\016\n\006source\030\007 \003(\005\022\r\n\005dirty\030\010 \001(\003\""
    "q\n\021MsgAchieveSyncS2C\0227\n\007msgType\030\001 \001(\0162\017."
    "MsgPB.EMsgType:\025_MSG_ACHIEVE_SYNC_S2C\022#\n"
    "\004data\030\002 \003(\0132\025.MsgPB.MsgAchieveData\"u\n\023Ms"
    "gAchieveUpdateS2C\0229\n\007msgType\030\001 \001(\0162\017.Msg"
    "PB.EMsgType:\027_MSG_ACHIEVE_UPDATE_S2C\022#\n\004"
    "data\030\002 \001(\0132\025.MsgPB.MsgAchieveData\"^\n\023Msg"
    "AchieveRemoveS2C\0229\n\007msgType\030\001 \001(\0162\017.MsgP"
    "B.EMsgType:\027_MSG_ACHIEVE_REMOVE_S2C\022\014\n\004u"
    "uid\030\002 \001(\003\"|\n\032MsgAchieveReceiveRewardC2S\022"
    "A\n\007msgType\030\001 \001(\0162\017.MsgPB.EMsgType:\037_MSG_"
    "ACHIEVE_RECEIVE_REWARD_C2S\022\014\n\004uuid\030\002 \001(\003"
    "\022\r\n\005iggid\030\003 \001(\003\"\254\002\n MsgAchieveReceiveRew"
    "ardResultS2C\022H\n\007msgType\030\001 \001(\0162\017.MsgPB.EM"
    "sgType:&_MSG_ACHIEVE_RECEIVE_REWARD_RESU"
    "LT_S2C\022\014\n\004uuid\030\002 \001(\003\022>\n\006result\030\003 \001(\0162..M"
    "sgPB.MsgAchieveReceiveRewardResultS2C.RE"
    "SULT\"p\n\006RESULT\022\024\n\007FAILURE\020\377\377\377\377\377\377\377\377\377\001\022\013\n\007"
    "SUCCESS\020\000\022\022\n\016NOT_ACCOMPLISH\020\001\022\014\n\010RECEIVE"
    "D\020\002\022\022\n\016TEMPLATE_ERROR\020\003\022\r\n\tITEM_FULL\020\004\"|"
    "\n\032MsgAchieveClientTriggerC2S\022A\n\007msgType\030"
    "\001 \001(\0162\017.MsgPB.EMsgType:\037_MSG_ACHIEVE_CLI"
    "ENT_TRIGGER_C2S\022\014\n\004uuid\030\002 \001(\003\022\r\n\005value\030\003"
    " \001(\005\"\366\001\n MsgAchieveClientTriggerResultS2"
    "C\022H\n\007msgType\030\001 \001(\0162\017.MsgPB.EMsgType:&_MS"
    "G_ACHIEVE_CLIENT_TRIGGER_RESULT_S2C\022\014\n\004u"
    "uid\030\002 \001(\003\022\r\n\005value\030\003 \001(\005\022>\n\006result\030\004 \001(\016"
    "2..MsgPB.MsgAchieveClientTriggerResultS2"
    "C.RESULT\"+\n\006RESULT\022\024\n\007FAILURE\020\377\377\377\377\377\377\377\377\377\001"
    "\022\013\n\007SUCCESS\020\000", 1373);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "MsgAchieve.proto", &protobuf_RegisterTypes);
  MsgAchieveData::default_instance_ = new MsgAchieveData();
  MsgAchieveSyncS2C::default_instance_ = new MsgAchieveSyncS2C();
  MsgAchieveUpdateS2C::default_instance_ = new MsgAchieveUpdateS2C();
  MsgAchieveRemoveS2C::default_instance_ = new MsgAchieveRemoveS2C();
  MsgAchieveReceiveRewardC2S::default_instance_ = new MsgAchieveReceiveRewardC2S();
  MsgAchieveReceiveRewardResultS2C::default_instance_ = new MsgAchieveReceiveRewardResultS2C();
  MsgAchieveClientTriggerC2S::default_instance_ = new MsgAchieveClientTriggerC2S();
  MsgAchieveClientTriggerResultS2C::default_instance_ = new MsgAchieveClientTriggerResultS2C();
  MsgAchieveData::default_instance_->InitAsDefaultInstance();
  MsgAchieveSyncS2C::default_instance_->InitAsDefaultInstance();
  MsgAchieveUpdateS2C::default_instance_->InitAsDefaultInstance();
  MsgAchieveRemoveS2C::default_instance_->InitAsDefaultInstance();
  MsgAchieveReceiveRewardC2S::default_instance_->InitAsDefaultInstance();
  MsgAchieveReceiveRewardResultS2C::default_instance_->InitAsDefaultInstance();
  MsgAchieveClientTriggerC2S::default_instance_->InitAsDefaultInstance();
  MsgAchieveClientTriggerResultS2C::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_MsgAchieve_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_MsgAchieve_2eproto {
  StaticDescriptorInitializer_MsgAchieve_2eproto() {
    protobuf_AddDesc_MsgAchieve_2eproto();
  }
} static_descriptor_initializer_MsgAchieve_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int MsgAchieveData::kUuidFieldNumber;
const int MsgAchieveData::kStatusFieldNumber;
const int MsgAchieveData::kValueFieldNumber;
const int MsgAchieveData::kUpdateTimeFieldNumber;
const int MsgAchieveData::kCompleteTimeFieldNumber;
const int MsgAchieveData::kCurrentlyFieldNumber;
const int MsgAchieveData::kSourceFieldNumber;
const int MsgAchieveData::kDirtyFieldNumber;
#endif  // !_MSC_VER

MsgAchieveData::MsgAchieveData()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.MsgAchieveData)
}

void MsgAchieveData::InitAsDefaultInstance() {
}

MsgAchieveData::MsgAchieveData(const MsgAchieveData& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.MsgAchieveData)
}

void MsgAchieveData::SharedCtor() {
  _cached_size_ = 0;
  uuid_ = GOOGLE_LONGLONG(0);
  status_ = 0;
  value_ = 0;
  update_time_ = GOOGLE_LONGLONG(0);
  complete_time_ = GOOGLE_LONGLONG(0);
  currently_ = 0;
  dirty_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgAchieveData::~MsgAchieveData() {
  // @@protoc_insertion_point(destructor:MsgPB.MsgAchieveData)
  SharedDtor();
}

void MsgAchieveData::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgAchieveData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgAchieveData::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgAchieveData_descriptor_;
}

const MsgAchieveData& MsgAchieveData::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgAchieve_2eproto();
  return *default_instance_;
}

MsgAchieveData* MsgAchieveData::default_instance_ = NULL;

MsgAchieveData* MsgAchieveData::New() const {
  return new MsgAchieveData;
}

void MsgAchieveData::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<MsgAchieveData*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 191) {
    ZR_(uuid_, complete_time_);
    ZR_(dirty_, currently_);
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  source_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgAchieveData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.MsgAchieveData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 uuid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &uuid_)));
          set_has_uuid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_status;
        break;
      }

      // optional .MsgPB.ACHIEVE_STATUS status = 2;
      case 2: {
        if (tag == 16) {
         parse_status:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::ACHIEVE_STATUS_IsValid(value)) {
            set_status(static_cast< ::MsgPB::ACHIEVE_STATUS >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_value;
        break;
      }

      // optional int32 value = 3;
      case 3: {
        if (tag == 24) {
         parse_value:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &value_)));
          set_has_value();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_update_time;
        break;
      }

      // optional int64 update_time = 4;
      case 4: {
        if (tag == 32) {
         parse_update_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &update_time_)));
          set_has_update_time();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_complete_time;
        break;
      }

      // optional int64 complete_time = 5;
      case 5: {
        if (tag == 40) {
         parse_complete_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &complete_time_)));
          set_has_complete_time();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_currently;
        break;
      }

      // optional int32 currently = 6;
      case 6: {
        if (tag == 48) {
         parse_currently:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &currently_)));
          set_has_currently();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_source;
        break;
      }

      // repeated int32 source = 7;
      case 7: {
        if (tag == 56) {
         parse_source:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 56, input, this->mutable_source())));
        } else if (tag == 58) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_source())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_source;
        if (input->ExpectTag(64)) goto parse_dirty;
        break;
      }

      // optional int64 dirty = 8;
      case 8: {
        if (tag == 64) {
         parse_dirty:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &dirty_)));
          set_has_dirty();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.MsgAchieveData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.MsgAchieveData)
  return false;
#undef DO_
}

void MsgAchieveData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.MsgAchieveData)
  // optional int64 uuid = 1;
  if (has_uuid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->uuid(), output);
  }

  // optional .MsgPB.ACHIEVE_STATUS status = 2;
  if (has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->status(), output);
  }

  // optional int32 value = 3;
  if (has_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->value(), output);
  }

  // optional int64 update_time = 4;
  if (has_update_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->update_time(), output);
  }

  // optional int64 complete_time = 5;
  if (has_complete_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(5, this->complete_time(), output);
  }

  // optional int32 currently = 6;
  if (has_currently()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->currently(), output);
  }

  // repeated int32 source = 7;
  for (int i = 0; i < this->source_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      7, this->source(i), output);
  }

  // optional int64 dirty = 8;
  if (has_dirty()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(8, this->dirty(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.MsgAchieveData)
}

::google::protobuf::uint8* MsgAchieveData::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.MsgAchieveData)
  // optional int64 uuid = 1;
  if (has_uuid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->uuid(), target);
  }

  // optional .MsgPB.ACHIEVE_STATUS status = 2;
  if (has_status()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->status(), target);
  }

  // optional int32 value = 3;
  if (has_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->value(), target);
  }

  // optional int64 update_time = 4;
  if (has_update_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->update_time(), target);
  }

  // optional int64 complete_time = 5;
  if (has_complete_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(5, this->complete_time(), target);
  }

  // optional int32 currently = 6;
  if (has_currently()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->currently(), target);
  }

  // repeated int32 source = 7;
  for (int i = 0; i < this->source_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(7, this->source(i), target);
  }

  // optional int64 dirty = 8;
  if (has_dirty()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(8, this->dirty(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.MsgAchieveData)
  return target;
}

int MsgAchieveData::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 uuid = 1;
    if (has_uuid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->uuid());
    }

    // optional .MsgPB.ACHIEVE_STATUS status = 2;
    if (has_status()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->status());
    }

    // optional int32 value = 3;
    if (has_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->value());
    }

    // optional int64 update_time = 4;
    if (has_update_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->update_time());
    }

    // optional int64 complete_time = 5;
    if (has_complete_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->complete_time());
    }

    // optional int32 currently = 6;
    if (has_currently()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->currently());
    }

    // optional int64 dirty = 8;
    if (has_dirty()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->dirty());
    }

  }
  // repeated int32 source = 7;
  {
    int data_size = 0;
    for (int i = 0; i < this->source_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->source(i));
    }
    total_size += 1 * this->source_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgAchieveData::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgAchieveData* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgAchieveData*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgAchieveData::MergeFrom(const MsgAchieveData& from) {
  GOOGLE_CHECK_NE(&from, this);
  source_.MergeFrom(from.source_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_uuid()) {
      set_uuid(from.uuid());
    }
    if (from.has_status()) {
      set_status(from.status());
    }
    if (from.has_value()) {
      set_value(from.value());
    }
    if (from.has_update_time()) {
      set_update_time(from.update_time());
    }
    if (from.has_complete_time()) {
      set_complete_time(from.complete_time());
    }
    if (from.has_currently()) {
      set_currently(from.currently());
    }
    if (from.has_dirty()) {
      set_dirty(from.dirty());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgAchieveData::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgAchieveData::CopyFrom(const MsgAchieveData& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgAchieveData::IsInitialized() const {

  return true;
}

void MsgAchieveData::Swap(MsgAchieveData* other) {
  if (other != this) {
    std::swap(uuid_, other->uuid_);
    std::swap(status_, other->status_);
    std::swap(value_, other->value_);
    std::swap(update_time_, other->update_time_);
    std::swap(complete_time_, other->complete_time_);
    std::swap(currently_, other->currently_);
    source_.Swap(&other->source_);
    std::swap(dirty_, other->dirty_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgAchieveData::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgAchieveData_descriptor_;
  metadata.reflection = MsgAchieveData_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgAchieveSyncS2C::kMsgTypeFieldNumber;
const int MsgAchieveSyncS2C::kDataFieldNumber;
#endif  // !_MSC_VER

MsgAchieveSyncS2C::MsgAchieveSyncS2C()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.MsgAchieveSyncS2C)
}

void MsgAchieveSyncS2C::InitAsDefaultInstance() {
}

MsgAchieveSyncS2C::MsgAchieveSyncS2C(const MsgAchieveSyncS2C& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.MsgAchieveSyncS2C)
}

void MsgAchieveSyncS2C::SharedCtor() {
  _cached_size_ = 0;
  msgtype_ = 2600;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgAchieveSyncS2C::~MsgAchieveSyncS2C() {
  // @@protoc_insertion_point(destructor:MsgPB.MsgAchieveSyncS2C)
  SharedDtor();
}

void MsgAchieveSyncS2C::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgAchieveSyncS2C::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgAchieveSyncS2C::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgAchieveSyncS2C_descriptor_;
}

const MsgAchieveSyncS2C& MsgAchieveSyncS2C::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgAchieve_2eproto();
  return *default_instance_;
}

MsgAchieveSyncS2C* MsgAchieveSyncS2C::default_instance_ = NULL;

MsgAchieveSyncS2C* MsgAchieveSyncS2C::New() const {
  return new MsgAchieveSyncS2C;
}

void MsgAchieveSyncS2C::Clear() {
  msgtype_ = 2600;
  data_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgAchieveSyncS2C::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.MsgAchieveSyncS2C)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_ACHIEVE_SYNC_S2C];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::EMsgType_IsValid(value)) {
            set_msgtype(static_cast< ::MsgPB::EMsgType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_data;
        break;
      }

      // repeated .MsgPB.MsgAchieveData data = 2;
      case 2: {
        if (tag == 18) {
         parse_data:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_data()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_data;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.MsgAchieveSyncS2C)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.MsgAchieveSyncS2C)
  return false;
#undef DO_
}

void MsgAchieveSyncS2C::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.MsgAchieveSyncS2C)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_ACHIEVE_SYNC_S2C];
  if (has_msgtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->msgtype(), output);
  }

  // repeated .MsgPB.MsgAchieveData data = 2;
  for (int i = 0; i < this->data_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->data(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.MsgAchieveSyncS2C)
}

::google::protobuf::uint8* MsgAchieveSyncS2C::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.MsgAchieveSyncS2C)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_ACHIEVE_SYNC_S2C];
  if (has_msgtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->msgtype(), target);
  }

  // repeated .MsgPB.MsgAchieveData data = 2;
  for (int i = 0; i < this->data_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->data(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.MsgAchieveSyncS2C)
  return target;
}

int MsgAchieveSyncS2C::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_ACHIEVE_SYNC_S2C];
    if (has_msgtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgtype());
    }

  }
  // repeated .MsgPB.MsgAchieveData data = 2;
  total_size += 1 * this->data_size();
  for (int i = 0; i < this->data_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->data(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgAchieveSyncS2C::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgAchieveSyncS2C* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgAchieveSyncS2C*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgAchieveSyncS2C::MergeFrom(const MsgAchieveSyncS2C& from) {
  GOOGLE_CHECK_NE(&from, this);
  data_.MergeFrom(from.data_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msgtype()) {
      set_msgtype(from.msgtype());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgAchieveSyncS2C::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgAchieveSyncS2C::CopyFrom(const MsgAchieveSyncS2C& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgAchieveSyncS2C::IsInitialized() const {

  return true;
}

void MsgAchieveSyncS2C::Swap(MsgAchieveSyncS2C* other) {
  if (other != this) {
    std::swap(msgtype_, other->msgtype_);
    data_.Swap(&other->data_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgAchieveSyncS2C::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgAchieveSyncS2C_descriptor_;
  metadata.reflection = MsgAchieveSyncS2C_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgAchieveUpdateS2C::kMsgTypeFieldNumber;
const int MsgAchieveUpdateS2C::kDataFieldNumber;
#endif  // !_MSC_VER

MsgAchieveUpdateS2C::MsgAchieveUpdateS2C()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.MsgAchieveUpdateS2C)
}

void MsgAchieveUpdateS2C::InitAsDefaultInstance() {
  data_ = const_cast< ::MsgPB::MsgAchieveData*>(&::MsgPB::MsgAchieveData::default_instance());
}

MsgAchieveUpdateS2C::MsgAchieveUpdateS2C(const MsgAchieveUpdateS2C& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.MsgAchieveUpdateS2C)
}

void MsgAchieveUpdateS2C::SharedCtor() {
  _cached_size_ = 0;
  msgtype_ = 2601;
  data_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgAchieveUpdateS2C::~MsgAchieveUpdateS2C() {
  // @@protoc_insertion_point(destructor:MsgPB.MsgAchieveUpdateS2C)
  SharedDtor();
}

void MsgAchieveUpdateS2C::SharedDtor() {
  if (this != default_instance_) {
    delete data_;
  }
}

void MsgAchieveUpdateS2C::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgAchieveUpdateS2C::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgAchieveUpdateS2C_descriptor_;
}

const MsgAchieveUpdateS2C& MsgAchieveUpdateS2C::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgAchieve_2eproto();
  return *default_instance_;
}

MsgAchieveUpdateS2C* MsgAchieveUpdateS2C::default_instance_ = NULL;

MsgAchieveUpdateS2C* MsgAchieveUpdateS2C::New() const {
  return new MsgAchieveUpdateS2C;
}

void MsgAchieveUpdateS2C::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    msgtype_ = 2601;
    if (has_data()) {
      if (data_ != NULL) data_->::MsgPB::MsgAchieveData::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgAchieveUpdateS2C::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.MsgAchieveUpdateS2C)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_ACHIEVE_UPDATE_S2C];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::EMsgType_IsValid(value)) {
            set_msgtype(static_cast< ::MsgPB::EMsgType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_data;
        break;
      }

      // optional .MsgPB.MsgAchieveData data = 2;
      case 2: {
        if (tag == 18) {
         parse_data:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_data()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.MsgAchieveUpdateS2C)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.MsgAchieveUpdateS2C)
  return false;
#undef DO_
}

void MsgAchieveUpdateS2C::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.MsgAchieveUpdateS2C)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_ACHIEVE_UPDATE_S2C];
  if (has_msgtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->msgtype(), output);
  }

  // optional .MsgPB.MsgAchieveData data = 2;
  if (has_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->data(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.MsgAchieveUpdateS2C)
}

::google::protobuf::uint8* MsgAchieveUpdateS2C::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.MsgAchieveUpdateS2C)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_ACHIEVE_UPDATE_S2C];
  if (has_msgtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->msgtype(), target);
  }

  // optional .MsgPB.MsgAchieveData data = 2;
  if (has_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->data(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.MsgAchieveUpdateS2C)
  return target;
}

int MsgAchieveUpdateS2C::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_ACHIEVE_UPDATE_S2C];
    if (has_msgtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgtype());
    }

    // optional .MsgPB.MsgAchieveData data = 2;
    if (has_data()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->data());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgAchieveUpdateS2C::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgAchieveUpdateS2C* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgAchieveUpdateS2C*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgAchieveUpdateS2C::MergeFrom(const MsgAchieveUpdateS2C& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msgtype()) {
      set_msgtype(from.msgtype());
    }
    if (from.has_data()) {
      mutable_data()->::MsgPB::MsgAchieveData::MergeFrom(from.data());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgAchieveUpdateS2C::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgAchieveUpdateS2C::CopyFrom(const MsgAchieveUpdateS2C& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgAchieveUpdateS2C::IsInitialized() const {

  return true;
}

void MsgAchieveUpdateS2C::Swap(MsgAchieveUpdateS2C* other) {
  if (other != this) {
    std::swap(msgtype_, other->msgtype_);
    std::swap(data_, other->data_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgAchieveUpdateS2C::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgAchieveUpdateS2C_descriptor_;
  metadata.reflection = MsgAchieveUpdateS2C_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgAchieveRemoveS2C::kMsgTypeFieldNumber;
const int MsgAchieveRemoveS2C::kUuidFieldNumber;
#endif  // !_MSC_VER

MsgAchieveRemoveS2C::MsgAchieveRemoveS2C()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.MsgAchieveRemoveS2C)
}

void MsgAchieveRemoveS2C::InitAsDefaultInstance() {
}

MsgAchieveRemoveS2C::MsgAchieveRemoveS2C(const MsgAchieveRemoveS2C& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.MsgAchieveRemoveS2C)
}

void MsgAchieveRemoveS2C::SharedCtor() {
  _cached_size_ = 0;
  msgtype_ = 2602;
  uuid_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgAchieveRemoveS2C::~MsgAchieveRemoveS2C() {
  // @@protoc_insertion_point(destructor:MsgPB.MsgAchieveRemoveS2C)
  SharedDtor();
}

void MsgAchieveRemoveS2C::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgAchieveRemoveS2C::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgAchieveRemoveS2C::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgAchieveRemoveS2C_descriptor_;
}

const MsgAchieveRemoveS2C& MsgAchieveRemoveS2C::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgAchieve_2eproto();
  return *default_instance_;
}

MsgAchieveRemoveS2C* MsgAchieveRemoveS2C::default_instance_ = NULL;

MsgAchieveRemoveS2C* MsgAchieveRemoveS2C::New() const {
  return new MsgAchieveRemoveS2C;
}

void MsgAchieveRemoveS2C::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    msgtype_ = 2602;
    uuid_ = GOOGLE_LONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgAchieveRemoveS2C::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.MsgAchieveRemoveS2C)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_ACHIEVE_REMOVE_S2C];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::EMsgType_IsValid(value)) {
            set_msgtype(static_cast< ::MsgPB::EMsgType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_uuid;
        break;
      }

      // optional int64 uuid = 2;
      case 2: {
        if (tag == 16) {
         parse_uuid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &uuid_)));
          set_has_uuid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.MsgAchieveRemoveS2C)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.MsgAchieveRemoveS2C)
  return false;
#undef DO_
}

void MsgAchieveRemoveS2C::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.MsgAchieveRemoveS2C)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_ACHIEVE_REMOVE_S2C];
  if (has_msgtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->msgtype(), output);
  }

  // optional int64 uuid = 2;
  if (has_uuid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->uuid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.MsgAchieveRemoveS2C)
}

::google::protobuf::uint8* MsgAchieveRemoveS2C::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.MsgAchieveRemoveS2C)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_ACHIEVE_REMOVE_S2C];
  if (has_msgtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->msgtype(), target);
  }

  // optional int64 uuid = 2;
  if (has_uuid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->uuid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.MsgAchieveRemoveS2C)
  return target;
}

int MsgAchieveRemoveS2C::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_ACHIEVE_REMOVE_S2C];
    if (has_msgtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgtype());
    }

    // optional int64 uuid = 2;
    if (has_uuid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->uuid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgAchieveRemoveS2C::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgAchieveRemoveS2C* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgAchieveRemoveS2C*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgAchieveRemoveS2C::MergeFrom(const MsgAchieveRemoveS2C& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msgtype()) {
      set_msgtype(from.msgtype());
    }
    if (from.has_uuid()) {
      set_uuid(from.uuid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgAchieveRemoveS2C::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgAchieveRemoveS2C::CopyFrom(const MsgAchieveRemoveS2C& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgAchieveRemoveS2C::IsInitialized() const {

  return true;
}

void MsgAchieveRemoveS2C::Swap(MsgAchieveRemoveS2C* other) {
  if (other != this) {
    std::swap(msgtype_, other->msgtype_);
    std::swap(uuid_, other->uuid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgAchieveRemoveS2C::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgAchieveRemoveS2C_descriptor_;
  metadata.reflection = MsgAchieveRemoveS2C_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgAchieveReceiveRewardC2S::kMsgTypeFieldNumber;
const int MsgAchieveReceiveRewardC2S::kUuidFieldNumber;
const int MsgAchieveReceiveRewardC2S::kIggidFieldNumber;
#endif  // !_MSC_VER

MsgAchieveReceiveRewardC2S::MsgAchieveReceiveRewardC2S()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.MsgAchieveReceiveRewardC2S)
}

void MsgAchieveReceiveRewardC2S::InitAsDefaultInstance() {
}

MsgAchieveReceiveRewardC2S::MsgAchieveReceiveRewardC2S(const MsgAchieveReceiveRewardC2S& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.MsgAchieveReceiveRewardC2S)
}

void MsgAchieveReceiveRewardC2S::SharedCtor() {
  _cached_size_ = 0;
  msgtype_ = 2610;
  uuid_ = GOOGLE_LONGLONG(0);
  iggid_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgAchieveReceiveRewardC2S::~MsgAchieveReceiveRewardC2S() {
  // @@protoc_insertion_point(destructor:MsgPB.MsgAchieveReceiveRewardC2S)
  SharedDtor();
}

void MsgAchieveReceiveRewardC2S::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgAchieveReceiveRewardC2S::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgAchieveReceiveRewardC2S::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgAchieveReceiveRewardC2S_descriptor_;
}

const MsgAchieveReceiveRewardC2S& MsgAchieveReceiveRewardC2S::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgAchieve_2eproto();
  return *default_instance_;
}

MsgAchieveReceiveRewardC2S* MsgAchieveReceiveRewardC2S::default_instance_ = NULL;

MsgAchieveReceiveRewardC2S* MsgAchieveReceiveRewardC2S::New() const {
  return new MsgAchieveReceiveRewardC2S;
}

void MsgAchieveReceiveRewardC2S::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<MsgAchieveReceiveRewardC2S*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 7) {
    ZR_(uuid_, iggid_);
    msgtype_ = 2610;
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgAchieveReceiveRewardC2S::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.MsgAchieveReceiveRewardC2S)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_ACHIEVE_RECEIVE_REWARD_C2S];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::EMsgType_IsValid(value)) {
            set_msgtype(static_cast< ::MsgPB::EMsgType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_uuid;
        break;
      }

      // optional int64 uuid = 2;
      case 2: {
        if (tag == 16) {
         parse_uuid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &uuid_)));
          set_has_uuid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_iggid;
        break;
      }

      // optional int64 iggid = 3;
      case 3: {
        if (tag == 24) {
         parse_iggid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &iggid_)));
          set_has_iggid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.MsgAchieveReceiveRewardC2S)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.MsgAchieveReceiveRewardC2S)
  return false;
#undef DO_
}

void MsgAchieveReceiveRewardC2S::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.MsgAchieveReceiveRewardC2S)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_ACHIEVE_RECEIVE_REWARD_C2S];
  if (has_msgtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->msgtype(), output);
  }

  // optional int64 uuid = 2;
  if (has_uuid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->uuid(), output);
  }

  // optional int64 iggid = 3;
  if (has_iggid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->iggid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.MsgAchieveReceiveRewardC2S)
}

::google::protobuf::uint8* MsgAchieveReceiveRewardC2S::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.MsgAchieveReceiveRewardC2S)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_ACHIEVE_RECEIVE_REWARD_C2S];
  if (has_msgtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->msgtype(), target);
  }

  // optional int64 uuid = 2;
  if (has_uuid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->uuid(), target);
  }

  // optional int64 iggid = 3;
  if (has_iggid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->iggid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.MsgAchieveReceiveRewardC2S)
  return target;
}

int MsgAchieveReceiveRewardC2S::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_ACHIEVE_RECEIVE_REWARD_C2S];
    if (has_msgtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgtype());
    }

    // optional int64 uuid = 2;
    if (has_uuid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->uuid());
    }

    // optional int64 iggid = 3;
    if (has_iggid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->iggid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgAchieveReceiveRewardC2S::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgAchieveReceiveRewardC2S* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgAchieveReceiveRewardC2S*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgAchieveReceiveRewardC2S::MergeFrom(const MsgAchieveReceiveRewardC2S& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msgtype()) {
      set_msgtype(from.msgtype());
    }
    if (from.has_uuid()) {
      set_uuid(from.uuid());
    }
    if (from.has_iggid()) {
      set_iggid(from.iggid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgAchieveReceiveRewardC2S::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgAchieveReceiveRewardC2S::CopyFrom(const MsgAchieveReceiveRewardC2S& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgAchieveReceiveRewardC2S::IsInitialized() const {

  return true;
}

void MsgAchieveReceiveRewardC2S::Swap(MsgAchieveReceiveRewardC2S* other) {
  if (other != this) {
    std::swap(msgtype_, other->msgtype_);
    std::swap(uuid_, other->uuid_);
    std::swap(iggid_, other->iggid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgAchieveReceiveRewardC2S::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgAchieveReceiveRewardC2S_descriptor_;
  metadata.reflection = MsgAchieveReceiveRewardC2S_reflection_;
  return metadata;
}


// ===================================================================

const ::google::protobuf::EnumDescriptor* MsgAchieveReceiveRewardResultS2C_RESULT_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgAchieveReceiveRewardResultS2C_RESULT_descriptor_;
}
bool MsgAchieveReceiveRewardResultS2C_RESULT_IsValid(int value) {
  switch(value) {
    case -1:
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const MsgAchieveReceiveRewardResultS2C_RESULT MsgAchieveReceiveRewardResultS2C::FAILURE;
const MsgAchieveReceiveRewardResultS2C_RESULT MsgAchieveReceiveRewardResultS2C::SUCCESS;
const MsgAchieveReceiveRewardResultS2C_RESULT MsgAchieveReceiveRewardResultS2C::NOT_ACCOMPLISH;
const MsgAchieveReceiveRewardResultS2C_RESULT MsgAchieveReceiveRewardResultS2C::RECEIVED;
const MsgAchieveReceiveRewardResultS2C_RESULT MsgAchieveReceiveRewardResultS2C::TEMPLATE_ERROR;
const MsgAchieveReceiveRewardResultS2C_RESULT MsgAchieveReceiveRewardResultS2C::ITEM_FULL;
const MsgAchieveReceiveRewardResultS2C_RESULT MsgAchieveReceiveRewardResultS2C::RESULT_MIN;
const MsgAchieveReceiveRewardResultS2C_RESULT MsgAchieveReceiveRewardResultS2C::RESULT_MAX;
const int MsgAchieveReceiveRewardResultS2C::RESULT_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int MsgAchieveReceiveRewardResultS2C::kMsgTypeFieldNumber;
const int MsgAchieveReceiveRewardResultS2C::kUuidFieldNumber;
const int MsgAchieveReceiveRewardResultS2C::kResultFieldNumber;
#endif  // !_MSC_VER

MsgAchieveReceiveRewardResultS2C::MsgAchieveReceiveRewardResultS2C()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.MsgAchieveReceiveRewardResultS2C)
}

void MsgAchieveReceiveRewardResultS2C::InitAsDefaultInstance() {
}

MsgAchieveReceiveRewardResultS2C::MsgAchieveReceiveRewardResultS2C(const MsgAchieveReceiveRewardResultS2C& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.MsgAchieveReceiveRewardResultS2C)
}

void MsgAchieveReceiveRewardResultS2C::SharedCtor() {
  _cached_size_ = 0;
  msgtype_ = 2611;
  uuid_ = GOOGLE_LONGLONG(0);
  result_ = -1;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgAchieveReceiveRewardResultS2C::~MsgAchieveReceiveRewardResultS2C() {
  // @@protoc_insertion_point(destructor:MsgPB.MsgAchieveReceiveRewardResultS2C)
  SharedDtor();
}

void MsgAchieveReceiveRewardResultS2C::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgAchieveReceiveRewardResultS2C::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgAchieveReceiveRewardResultS2C::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgAchieveReceiveRewardResultS2C_descriptor_;
}

const MsgAchieveReceiveRewardResultS2C& MsgAchieveReceiveRewardResultS2C::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgAchieve_2eproto();
  return *default_instance_;
}

MsgAchieveReceiveRewardResultS2C* MsgAchieveReceiveRewardResultS2C::default_instance_ = NULL;

MsgAchieveReceiveRewardResultS2C* MsgAchieveReceiveRewardResultS2C::New() const {
  return new MsgAchieveReceiveRewardResultS2C;
}

void MsgAchieveReceiveRewardResultS2C::Clear() {
  if (_has_bits_[0 / 32] & 7) {
    msgtype_ = 2611;
    uuid_ = GOOGLE_LONGLONG(0);
    result_ = -1;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgAchieveReceiveRewardResultS2C::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.MsgAchieveReceiveRewardResultS2C)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_ACHIEVE_RECEIVE_REWARD_RESULT_S2C];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::EMsgType_IsValid(value)) {
            set_msgtype(static_cast< ::MsgPB::EMsgType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_uuid;
        break;
      }

      // optional int64 uuid = 2;
      case 2: {
        if (tag == 16) {
         parse_uuid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &uuid_)));
          set_has_uuid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_result;
        break;
      }

      // optional .MsgPB.MsgAchieveReceiveRewardResultS2C.RESULT result = 3;
      case 3: {
        if (tag == 24) {
         parse_result:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::MsgAchieveReceiveRewardResultS2C_RESULT_IsValid(value)) {
            set_result(static_cast< ::MsgPB::MsgAchieveReceiveRewardResultS2C_RESULT >(value));
          } else {
            mutable_unknown_fields()->AddVarint(3, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.MsgAchieveReceiveRewardResultS2C)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.MsgAchieveReceiveRewardResultS2C)
  return false;
#undef DO_
}

void MsgAchieveReceiveRewardResultS2C::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.MsgAchieveReceiveRewardResultS2C)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_ACHIEVE_RECEIVE_REWARD_RESULT_S2C];
  if (has_msgtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->msgtype(), output);
  }

  // optional int64 uuid = 2;
  if (has_uuid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->uuid(), output);
  }

  // optional .MsgPB.MsgAchieveReceiveRewardResultS2C.RESULT result = 3;
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->result(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.MsgAchieveReceiveRewardResultS2C)
}

::google::protobuf::uint8* MsgAchieveReceiveRewardResultS2C::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.MsgAchieveReceiveRewardResultS2C)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_ACHIEVE_RECEIVE_REWARD_RESULT_S2C];
  if (has_msgtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->msgtype(), target);
  }

  // optional int64 uuid = 2;
  if (has_uuid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->uuid(), target);
  }

  // optional .MsgPB.MsgAchieveReceiveRewardResultS2C.RESULT result = 3;
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->result(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.MsgAchieveReceiveRewardResultS2C)
  return target;
}

int MsgAchieveReceiveRewardResultS2C::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_ACHIEVE_RECEIVE_REWARD_RESULT_S2C];
    if (has_msgtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgtype());
    }

    // optional int64 uuid = 2;
    if (has_uuid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->uuid());
    }

    // optional .MsgPB.MsgAchieveReceiveRewardResultS2C.RESULT result = 3;
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->result());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgAchieveReceiveRewardResultS2C::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgAchieveReceiveRewardResultS2C* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgAchieveReceiveRewardResultS2C*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgAchieveReceiveRewardResultS2C::MergeFrom(const MsgAchieveReceiveRewardResultS2C& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msgtype()) {
      set_msgtype(from.msgtype());
    }
    if (from.has_uuid()) {
      set_uuid(from.uuid());
    }
    if (from.has_result()) {
      set_result(from.result());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgAchieveReceiveRewardResultS2C::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgAchieveReceiveRewardResultS2C::CopyFrom(const MsgAchieveReceiveRewardResultS2C& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgAchieveReceiveRewardResultS2C::IsInitialized() const {

  return true;
}

void MsgAchieveReceiveRewardResultS2C::Swap(MsgAchieveReceiveRewardResultS2C* other) {
  if (other != this) {
    std::swap(msgtype_, other->msgtype_);
    std::swap(uuid_, other->uuid_);
    std::swap(result_, other->result_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgAchieveReceiveRewardResultS2C::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgAchieveReceiveRewardResultS2C_descriptor_;
  metadata.reflection = MsgAchieveReceiveRewardResultS2C_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgAchieveClientTriggerC2S::kMsgTypeFieldNumber;
const int MsgAchieveClientTriggerC2S::kUuidFieldNumber;
const int MsgAchieveClientTriggerC2S::kValueFieldNumber;
#endif  // !_MSC_VER

MsgAchieveClientTriggerC2S::MsgAchieveClientTriggerC2S()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.MsgAchieveClientTriggerC2S)
}

void MsgAchieveClientTriggerC2S::InitAsDefaultInstance() {
}

MsgAchieveClientTriggerC2S::MsgAchieveClientTriggerC2S(const MsgAchieveClientTriggerC2S& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.MsgAchieveClientTriggerC2S)
}

void MsgAchieveClientTriggerC2S::SharedCtor() {
  _cached_size_ = 0;
  msgtype_ = 2612;
  uuid_ = GOOGLE_LONGLONG(0);
  value_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgAchieveClientTriggerC2S::~MsgAchieveClientTriggerC2S() {
  // @@protoc_insertion_point(destructor:MsgPB.MsgAchieveClientTriggerC2S)
  SharedDtor();
}

void MsgAchieveClientTriggerC2S::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgAchieveClientTriggerC2S::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgAchieveClientTriggerC2S::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgAchieveClientTriggerC2S_descriptor_;
}

const MsgAchieveClientTriggerC2S& MsgAchieveClientTriggerC2S::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgAchieve_2eproto();
  return *default_instance_;
}

MsgAchieveClientTriggerC2S* MsgAchieveClientTriggerC2S::default_instance_ = NULL;

MsgAchieveClientTriggerC2S* MsgAchieveClientTriggerC2S::New() const {
  return new MsgAchieveClientTriggerC2S;
}

void MsgAchieveClientTriggerC2S::Clear() {
  if (_has_bits_[0 / 32] & 7) {
    msgtype_ = 2612;
    uuid_ = GOOGLE_LONGLONG(0);
    value_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgAchieveClientTriggerC2S::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.MsgAchieveClientTriggerC2S)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_ACHIEVE_CLIENT_TRIGGER_C2S];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::EMsgType_IsValid(value)) {
            set_msgtype(static_cast< ::MsgPB::EMsgType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_uuid;
        break;
      }

      // optional int64 uuid = 2;
      case 2: {
        if (tag == 16) {
         parse_uuid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &uuid_)));
          set_has_uuid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_value;
        break;
      }

      // optional int32 value = 3;
      case 3: {
        if (tag == 24) {
         parse_value:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &value_)));
          set_has_value();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.MsgAchieveClientTriggerC2S)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.MsgAchieveClientTriggerC2S)
  return false;
#undef DO_
}

void MsgAchieveClientTriggerC2S::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.MsgAchieveClientTriggerC2S)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_ACHIEVE_CLIENT_TRIGGER_C2S];
  if (has_msgtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->msgtype(), output);
  }

  // optional int64 uuid = 2;
  if (has_uuid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->uuid(), output);
  }

  // optional int32 value = 3;
  if (has_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->value(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.MsgAchieveClientTriggerC2S)
}

::google::protobuf::uint8* MsgAchieveClientTriggerC2S::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.MsgAchieveClientTriggerC2S)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_ACHIEVE_CLIENT_TRIGGER_C2S];
  if (has_msgtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->msgtype(), target);
  }

  // optional int64 uuid = 2;
  if (has_uuid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->uuid(), target);
  }

  // optional int32 value = 3;
  if (has_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->value(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.MsgAchieveClientTriggerC2S)
  return target;
}

int MsgAchieveClientTriggerC2S::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_ACHIEVE_CLIENT_TRIGGER_C2S];
    if (has_msgtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgtype());
    }

    // optional int64 uuid = 2;
    if (has_uuid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->uuid());
    }

    // optional int32 value = 3;
    if (has_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->value());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgAchieveClientTriggerC2S::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgAchieveClientTriggerC2S* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgAchieveClientTriggerC2S*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgAchieveClientTriggerC2S::MergeFrom(const MsgAchieveClientTriggerC2S& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msgtype()) {
      set_msgtype(from.msgtype());
    }
    if (from.has_uuid()) {
      set_uuid(from.uuid());
    }
    if (from.has_value()) {
      set_value(from.value());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgAchieveClientTriggerC2S::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgAchieveClientTriggerC2S::CopyFrom(const MsgAchieveClientTriggerC2S& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgAchieveClientTriggerC2S::IsInitialized() const {

  return true;
}

void MsgAchieveClientTriggerC2S::Swap(MsgAchieveClientTriggerC2S* other) {
  if (other != this) {
    std::swap(msgtype_, other->msgtype_);
    std::swap(uuid_, other->uuid_);
    std::swap(value_, other->value_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgAchieveClientTriggerC2S::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgAchieveClientTriggerC2S_descriptor_;
  metadata.reflection = MsgAchieveClientTriggerC2S_reflection_;
  return metadata;
}


// ===================================================================

const ::google::protobuf::EnumDescriptor* MsgAchieveClientTriggerResultS2C_RESULT_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgAchieveClientTriggerResultS2C_RESULT_descriptor_;
}
bool MsgAchieveClientTriggerResultS2C_RESULT_IsValid(int value) {
  switch(value) {
    case -1:
    case 0:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const MsgAchieveClientTriggerResultS2C_RESULT MsgAchieveClientTriggerResultS2C::FAILURE;
const MsgAchieveClientTriggerResultS2C_RESULT MsgAchieveClientTriggerResultS2C::SUCCESS;
const MsgAchieveClientTriggerResultS2C_RESULT MsgAchieveClientTriggerResultS2C::RESULT_MIN;
const MsgAchieveClientTriggerResultS2C_RESULT MsgAchieveClientTriggerResultS2C::RESULT_MAX;
const int MsgAchieveClientTriggerResultS2C::RESULT_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int MsgAchieveClientTriggerResultS2C::kMsgTypeFieldNumber;
const int MsgAchieveClientTriggerResultS2C::kUuidFieldNumber;
const int MsgAchieveClientTriggerResultS2C::kValueFieldNumber;
const int MsgAchieveClientTriggerResultS2C::kResultFieldNumber;
#endif  // !_MSC_VER

MsgAchieveClientTriggerResultS2C::MsgAchieveClientTriggerResultS2C()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.MsgAchieveClientTriggerResultS2C)
}

void MsgAchieveClientTriggerResultS2C::InitAsDefaultInstance() {
}

MsgAchieveClientTriggerResultS2C::MsgAchieveClientTriggerResultS2C(const MsgAchieveClientTriggerResultS2C& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.MsgAchieveClientTriggerResultS2C)
}

void MsgAchieveClientTriggerResultS2C::SharedCtor() {
  _cached_size_ = 0;
  msgtype_ = 2613;
  uuid_ = GOOGLE_LONGLONG(0);
  value_ = 0;
  result_ = -1;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgAchieveClientTriggerResultS2C::~MsgAchieveClientTriggerResultS2C() {
  // @@protoc_insertion_point(destructor:MsgPB.MsgAchieveClientTriggerResultS2C)
  SharedDtor();
}

void MsgAchieveClientTriggerResultS2C::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgAchieveClientTriggerResultS2C::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgAchieveClientTriggerResultS2C::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgAchieveClientTriggerResultS2C_descriptor_;
}

const MsgAchieveClientTriggerResultS2C& MsgAchieveClientTriggerResultS2C::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgAchieve_2eproto();
  return *default_instance_;
}

MsgAchieveClientTriggerResultS2C* MsgAchieveClientTriggerResultS2C::default_instance_ = NULL;

MsgAchieveClientTriggerResultS2C* MsgAchieveClientTriggerResultS2C::New() const {
  return new MsgAchieveClientTriggerResultS2C;
}

void MsgAchieveClientTriggerResultS2C::Clear() {
  if (_has_bits_[0 / 32] & 15) {
    msgtype_ = 2613;
    uuid_ = GOOGLE_LONGLONG(0);
    value_ = 0;
    result_ = -1;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgAchieveClientTriggerResultS2C::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.MsgAchieveClientTriggerResultS2C)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_ACHIEVE_CLIENT_TRIGGER_RESULT_S2C];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::EMsgType_IsValid(value)) {
            set_msgtype(static_cast< ::MsgPB::EMsgType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_uuid;
        break;
      }

      // optional int64 uuid = 2;
      case 2: {
        if (tag == 16) {
         parse_uuid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &uuid_)));
          set_has_uuid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_value;
        break;
      }

      // optional int32 value = 3;
      case 3: {
        if (tag == 24) {
         parse_value:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &value_)));
          set_has_value();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_result;
        break;
      }

      // optional .MsgPB.MsgAchieveClientTriggerResultS2C.RESULT result = 4;
      case 4: {
        if (tag == 32) {
         parse_result:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::MsgAchieveClientTriggerResultS2C_RESULT_IsValid(value)) {
            set_result(static_cast< ::MsgPB::MsgAchieveClientTriggerResultS2C_RESULT >(value));
          } else {
            mutable_unknown_fields()->AddVarint(4, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.MsgAchieveClientTriggerResultS2C)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.MsgAchieveClientTriggerResultS2C)
  return false;
#undef DO_
}

void MsgAchieveClientTriggerResultS2C::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.MsgAchieveClientTriggerResultS2C)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_ACHIEVE_CLIENT_TRIGGER_RESULT_S2C];
  if (has_msgtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->msgtype(), output);
  }

  // optional int64 uuid = 2;
  if (has_uuid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->uuid(), output);
  }

  // optional int32 value = 3;
  if (has_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->value(), output);
  }

  // optional .MsgPB.MsgAchieveClientTriggerResultS2C.RESULT result = 4;
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->result(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.MsgAchieveClientTriggerResultS2C)
}

::google::protobuf::uint8* MsgAchieveClientTriggerResultS2C::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.MsgAchieveClientTriggerResultS2C)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_ACHIEVE_CLIENT_TRIGGER_RESULT_S2C];
  if (has_msgtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->msgtype(), target);
  }

  // optional int64 uuid = 2;
  if (has_uuid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->uuid(), target);
  }

  // optional int32 value = 3;
  if (has_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->value(), target);
  }

  // optional .MsgPB.MsgAchieveClientTriggerResultS2C.RESULT result = 4;
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->result(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.MsgAchieveClientTriggerResultS2C)
  return target;
}

int MsgAchieveClientTriggerResultS2C::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_ACHIEVE_CLIENT_TRIGGER_RESULT_S2C];
    if (has_msgtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgtype());
    }

    // optional int64 uuid = 2;
    if (has_uuid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->uuid());
    }

    // optional int32 value = 3;
    if (has_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->value());
    }

    // optional .MsgPB.MsgAchieveClientTriggerResultS2C.RESULT result = 4;
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->result());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgAchieveClientTriggerResultS2C::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgAchieveClientTriggerResultS2C* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgAchieveClientTriggerResultS2C*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgAchieveClientTriggerResultS2C::MergeFrom(const MsgAchieveClientTriggerResultS2C& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msgtype()) {
      set_msgtype(from.msgtype());
    }
    if (from.has_uuid()) {
      set_uuid(from.uuid());
    }
    if (from.has_value()) {
      set_value(from.value());
    }
    if (from.has_result()) {
      set_result(from.result());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgAchieveClientTriggerResultS2C::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgAchieveClientTriggerResultS2C::CopyFrom(const MsgAchieveClientTriggerResultS2C& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgAchieveClientTriggerResultS2C::IsInitialized() const {

  return true;
}

void MsgAchieveClientTriggerResultS2C::Swap(MsgAchieveClientTriggerResultS2C* other) {
  if (other != this) {
    std::swap(msgtype_, other->msgtype_);
    std::swap(uuid_, other->uuid_);
    std::swap(value_, other->value_);
    std::swap(result_, other->result_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgAchieveClientTriggerResultS2C::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgAchieveClientTriggerResultS2C_descriptor_;
  metadata.reflection = MsgAchieveClientTriggerResultS2C_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace MsgPB

// @@protoc_insertion_point(global_scope)
