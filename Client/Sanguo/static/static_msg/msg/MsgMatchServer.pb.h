// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MsgMatchServer.proto

#ifndef PROTOBUF_MsgMatchServer_2eproto__INCLUDED
#define PROTOBUF_MsgMatchServer_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "MsgType.pb.h"
#include "MsgItem.pb.h"
// @@protoc_insertion_point(includes)

namespace MsgPB {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_MsgMatchServer_2eproto();
void protobuf_AssignDesc_MsgMatchServer_2eproto();
void protobuf_ShutdownFile_MsgMatchServer_2eproto();

class MsgPlayerLoginSuccess_GS2MS;
class MsgPlayerDisconnect_GS2MS;
class MsgMatchSrvPlayerJoin_MapMgr2MatchSrv;
class MsgMatchSrvPlayerQuit_MapMgr2MatchSrv;
class MsgPlayerNetworkDisconnect_GS2S;
class MsgPlayerOfflineopSync;
class MsgPlayerOfflineOpGet_MS2MAS;

enum MsgPlayerOfflineopSync_OP_TYPE {
  MsgPlayerOfflineopSync_OP_TYPE_NpcrepoHelp = 1,
  MsgPlayerOfflineopSync_OP_TYPE_TowerpvpPairData = 2
};
bool MsgPlayerOfflineopSync_OP_TYPE_IsValid(int value);
const MsgPlayerOfflineopSync_OP_TYPE MsgPlayerOfflineopSync_OP_TYPE_OP_TYPE_MIN = MsgPlayerOfflineopSync_OP_TYPE_NpcrepoHelp;
const MsgPlayerOfflineopSync_OP_TYPE MsgPlayerOfflineopSync_OP_TYPE_OP_TYPE_MAX = MsgPlayerOfflineopSync_OP_TYPE_TowerpvpPairData;
const int MsgPlayerOfflineopSync_OP_TYPE_OP_TYPE_ARRAYSIZE = MsgPlayerOfflineopSync_OP_TYPE_OP_TYPE_MAX + 1;

const ::google::protobuf::EnumDescriptor* MsgPlayerOfflineopSync_OP_TYPE_descriptor();
inline const ::std::string& MsgPlayerOfflineopSync_OP_TYPE_Name(MsgPlayerOfflineopSync_OP_TYPE value) {
  return ::google::protobuf::internal::NameOfEnum(
    MsgPlayerOfflineopSync_OP_TYPE_descriptor(), value);
}
inline bool MsgPlayerOfflineopSync_OP_TYPE_Parse(
    const ::std::string& name, MsgPlayerOfflineopSync_OP_TYPE* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MsgPlayerOfflineopSync_OP_TYPE>(
    MsgPlayerOfflineopSync_OP_TYPE_descriptor(), name, value);
}
// ===================================================================

class MsgPlayerLoginSuccess_GS2MS : public ::google::protobuf::Message {
 public:
  MsgPlayerLoginSuccess_GS2MS();
  virtual ~MsgPlayerLoginSuccess_GS2MS();

  MsgPlayerLoginSuccess_GS2MS(const MsgPlayerLoginSuccess_GS2MS& from);

  inline MsgPlayerLoginSuccess_GS2MS& operator=(const MsgPlayerLoginSuccess_GS2MS& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgPlayerLoginSuccess_GS2MS& default_instance();

  void Swap(MsgPlayerLoginSuccess_GS2MS* other);

  // implements Message ----------------------------------------------

  MsgPlayerLoginSuccess_GS2MS* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgPlayerLoginSuccess_GS2MS& from);
  void MergeFrom(const MsgPlayerLoginSuccess_GS2MS& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_PLAYER_LOGIN_SUCCESS_GS2MGS];
  inline bool has_msgtype() const;
  inline void clear_msgtype();
  static const int kMsgTypeFieldNumber = 1;
  inline ::MsgPB::EMsgType msgtype() const;
  inline void set_msgtype(::MsgPB::EMsgType value);

  // optional int64 iggId = 2;
  inline bool has_iggid() const;
  inline void clear_iggid();
  static const int kIggIdFieldNumber = 2;
  inline ::google::protobuf::int64 iggid() const;
  inline void set_iggid(::google::protobuf::int64 value);

  // optional int32 lv = 3;
  inline bool has_lv() const;
  inline void clear_lv();
  static const int kLvFieldNumber = 3;
  inline ::google::protobuf::int32 lv() const;
  inline void set_lv(::google::protobuf::int32 value);

  // optional string nickname = 4;
  inline bool has_nickname() const;
  inline void clear_nickname();
  static const int kNicknameFieldNumber = 4;
  inline const ::std::string& nickname() const;
  inline void set_nickname(const ::std::string& value);
  inline void set_nickname(const char* value);
  inline void set_nickname(const char* value, size_t size);
  inline ::std::string* mutable_nickname();
  inline ::std::string* release_nickname();
  inline void set_allocated_nickname(::std::string* nickname);

  // optional int32 gender = 5;
  inline bool has_gender() const;
  inline void clear_gender();
  static const int kGenderFieldNumber = 5;
  inline ::google::protobuf::int32 gender() const;
  inline void set_gender(::google::protobuf::int32 value);

  // optional int32 skincolor = 6;
  inline bool has_skincolor() const;
  inline void clear_skincolor();
  static const int kSkincolorFieldNumber = 6;
  inline ::google::protobuf::int32 skincolor() const;
  inline void set_skincolor(::google::protobuf::int32 value);

  // optional int32 hair = 7;
  inline bool has_hair() const;
  inline void clear_hair();
  static const int kHairFieldNumber = 7;
  inline ::google::protobuf::int32 hair() const;
  inline void set_hair(::google::protobuf::int32 value);

  // optional int32 haircolor = 8;
  inline bool has_haircolor() const;
  inline void clear_haircolor();
  static const int kHaircolorFieldNumber = 8;
  inline ::google::protobuf::int32 haircolor() const;
  inline void set_haircolor(::google::protobuf::int32 value);

  // repeated .MsgPB.MsgItemCommonData itemdata = 9;
  inline int itemdata_size() const;
  inline void clear_itemdata();
  static const int kItemdataFieldNumber = 9;
  inline const ::MsgPB::MsgItemCommonData& itemdata(int index) const;
  inline ::MsgPB::MsgItemCommonData* mutable_itemdata(int index);
  inline ::MsgPB::MsgItemCommonData* add_itemdata();
  inline const ::google::protobuf::RepeatedPtrField< ::MsgPB::MsgItemCommonData >&
      itemdata() const;
  inline ::google::protobuf::RepeatedPtrField< ::MsgPB::MsgItemCommonData >*
      mutable_itemdata();

  // optional string dbkey = 10;
  inline bool has_dbkey() const;
  inline void clear_dbkey();
  static const int kDbkeyFieldNumber = 10;
  inline const ::std::string& dbkey() const;
  inline void set_dbkey(const ::std::string& value);
  inline void set_dbkey(const char* value);
  inline void set_dbkey(const char* value, size_t size);
  inline ::std::string* mutable_dbkey();
  inline ::std::string* release_dbkey();
  inline void set_allocated_dbkey(::std::string* dbkey);

  // optional uint32 idArea = 11;
  inline bool has_idarea() const;
  inline void clear_idarea();
  static const int kIdAreaFieldNumber = 11;
  inline ::google::protobuf::uint32 idarea() const;
  inline void set_idarea(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:MsgPB.MsgPlayerLoginSuccess_GS2MS)
 private:
  inline void set_has_msgtype();
  inline void clear_has_msgtype();
  inline void set_has_iggid();
  inline void clear_has_iggid();
  inline void set_has_lv();
  inline void clear_has_lv();
  inline void set_has_nickname();
  inline void clear_has_nickname();
  inline void set_has_gender();
  inline void clear_has_gender();
  inline void set_has_skincolor();
  inline void clear_has_skincolor();
  inline void set_has_hair();
  inline void clear_has_hair();
  inline void set_has_haircolor();
  inline void clear_has_haircolor();
  inline void set_has_dbkey();
  inline void clear_has_dbkey();
  inline void set_has_idarea();
  inline void clear_has_idarea();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 iggid_;
  int msgtype_;
  ::google::protobuf::int32 lv_;
  ::std::string* nickname_;
  ::google::protobuf::int32 gender_;
  ::google::protobuf::int32 skincolor_;
  ::google::protobuf::int32 hair_;
  ::google::protobuf::int32 haircolor_;
  ::google::protobuf::RepeatedPtrField< ::MsgPB::MsgItemCommonData > itemdata_;
  ::std::string* dbkey_;
  ::google::protobuf::uint32 idarea_;
  friend void  protobuf_AddDesc_MsgMatchServer_2eproto();
  friend void protobuf_AssignDesc_MsgMatchServer_2eproto();
  friend void protobuf_ShutdownFile_MsgMatchServer_2eproto();

  void InitAsDefaultInstance();
  static MsgPlayerLoginSuccess_GS2MS* default_instance_;
};
// -------------------------------------------------------------------

class MsgPlayerDisconnect_GS2MS : public ::google::protobuf::Message {
 public:
  MsgPlayerDisconnect_GS2MS();
  virtual ~MsgPlayerDisconnect_GS2MS();

  MsgPlayerDisconnect_GS2MS(const MsgPlayerDisconnect_GS2MS& from);

  inline MsgPlayerDisconnect_GS2MS& operator=(const MsgPlayerDisconnect_GS2MS& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgPlayerDisconnect_GS2MS& default_instance();

  void Swap(MsgPlayerDisconnect_GS2MS* other);

  // implements Message ----------------------------------------------

  MsgPlayerDisconnect_GS2MS* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgPlayerDisconnect_GS2MS& from);
  void MergeFrom(const MsgPlayerDisconnect_GS2MS& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_PLAYER_DISCONNECT_GS2MGS];
  inline bool has_msgtype() const;
  inline void clear_msgtype();
  static const int kMsgTypeFieldNumber = 1;
  inline ::MsgPB::EMsgType msgtype() const;
  inline void set_msgtype(::MsgPB::EMsgType value);

  // optional int64 iggId = 2;
  inline bool has_iggid() const;
  inline void clear_iggid();
  static const int kIggIdFieldNumber = 2;
  inline ::google::protobuf::int64 iggid() const;
  inline void set_iggid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:MsgPB.MsgPlayerDisconnect_GS2MS)
 private:
  inline void set_has_msgtype();
  inline void clear_has_msgtype();
  inline void set_has_iggid();
  inline void clear_has_iggid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 iggid_;
  int msgtype_;
  friend void  protobuf_AddDesc_MsgMatchServer_2eproto();
  friend void protobuf_AssignDesc_MsgMatchServer_2eproto();
  friend void protobuf_ShutdownFile_MsgMatchServer_2eproto();

  void InitAsDefaultInstance();
  static MsgPlayerDisconnect_GS2MS* default_instance_;
};
// -------------------------------------------------------------------

class MsgMatchSrvPlayerJoin_MapMgr2MatchSrv : public ::google::protobuf::Message {
 public:
  MsgMatchSrvPlayerJoin_MapMgr2MatchSrv();
  virtual ~MsgMatchSrvPlayerJoin_MapMgr2MatchSrv();

  MsgMatchSrvPlayerJoin_MapMgr2MatchSrv(const MsgMatchSrvPlayerJoin_MapMgr2MatchSrv& from);

  inline MsgMatchSrvPlayerJoin_MapMgr2MatchSrv& operator=(const MsgMatchSrvPlayerJoin_MapMgr2MatchSrv& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgMatchSrvPlayerJoin_MapMgr2MatchSrv& default_instance();

  void Swap(MsgMatchSrvPlayerJoin_MapMgr2MatchSrv* other);

  // implements Message ----------------------------------------------

  MsgMatchSrvPlayerJoin_MapMgr2MatchSrv* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgMatchSrvPlayerJoin_MapMgr2MatchSrv& from);
  void MergeFrom(const MsgMatchSrvPlayerJoin_MapMgr2MatchSrv& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_MATCH_SRV_PLAYER_JOIN];
  inline bool has_msgtype() const;
  inline void clear_msgtype();
  static const int kMsgTypeFieldNumber = 1;
  inline ::MsgPB::EMsgType msgtype() const;
  inline void set_msgtype(::MsgPB::EMsgType value);

  // optional int64 iggId = 2;
  inline bool has_iggid() const;
  inline void clear_iggid();
  static const int kIggIdFieldNumber = 2;
  inline ::google::protobuf::int64 iggid() const;
  inline void set_iggid(::google::protobuf::int64 value);

  // optional int32 lv = 3;
  inline bool has_lv() const;
  inline void clear_lv();
  static const int kLvFieldNumber = 3;
  inline ::google::protobuf::int32 lv() const;
  inline void set_lv(::google::protobuf::int32 value);

  // optional string nickname = 4;
  inline bool has_nickname() const;
  inline void clear_nickname();
  static const int kNicknameFieldNumber = 4;
  inline const ::std::string& nickname() const;
  inline void set_nickname(const ::std::string& value);
  inline void set_nickname(const char* value);
  inline void set_nickname(const char* value, size_t size);
  inline ::std::string* mutable_nickname();
  inline ::std::string* release_nickname();
  inline void set_allocated_nickname(::std::string* nickname);

  // optional int32 gender = 5;
  inline bool has_gender() const;
  inline void clear_gender();
  static const int kGenderFieldNumber = 5;
  inline ::google::protobuf::int32 gender() const;
  inline void set_gender(::google::protobuf::int32 value);

  // optional int32 skincolor = 6;
  inline bool has_skincolor() const;
  inline void clear_skincolor();
  static const int kSkincolorFieldNumber = 6;
  inline ::google::protobuf::int32 skincolor() const;
  inline void set_skincolor(::google::protobuf::int32 value);

  // optional int32 hair = 7;
  inline bool has_hair() const;
  inline void clear_hair();
  static const int kHairFieldNumber = 7;
  inline ::google::protobuf::int32 hair() const;
  inline void set_hair(::google::protobuf::int32 value);

  // optional int32 haircolor = 8;
  inline bool has_haircolor() const;
  inline void clear_haircolor();
  static const int kHaircolorFieldNumber = 8;
  inline ::google::protobuf::int32 haircolor() const;
  inline void set_haircolor(::google::protobuf::int32 value);

  // repeated .MsgPB.MsgItemCommonData itemdata = 9;
  inline int itemdata_size() const;
  inline void clear_itemdata();
  static const int kItemdataFieldNumber = 9;
  inline const ::MsgPB::MsgItemCommonData& itemdata(int index) const;
  inline ::MsgPB::MsgItemCommonData* mutable_itemdata(int index);
  inline ::MsgPB::MsgItemCommonData* add_itemdata();
  inline const ::google::protobuf::RepeatedPtrField< ::MsgPB::MsgItemCommonData >&
      itemdata() const;
  inline ::google::protobuf::RepeatedPtrField< ::MsgPB::MsgItemCommonData >*
      mutable_itemdata();

  // optional string dbkey = 10;
  inline bool has_dbkey() const;
  inline void clear_dbkey();
  static const int kDbkeyFieldNumber = 10;
  inline const ::std::string& dbkey() const;
  inline void set_dbkey(const ::std::string& value);
  inline void set_dbkey(const char* value);
  inline void set_dbkey(const char* value, size_t size);
  inline ::std::string* mutable_dbkey();
  inline ::std::string* release_dbkey();
  inline void set_allocated_dbkey(::std::string* dbkey);

  // optional uint32 idArea = 11;
  inline bool has_idarea() const;
  inline void clear_idarea();
  static const int kIdAreaFieldNumber = 11;
  inline ::google::protobuf::uint32 idarea() const;
  inline void set_idarea(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:MsgPB.MsgMatchSrvPlayerJoin_MapMgr2MatchSrv)
 private:
  inline void set_has_msgtype();
  inline void clear_has_msgtype();
  inline void set_has_iggid();
  inline void clear_has_iggid();
  inline void set_has_lv();
  inline void clear_has_lv();
  inline void set_has_nickname();
  inline void clear_has_nickname();
  inline void set_has_gender();
  inline void clear_has_gender();
  inline void set_has_skincolor();
  inline void clear_has_skincolor();
  inline void set_has_hair();
  inline void clear_has_hair();
  inline void set_has_haircolor();
  inline void clear_has_haircolor();
  inline void set_has_dbkey();
  inline void clear_has_dbkey();
  inline void set_has_idarea();
  inline void clear_has_idarea();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 iggid_;
  int msgtype_;
  ::google::protobuf::int32 lv_;
  ::std::string* nickname_;
  ::google::protobuf::int32 gender_;
  ::google::protobuf::int32 skincolor_;
  ::google::protobuf::int32 hair_;
  ::google::protobuf::int32 haircolor_;
  ::google::protobuf::RepeatedPtrField< ::MsgPB::MsgItemCommonData > itemdata_;
  ::std::string* dbkey_;
  ::google::protobuf::uint32 idarea_;
  friend void  protobuf_AddDesc_MsgMatchServer_2eproto();
  friend void protobuf_AssignDesc_MsgMatchServer_2eproto();
  friend void protobuf_ShutdownFile_MsgMatchServer_2eproto();

  void InitAsDefaultInstance();
  static MsgMatchSrvPlayerJoin_MapMgr2MatchSrv* default_instance_;
};
// -------------------------------------------------------------------

class MsgMatchSrvPlayerQuit_MapMgr2MatchSrv : public ::google::protobuf::Message {
 public:
  MsgMatchSrvPlayerQuit_MapMgr2MatchSrv();
  virtual ~MsgMatchSrvPlayerQuit_MapMgr2MatchSrv();

  MsgMatchSrvPlayerQuit_MapMgr2MatchSrv(const MsgMatchSrvPlayerQuit_MapMgr2MatchSrv& from);

  inline MsgMatchSrvPlayerQuit_MapMgr2MatchSrv& operator=(const MsgMatchSrvPlayerQuit_MapMgr2MatchSrv& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgMatchSrvPlayerQuit_MapMgr2MatchSrv& default_instance();

  void Swap(MsgMatchSrvPlayerQuit_MapMgr2MatchSrv* other);

  // implements Message ----------------------------------------------

  MsgMatchSrvPlayerQuit_MapMgr2MatchSrv* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgMatchSrvPlayerQuit_MapMgr2MatchSrv& from);
  void MergeFrom(const MsgMatchSrvPlayerQuit_MapMgr2MatchSrv& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_MATCH_SRV_PLAYER_QUIT];
  inline bool has_msgtype() const;
  inline void clear_msgtype();
  static const int kMsgTypeFieldNumber = 1;
  inline ::MsgPB::EMsgType msgtype() const;
  inline void set_msgtype(::MsgPB::EMsgType value);

  // optional int64 iggId = 2;
  inline bool has_iggid() const;
  inline void clear_iggid();
  static const int kIggIdFieldNumber = 2;
  inline ::google::protobuf::int64 iggid() const;
  inline void set_iggid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:MsgPB.MsgMatchSrvPlayerQuit_MapMgr2MatchSrv)
 private:
  inline void set_has_msgtype();
  inline void clear_has_msgtype();
  inline void set_has_iggid();
  inline void clear_has_iggid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 iggid_;
  int msgtype_;
  friend void  protobuf_AddDesc_MsgMatchServer_2eproto();
  friend void protobuf_AssignDesc_MsgMatchServer_2eproto();
  friend void protobuf_ShutdownFile_MsgMatchServer_2eproto();

  void InitAsDefaultInstance();
  static MsgMatchSrvPlayerQuit_MapMgr2MatchSrv* default_instance_;
};
// -------------------------------------------------------------------

class MsgPlayerNetworkDisconnect_GS2S : public ::google::protobuf::Message {
 public:
  MsgPlayerNetworkDisconnect_GS2S();
  virtual ~MsgPlayerNetworkDisconnect_GS2S();

  MsgPlayerNetworkDisconnect_GS2S(const MsgPlayerNetworkDisconnect_GS2S& from);

  inline MsgPlayerNetworkDisconnect_GS2S& operator=(const MsgPlayerNetworkDisconnect_GS2S& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgPlayerNetworkDisconnect_GS2S& default_instance();

  void Swap(MsgPlayerNetworkDisconnect_GS2S* other);

  // implements Message ----------------------------------------------

  MsgPlayerNetworkDisconnect_GS2S* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgPlayerNetworkDisconnect_GS2S& from);
  void MergeFrom(const MsgPlayerNetworkDisconnect_GS2S& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_PLAYER_NETWORK_DISCONNECT_GS2S];
  inline bool has_msgtype() const;
  inline void clear_msgtype();
  static const int kMsgTypeFieldNumber = 1;
  inline ::MsgPB::EMsgType msgtype() const;
  inline void set_msgtype(::MsgPB::EMsgType value);

  // optional int64 iggid = 2;
  inline bool has_iggid() const;
  inline void clear_iggid();
  static const int kIggidFieldNumber = 2;
  inline ::google::protobuf::int64 iggid() const;
  inline void set_iggid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:MsgPB.MsgPlayerNetworkDisconnect_GS2S)
 private:
  inline void set_has_msgtype();
  inline void clear_has_msgtype();
  inline void set_has_iggid();
  inline void clear_has_iggid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 iggid_;
  int msgtype_;
  friend void  protobuf_AddDesc_MsgMatchServer_2eproto();
  friend void protobuf_AssignDesc_MsgMatchServer_2eproto();
  friend void protobuf_ShutdownFile_MsgMatchServer_2eproto();

  void InitAsDefaultInstance();
  static MsgPlayerNetworkDisconnect_GS2S* default_instance_;
};
// -------------------------------------------------------------------

class MsgPlayerOfflineopSync : public ::google::protobuf::Message {
 public:
  MsgPlayerOfflineopSync();
  virtual ~MsgPlayerOfflineopSync();

  MsgPlayerOfflineopSync(const MsgPlayerOfflineopSync& from);

  inline MsgPlayerOfflineopSync& operator=(const MsgPlayerOfflineopSync& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgPlayerOfflineopSync& default_instance();

  void Swap(MsgPlayerOfflineopSync* other);

  // implements Message ----------------------------------------------

  MsgPlayerOfflineopSync* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgPlayerOfflineopSync& from);
  void MergeFrom(const MsgPlayerOfflineopSync& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef MsgPlayerOfflineopSync_OP_TYPE OP_TYPE;
  static const OP_TYPE NpcrepoHelp = MsgPlayerOfflineopSync_OP_TYPE_NpcrepoHelp;
  static const OP_TYPE TowerpvpPairData = MsgPlayerOfflineopSync_OP_TYPE_TowerpvpPairData;
  static inline bool OP_TYPE_IsValid(int value) {
    return MsgPlayerOfflineopSync_OP_TYPE_IsValid(value);
  }
  static const OP_TYPE OP_TYPE_MIN =
    MsgPlayerOfflineopSync_OP_TYPE_OP_TYPE_MIN;
  static const OP_TYPE OP_TYPE_MAX =
    MsgPlayerOfflineopSync_OP_TYPE_OP_TYPE_MAX;
  static const int OP_TYPE_ARRAYSIZE =
    MsgPlayerOfflineopSync_OP_TYPE_OP_TYPE_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  OP_TYPE_descriptor() {
    return MsgPlayerOfflineopSync_OP_TYPE_descriptor();
  }
  static inline const ::std::string& OP_TYPE_Name(OP_TYPE value) {
    return MsgPlayerOfflineopSync_OP_TYPE_Name(value);
  }
  static inline bool OP_TYPE_Parse(const ::std::string& name,
      OP_TYPE* value) {
    return MsgPlayerOfflineopSync_OP_TYPE_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional .MsgPB.EMsgType msgType = 1 [default = MSG_PLAYER_OFFLINEOP_SYNC];
  inline bool has_msgtype() const;
  inline void clear_msgtype();
  static const int kMsgTypeFieldNumber = 1;
  inline ::MsgPB::EMsgType msgtype() const;
  inline void set_msgtype(::MsgPB::EMsgType value);

  // optional int64 iggid = 2;
  inline bool has_iggid() const;
  inline void clear_iggid();
  static const int kIggidFieldNumber = 2;
  inline ::google::protobuf::int64 iggid() const;
  inline void set_iggid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:MsgPB.MsgPlayerOfflineopSync)
 private:
  inline void set_has_msgtype();
  inline void clear_has_msgtype();
  inline void set_has_iggid();
  inline void clear_has_iggid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 iggid_;
  int msgtype_;
  friend void  protobuf_AddDesc_MsgMatchServer_2eproto();
  friend void protobuf_AssignDesc_MsgMatchServer_2eproto();
  friend void protobuf_ShutdownFile_MsgMatchServer_2eproto();

  void InitAsDefaultInstance();
  static MsgPlayerOfflineopSync* default_instance_;
};
// -------------------------------------------------------------------

class MsgPlayerOfflineOpGet_MS2MAS : public ::google::protobuf::Message {
 public:
  MsgPlayerOfflineOpGet_MS2MAS();
  virtual ~MsgPlayerOfflineOpGet_MS2MAS();

  MsgPlayerOfflineOpGet_MS2MAS(const MsgPlayerOfflineOpGet_MS2MAS& from);

  inline MsgPlayerOfflineOpGet_MS2MAS& operator=(const MsgPlayerOfflineOpGet_MS2MAS& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgPlayerOfflineOpGet_MS2MAS& default_instance();

  void Swap(MsgPlayerOfflineOpGet_MS2MAS* other);

  // implements Message ----------------------------------------------

  MsgPlayerOfflineOpGet_MS2MAS* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgPlayerOfflineOpGet_MS2MAS& from);
  void MergeFrom(const MsgPlayerOfflineOpGet_MS2MAS& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_PLAYER_OFFLINEOP_GET_MS2MAS];
  inline bool has_msgtype() const;
  inline void clear_msgtype();
  static const int kMsgTypeFieldNumber = 1;
  inline ::MsgPB::EMsgType msgtype() const;
  inline void set_msgtype(::MsgPB::EMsgType value);

  // optional int64 iggid = 2;
  inline bool has_iggid() const;
  inline void clear_iggid();
  static const int kIggidFieldNumber = 2;
  inline ::google::protobuf::int64 iggid() const;
  inline void set_iggid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:MsgPB.MsgPlayerOfflineOpGet_MS2MAS)
 private:
  inline void set_has_msgtype();
  inline void clear_has_msgtype();
  inline void set_has_iggid();
  inline void clear_has_iggid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 iggid_;
  int msgtype_;
  friend void  protobuf_AddDesc_MsgMatchServer_2eproto();
  friend void protobuf_AssignDesc_MsgMatchServer_2eproto();
  friend void protobuf_ShutdownFile_MsgMatchServer_2eproto();

  void InitAsDefaultInstance();
  static MsgPlayerOfflineOpGet_MS2MAS* default_instance_;
};
// ===================================================================


// ===================================================================

// MsgPlayerLoginSuccess_GS2MS

// optional .MsgPB.EMsgType msgType = 1 [default = _MSG_PLAYER_LOGIN_SUCCESS_GS2MGS];
inline bool MsgPlayerLoginSuccess_GS2MS::has_msgtype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgPlayerLoginSuccess_GS2MS::set_has_msgtype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgPlayerLoginSuccess_GS2MS::clear_has_msgtype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgPlayerLoginSuccess_GS2MS::clear_msgtype() {
  msgtype_ = 1150;
  clear_has_msgtype();
}
inline ::MsgPB::EMsgType MsgPlayerLoginSuccess_GS2MS::msgtype() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgPlayerLoginSuccess_GS2MS.msgType)
  return static_cast< ::MsgPB::EMsgType >(msgtype_);
}
inline void MsgPlayerLoginSuccess_GS2MS::set_msgtype(::MsgPB::EMsgType value) {
  assert(::MsgPB::EMsgType_IsValid(value));
  set_has_msgtype();
  msgtype_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgPlayerLoginSuccess_GS2MS.msgType)
}

// optional int64 iggId = 2;
inline bool MsgPlayerLoginSuccess_GS2MS::has_iggid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MsgPlayerLoginSuccess_GS2MS::set_has_iggid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MsgPlayerLoginSuccess_GS2MS::clear_has_iggid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MsgPlayerLoginSuccess_GS2MS::clear_iggid() {
  iggid_ = GOOGLE_LONGLONG(0);
  clear_has_iggid();
}
inline ::google::protobuf::int64 MsgPlayerLoginSuccess_GS2MS::iggid() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgPlayerLoginSuccess_GS2MS.iggId)
  return iggid_;
}
inline void MsgPlayerLoginSuccess_GS2MS::set_iggid(::google::protobuf::int64 value) {
  set_has_iggid();
  iggid_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgPlayerLoginSuccess_GS2MS.iggId)
}

// optional int32 lv = 3;
inline bool MsgPlayerLoginSuccess_GS2MS::has_lv() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MsgPlayerLoginSuccess_GS2MS::set_has_lv() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MsgPlayerLoginSuccess_GS2MS::clear_has_lv() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MsgPlayerLoginSuccess_GS2MS::clear_lv() {
  lv_ = 0;
  clear_has_lv();
}
inline ::google::protobuf::int32 MsgPlayerLoginSuccess_GS2MS::lv() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgPlayerLoginSuccess_GS2MS.lv)
  return lv_;
}
inline void MsgPlayerLoginSuccess_GS2MS::set_lv(::google::protobuf::int32 value) {
  set_has_lv();
  lv_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgPlayerLoginSuccess_GS2MS.lv)
}

// optional string nickname = 4;
inline bool MsgPlayerLoginSuccess_GS2MS::has_nickname() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MsgPlayerLoginSuccess_GS2MS::set_has_nickname() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MsgPlayerLoginSuccess_GS2MS::clear_has_nickname() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MsgPlayerLoginSuccess_GS2MS::clear_nickname() {
  if (nickname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    nickname_->clear();
  }
  clear_has_nickname();
}
inline const ::std::string& MsgPlayerLoginSuccess_GS2MS::nickname() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgPlayerLoginSuccess_GS2MS.nickname)
  return *nickname_;
}
inline void MsgPlayerLoginSuccess_GS2MS::set_nickname(const ::std::string& value) {
  set_has_nickname();
  if (nickname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    nickname_ = new ::std::string;
  }
  nickname_->assign(value);
  // @@protoc_insertion_point(field_set:MsgPB.MsgPlayerLoginSuccess_GS2MS.nickname)
}
inline void MsgPlayerLoginSuccess_GS2MS::set_nickname(const char* value) {
  set_has_nickname();
  if (nickname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    nickname_ = new ::std::string;
  }
  nickname_->assign(value);
  // @@protoc_insertion_point(field_set_char:MsgPB.MsgPlayerLoginSuccess_GS2MS.nickname)
}
inline void MsgPlayerLoginSuccess_GS2MS::set_nickname(const char* value, size_t size) {
  set_has_nickname();
  if (nickname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    nickname_ = new ::std::string;
  }
  nickname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:MsgPB.MsgPlayerLoginSuccess_GS2MS.nickname)
}
inline ::std::string* MsgPlayerLoginSuccess_GS2MS::mutable_nickname() {
  set_has_nickname();
  if (nickname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    nickname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:MsgPB.MsgPlayerLoginSuccess_GS2MS.nickname)
  return nickname_;
}
inline ::std::string* MsgPlayerLoginSuccess_GS2MS::release_nickname() {
  clear_has_nickname();
  if (nickname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = nickname_;
    nickname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void MsgPlayerLoginSuccess_GS2MS::set_allocated_nickname(::std::string* nickname) {
  if (nickname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete nickname_;
  }
  if (nickname) {
    set_has_nickname();
    nickname_ = nickname;
  } else {
    clear_has_nickname();
    nickname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:MsgPB.MsgPlayerLoginSuccess_GS2MS.nickname)
}

// optional int32 gender = 5;
inline bool MsgPlayerLoginSuccess_GS2MS::has_gender() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void MsgPlayerLoginSuccess_GS2MS::set_has_gender() {
  _has_bits_[0] |= 0x00000010u;
}
inline void MsgPlayerLoginSuccess_GS2MS::clear_has_gender() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void MsgPlayerLoginSuccess_GS2MS::clear_gender() {
  gender_ = 0;
  clear_has_gender();
}
inline ::google::protobuf::int32 MsgPlayerLoginSuccess_GS2MS::gender() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgPlayerLoginSuccess_GS2MS.gender)
  return gender_;
}
inline void MsgPlayerLoginSuccess_GS2MS::set_gender(::google::protobuf::int32 value) {
  set_has_gender();
  gender_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgPlayerLoginSuccess_GS2MS.gender)
}

// optional int32 skincolor = 6;
inline bool MsgPlayerLoginSuccess_GS2MS::has_skincolor() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void MsgPlayerLoginSuccess_GS2MS::set_has_skincolor() {
  _has_bits_[0] |= 0x00000020u;
}
inline void MsgPlayerLoginSuccess_GS2MS::clear_has_skincolor() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void MsgPlayerLoginSuccess_GS2MS::clear_skincolor() {
  skincolor_ = 0;
  clear_has_skincolor();
}
inline ::google::protobuf::int32 MsgPlayerLoginSuccess_GS2MS::skincolor() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgPlayerLoginSuccess_GS2MS.skincolor)
  return skincolor_;
}
inline void MsgPlayerLoginSuccess_GS2MS::set_skincolor(::google::protobuf::int32 value) {
  set_has_skincolor();
  skincolor_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgPlayerLoginSuccess_GS2MS.skincolor)
}

// optional int32 hair = 7;
inline bool MsgPlayerLoginSuccess_GS2MS::has_hair() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void MsgPlayerLoginSuccess_GS2MS::set_has_hair() {
  _has_bits_[0] |= 0x00000040u;
}
inline void MsgPlayerLoginSuccess_GS2MS::clear_has_hair() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void MsgPlayerLoginSuccess_GS2MS::clear_hair() {
  hair_ = 0;
  clear_has_hair();
}
inline ::google::protobuf::int32 MsgPlayerLoginSuccess_GS2MS::hair() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgPlayerLoginSuccess_GS2MS.hair)
  return hair_;
}
inline void MsgPlayerLoginSuccess_GS2MS::set_hair(::google::protobuf::int32 value) {
  set_has_hair();
  hair_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgPlayerLoginSuccess_GS2MS.hair)
}

// optional int32 haircolor = 8;
inline bool MsgPlayerLoginSuccess_GS2MS::has_haircolor() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void MsgPlayerLoginSuccess_GS2MS::set_has_haircolor() {
  _has_bits_[0] |= 0x00000080u;
}
inline void MsgPlayerLoginSuccess_GS2MS::clear_has_haircolor() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void MsgPlayerLoginSuccess_GS2MS::clear_haircolor() {
  haircolor_ = 0;
  clear_has_haircolor();
}
inline ::google::protobuf::int32 MsgPlayerLoginSuccess_GS2MS::haircolor() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgPlayerLoginSuccess_GS2MS.haircolor)
  return haircolor_;
}
inline void MsgPlayerLoginSuccess_GS2MS::set_haircolor(::google::protobuf::int32 value) {
  set_has_haircolor();
  haircolor_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgPlayerLoginSuccess_GS2MS.haircolor)
}

// repeated .MsgPB.MsgItemCommonData itemdata = 9;
inline int MsgPlayerLoginSuccess_GS2MS::itemdata_size() const {
  return itemdata_.size();
}
inline void MsgPlayerLoginSuccess_GS2MS::clear_itemdata() {
  itemdata_.Clear();
}
inline const ::MsgPB::MsgItemCommonData& MsgPlayerLoginSuccess_GS2MS::itemdata(int index) const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgPlayerLoginSuccess_GS2MS.itemdata)
  return itemdata_.Get(index);
}
inline ::MsgPB::MsgItemCommonData* MsgPlayerLoginSuccess_GS2MS::mutable_itemdata(int index) {
  // @@protoc_insertion_point(field_mutable:MsgPB.MsgPlayerLoginSuccess_GS2MS.itemdata)
  return itemdata_.Mutable(index);
}
inline ::MsgPB::MsgItemCommonData* MsgPlayerLoginSuccess_GS2MS::add_itemdata() {
  // @@protoc_insertion_point(field_add:MsgPB.MsgPlayerLoginSuccess_GS2MS.itemdata)
  return itemdata_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::MsgPB::MsgItemCommonData >&
MsgPlayerLoginSuccess_GS2MS::itemdata() const {
  // @@protoc_insertion_point(field_list:MsgPB.MsgPlayerLoginSuccess_GS2MS.itemdata)
  return itemdata_;
}
inline ::google::protobuf::RepeatedPtrField< ::MsgPB::MsgItemCommonData >*
MsgPlayerLoginSuccess_GS2MS::mutable_itemdata() {
  // @@protoc_insertion_point(field_mutable_list:MsgPB.MsgPlayerLoginSuccess_GS2MS.itemdata)
  return &itemdata_;
}

// optional string dbkey = 10;
inline bool MsgPlayerLoginSuccess_GS2MS::has_dbkey() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void MsgPlayerLoginSuccess_GS2MS::set_has_dbkey() {
  _has_bits_[0] |= 0x00000200u;
}
inline void MsgPlayerLoginSuccess_GS2MS::clear_has_dbkey() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void MsgPlayerLoginSuccess_GS2MS::clear_dbkey() {
  if (dbkey_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    dbkey_->clear();
  }
  clear_has_dbkey();
}
inline const ::std::string& MsgPlayerLoginSuccess_GS2MS::dbkey() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgPlayerLoginSuccess_GS2MS.dbkey)
  return *dbkey_;
}
inline void MsgPlayerLoginSuccess_GS2MS::set_dbkey(const ::std::string& value) {
  set_has_dbkey();
  if (dbkey_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    dbkey_ = new ::std::string;
  }
  dbkey_->assign(value);
  // @@protoc_insertion_point(field_set:MsgPB.MsgPlayerLoginSuccess_GS2MS.dbkey)
}
inline void MsgPlayerLoginSuccess_GS2MS::set_dbkey(const char* value) {
  set_has_dbkey();
  if (dbkey_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    dbkey_ = new ::std::string;
  }
  dbkey_->assign(value);
  // @@protoc_insertion_point(field_set_char:MsgPB.MsgPlayerLoginSuccess_GS2MS.dbkey)
}
inline void MsgPlayerLoginSuccess_GS2MS::set_dbkey(const char* value, size_t size) {
  set_has_dbkey();
  if (dbkey_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    dbkey_ = new ::std::string;
  }
  dbkey_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:MsgPB.MsgPlayerLoginSuccess_GS2MS.dbkey)
}
inline ::std::string* MsgPlayerLoginSuccess_GS2MS::mutable_dbkey() {
  set_has_dbkey();
  if (dbkey_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    dbkey_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:MsgPB.MsgPlayerLoginSuccess_GS2MS.dbkey)
  return dbkey_;
}
inline ::std::string* MsgPlayerLoginSuccess_GS2MS::release_dbkey() {
  clear_has_dbkey();
  if (dbkey_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = dbkey_;
    dbkey_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void MsgPlayerLoginSuccess_GS2MS::set_allocated_dbkey(::std::string* dbkey) {
  if (dbkey_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete dbkey_;
  }
  if (dbkey) {
    set_has_dbkey();
    dbkey_ = dbkey;
  } else {
    clear_has_dbkey();
    dbkey_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:MsgPB.MsgPlayerLoginSuccess_GS2MS.dbkey)
}

// optional uint32 idArea = 11;
inline bool MsgPlayerLoginSuccess_GS2MS::has_idarea() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void MsgPlayerLoginSuccess_GS2MS::set_has_idarea() {
  _has_bits_[0] |= 0x00000400u;
}
inline void MsgPlayerLoginSuccess_GS2MS::clear_has_idarea() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void MsgPlayerLoginSuccess_GS2MS::clear_idarea() {
  idarea_ = 0u;
  clear_has_idarea();
}
inline ::google::protobuf::uint32 MsgPlayerLoginSuccess_GS2MS::idarea() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgPlayerLoginSuccess_GS2MS.idArea)
  return idarea_;
}
inline void MsgPlayerLoginSuccess_GS2MS::set_idarea(::google::protobuf::uint32 value) {
  set_has_idarea();
  idarea_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgPlayerLoginSuccess_GS2MS.idArea)
}

// -------------------------------------------------------------------

// MsgPlayerDisconnect_GS2MS

// optional .MsgPB.EMsgType msgType = 1 [default = _MSG_PLAYER_DISCONNECT_GS2MGS];
inline bool MsgPlayerDisconnect_GS2MS::has_msgtype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgPlayerDisconnect_GS2MS::set_has_msgtype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgPlayerDisconnect_GS2MS::clear_has_msgtype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgPlayerDisconnect_GS2MS::clear_msgtype() {
  msgtype_ = 1151;
  clear_has_msgtype();
}
inline ::MsgPB::EMsgType MsgPlayerDisconnect_GS2MS::msgtype() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgPlayerDisconnect_GS2MS.msgType)
  return static_cast< ::MsgPB::EMsgType >(msgtype_);
}
inline void MsgPlayerDisconnect_GS2MS::set_msgtype(::MsgPB::EMsgType value) {
  assert(::MsgPB::EMsgType_IsValid(value));
  set_has_msgtype();
  msgtype_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgPlayerDisconnect_GS2MS.msgType)
}

// optional int64 iggId = 2;
inline bool MsgPlayerDisconnect_GS2MS::has_iggid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MsgPlayerDisconnect_GS2MS::set_has_iggid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MsgPlayerDisconnect_GS2MS::clear_has_iggid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MsgPlayerDisconnect_GS2MS::clear_iggid() {
  iggid_ = GOOGLE_LONGLONG(0);
  clear_has_iggid();
}
inline ::google::protobuf::int64 MsgPlayerDisconnect_GS2MS::iggid() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgPlayerDisconnect_GS2MS.iggId)
  return iggid_;
}
inline void MsgPlayerDisconnect_GS2MS::set_iggid(::google::protobuf::int64 value) {
  set_has_iggid();
  iggid_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgPlayerDisconnect_GS2MS.iggId)
}

// -------------------------------------------------------------------

// MsgMatchSrvPlayerJoin_MapMgr2MatchSrv

// optional .MsgPB.EMsgType msgType = 1 [default = _MSG_MATCH_SRV_PLAYER_JOIN];
inline bool MsgMatchSrvPlayerJoin_MapMgr2MatchSrv::has_msgtype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgMatchSrvPlayerJoin_MapMgr2MatchSrv::set_has_msgtype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgMatchSrvPlayerJoin_MapMgr2MatchSrv::clear_has_msgtype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgMatchSrvPlayerJoin_MapMgr2MatchSrv::clear_msgtype() {
  msgtype_ = 1152;
  clear_has_msgtype();
}
inline ::MsgPB::EMsgType MsgMatchSrvPlayerJoin_MapMgr2MatchSrv::msgtype() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgMatchSrvPlayerJoin_MapMgr2MatchSrv.msgType)
  return static_cast< ::MsgPB::EMsgType >(msgtype_);
}
inline void MsgMatchSrvPlayerJoin_MapMgr2MatchSrv::set_msgtype(::MsgPB::EMsgType value) {
  assert(::MsgPB::EMsgType_IsValid(value));
  set_has_msgtype();
  msgtype_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgMatchSrvPlayerJoin_MapMgr2MatchSrv.msgType)
}

// optional int64 iggId = 2;
inline bool MsgMatchSrvPlayerJoin_MapMgr2MatchSrv::has_iggid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MsgMatchSrvPlayerJoin_MapMgr2MatchSrv::set_has_iggid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MsgMatchSrvPlayerJoin_MapMgr2MatchSrv::clear_has_iggid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MsgMatchSrvPlayerJoin_MapMgr2MatchSrv::clear_iggid() {
  iggid_ = GOOGLE_LONGLONG(0);
  clear_has_iggid();
}
inline ::google::protobuf::int64 MsgMatchSrvPlayerJoin_MapMgr2MatchSrv::iggid() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgMatchSrvPlayerJoin_MapMgr2MatchSrv.iggId)
  return iggid_;
}
inline void MsgMatchSrvPlayerJoin_MapMgr2MatchSrv::set_iggid(::google::protobuf::int64 value) {
  set_has_iggid();
  iggid_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgMatchSrvPlayerJoin_MapMgr2MatchSrv.iggId)
}

// optional int32 lv = 3;
inline bool MsgMatchSrvPlayerJoin_MapMgr2MatchSrv::has_lv() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MsgMatchSrvPlayerJoin_MapMgr2MatchSrv::set_has_lv() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MsgMatchSrvPlayerJoin_MapMgr2MatchSrv::clear_has_lv() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MsgMatchSrvPlayerJoin_MapMgr2MatchSrv::clear_lv() {
  lv_ = 0;
  clear_has_lv();
}
inline ::google::protobuf::int32 MsgMatchSrvPlayerJoin_MapMgr2MatchSrv::lv() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgMatchSrvPlayerJoin_MapMgr2MatchSrv.lv)
  return lv_;
}
inline void MsgMatchSrvPlayerJoin_MapMgr2MatchSrv::set_lv(::google::protobuf::int32 value) {
  set_has_lv();
  lv_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgMatchSrvPlayerJoin_MapMgr2MatchSrv.lv)
}

// optional string nickname = 4;
inline bool MsgMatchSrvPlayerJoin_MapMgr2MatchSrv::has_nickname() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MsgMatchSrvPlayerJoin_MapMgr2MatchSrv::set_has_nickname() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MsgMatchSrvPlayerJoin_MapMgr2MatchSrv::clear_has_nickname() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MsgMatchSrvPlayerJoin_MapMgr2MatchSrv::clear_nickname() {
  if (nickname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    nickname_->clear();
  }
  clear_has_nickname();
}
inline const ::std::string& MsgMatchSrvPlayerJoin_MapMgr2MatchSrv::nickname() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgMatchSrvPlayerJoin_MapMgr2MatchSrv.nickname)
  return *nickname_;
}
inline void MsgMatchSrvPlayerJoin_MapMgr2MatchSrv::set_nickname(const ::std::string& value) {
  set_has_nickname();
  if (nickname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    nickname_ = new ::std::string;
  }
  nickname_->assign(value);
  // @@protoc_insertion_point(field_set:MsgPB.MsgMatchSrvPlayerJoin_MapMgr2MatchSrv.nickname)
}
inline void MsgMatchSrvPlayerJoin_MapMgr2MatchSrv::set_nickname(const char* value) {
  set_has_nickname();
  if (nickname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    nickname_ = new ::std::string;
  }
  nickname_->assign(value);
  // @@protoc_insertion_point(field_set_char:MsgPB.MsgMatchSrvPlayerJoin_MapMgr2MatchSrv.nickname)
}
inline void MsgMatchSrvPlayerJoin_MapMgr2MatchSrv::set_nickname(const char* value, size_t size) {
  set_has_nickname();
  if (nickname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    nickname_ = new ::std::string;
  }
  nickname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:MsgPB.MsgMatchSrvPlayerJoin_MapMgr2MatchSrv.nickname)
}
inline ::std::string* MsgMatchSrvPlayerJoin_MapMgr2MatchSrv::mutable_nickname() {
  set_has_nickname();
  if (nickname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    nickname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:MsgPB.MsgMatchSrvPlayerJoin_MapMgr2MatchSrv.nickname)
  return nickname_;
}
inline ::std::string* MsgMatchSrvPlayerJoin_MapMgr2MatchSrv::release_nickname() {
  clear_has_nickname();
  if (nickname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = nickname_;
    nickname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void MsgMatchSrvPlayerJoin_MapMgr2MatchSrv::set_allocated_nickname(::std::string* nickname) {
  if (nickname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete nickname_;
  }
  if (nickname) {
    set_has_nickname();
    nickname_ = nickname;
  } else {
    clear_has_nickname();
    nickname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:MsgPB.MsgMatchSrvPlayerJoin_MapMgr2MatchSrv.nickname)
}

// optional int32 gender = 5;
inline bool MsgMatchSrvPlayerJoin_MapMgr2MatchSrv::has_gender() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void MsgMatchSrvPlayerJoin_MapMgr2MatchSrv::set_has_gender() {
  _has_bits_[0] |= 0x00000010u;
}
inline void MsgMatchSrvPlayerJoin_MapMgr2MatchSrv::clear_has_gender() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void MsgMatchSrvPlayerJoin_MapMgr2MatchSrv::clear_gender() {
  gender_ = 0;
  clear_has_gender();
}
inline ::google::protobuf::int32 MsgMatchSrvPlayerJoin_MapMgr2MatchSrv::gender() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgMatchSrvPlayerJoin_MapMgr2MatchSrv.gender)
  return gender_;
}
inline void MsgMatchSrvPlayerJoin_MapMgr2MatchSrv::set_gender(::google::protobuf::int32 value) {
  set_has_gender();
  gender_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgMatchSrvPlayerJoin_MapMgr2MatchSrv.gender)
}

// optional int32 skincolor = 6;
inline bool MsgMatchSrvPlayerJoin_MapMgr2MatchSrv::has_skincolor() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void MsgMatchSrvPlayerJoin_MapMgr2MatchSrv::set_has_skincolor() {
  _has_bits_[0] |= 0x00000020u;
}
inline void MsgMatchSrvPlayerJoin_MapMgr2MatchSrv::clear_has_skincolor() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void MsgMatchSrvPlayerJoin_MapMgr2MatchSrv::clear_skincolor() {
  skincolor_ = 0;
  clear_has_skincolor();
}
inline ::google::protobuf::int32 MsgMatchSrvPlayerJoin_MapMgr2MatchSrv::skincolor() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgMatchSrvPlayerJoin_MapMgr2MatchSrv.skincolor)
  return skincolor_;
}
inline void MsgMatchSrvPlayerJoin_MapMgr2MatchSrv::set_skincolor(::google::protobuf::int32 value) {
  set_has_skincolor();
  skincolor_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgMatchSrvPlayerJoin_MapMgr2MatchSrv.skincolor)
}

// optional int32 hair = 7;
inline bool MsgMatchSrvPlayerJoin_MapMgr2MatchSrv::has_hair() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void MsgMatchSrvPlayerJoin_MapMgr2MatchSrv::set_has_hair() {
  _has_bits_[0] |= 0x00000040u;
}
inline void MsgMatchSrvPlayerJoin_MapMgr2MatchSrv::clear_has_hair() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void MsgMatchSrvPlayerJoin_MapMgr2MatchSrv::clear_hair() {
  hair_ = 0;
  clear_has_hair();
}
inline ::google::protobuf::int32 MsgMatchSrvPlayerJoin_MapMgr2MatchSrv::hair() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgMatchSrvPlayerJoin_MapMgr2MatchSrv.hair)
  return hair_;
}
inline void MsgMatchSrvPlayerJoin_MapMgr2MatchSrv::set_hair(::google::protobuf::int32 value) {
  set_has_hair();
  hair_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgMatchSrvPlayerJoin_MapMgr2MatchSrv.hair)
}

// optional int32 haircolor = 8;
inline bool MsgMatchSrvPlayerJoin_MapMgr2MatchSrv::has_haircolor() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void MsgMatchSrvPlayerJoin_MapMgr2MatchSrv::set_has_haircolor() {
  _has_bits_[0] |= 0x00000080u;
}
inline void MsgMatchSrvPlayerJoin_MapMgr2MatchSrv::clear_has_haircolor() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void MsgMatchSrvPlayerJoin_MapMgr2MatchSrv::clear_haircolor() {
  haircolor_ = 0;
  clear_has_haircolor();
}
inline ::google::protobuf::int32 MsgMatchSrvPlayerJoin_MapMgr2MatchSrv::haircolor() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgMatchSrvPlayerJoin_MapMgr2MatchSrv.haircolor)
  return haircolor_;
}
inline void MsgMatchSrvPlayerJoin_MapMgr2MatchSrv::set_haircolor(::google::protobuf::int32 value) {
  set_has_haircolor();
  haircolor_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgMatchSrvPlayerJoin_MapMgr2MatchSrv.haircolor)
}

// repeated .MsgPB.MsgItemCommonData itemdata = 9;
inline int MsgMatchSrvPlayerJoin_MapMgr2MatchSrv::itemdata_size() const {
  return itemdata_.size();
}
inline void MsgMatchSrvPlayerJoin_MapMgr2MatchSrv::clear_itemdata() {
  itemdata_.Clear();
}
inline const ::MsgPB::MsgItemCommonData& MsgMatchSrvPlayerJoin_MapMgr2MatchSrv::itemdata(int index) const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgMatchSrvPlayerJoin_MapMgr2MatchSrv.itemdata)
  return itemdata_.Get(index);
}
inline ::MsgPB::MsgItemCommonData* MsgMatchSrvPlayerJoin_MapMgr2MatchSrv::mutable_itemdata(int index) {
  // @@protoc_insertion_point(field_mutable:MsgPB.MsgMatchSrvPlayerJoin_MapMgr2MatchSrv.itemdata)
  return itemdata_.Mutable(index);
}
inline ::MsgPB::MsgItemCommonData* MsgMatchSrvPlayerJoin_MapMgr2MatchSrv::add_itemdata() {
  // @@protoc_insertion_point(field_add:MsgPB.MsgMatchSrvPlayerJoin_MapMgr2MatchSrv.itemdata)
  return itemdata_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::MsgPB::MsgItemCommonData >&
MsgMatchSrvPlayerJoin_MapMgr2MatchSrv::itemdata() const {
  // @@protoc_insertion_point(field_list:MsgPB.MsgMatchSrvPlayerJoin_MapMgr2MatchSrv.itemdata)
  return itemdata_;
}
inline ::google::protobuf::RepeatedPtrField< ::MsgPB::MsgItemCommonData >*
MsgMatchSrvPlayerJoin_MapMgr2MatchSrv::mutable_itemdata() {
  // @@protoc_insertion_point(field_mutable_list:MsgPB.MsgMatchSrvPlayerJoin_MapMgr2MatchSrv.itemdata)
  return &itemdata_;
}

// optional string dbkey = 10;
inline bool MsgMatchSrvPlayerJoin_MapMgr2MatchSrv::has_dbkey() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void MsgMatchSrvPlayerJoin_MapMgr2MatchSrv::set_has_dbkey() {
  _has_bits_[0] |= 0x00000200u;
}
inline void MsgMatchSrvPlayerJoin_MapMgr2MatchSrv::clear_has_dbkey() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void MsgMatchSrvPlayerJoin_MapMgr2MatchSrv::clear_dbkey() {
  if (dbkey_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    dbkey_->clear();
  }
  clear_has_dbkey();
}
inline const ::std::string& MsgMatchSrvPlayerJoin_MapMgr2MatchSrv::dbkey() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgMatchSrvPlayerJoin_MapMgr2MatchSrv.dbkey)
  return *dbkey_;
}
inline void MsgMatchSrvPlayerJoin_MapMgr2MatchSrv::set_dbkey(const ::std::string& value) {
  set_has_dbkey();
  if (dbkey_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    dbkey_ = new ::std::string;
  }
  dbkey_->assign(value);
  // @@protoc_insertion_point(field_set:MsgPB.MsgMatchSrvPlayerJoin_MapMgr2MatchSrv.dbkey)
}
inline void MsgMatchSrvPlayerJoin_MapMgr2MatchSrv::set_dbkey(const char* value) {
  set_has_dbkey();
  if (dbkey_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    dbkey_ = new ::std::string;
  }
  dbkey_->assign(value);
  // @@protoc_insertion_point(field_set_char:MsgPB.MsgMatchSrvPlayerJoin_MapMgr2MatchSrv.dbkey)
}
inline void MsgMatchSrvPlayerJoin_MapMgr2MatchSrv::set_dbkey(const char* value, size_t size) {
  set_has_dbkey();
  if (dbkey_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    dbkey_ = new ::std::string;
  }
  dbkey_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:MsgPB.MsgMatchSrvPlayerJoin_MapMgr2MatchSrv.dbkey)
}
inline ::std::string* MsgMatchSrvPlayerJoin_MapMgr2MatchSrv::mutable_dbkey() {
  set_has_dbkey();
  if (dbkey_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    dbkey_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:MsgPB.MsgMatchSrvPlayerJoin_MapMgr2MatchSrv.dbkey)
  return dbkey_;
}
inline ::std::string* MsgMatchSrvPlayerJoin_MapMgr2MatchSrv::release_dbkey() {
  clear_has_dbkey();
  if (dbkey_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = dbkey_;
    dbkey_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void MsgMatchSrvPlayerJoin_MapMgr2MatchSrv::set_allocated_dbkey(::std::string* dbkey) {
  if (dbkey_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete dbkey_;
  }
  if (dbkey) {
    set_has_dbkey();
    dbkey_ = dbkey;
  } else {
    clear_has_dbkey();
    dbkey_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:MsgPB.MsgMatchSrvPlayerJoin_MapMgr2MatchSrv.dbkey)
}

// optional uint32 idArea = 11;
inline bool MsgMatchSrvPlayerJoin_MapMgr2MatchSrv::has_idarea() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void MsgMatchSrvPlayerJoin_MapMgr2MatchSrv::set_has_idarea() {
  _has_bits_[0] |= 0x00000400u;
}
inline void MsgMatchSrvPlayerJoin_MapMgr2MatchSrv::clear_has_idarea() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void MsgMatchSrvPlayerJoin_MapMgr2MatchSrv::clear_idarea() {
  idarea_ = 0u;
  clear_has_idarea();
}
inline ::google::protobuf::uint32 MsgMatchSrvPlayerJoin_MapMgr2MatchSrv::idarea() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgMatchSrvPlayerJoin_MapMgr2MatchSrv.idArea)
  return idarea_;
}
inline void MsgMatchSrvPlayerJoin_MapMgr2MatchSrv::set_idarea(::google::protobuf::uint32 value) {
  set_has_idarea();
  idarea_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgMatchSrvPlayerJoin_MapMgr2MatchSrv.idArea)
}

// -------------------------------------------------------------------

// MsgMatchSrvPlayerQuit_MapMgr2MatchSrv

// optional .MsgPB.EMsgType msgType = 1 [default = _MSG_MATCH_SRV_PLAYER_QUIT];
inline bool MsgMatchSrvPlayerQuit_MapMgr2MatchSrv::has_msgtype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgMatchSrvPlayerQuit_MapMgr2MatchSrv::set_has_msgtype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgMatchSrvPlayerQuit_MapMgr2MatchSrv::clear_has_msgtype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgMatchSrvPlayerQuit_MapMgr2MatchSrv::clear_msgtype() {
  msgtype_ = 1153;
  clear_has_msgtype();
}
inline ::MsgPB::EMsgType MsgMatchSrvPlayerQuit_MapMgr2MatchSrv::msgtype() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgMatchSrvPlayerQuit_MapMgr2MatchSrv.msgType)
  return static_cast< ::MsgPB::EMsgType >(msgtype_);
}
inline void MsgMatchSrvPlayerQuit_MapMgr2MatchSrv::set_msgtype(::MsgPB::EMsgType value) {
  assert(::MsgPB::EMsgType_IsValid(value));
  set_has_msgtype();
  msgtype_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgMatchSrvPlayerQuit_MapMgr2MatchSrv.msgType)
}

// optional int64 iggId = 2;
inline bool MsgMatchSrvPlayerQuit_MapMgr2MatchSrv::has_iggid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MsgMatchSrvPlayerQuit_MapMgr2MatchSrv::set_has_iggid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MsgMatchSrvPlayerQuit_MapMgr2MatchSrv::clear_has_iggid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MsgMatchSrvPlayerQuit_MapMgr2MatchSrv::clear_iggid() {
  iggid_ = GOOGLE_LONGLONG(0);
  clear_has_iggid();
}
inline ::google::protobuf::int64 MsgMatchSrvPlayerQuit_MapMgr2MatchSrv::iggid() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgMatchSrvPlayerQuit_MapMgr2MatchSrv.iggId)
  return iggid_;
}
inline void MsgMatchSrvPlayerQuit_MapMgr2MatchSrv::set_iggid(::google::protobuf::int64 value) {
  set_has_iggid();
  iggid_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgMatchSrvPlayerQuit_MapMgr2MatchSrv.iggId)
}

// -------------------------------------------------------------------

// MsgPlayerNetworkDisconnect_GS2S

// optional .MsgPB.EMsgType msgType = 1 [default = _MSG_PLAYER_NETWORK_DISCONNECT_GS2S];
inline bool MsgPlayerNetworkDisconnect_GS2S::has_msgtype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgPlayerNetworkDisconnect_GS2S::set_has_msgtype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgPlayerNetworkDisconnect_GS2S::clear_has_msgtype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgPlayerNetworkDisconnect_GS2S::clear_msgtype() {
  msgtype_ = 1155;
  clear_has_msgtype();
}
inline ::MsgPB::EMsgType MsgPlayerNetworkDisconnect_GS2S::msgtype() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgPlayerNetworkDisconnect_GS2S.msgType)
  return static_cast< ::MsgPB::EMsgType >(msgtype_);
}
inline void MsgPlayerNetworkDisconnect_GS2S::set_msgtype(::MsgPB::EMsgType value) {
  assert(::MsgPB::EMsgType_IsValid(value));
  set_has_msgtype();
  msgtype_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgPlayerNetworkDisconnect_GS2S.msgType)
}

// optional int64 iggid = 2;
inline bool MsgPlayerNetworkDisconnect_GS2S::has_iggid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MsgPlayerNetworkDisconnect_GS2S::set_has_iggid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MsgPlayerNetworkDisconnect_GS2S::clear_has_iggid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MsgPlayerNetworkDisconnect_GS2S::clear_iggid() {
  iggid_ = GOOGLE_LONGLONG(0);
  clear_has_iggid();
}
inline ::google::protobuf::int64 MsgPlayerNetworkDisconnect_GS2S::iggid() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgPlayerNetworkDisconnect_GS2S.iggid)
  return iggid_;
}
inline void MsgPlayerNetworkDisconnect_GS2S::set_iggid(::google::protobuf::int64 value) {
  set_has_iggid();
  iggid_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgPlayerNetworkDisconnect_GS2S.iggid)
}

// -------------------------------------------------------------------

// MsgPlayerOfflineopSync

// optional .MsgPB.EMsgType msgType = 1 [default = MSG_PLAYER_OFFLINEOP_SYNC];
inline bool MsgPlayerOfflineopSync::has_msgtype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgPlayerOfflineopSync::set_has_msgtype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgPlayerOfflineopSync::clear_has_msgtype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgPlayerOfflineopSync::clear_msgtype() {
  msgtype_ = 1156;
  clear_has_msgtype();
}
inline ::MsgPB::EMsgType MsgPlayerOfflineopSync::msgtype() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgPlayerOfflineopSync.msgType)
  return static_cast< ::MsgPB::EMsgType >(msgtype_);
}
inline void MsgPlayerOfflineopSync::set_msgtype(::MsgPB::EMsgType value) {
  assert(::MsgPB::EMsgType_IsValid(value));
  set_has_msgtype();
  msgtype_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgPlayerOfflineopSync.msgType)
}

// optional int64 iggid = 2;
inline bool MsgPlayerOfflineopSync::has_iggid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MsgPlayerOfflineopSync::set_has_iggid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MsgPlayerOfflineopSync::clear_has_iggid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MsgPlayerOfflineopSync::clear_iggid() {
  iggid_ = GOOGLE_LONGLONG(0);
  clear_has_iggid();
}
inline ::google::protobuf::int64 MsgPlayerOfflineopSync::iggid() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgPlayerOfflineopSync.iggid)
  return iggid_;
}
inline void MsgPlayerOfflineopSync::set_iggid(::google::protobuf::int64 value) {
  set_has_iggid();
  iggid_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgPlayerOfflineopSync.iggid)
}

// -------------------------------------------------------------------

// MsgPlayerOfflineOpGet_MS2MAS

// optional .MsgPB.EMsgType msgType = 1 [default = _MSG_PLAYER_OFFLINEOP_GET_MS2MAS];
inline bool MsgPlayerOfflineOpGet_MS2MAS::has_msgtype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgPlayerOfflineOpGet_MS2MAS::set_has_msgtype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgPlayerOfflineOpGet_MS2MAS::clear_has_msgtype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgPlayerOfflineOpGet_MS2MAS::clear_msgtype() {
  msgtype_ = 1157;
  clear_has_msgtype();
}
inline ::MsgPB::EMsgType MsgPlayerOfflineOpGet_MS2MAS::msgtype() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgPlayerOfflineOpGet_MS2MAS.msgType)
  return static_cast< ::MsgPB::EMsgType >(msgtype_);
}
inline void MsgPlayerOfflineOpGet_MS2MAS::set_msgtype(::MsgPB::EMsgType value) {
  assert(::MsgPB::EMsgType_IsValid(value));
  set_has_msgtype();
  msgtype_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgPlayerOfflineOpGet_MS2MAS.msgType)
}

// optional int64 iggid = 2;
inline bool MsgPlayerOfflineOpGet_MS2MAS::has_iggid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MsgPlayerOfflineOpGet_MS2MAS::set_has_iggid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MsgPlayerOfflineOpGet_MS2MAS::clear_has_iggid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MsgPlayerOfflineOpGet_MS2MAS::clear_iggid() {
  iggid_ = GOOGLE_LONGLONG(0);
  clear_has_iggid();
}
inline ::google::protobuf::int64 MsgPlayerOfflineOpGet_MS2MAS::iggid() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgPlayerOfflineOpGet_MS2MAS.iggid)
  return iggid_;
}
inline void MsgPlayerOfflineOpGet_MS2MAS::set_iggid(::google::protobuf::int64 value) {
  set_has_iggid();
  iggid_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgPlayerOfflineOpGet_MS2MAS.iggid)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace MsgPB

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::MsgPB::MsgPlayerOfflineopSync_OP_TYPE> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::MsgPB::MsgPlayerOfflineopSync_OP_TYPE>() {
  return ::MsgPB::MsgPlayerOfflineopSync_OP_TYPE_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_MsgMatchServer_2eproto__INCLUDED
