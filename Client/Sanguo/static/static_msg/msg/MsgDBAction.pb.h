// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MsgDBAction.proto

#ifndef PROTOBUF_MsgDBAction_2eproto__INCLUDED
#define PROTOBUF_MsgDBAction_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "MsgType.pb.h"
// @@protoc_insertion_point(includes)

namespace MsgPB {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_MsgDBAction_2eproto();
void protobuf_AssignDesc_MsgDBAction_2eproto();
void protobuf_ShutdownFile_MsgDBAction_2eproto();

class DBAction_GetItemRes;
class DBAction_GetItemRes_tbl_item_packet;
class DBAction_GetUserPlantRes;
class DBAction_GetUserPlantRes_tbl_map_user_plant;
class DBAction_GetUserAchieveRes;
class DBAction_GetUserAchieveRes_tbl_user_achieve;
class MsgDBAction;

// ===================================================================

class DBAction_GetItemRes_tbl_item_packet : public ::google::protobuf::Message {
 public:
  DBAction_GetItemRes_tbl_item_packet();
  virtual ~DBAction_GetItemRes_tbl_item_packet();

  DBAction_GetItemRes_tbl_item_packet(const DBAction_GetItemRes_tbl_item_packet& from);

  inline DBAction_GetItemRes_tbl_item_packet& operator=(const DBAction_GetItemRes_tbl_item_packet& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DBAction_GetItemRes_tbl_item_packet& default_instance();

  void Swap(DBAction_GetItemRes_tbl_item_packet* other);

  // implements Message ----------------------------------------------

  DBAction_GetItemRes_tbl_item_packet* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DBAction_GetItemRes_tbl_item_packet& from);
  void MergeFrom(const DBAction_GetItemRes_tbl_item_packet& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 auto_id = 1;
  inline bool has_auto_id() const;
  inline void clear_auto_id();
  static const int kAutoIdFieldNumber = 1;
  inline ::google::protobuf::int64 auto_id() const;
  inline void set_auto_id(::google::protobuf::int64 value);

  // optional int64 iggid = 2;
  inline bool has_iggid() const;
  inline void clear_iggid();
  static const int kIggidFieldNumber = 2;
  inline ::google::protobuf::int64 iggid() const;
  inline void set_iggid(::google::protobuf::int64 value);

  // optional int64 item_uuid = 3;
  inline bool has_item_uuid() const;
  inline void clear_item_uuid();
  static const int kItemUuidFieldNumber = 3;
  inline ::google::protobuf::int64 item_uuid() const;
  inline void set_item_uuid(::google::protobuf::int64 value);

  // optional int32 dataid = 4;
  inline bool has_dataid() const;
  inline void clear_dataid();
  static const int kDataidFieldNumber = 4;
  inline ::google::protobuf::int32 dataid() const;
  inline void set_dataid(::google::protobuf::int32 value);

  // optional string name = 5;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 5;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // optional int32 pos = 6;
  inline bool has_pos() const;
  inline void clear_pos();
  static const int kPosFieldNumber = 6;
  inline ::google::protobuf::int32 pos() const;
  inline void set_pos(::google::protobuf::int32 value);

  // optional int32 count = 7;
  inline bool has_count() const;
  inline void clear_count();
  static const int kCountFieldNumber = 7;
  inline ::google::protobuf::int32 count() const;
  inline void set_count(::google::protobuf::int32 value);

  // optional int32 packettype = 8;
  inline bool has_packettype() const;
  inline void clear_packettype();
  static const int kPackettypeFieldNumber = 8;
  inline ::google::protobuf::int32 packettype() const;
  inline void set_packettype(::google::protobuf::int32 value);

  // optional int32 durable = 9;
  inline bool has_durable() const;
  inline void clear_durable();
  static const int kDurableFieldNumber = 9;
  inline ::google::protobuf::int32 durable() const;
  inline void set_durable(::google::protobuf::int32 value);

  // optional string cooldown = 10;
  inline bool has_cooldown() const;
  inline void clear_cooldown();
  static const int kCooldownFieldNumber = 10;
  inline const ::std::string& cooldown() const;
  inline void set_cooldown(const ::std::string& value);
  inline void set_cooldown(const char* value);
  inline void set_cooldown(const char* value, size_t size);
  inline ::std::string* mutable_cooldown();
  inline ::std::string* release_cooldown();
  inline void set_allocated_cooldown(::std::string* cooldown);

  // optional string expired_time = 11;
  inline bool has_expired_time() const;
  inline void clear_expired_time();
  static const int kExpiredTimeFieldNumber = 11;
  inline const ::std::string& expired_time() const;
  inline void set_expired_time(const ::std::string& value);
  inline void set_expired_time(const char* value);
  inline void set_expired_time(const char* value, size_t size);
  inline ::std::string* mutable_expired_time();
  inline ::std::string* release_expired_time();
  inline void set_allocated_expired_time(::std::string* expired_time);

  // optional string countdown_time = 12;
  inline bool has_countdown_time() const;
  inline void clear_countdown_time();
  static const int kCountdownTimeFieldNumber = 12;
  inline const ::std::string& countdown_time() const;
  inline void set_countdown_time(const ::std::string& value);
  inline void set_countdown_time(const char* value);
  inline void set_countdown_time(const char* value, size_t size);
  inline ::std::string* mutable_countdown_time();
  inline ::std::string* release_countdown_time();
  inline void set_allocated_countdown_time(::std::string* countdown_time);

  // optional string equip_randval = 13;
  inline bool has_equip_randval() const;
  inline void clear_equip_randval();
  static const int kEquipRandvalFieldNumber = 13;
  inline const ::std::string& equip_randval() const;
  inline void set_equip_randval(const ::std::string& value);
  inline void set_equip_randval(const char* value);
  inline void set_equip_randval(const char* value, size_t size);
  inline ::std::string* mutable_equip_randval();
  inline ::std::string* release_equip_randval();
  inline void set_allocated_equip_randval(::std::string* equip_randval);

  // optional string build_tower_data = 14;
  inline bool has_build_tower_data() const;
  inline void clear_build_tower_data();
  static const int kBuildTowerDataFieldNumber = 14;
  inline const ::std::string& build_tower_data() const;
  inline void set_build_tower_data(const ::std::string& value);
  inline void set_build_tower_data(const char* value);
  inline void set_build_tower_data(const char* value, size_t size);
  inline ::std::string* mutable_build_tower_data();
  inline ::std::string* release_build_tower_data();
  inline void set_allocated_build_tower_data(::std::string* build_tower_data);

  // optional int32 durablemax = 15;
  inline bool has_durablemax() const;
  inline void clear_durablemax();
  static const int kDurablemaxFieldNumber = 15;
  inline ::google::protobuf::int32 durablemax() const;
  inline void set_durablemax(::google::protobuf::int32 value);

  // optional int64 auction_cooldown = 16;
  inline bool has_auction_cooldown() const;
  inline void clear_auction_cooldown();
  static const int kAuctionCooldownFieldNumber = 16;
  inline ::google::protobuf::int64 auction_cooldown() const;
  inline void set_auction_cooldown(::google::protobuf::int64 value);

  // optional int32 identified = 17;
  inline bool has_identified() const;
  inline void clear_identified();
  static const int kIdentifiedFieldNumber = 17;
  inline ::google::protobuf::int32 identified() const;
  inline void set_identified(::google::protobuf::int32 value);

  // optional string item_counter_info = 18;
  inline bool has_item_counter_info() const;
  inline void clear_item_counter_info();
  static const int kItemCounterInfoFieldNumber = 18;
  inline const ::std::string& item_counter_info() const;
  inline void set_item_counter_info(const ::std::string& value);
  inline void set_item_counter_info(const char* value);
  inline void set_item_counter_info(const char* value, size_t size);
  inline ::std::string* mutable_item_counter_info();
  inline ::std::string* release_item_counter_info();
  inline void set_allocated_item_counter_info(::std::string* item_counter_info);

  // optional string antique_info = 19;
  inline bool has_antique_info() const;
  inline void clear_antique_info();
  static const int kAntiqueInfoFieldNumber = 19;
  inline const ::std::string& antique_info() const;
  inline void set_antique_info(const ::std::string& value);
  inline void set_antique_info(const char* value);
  inline void set_antique_info(const char* value, size_t size);
  inline ::std::string* mutable_antique_info();
  inline ::std::string* release_antique_info();
  inline void set_allocated_antique_info(::std::string* antique_info);

  // @@protoc_insertion_point(class_scope:MsgPB.DBAction_GetItemRes.tbl_item_packet)
 private:
  inline void set_has_auto_id();
  inline void clear_has_auto_id();
  inline void set_has_iggid();
  inline void clear_has_iggid();
  inline void set_has_item_uuid();
  inline void clear_has_item_uuid();
  inline void set_has_dataid();
  inline void clear_has_dataid();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_pos();
  inline void clear_has_pos();
  inline void set_has_count();
  inline void clear_has_count();
  inline void set_has_packettype();
  inline void clear_has_packettype();
  inline void set_has_durable();
  inline void clear_has_durable();
  inline void set_has_cooldown();
  inline void clear_has_cooldown();
  inline void set_has_expired_time();
  inline void clear_has_expired_time();
  inline void set_has_countdown_time();
  inline void clear_has_countdown_time();
  inline void set_has_equip_randval();
  inline void clear_has_equip_randval();
  inline void set_has_build_tower_data();
  inline void clear_has_build_tower_data();
  inline void set_has_durablemax();
  inline void clear_has_durablemax();
  inline void set_has_auction_cooldown();
  inline void clear_has_auction_cooldown();
  inline void set_has_identified();
  inline void clear_has_identified();
  inline void set_has_item_counter_info();
  inline void clear_has_item_counter_info();
  inline void set_has_antique_info();
  inline void clear_has_antique_info();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 auto_id_;
  ::google::protobuf::int64 iggid_;
  ::google::protobuf::int64 item_uuid_;
  ::std::string* name_;
  ::google::protobuf::int32 dataid_;
  ::google::protobuf::int32 pos_;
  ::google::protobuf::int32 count_;
  ::google::protobuf::int32 packettype_;
  ::std::string* cooldown_;
  ::std::string* expired_time_;
  ::std::string* countdown_time_;
  ::google::protobuf::int32 durable_;
  ::google::protobuf::int32 durablemax_;
  ::std::string* equip_randval_;
  ::std::string* build_tower_data_;
  ::google::protobuf::int64 auction_cooldown_;
  ::std::string* item_counter_info_;
  ::std::string* antique_info_;
  ::google::protobuf::int32 identified_;
  friend void  protobuf_AddDesc_MsgDBAction_2eproto();
  friend void protobuf_AssignDesc_MsgDBAction_2eproto();
  friend void protobuf_ShutdownFile_MsgDBAction_2eproto();

  void InitAsDefaultInstance();
  static DBAction_GetItemRes_tbl_item_packet* default_instance_;
};
// -------------------------------------------------------------------

class DBAction_GetItemRes : public ::google::protobuf::Message {
 public:
  DBAction_GetItemRes();
  virtual ~DBAction_GetItemRes();

  DBAction_GetItemRes(const DBAction_GetItemRes& from);

  inline DBAction_GetItemRes& operator=(const DBAction_GetItemRes& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DBAction_GetItemRes& default_instance();

  void Swap(DBAction_GetItemRes* other);

  // implements Message ----------------------------------------------

  DBAction_GetItemRes* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DBAction_GetItemRes& from);
  void MergeFrom(const DBAction_GetItemRes& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef DBAction_GetItemRes_tbl_item_packet tbl_item_packet;

  // accessors -------------------------------------------------------

  // repeated .MsgPB.DBAction_GetItemRes.tbl_item_packet data = 1;
  inline int data_size() const;
  inline void clear_data();
  static const int kDataFieldNumber = 1;
  inline const ::MsgPB::DBAction_GetItemRes_tbl_item_packet& data(int index) const;
  inline ::MsgPB::DBAction_GetItemRes_tbl_item_packet* mutable_data(int index);
  inline ::MsgPB::DBAction_GetItemRes_tbl_item_packet* add_data();
  inline const ::google::protobuf::RepeatedPtrField< ::MsgPB::DBAction_GetItemRes_tbl_item_packet >&
      data() const;
  inline ::google::protobuf::RepeatedPtrField< ::MsgPB::DBAction_GetItemRes_tbl_item_packet >*
      mutable_data();

  // @@protoc_insertion_point(class_scope:MsgPB.DBAction_GetItemRes)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::MsgPB::DBAction_GetItemRes_tbl_item_packet > data_;
  friend void  protobuf_AddDesc_MsgDBAction_2eproto();
  friend void protobuf_AssignDesc_MsgDBAction_2eproto();
  friend void protobuf_ShutdownFile_MsgDBAction_2eproto();

  void InitAsDefaultInstance();
  static DBAction_GetItemRes* default_instance_;
};
// -------------------------------------------------------------------

class DBAction_GetUserPlantRes_tbl_map_user_plant : public ::google::protobuf::Message {
 public:
  DBAction_GetUserPlantRes_tbl_map_user_plant();
  virtual ~DBAction_GetUserPlantRes_tbl_map_user_plant();

  DBAction_GetUserPlantRes_tbl_map_user_plant(const DBAction_GetUserPlantRes_tbl_map_user_plant& from);

  inline DBAction_GetUserPlantRes_tbl_map_user_plant& operator=(const DBAction_GetUserPlantRes_tbl_map_user_plant& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DBAction_GetUserPlantRes_tbl_map_user_plant& default_instance();

  void Swap(DBAction_GetUserPlantRes_tbl_map_user_plant* other);

  // implements Message ----------------------------------------------

  DBAction_GetUserPlantRes_tbl_map_user_plant* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DBAction_GetUserPlantRes_tbl_map_user_plant& from);
  void MergeFrom(const DBAction_GetUserPlantRes_tbl_map_user_plant& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 iggid = 1;
  inline bool has_iggid() const;
  inline void clear_iggid();
  static const int kIggidFieldNumber = 1;
  inline ::google::protobuf::int64 iggid() const;
  inline void set_iggid(::google::protobuf::int64 value);

  // optional int32 mapid = 2;
  inline bool has_mapid() const;
  inline void clear_mapid();
  static const int kMapidFieldNumber = 2;
  inline ::google::protobuf::int32 mapid() const;
  inline void set_mapid(::google::protobuf::int32 value);

  // optional int64 plant_id = 3;
  inline bool has_plant_id() const;
  inline void clear_plant_id();
  static const int kPlantIdFieldNumber = 3;
  inline ::google::protobuf::int64 plant_id() const;
  inline void set_plant_id(::google::protobuf::int64 value);

  // optional int32 plant_type = 4;
  inline bool has_plant_type() const;
  inline void clear_plant_type();
  static const int kPlantTypeFieldNumber = 4;
  inline ::google::protobuf::int32 plant_type() const;
  inline void set_plant_type(::google::protobuf::int32 value);

  // optional int32 pos_x = 5;
  inline bool has_pos_x() const;
  inline void clear_pos_x();
  static const int kPosXFieldNumber = 5;
  inline ::google::protobuf::int32 pos_x() const;
  inline void set_pos_x(::google::protobuf::int32 value);

  // optional int32 pos_y = 6;
  inline bool has_pos_y() const;
  inline void clear_pos_y();
  static const int kPosYFieldNumber = 6;
  inline ::google::protobuf::int32 pos_y() const;
  inline void set_pos_y(::google::protobuf::int32 value);

  // optional int64 begin_time = 7;
  inline bool has_begin_time() const;
  inline void clear_begin_time();
  static const int kBeginTimeFieldNumber = 7;
  inline ::google::protobuf::int64 begin_time() const;
  inline void set_begin_time(::google::protobuf::int64 value);

  // optional int32 grow_stage = 8;
  inline bool has_grow_stage() const;
  inline void clear_grow_stage();
  static const int kGrowStageFieldNumber = 8;
  inline ::google::protobuf::int32 grow_stage() const;
  inline void set_grow_stage(::google::protobuf::int32 value);

  // optional int32 grow_time = 9;
  inline bool has_grow_time() const;
  inline void clear_grow_time();
  static const int kGrowTimeFieldNumber = 9;
  inline ::google::protobuf::int32 grow_time() const;
  inline void set_grow_time(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:MsgPB.DBAction_GetUserPlantRes.tbl_map_user_plant)
 private:
  inline void set_has_iggid();
  inline void clear_has_iggid();
  inline void set_has_mapid();
  inline void clear_has_mapid();
  inline void set_has_plant_id();
  inline void clear_has_plant_id();
  inline void set_has_plant_type();
  inline void clear_has_plant_type();
  inline void set_has_pos_x();
  inline void clear_has_pos_x();
  inline void set_has_pos_y();
  inline void clear_has_pos_y();
  inline void set_has_begin_time();
  inline void clear_has_begin_time();
  inline void set_has_grow_stage();
  inline void clear_has_grow_stage();
  inline void set_has_grow_time();
  inline void clear_has_grow_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 iggid_;
  ::google::protobuf::int64 plant_id_;
  ::google::protobuf::int32 mapid_;
  ::google::protobuf::int32 plant_type_;
  ::google::protobuf::int32 pos_x_;
  ::google::protobuf::int32 pos_y_;
  ::google::protobuf::int64 begin_time_;
  ::google::protobuf::int32 grow_stage_;
  ::google::protobuf::int32 grow_time_;
  friend void  protobuf_AddDesc_MsgDBAction_2eproto();
  friend void protobuf_AssignDesc_MsgDBAction_2eproto();
  friend void protobuf_ShutdownFile_MsgDBAction_2eproto();

  void InitAsDefaultInstance();
  static DBAction_GetUserPlantRes_tbl_map_user_plant* default_instance_;
};
// -------------------------------------------------------------------

class DBAction_GetUserPlantRes : public ::google::protobuf::Message {
 public:
  DBAction_GetUserPlantRes();
  virtual ~DBAction_GetUserPlantRes();

  DBAction_GetUserPlantRes(const DBAction_GetUserPlantRes& from);

  inline DBAction_GetUserPlantRes& operator=(const DBAction_GetUserPlantRes& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DBAction_GetUserPlantRes& default_instance();

  void Swap(DBAction_GetUserPlantRes* other);

  // implements Message ----------------------------------------------

  DBAction_GetUserPlantRes* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DBAction_GetUserPlantRes& from);
  void MergeFrom(const DBAction_GetUserPlantRes& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef DBAction_GetUserPlantRes_tbl_map_user_plant tbl_map_user_plant;

  // accessors -------------------------------------------------------

  // repeated .MsgPB.DBAction_GetUserPlantRes.tbl_map_user_plant plant = 1;
  inline int plant_size() const;
  inline void clear_plant();
  static const int kPlantFieldNumber = 1;
  inline const ::MsgPB::DBAction_GetUserPlantRes_tbl_map_user_plant& plant(int index) const;
  inline ::MsgPB::DBAction_GetUserPlantRes_tbl_map_user_plant* mutable_plant(int index);
  inline ::MsgPB::DBAction_GetUserPlantRes_tbl_map_user_plant* add_plant();
  inline const ::google::protobuf::RepeatedPtrField< ::MsgPB::DBAction_GetUserPlantRes_tbl_map_user_plant >&
      plant() const;
  inline ::google::protobuf::RepeatedPtrField< ::MsgPB::DBAction_GetUserPlantRes_tbl_map_user_plant >*
      mutable_plant();

  // @@protoc_insertion_point(class_scope:MsgPB.DBAction_GetUserPlantRes)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::MsgPB::DBAction_GetUserPlantRes_tbl_map_user_plant > plant_;
  friend void  protobuf_AddDesc_MsgDBAction_2eproto();
  friend void protobuf_AssignDesc_MsgDBAction_2eproto();
  friend void protobuf_ShutdownFile_MsgDBAction_2eproto();

  void InitAsDefaultInstance();
  static DBAction_GetUserPlantRes* default_instance_;
};
// -------------------------------------------------------------------

class DBAction_GetUserAchieveRes_tbl_user_achieve : public ::google::protobuf::Message {
 public:
  DBAction_GetUserAchieveRes_tbl_user_achieve();
  virtual ~DBAction_GetUserAchieveRes_tbl_user_achieve();

  DBAction_GetUserAchieveRes_tbl_user_achieve(const DBAction_GetUserAchieveRes_tbl_user_achieve& from);

  inline DBAction_GetUserAchieveRes_tbl_user_achieve& operator=(const DBAction_GetUserAchieveRes_tbl_user_achieve& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DBAction_GetUserAchieveRes_tbl_user_achieve& default_instance();

  void Swap(DBAction_GetUserAchieveRes_tbl_user_achieve* other);

  // implements Message ----------------------------------------------

  DBAction_GetUserAchieveRes_tbl_user_achieve* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DBAction_GetUserAchieveRes_tbl_user_achieve& from);
  void MergeFrom(const DBAction_GetUserAchieveRes_tbl_user_achieve& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 auto_id = 1;
  inline bool has_auto_id() const;
  inline void clear_auto_id();
  static const int kAutoIdFieldNumber = 1;
  inline ::google::protobuf::int64 auto_id() const;
  inline void set_auto_id(::google::protobuf::int64 value);

  // optional int64 iggid = 2;
  inline bool has_iggid() const;
  inline void clear_iggid();
  static const int kIggidFieldNumber = 2;
  inline ::google::protobuf::int64 iggid() const;
  inline void set_iggid(::google::protobuf::int64 value);

  // optional int64 uuid = 3;
  inline bool has_uuid() const;
  inline void clear_uuid();
  static const int kUuidFieldNumber = 3;
  inline ::google::protobuf::int64 uuid() const;
  inline void set_uuid(::google::protobuf::int64 value);

  // optional int32 status = 4;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 4;
  inline ::google::protobuf::int32 status() const;
  inline void set_status(::google::protobuf::int32 value);

  // optional int32 value = 5;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 5;
  inline ::google::protobuf::int32 value() const;
  inline void set_value(::google::protobuf::int32 value);

  // optional int64 update_time = 6;
  inline bool has_update_time() const;
  inline void clear_update_time();
  static const int kUpdateTimeFieldNumber = 6;
  inline ::google::protobuf::int64 update_time() const;
  inline void set_update_time(::google::protobuf::int64 value);

  // optional int64 complete_time = 7;
  inline bool has_complete_time() const;
  inline void clear_complete_time();
  static const int kCompleteTimeFieldNumber = 7;
  inline ::google::protobuf::int64 complete_time() const;
  inline void set_complete_time(::google::protobuf::int64 value);

  // optional int32 currently = 8;
  inline bool has_currently() const;
  inline void clear_currently();
  static const int kCurrentlyFieldNumber = 8;
  inline ::google::protobuf::int32 currently() const;
  inline void set_currently(::google::protobuf::int32 value);

  // optional string source = 9;
  inline bool has_source() const;
  inline void clear_source();
  static const int kSourceFieldNumber = 9;
  inline const ::std::string& source() const;
  inline void set_source(const ::std::string& value);
  inline void set_source(const char* value);
  inline void set_source(const char* value, size_t size);
  inline ::std::string* mutable_source();
  inline ::std::string* release_source();
  inline void set_allocated_source(::std::string* source);

  // @@protoc_insertion_point(class_scope:MsgPB.DBAction_GetUserAchieveRes.tbl_user_achieve)
 private:
  inline void set_has_auto_id();
  inline void clear_has_auto_id();
  inline void set_has_iggid();
  inline void clear_has_iggid();
  inline void set_has_uuid();
  inline void clear_has_uuid();
  inline void set_has_status();
  inline void clear_has_status();
  inline void set_has_value();
  inline void clear_has_value();
  inline void set_has_update_time();
  inline void clear_has_update_time();
  inline void set_has_complete_time();
  inline void clear_has_complete_time();
  inline void set_has_currently();
  inline void clear_has_currently();
  inline void set_has_source();
  inline void clear_has_source();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 auto_id_;
  ::google::protobuf::int64 iggid_;
  ::google::protobuf::int64 uuid_;
  ::google::protobuf::int32 status_;
  ::google::protobuf::int32 value_;
  ::google::protobuf::int64 update_time_;
  ::google::protobuf::int64 complete_time_;
  ::std::string* source_;
  ::google::protobuf::int32 currently_;
  friend void  protobuf_AddDesc_MsgDBAction_2eproto();
  friend void protobuf_AssignDesc_MsgDBAction_2eproto();
  friend void protobuf_ShutdownFile_MsgDBAction_2eproto();

  void InitAsDefaultInstance();
  static DBAction_GetUserAchieveRes_tbl_user_achieve* default_instance_;
};
// -------------------------------------------------------------------

class DBAction_GetUserAchieveRes : public ::google::protobuf::Message {
 public:
  DBAction_GetUserAchieveRes();
  virtual ~DBAction_GetUserAchieveRes();

  DBAction_GetUserAchieveRes(const DBAction_GetUserAchieveRes& from);

  inline DBAction_GetUserAchieveRes& operator=(const DBAction_GetUserAchieveRes& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DBAction_GetUserAchieveRes& default_instance();

  void Swap(DBAction_GetUserAchieveRes* other);

  // implements Message ----------------------------------------------

  DBAction_GetUserAchieveRes* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DBAction_GetUserAchieveRes& from);
  void MergeFrom(const DBAction_GetUserAchieveRes& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef DBAction_GetUserAchieveRes_tbl_user_achieve tbl_user_achieve;

  // accessors -------------------------------------------------------

  // repeated .MsgPB.DBAction_GetUserAchieveRes.tbl_user_achieve data = 1;
  inline int data_size() const;
  inline void clear_data();
  static const int kDataFieldNumber = 1;
  inline const ::MsgPB::DBAction_GetUserAchieveRes_tbl_user_achieve& data(int index) const;
  inline ::MsgPB::DBAction_GetUserAchieveRes_tbl_user_achieve* mutable_data(int index);
  inline ::MsgPB::DBAction_GetUserAchieveRes_tbl_user_achieve* add_data();
  inline const ::google::protobuf::RepeatedPtrField< ::MsgPB::DBAction_GetUserAchieveRes_tbl_user_achieve >&
      data() const;
  inline ::google::protobuf::RepeatedPtrField< ::MsgPB::DBAction_GetUserAchieveRes_tbl_user_achieve >*
      mutable_data();

  // @@protoc_insertion_point(class_scope:MsgPB.DBAction_GetUserAchieveRes)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::MsgPB::DBAction_GetUserAchieveRes_tbl_user_achieve > data_;
  friend void  protobuf_AddDesc_MsgDBAction_2eproto();
  friend void protobuf_AssignDesc_MsgDBAction_2eproto();
  friend void protobuf_ShutdownFile_MsgDBAction_2eproto();

  void InitAsDefaultInstance();
  static DBAction_GetUserAchieveRes* default_instance_;
};
// -------------------------------------------------------------------

class MsgDBAction : public ::google::protobuf::Message {
 public:
  MsgDBAction();
  virtual ~MsgDBAction();

  MsgDBAction(const MsgDBAction& from);

  inline MsgDBAction& operator=(const MsgDBAction& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgDBAction& default_instance();

  enum ActionCase {
    kGetItemReq = 100,
    kGetItemRes = 101,
    kGetPlantReq = 102,
    kGetUserPlantRes = 103,
    kGetAchieveReq = 104,
    kGetUserAchieveRes = 105,
    ACTION_NOT_SET = 0,
  };

  void Swap(MsgDBAction* other);

  // implements Message ----------------------------------------------

  MsgDBAction* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgDBAction& from);
  void MergeFrom(const MsgDBAction& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_DB_ACTION];
  inline bool has_msgtype() const;
  inline void clear_msgtype();
  static const int kMsgTypeFieldNumber = 1;
  inline ::MsgPB::EMsgType msgtype() const;
  inline void set_msgtype(::MsgPB::EMsgType value);

  // optional int64 iggid = 2;
  inline bool has_iggid() const;
  inline void clear_iggid();
  static const int kIggidFieldNumber = 2;
  inline ::google::protobuf::int64 iggid() const;
  inline void set_iggid(::google::protobuf::int64 value);

  // optional bool IsTail = 3;
  inline bool has_istail() const;
  inline void clear_istail();
  static const int kIsTailFieldNumber = 3;
  inline bool istail() const;
  inline void set_istail(bool value);

  // optional int32 mapid = 4;
  inline bool has_mapid() const;
  inline void clear_mapid();
  static const int kMapidFieldNumber = 4;
  inline ::google::protobuf::int32 mapid() const;
  inline void set_mapid(::google::protobuf::int32 value);

  // optional int64 context_data = 5;
  inline bool has_context_data() const;
  inline void clear_context_data();
  static const int kContextDataFieldNumber = 5;
  inline ::google::protobuf::int64 context_data() const;
  inline void set_context_data(::google::protobuf::int64 value);

  // optional int64 get_item_req = 100;
  inline bool has_get_item_req() const;
  inline void clear_get_item_req();
  static const int kGetItemReqFieldNumber = 100;
  inline ::google::protobuf::int64 get_item_req() const;
  inline void set_get_item_req(::google::protobuf::int64 value);

  // optional .MsgPB.DBAction_GetItemRes get_item_res = 101;
  inline bool has_get_item_res() const;
  inline void clear_get_item_res();
  static const int kGetItemResFieldNumber = 101;
  inline const ::MsgPB::DBAction_GetItemRes& get_item_res() const;
  inline ::MsgPB::DBAction_GetItemRes* mutable_get_item_res();
  inline ::MsgPB::DBAction_GetItemRes* release_get_item_res();
  inline void set_allocated_get_item_res(::MsgPB::DBAction_GetItemRes* get_item_res);

  // optional int64 get_plant_req = 102;
  inline bool has_get_plant_req() const;
  inline void clear_get_plant_req();
  static const int kGetPlantReqFieldNumber = 102;
  inline ::google::protobuf::int64 get_plant_req() const;
  inline void set_get_plant_req(::google::protobuf::int64 value);

  // optional .MsgPB.DBAction_GetUserPlantRes get_user_plant_res = 103;
  inline bool has_get_user_plant_res() const;
  inline void clear_get_user_plant_res();
  static const int kGetUserPlantResFieldNumber = 103;
  inline const ::MsgPB::DBAction_GetUserPlantRes& get_user_plant_res() const;
  inline ::MsgPB::DBAction_GetUserPlantRes* mutable_get_user_plant_res();
  inline ::MsgPB::DBAction_GetUserPlantRes* release_get_user_plant_res();
  inline void set_allocated_get_user_plant_res(::MsgPB::DBAction_GetUserPlantRes* get_user_plant_res);

  // optional int64 get_achieve_req = 104;
  inline bool has_get_achieve_req() const;
  inline void clear_get_achieve_req();
  static const int kGetAchieveReqFieldNumber = 104;
  inline ::google::protobuf::int64 get_achieve_req() const;
  inline void set_get_achieve_req(::google::protobuf::int64 value);

  // optional .MsgPB.DBAction_GetUserAchieveRes get_user_achieve_res = 105;
  inline bool has_get_user_achieve_res() const;
  inline void clear_get_user_achieve_res();
  static const int kGetUserAchieveResFieldNumber = 105;
  inline const ::MsgPB::DBAction_GetUserAchieveRes& get_user_achieve_res() const;
  inline ::MsgPB::DBAction_GetUserAchieveRes* mutable_get_user_achieve_res();
  inline ::MsgPB::DBAction_GetUserAchieveRes* release_get_user_achieve_res();
  inline void set_allocated_get_user_achieve_res(::MsgPB::DBAction_GetUserAchieveRes* get_user_achieve_res);

  inline ActionCase action_case() const;
  // @@protoc_insertion_point(class_scope:MsgPB.MsgDBAction)
 private:
  inline void set_has_msgtype();
  inline void clear_has_msgtype();
  inline void set_has_iggid();
  inline void clear_has_iggid();
  inline void set_has_istail();
  inline void clear_has_istail();
  inline void set_has_mapid();
  inline void clear_has_mapid();
  inline void set_has_context_data();
  inline void clear_has_context_data();
  inline void set_has_get_item_req();
  inline void set_has_get_item_res();
  inline void set_has_get_plant_req();
  inline void set_has_get_user_plant_res();
  inline void set_has_get_achieve_req();
  inline void set_has_get_user_achieve_res();

  inline bool has_action();
  void clear_action();
  inline void clear_has_action();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 iggid_;
  int msgtype_;
  bool istail_;
  ::google::protobuf::int64 context_data_;
  ::google::protobuf::int32 mapid_;
  union ActionUnion {
    ::google::protobuf::int64 get_item_req_;
    ::MsgPB::DBAction_GetItemRes* get_item_res_;
    ::google::protobuf::int64 get_plant_req_;
    ::MsgPB::DBAction_GetUserPlantRes* get_user_plant_res_;
    ::google::protobuf::int64 get_achieve_req_;
    ::MsgPB::DBAction_GetUserAchieveRes* get_user_achieve_res_;
  } action_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend void  protobuf_AddDesc_MsgDBAction_2eproto();
  friend void protobuf_AssignDesc_MsgDBAction_2eproto();
  friend void protobuf_ShutdownFile_MsgDBAction_2eproto();

  void InitAsDefaultInstance();
  static MsgDBAction* default_instance_;
};
// ===================================================================


// ===================================================================

// DBAction_GetItemRes_tbl_item_packet

// optional int64 auto_id = 1;
inline bool DBAction_GetItemRes_tbl_item_packet::has_auto_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DBAction_GetItemRes_tbl_item_packet::set_has_auto_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DBAction_GetItemRes_tbl_item_packet::clear_has_auto_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DBAction_GetItemRes_tbl_item_packet::clear_auto_id() {
  auto_id_ = GOOGLE_LONGLONG(0);
  clear_has_auto_id();
}
inline ::google::protobuf::int64 DBAction_GetItemRes_tbl_item_packet::auto_id() const {
  // @@protoc_insertion_point(field_get:MsgPB.DBAction_GetItemRes.tbl_item_packet.auto_id)
  return auto_id_;
}
inline void DBAction_GetItemRes_tbl_item_packet::set_auto_id(::google::protobuf::int64 value) {
  set_has_auto_id();
  auto_id_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.DBAction_GetItemRes.tbl_item_packet.auto_id)
}

// optional int64 iggid = 2;
inline bool DBAction_GetItemRes_tbl_item_packet::has_iggid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DBAction_GetItemRes_tbl_item_packet::set_has_iggid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DBAction_GetItemRes_tbl_item_packet::clear_has_iggid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DBAction_GetItemRes_tbl_item_packet::clear_iggid() {
  iggid_ = GOOGLE_LONGLONG(0);
  clear_has_iggid();
}
inline ::google::protobuf::int64 DBAction_GetItemRes_tbl_item_packet::iggid() const {
  // @@protoc_insertion_point(field_get:MsgPB.DBAction_GetItemRes.tbl_item_packet.iggid)
  return iggid_;
}
inline void DBAction_GetItemRes_tbl_item_packet::set_iggid(::google::protobuf::int64 value) {
  set_has_iggid();
  iggid_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.DBAction_GetItemRes.tbl_item_packet.iggid)
}

// optional int64 item_uuid = 3;
inline bool DBAction_GetItemRes_tbl_item_packet::has_item_uuid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DBAction_GetItemRes_tbl_item_packet::set_has_item_uuid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DBAction_GetItemRes_tbl_item_packet::clear_has_item_uuid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DBAction_GetItemRes_tbl_item_packet::clear_item_uuid() {
  item_uuid_ = GOOGLE_LONGLONG(0);
  clear_has_item_uuid();
}
inline ::google::protobuf::int64 DBAction_GetItemRes_tbl_item_packet::item_uuid() const {
  // @@protoc_insertion_point(field_get:MsgPB.DBAction_GetItemRes.tbl_item_packet.item_uuid)
  return item_uuid_;
}
inline void DBAction_GetItemRes_tbl_item_packet::set_item_uuid(::google::protobuf::int64 value) {
  set_has_item_uuid();
  item_uuid_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.DBAction_GetItemRes.tbl_item_packet.item_uuid)
}

// optional int32 dataid = 4;
inline bool DBAction_GetItemRes_tbl_item_packet::has_dataid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void DBAction_GetItemRes_tbl_item_packet::set_has_dataid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void DBAction_GetItemRes_tbl_item_packet::clear_has_dataid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void DBAction_GetItemRes_tbl_item_packet::clear_dataid() {
  dataid_ = 0;
  clear_has_dataid();
}
inline ::google::protobuf::int32 DBAction_GetItemRes_tbl_item_packet::dataid() const {
  // @@protoc_insertion_point(field_get:MsgPB.DBAction_GetItemRes.tbl_item_packet.dataid)
  return dataid_;
}
inline void DBAction_GetItemRes_tbl_item_packet::set_dataid(::google::protobuf::int32 value) {
  set_has_dataid();
  dataid_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.DBAction_GetItemRes.tbl_item_packet.dataid)
}

// optional string name = 5;
inline bool DBAction_GetItemRes_tbl_item_packet::has_name() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void DBAction_GetItemRes_tbl_item_packet::set_has_name() {
  _has_bits_[0] |= 0x00000010u;
}
inline void DBAction_GetItemRes_tbl_item_packet::clear_has_name() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void DBAction_GetItemRes_tbl_item_packet::clear_name() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& DBAction_GetItemRes_tbl_item_packet::name() const {
  // @@protoc_insertion_point(field_get:MsgPB.DBAction_GetItemRes.tbl_item_packet.name)
  return *name_;
}
inline void DBAction_GetItemRes_tbl_item_packet::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set:MsgPB.DBAction_GetItemRes.tbl_item_packet.name)
}
inline void DBAction_GetItemRes_tbl_item_packet::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set_char:MsgPB.DBAction_GetItemRes.tbl_item_packet.name)
}
inline void DBAction_GetItemRes_tbl_item_packet::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:MsgPB.DBAction_GetItemRes.tbl_item_packet.name)
}
inline ::std::string* DBAction_GetItemRes_tbl_item_packet::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:MsgPB.DBAction_GetItemRes.tbl_item_packet.name)
  return name_;
}
inline ::std::string* DBAction_GetItemRes_tbl_item_packet::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void DBAction_GetItemRes_tbl_item_packet::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:MsgPB.DBAction_GetItemRes.tbl_item_packet.name)
}

// optional int32 pos = 6;
inline bool DBAction_GetItemRes_tbl_item_packet::has_pos() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void DBAction_GetItemRes_tbl_item_packet::set_has_pos() {
  _has_bits_[0] |= 0x00000020u;
}
inline void DBAction_GetItemRes_tbl_item_packet::clear_has_pos() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void DBAction_GetItemRes_tbl_item_packet::clear_pos() {
  pos_ = 0;
  clear_has_pos();
}
inline ::google::protobuf::int32 DBAction_GetItemRes_tbl_item_packet::pos() const {
  // @@protoc_insertion_point(field_get:MsgPB.DBAction_GetItemRes.tbl_item_packet.pos)
  return pos_;
}
inline void DBAction_GetItemRes_tbl_item_packet::set_pos(::google::protobuf::int32 value) {
  set_has_pos();
  pos_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.DBAction_GetItemRes.tbl_item_packet.pos)
}

// optional int32 count = 7;
inline bool DBAction_GetItemRes_tbl_item_packet::has_count() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void DBAction_GetItemRes_tbl_item_packet::set_has_count() {
  _has_bits_[0] |= 0x00000040u;
}
inline void DBAction_GetItemRes_tbl_item_packet::clear_has_count() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void DBAction_GetItemRes_tbl_item_packet::clear_count() {
  count_ = 0;
  clear_has_count();
}
inline ::google::protobuf::int32 DBAction_GetItemRes_tbl_item_packet::count() const {
  // @@protoc_insertion_point(field_get:MsgPB.DBAction_GetItemRes.tbl_item_packet.count)
  return count_;
}
inline void DBAction_GetItemRes_tbl_item_packet::set_count(::google::protobuf::int32 value) {
  set_has_count();
  count_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.DBAction_GetItemRes.tbl_item_packet.count)
}

// optional int32 packettype = 8;
inline bool DBAction_GetItemRes_tbl_item_packet::has_packettype() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void DBAction_GetItemRes_tbl_item_packet::set_has_packettype() {
  _has_bits_[0] |= 0x00000080u;
}
inline void DBAction_GetItemRes_tbl_item_packet::clear_has_packettype() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void DBAction_GetItemRes_tbl_item_packet::clear_packettype() {
  packettype_ = 0;
  clear_has_packettype();
}
inline ::google::protobuf::int32 DBAction_GetItemRes_tbl_item_packet::packettype() const {
  // @@protoc_insertion_point(field_get:MsgPB.DBAction_GetItemRes.tbl_item_packet.packettype)
  return packettype_;
}
inline void DBAction_GetItemRes_tbl_item_packet::set_packettype(::google::protobuf::int32 value) {
  set_has_packettype();
  packettype_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.DBAction_GetItemRes.tbl_item_packet.packettype)
}

// optional int32 durable = 9;
inline bool DBAction_GetItemRes_tbl_item_packet::has_durable() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void DBAction_GetItemRes_tbl_item_packet::set_has_durable() {
  _has_bits_[0] |= 0x00000100u;
}
inline void DBAction_GetItemRes_tbl_item_packet::clear_has_durable() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void DBAction_GetItemRes_tbl_item_packet::clear_durable() {
  durable_ = 0;
  clear_has_durable();
}
inline ::google::protobuf::int32 DBAction_GetItemRes_tbl_item_packet::durable() const {
  // @@protoc_insertion_point(field_get:MsgPB.DBAction_GetItemRes.tbl_item_packet.durable)
  return durable_;
}
inline void DBAction_GetItemRes_tbl_item_packet::set_durable(::google::protobuf::int32 value) {
  set_has_durable();
  durable_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.DBAction_GetItemRes.tbl_item_packet.durable)
}

// optional string cooldown = 10;
inline bool DBAction_GetItemRes_tbl_item_packet::has_cooldown() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void DBAction_GetItemRes_tbl_item_packet::set_has_cooldown() {
  _has_bits_[0] |= 0x00000200u;
}
inline void DBAction_GetItemRes_tbl_item_packet::clear_has_cooldown() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void DBAction_GetItemRes_tbl_item_packet::clear_cooldown() {
  if (cooldown_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    cooldown_->clear();
  }
  clear_has_cooldown();
}
inline const ::std::string& DBAction_GetItemRes_tbl_item_packet::cooldown() const {
  // @@protoc_insertion_point(field_get:MsgPB.DBAction_GetItemRes.tbl_item_packet.cooldown)
  return *cooldown_;
}
inline void DBAction_GetItemRes_tbl_item_packet::set_cooldown(const ::std::string& value) {
  set_has_cooldown();
  if (cooldown_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    cooldown_ = new ::std::string;
  }
  cooldown_->assign(value);
  // @@protoc_insertion_point(field_set:MsgPB.DBAction_GetItemRes.tbl_item_packet.cooldown)
}
inline void DBAction_GetItemRes_tbl_item_packet::set_cooldown(const char* value) {
  set_has_cooldown();
  if (cooldown_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    cooldown_ = new ::std::string;
  }
  cooldown_->assign(value);
  // @@protoc_insertion_point(field_set_char:MsgPB.DBAction_GetItemRes.tbl_item_packet.cooldown)
}
inline void DBAction_GetItemRes_tbl_item_packet::set_cooldown(const char* value, size_t size) {
  set_has_cooldown();
  if (cooldown_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    cooldown_ = new ::std::string;
  }
  cooldown_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:MsgPB.DBAction_GetItemRes.tbl_item_packet.cooldown)
}
inline ::std::string* DBAction_GetItemRes_tbl_item_packet::mutable_cooldown() {
  set_has_cooldown();
  if (cooldown_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    cooldown_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:MsgPB.DBAction_GetItemRes.tbl_item_packet.cooldown)
  return cooldown_;
}
inline ::std::string* DBAction_GetItemRes_tbl_item_packet::release_cooldown() {
  clear_has_cooldown();
  if (cooldown_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = cooldown_;
    cooldown_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void DBAction_GetItemRes_tbl_item_packet::set_allocated_cooldown(::std::string* cooldown) {
  if (cooldown_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete cooldown_;
  }
  if (cooldown) {
    set_has_cooldown();
    cooldown_ = cooldown;
  } else {
    clear_has_cooldown();
    cooldown_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:MsgPB.DBAction_GetItemRes.tbl_item_packet.cooldown)
}

// optional string expired_time = 11;
inline bool DBAction_GetItemRes_tbl_item_packet::has_expired_time() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void DBAction_GetItemRes_tbl_item_packet::set_has_expired_time() {
  _has_bits_[0] |= 0x00000400u;
}
inline void DBAction_GetItemRes_tbl_item_packet::clear_has_expired_time() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void DBAction_GetItemRes_tbl_item_packet::clear_expired_time() {
  if (expired_time_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    expired_time_->clear();
  }
  clear_has_expired_time();
}
inline const ::std::string& DBAction_GetItemRes_tbl_item_packet::expired_time() const {
  // @@protoc_insertion_point(field_get:MsgPB.DBAction_GetItemRes.tbl_item_packet.expired_time)
  return *expired_time_;
}
inline void DBAction_GetItemRes_tbl_item_packet::set_expired_time(const ::std::string& value) {
  set_has_expired_time();
  if (expired_time_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    expired_time_ = new ::std::string;
  }
  expired_time_->assign(value);
  // @@protoc_insertion_point(field_set:MsgPB.DBAction_GetItemRes.tbl_item_packet.expired_time)
}
inline void DBAction_GetItemRes_tbl_item_packet::set_expired_time(const char* value) {
  set_has_expired_time();
  if (expired_time_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    expired_time_ = new ::std::string;
  }
  expired_time_->assign(value);
  // @@protoc_insertion_point(field_set_char:MsgPB.DBAction_GetItemRes.tbl_item_packet.expired_time)
}
inline void DBAction_GetItemRes_tbl_item_packet::set_expired_time(const char* value, size_t size) {
  set_has_expired_time();
  if (expired_time_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    expired_time_ = new ::std::string;
  }
  expired_time_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:MsgPB.DBAction_GetItemRes.tbl_item_packet.expired_time)
}
inline ::std::string* DBAction_GetItemRes_tbl_item_packet::mutable_expired_time() {
  set_has_expired_time();
  if (expired_time_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    expired_time_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:MsgPB.DBAction_GetItemRes.tbl_item_packet.expired_time)
  return expired_time_;
}
inline ::std::string* DBAction_GetItemRes_tbl_item_packet::release_expired_time() {
  clear_has_expired_time();
  if (expired_time_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = expired_time_;
    expired_time_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void DBAction_GetItemRes_tbl_item_packet::set_allocated_expired_time(::std::string* expired_time) {
  if (expired_time_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete expired_time_;
  }
  if (expired_time) {
    set_has_expired_time();
    expired_time_ = expired_time;
  } else {
    clear_has_expired_time();
    expired_time_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:MsgPB.DBAction_GetItemRes.tbl_item_packet.expired_time)
}

// optional string countdown_time = 12;
inline bool DBAction_GetItemRes_tbl_item_packet::has_countdown_time() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void DBAction_GetItemRes_tbl_item_packet::set_has_countdown_time() {
  _has_bits_[0] |= 0x00000800u;
}
inline void DBAction_GetItemRes_tbl_item_packet::clear_has_countdown_time() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void DBAction_GetItemRes_tbl_item_packet::clear_countdown_time() {
  if (countdown_time_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    countdown_time_->clear();
  }
  clear_has_countdown_time();
}
inline const ::std::string& DBAction_GetItemRes_tbl_item_packet::countdown_time() const {
  // @@protoc_insertion_point(field_get:MsgPB.DBAction_GetItemRes.tbl_item_packet.countdown_time)
  return *countdown_time_;
}
inline void DBAction_GetItemRes_tbl_item_packet::set_countdown_time(const ::std::string& value) {
  set_has_countdown_time();
  if (countdown_time_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    countdown_time_ = new ::std::string;
  }
  countdown_time_->assign(value);
  // @@protoc_insertion_point(field_set:MsgPB.DBAction_GetItemRes.tbl_item_packet.countdown_time)
}
inline void DBAction_GetItemRes_tbl_item_packet::set_countdown_time(const char* value) {
  set_has_countdown_time();
  if (countdown_time_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    countdown_time_ = new ::std::string;
  }
  countdown_time_->assign(value);
  // @@protoc_insertion_point(field_set_char:MsgPB.DBAction_GetItemRes.tbl_item_packet.countdown_time)
}
inline void DBAction_GetItemRes_tbl_item_packet::set_countdown_time(const char* value, size_t size) {
  set_has_countdown_time();
  if (countdown_time_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    countdown_time_ = new ::std::string;
  }
  countdown_time_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:MsgPB.DBAction_GetItemRes.tbl_item_packet.countdown_time)
}
inline ::std::string* DBAction_GetItemRes_tbl_item_packet::mutable_countdown_time() {
  set_has_countdown_time();
  if (countdown_time_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    countdown_time_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:MsgPB.DBAction_GetItemRes.tbl_item_packet.countdown_time)
  return countdown_time_;
}
inline ::std::string* DBAction_GetItemRes_tbl_item_packet::release_countdown_time() {
  clear_has_countdown_time();
  if (countdown_time_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = countdown_time_;
    countdown_time_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void DBAction_GetItemRes_tbl_item_packet::set_allocated_countdown_time(::std::string* countdown_time) {
  if (countdown_time_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete countdown_time_;
  }
  if (countdown_time) {
    set_has_countdown_time();
    countdown_time_ = countdown_time;
  } else {
    clear_has_countdown_time();
    countdown_time_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:MsgPB.DBAction_GetItemRes.tbl_item_packet.countdown_time)
}

// optional string equip_randval = 13;
inline bool DBAction_GetItemRes_tbl_item_packet::has_equip_randval() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void DBAction_GetItemRes_tbl_item_packet::set_has_equip_randval() {
  _has_bits_[0] |= 0x00001000u;
}
inline void DBAction_GetItemRes_tbl_item_packet::clear_has_equip_randval() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void DBAction_GetItemRes_tbl_item_packet::clear_equip_randval() {
  if (equip_randval_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    equip_randval_->clear();
  }
  clear_has_equip_randval();
}
inline const ::std::string& DBAction_GetItemRes_tbl_item_packet::equip_randval() const {
  // @@protoc_insertion_point(field_get:MsgPB.DBAction_GetItemRes.tbl_item_packet.equip_randval)
  return *equip_randval_;
}
inline void DBAction_GetItemRes_tbl_item_packet::set_equip_randval(const ::std::string& value) {
  set_has_equip_randval();
  if (equip_randval_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    equip_randval_ = new ::std::string;
  }
  equip_randval_->assign(value);
  // @@protoc_insertion_point(field_set:MsgPB.DBAction_GetItemRes.tbl_item_packet.equip_randval)
}
inline void DBAction_GetItemRes_tbl_item_packet::set_equip_randval(const char* value) {
  set_has_equip_randval();
  if (equip_randval_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    equip_randval_ = new ::std::string;
  }
  equip_randval_->assign(value);
  // @@protoc_insertion_point(field_set_char:MsgPB.DBAction_GetItemRes.tbl_item_packet.equip_randval)
}
inline void DBAction_GetItemRes_tbl_item_packet::set_equip_randval(const char* value, size_t size) {
  set_has_equip_randval();
  if (equip_randval_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    equip_randval_ = new ::std::string;
  }
  equip_randval_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:MsgPB.DBAction_GetItemRes.tbl_item_packet.equip_randval)
}
inline ::std::string* DBAction_GetItemRes_tbl_item_packet::mutable_equip_randval() {
  set_has_equip_randval();
  if (equip_randval_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    equip_randval_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:MsgPB.DBAction_GetItemRes.tbl_item_packet.equip_randval)
  return equip_randval_;
}
inline ::std::string* DBAction_GetItemRes_tbl_item_packet::release_equip_randval() {
  clear_has_equip_randval();
  if (equip_randval_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = equip_randval_;
    equip_randval_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void DBAction_GetItemRes_tbl_item_packet::set_allocated_equip_randval(::std::string* equip_randval) {
  if (equip_randval_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete equip_randval_;
  }
  if (equip_randval) {
    set_has_equip_randval();
    equip_randval_ = equip_randval;
  } else {
    clear_has_equip_randval();
    equip_randval_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:MsgPB.DBAction_GetItemRes.tbl_item_packet.equip_randval)
}

// optional string build_tower_data = 14;
inline bool DBAction_GetItemRes_tbl_item_packet::has_build_tower_data() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void DBAction_GetItemRes_tbl_item_packet::set_has_build_tower_data() {
  _has_bits_[0] |= 0x00002000u;
}
inline void DBAction_GetItemRes_tbl_item_packet::clear_has_build_tower_data() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void DBAction_GetItemRes_tbl_item_packet::clear_build_tower_data() {
  if (build_tower_data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    build_tower_data_->clear();
  }
  clear_has_build_tower_data();
}
inline const ::std::string& DBAction_GetItemRes_tbl_item_packet::build_tower_data() const {
  // @@protoc_insertion_point(field_get:MsgPB.DBAction_GetItemRes.tbl_item_packet.build_tower_data)
  return *build_tower_data_;
}
inline void DBAction_GetItemRes_tbl_item_packet::set_build_tower_data(const ::std::string& value) {
  set_has_build_tower_data();
  if (build_tower_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    build_tower_data_ = new ::std::string;
  }
  build_tower_data_->assign(value);
  // @@protoc_insertion_point(field_set:MsgPB.DBAction_GetItemRes.tbl_item_packet.build_tower_data)
}
inline void DBAction_GetItemRes_tbl_item_packet::set_build_tower_data(const char* value) {
  set_has_build_tower_data();
  if (build_tower_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    build_tower_data_ = new ::std::string;
  }
  build_tower_data_->assign(value);
  // @@protoc_insertion_point(field_set_char:MsgPB.DBAction_GetItemRes.tbl_item_packet.build_tower_data)
}
inline void DBAction_GetItemRes_tbl_item_packet::set_build_tower_data(const char* value, size_t size) {
  set_has_build_tower_data();
  if (build_tower_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    build_tower_data_ = new ::std::string;
  }
  build_tower_data_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:MsgPB.DBAction_GetItemRes.tbl_item_packet.build_tower_data)
}
inline ::std::string* DBAction_GetItemRes_tbl_item_packet::mutable_build_tower_data() {
  set_has_build_tower_data();
  if (build_tower_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    build_tower_data_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:MsgPB.DBAction_GetItemRes.tbl_item_packet.build_tower_data)
  return build_tower_data_;
}
inline ::std::string* DBAction_GetItemRes_tbl_item_packet::release_build_tower_data() {
  clear_has_build_tower_data();
  if (build_tower_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = build_tower_data_;
    build_tower_data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void DBAction_GetItemRes_tbl_item_packet::set_allocated_build_tower_data(::std::string* build_tower_data) {
  if (build_tower_data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete build_tower_data_;
  }
  if (build_tower_data) {
    set_has_build_tower_data();
    build_tower_data_ = build_tower_data;
  } else {
    clear_has_build_tower_data();
    build_tower_data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:MsgPB.DBAction_GetItemRes.tbl_item_packet.build_tower_data)
}

// optional int32 durablemax = 15;
inline bool DBAction_GetItemRes_tbl_item_packet::has_durablemax() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void DBAction_GetItemRes_tbl_item_packet::set_has_durablemax() {
  _has_bits_[0] |= 0x00004000u;
}
inline void DBAction_GetItemRes_tbl_item_packet::clear_has_durablemax() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void DBAction_GetItemRes_tbl_item_packet::clear_durablemax() {
  durablemax_ = 0;
  clear_has_durablemax();
}
inline ::google::protobuf::int32 DBAction_GetItemRes_tbl_item_packet::durablemax() const {
  // @@protoc_insertion_point(field_get:MsgPB.DBAction_GetItemRes.tbl_item_packet.durablemax)
  return durablemax_;
}
inline void DBAction_GetItemRes_tbl_item_packet::set_durablemax(::google::protobuf::int32 value) {
  set_has_durablemax();
  durablemax_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.DBAction_GetItemRes.tbl_item_packet.durablemax)
}

// optional int64 auction_cooldown = 16;
inline bool DBAction_GetItemRes_tbl_item_packet::has_auction_cooldown() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void DBAction_GetItemRes_tbl_item_packet::set_has_auction_cooldown() {
  _has_bits_[0] |= 0x00008000u;
}
inline void DBAction_GetItemRes_tbl_item_packet::clear_has_auction_cooldown() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void DBAction_GetItemRes_tbl_item_packet::clear_auction_cooldown() {
  auction_cooldown_ = GOOGLE_LONGLONG(0);
  clear_has_auction_cooldown();
}
inline ::google::protobuf::int64 DBAction_GetItemRes_tbl_item_packet::auction_cooldown() const {
  // @@protoc_insertion_point(field_get:MsgPB.DBAction_GetItemRes.tbl_item_packet.auction_cooldown)
  return auction_cooldown_;
}
inline void DBAction_GetItemRes_tbl_item_packet::set_auction_cooldown(::google::protobuf::int64 value) {
  set_has_auction_cooldown();
  auction_cooldown_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.DBAction_GetItemRes.tbl_item_packet.auction_cooldown)
}

// optional int32 identified = 17;
inline bool DBAction_GetItemRes_tbl_item_packet::has_identified() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void DBAction_GetItemRes_tbl_item_packet::set_has_identified() {
  _has_bits_[0] |= 0x00010000u;
}
inline void DBAction_GetItemRes_tbl_item_packet::clear_has_identified() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void DBAction_GetItemRes_tbl_item_packet::clear_identified() {
  identified_ = 0;
  clear_has_identified();
}
inline ::google::protobuf::int32 DBAction_GetItemRes_tbl_item_packet::identified() const {
  // @@protoc_insertion_point(field_get:MsgPB.DBAction_GetItemRes.tbl_item_packet.identified)
  return identified_;
}
inline void DBAction_GetItemRes_tbl_item_packet::set_identified(::google::protobuf::int32 value) {
  set_has_identified();
  identified_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.DBAction_GetItemRes.tbl_item_packet.identified)
}

// optional string item_counter_info = 18;
inline bool DBAction_GetItemRes_tbl_item_packet::has_item_counter_info() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void DBAction_GetItemRes_tbl_item_packet::set_has_item_counter_info() {
  _has_bits_[0] |= 0x00020000u;
}
inline void DBAction_GetItemRes_tbl_item_packet::clear_has_item_counter_info() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void DBAction_GetItemRes_tbl_item_packet::clear_item_counter_info() {
  if (item_counter_info_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    item_counter_info_->clear();
  }
  clear_has_item_counter_info();
}
inline const ::std::string& DBAction_GetItemRes_tbl_item_packet::item_counter_info() const {
  // @@protoc_insertion_point(field_get:MsgPB.DBAction_GetItemRes.tbl_item_packet.item_counter_info)
  return *item_counter_info_;
}
inline void DBAction_GetItemRes_tbl_item_packet::set_item_counter_info(const ::std::string& value) {
  set_has_item_counter_info();
  if (item_counter_info_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    item_counter_info_ = new ::std::string;
  }
  item_counter_info_->assign(value);
  // @@protoc_insertion_point(field_set:MsgPB.DBAction_GetItemRes.tbl_item_packet.item_counter_info)
}
inline void DBAction_GetItemRes_tbl_item_packet::set_item_counter_info(const char* value) {
  set_has_item_counter_info();
  if (item_counter_info_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    item_counter_info_ = new ::std::string;
  }
  item_counter_info_->assign(value);
  // @@protoc_insertion_point(field_set_char:MsgPB.DBAction_GetItemRes.tbl_item_packet.item_counter_info)
}
inline void DBAction_GetItemRes_tbl_item_packet::set_item_counter_info(const char* value, size_t size) {
  set_has_item_counter_info();
  if (item_counter_info_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    item_counter_info_ = new ::std::string;
  }
  item_counter_info_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:MsgPB.DBAction_GetItemRes.tbl_item_packet.item_counter_info)
}
inline ::std::string* DBAction_GetItemRes_tbl_item_packet::mutable_item_counter_info() {
  set_has_item_counter_info();
  if (item_counter_info_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    item_counter_info_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:MsgPB.DBAction_GetItemRes.tbl_item_packet.item_counter_info)
  return item_counter_info_;
}
inline ::std::string* DBAction_GetItemRes_tbl_item_packet::release_item_counter_info() {
  clear_has_item_counter_info();
  if (item_counter_info_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = item_counter_info_;
    item_counter_info_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void DBAction_GetItemRes_tbl_item_packet::set_allocated_item_counter_info(::std::string* item_counter_info) {
  if (item_counter_info_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete item_counter_info_;
  }
  if (item_counter_info) {
    set_has_item_counter_info();
    item_counter_info_ = item_counter_info;
  } else {
    clear_has_item_counter_info();
    item_counter_info_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:MsgPB.DBAction_GetItemRes.tbl_item_packet.item_counter_info)
}

// optional string antique_info = 19;
inline bool DBAction_GetItemRes_tbl_item_packet::has_antique_info() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void DBAction_GetItemRes_tbl_item_packet::set_has_antique_info() {
  _has_bits_[0] |= 0x00040000u;
}
inline void DBAction_GetItemRes_tbl_item_packet::clear_has_antique_info() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void DBAction_GetItemRes_tbl_item_packet::clear_antique_info() {
  if (antique_info_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    antique_info_->clear();
  }
  clear_has_antique_info();
}
inline const ::std::string& DBAction_GetItemRes_tbl_item_packet::antique_info() const {
  // @@protoc_insertion_point(field_get:MsgPB.DBAction_GetItemRes.tbl_item_packet.antique_info)
  return *antique_info_;
}
inline void DBAction_GetItemRes_tbl_item_packet::set_antique_info(const ::std::string& value) {
  set_has_antique_info();
  if (antique_info_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    antique_info_ = new ::std::string;
  }
  antique_info_->assign(value);
  // @@protoc_insertion_point(field_set:MsgPB.DBAction_GetItemRes.tbl_item_packet.antique_info)
}
inline void DBAction_GetItemRes_tbl_item_packet::set_antique_info(const char* value) {
  set_has_antique_info();
  if (antique_info_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    antique_info_ = new ::std::string;
  }
  antique_info_->assign(value);
  // @@protoc_insertion_point(field_set_char:MsgPB.DBAction_GetItemRes.tbl_item_packet.antique_info)
}
inline void DBAction_GetItemRes_tbl_item_packet::set_antique_info(const char* value, size_t size) {
  set_has_antique_info();
  if (antique_info_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    antique_info_ = new ::std::string;
  }
  antique_info_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:MsgPB.DBAction_GetItemRes.tbl_item_packet.antique_info)
}
inline ::std::string* DBAction_GetItemRes_tbl_item_packet::mutable_antique_info() {
  set_has_antique_info();
  if (antique_info_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    antique_info_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:MsgPB.DBAction_GetItemRes.tbl_item_packet.antique_info)
  return antique_info_;
}
inline ::std::string* DBAction_GetItemRes_tbl_item_packet::release_antique_info() {
  clear_has_antique_info();
  if (antique_info_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = antique_info_;
    antique_info_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void DBAction_GetItemRes_tbl_item_packet::set_allocated_antique_info(::std::string* antique_info) {
  if (antique_info_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete antique_info_;
  }
  if (antique_info) {
    set_has_antique_info();
    antique_info_ = antique_info;
  } else {
    clear_has_antique_info();
    antique_info_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:MsgPB.DBAction_GetItemRes.tbl_item_packet.antique_info)
}

// -------------------------------------------------------------------

// DBAction_GetItemRes

// repeated .MsgPB.DBAction_GetItemRes.tbl_item_packet data = 1;
inline int DBAction_GetItemRes::data_size() const {
  return data_.size();
}
inline void DBAction_GetItemRes::clear_data() {
  data_.Clear();
}
inline const ::MsgPB::DBAction_GetItemRes_tbl_item_packet& DBAction_GetItemRes::data(int index) const {
  // @@protoc_insertion_point(field_get:MsgPB.DBAction_GetItemRes.data)
  return data_.Get(index);
}
inline ::MsgPB::DBAction_GetItemRes_tbl_item_packet* DBAction_GetItemRes::mutable_data(int index) {
  // @@protoc_insertion_point(field_mutable:MsgPB.DBAction_GetItemRes.data)
  return data_.Mutable(index);
}
inline ::MsgPB::DBAction_GetItemRes_tbl_item_packet* DBAction_GetItemRes::add_data() {
  // @@protoc_insertion_point(field_add:MsgPB.DBAction_GetItemRes.data)
  return data_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::MsgPB::DBAction_GetItemRes_tbl_item_packet >&
DBAction_GetItemRes::data() const {
  // @@protoc_insertion_point(field_list:MsgPB.DBAction_GetItemRes.data)
  return data_;
}
inline ::google::protobuf::RepeatedPtrField< ::MsgPB::DBAction_GetItemRes_tbl_item_packet >*
DBAction_GetItemRes::mutable_data() {
  // @@protoc_insertion_point(field_mutable_list:MsgPB.DBAction_GetItemRes.data)
  return &data_;
}

// -------------------------------------------------------------------

// DBAction_GetUserPlantRes_tbl_map_user_plant

// optional int64 iggid = 1;
inline bool DBAction_GetUserPlantRes_tbl_map_user_plant::has_iggid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DBAction_GetUserPlantRes_tbl_map_user_plant::set_has_iggid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DBAction_GetUserPlantRes_tbl_map_user_plant::clear_has_iggid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DBAction_GetUserPlantRes_tbl_map_user_plant::clear_iggid() {
  iggid_ = GOOGLE_LONGLONG(0);
  clear_has_iggid();
}
inline ::google::protobuf::int64 DBAction_GetUserPlantRes_tbl_map_user_plant::iggid() const {
  // @@protoc_insertion_point(field_get:MsgPB.DBAction_GetUserPlantRes.tbl_map_user_plant.iggid)
  return iggid_;
}
inline void DBAction_GetUserPlantRes_tbl_map_user_plant::set_iggid(::google::protobuf::int64 value) {
  set_has_iggid();
  iggid_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.DBAction_GetUserPlantRes.tbl_map_user_plant.iggid)
}

// optional int32 mapid = 2;
inline bool DBAction_GetUserPlantRes_tbl_map_user_plant::has_mapid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DBAction_GetUserPlantRes_tbl_map_user_plant::set_has_mapid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DBAction_GetUserPlantRes_tbl_map_user_plant::clear_has_mapid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DBAction_GetUserPlantRes_tbl_map_user_plant::clear_mapid() {
  mapid_ = 0;
  clear_has_mapid();
}
inline ::google::protobuf::int32 DBAction_GetUserPlantRes_tbl_map_user_plant::mapid() const {
  // @@protoc_insertion_point(field_get:MsgPB.DBAction_GetUserPlantRes.tbl_map_user_plant.mapid)
  return mapid_;
}
inline void DBAction_GetUserPlantRes_tbl_map_user_plant::set_mapid(::google::protobuf::int32 value) {
  set_has_mapid();
  mapid_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.DBAction_GetUserPlantRes.tbl_map_user_plant.mapid)
}

// optional int64 plant_id = 3;
inline bool DBAction_GetUserPlantRes_tbl_map_user_plant::has_plant_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DBAction_GetUserPlantRes_tbl_map_user_plant::set_has_plant_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DBAction_GetUserPlantRes_tbl_map_user_plant::clear_has_plant_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DBAction_GetUserPlantRes_tbl_map_user_plant::clear_plant_id() {
  plant_id_ = GOOGLE_LONGLONG(0);
  clear_has_plant_id();
}
inline ::google::protobuf::int64 DBAction_GetUserPlantRes_tbl_map_user_plant::plant_id() const {
  // @@protoc_insertion_point(field_get:MsgPB.DBAction_GetUserPlantRes.tbl_map_user_plant.plant_id)
  return plant_id_;
}
inline void DBAction_GetUserPlantRes_tbl_map_user_plant::set_plant_id(::google::protobuf::int64 value) {
  set_has_plant_id();
  plant_id_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.DBAction_GetUserPlantRes.tbl_map_user_plant.plant_id)
}

// optional int32 plant_type = 4;
inline bool DBAction_GetUserPlantRes_tbl_map_user_plant::has_plant_type() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void DBAction_GetUserPlantRes_tbl_map_user_plant::set_has_plant_type() {
  _has_bits_[0] |= 0x00000008u;
}
inline void DBAction_GetUserPlantRes_tbl_map_user_plant::clear_has_plant_type() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void DBAction_GetUserPlantRes_tbl_map_user_plant::clear_plant_type() {
  plant_type_ = 0;
  clear_has_plant_type();
}
inline ::google::protobuf::int32 DBAction_GetUserPlantRes_tbl_map_user_plant::plant_type() const {
  // @@protoc_insertion_point(field_get:MsgPB.DBAction_GetUserPlantRes.tbl_map_user_plant.plant_type)
  return plant_type_;
}
inline void DBAction_GetUserPlantRes_tbl_map_user_plant::set_plant_type(::google::protobuf::int32 value) {
  set_has_plant_type();
  plant_type_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.DBAction_GetUserPlantRes.tbl_map_user_plant.plant_type)
}

// optional int32 pos_x = 5;
inline bool DBAction_GetUserPlantRes_tbl_map_user_plant::has_pos_x() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void DBAction_GetUserPlantRes_tbl_map_user_plant::set_has_pos_x() {
  _has_bits_[0] |= 0x00000010u;
}
inline void DBAction_GetUserPlantRes_tbl_map_user_plant::clear_has_pos_x() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void DBAction_GetUserPlantRes_tbl_map_user_plant::clear_pos_x() {
  pos_x_ = 0;
  clear_has_pos_x();
}
inline ::google::protobuf::int32 DBAction_GetUserPlantRes_tbl_map_user_plant::pos_x() const {
  // @@protoc_insertion_point(field_get:MsgPB.DBAction_GetUserPlantRes.tbl_map_user_plant.pos_x)
  return pos_x_;
}
inline void DBAction_GetUserPlantRes_tbl_map_user_plant::set_pos_x(::google::protobuf::int32 value) {
  set_has_pos_x();
  pos_x_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.DBAction_GetUserPlantRes.tbl_map_user_plant.pos_x)
}

// optional int32 pos_y = 6;
inline bool DBAction_GetUserPlantRes_tbl_map_user_plant::has_pos_y() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void DBAction_GetUserPlantRes_tbl_map_user_plant::set_has_pos_y() {
  _has_bits_[0] |= 0x00000020u;
}
inline void DBAction_GetUserPlantRes_tbl_map_user_plant::clear_has_pos_y() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void DBAction_GetUserPlantRes_tbl_map_user_plant::clear_pos_y() {
  pos_y_ = 0;
  clear_has_pos_y();
}
inline ::google::protobuf::int32 DBAction_GetUserPlantRes_tbl_map_user_plant::pos_y() const {
  // @@protoc_insertion_point(field_get:MsgPB.DBAction_GetUserPlantRes.tbl_map_user_plant.pos_y)
  return pos_y_;
}
inline void DBAction_GetUserPlantRes_tbl_map_user_plant::set_pos_y(::google::protobuf::int32 value) {
  set_has_pos_y();
  pos_y_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.DBAction_GetUserPlantRes.tbl_map_user_plant.pos_y)
}

// optional int64 begin_time = 7;
inline bool DBAction_GetUserPlantRes_tbl_map_user_plant::has_begin_time() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void DBAction_GetUserPlantRes_tbl_map_user_plant::set_has_begin_time() {
  _has_bits_[0] |= 0x00000040u;
}
inline void DBAction_GetUserPlantRes_tbl_map_user_plant::clear_has_begin_time() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void DBAction_GetUserPlantRes_tbl_map_user_plant::clear_begin_time() {
  begin_time_ = GOOGLE_LONGLONG(0);
  clear_has_begin_time();
}
inline ::google::protobuf::int64 DBAction_GetUserPlantRes_tbl_map_user_plant::begin_time() const {
  // @@protoc_insertion_point(field_get:MsgPB.DBAction_GetUserPlantRes.tbl_map_user_plant.begin_time)
  return begin_time_;
}
inline void DBAction_GetUserPlantRes_tbl_map_user_plant::set_begin_time(::google::protobuf::int64 value) {
  set_has_begin_time();
  begin_time_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.DBAction_GetUserPlantRes.tbl_map_user_plant.begin_time)
}

// optional int32 grow_stage = 8;
inline bool DBAction_GetUserPlantRes_tbl_map_user_plant::has_grow_stage() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void DBAction_GetUserPlantRes_tbl_map_user_plant::set_has_grow_stage() {
  _has_bits_[0] |= 0x00000080u;
}
inline void DBAction_GetUserPlantRes_tbl_map_user_plant::clear_has_grow_stage() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void DBAction_GetUserPlantRes_tbl_map_user_plant::clear_grow_stage() {
  grow_stage_ = 0;
  clear_has_grow_stage();
}
inline ::google::protobuf::int32 DBAction_GetUserPlantRes_tbl_map_user_plant::grow_stage() const {
  // @@protoc_insertion_point(field_get:MsgPB.DBAction_GetUserPlantRes.tbl_map_user_plant.grow_stage)
  return grow_stage_;
}
inline void DBAction_GetUserPlantRes_tbl_map_user_plant::set_grow_stage(::google::protobuf::int32 value) {
  set_has_grow_stage();
  grow_stage_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.DBAction_GetUserPlantRes.tbl_map_user_plant.grow_stage)
}

// optional int32 grow_time = 9;
inline bool DBAction_GetUserPlantRes_tbl_map_user_plant::has_grow_time() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void DBAction_GetUserPlantRes_tbl_map_user_plant::set_has_grow_time() {
  _has_bits_[0] |= 0x00000100u;
}
inline void DBAction_GetUserPlantRes_tbl_map_user_plant::clear_has_grow_time() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void DBAction_GetUserPlantRes_tbl_map_user_plant::clear_grow_time() {
  grow_time_ = 0;
  clear_has_grow_time();
}
inline ::google::protobuf::int32 DBAction_GetUserPlantRes_tbl_map_user_plant::grow_time() const {
  // @@protoc_insertion_point(field_get:MsgPB.DBAction_GetUserPlantRes.tbl_map_user_plant.grow_time)
  return grow_time_;
}
inline void DBAction_GetUserPlantRes_tbl_map_user_plant::set_grow_time(::google::protobuf::int32 value) {
  set_has_grow_time();
  grow_time_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.DBAction_GetUserPlantRes.tbl_map_user_plant.grow_time)
}

// -------------------------------------------------------------------

// DBAction_GetUserPlantRes

// repeated .MsgPB.DBAction_GetUserPlantRes.tbl_map_user_plant plant = 1;
inline int DBAction_GetUserPlantRes::plant_size() const {
  return plant_.size();
}
inline void DBAction_GetUserPlantRes::clear_plant() {
  plant_.Clear();
}
inline const ::MsgPB::DBAction_GetUserPlantRes_tbl_map_user_plant& DBAction_GetUserPlantRes::plant(int index) const {
  // @@protoc_insertion_point(field_get:MsgPB.DBAction_GetUserPlantRes.plant)
  return plant_.Get(index);
}
inline ::MsgPB::DBAction_GetUserPlantRes_tbl_map_user_plant* DBAction_GetUserPlantRes::mutable_plant(int index) {
  // @@protoc_insertion_point(field_mutable:MsgPB.DBAction_GetUserPlantRes.plant)
  return plant_.Mutable(index);
}
inline ::MsgPB::DBAction_GetUserPlantRes_tbl_map_user_plant* DBAction_GetUserPlantRes::add_plant() {
  // @@protoc_insertion_point(field_add:MsgPB.DBAction_GetUserPlantRes.plant)
  return plant_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::MsgPB::DBAction_GetUserPlantRes_tbl_map_user_plant >&
DBAction_GetUserPlantRes::plant() const {
  // @@protoc_insertion_point(field_list:MsgPB.DBAction_GetUserPlantRes.plant)
  return plant_;
}
inline ::google::protobuf::RepeatedPtrField< ::MsgPB::DBAction_GetUserPlantRes_tbl_map_user_plant >*
DBAction_GetUserPlantRes::mutable_plant() {
  // @@protoc_insertion_point(field_mutable_list:MsgPB.DBAction_GetUserPlantRes.plant)
  return &plant_;
}

// -------------------------------------------------------------------

// DBAction_GetUserAchieveRes_tbl_user_achieve

// optional int64 auto_id = 1;
inline bool DBAction_GetUserAchieveRes_tbl_user_achieve::has_auto_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DBAction_GetUserAchieveRes_tbl_user_achieve::set_has_auto_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DBAction_GetUserAchieveRes_tbl_user_achieve::clear_has_auto_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DBAction_GetUserAchieveRes_tbl_user_achieve::clear_auto_id() {
  auto_id_ = GOOGLE_LONGLONG(0);
  clear_has_auto_id();
}
inline ::google::protobuf::int64 DBAction_GetUserAchieveRes_tbl_user_achieve::auto_id() const {
  // @@protoc_insertion_point(field_get:MsgPB.DBAction_GetUserAchieveRes.tbl_user_achieve.auto_id)
  return auto_id_;
}
inline void DBAction_GetUserAchieveRes_tbl_user_achieve::set_auto_id(::google::protobuf::int64 value) {
  set_has_auto_id();
  auto_id_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.DBAction_GetUserAchieveRes.tbl_user_achieve.auto_id)
}

// optional int64 iggid = 2;
inline bool DBAction_GetUserAchieveRes_tbl_user_achieve::has_iggid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DBAction_GetUserAchieveRes_tbl_user_achieve::set_has_iggid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DBAction_GetUserAchieveRes_tbl_user_achieve::clear_has_iggid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DBAction_GetUserAchieveRes_tbl_user_achieve::clear_iggid() {
  iggid_ = GOOGLE_LONGLONG(0);
  clear_has_iggid();
}
inline ::google::protobuf::int64 DBAction_GetUserAchieveRes_tbl_user_achieve::iggid() const {
  // @@protoc_insertion_point(field_get:MsgPB.DBAction_GetUserAchieveRes.tbl_user_achieve.iggid)
  return iggid_;
}
inline void DBAction_GetUserAchieveRes_tbl_user_achieve::set_iggid(::google::protobuf::int64 value) {
  set_has_iggid();
  iggid_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.DBAction_GetUserAchieveRes.tbl_user_achieve.iggid)
}

// optional int64 uuid = 3;
inline bool DBAction_GetUserAchieveRes_tbl_user_achieve::has_uuid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DBAction_GetUserAchieveRes_tbl_user_achieve::set_has_uuid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DBAction_GetUserAchieveRes_tbl_user_achieve::clear_has_uuid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DBAction_GetUserAchieveRes_tbl_user_achieve::clear_uuid() {
  uuid_ = GOOGLE_LONGLONG(0);
  clear_has_uuid();
}
inline ::google::protobuf::int64 DBAction_GetUserAchieveRes_tbl_user_achieve::uuid() const {
  // @@protoc_insertion_point(field_get:MsgPB.DBAction_GetUserAchieveRes.tbl_user_achieve.uuid)
  return uuid_;
}
inline void DBAction_GetUserAchieveRes_tbl_user_achieve::set_uuid(::google::protobuf::int64 value) {
  set_has_uuid();
  uuid_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.DBAction_GetUserAchieveRes.tbl_user_achieve.uuid)
}

// optional int32 status = 4;
inline bool DBAction_GetUserAchieveRes_tbl_user_achieve::has_status() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void DBAction_GetUserAchieveRes_tbl_user_achieve::set_has_status() {
  _has_bits_[0] |= 0x00000008u;
}
inline void DBAction_GetUserAchieveRes_tbl_user_achieve::clear_has_status() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void DBAction_GetUserAchieveRes_tbl_user_achieve::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::google::protobuf::int32 DBAction_GetUserAchieveRes_tbl_user_achieve::status() const {
  // @@protoc_insertion_point(field_get:MsgPB.DBAction_GetUserAchieveRes.tbl_user_achieve.status)
  return status_;
}
inline void DBAction_GetUserAchieveRes_tbl_user_achieve::set_status(::google::protobuf::int32 value) {
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.DBAction_GetUserAchieveRes.tbl_user_achieve.status)
}

// optional int32 value = 5;
inline bool DBAction_GetUserAchieveRes_tbl_user_achieve::has_value() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void DBAction_GetUserAchieveRes_tbl_user_achieve::set_has_value() {
  _has_bits_[0] |= 0x00000010u;
}
inline void DBAction_GetUserAchieveRes_tbl_user_achieve::clear_has_value() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void DBAction_GetUserAchieveRes_tbl_user_achieve::clear_value() {
  value_ = 0;
  clear_has_value();
}
inline ::google::protobuf::int32 DBAction_GetUserAchieveRes_tbl_user_achieve::value() const {
  // @@protoc_insertion_point(field_get:MsgPB.DBAction_GetUserAchieveRes.tbl_user_achieve.value)
  return value_;
}
inline void DBAction_GetUserAchieveRes_tbl_user_achieve::set_value(::google::protobuf::int32 value) {
  set_has_value();
  value_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.DBAction_GetUserAchieveRes.tbl_user_achieve.value)
}

// optional int64 update_time = 6;
inline bool DBAction_GetUserAchieveRes_tbl_user_achieve::has_update_time() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void DBAction_GetUserAchieveRes_tbl_user_achieve::set_has_update_time() {
  _has_bits_[0] |= 0x00000020u;
}
inline void DBAction_GetUserAchieveRes_tbl_user_achieve::clear_has_update_time() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void DBAction_GetUserAchieveRes_tbl_user_achieve::clear_update_time() {
  update_time_ = GOOGLE_LONGLONG(0);
  clear_has_update_time();
}
inline ::google::protobuf::int64 DBAction_GetUserAchieveRes_tbl_user_achieve::update_time() const {
  // @@protoc_insertion_point(field_get:MsgPB.DBAction_GetUserAchieveRes.tbl_user_achieve.update_time)
  return update_time_;
}
inline void DBAction_GetUserAchieveRes_tbl_user_achieve::set_update_time(::google::protobuf::int64 value) {
  set_has_update_time();
  update_time_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.DBAction_GetUserAchieveRes.tbl_user_achieve.update_time)
}

// optional int64 complete_time = 7;
inline bool DBAction_GetUserAchieveRes_tbl_user_achieve::has_complete_time() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void DBAction_GetUserAchieveRes_tbl_user_achieve::set_has_complete_time() {
  _has_bits_[0] |= 0x00000040u;
}
inline void DBAction_GetUserAchieveRes_tbl_user_achieve::clear_has_complete_time() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void DBAction_GetUserAchieveRes_tbl_user_achieve::clear_complete_time() {
  complete_time_ = GOOGLE_LONGLONG(0);
  clear_has_complete_time();
}
inline ::google::protobuf::int64 DBAction_GetUserAchieveRes_tbl_user_achieve::complete_time() const {
  // @@protoc_insertion_point(field_get:MsgPB.DBAction_GetUserAchieveRes.tbl_user_achieve.complete_time)
  return complete_time_;
}
inline void DBAction_GetUserAchieveRes_tbl_user_achieve::set_complete_time(::google::protobuf::int64 value) {
  set_has_complete_time();
  complete_time_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.DBAction_GetUserAchieveRes.tbl_user_achieve.complete_time)
}

// optional int32 currently = 8;
inline bool DBAction_GetUserAchieveRes_tbl_user_achieve::has_currently() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void DBAction_GetUserAchieveRes_tbl_user_achieve::set_has_currently() {
  _has_bits_[0] |= 0x00000080u;
}
inline void DBAction_GetUserAchieveRes_tbl_user_achieve::clear_has_currently() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void DBAction_GetUserAchieveRes_tbl_user_achieve::clear_currently() {
  currently_ = 0;
  clear_has_currently();
}
inline ::google::protobuf::int32 DBAction_GetUserAchieveRes_tbl_user_achieve::currently() const {
  // @@protoc_insertion_point(field_get:MsgPB.DBAction_GetUserAchieveRes.tbl_user_achieve.currently)
  return currently_;
}
inline void DBAction_GetUserAchieveRes_tbl_user_achieve::set_currently(::google::protobuf::int32 value) {
  set_has_currently();
  currently_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.DBAction_GetUserAchieveRes.tbl_user_achieve.currently)
}

// optional string source = 9;
inline bool DBAction_GetUserAchieveRes_tbl_user_achieve::has_source() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void DBAction_GetUserAchieveRes_tbl_user_achieve::set_has_source() {
  _has_bits_[0] |= 0x00000100u;
}
inline void DBAction_GetUserAchieveRes_tbl_user_achieve::clear_has_source() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void DBAction_GetUserAchieveRes_tbl_user_achieve::clear_source() {
  if (source_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    source_->clear();
  }
  clear_has_source();
}
inline const ::std::string& DBAction_GetUserAchieveRes_tbl_user_achieve::source() const {
  // @@protoc_insertion_point(field_get:MsgPB.DBAction_GetUserAchieveRes.tbl_user_achieve.source)
  return *source_;
}
inline void DBAction_GetUserAchieveRes_tbl_user_achieve::set_source(const ::std::string& value) {
  set_has_source();
  if (source_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    source_ = new ::std::string;
  }
  source_->assign(value);
  // @@protoc_insertion_point(field_set:MsgPB.DBAction_GetUserAchieveRes.tbl_user_achieve.source)
}
inline void DBAction_GetUserAchieveRes_tbl_user_achieve::set_source(const char* value) {
  set_has_source();
  if (source_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    source_ = new ::std::string;
  }
  source_->assign(value);
  // @@protoc_insertion_point(field_set_char:MsgPB.DBAction_GetUserAchieveRes.tbl_user_achieve.source)
}
inline void DBAction_GetUserAchieveRes_tbl_user_achieve::set_source(const char* value, size_t size) {
  set_has_source();
  if (source_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    source_ = new ::std::string;
  }
  source_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:MsgPB.DBAction_GetUserAchieveRes.tbl_user_achieve.source)
}
inline ::std::string* DBAction_GetUserAchieveRes_tbl_user_achieve::mutable_source() {
  set_has_source();
  if (source_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    source_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:MsgPB.DBAction_GetUserAchieveRes.tbl_user_achieve.source)
  return source_;
}
inline ::std::string* DBAction_GetUserAchieveRes_tbl_user_achieve::release_source() {
  clear_has_source();
  if (source_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = source_;
    source_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void DBAction_GetUserAchieveRes_tbl_user_achieve::set_allocated_source(::std::string* source) {
  if (source_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete source_;
  }
  if (source) {
    set_has_source();
    source_ = source;
  } else {
    clear_has_source();
    source_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:MsgPB.DBAction_GetUserAchieveRes.tbl_user_achieve.source)
}

// -------------------------------------------------------------------

// DBAction_GetUserAchieveRes

// repeated .MsgPB.DBAction_GetUserAchieveRes.tbl_user_achieve data = 1;
inline int DBAction_GetUserAchieveRes::data_size() const {
  return data_.size();
}
inline void DBAction_GetUserAchieveRes::clear_data() {
  data_.Clear();
}
inline const ::MsgPB::DBAction_GetUserAchieveRes_tbl_user_achieve& DBAction_GetUserAchieveRes::data(int index) const {
  // @@protoc_insertion_point(field_get:MsgPB.DBAction_GetUserAchieveRes.data)
  return data_.Get(index);
}
inline ::MsgPB::DBAction_GetUserAchieveRes_tbl_user_achieve* DBAction_GetUserAchieveRes::mutable_data(int index) {
  // @@protoc_insertion_point(field_mutable:MsgPB.DBAction_GetUserAchieveRes.data)
  return data_.Mutable(index);
}
inline ::MsgPB::DBAction_GetUserAchieveRes_tbl_user_achieve* DBAction_GetUserAchieveRes::add_data() {
  // @@protoc_insertion_point(field_add:MsgPB.DBAction_GetUserAchieveRes.data)
  return data_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::MsgPB::DBAction_GetUserAchieveRes_tbl_user_achieve >&
DBAction_GetUserAchieveRes::data() const {
  // @@protoc_insertion_point(field_list:MsgPB.DBAction_GetUserAchieveRes.data)
  return data_;
}
inline ::google::protobuf::RepeatedPtrField< ::MsgPB::DBAction_GetUserAchieveRes_tbl_user_achieve >*
DBAction_GetUserAchieveRes::mutable_data() {
  // @@protoc_insertion_point(field_mutable_list:MsgPB.DBAction_GetUserAchieveRes.data)
  return &data_;
}

// -------------------------------------------------------------------

// MsgDBAction

// optional .MsgPB.EMsgType msgType = 1 [default = _MSG_DB_ACTION];
inline bool MsgDBAction::has_msgtype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgDBAction::set_has_msgtype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgDBAction::clear_has_msgtype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgDBAction::clear_msgtype() {
  msgtype_ = 9207;
  clear_has_msgtype();
}
inline ::MsgPB::EMsgType MsgDBAction::msgtype() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgDBAction.msgType)
  return static_cast< ::MsgPB::EMsgType >(msgtype_);
}
inline void MsgDBAction::set_msgtype(::MsgPB::EMsgType value) {
  assert(::MsgPB::EMsgType_IsValid(value));
  set_has_msgtype();
  msgtype_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgDBAction.msgType)
}

// optional int64 iggid = 2;
inline bool MsgDBAction::has_iggid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MsgDBAction::set_has_iggid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MsgDBAction::clear_has_iggid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MsgDBAction::clear_iggid() {
  iggid_ = GOOGLE_LONGLONG(0);
  clear_has_iggid();
}
inline ::google::protobuf::int64 MsgDBAction::iggid() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgDBAction.iggid)
  return iggid_;
}
inline void MsgDBAction::set_iggid(::google::protobuf::int64 value) {
  set_has_iggid();
  iggid_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgDBAction.iggid)
}

// optional bool IsTail = 3;
inline bool MsgDBAction::has_istail() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MsgDBAction::set_has_istail() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MsgDBAction::clear_has_istail() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MsgDBAction::clear_istail() {
  istail_ = false;
  clear_has_istail();
}
inline bool MsgDBAction::istail() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgDBAction.IsTail)
  return istail_;
}
inline void MsgDBAction::set_istail(bool value) {
  set_has_istail();
  istail_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgDBAction.IsTail)
}

// optional int32 mapid = 4;
inline bool MsgDBAction::has_mapid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MsgDBAction::set_has_mapid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MsgDBAction::clear_has_mapid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MsgDBAction::clear_mapid() {
  mapid_ = 0;
  clear_has_mapid();
}
inline ::google::protobuf::int32 MsgDBAction::mapid() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgDBAction.mapid)
  return mapid_;
}
inline void MsgDBAction::set_mapid(::google::protobuf::int32 value) {
  set_has_mapid();
  mapid_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgDBAction.mapid)
}

// optional int64 context_data = 5;
inline bool MsgDBAction::has_context_data() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void MsgDBAction::set_has_context_data() {
  _has_bits_[0] |= 0x00000010u;
}
inline void MsgDBAction::clear_has_context_data() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void MsgDBAction::clear_context_data() {
  context_data_ = GOOGLE_LONGLONG(0);
  clear_has_context_data();
}
inline ::google::protobuf::int64 MsgDBAction::context_data() const {
  // @@protoc_insertion_point(field_get:MsgPB.MsgDBAction.context_data)
  return context_data_;
}
inline void MsgDBAction::set_context_data(::google::protobuf::int64 value) {
  set_has_context_data();
  context_data_ = value;
  // @@protoc_insertion_point(field_set:MsgPB.MsgDBAction.context_data)
}

// optional int64 get_item_req = 100;
inline bool MsgDBAction::has_get_item_req() const {
  return action_case() == kGetItemReq;
}
inline void MsgDBAction::set_has_get_item_req() {
  _oneof_case_[0] = kGetItemReq;
}
inline void MsgDBAction::clear_get_item_req() {
  if (has_get_item_req()) {
    action_.get_item_req_ = GOOGLE_LONGLONG(0);
    clear_has_action();
  }
}
inline ::google::protobuf::int64 MsgDBAction::get_item_req() const {
  if (has_get_item_req()) {
    return action_.get_item_req_;
  }
  return GOOGLE_LONGLONG(0);
}
inline void MsgDBAction::set_get_item_req(::google::protobuf::int64 value) {
  if (!has_get_item_req()) {
    clear_action();
    set_has_get_item_req();
  }
  action_.get_item_req_ = value;
}

// optional .MsgPB.DBAction_GetItemRes get_item_res = 101;
inline bool MsgDBAction::has_get_item_res() const {
  return action_case() == kGetItemRes;
}
inline void MsgDBAction::set_has_get_item_res() {
  _oneof_case_[0] = kGetItemRes;
}
inline void MsgDBAction::clear_get_item_res() {
  if (has_get_item_res()) {
    delete action_.get_item_res_;
    clear_has_action();
  }
}
inline const ::MsgPB::DBAction_GetItemRes& MsgDBAction::get_item_res() const {
  return has_get_item_res() ? *action_.get_item_res_
                      : ::MsgPB::DBAction_GetItemRes::default_instance();
}
inline ::MsgPB::DBAction_GetItemRes* MsgDBAction::mutable_get_item_res() {
  if (!has_get_item_res()) {
    clear_action();
    set_has_get_item_res();
    action_.get_item_res_ = new ::MsgPB::DBAction_GetItemRes;
  }
  return action_.get_item_res_;
}
inline ::MsgPB::DBAction_GetItemRes* MsgDBAction::release_get_item_res() {
  if (has_get_item_res()) {
    clear_has_action();
    ::MsgPB::DBAction_GetItemRes* temp = action_.get_item_res_;
    action_.get_item_res_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void MsgDBAction::set_allocated_get_item_res(::MsgPB::DBAction_GetItemRes* get_item_res) {
  clear_action();
  if (get_item_res) {
    set_has_get_item_res();
    action_.get_item_res_ = get_item_res;
  }
}

// optional int64 get_plant_req = 102;
inline bool MsgDBAction::has_get_plant_req() const {
  return action_case() == kGetPlantReq;
}
inline void MsgDBAction::set_has_get_plant_req() {
  _oneof_case_[0] = kGetPlantReq;
}
inline void MsgDBAction::clear_get_plant_req() {
  if (has_get_plant_req()) {
    action_.get_plant_req_ = GOOGLE_LONGLONG(0);
    clear_has_action();
  }
}
inline ::google::protobuf::int64 MsgDBAction::get_plant_req() const {
  if (has_get_plant_req()) {
    return action_.get_plant_req_;
  }
  return GOOGLE_LONGLONG(0);
}
inline void MsgDBAction::set_get_plant_req(::google::protobuf::int64 value) {
  if (!has_get_plant_req()) {
    clear_action();
    set_has_get_plant_req();
  }
  action_.get_plant_req_ = value;
}

// optional .MsgPB.DBAction_GetUserPlantRes get_user_plant_res = 103;
inline bool MsgDBAction::has_get_user_plant_res() const {
  return action_case() == kGetUserPlantRes;
}
inline void MsgDBAction::set_has_get_user_plant_res() {
  _oneof_case_[0] = kGetUserPlantRes;
}
inline void MsgDBAction::clear_get_user_plant_res() {
  if (has_get_user_plant_res()) {
    delete action_.get_user_plant_res_;
    clear_has_action();
  }
}
inline const ::MsgPB::DBAction_GetUserPlantRes& MsgDBAction::get_user_plant_res() const {
  return has_get_user_plant_res() ? *action_.get_user_plant_res_
                      : ::MsgPB::DBAction_GetUserPlantRes::default_instance();
}
inline ::MsgPB::DBAction_GetUserPlantRes* MsgDBAction::mutable_get_user_plant_res() {
  if (!has_get_user_plant_res()) {
    clear_action();
    set_has_get_user_plant_res();
    action_.get_user_plant_res_ = new ::MsgPB::DBAction_GetUserPlantRes;
  }
  return action_.get_user_plant_res_;
}
inline ::MsgPB::DBAction_GetUserPlantRes* MsgDBAction::release_get_user_plant_res() {
  if (has_get_user_plant_res()) {
    clear_has_action();
    ::MsgPB::DBAction_GetUserPlantRes* temp = action_.get_user_plant_res_;
    action_.get_user_plant_res_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void MsgDBAction::set_allocated_get_user_plant_res(::MsgPB::DBAction_GetUserPlantRes* get_user_plant_res) {
  clear_action();
  if (get_user_plant_res) {
    set_has_get_user_plant_res();
    action_.get_user_plant_res_ = get_user_plant_res;
  }
}

// optional int64 get_achieve_req = 104;
inline bool MsgDBAction::has_get_achieve_req() const {
  return action_case() == kGetAchieveReq;
}
inline void MsgDBAction::set_has_get_achieve_req() {
  _oneof_case_[0] = kGetAchieveReq;
}
inline void MsgDBAction::clear_get_achieve_req() {
  if (has_get_achieve_req()) {
    action_.get_achieve_req_ = GOOGLE_LONGLONG(0);
    clear_has_action();
  }
}
inline ::google::protobuf::int64 MsgDBAction::get_achieve_req() const {
  if (has_get_achieve_req()) {
    return action_.get_achieve_req_;
  }
  return GOOGLE_LONGLONG(0);
}
inline void MsgDBAction::set_get_achieve_req(::google::protobuf::int64 value) {
  if (!has_get_achieve_req()) {
    clear_action();
    set_has_get_achieve_req();
  }
  action_.get_achieve_req_ = value;
}

// optional .MsgPB.DBAction_GetUserAchieveRes get_user_achieve_res = 105;
inline bool MsgDBAction::has_get_user_achieve_res() const {
  return action_case() == kGetUserAchieveRes;
}
inline void MsgDBAction::set_has_get_user_achieve_res() {
  _oneof_case_[0] = kGetUserAchieveRes;
}
inline void MsgDBAction::clear_get_user_achieve_res() {
  if (has_get_user_achieve_res()) {
    delete action_.get_user_achieve_res_;
    clear_has_action();
  }
}
inline const ::MsgPB::DBAction_GetUserAchieveRes& MsgDBAction::get_user_achieve_res() const {
  return has_get_user_achieve_res() ? *action_.get_user_achieve_res_
                      : ::MsgPB::DBAction_GetUserAchieveRes::default_instance();
}
inline ::MsgPB::DBAction_GetUserAchieveRes* MsgDBAction::mutable_get_user_achieve_res() {
  if (!has_get_user_achieve_res()) {
    clear_action();
    set_has_get_user_achieve_res();
    action_.get_user_achieve_res_ = new ::MsgPB::DBAction_GetUserAchieveRes;
  }
  return action_.get_user_achieve_res_;
}
inline ::MsgPB::DBAction_GetUserAchieveRes* MsgDBAction::release_get_user_achieve_res() {
  if (has_get_user_achieve_res()) {
    clear_has_action();
    ::MsgPB::DBAction_GetUserAchieveRes* temp = action_.get_user_achieve_res_;
    action_.get_user_achieve_res_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void MsgDBAction::set_allocated_get_user_achieve_res(::MsgPB::DBAction_GetUserAchieveRes* get_user_achieve_res) {
  clear_action();
  if (get_user_achieve_res) {
    set_has_get_user_achieve_res();
    action_.get_user_achieve_res_ = get_user_achieve_res;
  }
}

inline bool MsgDBAction::has_action() {
  return action_case() != ACTION_NOT_SET;
}
inline void MsgDBAction::clear_has_action() {
  _oneof_case_[0] = ACTION_NOT_SET;
}
inline MsgDBAction::ActionCase MsgDBAction::action_case() const {
  return MsgDBAction::ActionCase(_oneof_case_[0]);
}

// @@protoc_insertion_point(namespace_scope)

}  // namespace MsgPB

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_MsgDBAction_2eproto__INCLUDED
