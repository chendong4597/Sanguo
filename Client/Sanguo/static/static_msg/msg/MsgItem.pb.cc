// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MsgItem.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "MsgItem.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace MsgPB {

namespace {

const ::google::protobuf::Descriptor* MsgMaterialData_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgMaterialData_reflection_ = NULL;
const ::google::protobuf::Descriptor* PBTowerBuildData_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PBTowerBuildData_reflection_ = NULL;
const ::google::protobuf::Descriptor* PBTowerBuildData_BuildTypeLevelInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PBTowerBuildData_BuildTypeLevelInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgItemCounter_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgItemCounter_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgItemCounters_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgItemCounters_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgItemCommonData_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgItemCommonData_reflection_ = NULL;
const ::google::protobuf::Descriptor* ServerEquipInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ServerEquipInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* ItemPacketCapabilityInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ItemPacketCapabilityInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgItemPacketCapabilityGS2C_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgItemPacketCapabilityGS2C_reflection_ = NULL;
const ::google::protobuf::Descriptor* S_ItemPacketPos_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  S_ItemPacketPos_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgItemPacketPosGS2C_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgItemPacketPosGS2C_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgItemDataGS2C_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgItemDataGS2C_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgItemDataGS2C_ItemData_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgItemDataGS2C_ItemData_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgItemRemoveGS2C_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgItemRemoveGS2C_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgItemExchangeC2GS_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgItemExchangeC2GS_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgItemExchangeResultGS2C_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgItemExchangeResultGS2C_reflection_ = NULL;
const ::google::protobuf::Descriptor* ItemPacketPosSyncData_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ItemPacketPosSyncData_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgSyncItemPacketPosC2GS_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgSyncItemPacketPosC2GS_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgItemPosData_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgItemPosData_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgSyncItemPacketPosGS2C_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgSyncItemPacketPosGS2C_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgItemApartC2GS_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgItemApartC2GS_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgItemApartResultGS2C_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgItemApartResultGS2C_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgItemAddItemPacketC2GS_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgItemAddItemPacketC2GS_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgItemAddItemPacketResultGS2C_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgItemAddItemPacketResultGS2C_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgItemRentItemPacketC2GS_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgItemRentItemPacketC2GS_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgItemRentItemPacketResultGS2C_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgItemRentItemPacketResultGS2C_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgItemDelC2GS_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgItemDelC2GS_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgItemDelResultGS2C_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgItemDelResultGS2C_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgItemDelRecoveryC2GS_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgItemDelRecoveryC2GS_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgItemDelRecoveryResultGS2C_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgItemDelRecoveryResultGS2C_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgItemEquipC2GS_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgItemEquipC2GS_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgItemEquipResultC2GS_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgItemEquipResultC2GS_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgItemPlayerEquipNotifyS2C_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgItemPlayerEquipNotifyS2C_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgItemOtherPlayerChangeEquip_S2C_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgItemOtherPlayerChangeEquip_S2C_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgItemUseC2S_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgItemUseC2S_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgItemUseResultS2C_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgItemUseResultS2C_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgPacketSizeData_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgPacketSizeData_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgItemSyncItemDataMS2GS_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgItemSyncItemDataMS2GS_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgItemSyncItemDataMS2MCS_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgItemSyncItemDataMS2MCS_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgItemClientSyncInitItemC2GS_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgItemClientSyncInitItemC2GS_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgItemClientSyncAddItemC2GS_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgItemClientSyncAddItemC2GS_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgItemClientSyncDelItemC2GS_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgItemClientSyncDelItemC2GS_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgItemShortcutS2C_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgItemShortcutS2C_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgItemShortcutS2C_ShortcutInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgItemShortcutS2C_ShortcutInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgItemShortcutSetC2S_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgItemShortcutSetC2S_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgItemEquipAttrLockC2S_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgItemEquipAttrLockC2S_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgItemEquipAttrLockS2C_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgItemEquipAttrLockS2C_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgItemEquipAttrWashC2S_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgItemEquipAttrWashC2S_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgItemEquipAttrWashS2C_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgItemEquipAttrWashS2C_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgItemEquipAttrSaveC2S_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgItemEquipAttrSaveC2S_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgItemEquipAttrSaveS2C_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgItemEquipAttrSaveS2C_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgItemEquipMagicSacrificeC2S_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgItemEquipMagicSacrificeC2S_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgItemEquipMagicSacrificeS2C_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgItemEquipMagicSacrificeS2C_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgItemEquipMagicInjectionC2S_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgItemEquipMagicInjectionC2S_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgItemEquipMagicInjectionS2C_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgItemEquipMagicInjectionS2C_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgItemEquipRepairC2S_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgItemEquipRepairC2S_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgItemEquipRepairS2C_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgItemEquipRepairS2C_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgItemEquipRepairS2C_RepairUuid_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgItemEquipRepairS2C_RepairUuid_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgItemEquipStrengthenC2S_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgItemEquipStrengthenC2S_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgItemEquipStrengthenS2C_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgItemEquipStrengthenS2C_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgNewItemSendOverS2C_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgNewItemSendOverS2C_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgItemEquipHideC2S_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgItemEquipHideC2S_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgItemEquipHideS2C_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgItemEquipHideS2C_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgIdentifyEquipC2S_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgIdentifyEquipC2S_reflection_ = NULL;
const ::google::protobuf::Descriptor* IdentifyEquipResult_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  IdentifyEquipResult_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgIdentifyEquipS2C_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgIdentifyEquipS2C_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgItemUserInteractiveResult_S2C_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgItemUserInteractiveResult_S2C_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgDropItemC2S_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgDropItemC2S_reflection_ = NULL;
const ::google::protobuf::Descriptor* DropItemResult_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DropItemResult_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgDropItemS2C_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgDropItemS2C_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgUpgradeItemC2S_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgUpgradeItemC2S_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgUpgradeItemS2C_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgUpgradeItemS2C_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgFoodUseCountS2C_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgFoodUseCountS2C_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgItemMultiEquipC2S_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgItemMultiEquipC2S_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgItemMultiEquipC2S_EquipInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgItemMultiEquipC2S_EquipInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgItemMultiEquipS2C_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgItemMultiEquipS2C_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgItemMaterialS2C_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgItemMaterialS2C_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgItemProtectoUpgradeC2S_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgItemProtectoUpgradeC2S_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* PACKET_TYPE_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* EN_ITEM_COUNTER_TYPE_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* ITEM_EXCHANGE_RESULT_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* E_SyncItemPacketPosResult_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* ITEM_APART_RESULT_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* ADD_ITEMPACKET_SIZE_RESULT_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* RENT_ITEMPACKET_RESULT_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* ITEM_DEL_RESULT_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* ITEM_DEL_RECOVERY_RESULT_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* ITEM_EQUIP_RESULT_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* EQUIP_PACKET_POS_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* ITEM_USE_RESULT_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* ITEM_WASH_RESULT_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* WASHTYPE_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* ITEM_MAGIC_RESULT_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* ITEM_REPAIR_RESULT_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* ITEM_STRENGTHEN_RESULT_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* E_IDENTIFY_EQUIP_RESULT_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* E_DropItemResult_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_MsgItem_2eproto() {
  protobuf_AddDesc_MsgItem_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "MsgItem.proto");
  GOOGLE_CHECK(file != NULL);
  MsgMaterialData_descriptor_ = file->message_type(0);
  static const int MsgMaterialData_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMaterialData, itemid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMaterialData, itemnum_),
  };
  MsgMaterialData_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgMaterialData_descriptor_,
      MsgMaterialData::default_instance_,
      MsgMaterialData_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMaterialData, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgMaterialData, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgMaterialData));
  PBTowerBuildData_descriptor_ = file->message_type(1);
  static const int PBTowerBuildData_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBTowerBuildData, hp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBTowerBuildData, repair_begin_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBTowerBuildData, repair_end_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBTowerBuildData, repair_hp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBTowerBuildData, level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBTowerBuildData, build_type_level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBTowerBuildData, tower_uuid_),
  };
  PBTowerBuildData_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PBTowerBuildData_descriptor_,
      PBTowerBuildData::default_instance_,
      PBTowerBuildData_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBTowerBuildData, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBTowerBuildData, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PBTowerBuildData));
  PBTowerBuildData_BuildTypeLevelInfo_descriptor_ = PBTowerBuildData_descriptor_->nested_type(0);
  static const int PBTowerBuildData_BuildTypeLevelInfo_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBTowerBuildData_BuildTypeLevelInfo, build_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBTowerBuildData_BuildTypeLevelInfo, level_),
  };
  PBTowerBuildData_BuildTypeLevelInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PBTowerBuildData_BuildTypeLevelInfo_descriptor_,
      PBTowerBuildData_BuildTypeLevelInfo::default_instance_,
      PBTowerBuildData_BuildTypeLevelInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBTowerBuildData_BuildTypeLevelInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBTowerBuildData_BuildTypeLevelInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PBTowerBuildData_BuildTypeLevelInfo));
  MsgItemCounter_descriptor_ = file->message_type(2);
  static const int MsgItemCounter_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemCounter, item_counter_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemCounter, count_),
  };
  MsgItemCounter_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgItemCounter_descriptor_,
      MsgItemCounter::default_instance_,
      MsgItemCounter_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemCounter, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemCounter, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgItemCounter));
  MsgItemCounters_descriptor_ = file->message_type(3);
  static const int MsgItemCounters_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemCounters, item_counter_),
  };
  MsgItemCounters_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgItemCounters_descriptor_,
      MsgItemCounters::default_instance_,
      MsgItemCounters_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemCounters, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemCounters, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgItemCounters));
  MsgItemCommonData_descriptor_ = file->message_type(4);
  static const int MsgItemCommonData_offsets_[36] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemCommonData, uuid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemCommonData, dataid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemCommonData, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemCommonData, pos_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemCommonData, count_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemCommonData, packettype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemCommonData, expired_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemCommonData, durable_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemCommonData, cooldown_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemCommonData, countdown_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemCommonData, createtime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemCommonData, durablemax_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemCommonData, cooldown_forclient_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemCommonData, countdown_time_forclient_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemCommonData, rand_lock_temp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemCommonData, extskill_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemCommonData, extattrlock_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemCommonData, magicid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemCommonData, magictempid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemCommonData, effects_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemCommonData, baseval_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemCommonData, staticval_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemCommonData, tempbase_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemCommonData, tempextattr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemCommonData, effects_color_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemCommonData, tempext_color_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemCommonData, strengthen_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemCommonData, hide_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemCommonData, towbuild_data_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemCommonData, auction_cooldown_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemCommonData, pet_equip_skill_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemCommonData, identified_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemCommonData, item_counters_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemCommonData, integrity_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemCommonData, quality_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemCommonData, dirty_),
  };
  MsgItemCommonData_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgItemCommonData_descriptor_,
      MsgItemCommonData::default_instance_,
      MsgItemCommonData_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemCommonData, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemCommonData, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgItemCommonData));
  ServerEquipInfo_descriptor_ = file->message_type(5);
  static const int ServerEquipInfo_offsets_[11] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerEquipInfo, uuid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerEquipInfo, dataid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerEquipInfo, pos_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerEquipInfo, hide_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerEquipInfo, effects_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerEquipInfo, baseval_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerEquipInfo, staticval_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerEquipInfo, magicid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerEquipInfo, extskill_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerEquipInfo, effects_color_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerEquipInfo, durable_),
  };
  ServerEquipInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ServerEquipInfo_descriptor_,
      ServerEquipInfo::default_instance_,
      ServerEquipInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerEquipInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerEquipInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ServerEquipInfo));
  ItemPacketCapabilityInfo_descriptor_ = file->message_type(6);
  static const int ItemPacketCapabilityInfo_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemPacketCapabilityInfo, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemPacketCapabilityInfo, current_grid_num_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemPacketCapabilityInfo, max_grid_num_),
  };
  ItemPacketCapabilityInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ItemPacketCapabilityInfo_descriptor_,
      ItemPacketCapabilityInfo::default_instance_,
      ItemPacketCapabilityInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemPacketCapabilityInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemPacketCapabilityInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ItemPacketCapabilityInfo));
  MsgItemPacketCapabilityGS2C_descriptor_ = file->message_type(7);
  static const int MsgItemPacketCapabilityGS2C_offsets_[16] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemPacketCapabilityGS2C, msgtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemPacketCapabilityGS2C, body_now_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemPacketCapabilityGS2C, body_max_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemPacketCapabilityGS2C, bank_now_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemPacketCapabilityGS2C, bank_max_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemPacketCapabilityGS2C, rent1_now_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemPacketCapabilityGS2C, rent1_max_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemPacketCapabilityGS2C, rent1_deadline_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemPacketCapabilityGS2C, rent2_now_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemPacketCapabilityGS2C, rent2_max_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemPacketCapabilityGS2C, rent2_deadline_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemPacketCapabilityGS2C, endless_now_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemPacketCapabilityGS2C, endless_max_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemPacketCapabilityGS2C, pet_now_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemPacketCapabilityGS2C, pet_max_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemPacketCapabilityGS2C, infos_),
  };
  MsgItemPacketCapabilityGS2C_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgItemPacketCapabilityGS2C_descriptor_,
      MsgItemPacketCapabilityGS2C::default_instance_,
      MsgItemPacketCapabilityGS2C_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemPacketCapabilityGS2C, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemPacketCapabilityGS2C, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgItemPacketCapabilityGS2C));
  S_ItemPacketPos_descriptor_ = file->message_type(8);
  static const int S_ItemPacketPos_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S_ItemPacketPos, uuid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S_ItemPacketPos, packet_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S_ItemPacketPos, pos_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S_ItemPacketPos, item_uuid_),
  };
  S_ItemPacketPos_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      S_ItemPacketPos_descriptor_,
      S_ItemPacketPos::default_instance_,
      S_ItemPacketPos_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S_ItemPacketPos, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S_ItemPacketPos, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(S_ItemPacketPos));
  MsgItemPacketPosGS2C_descriptor_ = file->message_type(9);
  static const int MsgItemPacketPosGS2C_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemPacketPosGS2C, msgtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemPacketPosGS2C, datas_),
  };
  MsgItemPacketPosGS2C_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgItemPacketPosGS2C_descriptor_,
      MsgItemPacketPosGS2C::default_instance_,
      MsgItemPacketPosGS2C_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemPacketPosGS2C, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemPacketPosGS2C, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgItemPacketPosGS2C));
  MsgItemDataGS2C_descriptor_ = file->message_type(10);
  static const int MsgItemDataGS2C_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemDataGS2C, msgtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemDataGS2C, items_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemDataGS2C, islocalserver_),
  };
  MsgItemDataGS2C_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgItemDataGS2C_descriptor_,
      MsgItemDataGS2C::default_instance_,
      MsgItemDataGS2C_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemDataGS2C, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemDataGS2C, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgItemDataGS2C));
  MsgItemDataGS2C_ItemData_descriptor_ = MsgItemDataGS2C_descriptor_->nested_type(0);
  static const int MsgItemDataGS2C_ItemData_offsets_[31] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemDataGS2C_ItemData, uuid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemDataGS2C_ItemData, dataid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemDataGS2C_ItemData, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemDataGS2C_ItemData, pos_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemDataGS2C_ItemData, count_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemDataGS2C_ItemData, packettype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemDataGS2C_ItemData, cooldown_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemDataGS2C_ItemData, expired_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemDataGS2C_ItemData, countdown_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemDataGS2C_ItemData, durable_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemDataGS2C_ItemData, effects_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemDataGS2C_ItemData, baseval_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemDataGS2C_ItemData, staticval_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemDataGS2C_ItemData, extattrlock_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemDataGS2C_ItemData, tempbase_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemDataGS2C_ItemData, tempextattr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemDataGS2C_ItemData, magicid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemDataGS2C_ItemData, magictempid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemDataGS2C_ItemData, extskill_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemDataGS2C_ItemData, tower_build_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemDataGS2C_ItemData, durablemax_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemDataGS2C_ItemData, auction_cooldown_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemDataGS2C_ItemData, effects_color_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemDataGS2C_ItemData, tempext_color_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemDataGS2C_ItemData, strengthen_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemDataGS2C_ItemData, hide_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemDataGS2C_ItemData, pet_equip_skill_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemDataGS2C_ItemData, identified_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemDataGS2C_ItemData, item_counters_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemDataGS2C_ItemData, integrity_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemDataGS2C_ItemData, quality_),
  };
  MsgItemDataGS2C_ItemData_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgItemDataGS2C_ItemData_descriptor_,
      MsgItemDataGS2C_ItemData::default_instance_,
      MsgItemDataGS2C_ItemData_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemDataGS2C_ItemData, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemDataGS2C_ItemData, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgItemDataGS2C_ItemData));
  MsgItemRemoveGS2C_descriptor_ = file->message_type(11);
  static const int MsgItemRemoveGS2C_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemRemoveGS2C, msgtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemRemoveGS2C, uuid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemRemoveGS2C, islocalserver_),
  };
  MsgItemRemoveGS2C_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgItemRemoveGS2C_descriptor_,
      MsgItemRemoveGS2C::default_instance_,
      MsgItemRemoveGS2C_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemRemoveGS2C, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemRemoveGS2C, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgItemRemoveGS2C));
  MsgItemExchangeC2GS_descriptor_ = file->message_type(12);
  static const int MsgItemExchangeC2GS_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemExchangeC2GS, serialid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemExchangeC2GS, msgtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemExchangeC2GS, uuid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemExchangeC2GS, bagto_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemExchangeC2GS, posto_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemExchangeC2GS, iggid_),
  };
  MsgItemExchangeC2GS_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgItemExchangeC2GS_descriptor_,
      MsgItemExchangeC2GS::default_instance_,
      MsgItemExchangeC2GS_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemExchangeC2GS, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemExchangeC2GS, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgItemExchangeC2GS));
  MsgItemExchangeResultGS2C_descriptor_ = file->message_type(13);
  static const int MsgItemExchangeResultGS2C_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemExchangeResultGS2C, serialid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemExchangeResultGS2C, msgtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemExchangeResultGS2C, result_),
  };
  MsgItemExchangeResultGS2C_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgItemExchangeResultGS2C_descriptor_,
      MsgItemExchangeResultGS2C::default_instance_,
      MsgItemExchangeResultGS2C_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemExchangeResultGS2C, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemExchangeResultGS2C, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgItemExchangeResultGS2C));
  ItemPacketPosSyncData_descriptor_ = file->message_type(14);
  static const int ItemPacketPosSyncData_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemPacketPosSyncData, pos_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemPacketPosSyncData, item_uuid_),
  };
  ItemPacketPosSyncData_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ItemPacketPosSyncData_descriptor_,
      ItemPacketPosSyncData::default_instance_,
      ItemPacketPosSyncData_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemPacketPosSyncData, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemPacketPosSyncData, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ItemPacketPosSyncData));
  MsgSyncItemPacketPosC2GS_descriptor_ = file->message_type(15);
  static const int MsgSyncItemPacketPosC2GS_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSyncItemPacketPosC2GS, msgtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSyncItemPacketPosC2GS, serialid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSyncItemPacketPosC2GS, iggid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSyncItemPacketPosC2GS, packet_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSyncItemPacketPosC2GS, datas_),
  };
  MsgSyncItemPacketPosC2GS_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgSyncItemPacketPosC2GS_descriptor_,
      MsgSyncItemPacketPosC2GS::default_instance_,
      MsgSyncItemPacketPosC2GS_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSyncItemPacketPosC2GS, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSyncItemPacketPosC2GS, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgSyncItemPacketPosC2GS));
  MsgItemPosData_descriptor_ = file->message_type(16);
  static const int MsgItemPosData_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemPosData, uuid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemPosData, pos_),
  };
  MsgItemPosData_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgItemPosData_descriptor_,
      MsgItemPosData::default_instance_,
      MsgItemPosData_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemPosData, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemPosData, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgItemPosData));
  MsgSyncItemPacketPosGS2C_descriptor_ = file->message_type(17);
  static const int MsgSyncItemPacketPosGS2C_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSyncItemPacketPosGS2C, msgtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSyncItemPacketPosGS2C, serialid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSyncItemPacketPosGS2C, result_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSyncItemPacketPosGS2C, posdata_),
  };
  MsgSyncItemPacketPosGS2C_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgSyncItemPacketPosGS2C_descriptor_,
      MsgSyncItemPacketPosGS2C::default_instance_,
      MsgSyncItemPacketPosGS2C_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSyncItemPacketPosGS2C, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSyncItemPacketPosGS2C, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgSyncItemPacketPosGS2C));
  MsgItemApartC2GS_descriptor_ = file->message_type(18);
  static const int MsgItemApartC2GS_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemApartC2GS, serialid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemApartC2GS, msgtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemApartC2GS, uuid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemApartC2GS, bagto_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemApartC2GS, posto_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemApartC2GS, count_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemApartC2GS, iggid_),
  };
  MsgItemApartC2GS_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgItemApartC2GS_descriptor_,
      MsgItemApartC2GS::default_instance_,
      MsgItemApartC2GS_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemApartC2GS, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemApartC2GS, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgItemApartC2GS));
  MsgItemApartResultGS2C_descriptor_ = file->message_type(19);
  static const int MsgItemApartResultGS2C_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemApartResultGS2C, serialid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemApartResultGS2C, msgtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemApartResultGS2C, result_),
  };
  MsgItemApartResultGS2C_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgItemApartResultGS2C_descriptor_,
      MsgItemApartResultGS2C::default_instance_,
      MsgItemApartResultGS2C_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemApartResultGS2C, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemApartResultGS2C, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgItemApartResultGS2C));
  MsgItemAddItemPacketC2GS_descriptor_ = file->message_type(20);
  static const int MsgItemAddItemPacketC2GS_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemAddItemPacketC2GS, serialid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemAddItemPacketC2GS, msgtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemAddItemPacketC2GS, emtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemAddItemPacketC2GS, count_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemAddItemPacketC2GS, iggid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemAddItemPacketC2GS, canusediamond_),
  };
  MsgItemAddItemPacketC2GS_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgItemAddItemPacketC2GS_descriptor_,
      MsgItemAddItemPacketC2GS::default_instance_,
      MsgItemAddItemPacketC2GS_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemAddItemPacketC2GS, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemAddItemPacketC2GS, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgItemAddItemPacketC2GS));
  MsgItemAddItemPacketResultGS2C_descriptor_ = file->message_type(21);
  static const int MsgItemAddItemPacketResultGS2C_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemAddItemPacketResultGS2C, serialid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemAddItemPacketResultGS2C, msgtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemAddItemPacketResultGS2C, result_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemAddItemPacketResultGS2C, packet_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemAddItemPacketResultGS2C, canusediamond_),
  };
  MsgItemAddItemPacketResultGS2C_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgItemAddItemPacketResultGS2C_descriptor_,
      MsgItemAddItemPacketResultGS2C::default_instance_,
      MsgItemAddItemPacketResultGS2C_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemAddItemPacketResultGS2C, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemAddItemPacketResultGS2C, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgItemAddItemPacketResultGS2C));
  MsgItemRentItemPacketC2GS_descriptor_ = file->message_type(22);
  static const int MsgItemRentItemPacketC2GS_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemRentItemPacketC2GS, serialid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemRentItemPacketC2GS, msgtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemRentItemPacketC2GS, emtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemRentItemPacketC2GS, days_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemRentItemPacketC2GS, iggid_),
  };
  MsgItemRentItemPacketC2GS_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgItemRentItemPacketC2GS_descriptor_,
      MsgItemRentItemPacketC2GS::default_instance_,
      MsgItemRentItemPacketC2GS_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemRentItemPacketC2GS, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemRentItemPacketC2GS, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgItemRentItemPacketC2GS));
  MsgItemRentItemPacketResultGS2C_descriptor_ = file->message_type(23);
  static const int MsgItemRentItemPacketResultGS2C_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemRentItemPacketResultGS2C, serialid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemRentItemPacketResultGS2C, msgtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemRentItemPacketResultGS2C, result_),
  };
  MsgItemRentItemPacketResultGS2C_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgItemRentItemPacketResultGS2C_descriptor_,
      MsgItemRentItemPacketResultGS2C::default_instance_,
      MsgItemRentItemPacketResultGS2C_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemRentItemPacketResultGS2C, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemRentItemPacketResultGS2C, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgItemRentItemPacketResultGS2C));
  MsgItemDelC2GS_descriptor_ = file->message_type(24);
  static const int MsgItemDelC2GS_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemDelC2GS, serialid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemDelC2GS, msgtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemDelC2GS, uuid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemDelC2GS, iggid_),
  };
  MsgItemDelC2GS_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgItemDelC2GS_descriptor_,
      MsgItemDelC2GS::default_instance_,
      MsgItemDelC2GS_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemDelC2GS, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemDelC2GS, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgItemDelC2GS));
  MsgItemDelResultGS2C_descriptor_ = file->message_type(25);
  static const int MsgItemDelResultGS2C_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemDelResultGS2C, serialid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemDelResultGS2C, msgtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemDelResultGS2C, result_),
  };
  MsgItemDelResultGS2C_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgItemDelResultGS2C_descriptor_,
      MsgItemDelResultGS2C::default_instance_,
      MsgItemDelResultGS2C_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemDelResultGS2C, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemDelResultGS2C, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgItemDelResultGS2C));
  MsgItemDelRecoveryC2GS_descriptor_ = file->message_type(26);
  static const int MsgItemDelRecoveryC2GS_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemDelRecoveryC2GS, serialid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemDelRecoveryC2GS, msgtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemDelRecoveryC2GS, bagto_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemDelRecoveryC2GS, posto_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemDelRecoveryC2GS, iggid_),
  };
  MsgItemDelRecoveryC2GS_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgItemDelRecoveryC2GS_descriptor_,
      MsgItemDelRecoveryC2GS::default_instance_,
      MsgItemDelRecoveryC2GS_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemDelRecoveryC2GS, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemDelRecoveryC2GS, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgItemDelRecoveryC2GS));
  MsgItemDelRecoveryResultGS2C_descriptor_ = file->message_type(27);
  static const int MsgItemDelRecoveryResultGS2C_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemDelRecoveryResultGS2C, serialid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemDelRecoveryResultGS2C, msgtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemDelRecoveryResultGS2C, result_),
  };
  MsgItemDelRecoveryResultGS2C_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgItemDelRecoveryResultGS2C_descriptor_,
      MsgItemDelRecoveryResultGS2C::default_instance_,
      MsgItemDelRecoveryResultGS2C_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemDelRecoveryResultGS2C, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemDelRecoveryResultGS2C, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgItemDelRecoveryResultGS2C));
  MsgItemEquipC2GS_descriptor_ = file->message_type(28);
  static const int MsgItemEquipC2GS_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemEquipC2GS, serialid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemEquipC2GS, msgtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemEquipC2GS, uuid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemEquipC2GS, bodypacketpos_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemEquipC2GS, equippacketpos_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemEquipC2GS, iggid_),
  };
  MsgItemEquipC2GS_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgItemEquipC2GS_descriptor_,
      MsgItemEquipC2GS::default_instance_,
      MsgItemEquipC2GS_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemEquipC2GS, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemEquipC2GS, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgItemEquipC2GS));
  MsgItemEquipResultC2GS_descriptor_ = file->message_type(29);
  static const int MsgItemEquipResultC2GS_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemEquipResultC2GS, serialid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemEquipResultC2GS, msgtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemEquipResultC2GS, result_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemEquipResultC2GS, iggid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemEquipResultC2GS, equippacketpos_),
  };
  MsgItemEquipResultC2GS_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgItemEquipResultC2GS_descriptor_,
      MsgItemEquipResultC2GS::default_instance_,
      MsgItemEquipResultC2GS_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemEquipResultC2GS, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemEquipResultC2GS, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgItemEquipResultC2GS));
  MsgItemPlayerEquipNotifyS2C_descriptor_ = file->message_type(30);
  static const int MsgItemPlayerEquipNotifyS2C_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemPlayerEquipNotifyS2C, serialid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemPlayerEquipNotifyS2C, msgtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemPlayerEquipNotifyS2C, iggid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemPlayerEquipNotifyS2C, mapobjectid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemPlayerEquipNotifyS2C, equip_info_),
  };
  MsgItemPlayerEquipNotifyS2C_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgItemPlayerEquipNotifyS2C_descriptor_,
      MsgItemPlayerEquipNotifyS2C::default_instance_,
      MsgItemPlayerEquipNotifyS2C_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemPlayerEquipNotifyS2C, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemPlayerEquipNotifyS2C, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgItemPlayerEquipNotifyS2C));
  MsgItemOtherPlayerChangeEquip_S2C_descriptor_ = file->message_type(31);
  static const int MsgItemOtherPlayerChangeEquip_S2C_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemOtherPlayerChangeEquip_S2C, msgtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemOtherPlayerChangeEquip_S2C, iggid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemOtherPlayerChangeEquip_S2C, other_player_mapobjectid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemOtherPlayerChangeEquip_S2C, itemdata_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemOtherPlayerChangeEquip_S2C, take_off_),
  };
  MsgItemOtherPlayerChangeEquip_S2C_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgItemOtherPlayerChangeEquip_S2C_descriptor_,
      MsgItemOtherPlayerChangeEquip_S2C::default_instance_,
      MsgItemOtherPlayerChangeEquip_S2C_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemOtherPlayerChangeEquip_S2C, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemOtherPlayerChangeEquip_S2C, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgItemOtherPlayerChangeEquip_S2C));
  MsgItemUseC2S_descriptor_ = file->message_type(32);
  static const int MsgItemUseC2S_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemUseC2S, serialid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemUseC2S, msgtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemUseC2S, iggid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemUseC2S, uuid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemUseC2S, count_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemUseC2S, param_),
  };
  MsgItemUseC2S_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgItemUseC2S_descriptor_,
      MsgItemUseC2S::default_instance_,
      MsgItemUseC2S_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemUseC2S, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemUseC2S, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgItemUseC2S));
  MsgItemUseResultS2C_descriptor_ = file->message_type(33);
  static const int MsgItemUseResultS2C_offsets_[8] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemUseResultS2C, serialid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemUseResultS2C, msgtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemUseResultS2C, iggid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemUseResultS2C, itemid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemUseResultS2C, uuid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemUseResultS2C, count_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemUseResultS2C, result_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemUseResultS2C, add_buff_id_),
  };
  MsgItemUseResultS2C_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgItemUseResultS2C_descriptor_,
      MsgItemUseResultS2C::default_instance_,
      MsgItemUseResultS2C_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemUseResultS2C, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemUseResultS2C, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgItemUseResultS2C));
  MsgPacketSizeData_descriptor_ = file->message_type(34);
  static const int MsgPacketSizeData_offsets_[13] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgPacketSizeData, body_now_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgPacketSizeData, body_max_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgPacketSizeData, bank_now_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgPacketSizeData, bank_max_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgPacketSizeData, rent1_now_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgPacketSizeData, rent1_max_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgPacketSizeData, rent1_deadline_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgPacketSizeData, rent2_now_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgPacketSizeData, rent2_max_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgPacketSizeData, rent2_deadline_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgPacketSizeData, pet_now_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgPacketSizeData, dirty_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgPacketSizeData, infos_),
  };
  MsgPacketSizeData_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgPacketSizeData_descriptor_,
      MsgPacketSizeData::default_instance_,
      MsgPacketSizeData_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgPacketSizeData, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgPacketSizeData, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgPacketSizeData));
  MsgItemSyncItemDataMS2GS_descriptor_ = file->message_type(35);
  static const int MsgItemSyncItemDataMS2GS_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemSyncItemDataMS2GS, msgtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemSyncItemDataMS2GS, iggid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemSyncItemDataMS2GS, itemdata_),
  };
  MsgItemSyncItemDataMS2GS_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgItemSyncItemDataMS2GS_descriptor_,
      MsgItemSyncItemDataMS2GS::default_instance_,
      MsgItemSyncItemDataMS2GS_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemSyncItemDataMS2GS, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemSyncItemDataMS2GS, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgItemSyncItemDataMS2GS));
  MsgItemSyncItemDataMS2MCS_descriptor_ = file->message_type(36);
  static const int MsgItemSyncItemDataMS2MCS_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemSyncItemDataMS2MCS, msgtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemSyncItemDataMS2MCS, iggid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemSyncItemDataMS2MCS, itemdata_),
  };
  MsgItemSyncItemDataMS2MCS_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgItemSyncItemDataMS2MCS_descriptor_,
      MsgItemSyncItemDataMS2MCS::default_instance_,
      MsgItemSyncItemDataMS2MCS_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemSyncItemDataMS2MCS, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemSyncItemDataMS2MCS, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgItemSyncItemDataMS2MCS));
  MsgItemClientSyncInitItemC2GS_descriptor_ = file->message_type(37);
  static const int MsgItemClientSyncInitItemC2GS_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemClientSyncInitItemC2GS, msgtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemClientSyncInitItemC2GS, uuid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemClientSyncInitItemC2GS, dataid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemClientSyncInitItemC2GS, count_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemClientSyncInitItemC2GS, pos_),
  };
  MsgItemClientSyncInitItemC2GS_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgItemClientSyncInitItemC2GS_descriptor_,
      MsgItemClientSyncInitItemC2GS::default_instance_,
      MsgItemClientSyncInitItemC2GS_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemClientSyncInitItemC2GS, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemClientSyncInitItemC2GS, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgItemClientSyncInitItemC2GS));
  MsgItemClientSyncAddItemC2GS_descriptor_ = file->message_type(38);
  static const int MsgItemClientSyncAddItemC2GS_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemClientSyncAddItemC2GS, msgtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemClientSyncAddItemC2GS, uuid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemClientSyncAddItemC2GS, dataid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemClientSyncAddItemC2GS, count_),
  };
  MsgItemClientSyncAddItemC2GS_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgItemClientSyncAddItemC2GS_descriptor_,
      MsgItemClientSyncAddItemC2GS::default_instance_,
      MsgItemClientSyncAddItemC2GS_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemClientSyncAddItemC2GS, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemClientSyncAddItemC2GS, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgItemClientSyncAddItemC2GS));
  MsgItemClientSyncDelItemC2GS_descriptor_ = file->message_type(39);
  static const int MsgItemClientSyncDelItemC2GS_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemClientSyncDelItemC2GS, msgtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemClientSyncDelItemC2GS, uuid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemClientSyncDelItemC2GS, dataid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemClientSyncDelItemC2GS, count_),
  };
  MsgItemClientSyncDelItemC2GS_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgItemClientSyncDelItemC2GS_descriptor_,
      MsgItemClientSyncDelItemC2GS::default_instance_,
      MsgItemClientSyncDelItemC2GS_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemClientSyncDelItemC2GS, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemClientSyncDelItemC2GS, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgItemClientSyncDelItemC2GS));
  MsgItemShortcutS2C_descriptor_ = file->message_type(40);
  static const int MsgItemShortcutS2C_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemShortcutS2C, msgtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemShortcutS2C, iggid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemShortcutS2C, shortcut_),
  };
  MsgItemShortcutS2C_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgItemShortcutS2C_descriptor_,
      MsgItemShortcutS2C::default_instance_,
      MsgItemShortcutS2C_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemShortcutS2C, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemShortcutS2C, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgItemShortcutS2C));
  MsgItemShortcutS2C_ShortcutInfo_descriptor_ = MsgItemShortcutS2C_descriptor_->nested_type(0);
  static const int MsgItemShortcutS2C_ShortcutInfo_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemShortcutS2C_ShortcutInfo, pos_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemShortcutS2C_ShortcutInfo, uuid_),
  };
  MsgItemShortcutS2C_ShortcutInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgItemShortcutS2C_ShortcutInfo_descriptor_,
      MsgItemShortcutS2C_ShortcutInfo::default_instance_,
      MsgItemShortcutS2C_ShortcutInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemShortcutS2C_ShortcutInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemShortcutS2C_ShortcutInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgItemShortcutS2C_ShortcutInfo));
  MsgItemShortcutSetC2S_descriptor_ = file->message_type(41);
  static const int MsgItemShortcutSetC2S_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemShortcutSetC2S, msgtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemShortcutSetC2S, iggid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemShortcutSetC2S, pos_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemShortcutSetC2S, uuid_),
  };
  MsgItemShortcutSetC2S_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgItemShortcutSetC2S_descriptor_,
      MsgItemShortcutSetC2S::default_instance_,
      MsgItemShortcutSetC2S_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemShortcutSetC2S, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemShortcutSetC2S, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgItemShortcutSetC2S));
  MsgItemEquipAttrLockC2S_descriptor_ = file->message_type(42);
  static const int MsgItemEquipAttrLockC2S_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemEquipAttrLockC2S, msgtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemEquipAttrLockC2S, iggid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemEquipAttrLockC2S, uuid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemEquipAttrLockC2S, pos_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemEquipAttrLockC2S, lock_),
  };
  MsgItemEquipAttrLockC2S_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgItemEquipAttrLockC2S_descriptor_,
      MsgItemEquipAttrLockC2S::default_instance_,
      MsgItemEquipAttrLockC2S_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemEquipAttrLockC2S, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemEquipAttrLockC2S, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgItemEquipAttrLockC2S));
  MsgItemEquipAttrLockS2C_descriptor_ = file->message_type(43);
  static const int MsgItemEquipAttrLockS2C_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemEquipAttrLockS2C, msgtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemEquipAttrLockS2C, iggid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemEquipAttrLockS2C, uuid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemEquipAttrLockS2C, pos_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemEquipAttrLockS2C, lock_),
  };
  MsgItemEquipAttrLockS2C_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgItemEquipAttrLockS2C_descriptor_,
      MsgItemEquipAttrLockS2C::default_instance_,
      MsgItemEquipAttrLockS2C_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemEquipAttrLockS2C, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemEquipAttrLockS2C, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgItemEquipAttrLockS2C));
  MsgItemEquipAttrWashC2S_descriptor_ = file->message_type(44);
  static const int MsgItemEquipAttrWashC2S_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemEquipAttrWashC2S, msgtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemEquipAttrWashC2S, iggid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemEquipAttrWashC2S, uuid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemEquipAttrWashC2S, ntype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemEquipAttrWashC2S, canusediamond_),
  };
  MsgItemEquipAttrWashC2S_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgItemEquipAttrWashC2S_descriptor_,
      MsgItemEquipAttrWashC2S::default_instance_,
      MsgItemEquipAttrWashC2S_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemEquipAttrWashC2S, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemEquipAttrWashC2S, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgItemEquipAttrWashC2S));
  MsgItemEquipAttrWashS2C_descriptor_ = file->message_type(45);
  static const int MsgItemEquipAttrWashS2C_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemEquipAttrWashS2C, msgtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemEquipAttrWashS2C, iggid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemEquipAttrWashS2C, eres_),
  };
  MsgItemEquipAttrWashS2C_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgItemEquipAttrWashS2C_descriptor_,
      MsgItemEquipAttrWashS2C::default_instance_,
      MsgItemEquipAttrWashS2C_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemEquipAttrWashS2C, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemEquipAttrWashS2C, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgItemEquipAttrWashS2C));
  MsgItemEquipAttrSaveC2S_descriptor_ = file->message_type(46);
  static const int MsgItemEquipAttrSaveC2S_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemEquipAttrSaveC2S, msgtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemEquipAttrSaveC2S, iggid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemEquipAttrSaveC2S, uuid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemEquipAttrSaveC2S, save_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemEquipAttrSaveC2S, ntype_),
  };
  MsgItemEquipAttrSaveC2S_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgItemEquipAttrSaveC2S_descriptor_,
      MsgItemEquipAttrSaveC2S::default_instance_,
      MsgItemEquipAttrSaveC2S_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemEquipAttrSaveC2S, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemEquipAttrSaveC2S, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgItemEquipAttrSaveC2S));
  MsgItemEquipAttrSaveS2C_descriptor_ = file->message_type(47);
  static const int MsgItemEquipAttrSaveS2C_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemEquipAttrSaveS2C, msgtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemEquipAttrSaveS2C, iggid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemEquipAttrSaveS2C, uuid_),
  };
  MsgItemEquipAttrSaveS2C_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgItemEquipAttrSaveS2C_descriptor_,
      MsgItemEquipAttrSaveS2C::default_instance_,
      MsgItemEquipAttrSaveS2C_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemEquipAttrSaveS2C, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemEquipAttrSaveS2C, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgItemEquipAttrSaveS2C));
  MsgItemEquipMagicSacrificeC2S_descriptor_ = file->message_type(48);
  static const int MsgItemEquipMagicSacrificeC2S_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemEquipMagicSacrificeC2S, msgtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemEquipMagicSacrificeC2S, iggid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemEquipMagicSacrificeC2S, uuid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemEquipMagicSacrificeC2S, items_),
  };
  MsgItemEquipMagicSacrificeC2S_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgItemEquipMagicSacrificeC2S_descriptor_,
      MsgItemEquipMagicSacrificeC2S::default_instance_,
      MsgItemEquipMagicSacrificeC2S_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemEquipMagicSacrificeC2S, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemEquipMagicSacrificeC2S, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgItemEquipMagicSacrificeC2S));
  MsgItemEquipMagicSacrificeS2C_descriptor_ = file->message_type(49);
  static const int MsgItemEquipMagicSacrificeS2C_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemEquipMagicSacrificeS2C, msgtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemEquipMagicSacrificeS2C, iggid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemEquipMagicSacrificeS2C, res_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemEquipMagicSacrificeS2C, magicid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemEquipMagicSacrificeS2C, uuid_),
  };
  MsgItemEquipMagicSacrificeS2C_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgItemEquipMagicSacrificeS2C_descriptor_,
      MsgItemEquipMagicSacrificeS2C::default_instance_,
      MsgItemEquipMagicSacrificeS2C_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemEquipMagicSacrificeS2C, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemEquipMagicSacrificeS2C, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgItemEquipMagicSacrificeS2C));
  MsgItemEquipMagicInjectionC2S_descriptor_ = file->message_type(50);
  static const int MsgItemEquipMagicInjectionC2S_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemEquipMagicInjectionC2S, msgtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemEquipMagicInjectionC2S, iggid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemEquipMagicInjectionC2S, uuid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemEquipMagicInjectionC2S, index_),
  };
  MsgItemEquipMagicInjectionC2S_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgItemEquipMagicInjectionC2S_descriptor_,
      MsgItemEquipMagicInjectionC2S::default_instance_,
      MsgItemEquipMagicInjectionC2S_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemEquipMagicInjectionC2S, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemEquipMagicInjectionC2S, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgItemEquipMagicInjectionC2S));
  MsgItemEquipMagicInjectionS2C_descriptor_ = file->message_type(51);
  static const int MsgItemEquipMagicInjectionS2C_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemEquipMagicInjectionS2C, msgtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemEquipMagicInjectionS2C, iggid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemEquipMagicInjectionS2C, res_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemEquipMagicInjectionS2C, uuid_),
  };
  MsgItemEquipMagicInjectionS2C_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgItemEquipMagicInjectionS2C_descriptor_,
      MsgItemEquipMagicInjectionS2C::default_instance_,
      MsgItemEquipMagicInjectionS2C_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemEquipMagicInjectionS2C, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemEquipMagicInjectionS2C, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgItemEquipMagicInjectionS2C));
  MsgItemEquipRepairC2S_descriptor_ = file->message_type(52);
  static const int MsgItemEquipRepairC2S_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemEquipRepairC2S, msgtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemEquipRepairC2S, iggid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemEquipRepairC2S, uuid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemEquipRepairC2S, etype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemEquipRepairC2S, repairtype_),
  };
  MsgItemEquipRepairC2S_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgItemEquipRepairC2S_descriptor_,
      MsgItemEquipRepairC2S::default_instance_,
      MsgItemEquipRepairC2S_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemEquipRepairC2S, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemEquipRepairC2S, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgItemEquipRepairC2S));
  MsgItemEquipRepairS2C_descriptor_ = file->message_type(53);
  static const int MsgItemEquipRepairS2C_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemEquipRepairS2C, msgtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemEquipRepairS2C, iggid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemEquipRepairS2C, res_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemEquipRepairS2C, uuid_),
  };
  MsgItemEquipRepairS2C_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgItemEquipRepairS2C_descriptor_,
      MsgItemEquipRepairS2C::default_instance_,
      MsgItemEquipRepairS2C_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemEquipRepairS2C, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemEquipRepairS2C, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgItemEquipRepairS2C));
  MsgItemEquipRepairS2C_RepairUuid_descriptor_ = MsgItemEquipRepairS2C_descriptor_->nested_type(0);
  static const int MsgItemEquipRepairS2C_RepairUuid_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemEquipRepairS2C_RepairUuid, uuid_),
  };
  MsgItemEquipRepairS2C_RepairUuid_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgItemEquipRepairS2C_RepairUuid_descriptor_,
      MsgItemEquipRepairS2C_RepairUuid::default_instance_,
      MsgItemEquipRepairS2C_RepairUuid_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemEquipRepairS2C_RepairUuid, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemEquipRepairS2C_RepairUuid, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgItemEquipRepairS2C_RepairUuid));
  MsgItemEquipStrengthenC2S_descriptor_ = file->message_type(54);
  static const int MsgItemEquipStrengthenC2S_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemEquipStrengthenC2S, msgtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemEquipStrengthenC2S, iggid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemEquipStrengthenC2S, uuid_),
  };
  MsgItemEquipStrengthenC2S_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgItemEquipStrengthenC2S_descriptor_,
      MsgItemEquipStrengthenC2S::default_instance_,
      MsgItemEquipStrengthenC2S_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemEquipStrengthenC2S, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemEquipStrengthenC2S, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgItemEquipStrengthenC2S));
  MsgItemEquipStrengthenS2C_descriptor_ = file->message_type(55);
  static const int MsgItemEquipStrengthenS2C_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemEquipStrengthenS2C, msgtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemEquipStrengthenS2C, iggid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemEquipStrengthenS2C, res_),
  };
  MsgItemEquipStrengthenS2C_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgItemEquipStrengthenS2C_descriptor_,
      MsgItemEquipStrengthenS2C::default_instance_,
      MsgItemEquipStrengthenS2C_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemEquipStrengthenS2C, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemEquipStrengthenS2C, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgItemEquipStrengthenS2C));
  MsgNewItemSendOverS2C_descriptor_ = file->message_type(56);
  static const int MsgNewItemSendOverS2C_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgNewItemSendOverS2C, msgtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgNewItemSendOverS2C, iggid_),
  };
  MsgNewItemSendOverS2C_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgNewItemSendOverS2C_descriptor_,
      MsgNewItemSendOverS2C::default_instance_,
      MsgNewItemSendOverS2C_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgNewItemSendOverS2C, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgNewItemSendOverS2C, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgNewItemSendOverS2C));
  MsgItemEquipHideC2S_descriptor_ = file->message_type(57);
  static const int MsgItemEquipHideC2S_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemEquipHideC2S, msgtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemEquipHideC2S, iggid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemEquipHideC2S, uuid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemEquipHideC2S, hide_),
  };
  MsgItemEquipHideC2S_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgItemEquipHideC2S_descriptor_,
      MsgItemEquipHideC2S::default_instance_,
      MsgItemEquipHideC2S_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemEquipHideC2S, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemEquipHideC2S, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgItemEquipHideC2S));
  MsgItemEquipHideS2C_descriptor_ = file->message_type(58);
  static const int MsgItemEquipHideS2C_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemEquipHideS2C, msgtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemEquipHideS2C, iggid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemEquipHideS2C, uuid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemEquipHideS2C, hide_),
  };
  MsgItemEquipHideS2C_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgItemEquipHideS2C_descriptor_,
      MsgItemEquipHideS2C::default_instance_,
      MsgItemEquipHideS2C_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemEquipHideS2C, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemEquipHideS2C, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgItemEquipHideS2C));
  MsgIdentifyEquipC2S_descriptor_ = file->message_type(59);
  static const int MsgIdentifyEquipC2S_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgIdentifyEquipC2S, msgtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgIdentifyEquipC2S, iggid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgIdentifyEquipC2S, uuids_),
  };
  MsgIdentifyEquipC2S_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgIdentifyEquipC2S_descriptor_,
      MsgIdentifyEquipC2S::default_instance_,
      MsgIdentifyEquipC2S_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgIdentifyEquipC2S, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgIdentifyEquipC2S, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgIdentifyEquipC2S));
  IdentifyEquipResult_descriptor_ = file->message_type(60);
  static const int IdentifyEquipResult_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IdentifyEquipResult, res_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IdentifyEquipResult, item_),
  };
  IdentifyEquipResult_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      IdentifyEquipResult_descriptor_,
      IdentifyEquipResult::default_instance_,
      IdentifyEquipResult_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IdentifyEquipResult, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IdentifyEquipResult, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(IdentifyEquipResult));
  MsgIdentifyEquipS2C_descriptor_ = file->message_type(61);
  static const int MsgIdentifyEquipS2C_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgIdentifyEquipS2C, msgtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgIdentifyEquipS2C, iggid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgIdentifyEquipS2C, results_),
  };
  MsgIdentifyEquipS2C_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgIdentifyEquipS2C_descriptor_,
      MsgIdentifyEquipS2C::default_instance_,
      MsgIdentifyEquipS2C_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgIdentifyEquipS2C, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgIdentifyEquipS2C, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgIdentifyEquipS2C));
  MsgItemUserInteractiveResult_S2C_descriptor_ = file->message_type(62);
  static const int MsgItemUserInteractiveResult_S2C_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemUserInteractiveResult_S2C, msgtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemUserInteractiveResult_S2C, iggid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemUserInteractiveResult_S2C, itemid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemUserInteractiveResult_S2C, uuid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemUserInteractiveResult_S2C, items_),
  };
  MsgItemUserInteractiveResult_S2C_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgItemUserInteractiveResult_S2C_descriptor_,
      MsgItemUserInteractiveResult_S2C::default_instance_,
      MsgItemUserInteractiveResult_S2C_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemUserInteractiveResult_S2C, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemUserInteractiveResult_S2C, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgItemUserInteractiveResult_S2C));
  MsgDropItemC2S_descriptor_ = file->message_type(63);
  static const int MsgDropItemC2S_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDropItemC2S, msgtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDropItemC2S, iggid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDropItemC2S, uuids_),
  };
  MsgDropItemC2S_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgDropItemC2S_descriptor_,
      MsgDropItemC2S::default_instance_,
      MsgDropItemC2S_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDropItemC2S, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDropItemC2S, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgDropItemC2S));
  DropItemResult_descriptor_ = file->message_type(64);
  static const int DropItemResult_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DropItemResult, res_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DropItemResult, uuid_),
  };
  DropItemResult_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      DropItemResult_descriptor_,
      DropItemResult::default_instance_,
      DropItemResult_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DropItemResult, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DropItemResult, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(DropItemResult));
  MsgDropItemS2C_descriptor_ = file->message_type(65);
  static const int MsgDropItemS2C_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDropItemS2C, msgtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDropItemS2C, iggid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDropItemS2C, results_),
  };
  MsgDropItemS2C_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgDropItemS2C_descriptor_,
      MsgDropItemS2C::default_instance_,
      MsgDropItemS2C_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDropItemS2C, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDropItemS2C, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgDropItemS2C));
  MsgUpgradeItemC2S_descriptor_ = file->message_type(66);
  static const int MsgUpgradeItemC2S_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgUpgradeItemC2S, msgtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgUpgradeItemC2S, iggid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgUpgradeItemC2S, uuid_),
  };
  MsgUpgradeItemC2S_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgUpgradeItemC2S_descriptor_,
      MsgUpgradeItemC2S::default_instance_,
      MsgUpgradeItemC2S_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgUpgradeItemC2S, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgUpgradeItemC2S, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgUpgradeItemC2S));
  MsgUpgradeItemS2C_descriptor_ = file->message_type(67);
  static const int MsgUpgradeItemS2C_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgUpgradeItemS2C, msgtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgUpgradeItemS2C, iggid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgUpgradeItemS2C, ec_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgUpgradeItemS2C, uuid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgUpgradeItemS2C, old_data_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgUpgradeItemS2C, new_data_id_),
  };
  MsgUpgradeItemS2C_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgUpgradeItemS2C_descriptor_,
      MsgUpgradeItemS2C::default_instance_,
      MsgUpgradeItemS2C_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgUpgradeItemS2C, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgUpgradeItemS2C, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgUpgradeItemS2C));
  MsgFoodUseCountS2C_descriptor_ = file->message_type(68);
  static const int MsgFoodUseCountS2C_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgFoodUseCountS2C, msgtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgFoodUseCountS2C, count_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgFoodUseCountS2C, dig_mine_exp_count_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgFoodUseCountS2C, dig_plant_exp_count_),
  };
  MsgFoodUseCountS2C_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgFoodUseCountS2C_descriptor_,
      MsgFoodUseCountS2C::default_instance_,
      MsgFoodUseCountS2C_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgFoodUseCountS2C, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgFoodUseCountS2C, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgFoodUseCountS2C));
  MsgItemMultiEquipC2S_descriptor_ = file->message_type(69);
  static const int MsgItemMultiEquipC2S_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemMultiEquipC2S, msgtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemMultiEquipC2S, item_),
  };
  MsgItemMultiEquipC2S_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgItemMultiEquipC2S_descriptor_,
      MsgItemMultiEquipC2S::default_instance_,
      MsgItemMultiEquipC2S_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemMultiEquipC2S, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemMultiEquipC2S, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgItemMultiEquipC2S));
  MsgItemMultiEquipC2S_EquipInfo_descriptor_ = MsgItemMultiEquipC2S_descriptor_->nested_type(0);
  static const int MsgItemMultiEquipC2S_EquipInfo_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemMultiEquipC2S_EquipInfo, uuid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemMultiEquipC2S_EquipInfo, equip_pos_),
  };
  MsgItemMultiEquipC2S_EquipInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgItemMultiEquipC2S_EquipInfo_descriptor_,
      MsgItemMultiEquipC2S_EquipInfo::default_instance_,
      MsgItemMultiEquipC2S_EquipInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemMultiEquipC2S_EquipInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemMultiEquipC2S_EquipInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgItemMultiEquipC2S_EquipInfo));
  MsgItemMultiEquipS2C_descriptor_ = file->message_type(70);
  static const int MsgItemMultiEquipS2C_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemMultiEquipS2C, msgtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemMultiEquipS2C, uuid_),
  };
  MsgItemMultiEquipS2C_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgItemMultiEquipS2C_descriptor_,
      MsgItemMultiEquipS2C::default_instance_,
      MsgItemMultiEquipS2C_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemMultiEquipS2C, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemMultiEquipS2C, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgItemMultiEquipS2C));
  MsgItemMaterialS2C_descriptor_ = file->message_type(71);
  static const int MsgItemMaterialS2C_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemMaterialS2C, msgtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemMaterialS2C, data_),
  };
  MsgItemMaterialS2C_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgItemMaterialS2C_descriptor_,
      MsgItemMaterialS2C::default_instance_,
      MsgItemMaterialS2C_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemMaterialS2C, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemMaterialS2C, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgItemMaterialS2C));
  MsgItemProtectoUpgradeC2S_descriptor_ = file->message_type(72);
  static const int MsgItemProtectoUpgradeC2S_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemProtectoUpgradeC2S, serialid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemProtectoUpgradeC2S, msgtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemProtectoUpgradeC2S, iggid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemProtectoUpgradeC2S, uuid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemProtectoUpgradeC2S, protectorid_),
  };
  MsgItemProtectoUpgradeC2S_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgItemProtectoUpgradeC2S_descriptor_,
      MsgItemProtectoUpgradeC2S::default_instance_,
      MsgItemProtectoUpgradeC2S_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemProtectoUpgradeC2S, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgItemProtectoUpgradeC2S, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgItemProtectoUpgradeC2S));
  PACKET_TYPE_descriptor_ = file->enum_type(0);
  EN_ITEM_COUNTER_TYPE_descriptor_ = file->enum_type(1);
  ITEM_EXCHANGE_RESULT_descriptor_ = file->enum_type(2);
  E_SyncItemPacketPosResult_descriptor_ = file->enum_type(3);
  ITEM_APART_RESULT_descriptor_ = file->enum_type(4);
  ADD_ITEMPACKET_SIZE_RESULT_descriptor_ = file->enum_type(5);
  RENT_ITEMPACKET_RESULT_descriptor_ = file->enum_type(6);
  ITEM_DEL_RESULT_descriptor_ = file->enum_type(7);
  ITEM_DEL_RECOVERY_RESULT_descriptor_ = file->enum_type(8);
  ITEM_EQUIP_RESULT_descriptor_ = file->enum_type(9);
  EQUIP_PACKET_POS_descriptor_ = file->enum_type(10);
  ITEM_USE_RESULT_descriptor_ = file->enum_type(11);
  ITEM_WASH_RESULT_descriptor_ = file->enum_type(12);
  WASHTYPE_descriptor_ = file->enum_type(13);
  ITEM_MAGIC_RESULT_descriptor_ = file->enum_type(14);
  ITEM_REPAIR_RESULT_descriptor_ = file->enum_type(15);
  ITEM_STRENGTHEN_RESULT_descriptor_ = file->enum_type(16);
  E_IDENTIFY_EQUIP_RESULT_descriptor_ = file->enum_type(17);
  E_DropItemResult_descriptor_ = file->enum_type(18);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_MsgItem_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgMaterialData_descriptor_, &MsgMaterialData::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PBTowerBuildData_descriptor_, &PBTowerBuildData::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PBTowerBuildData_BuildTypeLevelInfo_descriptor_, &PBTowerBuildData_BuildTypeLevelInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgItemCounter_descriptor_, &MsgItemCounter::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgItemCounters_descriptor_, &MsgItemCounters::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgItemCommonData_descriptor_, &MsgItemCommonData::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ServerEquipInfo_descriptor_, &ServerEquipInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ItemPacketCapabilityInfo_descriptor_, &ItemPacketCapabilityInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgItemPacketCapabilityGS2C_descriptor_, &MsgItemPacketCapabilityGS2C::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    S_ItemPacketPos_descriptor_, &S_ItemPacketPos::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgItemPacketPosGS2C_descriptor_, &MsgItemPacketPosGS2C::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgItemDataGS2C_descriptor_, &MsgItemDataGS2C::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgItemDataGS2C_ItemData_descriptor_, &MsgItemDataGS2C_ItemData::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgItemRemoveGS2C_descriptor_, &MsgItemRemoveGS2C::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgItemExchangeC2GS_descriptor_, &MsgItemExchangeC2GS::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgItemExchangeResultGS2C_descriptor_, &MsgItemExchangeResultGS2C::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ItemPacketPosSyncData_descriptor_, &ItemPacketPosSyncData::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgSyncItemPacketPosC2GS_descriptor_, &MsgSyncItemPacketPosC2GS::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgItemPosData_descriptor_, &MsgItemPosData::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgSyncItemPacketPosGS2C_descriptor_, &MsgSyncItemPacketPosGS2C::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgItemApartC2GS_descriptor_, &MsgItemApartC2GS::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgItemApartResultGS2C_descriptor_, &MsgItemApartResultGS2C::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgItemAddItemPacketC2GS_descriptor_, &MsgItemAddItemPacketC2GS::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgItemAddItemPacketResultGS2C_descriptor_, &MsgItemAddItemPacketResultGS2C::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgItemRentItemPacketC2GS_descriptor_, &MsgItemRentItemPacketC2GS::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgItemRentItemPacketResultGS2C_descriptor_, &MsgItemRentItemPacketResultGS2C::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgItemDelC2GS_descriptor_, &MsgItemDelC2GS::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgItemDelResultGS2C_descriptor_, &MsgItemDelResultGS2C::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgItemDelRecoveryC2GS_descriptor_, &MsgItemDelRecoveryC2GS::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgItemDelRecoveryResultGS2C_descriptor_, &MsgItemDelRecoveryResultGS2C::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgItemEquipC2GS_descriptor_, &MsgItemEquipC2GS::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgItemEquipResultC2GS_descriptor_, &MsgItemEquipResultC2GS::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgItemPlayerEquipNotifyS2C_descriptor_, &MsgItemPlayerEquipNotifyS2C::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgItemOtherPlayerChangeEquip_S2C_descriptor_, &MsgItemOtherPlayerChangeEquip_S2C::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgItemUseC2S_descriptor_, &MsgItemUseC2S::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgItemUseResultS2C_descriptor_, &MsgItemUseResultS2C::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgPacketSizeData_descriptor_, &MsgPacketSizeData::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgItemSyncItemDataMS2GS_descriptor_, &MsgItemSyncItemDataMS2GS::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgItemSyncItemDataMS2MCS_descriptor_, &MsgItemSyncItemDataMS2MCS::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgItemClientSyncInitItemC2GS_descriptor_, &MsgItemClientSyncInitItemC2GS::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgItemClientSyncAddItemC2GS_descriptor_, &MsgItemClientSyncAddItemC2GS::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgItemClientSyncDelItemC2GS_descriptor_, &MsgItemClientSyncDelItemC2GS::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgItemShortcutS2C_descriptor_, &MsgItemShortcutS2C::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgItemShortcutS2C_ShortcutInfo_descriptor_, &MsgItemShortcutS2C_ShortcutInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgItemShortcutSetC2S_descriptor_, &MsgItemShortcutSetC2S::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgItemEquipAttrLockC2S_descriptor_, &MsgItemEquipAttrLockC2S::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgItemEquipAttrLockS2C_descriptor_, &MsgItemEquipAttrLockS2C::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgItemEquipAttrWashC2S_descriptor_, &MsgItemEquipAttrWashC2S::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgItemEquipAttrWashS2C_descriptor_, &MsgItemEquipAttrWashS2C::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgItemEquipAttrSaveC2S_descriptor_, &MsgItemEquipAttrSaveC2S::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgItemEquipAttrSaveS2C_descriptor_, &MsgItemEquipAttrSaveS2C::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgItemEquipMagicSacrificeC2S_descriptor_, &MsgItemEquipMagicSacrificeC2S::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgItemEquipMagicSacrificeS2C_descriptor_, &MsgItemEquipMagicSacrificeS2C::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgItemEquipMagicInjectionC2S_descriptor_, &MsgItemEquipMagicInjectionC2S::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgItemEquipMagicInjectionS2C_descriptor_, &MsgItemEquipMagicInjectionS2C::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgItemEquipRepairC2S_descriptor_, &MsgItemEquipRepairC2S::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgItemEquipRepairS2C_descriptor_, &MsgItemEquipRepairS2C::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgItemEquipRepairS2C_RepairUuid_descriptor_, &MsgItemEquipRepairS2C_RepairUuid::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgItemEquipStrengthenC2S_descriptor_, &MsgItemEquipStrengthenC2S::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgItemEquipStrengthenS2C_descriptor_, &MsgItemEquipStrengthenS2C::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgNewItemSendOverS2C_descriptor_, &MsgNewItemSendOverS2C::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgItemEquipHideC2S_descriptor_, &MsgItemEquipHideC2S::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgItemEquipHideS2C_descriptor_, &MsgItemEquipHideS2C::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgIdentifyEquipC2S_descriptor_, &MsgIdentifyEquipC2S::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    IdentifyEquipResult_descriptor_, &IdentifyEquipResult::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgIdentifyEquipS2C_descriptor_, &MsgIdentifyEquipS2C::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgItemUserInteractiveResult_S2C_descriptor_, &MsgItemUserInteractiveResult_S2C::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgDropItemC2S_descriptor_, &MsgDropItemC2S::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    DropItemResult_descriptor_, &DropItemResult::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgDropItemS2C_descriptor_, &MsgDropItemS2C::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgUpgradeItemC2S_descriptor_, &MsgUpgradeItemC2S::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgUpgradeItemS2C_descriptor_, &MsgUpgradeItemS2C::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgFoodUseCountS2C_descriptor_, &MsgFoodUseCountS2C::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgItemMultiEquipC2S_descriptor_, &MsgItemMultiEquipC2S::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgItemMultiEquipC2S_EquipInfo_descriptor_, &MsgItemMultiEquipC2S_EquipInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgItemMultiEquipS2C_descriptor_, &MsgItemMultiEquipS2C::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgItemMaterialS2C_descriptor_, &MsgItemMaterialS2C::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgItemProtectoUpgradeC2S_descriptor_, &MsgItemProtectoUpgradeC2S::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_MsgItem_2eproto() {
  delete MsgMaterialData::default_instance_;
  delete MsgMaterialData_reflection_;
  delete PBTowerBuildData::default_instance_;
  delete PBTowerBuildData_reflection_;
  delete PBTowerBuildData_BuildTypeLevelInfo::default_instance_;
  delete PBTowerBuildData_BuildTypeLevelInfo_reflection_;
  delete MsgItemCounter::default_instance_;
  delete MsgItemCounter_reflection_;
  delete MsgItemCounters::default_instance_;
  delete MsgItemCounters_reflection_;
  delete MsgItemCommonData::default_instance_;
  delete MsgItemCommonData_reflection_;
  delete ServerEquipInfo::default_instance_;
  delete ServerEquipInfo_reflection_;
  delete ItemPacketCapabilityInfo::default_instance_;
  delete ItemPacketCapabilityInfo_reflection_;
  delete MsgItemPacketCapabilityGS2C::default_instance_;
  delete MsgItemPacketCapabilityGS2C_reflection_;
  delete S_ItemPacketPos::default_instance_;
  delete S_ItemPacketPos_reflection_;
  delete MsgItemPacketPosGS2C::default_instance_;
  delete MsgItemPacketPosGS2C_reflection_;
  delete MsgItemDataGS2C::default_instance_;
  delete MsgItemDataGS2C_reflection_;
  delete MsgItemDataGS2C_ItemData::default_instance_;
  delete MsgItemDataGS2C_ItemData_reflection_;
  delete MsgItemRemoveGS2C::default_instance_;
  delete MsgItemRemoveGS2C_reflection_;
  delete MsgItemExchangeC2GS::default_instance_;
  delete MsgItemExchangeC2GS_reflection_;
  delete MsgItemExchangeResultGS2C::default_instance_;
  delete MsgItemExchangeResultGS2C_reflection_;
  delete ItemPacketPosSyncData::default_instance_;
  delete ItemPacketPosSyncData_reflection_;
  delete MsgSyncItemPacketPosC2GS::default_instance_;
  delete MsgSyncItemPacketPosC2GS_reflection_;
  delete MsgItemPosData::default_instance_;
  delete MsgItemPosData_reflection_;
  delete MsgSyncItemPacketPosGS2C::default_instance_;
  delete MsgSyncItemPacketPosGS2C_reflection_;
  delete MsgItemApartC2GS::default_instance_;
  delete MsgItemApartC2GS_reflection_;
  delete MsgItemApartResultGS2C::default_instance_;
  delete MsgItemApartResultGS2C_reflection_;
  delete MsgItemAddItemPacketC2GS::default_instance_;
  delete MsgItemAddItemPacketC2GS_reflection_;
  delete MsgItemAddItemPacketResultGS2C::default_instance_;
  delete MsgItemAddItemPacketResultGS2C_reflection_;
  delete MsgItemRentItemPacketC2GS::default_instance_;
  delete MsgItemRentItemPacketC2GS_reflection_;
  delete MsgItemRentItemPacketResultGS2C::default_instance_;
  delete MsgItemRentItemPacketResultGS2C_reflection_;
  delete MsgItemDelC2GS::default_instance_;
  delete MsgItemDelC2GS_reflection_;
  delete MsgItemDelResultGS2C::default_instance_;
  delete MsgItemDelResultGS2C_reflection_;
  delete MsgItemDelRecoveryC2GS::default_instance_;
  delete MsgItemDelRecoveryC2GS_reflection_;
  delete MsgItemDelRecoveryResultGS2C::default_instance_;
  delete MsgItemDelRecoveryResultGS2C_reflection_;
  delete MsgItemEquipC2GS::default_instance_;
  delete MsgItemEquipC2GS_reflection_;
  delete MsgItemEquipResultC2GS::default_instance_;
  delete MsgItemEquipResultC2GS_reflection_;
  delete MsgItemPlayerEquipNotifyS2C::default_instance_;
  delete MsgItemPlayerEquipNotifyS2C_reflection_;
  delete MsgItemOtherPlayerChangeEquip_S2C::default_instance_;
  delete MsgItemOtherPlayerChangeEquip_S2C_reflection_;
  delete MsgItemUseC2S::default_instance_;
  delete MsgItemUseC2S_reflection_;
  delete MsgItemUseResultS2C::default_instance_;
  delete MsgItemUseResultS2C_reflection_;
  delete MsgPacketSizeData::default_instance_;
  delete MsgPacketSizeData_reflection_;
  delete MsgItemSyncItemDataMS2GS::default_instance_;
  delete MsgItemSyncItemDataMS2GS_reflection_;
  delete MsgItemSyncItemDataMS2MCS::default_instance_;
  delete MsgItemSyncItemDataMS2MCS_reflection_;
  delete MsgItemClientSyncInitItemC2GS::default_instance_;
  delete MsgItemClientSyncInitItemC2GS_reflection_;
  delete MsgItemClientSyncAddItemC2GS::default_instance_;
  delete MsgItemClientSyncAddItemC2GS_reflection_;
  delete MsgItemClientSyncDelItemC2GS::default_instance_;
  delete MsgItemClientSyncDelItemC2GS_reflection_;
  delete MsgItemShortcutS2C::default_instance_;
  delete MsgItemShortcutS2C_reflection_;
  delete MsgItemShortcutS2C_ShortcutInfo::default_instance_;
  delete MsgItemShortcutS2C_ShortcutInfo_reflection_;
  delete MsgItemShortcutSetC2S::default_instance_;
  delete MsgItemShortcutSetC2S_reflection_;
  delete MsgItemEquipAttrLockC2S::default_instance_;
  delete MsgItemEquipAttrLockC2S_reflection_;
  delete MsgItemEquipAttrLockS2C::default_instance_;
  delete MsgItemEquipAttrLockS2C_reflection_;
  delete MsgItemEquipAttrWashC2S::default_instance_;
  delete MsgItemEquipAttrWashC2S_reflection_;
  delete MsgItemEquipAttrWashS2C::default_instance_;
  delete MsgItemEquipAttrWashS2C_reflection_;
  delete MsgItemEquipAttrSaveC2S::default_instance_;
  delete MsgItemEquipAttrSaveC2S_reflection_;
  delete MsgItemEquipAttrSaveS2C::default_instance_;
  delete MsgItemEquipAttrSaveS2C_reflection_;
  delete MsgItemEquipMagicSacrificeC2S::default_instance_;
  delete MsgItemEquipMagicSacrificeC2S_reflection_;
  delete MsgItemEquipMagicSacrificeS2C::default_instance_;
  delete MsgItemEquipMagicSacrificeS2C_reflection_;
  delete MsgItemEquipMagicInjectionC2S::default_instance_;
  delete MsgItemEquipMagicInjectionC2S_reflection_;
  delete MsgItemEquipMagicInjectionS2C::default_instance_;
  delete MsgItemEquipMagicInjectionS2C_reflection_;
  delete MsgItemEquipRepairC2S::default_instance_;
  delete MsgItemEquipRepairC2S_reflection_;
  delete MsgItemEquipRepairS2C::default_instance_;
  delete MsgItemEquipRepairS2C_reflection_;
  delete MsgItemEquipRepairS2C_RepairUuid::default_instance_;
  delete MsgItemEquipRepairS2C_RepairUuid_reflection_;
  delete MsgItemEquipStrengthenC2S::default_instance_;
  delete MsgItemEquipStrengthenC2S_reflection_;
  delete MsgItemEquipStrengthenS2C::default_instance_;
  delete MsgItemEquipStrengthenS2C_reflection_;
  delete MsgNewItemSendOverS2C::default_instance_;
  delete MsgNewItemSendOverS2C_reflection_;
  delete MsgItemEquipHideC2S::default_instance_;
  delete MsgItemEquipHideC2S_reflection_;
  delete MsgItemEquipHideS2C::default_instance_;
  delete MsgItemEquipHideS2C_reflection_;
  delete MsgIdentifyEquipC2S::default_instance_;
  delete MsgIdentifyEquipC2S_reflection_;
  delete IdentifyEquipResult::default_instance_;
  delete IdentifyEquipResult_reflection_;
  delete MsgIdentifyEquipS2C::default_instance_;
  delete MsgIdentifyEquipS2C_reflection_;
  delete MsgItemUserInteractiveResult_S2C::default_instance_;
  delete MsgItemUserInteractiveResult_S2C_reflection_;
  delete MsgDropItemC2S::default_instance_;
  delete MsgDropItemC2S_reflection_;
  delete DropItemResult::default_instance_;
  delete DropItemResult_reflection_;
  delete MsgDropItemS2C::default_instance_;
  delete MsgDropItemS2C_reflection_;
  delete MsgUpgradeItemC2S::default_instance_;
  delete MsgUpgradeItemC2S_reflection_;
  delete MsgUpgradeItemS2C::default_instance_;
  delete MsgUpgradeItemS2C_reflection_;
  delete MsgFoodUseCountS2C::default_instance_;
  delete MsgFoodUseCountS2C_reflection_;
  delete MsgItemMultiEquipC2S::default_instance_;
  delete MsgItemMultiEquipC2S_reflection_;
  delete MsgItemMultiEquipC2S_EquipInfo::default_instance_;
  delete MsgItemMultiEquipC2S_EquipInfo_reflection_;
  delete MsgItemMultiEquipS2C::default_instance_;
  delete MsgItemMultiEquipS2C_reflection_;
  delete MsgItemMaterialS2C::default_instance_;
  delete MsgItemMaterialS2C_reflection_;
  delete MsgItemProtectoUpgradeC2S::default_instance_;
  delete MsgItemProtectoUpgradeC2S_reflection_;
}

void protobuf_AddDesc_MsgItem_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::MsgPB::protobuf_AddDesc_MsgType_2eproto();
  ::MsgPB::protobuf_AddDesc_MsgGameDef_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\rMsgItem.proto\022\005MsgPB\032\rMsgType.proto\032\020M"
    "sgGameDef.proto\"2\n\017MsgMaterialData\022\016\n\006it"
    "emid\030\001 \001(\005\022\017\n\007itemnum\030\002 \001(\003\"\200\002\n\020PBTowerB"
    "uildData\022\n\n\002hp\030\001 \001(\005\022\024\n\014repair_begin\030\002 \001"
    "(\003\022\022\n\nrepair_end\030\003 \001(\003\022\021\n\trepair_hp\030\004 \001("
    "\005\022\r\n\005level\030\005 \001(\005\022D\n\020build_type_level\030\006 \003"
    "(\0132*.MsgPB.PBTowerBuildData.BuildTypeLev"
    "elInfo\022\025\n\ntower_uuid\030\007 \001(\003:\0010\0327\n\022BuildTy"
    "peLevelInfo\022\022\n\nbuild_type\030\001 \001(\005\022\r\n\005level"
    "\030\002 \001(\005\":\n\016MsgItemCounter\022\031\n\021item_counter"
    "_type\030\001 \001(\005\022\r\n\005count\030\002 \001(\005\">\n\017MsgItemCou"
    "nters\022+\n\014item_counter\030\001 \003(\0132\025.MsgPB.MsgI"
    "temCounter\"\366\006\n\021MsgItemCommonData\022\014\n\004uuid"
    "\030\001 \001(\003\022\016\n\006dataid\030\002 \001(\005\022\014\n\004name\030\003 \001(\t\022\013\n\003"
    "pos\030\004 \001(\005\022\r\n\005count\030\005 \001(\005\022\022\n\npackettype\030\006"
    " \001(\005\022\024\n\014expired_time\030\007 \001(\t\022\017\n\007durable\030\010 "
    "\001(\005\022\020\n\010cooldown\030\t \001(\t\022\026\n\016countdown_time\030"
    "\n \001(\t\022\022\n\ncreatetime\030\013 \001(\003\022\022\n\ndurablemax\030"
    "\014 \001(\005\022\032\n\022cooldown_forclient\030\024 \001(\005\022 \n\030cou"
    "ntdown_time_forclient\030\025 \001(\005\022\026\n\016rand_lock"
    "_temp\030\036 \001(\005\022\020\n\010extskill\030\037 \001(\005\022\023\n\013extattr"
    "lock\030  \001(\005\022\017\n\007magicid\030! \003(\005\022\023\n\013magictemp"
    "id\030\" \003(\005\022\"\n\007effects\030# \003(\0132\021.MsgPB.AttrEf"
    "fect\022\"\n\007baseval\030$ \003(\0132\021.MsgPB.AttrEffect"
    "\022$\n\tstaticval\030% \003(\0132\021.MsgPB.AttrEffect\022#"
    "\n\010tempbase\030& \003(\0132\021.MsgPB.AttrEffect\022&\n\013t"
    "empextattr\030\' \003(\0132\021.MsgPB.AttrEffect\022\025\n\re"
    "ffects_color\030( \003(\005\022\025\n\rtempext_color\030) \003("
    "\005\022\022\n\nstrengthen\030* \001(\005\022\014\n\004hide\030+ \001(\010\022.\n\rt"
    "owbuild_data\0302 \001(\0132\027.MsgPB.PBTowerBuildD"
    "ata\022\030\n\020auction_cooldown\0303 \001(\003\022\027\n\017pet_equ"
    "ip_skill\0305 \003(\005\022\031\n\nidentified\0306 \001(\010:\005fals"
    "e\022-\n\ritem_counters\0307 \001(\0132\026.MsgPB.MsgItem"
    "Counters\022\021\n\tintegrity\0308 \001(\005\022\017\n\007quality\0309"
    " \001(\005\022\r\n\005dirty\030d \001(\003\"\234\002\n\017ServerEquipInfo\022"
    "\014\n\004uuid\030\001 \001(\003\022\016\n\006dataid\030\002 \001(\005\022$\n\003pos\030\003 \001"
    "(\0162\027.MsgPB.EQUIP_PACKET_POS\022\014\n\004hide\030\004 \001("
    "\010\022\"\n\007effects\030\005 \003(\0132\021.MsgPB.AttrEffect\022\"\n"
    "\007baseval\030\006 \003(\0132\021.MsgPB.AttrEffect\022$\n\tsta"
    "ticval\030\007 \003(\0132\021.MsgPB.AttrEffect\022\017\n\007magic"
    "id\030\010 \003(\005\022\020\n\010extskill\030\t \001(\005\022\025\n\reffects_co"
    "lor\030\n \003(\005\022\017\n\007durable\030\013 \001(\005\"l\n\030ItemPacket"
    "CapabilityInfo\022 \n\004type\030\001 \001(\0162\022.MsgPB.PAC"
    "KET_TYPE\022\030\n\020current_grid_num\030\002 \001(\005\022\024\n\014ma"
    "x_grid_num\030\003 \001(\005\"\240\003\n\033MsgItemPacketCapabi"
    "lityGS2C\022A\n\007msgType\030\001 \001(\0162\017.MsgPB.EMsgTy"
    "pe:\037_MSG_ITEMPACKET_CAPABILITY_GS2C\022\020\n\010b"
    "ody_now\030\002 \001(\005\022\020\n\010body_max\030\003 \001(\005\022\020\n\010bank_"
    "now\030\004 \001(\005\022\020\n\010bank_max\030\005 \001(\005\022\021\n\trent1_now"
    "\030\006 \001(\005\022\021\n\trent1_max\030\007 \001(\005\022\026\n\016rent1_deadl"
    "ine\030\010 \001(\t\022\021\n\trent2_now\030\t \001(\005\022\021\n\trent2_ma"
    "x\030\n \001(\005\022\026\n\016rent2_deadline\030\013 \001(\t\022\023\n\013endle"
    "ss_now\030\014 \001(\005\022\023\n\013endless_max\030\r \001(\005\022\017\n\007pet"
    "_now\030\016 \001(\005\022\017\n\007pet_max\030\017 \001(\005\022.\n\005infos\030\020 \003"
    "(\0132\037.MsgPB.ItemPacketCapabilityInfo\"c\n\017S"
    "_ItemPacketPos\022\014\n\004uuid\030\001 \001(\003\022\"\n\006packet\030\002"
    " \001(\0162\022.MsgPB.PACKET_TYPE\022\013\n\003pos\030\003 \001(\005\022\021\n"
    "\titem_uuid\030\004 \001(\003\"z\n\024MsgItemPacketPosGS2C"
    "\022;\n\007msgType\030\001 \001(\0162\017.MsgPB.EMsgType:\031_MSG"
    "_ITEM_PACKET_POS_GS2C\022%\n\005datas\030\002 \003(\0132\026.M"
    "sgPB.S_ItemPacketPos\"\237\007\n\017MsgItemDataGS2C"
    "\0225\n\007msgType\030\001 \001(\0162\017.MsgPB.EMsgType:\023_MSG"
    "_ITEM_DATA_GS2C\022.\n\005items\030\002 \003(\0132\037.MsgPB.M"
    "sgItemDataGS2C.ItemData\022\034\n\risLocalServer"
    "\030\003 \001(\010:\005false\032\206\006\n\010ItemData\022\014\n\004uuid\030\001 \001(\003"
    "\022\016\n\006dataid\030\002 \001(\005\022\014\n\004name\030\003 \001(\t\022\013\n\003pos\030\004 "
    "\001(\005\022\r\n\005count\030\005 \001(\005\022&\n\npackettype\030\006 \001(\0162\022"
    ".MsgPB.PACKET_TYPE\022\020\n\010cooldown\030\007 \001(\005\022\024\n\014"
    "expired_time\030\010 \001(\t\022\026\n\016countdown_time\030\t \001"
    "(\005\022\017\n\007durable\030\n \001(\005\022\"\n\007effects\030\013 \003(\0132\021.M"
    "sgPB.AttrEffect\022\"\n\007baseval\030\014 \003(\0132\021.MsgPB"
    ".AttrEffect\022$\n\tstaticval\030\r \003(\0132\021.MsgPB.A"
    "ttrEffect\022\023\n\013extattrlock\030\016 \001(\005\022#\n\010tempba"
    "se\030\017 \003(\0132\021.MsgPB.AttrEffect\022&\n\013tempextat"
    "tr\030\020 \003(\0132\021.MsgPB.AttrEffect\022\017\n\007magicid\030\021"
    " \003(\005\022\023\n\013magictempid\030\022 \003(\005\022\020\n\010extskill\030\023 "
    "\001(\005\022,\n\013tower_build\030\024 \001(\0132\027.MsgPB.PBTower"
    "BuildData\022\022\n\ndurablemax\030\025 \001(\005\022\030\n\020auction"
    "_cooldown\030\026 \001(\003\022\025\n\reffects_color\030\027 \003(\005\022\025"
    "\n\rtempext_color\030\030 \003(\005\022\022\n\nstrengthen\030\031 \001("
    "\005\022\014\n\004hide\030\032 \001(\010\022\027\n\017pet_equip_skill\030\033 \003(\005"
    "\022\031\n\nidentified\030\034 \001(\010:\005false\022-\n\ritem_coun"
    "ters\030\035 \001(\0132\026.MsgPB.MsgItemCounters\022\021\n\tin"
    "tegrity\030\036 \001(\005\022\017\n\007quality\030\037 \001(\005\"x\n\021MsgIte"
    "mRemoveGS2C\0227\n\007msgType\030\001 \001(\0162\017.MsgPB.EMs"
    "gType:\025_MSG_ITEM_REMOVE_GS2C\022\014\n\004uuid\030\002 \001"
    "(\003\022\034\n\risLocalServer\030\003 \001(\010:\005false\"\261\001\n\023Msg"
    "ItemExchangeC2GS\022\020\n\010SerialID\030\001 \001(\005\0229\n\007ms"
    "gType\030\002 \001(\0162\017.MsgPB.EMsgType:\027_MSG_ITEM_"
    "EXCHANGE_C2GS\022\014\n\004uuid\030\003 \001(\003\022!\n\005BagTo\030\004 \001"
    "(\0162\022.MsgPB.PACKET_TYPE\022\r\n\005PosTo\030\005 \001(\005\022\r\n"
    "\005iggid\030\006 \001(\003\"\234\001\n\031MsgItemExchangeResultGS"
    "2C\022\020\n\010SerialID\030\001 \001(\005\022@\n\007msgType\030\002 \001(\0162\017."
    "MsgPB.EMsgType:\036_MSG_ITEM_EXCHANGE_RESUL"
    "T_GS2C\022+\n\006Result\030\003 \001(\0162\033.MsgPB.ITEM_EXCH"
    "ANGE_RESULT\"7\n\025ItemPacketPosSyncData\022\013\n\003"
    "pos\030\002 \001(\005\022\021\n\titem_uuid\030\003 \001(\003\"\316\001\n\030MsgSync"
    "ItemPacketPosC2GS\022@\n\007msgType\030\001 \001(\0162\017.Msg"
    "PB.EMsgType:\036_MSG_SYNC_ITEM_PACKET_POS_C"
    "2GS\022\020\n\010serialID\030\002 \001(\005\022\r\n\005iggid\030\003 \001(\003\022\"\n\006"
    "packet\030\004 \001(\0162\022.MsgPB.PACKET_TYPE\022+\n\005data"
    "s\030\005 \003(\0132\034.MsgPB.ItemPacketPosSyncData\"+\n"
    "\016MsgItemPosData\022\014\n\004uuid\030\001 \001(\003\022\013\n\003pos\030\002 \001"
    "(\005\"\350\001\n\030MsgSyncItemPacketPosGS2C\022@\n\007msgTy"
    "pe\030\001 \001(\0162\017.MsgPB.EMsgType:\036_MSG_SYNC_ITE"
    "M_PACKET_POS_GS2C\022\020\n\010serialID\030\002 \001(\005\022P\n\006r"
    "esult\030\003 \001(\0162 .MsgPB.E_SyncItemPacketPosR"
    "esult:\036E_SyncItemPacketPosResult_Fail\022&\n"
    "\007posData\030\004 \003(\0132\025.MsgPB.MsgItemPosData\"\272\001"
    "\n\020MsgItemApartC2GS\022\020\n\010SerialID\030\001 \001(\005\0226\n\007"
    "msgType\030\002 \001(\0162\017.MsgPB.EMsgType:\024_MSG_ITE"
    "M_APART_C2GS\022\014\n\004uuid\030\003 \001(\003\022!\n\005BagTo\030\004 \001("
    "\0162\022.MsgPB.PACKET_TYPE\022\r\n\005PosTo\030\005 \001(\005\022\r\n\005"
    "Count\030\006 \001(\005\022\r\n\005iggid\030\007 \001(\003\"\223\001\n\026MsgItemAp"
    "artResultGS2C\022\020\n\010SerialID\030\001 \001(\005\022=\n\007msgTy"
    "pe\030\002 \001(\0162\017.MsgPB.EMsgType:\033_MSG_ITEM_APA"
    "RT_RESULT_GS2C\022(\n\006Result\030\003 \001(\0162\030.MsgPB.I"
    "TEM_APART_RESULT\"\315\001\n\030MsgItemAddItemPacke"
    "tC2GS\022\020\n\010SerialID\030\001 \001(\005\022\?\n\007msgType\030\002 \001(\016"
    "2\017.MsgPB.EMsgType:\035_MSG_ITEM_ADD_ITEMPAC"
    "KET_C2GS\022\"\n\006emType\030\003 \001(\0162\022.MsgPB.PACKET_"
    "TYPE\022\r\n\005Count\030\004 \001(\005\022\r\n\005iggid\030\005 \001(\003\022\034\n\rca"
    "nUseDiamond\030\006 \001(\010:\005false\"\357\001\n\036MsgItemAddI"
    "temPacketResultGS2C\022\020\n\010SerialID\030\001 \001(\005\022F\n"
    "\007msgType\030\002 \001(\0162\017.MsgPB.EMsgType:$_MSG_IT"
    "EM_ADD_ITEMPACKET_RESULT_GS2C\0221\n\006Result\030"
    "\003 \001(\0162!.MsgPB.ADD_ITEMPACKET_SIZE_RESULT"
    "\022\"\n\006packet\030\004 \001(\0162\022.MsgPB.PACKET_TYPE\022\034\n\r"
    "canUseDiamond\030\005 \001(\010:\005false\"\260\001\n\031MsgItemRe"
    "ntItemPacketC2GS\022\020\n\010SerialID\030\001 \001(\005\022@\n\007ms"
    "gType\030\002 \001(\0162\017.MsgPB.EMsgType:\036_MSG_ITEM_"
    "RENT_ITEMPACKET_C2GS\022\"\n\006emType\030\003 \001(\0162\022.M"
    "sgPB.PACKET_TYPE\022\014\n\004Days\030\004 \001(\005\022\r\n\005iggid\030"
    "\005 \001(\003\"\253\001\n\037MsgItemRentItemPacketResultGS2"
    "C\022\020\n\010SerialID\030\001 \001(\005\022G\n\007msgType\030\002 \001(\0162\017.M"
    "sgPB.EMsgType:%_MSG_ITEM_RENT_ITEMPACKET"
    "_RESULT_GS2C\022-\n\006Result\030\003 \001(\0162\035.MsgPB.REN"
    "T_ITEMPACKET_RESULT\"u\n\016MsgItemDelC2GS\022\020\n"
    "\010SerialID\030\001 \001(\005\0224\n\007msgType\030\002 \001(\0162\017.MsgPB"
    ".EMsgType:\022_MSG_ITEM_DEL_C2GS\022\014\n\004uuid\030\003 "
    "\001(\003\022\r\n\005iggid\030\004 \001(\003\"\215\001\n\024MsgItemDelResultG"
    "S2C\022\020\n\010SerialID\030\001 \001(\005\022;\n\007msgType\030\002 \001(\0162\017"
    ".MsgPB.EMsgType:\031_MSG_ITEM_DEL_RESULT_GS"
    "2C\022&\n\006Result\030\003 \001(\0162\026.MsgPB.ITEM_DEL_RESU"
    "LT\"\252\001\n\026MsgItemDelRecoveryC2GS\022\020\n\010SerialI"
    "D\030\001 \001(\005\022=\n\007msgType\030\002 \001(\0162\017.MsgPB.EMsgTyp"
    "e:\033_MSG_ITEM_DEL_RECOVERY_C2GS\022!\n\005BagTo\030"
    "\003 \001(\0162\022.MsgPB.PACKET_TYPE\022\r\n\005PosTo\030\004 \001(\005"
    "\022\r\n\005iggid\030\005 \001(\003\"\247\001\n\034MsgItemDelRecoveryRe"
    "sultGS2C\022\020\n\010SerialID\030\001 \001(\005\022D\n\007msgType\030\002 "
    "\001(\0162\017.MsgPB.EMsgType:\"_MSG_ITEM_DEL_RECO"
    "VERY_RESULT_GS2C\022/\n\006Result\030\003 \001(\0162\037.MsgPB"
    ".ITEM_DEL_RECOVERY_RESULT\"\250\001\n\020MsgItemEqu"
    "ipC2GS\022\020\n\010SerialID\030\001 \001(\003\0226\n\007msgType\030\002 \001("
    "\0162\017.MsgPB.EMsgType:\024_MSG_ITEM_EQUIP_C2GS"
    "\022\014\n\004uuid\030\003 \001(\003\022\025\n\rBodyPacketPos\030\004 \001(\005\022\026\n"
    "\016EquipPacketPos\030\005 \001(\005\022\r\n\005iggid\030\006 \001(\003\"\272\001\n"
    "\026MsgItemEquipResultC2GS\022\020\n\010SerialID\030\001 \001("
    "\003\022=\n\007msgType\030\002 \001(\0162\017.MsgPB.EMsgType:\033_MS"
    "G_ITEM_EQUIP_RESULT_GS2C\022(\n\006Result\030\003 \001(\016"
    "2\030.MsgPB.ITEM_EQUIP_RESULT\022\r\n\005iggid\030\004 \001("
    "\003\022\026\n\016EquipPacketPos\030\005 \001(\005\"\304\001\n\033MsgItemPla"
    "yerEquipNotifyS2C\022\020\n\010SerialID\030\001 \001(\005\022C\n\007m"
    "sgType\030\002 \001(\0162\017.MsgPB.EMsgType:!_MSG_ITEM"
    "_PLAYER_EQUIP_NOTIFY_S2C\022\r\n\005iggid\030\003 \001(\003\022"
    "\023\n\013mapobjectid\030\004 \001(\005\022*\n\nequip_info\030\005 \001(\013"
    "2\026.MsgPB.ServerEquipInfo\"\335\001\n!MsgItemOthe"
    "rPlayerChangeEquip_S2C\022I\n\007msgType\030\001 \001(\0162"
    "\017.MsgPB.EMsgType:\'_MSG_ITEM_OTHER_PLAYER"
    "_CHANGE_EQUIP_S2C\022\r\n\005iggid\030\002 \001(\003\022 \n\030othe"
    "r_player_mapobjectid\030\003 \001(\005\022*\n\010ItemData\030\004"
    " \001(\0132\030.MsgPB.MsgItemCommonData\022\020\n\010take_o"
    "ff\030\005 \001(\010\"\221\001\n\rMsgItemUseC2S\022\020\n\010SerialID\030\001"
    " \001(\005\0223\n\007msgType\030\002 \001(\0162\017.MsgPB.EMsgType:\021"
    "_MSG_ITEM_USE_C2S\022\r\n\005iggid\030\003 \001(\003\022\014\n\004uuid"
    "\030\004 \001(\003\022\r\n\005Count\030\005 \001(\005\022\r\n\005param\030\006 \001(\003\"\334\001\n"
    "\023MsgItemUseResultS2C\022\020\n\010SerialID\030\001 \001(\005\022:"
    "\n\007msgType\030\002 \001(\0162\017.MsgPB.EMsgType:\030_MSG_I"
    "TEM_USE_RESULT_S2C\022\r\n\005iggid\030\003 \001(\003\022\016\n\006Ite"
    "mID\030\004 \001(\005\022\014\n\004uuid\030\005 \001(\003\022\r\n\005Count\030\006 \001(\005\022&"
    "\n\006Result\030\007 \001(\0162\026.MsgPB.ITEM_USE_RESULT\022\023"
    "\n\013add_buff_id\030\010 \001(\005\"\247\002\n\021MsgPacketSizeDat"
    "a\022\020\n\010body_now\030\001 \001(\005\022\020\n\010body_max\030\002 \001(\005\022\020\n"
    "\010bank_now\030\003 \001(\005\022\020\n\010bank_max\030\004 \001(\005\022\021\n\tren"
    "t1_now\030\005 \001(\005\022\021\n\trent1_max\030\006 \001(\005\022\026\n\016rent1"
    "_deadline\030\007 \001(\t\022\021\n\trent2_now\030\010 \001(\005\022\021\n\tre"
    "nt2_max\030\t \001(\005\022\026\n\016rent2_deadline\030\n \001(\t\022\017\n"
    "\007pet_now\030\013 \001(\005\022\r\n\005dirty\030\014 \001(\003\022.\n\005infos\030\r"
    " \003(\0132\037.MsgPB.ItemPacketCapabilityInfo\"\226\001"
    "\n\030MsgItemSyncItemDataMS2GS\022\?\n\007msgType\030\001 "
    "\001(\0162\017.MsgPB.EMsgType:\035_MSG_ITEM_SYNC_ITE"
    "MDATA_MS2GS\022\r\n\005iggid\030\002 \001(\003\022*\n\010ItemData\030\003"
    " \001(\0132\030.MsgPB.MsgItemCommonData\"\230\001\n\031MsgIt"
    "emSyncItemDataMS2MCS\022@\n\007msgType\030\001 \001(\0162\017."
    "MsgPB.EMsgType:\036_MSG_ITEM_SYNC_ITEMDATA_"
    "MS2MCS\022\r\n\005iggid\030\002 \001(\003\022*\n\010ItemData\030\003 \001(\0132"
    "\030.MsgPB.MsgItemCommonData\"\233\001\n\035MsgItemCli"
    "entSyncInitItemC2GS\022@\n\007msgType\030\001 \001(\0162\017.M"
    "sgPB.EMsgType:\036_MSG_ITEM_CLIENTSYNC_INIT"
    "_ITEM\022\014\n\004uuid\030\002 \001(\003\022\016\n\006dataid\030\003 \001(\005\022\r\n\005c"
    "ount\030\004 \001(\005\022\013\n\003pos\030\005 \001(\005\"\214\001\n\034MsgItemClien"
    "tSyncAddItemC2GS\022\?\n\007msgType\030\001 \001(\0162\017.MsgP"
    "B.EMsgType:\035_MSG_ITEM_CLIENTSYNC_ADD_ITE"
    "M\022\014\n\004uuid\030\002 \001(\003\022\016\n\006dataid\030\003 \001(\005\022\r\n\005count"
    "\030\004 \001(\005\"\214\001\n\034MsgItemClientSyncDelItemC2GS\022"
    "\?\n\007msgType\030\001 \001(\0162\017.MsgPB.EMsgType:\035_MSG_"
    "ITEM_CLIENTSYNC_DEL_ITEM\022\014\n\004uuid\030\002 \001(\003\022\016"
    "\n\006dataid\030\003 \001(\005\022\r\n\005count\030\004 \001(\005\"\302\001\n\022MsgIte"
    "mShortcutS2C\0228\n\007msgType\030\001 \001(\0162\017.MsgPB.EM"
    "sgType:\026_MSG_ITEM_SHORTCUT_S2C\022\r\n\005iggid\030"
    "\002 \001(\003\0228\n\010shortcut\030\003 \003(\0132&.MsgPB.MsgItemS"
    "hortcutS2C.ShortcutInfo\032)\n\014ShortcutInfo\022"
    "\013\n\003pos\030\001 \001(\005\022\014\n\004uuid\030\002 \001(\003\"\177\n\025MsgItemSho"
    "rtcutSetC2S\022<\n\007msgType\030\001 \001(\0162\017.MsgPB.EMs"
    "gType:\032_MSG_ITEM_SHORTCUT_SET_C2S\022\r\n\005igg"
    "id\030\002 \001(\003\022\013\n\003pos\030\003 \001(\005\022\014\n\004uuid\030\004 \001(\003\"\222\001\n\027"
    "MsgItemEquipAttrLockC2S\022\?\n\007msgType\030\001 \001(\016"
    "2\017.MsgPB.EMsgType:\035_MSG_ITEM_EQUIP_ATTR_"
    "LOCK_C2S\022\r\n\005iggid\030\002 \001(\003\022\014\n\004uuid\030\003 \001(\003\022\013\n"
    "\003pos\030\004 \001(\005\022\014\n\004lock\030\005 \001(\010\"\222\001\n\027MsgItemEqui"
    "pAttrLockS2C\022\?\n\007msgType\030\001 \001(\0162\017.MsgPB.EM"
    "sgType:\035_MSG_ITEM_EQUIP_ATTR_LOCK_S2C\022\r\n"
    "\005iggid\030\002 \001(\003\022\014\n\004uuid\030\003 \001(\003\022\013\n\003pos\030\004 \001(\005\022"
    "\014\n\004lock\030\005 \001(\010\"\265\001\n\027MsgItemEquipAttrWashC2"
    "S\022\?\n\007msgType\030\001 \001(\0162\017.MsgPB.EMsgType:\035_MS"
    "G_ITEM_EQUIP_ATTR_WASH_C2S\022\r\n\005iggid\030\002 \001("
    "\003\022\014\n\004uuid\030\003 \001(\003\022\036\n\005nType\030\004 \001(\0162\017.MsgPB.W"
    "ASHTYPE\022\034\n\rcanUseDiamond\030\005 \001(\010:\005false\"\220\001"
    "\n\027MsgItemEquipAttrWashS2C\022\?\n\007msgType\030\001 \001"
    "(\0162\017.MsgPB.EMsgType:\035_MSG_ITEM_EQUIP_ATT"
    "R_WASH_S2C\022\r\n\005iggid\030\002 \001(\003\022%\n\004eRes\030\003 \001(\0162"
    "\027.MsgPB.ITEM_WASH_RESULT\"\245\001\n\027MsgItemEqui"
    "pAttrSaveC2S\022\?\n\007msgType\030\001 \001(\0162\017.MsgPB.EM"
    "sgType:\035_MSG_ITEM_EQUIP_ATTR_SAVE_C2S\022\r\n"
    "\005iggid\030\002 \001(\003\022\014\n\004uuid\030\003 \001(\003\022\014\n\004save\030\004 \001(\010"
    "\022\036\n\005nType\030\005 \001(\0162\017.MsgPB.WASHTYPE\"w\n\027MsgI"
    "temEquipAttrSaveS2C\022\?\n\007msgType\030\001 \001(\0162\017.M"
    "sgPB.EMsgType:\035_MSG_ITEM_EQUIP_ATTR_SAVE"
    "_S2C\022\r\n\005iggid\030\002 \001(\003\022\014\n\004uuid\030\003 \001(\003\"\244\001\n\035Ms"
    "gItemEquipMagicSacrificeC2S\022E\n\007msgType\030\001"
    " \001(\0162\017.MsgPB.EMsgType:#_MSG_ITEM_EQUIP_M"
    "AGIC_SACRIFICE_C2S\022\r\n\005iggid\030\002 \001(\003\022\014\n\004uui"
    "d\030\003 \001(\003\022\037\n\005items\030\004 \003(\0132\020.MsgPB.KeyValI64"
    "\"\273\001\n\035MsgItemEquipMagicSacrificeS2C\022E\n\007ms"
    "gType\030\001 \001(\0162\017.MsgPB.EMsgType:#_MSG_ITEM_"
    "EQUIP_MAGIC_SACRIFICE_S2C\022\r\n\005iggid\030\002 \001(\003"
    "\022%\n\003res\030\003 \001(\0162\030.MsgPB.ITEM_MAGIC_RESULT\022"
    "\017\n\007magicid\030\004 \003(\005\022\014\n\004uuid\030\005 \001(\003\"\222\001\n\035MsgIt"
    "emEquipMagicInjectionC2S\022E\n\007msgType\030\001 \001("
    "\0162\017.MsgPB.EMsgType:#_MSG_ITEM_EQUIP_MAGI"
    "C_INJECTION_C2S\022\r\n\005iggid\030\002 \001(\003\022\014\n\004uuid\030\003"
    " \001(\003\022\r\n\005index\030\004 \001(\005\"\252\001\n\035MsgItemEquipMagi"
    "cInjectionS2C\022E\n\007msgType\030\001 \001(\0162\017.MsgPB.E"
    "MsgType:#_MSG_ITEM_EQUIP_MAGIC_INJECTION"
    "_S2C\022\r\n\005iggid\030\002 \001(\003\022%\n\003res\030\003 \001(\0162\030.MsgPB"
    ".ITEM_MAGIC_RESULT\022\014\n\004uuid\030\004 \001(\003\"\251\001\n\025Msg"
    "ItemEquipRepairC2S\022<\n\007msgType\030\001 \001(\0162\017.Ms"
    "gPB.EMsgType:\032_MSG_ITEM_EQUIP_REPAIR_C2S"
    "\022\r\n\005iggid\030\002 \001(\003\022\014\n\004uuid\030\003 \001(\003\022!\n\005eType\030\004"
    " \001(\0162\022.MsgPB.PACKET_TYPE\022\022\n\nrepairType\030\005"
    " \001(\005\"\337\001\n\025MsgItemEquipRepairS2C\022<\n\007msgTyp"
    "e\030\001 \001(\0162\017.MsgPB.EMsgType:\032_MSG_ITEM_EQUI"
    "P_REPAIR_S2C\022\r\n\005iggid\030\002 \001(\003\022&\n\003res\030\003 \001(\016"
    "2\031.MsgPB.ITEM_REPAIR_RESULT\0225\n\004uuid\030\004 \003("
    "\0132\'.MsgPB.MsgItemEquipRepairS2C.RepairUu"
    "id\032\032\n\nRepairUuid\022\014\n\004uuid\030\001 \001(\003\"\177\n\031MsgIte"
    "mEquipStrengthenC2S\022E\n\007msgType\030\001 \001(\0162\017.M"
    "sgPB.EMsgType:#_MSG_DUNGEON_ENDLESS_STRE"
    "NGTHEN_C2S\022\r\n\005iggid\030\002 \001(\003\022\014\n\004uuid\030\003 \001(\003\""
    "\235\001\n\031MsgItemEquipStrengthenS2C\022E\n\007msgType"
    "\030\001 \001(\0162\017.MsgPB.EMsgType:#_MSG_DUNGEON_EN"
    "DLESS_STRENGTHEN_S2C\022\r\n\005iggid\030\002 \001(\003\022*\n\003r"
    "es\030\003 \001(\0162\035.MsgPB.ITEM_STRENGTHEN_RESULT\""
    "d\n\025MsgNewItemSendOverS2C\022<\n\007msgType\030\001 \001("
    "\0162\017.MsgPB.EMsgType:\032_MSG_ITEM_NEW_SENDOV"
    "ER_S2C\022\r\n\005iggid\030\002 \001(\003\"|\n\023MsgItemEquipHid"
    "eC2S\022:\n\007msgType\030\001 \001(\0162\017.MsgPB.EMsgType:\030"
    "_MSG_ITEM_EQUIP_HIDE_C2S\022\r\n\005iggid\030\002 \001(\003\022"
    "\014\n\004uuid\030\003 \001(\003\022\014\n\004hide\030\004 \001(\010\"|\n\023MsgItemEq"
    "uipHideS2C\022:\n\007msgType\030\001 \001(\0162\017.MsgPB.EMsg"
    "Type:\030_MSG_ITEM_EQUIP_HIDE_S2C\022\r\n\005iggid\030"
    "\002 \001(\003\022\014\n\004uuid\030\003 \001(\003\022\014\n\004hide\030\004 \001(\010\"n\n\023Msg"
    "IdentifyEquipC2S\0229\n\007msgType\030\001 \001(\0162\017.MsgP"
    "B.EMsgType:\027_MSG_IDENTIFY_EQUIP_C2S\022\r\n\005i"
    "ggid\030\002 \001(\003\022\r\n\005uuids\030\003 \003(\003\"\206\001\n\023IdentifyEq"
    "uipResult\022I\n\003res\030\001 \002(\0162\036.MsgPB.E_IDENTIF"
    "Y_EQUIP_RESULT:\034E_IDENTIFY_EQUIP_RESULT_"
    "FAIL\022$\n\004item\030\002 \001(\0132\026.MsgPB.MsgItemDataGS"
    "2C\"\214\001\n\023MsgIdentifyEquipS2C\0229\n\007msgType\030\001 "
    "\001(\0162\017.MsgPB.EMsgType:\027_MSG_IDENTIFY_EQUI"
    "P_S2C\022\r\n\005iggid\030\002 \001(\003\022+\n\007results\030\003 \003(\0132\032."
    "MsgPB.IdentifyEquipResult\"\271\001\n MsgItemUse"
    "rInteractiveResult_S2C\022F\n\007msgType\030\001 \001(\0162"
    "\017.MsgPB.EMsgType:$_MSG_ITEM_USE_INTERACT"
    "IVE_RESULT_S2C\022\r\n\005iggid\030\002 \001(\003\022\016\n\006ItemID\030"
    "\003 \001(\005\022\014\n\004uuid\030\004 \001(\003\022 \n\005items\030\005 \003(\0132\021.Msg"
    "PB.ItemReward\"d\n\016MsgDropItemC2S\0224\n\007msgTy"
    "pe\030\001 \001(\0162\017.MsgPB.EMsgType:\022_MSG_DROP_ITE"
    "M_C2S\022\r\n\005iggid\030\002 \001(\003\022\r\n\005uuids\030\003 \003(\003\"[\n\016D"
    "ropItemResult\022;\n\003res\030\001 \002(\0162\027.MsgPB.E_Dro"
    "pItemResult:\025E_DropItemResult_Fail\022\014\n\004uu"
    "id\030\002 \001(\003\"}\n\016MsgDropItemS2C\0224\n\007msgType\030\001 "
    "\001(\0162\017.MsgPB.EMsgType:\022_MSG_DROP_ITEM_S2C"
    "\022\r\n\005iggid\030\002 \001(\003\022&\n\007results\030\003 \003(\0132\025.MsgPB"
    ".DropItemResult\"i\n\021MsgUpgradeItemC2S\0227\n\007"
    "msgType\030\001 \001(\0162\017.MsgPB.EMsgType:\025_MSG_UPG"
    "RADE_ITEM_C2S\022\r\n\005iggid\030\002 \001(\003\022\014\n\004uuid\030\003 \001"
    "(\003\"\263\001\n\021MsgUpgradeItemS2C\0227\n\007msgType\030\001 \001("
    "\0162\017.MsgPB.EMsgType:\025_MSG_UPGRADE_ITEM_S2"
    "C\022\r\n\005iggid\030\002 \001(\003\022\036\n\002ec\030\003 \001(\0162\022.MsgPB.E_E"
    "rrorCode\022\014\n\004uuid\030\004 \001(\003\022\023\n\013old_data_id\030\005 "
    "\001(\005\022\023\n\013new_data_id\030\006 \001(\005\"\223\001\n\022MsgFoodUseC"
    "ountS2C\0225\n\007msgType\030\001 \001(\0162\017.MsgPB.EMsgTyp"
    "e:\023_MSG_FOOD_COUNT_S2C\022\r\n\005count\030\002 \001(\005\022\032\n"
    "\022dig_mine_exp_count\030\003 \001(\005\022\033\n\023dig_plant_e"
    "xp_count\030\004 \001(\005\"\265\001\n\024MsgItemMultiEquipC2S\022"
    ":\n\007msgType\030\001 \001(\0162\017.MsgPB.EMsgType:\030MSG_I"
    "TEM_MULTI_EQUIP_C2S\0223\n\004item\030\002 \003(\0132%.MsgP"
    "B.MsgItemMultiEquipC2S.EquipInfo\032,\n\tEqui"
    "pInfo\022\014\n\004uuid\030\001 \001(\003\022\021\n\tequip_pos\030\002 \001(\005\"`"
    "\n\024MsgItemMultiEquipS2C\022:\n\007msgType\030\001 \001(\0162"
    "\017.MsgPB.EMsgType:\030MSG_ITEM_MULTI_EQUIP_S"
    "2C\022\014\n\004uuid\030\002 \003(\003\"y\n\022MsgItemMaterialS2C\022="
    "\n\007msgType\030\001 \001(\0162\017.MsgPB.EMsgType:\033_MSG_S"
    "YNC_ITEM_MATERIAL_S2C\022$\n\004data\030\002 \003(\0132\026.Ms"
    "gPB.MsgMaterialData\"\234\001\n\031MsgItemProtectoU"
    "pgradeC2S\022\020\n\010SerialID\030\001 \001(\005\022;\n\007msgType\030\002"
    " \001(\0162\017.MsgPB.EMsgType:\031_MSG_UPGRADE_PRO_"
    "ITEM_S2C\022\r\n\005iggid\030\003 \001(\003\022\014\n\004uuid\030\004 \001(\003\022\023\n"
    "\013protectorid\030\005 \001(\003*\252\002\n\013PACKET_TYPE\022\010\n\004BO"
    "DY\020\000\022\010\n\004BANK\020\001\022\r\n\tEQUIPMENT\020\002\022\007\n\003DEL\020\003\022\t"
    "\n\005RENT1\020\004\022\t\n\005RENT2\020\005\022\n\n\006CRAFT1\020\006\022\n\n\006CRAF"
    "T2\020\007\022\n\n\006CRAFT3\020\010\022\013\n\007EXPLORE\020\t\022\020\n\014EQUIPEN"
    "DLESS\020\n\022\014\n\010PVP_BODY\020\013\022\016\n\nBADGE_BODY\020\014\022\007\n"
    "\003PET\020\r\022\014\n\010PETEQUIP\020\016\022\023\n\017PROTECTOR_EQUIP\020"
    "\017\022\016\n\nBOX_FOREST\020\020\022\016\n\nBOX_DESERT\020\021\022\016\n\nBOX"
    "_FROZEN\020\022\022\014\n\010BOX_RUST\020\023\022\016\n\nBOX_JUNGLE\020\024*"
    "\266\001\n\024EN_ITEM_COUNTER_TYPE\022\030\n\024EN_ITEM_COUN"
    "TER_NONE\020\000\022)\n%EN_ITEM_COUNTER_INTERACTIV"
    "E_USE_CLICK\020\001\022-\n)EN_ITEM_COUNTER_INTERAC"
    "TIVE_USE_CONDITION\020\002\022*\n&EN_ITEM_COUNTER_"
    "INTERACTIVE_USE_BUTTON\020\003*\340\002\n\024ITEM_EXCHAN"
    "GE_RESULT\022\031\n\025ITEM_EXCHANGE_SUCCESS\020\000\022\036\n\032"
    "ITEM_EXCHANGE_PLAYER_FAILE\020\001\022\"\n\036ITEM_EXC"
    "HANGE_POSITION_THESAME\020\002\022#\n\037ITEM_EXCHANG"
    "E_BAG_CANT_EXCHNAGE\020\003\022(\n$ITEM_EXCHANGE_P"
    "OSITION_NOT_AVAILABLE\020\004\022 \n\034ITEM_EXCHANGE"
    "_ITEM_NOT_EXIST\020\005\022)\n%ITEM_EXCHANGE_ITEM_"
    "TEMPLATE_NOT_EXIST\020\006\022\036\n\032ITEM_EXCHANGE_BA"
    "G_NOT_RENT\020\007\022-\n)ITEM_EXCHANGE_CANOT_EXCH"
    "ANGE_EXPIRED_ITEM\020\010*\224\003\n\031E_SyncItemPacket"
    "PosResult\022%\n!E_SyncItemPacketPosResult_S"
    "uccess\020\000\022\"\n\036E_SyncItemPacketPosResult_Fa"
    "il\020\001\022$\n E_SyncItemPacketPosResult_NoData"
    "\020\002\022)\n%E_SyncItemPacketPosResult_ErrorPac"
    "ket\020\003\022\'\n#E_SyncItemPacketPosResult_ItemN"
    "oPos\020\004\0220\n,E_SyncItemPacketPosResult_OneI"
    "temMultiplePos\020\005\0220\n,E_SyncItemPacketPosR"
    "esult_OnePosMultipleItem\020\006\022(\n$E_SyncItem"
    "PacketPosResult_InvalidPos\020\007\022$\n E_SyncIt"
    "emPacketPosResult_NoItem\020\010*\234\003\n\021ITEM_APAR"
    "T_RESULT\022\026\n\022ITEM_APART_SUCCESS\020\000\022\033\n\027ITEM"
    "_APART_PLAYER_FAILE\020\001\022 \n\034ITEM_APART_APAR"
    "T_COUNT_FAILE\020\002\022\035\n\031ITEM_APART_BAG_CANT_A"
    "PART\020\003\022\037\n\033ITEM_APART_POSITION_THESAME\020\004\022"
    " \n\034ITEM_APART_SOURCE_ITEM_FAILE\020\005\022$\n ITE"
    "M_APART_TARGET_POSITION_FAILE\020\006\022&\n\"ITEM_"
    "APART_ITEM_TEMPLATE_NOT_EXIST\020\007\022\035\n\031ITEM_"
    "APART_ITEM_CANT_HEAP\020\010\022!\n\035ITEM_APART_SOU"
    "RCE_COUNT_FAILE\020\t\022 \n\034ITEM_APART_MUST_THE"
    "_SAME_BAG\020\n\022\034\n\030ITEM_APART_BAG_NEED_RENT\020"
    "\013*\240\002\n\032ADD_ITEMPACKET_SIZE_RESULT\022\037\n\033ADD_"
    "ITEMPACKET_SIZE_SUCCESS\020\000\022$\n ADD_ITEMPAC"
    "KET_SIZE_PACKET_ERROR\020\001\022\'\n#ADD_ITEMPACKE"
    "T_SIZE_ADD_COUNT_ERROR\020\002\022#\n\037ADD_ITEMPACK"
    "ET_SIZE_PACKET_FULL\020\003\022&\n\"ADD_ITEMPACKET_"
    "SIZE_MONEY_SHORTAGE\020\004\022!\n\035ADD_ITEMPACKET_"
    "SIZE_BUY_ERROR\020\005\022\"\n\036ADD_ITEMPACKET_SIZE_"
    "DATA_ERROR\020\006*\336\001\n\026RENT_ITEMPACKET_RESULT\022"
    "\033\n\027RENT_ITEMPACKET_SUCCESS\020\000\022 \n\034RENT_ITE"
    "MPACKET_PACKET_ERROR\020\001\022\"\n\036RENT_ITEMPACKE"
    "T_RENT_DAY_ERROR\020\002\022\036\n\032RENT_ITEMPACKET_IN"
    "_RENTING\020\003\022\"\n\036RENT_ITEMPACKET_MONEY_SHOR"
    "TAGE\020\004\022\035\n\031RENT_ITEMPACKET_BUY_ERROR\020\005*_\n"
    "\017ITEM_DEL_RESULT\022\024\n\020ITEM_DEL_SUCCESS\020\000\022\031"
    "\n\025ITEM_DEL_BAG_CANT_DEL\020\001\022\033\n\027ITEM_DEL_GE"
    "T_ITEM_FAILE\020\002*\376\001\n\030ITEM_DEL_RECOVERY_RES"
    "ULT\022\035\n\031ITEM_DEL_RECOVERY_SUCCESS\020\000\022$\n IT"
    "EM_DEL_RECOVERY_NO_DELED_ITEM1\020\001\022\"\n\036ITEM"
    "_DEL_RECOVERY_PACKET_ERROR\020\002\022$\n ITEM_DEL"
    "_RECOVERY_POSITION_ERROR\020\003\022(\n$ITEM_DEL_R"
    "ECOVERY_POSITION_NEED_RENT\020\004\022)\n%ITEM_DEL"
    "_RECOVERY_POSITION_ITEM_EXIST\020\005*\322\004\n\021ITEM"
    "_EQUIP_RESULT\022\026\n\022ITEM_EQUIP_SUCCESS\020\000\022\031\n"
    "\025ITEM_EQUIP_ITEM_FAILE\020\001\022\"\n\036ITEM_EQUIP_I"
    "TEM_TEMPLATE_FAILE\020\002\022#\n\037ITEM_EQUIP_ARMOR"
    "_TEMPLATE_FAILE\020\003\022!\n\035ITEM_EQUIP_NOT_ARMO"
    "R_OR_WAPON\020\004\022\"\n\036ITEM_EQUIP_PACKAET_POS_F"
    "AILE_1\020\005\022\'\n#ITEM_EQUIP_UNEQUIP_PACKET_PO"
    "S_FAILE\020\006\022\'\n#ITEM_EQUIP_AMULET_PACKAET_P"
    "OS_FAILE\020\007\022\027\n\023ITEM_EQUIP_LV_FAILE\020\010\022\"\n\036I"
    "TEM_EQUIP_PACKAET_POS_FAILE_2\020\t\022\"\n\036ITEM_"
    "EQUIP_GET_ITEM_DATA_FAILE\020\n\022\034\n\030ITEM_EQUI"
    "P_DURABLE_FAILE\020\013\022!\n\035ITEM_EQUIP_EXCHANGE"
    "_POS_FAILE\020\014\022\"\n\036ITEM_EQUIP_EXCHANGE_ITEM"
    "_FAILE\020\r\022&\n\"ITEM_EQUIP_EXCHANGE_TEMPLATE"
    "_FAILE\020\016\022\035\n\031ITEM_EQUIP_EXCHANGE_FAILE\020\017\022"
    "\033\n\027ITEM_EQUIP_PKGSIZE_FULL\020\020*\203\004\n\020EQUIP_P"
    "ACKET_POS\022\025\n\021EQUIP_PACKET_NULL\020\000\022\025\n\021EQUI"
    "P_PACKET_HEAD\020\001\022\030\n\024EQUIP_PACKET_CLOTHES\020"
    "\002\022\026\n\022EQUIP_PACKET_PANTS\020\003\022\025\n\021EQUIP_PACKE"
    "T_BACK\020\004\022\025\n\021EQUIP_PACKET_SHOE\020\005\022\030\n\024EQUIP"
    "_PACKET_AMULET1\020\006\022\030\n\024EQUIP_PACKET_AMULET"
    "2\020\007\022\030\n\024EQUIP_PACKET_AMULET3\020\010\022\031\n\025EQUIP_P"
    "ACKET_COS_HEAD\020\t\022\034\n\030EQUIP_PACKET_COS_CLO"
    "THES\020\n\022\032\n\026EQUIP_PACKET_COS_PANTS\020\013\022\031\n\025EQ"
    "UIP_PACKET_COS_BACK\020\014\022\031\n\025EQUIP_PACKET_CO"
    "S_SHOE\020\r\022\033\n\027EQUIP_PACKET_COS_WEAPON\020\016\022\033\n"
    "\027EQUIP_PACKET_COS_EFFECT\020\017\022\027\n\023EQUIP_PACK"
    "ET_WEAPON\020\020\022\026\n\022EQUIP_PACKET_HORSE\020\021\022\035\n\031E"
    "QUIP_PACKET_POSITION_MAX\020\022*\245\004\n\017ITEM_USE_"
    "RESULT\022\024\n\020ITEM_USE_SUCCESS\020\000\022\024\n\020ITEM_USE"
    "_FAILURE\020\001\022\031\n\025ITEM_USE_PLAYER_FAILE\020\002\022\033\n"
    "\027ITEM_USE_GET_ITEM_FAILE\020\003\022\037\n\033ITEM_USE_T"
    "EMPLATE_NOT_EXIST\020\004\022\031\n\025ITEM_USE_ON_COOL_"
    "DOWN\020\005\022\025\n\021ITEM_USE_LV_FAILE\020\006\022\031\n\025ITEM_US"
    "E_TIME_EXPIRED\020\007\022\021\n\rITEM_USE_LACK\020\010\022\027\n\023I"
    "TEM_USE_NO_CONSUNE\020\t\022\023\n\017ITEM_USE_NO_USE\020"
    "\n\022\025\n\021ITEM_USE_ONLY_ONE\020\013\022\033\n\027ITEM_USE_SUR"
    "VIVAL_ERROR\020\014\022/\n+ITEM_USE_SURVIVAL_ALREA"
    "DY_WAITING_FOR_EVENT\020\r\022\026\n\022ITEM_USE_MAP_F"
    "AILE\020\016\022\030\n\024ITEM_USE_PACKET_FULL\020\017\022&\n\"ITEM"
    "_USE_SURVIVAL_FAIL_SUPERIMPOSE\020\020\022\"\n\036ITEM"
    "_USE_SURVIVAL_FAIL_CRYSTAL\020\021\022\034\n\030ITEM_USE"
    "_FAIL_OVER_LIMIT\020\022*\242\001\n\020ITEM_WASH_RESULT\022"
    "\023\n\017ITEM_WASH_FAILE\020\000\022\024\n\020ITEM_WASH_SUCCES"
    "\020\001\022 \n\034ITEM_WASH_TEMPLATE_NOT_EXIST\020\002\022\036\n\032"
    "ITEM_WASH_MONEY_NOT_ENOUGH\020\003\022!\n\035ITEM_WAS"
    "H_MATERIAL_NOT_ENOUGH\020\004*2\n\010WASHTYPE\022\021\n\rW"
    "ASHTYPE_BASE\020\000\022\023\n\017WASHTYPE_SENIOR\020\001*\351\001\n\021"
    "ITEM_MAGIC_RESULT\022\024\n\020ITEM_MAGIC_FAILE\020\000\022"
    "\025\n\021ITEM_MAGIC_SUCCES\020\001\022!\n\035ITEM_MAGIC_TEM"
    "PLATE_NOT_EXIST\020\002\022\036\n\032ITEM_MAGIC_SLOT_NOT"
    "_ENOUGH\020\003\022 \n\034ITEM_MAGIC_ENERGY_NOT_ENOUG"
    "H\020\004\022\"\n\036ITEM_MAGIC_MATERIAL_NOT_ENOUGH\020\005\022"
    "\036\n\032ITEM_MAGIC_INJECTION_FAILE\020\006*\250\001\n\022ITEM"
    "_REPAIR_RESULT\022\025\n\021ITEM_REPAIR_FAILE\020\000\022\026\n"
    "\022ITEM_REPAIR_SUCCES\020\001\022\034\n\030ITEM_REPAIR_FUL"
    "L_DURABLE\020\002\022 \n\034ITEM_REPAIR_MONEY_NOT_ENO"
    "UGH\020\003\022#\n\037ITEM_REPAIR_MATERIAL_NOT_ENOUGH"
    "\020\004*\213\002\n\026ITEM_STRENGTHEN_RESULT\022\031\n\025ITEM_ST"
    "RENGTHEN_FAILE\020\000\022\032\n\026ITEM_STRENGTHEN_SUCC"
    "ES\020\001\022\"\n\036ITEM_STRENGTHEN_ITEM_NOT_EXIST\020\002"
    "\022&\n\"ITEM_STRENGTHEN_TEMPLATE_NOT_EXIST\020\003"
    "\022\037\n\033ITEM_STRENGTHEN_ALREADY_MAX\020\004\022$\n ITE"
    "M_STRENGTHEN_MONEY_NOT_ENOUGH\020\005\022\'\n#ITEM_"
    "STRENGTHEN_MATERIAL_NOT_ENOUGH\020\t*\230\002\n\027E_I"
    "DENTIFY_EQUIP_RESULT\022\036\n\032E_IDENTIFY_EQUIP"
    "_RESULT_OK\020\000\022 \n\034E_IDENTIFY_EQUIP_RESULT_"
    "FAIL\020\001\022$\n E_IDENTIFY_EQUIP_RESULT_NOTEXI"
    "ST\020\002\022#\n\037E_IDENTIFY_EQUIP_RESULT_ALREADY\020"
    "\003\022%\n!E_IDENTIFY_EQUIP_RESULT_DATAERROR\020\004"
    "\022\"\n\036E_IDENTIFY_EQUIP_RESULT_CANNOT\020\005\022%\n!"
    "E_IDENTIFY_EQUIP_RESULT_LACKMONEY\020\006*\300\001\n\020"
    "E_DropItemResult\022\027\n\023E_DropItemResult_OK\020"
    "\000\022\031\n\025E_DropItemResult_Fail\020\001\022\035\n\031E_DropIt"
    "emResult_NotExist\020\002\022\034\n\030E_DropItemResult_"
    "Already\020\003\022\036\n\032E_DropItemResult_DataError\020"
    "\004\022\033\n\027E_DropItemResult_Cannot\020\005", 18750);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "MsgItem.proto", &protobuf_RegisterTypes);
  MsgMaterialData::default_instance_ = new MsgMaterialData();
  PBTowerBuildData::default_instance_ = new PBTowerBuildData();
  PBTowerBuildData_BuildTypeLevelInfo::default_instance_ = new PBTowerBuildData_BuildTypeLevelInfo();
  MsgItemCounter::default_instance_ = new MsgItemCounter();
  MsgItemCounters::default_instance_ = new MsgItemCounters();
  MsgItemCommonData::default_instance_ = new MsgItemCommonData();
  ServerEquipInfo::default_instance_ = new ServerEquipInfo();
  ItemPacketCapabilityInfo::default_instance_ = new ItemPacketCapabilityInfo();
  MsgItemPacketCapabilityGS2C::default_instance_ = new MsgItemPacketCapabilityGS2C();
  S_ItemPacketPos::default_instance_ = new S_ItemPacketPos();
  MsgItemPacketPosGS2C::default_instance_ = new MsgItemPacketPosGS2C();
  MsgItemDataGS2C::default_instance_ = new MsgItemDataGS2C();
  MsgItemDataGS2C_ItemData::default_instance_ = new MsgItemDataGS2C_ItemData();
  MsgItemRemoveGS2C::default_instance_ = new MsgItemRemoveGS2C();
  MsgItemExchangeC2GS::default_instance_ = new MsgItemExchangeC2GS();
  MsgItemExchangeResultGS2C::default_instance_ = new MsgItemExchangeResultGS2C();
  ItemPacketPosSyncData::default_instance_ = new ItemPacketPosSyncData();
  MsgSyncItemPacketPosC2GS::default_instance_ = new MsgSyncItemPacketPosC2GS();
  MsgItemPosData::default_instance_ = new MsgItemPosData();
  MsgSyncItemPacketPosGS2C::default_instance_ = new MsgSyncItemPacketPosGS2C();
  MsgItemApartC2GS::default_instance_ = new MsgItemApartC2GS();
  MsgItemApartResultGS2C::default_instance_ = new MsgItemApartResultGS2C();
  MsgItemAddItemPacketC2GS::default_instance_ = new MsgItemAddItemPacketC2GS();
  MsgItemAddItemPacketResultGS2C::default_instance_ = new MsgItemAddItemPacketResultGS2C();
  MsgItemRentItemPacketC2GS::default_instance_ = new MsgItemRentItemPacketC2GS();
  MsgItemRentItemPacketResultGS2C::default_instance_ = new MsgItemRentItemPacketResultGS2C();
  MsgItemDelC2GS::default_instance_ = new MsgItemDelC2GS();
  MsgItemDelResultGS2C::default_instance_ = new MsgItemDelResultGS2C();
  MsgItemDelRecoveryC2GS::default_instance_ = new MsgItemDelRecoveryC2GS();
  MsgItemDelRecoveryResultGS2C::default_instance_ = new MsgItemDelRecoveryResultGS2C();
  MsgItemEquipC2GS::default_instance_ = new MsgItemEquipC2GS();
  MsgItemEquipResultC2GS::default_instance_ = new MsgItemEquipResultC2GS();
  MsgItemPlayerEquipNotifyS2C::default_instance_ = new MsgItemPlayerEquipNotifyS2C();
  MsgItemOtherPlayerChangeEquip_S2C::default_instance_ = new MsgItemOtherPlayerChangeEquip_S2C();
  MsgItemUseC2S::default_instance_ = new MsgItemUseC2S();
  MsgItemUseResultS2C::default_instance_ = new MsgItemUseResultS2C();
  MsgPacketSizeData::default_instance_ = new MsgPacketSizeData();
  MsgItemSyncItemDataMS2GS::default_instance_ = new MsgItemSyncItemDataMS2GS();
  MsgItemSyncItemDataMS2MCS::default_instance_ = new MsgItemSyncItemDataMS2MCS();
  MsgItemClientSyncInitItemC2GS::default_instance_ = new MsgItemClientSyncInitItemC2GS();
  MsgItemClientSyncAddItemC2GS::default_instance_ = new MsgItemClientSyncAddItemC2GS();
  MsgItemClientSyncDelItemC2GS::default_instance_ = new MsgItemClientSyncDelItemC2GS();
  MsgItemShortcutS2C::default_instance_ = new MsgItemShortcutS2C();
  MsgItemShortcutS2C_ShortcutInfo::default_instance_ = new MsgItemShortcutS2C_ShortcutInfo();
  MsgItemShortcutSetC2S::default_instance_ = new MsgItemShortcutSetC2S();
  MsgItemEquipAttrLockC2S::default_instance_ = new MsgItemEquipAttrLockC2S();
  MsgItemEquipAttrLockS2C::default_instance_ = new MsgItemEquipAttrLockS2C();
  MsgItemEquipAttrWashC2S::default_instance_ = new MsgItemEquipAttrWashC2S();
  MsgItemEquipAttrWashS2C::default_instance_ = new MsgItemEquipAttrWashS2C();
  MsgItemEquipAttrSaveC2S::default_instance_ = new MsgItemEquipAttrSaveC2S();
  MsgItemEquipAttrSaveS2C::default_instance_ = new MsgItemEquipAttrSaveS2C();
  MsgItemEquipMagicSacrificeC2S::default_instance_ = new MsgItemEquipMagicSacrificeC2S();
  MsgItemEquipMagicSacrificeS2C::default_instance_ = new MsgItemEquipMagicSacrificeS2C();
  MsgItemEquipMagicInjectionC2S::default_instance_ = new MsgItemEquipMagicInjectionC2S();
  MsgItemEquipMagicInjectionS2C::default_instance_ = new MsgItemEquipMagicInjectionS2C();
  MsgItemEquipRepairC2S::default_instance_ = new MsgItemEquipRepairC2S();
  MsgItemEquipRepairS2C::default_instance_ = new MsgItemEquipRepairS2C();
  MsgItemEquipRepairS2C_RepairUuid::default_instance_ = new MsgItemEquipRepairS2C_RepairUuid();
  MsgItemEquipStrengthenC2S::default_instance_ = new MsgItemEquipStrengthenC2S();
  MsgItemEquipStrengthenS2C::default_instance_ = new MsgItemEquipStrengthenS2C();
  MsgNewItemSendOverS2C::default_instance_ = new MsgNewItemSendOverS2C();
  MsgItemEquipHideC2S::default_instance_ = new MsgItemEquipHideC2S();
  MsgItemEquipHideS2C::default_instance_ = new MsgItemEquipHideS2C();
  MsgIdentifyEquipC2S::default_instance_ = new MsgIdentifyEquipC2S();
  IdentifyEquipResult::default_instance_ = new IdentifyEquipResult();
  MsgIdentifyEquipS2C::default_instance_ = new MsgIdentifyEquipS2C();
  MsgItemUserInteractiveResult_S2C::default_instance_ = new MsgItemUserInteractiveResult_S2C();
  MsgDropItemC2S::default_instance_ = new MsgDropItemC2S();
  DropItemResult::default_instance_ = new DropItemResult();
  MsgDropItemS2C::default_instance_ = new MsgDropItemS2C();
  MsgUpgradeItemC2S::default_instance_ = new MsgUpgradeItemC2S();
  MsgUpgradeItemS2C::default_instance_ = new MsgUpgradeItemS2C();
  MsgFoodUseCountS2C::default_instance_ = new MsgFoodUseCountS2C();
  MsgItemMultiEquipC2S::default_instance_ = new MsgItemMultiEquipC2S();
  MsgItemMultiEquipC2S_EquipInfo::default_instance_ = new MsgItemMultiEquipC2S_EquipInfo();
  MsgItemMultiEquipS2C::default_instance_ = new MsgItemMultiEquipS2C();
  MsgItemMaterialS2C::default_instance_ = new MsgItemMaterialS2C();
  MsgItemProtectoUpgradeC2S::default_instance_ = new MsgItemProtectoUpgradeC2S();
  MsgMaterialData::default_instance_->InitAsDefaultInstance();
  PBTowerBuildData::default_instance_->InitAsDefaultInstance();
  PBTowerBuildData_BuildTypeLevelInfo::default_instance_->InitAsDefaultInstance();
  MsgItemCounter::default_instance_->InitAsDefaultInstance();
  MsgItemCounters::default_instance_->InitAsDefaultInstance();
  MsgItemCommonData::default_instance_->InitAsDefaultInstance();
  ServerEquipInfo::default_instance_->InitAsDefaultInstance();
  ItemPacketCapabilityInfo::default_instance_->InitAsDefaultInstance();
  MsgItemPacketCapabilityGS2C::default_instance_->InitAsDefaultInstance();
  S_ItemPacketPos::default_instance_->InitAsDefaultInstance();
  MsgItemPacketPosGS2C::default_instance_->InitAsDefaultInstance();
  MsgItemDataGS2C::default_instance_->InitAsDefaultInstance();
  MsgItemDataGS2C_ItemData::default_instance_->InitAsDefaultInstance();
  MsgItemRemoveGS2C::default_instance_->InitAsDefaultInstance();
  MsgItemExchangeC2GS::default_instance_->InitAsDefaultInstance();
  MsgItemExchangeResultGS2C::default_instance_->InitAsDefaultInstance();
  ItemPacketPosSyncData::default_instance_->InitAsDefaultInstance();
  MsgSyncItemPacketPosC2GS::default_instance_->InitAsDefaultInstance();
  MsgItemPosData::default_instance_->InitAsDefaultInstance();
  MsgSyncItemPacketPosGS2C::default_instance_->InitAsDefaultInstance();
  MsgItemApartC2GS::default_instance_->InitAsDefaultInstance();
  MsgItemApartResultGS2C::default_instance_->InitAsDefaultInstance();
  MsgItemAddItemPacketC2GS::default_instance_->InitAsDefaultInstance();
  MsgItemAddItemPacketResultGS2C::default_instance_->InitAsDefaultInstance();
  MsgItemRentItemPacketC2GS::default_instance_->InitAsDefaultInstance();
  MsgItemRentItemPacketResultGS2C::default_instance_->InitAsDefaultInstance();
  MsgItemDelC2GS::default_instance_->InitAsDefaultInstance();
  MsgItemDelResultGS2C::default_instance_->InitAsDefaultInstance();
  MsgItemDelRecoveryC2GS::default_instance_->InitAsDefaultInstance();
  MsgItemDelRecoveryResultGS2C::default_instance_->InitAsDefaultInstance();
  MsgItemEquipC2GS::default_instance_->InitAsDefaultInstance();
  MsgItemEquipResultC2GS::default_instance_->InitAsDefaultInstance();
  MsgItemPlayerEquipNotifyS2C::default_instance_->InitAsDefaultInstance();
  MsgItemOtherPlayerChangeEquip_S2C::default_instance_->InitAsDefaultInstance();
  MsgItemUseC2S::default_instance_->InitAsDefaultInstance();
  MsgItemUseResultS2C::default_instance_->InitAsDefaultInstance();
  MsgPacketSizeData::default_instance_->InitAsDefaultInstance();
  MsgItemSyncItemDataMS2GS::default_instance_->InitAsDefaultInstance();
  MsgItemSyncItemDataMS2MCS::default_instance_->InitAsDefaultInstance();
  MsgItemClientSyncInitItemC2GS::default_instance_->InitAsDefaultInstance();
  MsgItemClientSyncAddItemC2GS::default_instance_->InitAsDefaultInstance();
  MsgItemClientSyncDelItemC2GS::default_instance_->InitAsDefaultInstance();
  MsgItemShortcutS2C::default_instance_->InitAsDefaultInstance();
  MsgItemShortcutS2C_ShortcutInfo::default_instance_->InitAsDefaultInstance();
  MsgItemShortcutSetC2S::default_instance_->InitAsDefaultInstance();
  MsgItemEquipAttrLockC2S::default_instance_->InitAsDefaultInstance();
  MsgItemEquipAttrLockS2C::default_instance_->InitAsDefaultInstance();
  MsgItemEquipAttrWashC2S::default_instance_->InitAsDefaultInstance();
  MsgItemEquipAttrWashS2C::default_instance_->InitAsDefaultInstance();
  MsgItemEquipAttrSaveC2S::default_instance_->InitAsDefaultInstance();
  MsgItemEquipAttrSaveS2C::default_instance_->InitAsDefaultInstance();
  MsgItemEquipMagicSacrificeC2S::default_instance_->InitAsDefaultInstance();
  MsgItemEquipMagicSacrificeS2C::default_instance_->InitAsDefaultInstance();
  MsgItemEquipMagicInjectionC2S::default_instance_->InitAsDefaultInstance();
  MsgItemEquipMagicInjectionS2C::default_instance_->InitAsDefaultInstance();
  MsgItemEquipRepairC2S::default_instance_->InitAsDefaultInstance();
  MsgItemEquipRepairS2C::default_instance_->InitAsDefaultInstance();
  MsgItemEquipRepairS2C_RepairUuid::default_instance_->InitAsDefaultInstance();
  MsgItemEquipStrengthenC2S::default_instance_->InitAsDefaultInstance();
  MsgItemEquipStrengthenS2C::default_instance_->InitAsDefaultInstance();
  MsgNewItemSendOverS2C::default_instance_->InitAsDefaultInstance();
  MsgItemEquipHideC2S::default_instance_->InitAsDefaultInstance();
  MsgItemEquipHideS2C::default_instance_->InitAsDefaultInstance();
  MsgIdentifyEquipC2S::default_instance_->InitAsDefaultInstance();
  IdentifyEquipResult::default_instance_->InitAsDefaultInstance();
  MsgIdentifyEquipS2C::default_instance_->InitAsDefaultInstance();
  MsgItemUserInteractiveResult_S2C::default_instance_->InitAsDefaultInstance();
  MsgDropItemC2S::default_instance_->InitAsDefaultInstance();
  DropItemResult::default_instance_->InitAsDefaultInstance();
  MsgDropItemS2C::default_instance_->InitAsDefaultInstance();
  MsgUpgradeItemC2S::default_instance_->InitAsDefaultInstance();
  MsgUpgradeItemS2C::default_instance_->InitAsDefaultInstance();
  MsgFoodUseCountS2C::default_instance_->InitAsDefaultInstance();
  MsgItemMultiEquipC2S::default_instance_->InitAsDefaultInstance();
  MsgItemMultiEquipC2S_EquipInfo::default_instance_->InitAsDefaultInstance();
  MsgItemMultiEquipS2C::default_instance_->InitAsDefaultInstance();
  MsgItemMaterialS2C::default_instance_->InitAsDefaultInstance();
  MsgItemProtectoUpgradeC2S::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_MsgItem_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_MsgItem_2eproto {
  StaticDescriptorInitializer_MsgItem_2eproto() {
    protobuf_AddDesc_MsgItem_2eproto();
  }
} static_descriptor_initializer_MsgItem_2eproto_;
const ::google::protobuf::EnumDescriptor* PACKET_TYPE_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PACKET_TYPE_descriptor_;
}
bool PACKET_TYPE_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
    case 18:
    case 19:
    case 20:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* EN_ITEM_COUNTER_TYPE_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EN_ITEM_COUNTER_TYPE_descriptor_;
}
bool EN_ITEM_COUNTER_TYPE_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* ITEM_EXCHANGE_RESULT_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ITEM_EXCHANGE_RESULT_descriptor_;
}
bool ITEM_EXCHANGE_RESULT_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* E_SyncItemPacketPosResult_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_SyncItemPacketPosResult_descriptor_;
}
bool E_SyncItemPacketPosResult_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* ITEM_APART_RESULT_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ITEM_APART_RESULT_descriptor_;
}
bool ITEM_APART_RESULT_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* ADD_ITEMPACKET_SIZE_RESULT_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ADD_ITEMPACKET_SIZE_RESULT_descriptor_;
}
bool ADD_ITEMPACKET_SIZE_RESULT_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* RENT_ITEMPACKET_RESULT_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RENT_ITEMPACKET_RESULT_descriptor_;
}
bool RENT_ITEMPACKET_RESULT_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* ITEM_DEL_RESULT_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ITEM_DEL_RESULT_descriptor_;
}
bool ITEM_DEL_RESULT_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* ITEM_DEL_RECOVERY_RESULT_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ITEM_DEL_RECOVERY_RESULT_descriptor_;
}
bool ITEM_DEL_RECOVERY_RESULT_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* ITEM_EQUIP_RESULT_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ITEM_EQUIP_RESULT_descriptor_;
}
bool ITEM_EQUIP_RESULT_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* EQUIP_PACKET_POS_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EQUIP_PACKET_POS_descriptor_;
}
bool EQUIP_PACKET_POS_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
    case 18:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* ITEM_USE_RESULT_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ITEM_USE_RESULT_descriptor_;
}
bool ITEM_USE_RESULT_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
    case 18:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* ITEM_WASH_RESULT_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ITEM_WASH_RESULT_descriptor_;
}
bool ITEM_WASH_RESULT_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* WASHTYPE_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return WASHTYPE_descriptor_;
}
bool WASHTYPE_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* ITEM_MAGIC_RESULT_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ITEM_MAGIC_RESULT_descriptor_;
}
bool ITEM_MAGIC_RESULT_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* ITEM_REPAIR_RESULT_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ITEM_REPAIR_RESULT_descriptor_;
}
bool ITEM_REPAIR_RESULT_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* ITEM_STRENGTHEN_RESULT_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ITEM_STRENGTHEN_RESULT_descriptor_;
}
bool ITEM_STRENGTHEN_RESULT_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 9:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* E_IDENTIFY_EQUIP_RESULT_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_IDENTIFY_EQUIP_RESULT_descriptor_;
}
bool E_IDENTIFY_EQUIP_RESULT_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* E_DropItemResult_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_DropItemResult_descriptor_;
}
bool E_DropItemResult_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#ifndef _MSC_VER
const int MsgMaterialData::kItemidFieldNumber;
const int MsgMaterialData::kItemnumFieldNumber;
#endif  // !_MSC_VER

MsgMaterialData::MsgMaterialData()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.MsgMaterialData)
}

void MsgMaterialData::InitAsDefaultInstance() {
}

MsgMaterialData::MsgMaterialData(const MsgMaterialData& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.MsgMaterialData)
}

void MsgMaterialData::SharedCtor() {
  _cached_size_ = 0;
  itemid_ = 0;
  itemnum_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgMaterialData::~MsgMaterialData() {
  // @@protoc_insertion_point(destructor:MsgPB.MsgMaterialData)
  SharedDtor();
}

void MsgMaterialData::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgMaterialData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgMaterialData::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgMaterialData_descriptor_;
}

const MsgMaterialData& MsgMaterialData::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgItem_2eproto();
  return *default_instance_;
}

MsgMaterialData* MsgMaterialData::default_instance_ = NULL;

MsgMaterialData* MsgMaterialData::New() const {
  return new MsgMaterialData;
}

void MsgMaterialData::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<MsgMaterialData*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(itemnum_, itemid_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgMaterialData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.MsgMaterialData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 itemid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &itemid_)));
          set_has_itemid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_itemnum;
        break;
      }

      // optional int64 itemnum = 2;
      case 2: {
        if (tag == 16) {
         parse_itemnum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &itemnum_)));
          set_has_itemnum();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.MsgMaterialData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.MsgMaterialData)
  return false;
#undef DO_
}

void MsgMaterialData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.MsgMaterialData)
  // optional int32 itemid = 1;
  if (has_itemid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->itemid(), output);
  }

  // optional int64 itemnum = 2;
  if (has_itemnum()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->itemnum(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.MsgMaterialData)
}

::google::protobuf::uint8* MsgMaterialData::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.MsgMaterialData)
  // optional int32 itemid = 1;
  if (has_itemid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->itemid(), target);
  }

  // optional int64 itemnum = 2;
  if (has_itemnum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->itemnum(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.MsgMaterialData)
  return target;
}

int MsgMaterialData::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 itemid = 1;
    if (has_itemid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->itemid());
    }

    // optional int64 itemnum = 2;
    if (has_itemnum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->itemnum());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgMaterialData::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgMaterialData* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgMaterialData*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgMaterialData::MergeFrom(const MsgMaterialData& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_itemid()) {
      set_itemid(from.itemid());
    }
    if (from.has_itemnum()) {
      set_itemnum(from.itemnum());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgMaterialData::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgMaterialData::CopyFrom(const MsgMaterialData& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgMaterialData::IsInitialized() const {

  return true;
}

void MsgMaterialData::Swap(MsgMaterialData* other) {
  if (other != this) {
    std::swap(itemid_, other->itemid_);
    std::swap(itemnum_, other->itemnum_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgMaterialData::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgMaterialData_descriptor_;
  metadata.reflection = MsgMaterialData_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PBTowerBuildData_BuildTypeLevelInfo::kBuildTypeFieldNumber;
const int PBTowerBuildData_BuildTypeLevelInfo::kLevelFieldNumber;
#endif  // !_MSC_VER

PBTowerBuildData_BuildTypeLevelInfo::PBTowerBuildData_BuildTypeLevelInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.PBTowerBuildData.BuildTypeLevelInfo)
}

void PBTowerBuildData_BuildTypeLevelInfo::InitAsDefaultInstance() {
}

PBTowerBuildData_BuildTypeLevelInfo::PBTowerBuildData_BuildTypeLevelInfo(const PBTowerBuildData_BuildTypeLevelInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.PBTowerBuildData.BuildTypeLevelInfo)
}

void PBTowerBuildData_BuildTypeLevelInfo::SharedCtor() {
  _cached_size_ = 0;
  build_type_ = 0;
  level_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PBTowerBuildData_BuildTypeLevelInfo::~PBTowerBuildData_BuildTypeLevelInfo() {
  // @@protoc_insertion_point(destructor:MsgPB.PBTowerBuildData.BuildTypeLevelInfo)
  SharedDtor();
}

void PBTowerBuildData_BuildTypeLevelInfo::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PBTowerBuildData_BuildTypeLevelInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PBTowerBuildData_BuildTypeLevelInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PBTowerBuildData_BuildTypeLevelInfo_descriptor_;
}

const PBTowerBuildData_BuildTypeLevelInfo& PBTowerBuildData_BuildTypeLevelInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgItem_2eproto();
  return *default_instance_;
}

PBTowerBuildData_BuildTypeLevelInfo* PBTowerBuildData_BuildTypeLevelInfo::default_instance_ = NULL;

PBTowerBuildData_BuildTypeLevelInfo* PBTowerBuildData_BuildTypeLevelInfo::New() const {
  return new PBTowerBuildData_BuildTypeLevelInfo;
}

void PBTowerBuildData_BuildTypeLevelInfo::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<PBTowerBuildData_BuildTypeLevelInfo*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(build_type_, level_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PBTowerBuildData_BuildTypeLevelInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.PBTowerBuildData.BuildTypeLevelInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 build_type = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &build_type_)));
          set_has_build_type();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_level;
        break;
      }

      // optional int32 level = 2;
      case 2: {
        if (tag == 16) {
         parse_level:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &level_)));
          set_has_level();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.PBTowerBuildData.BuildTypeLevelInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.PBTowerBuildData.BuildTypeLevelInfo)
  return false;
#undef DO_
}

void PBTowerBuildData_BuildTypeLevelInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.PBTowerBuildData.BuildTypeLevelInfo)
  // optional int32 build_type = 1;
  if (has_build_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->build_type(), output);
  }

  // optional int32 level = 2;
  if (has_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->level(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.PBTowerBuildData.BuildTypeLevelInfo)
}

::google::protobuf::uint8* PBTowerBuildData_BuildTypeLevelInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.PBTowerBuildData.BuildTypeLevelInfo)
  // optional int32 build_type = 1;
  if (has_build_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->build_type(), target);
  }

  // optional int32 level = 2;
  if (has_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->level(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.PBTowerBuildData.BuildTypeLevelInfo)
  return target;
}

int PBTowerBuildData_BuildTypeLevelInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 build_type = 1;
    if (has_build_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->build_type());
    }

    // optional int32 level = 2;
    if (has_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->level());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PBTowerBuildData_BuildTypeLevelInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PBTowerBuildData_BuildTypeLevelInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PBTowerBuildData_BuildTypeLevelInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PBTowerBuildData_BuildTypeLevelInfo::MergeFrom(const PBTowerBuildData_BuildTypeLevelInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_build_type()) {
      set_build_type(from.build_type());
    }
    if (from.has_level()) {
      set_level(from.level());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PBTowerBuildData_BuildTypeLevelInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBTowerBuildData_BuildTypeLevelInfo::CopyFrom(const PBTowerBuildData_BuildTypeLevelInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBTowerBuildData_BuildTypeLevelInfo::IsInitialized() const {

  return true;
}

void PBTowerBuildData_BuildTypeLevelInfo::Swap(PBTowerBuildData_BuildTypeLevelInfo* other) {
  if (other != this) {
    std::swap(build_type_, other->build_type_);
    std::swap(level_, other->level_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PBTowerBuildData_BuildTypeLevelInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PBTowerBuildData_BuildTypeLevelInfo_descriptor_;
  metadata.reflection = PBTowerBuildData_BuildTypeLevelInfo_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int PBTowerBuildData::kHpFieldNumber;
const int PBTowerBuildData::kRepairBeginFieldNumber;
const int PBTowerBuildData::kRepairEndFieldNumber;
const int PBTowerBuildData::kRepairHpFieldNumber;
const int PBTowerBuildData::kLevelFieldNumber;
const int PBTowerBuildData::kBuildTypeLevelFieldNumber;
const int PBTowerBuildData::kTowerUuidFieldNumber;
#endif  // !_MSC_VER

PBTowerBuildData::PBTowerBuildData()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.PBTowerBuildData)
}

void PBTowerBuildData::InitAsDefaultInstance() {
}

PBTowerBuildData::PBTowerBuildData(const PBTowerBuildData& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.PBTowerBuildData)
}

void PBTowerBuildData::SharedCtor() {
  _cached_size_ = 0;
  hp_ = 0;
  repair_begin_ = GOOGLE_LONGLONG(0);
  repair_end_ = GOOGLE_LONGLONG(0);
  repair_hp_ = 0;
  level_ = 0;
  tower_uuid_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PBTowerBuildData::~PBTowerBuildData() {
  // @@protoc_insertion_point(destructor:MsgPB.PBTowerBuildData)
  SharedDtor();
}

void PBTowerBuildData::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PBTowerBuildData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PBTowerBuildData::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PBTowerBuildData_descriptor_;
}

const PBTowerBuildData& PBTowerBuildData::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgItem_2eproto();
  return *default_instance_;
}

PBTowerBuildData* PBTowerBuildData::default_instance_ = NULL;

PBTowerBuildData* PBTowerBuildData::New() const {
  return new PBTowerBuildData;
}

void PBTowerBuildData::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<PBTowerBuildData*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 95) {
    ZR_(repair_begin_, repair_end_);
    ZR_(tower_uuid_, level_);
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  build_type_level_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PBTowerBuildData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.PBTowerBuildData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 hp = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &hp_)));
          set_has_hp();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_repair_begin;
        break;
      }

      // optional int64 repair_begin = 2;
      case 2: {
        if (tag == 16) {
         parse_repair_begin:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &repair_begin_)));
          set_has_repair_begin();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_repair_end;
        break;
      }

      // optional int64 repair_end = 3;
      case 3: {
        if (tag == 24) {
         parse_repair_end:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &repair_end_)));
          set_has_repair_end();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_repair_hp;
        break;
      }

      // optional int32 repair_hp = 4;
      case 4: {
        if (tag == 32) {
         parse_repair_hp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &repair_hp_)));
          set_has_repair_hp();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_level;
        break;
      }

      // optional int32 level = 5;
      case 5: {
        if (tag == 40) {
         parse_level:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &level_)));
          set_has_level();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_build_type_level;
        break;
      }

      // repeated .MsgPB.PBTowerBuildData.BuildTypeLevelInfo build_type_level = 6;
      case 6: {
        if (tag == 50) {
         parse_build_type_level:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_build_type_level()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_build_type_level;
        if (input->ExpectTag(56)) goto parse_tower_uuid;
        break;
      }

      // optional int64 tower_uuid = 7 [default = 0];
      case 7: {
        if (tag == 56) {
         parse_tower_uuid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &tower_uuid_)));
          set_has_tower_uuid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.PBTowerBuildData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.PBTowerBuildData)
  return false;
#undef DO_
}

void PBTowerBuildData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.PBTowerBuildData)
  // optional int32 hp = 1;
  if (has_hp()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->hp(), output);
  }

  // optional int64 repair_begin = 2;
  if (has_repair_begin()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->repair_begin(), output);
  }

  // optional int64 repair_end = 3;
  if (has_repair_end()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->repair_end(), output);
  }

  // optional int32 repair_hp = 4;
  if (has_repair_hp()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->repair_hp(), output);
  }

  // optional int32 level = 5;
  if (has_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->level(), output);
  }

  // repeated .MsgPB.PBTowerBuildData.BuildTypeLevelInfo build_type_level = 6;
  for (int i = 0; i < this->build_type_level_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->build_type_level(i), output);
  }

  // optional int64 tower_uuid = 7 [default = 0];
  if (has_tower_uuid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(7, this->tower_uuid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.PBTowerBuildData)
}

::google::protobuf::uint8* PBTowerBuildData::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.PBTowerBuildData)
  // optional int32 hp = 1;
  if (has_hp()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->hp(), target);
  }

  // optional int64 repair_begin = 2;
  if (has_repair_begin()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->repair_begin(), target);
  }

  // optional int64 repair_end = 3;
  if (has_repair_end()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->repair_end(), target);
  }

  // optional int32 repair_hp = 4;
  if (has_repair_hp()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->repair_hp(), target);
  }

  // optional int32 level = 5;
  if (has_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->level(), target);
  }

  // repeated .MsgPB.PBTowerBuildData.BuildTypeLevelInfo build_type_level = 6;
  for (int i = 0; i < this->build_type_level_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        6, this->build_type_level(i), target);
  }

  // optional int64 tower_uuid = 7 [default = 0];
  if (has_tower_uuid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(7, this->tower_uuid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.PBTowerBuildData)
  return target;
}

int PBTowerBuildData::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 hp = 1;
    if (has_hp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->hp());
    }

    // optional int64 repair_begin = 2;
    if (has_repair_begin()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->repair_begin());
    }

    // optional int64 repair_end = 3;
    if (has_repair_end()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->repair_end());
    }

    // optional int32 repair_hp = 4;
    if (has_repair_hp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->repair_hp());
    }

    // optional int32 level = 5;
    if (has_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->level());
    }

    // optional int64 tower_uuid = 7 [default = 0];
    if (has_tower_uuid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->tower_uuid());
    }

  }
  // repeated .MsgPB.PBTowerBuildData.BuildTypeLevelInfo build_type_level = 6;
  total_size += 1 * this->build_type_level_size();
  for (int i = 0; i < this->build_type_level_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->build_type_level(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PBTowerBuildData::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PBTowerBuildData* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PBTowerBuildData*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PBTowerBuildData::MergeFrom(const PBTowerBuildData& from) {
  GOOGLE_CHECK_NE(&from, this);
  build_type_level_.MergeFrom(from.build_type_level_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_hp()) {
      set_hp(from.hp());
    }
    if (from.has_repair_begin()) {
      set_repair_begin(from.repair_begin());
    }
    if (from.has_repair_end()) {
      set_repair_end(from.repair_end());
    }
    if (from.has_repair_hp()) {
      set_repair_hp(from.repair_hp());
    }
    if (from.has_level()) {
      set_level(from.level());
    }
    if (from.has_tower_uuid()) {
      set_tower_uuid(from.tower_uuid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PBTowerBuildData::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBTowerBuildData::CopyFrom(const PBTowerBuildData& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBTowerBuildData::IsInitialized() const {

  return true;
}

void PBTowerBuildData::Swap(PBTowerBuildData* other) {
  if (other != this) {
    std::swap(hp_, other->hp_);
    std::swap(repair_begin_, other->repair_begin_);
    std::swap(repair_end_, other->repair_end_);
    std::swap(repair_hp_, other->repair_hp_);
    std::swap(level_, other->level_);
    build_type_level_.Swap(&other->build_type_level_);
    std::swap(tower_uuid_, other->tower_uuid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PBTowerBuildData::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PBTowerBuildData_descriptor_;
  metadata.reflection = PBTowerBuildData_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgItemCounter::kItemCounterTypeFieldNumber;
const int MsgItemCounter::kCountFieldNumber;
#endif  // !_MSC_VER

MsgItemCounter::MsgItemCounter()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.MsgItemCounter)
}

void MsgItemCounter::InitAsDefaultInstance() {
}

MsgItemCounter::MsgItemCounter(const MsgItemCounter& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.MsgItemCounter)
}

void MsgItemCounter::SharedCtor() {
  _cached_size_ = 0;
  item_counter_type_ = 0;
  count_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgItemCounter::~MsgItemCounter() {
  // @@protoc_insertion_point(destructor:MsgPB.MsgItemCounter)
  SharedDtor();
}

void MsgItemCounter::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgItemCounter::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgItemCounter::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgItemCounter_descriptor_;
}

const MsgItemCounter& MsgItemCounter::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgItem_2eproto();
  return *default_instance_;
}

MsgItemCounter* MsgItemCounter::default_instance_ = NULL;

MsgItemCounter* MsgItemCounter::New() const {
  return new MsgItemCounter;
}

void MsgItemCounter::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<MsgItemCounter*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(item_counter_type_, count_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgItemCounter::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.MsgItemCounter)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 item_counter_type = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &item_counter_type_)));
          set_has_item_counter_type();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_count;
        break;
      }

      // optional int32 count = 2;
      case 2: {
        if (tag == 16) {
         parse_count:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &count_)));
          set_has_count();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.MsgItemCounter)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.MsgItemCounter)
  return false;
#undef DO_
}

void MsgItemCounter::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.MsgItemCounter)
  // optional int32 item_counter_type = 1;
  if (has_item_counter_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->item_counter_type(), output);
  }

  // optional int32 count = 2;
  if (has_count()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->count(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.MsgItemCounter)
}

::google::protobuf::uint8* MsgItemCounter::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.MsgItemCounter)
  // optional int32 item_counter_type = 1;
  if (has_item_counter_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->item_counter_type(), target);
  }

  // optional int32 count = 2;
  if (has_count()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->count(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.MsgItemCounter)
  return target;
}

int MsgItemCounter::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 item_counter_type = 1;
    if (has_item_counter_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->item_counter_type());
    }

    // optional int32 count = 2;
    if (has_count()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->count());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgItemCounter::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgItemCounter* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgItemCounter*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgItemCounter::MergeFrom(const MsgItemCounter& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_item_counter_type()) {
      set_item_counter_type(from.item_counter_type());
    }
    if (from.has_count()) {
      set_count(from.count());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgItemCounter::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgItemCounter::CopyFrom(const MsgItemCounter& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgItemCounter::IsInitialized() const {

  return true;
}

void MsgItemCounter::Swap(MsgItemCounter* other) {
  if (other != this) {
    std::swap(item_counter_type_, other->item_counter_type_);
    std::swap(count_, other->count_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgItemCounter::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgItemCounter_descriptor_;
  metadata.reflection = MsgItemCounter_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgItemCounters::kItemCounterFieldNumber;
#endif  // !_MSC_VER

MsgItemCounters::MsgItemCounters()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.MsgItemCounters)
}

void MsgItemCounters::InitAsDefaultInstance() {
}

MsgItemCounters::MsgItemCounters(const MsgItemCounters& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.MsgItemCounters)
}

void MsgItemCounters::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgItemCounters::~MsgItemCounters() {
  // @@protoc_insertion_point(destructor:MsgPB.MsgItemCounters)
  SharedDtor();
}

void MsgItemCounters::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgItemCounters::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgItemCounters::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgItemCounters_descriptor_;
}

const MsgItemCounters& MsgItemCounters::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgItem_2eproto();
  return *default_instance_;
}

MsgItemCounters* MsgItemCounters::default_instance_ = NULL;

MsgItemCounters* MsgItemCounters::New() const {
  return new MsgItemCounters;
}

void MsgItemCounters::Clear() {
  item_counter_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgItemCounters::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.MsgItemCounters)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .MsgPB.MsgItemCounter item_counter = 1;
      case 1: {
        if (tag == 10) {
         parse_item_counter:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_item_counter()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_item_counter;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.MsgItemCounters)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.MsgItemCounters)
  return false;
#undef DO_
}

void MsgItemCounters::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.MsgItemCounters)
  // repeated .MsgPB.MsgItemCounter item_counter = 1;
  for (int i = 0; i < this->item_counter_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->item_counter(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.MsgItemCounters)
}

::google::protobuf::uint8* MsgItemCounters::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.MsgItemCounters)
  // repeated .MsgPB.MsgItemCounter item_counter = 1;
  for (int i = 0; i < this->item_counter_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->item_counter(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.MsgItemCounters)
  return target;
}

int MsgItemCounters::ByteSize() const {
  int total_size = 0;

  // repeated .MsgPB.MsgItemCounter item_counter = 1;
  total_size += 1 * this->item_counter_size();
  for (int i = 0; i < this->item_counter_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->item_counter(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgItemCounters::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgItemCounters* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgItemCounters*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgItemCounters::MergeFrom(const MsgItemCounters& from) {
  GOOGLE_CHECK_NE(&from, this);
  item_counter_.MergeFrom(from.item_counter_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgItemCounters::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgItemCounters::CopyFrom(const MsgItemCounters& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgItemCounters::IsInitialized() const {

  return true;
}

void MsgItemCounters::Swap(MsgItemCounters* other) {
  if (other != this) {
    item_counter_.Swap(&other->item_counter_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgItemCounters::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgItemCounters_descriptor_;
  metadata.reflection = MsgItemCounters_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgItemCommonData::kUuidFieldNumber;
const int MsgItemCommonData::kDataidFieldNumber;
const int MsgItemCommonData::kNameFieldNumber;
const int MsgItemCommonData::kPosFieldNumber;
const int MsgItemCommonData::kCountFieldNumber;
const int MsgItemCommonData::kPackettypeFieldNumber;
const int MsgItemCommonData::kExpiredTimeFieldNumber;
const int MsgItemCommonData::kDurableFieldNumber;
const int MsgItemCommonData::kCooldownFieldNumber;
const int MsgItemCommonData::kCountdownTimeFieldNumber;
const int MsgItemCommonData::kCreatetimeFieldNumber;
const int MsgItemCommonData::kDurablemaxFieldNumber;
const int MsgItemCommonData::kCooldownForclientFieldNumber;
const int MsgItemCommonData::kCountdownTimeForclientFieldNumber;
const int MsgItemCommonData::kRandLockTempFieldNumber;
const int MsgItemCommonData::kExtskillFieldNumber;
const int MsgItemCommonData::kExtattrlockFieldNumber;
const int MsgItemCommonData::kMagicidFieldNumber;
const int MsgItemCommonData::kMagictempidFieldNumber;
const int MsgItemCommonData::kEffectsFieldNumber;
const int MsgItemCommonData::kBasevalFieldNumber;
const int MsgItemCommonData::kStaticvalFieldNumber;
const int MsgItemCommonData::kTempbaseFieldNumber;
const int MsgItemCommonData::kTempextattrFieldNumber;
const int MsgItemCommonData::kEffectsColorFieldNumber;
const int MsgItemCommonData::kTempextColorFieldNumber;
const int MsgItemCommonData::kStrengthenFieldNumber;
const int MsgItemCommonData::kHideFieldNumber;
const int MsgItemCommonData::kTowbuildDataFieldNumber;
const int MsgItemCommonData::kAuctionCooldownFieldNumber;
const int MsgItemCommonData::kPetEquipSkillFieldNumber;
const int MsgItemCommonData::kIdentifiedFieldNumber;
const int MsgItemCommonData::kItemCountersFieldNumber;
const int MsgItemCommonData::kIntegrityFieldNumber;
const int MsgItemCommonData::kQualityFieldNumber;
const int MsgItemCommonData::kDirtyFieldNumber;
#endif  // !_MSC_VER

MsgItemCommonData::MsgItemCommonData()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.MsgItemCommonData)
}

void MsgItemCommonData::InitAsDefaultInstance() {
  towbuild_data_ = const_cast< ::MsgPB::PBTowerBuildData*>(&::MsgPB::PBTowerBuildData::default_instance());
  item_counters_ = const_cast< ::MsgPB::MsgItemCounters*>(&::MsgPB::MsgItemCounters::default_instance());
}

MsgItemCommonData::MsgItemCommonData(const MsgItemCommonData& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.MsgItemCommonData)
}

void MsgItemCommonData::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  uuid_ = GOOGLE_LONGLONG(0);
  dataid_ = 0;
  name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pos_ = 0;
  count_ = 0;
  packettype_ = 0;
  expired_time_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  durable_ = 0;
  cooldown_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  countdown_time_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  createtime_ = GOOGLE_LONGLONG(0);
  durablemax_ = 0;
  cooldown_forclient_ = 0;
  countdown_time_forclient_ = 0;
  rand_lock_temp_ = 0;
  extskill_ = 0;
  extattrlock_ = 0;
  strengthen_ = 0;
  hide_ = false;
  towbuild_data_ = NULL;
  auction_cooldown_ = GOOGLE_LONGLONG(0);
  identified_ = false;
  item_counters_ = NULL;
  integrity_ = 0;
  quality_ = 0;
  dirty_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgItemCommonData::~MsgItemCommonData() {
  // @@protoc_insertion_point(destructor:MsgPB.MsgItemCommonData)
  SharedDtor();
}

void MsgItemCommonData::SharedDtor() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (expired_time_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete expired_time_;
  }
  if (cooldown_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete cooldown_;
  }
  if (countdown_time_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete countdown_time_;
  }
  if (this != default_instance_) {
    delete towbuild_data_;
    delete item_counters_;
  }
}

void MsgItemCommonData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgItemCommonData::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgItemCommonData_descriptor_;
}

const MsgItemCommonData& MsgItemCommonData::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgItem_2eproto();
  return *default_instance_;
}

MsgItemCommonData* MsgItemCommonData::default_instance_ = NULL;

MsgItemCommonData* MsgItemCommonData::New() const {
  return new MsgItemCommonData;
}

void MsgItemCommonData::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<MsgItemCommonData*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 255) {
    ZR_(dataid_, packettype_);
    uuid_ = GOOGLE_LONGLONG(0);
    if (has_name()) {
      if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        name_->clear();
      }
    }
    if (has_expired_time()) {
      if (expired_time_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        expired_time_->clear();
      }
    }
    durable_ = 0;
  }
  if (_has_bits_[8 / 32] & 65280) {
    ZR_(durablemax_, extskill_);
    if (has_cooldown()) {
      if (cooldown_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        cooldown_->clear();
      }
    }
    if (has_countdown_time()) {
      if (countdown_time_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        countdown_time_->clear();
      }
    }
  }
  extattrlock_ = 0;
  if (_has_bits_[24 / 32] & 3154116608) {
    ZR_(hide_, identified_);
    strengthen_ = 0;
    if (has_towbuild_data()) {
      if (towbuild_data_ != NULL) towbuild_data_->::MsgPB::PBTowerBuildData::Clear();
    }
    auction_cooldown_ = GOOGLE_LONGLONG(0);
  }
  if (_has_bits_[32 / 32] & 15) {
    ZR_(dirty_, quality_);
    if (has_item_counters()) {
      if (item_counters_ != NULL) item_counters_->::MsgPB::MsgItemCounters::Clear();
    }
    integrity_ = 0;
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  magicid_.Clear();
  magictempid_.Clear();
  effects_.Clear();
  baseval_.Clear();
  staticval_.Clear();
  tempbase_.Clear();
  tempextattr_.Clear();
  effects_color_.Clear();
  tempext_color_.Clear();
  pet_equip_skill_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgItemCommonData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.MsgItemCommonData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 uuid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &uuid_)));
          set_has_uuid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_dataid;
        break;
      }

      // optional int32 dataid = 2;
      case 2: {
        if (tag == 16) {
         parse_dataid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &dataid_)));
          set_has_dataid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_name;
        break;
      }

      // optional string name = 3;
      case 3: {
        if (tag == 26) {
         parse_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_pos;
        break;
      }

      // optional int32 pos = 4;
      case 4: {
        if (tag == 32) {
         parse_pos:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pos_)));
          set_has_pos();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_count;
        break;
      }

      // optional int32 count = 5;
      case 5: {
        if (tag == 40) {
         parse_count:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &count_)));
          set_has_count();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_packettype;
        break;
      }

      // optional int32 packettype = 6;
      case 6: {
        if (tag == 48) {
         parse_packettype:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &packettype_)));
          set_has_packettype();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_expired_time;
        break;
      }

      // optional string expired_time = 7;
      case 7: {
        if (tag == 58) {
         parse_expired_time:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_expired_time()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->expired_time().data(), this->expired_time().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "expired_time");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_durable;
        break;
      }

      // optional int32 durable = 8;
      case 8: {
        if (tag == 64) {
         parse_durable:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &durable_)));
          set_has_durable();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_cooldown;
        break;
      }

      // optional string cooldown = 9;
      case 9: {
        if (tag == 74) {
         parse_cooldown:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cooldown()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->cooldown().data(), this->cooldown().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "cooldown");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_countdown_time;
        break;
      }

      // optional string countdown_time = 10;
      case 10: {
        if (tag == 82) {
         parse_countdown_time:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_countdown_time()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->countdown_time().data(), this->countdown_time().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "countdown_time");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(88)) goto parse_createtime;
        break;
      }

      // optional int64 createtime = 11;
      case 11: {
        if (tag == 88) {
         parse_createtime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &createtime_)));
          set_has_createtime();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(96)) goto parse_durablemax;
        break;
      }

      // optional int32 durablemax = 12;
      case 12: {
        if (tag == 96) {
         parse_durablemax:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &durablemax_)));
          set_has_durablemax();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(160)) goto parse_cooldown_forclient;
        break;
      }

      // optional int32 cooldown_forclient = 20;
      case 20: {
        if (tag == 160) {
         parse_cooldown_forclient:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cooldown_forclient_)));
          set_has_cooldown_forclient();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(168)) goto parse_countdown_time_forclient;
        break;
      }

      // optional int32 countdown_time_forclient = 21;
      case 21: {
        if (tag == 168) {
         parse_countdown_time_forclient:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &countdown_time_forclient_)));
          set_has_countdown_time_forclient();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(240)) goto parse_rand_lock_temp;
        break;
      }

      // optional int32 rand_lock_temp = 30;
      case 30: {
        if (tag == 240) {
         parse_rand_lock_temp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &rand_lock_temp_)));
          set_has_rand_lock_temp();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(248)) goto parse_extskill;
        break;
      }

      // optional int32 extskill = 31;
      case 31: {
        if (tag == 248) {
         parse_extskill:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &extskill_)));
          set_has_extskill();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(256)) goto parse_extattrlock;
        break;
      }

      // optional int32 extattrlock = 32;
      case 32: {
        if (tag == 256) {
         parse_extattrlock:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &extattrlock_)));
          set_has_extattrlock();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(264)) goto parse_magicid;
        break;
      }

      // repeated int32 magicid = 33;
      case 33: {
        if (tag == 264) {
         parse_magicid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 2, 264, input, this->mutable_magicid())));
        } else if (tag == 266) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_magicid())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(264)) goto parse_magicid;
        if (input->ExpectTag(272)) goto parse_magictempid;
        break;
      }

      // repeated int32 magictempid = 34;
      case 34: {
        if (tag == 272) {
         parse_magictempid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 2, 272, input, this->mutable_magictempid())));
        } else if (tag == 274) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_magictempid())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(272)) goto parse_magictempid;
        if (input->ExpectTag(282)) goto parse_effects;
        break;
      }

      // repeated .MsgPB.AttrEffect effects = 35;
      case 35: {
        if (tag == 282) {
         parse_effects:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_effects()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(282)) goto parse_effects;
        if (input->ExpectTag(290)) goto parse_baseval;
        break;
      }

      // repeated .MsgPB.AttrEffect baseval = 36;
      case 36: {
        if (tag == 290) {
         parse_baseval:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_baseval()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(290)) goto parse_baseval;
        if (input->ExpectTag(298)) goto parse_staticval;
        break;
      }

      // repeated .MsgPB.AttrEffect staticval = 37;
      case 37: {
        if (tag == 298) {
         parse_staticval:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_staticval()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(298)) goto parse_staticval;
        if (input->ExpectTag(306)) goto parse_tempbase;
        break;
      }

      // repeated .MsgPB.AttrEffect tempbase = 38;
      case 38: {
        if (tag == 306) {
         parse_tempbase:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_tempbase()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(306)) goto parse_tempbase;
        if (input->ExpectTag(314)) goto parse_tempextattr;
        break;
      }

      // repeated .MsgPB.AttrEffect tempextattr = 39;
      case 39: {
        if (tag == 314) {
         parse_tempextattr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_tempextattr()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(314)) goto parse_tempextattr;
        if (input->ExpectTag(320)) goto parse_effects_color;
        break;
      }

      // repeated int32 effects_color = 40;
      case 40: {
        if (tag == 320) {
         parse_effects_color:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 2, 320, input, this->mutable_effects_color())));
        } else if (tag == 322) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_effects_color())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(320)) goto parse_effects_color;
        if (input->ExpectTag(328)) goto parse_tempext_color;
        break;
      }

      // repeated int32 tempext_color = 41;
      case 41: {
        if (tag == 328) {
         parse_tempext_color:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 2, 328, input, this->mutable_tempext_color())));
        } else if (tag == 330) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_tempext_color())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(328)) goto parse_tempext_color;
        if (input->ExpectTag(336)) goto parse_strengthen;
        break;
      }

      // optional int32 strengthen = 42;
      case 42: {
        if (tag == 336) {
         parse_strengthen:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &strengthen_)));
          set_has_strengthen();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(344)) goto parse_hide;
        break;
      }

      // optional bool hide = 43;
      case 43: {
        if (tag == 344) {
         parse_hide:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &hide_)));
          set_has_hide();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(402)) goto parse_towbuild_data;
        break;
      }

      // optional .MsgPB.PBTowerBuildData towbuild_data = 50;
      case 50: {
        if (tag == 402) {
         parse_towbuild_data:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_towbuild_data()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(408)) goto parse_auction_cooldown;
        break;
      }

      // optional int64 auction_cooldown = 51;
      case 51: {
        if (tag == 408) {
         parse_auction_cooldown:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &auction_cooldown_)));
          set_has_auction_cooldown();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(424)) goto parse_pet_equip_skill;
        break;
      }

      // repeated int32 pet_equip_skill = 53;
      case 53: {
        if (tag == 424) {
         parse_pet_equip_skill:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 2, 424, input, this->mutable_pet_equip_skill())));
        } else if (tag == 426) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_pet_equip_skill())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(424)) goto parse_pet_equip_skill;
        if (input->ExpectTag(432)) goto parse_identified;
        break;
      }

      // optional bool identified = 54 [default = false];
      case 54: {
        if (tag == 432) {
         parse_identified:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &identified_)));
          set_has_identified();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(442)) goto parse_item_counters;
        break;
      }

      // optional .MsgPB.MsgItemCounters item_counters = 55;
      case 55: {
        if (tag == 442) {
         parse_item_counters:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_item_counters()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(448)) goto parse_integrity;
        break;
      }

      // optional int32 integrity = 56;
      case 56: {
        if (tag == 448) {
         parse_integrity:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &integrity_)));
          set_has_integrity();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(456)) goto parse_quality;
        break;
      }

      // optional int32 quality = 57;
      case 57: {
        if (tag == 456) {
         parse_quality:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &quality_)));
          set_has_quality();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(800)) goto parse_dirty;
        break;
      }

      // optional int64 dirty = 100;
      case 100: {
        if (tag == 800) {
         parse_dirty:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &dirty_)));
          set_has_dirty();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.MsgItemCommonData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.MsgItemCommonData)
  return false;
#undef DO_
}

void MsgItemCommonData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.MsgItemCommonData)
  // optional int64 uuid = 1;
  if (has_uuid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->uuid(), output);
  }

  // optional int32 dataid = 2;
  if (has_dataid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->dataid(), output);
  }

  // optional string name = 3;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->name(), output);
  }

  // optional int32 pos = 4;
  if (has_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->pos(), output);
  }

  // optional int32 count = 5;
  if (has_count()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->count(), output);
  }

  // optional int32 packettype = 6;
  if (has_packettype()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->packettype(), output);
  }

  // optional string expired_time = 7;
  if (has_expired_time()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->expired_time().data(), this->expired_time().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "expired_time");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->expired_time(), output);
  }

  // optional int32 durable = 8;
  if (has_durable()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->durable(), output);
  }

  // optional string cooldown = 9;
  if (has_cooldown()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->cooldown().data(), this->cooldown().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "cooldown");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->cooldown(), output);
  }

  // optional string countdown_time = 10;
  if (has_countdown_time()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->countdown_time().data(), this->countdown_time().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "countdown_time");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->countdown_time(), output);
  }

  // optional int64 createtime = 11;
  if (has_createtime()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(11, this->createtime(), output);
  }

  // optional int32 durablemax = 12;
  if (has_durablemax()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(12, this->durablemax(), output);
  }

  // optional int32 cooldown_forclient = 20;
  if (has_cooldown_forclient()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(20, this->cooldown_forclient(), output);
  }

  // optional int32 countdown_time_forclient = 21;
  if (has_countdown_time_forclient()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(21, this->countdown_time_forclient(), output);
  }

  // optional int32 rand_lock_temp = 30;
  if (has_rand_lock_temp()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(30, this->rand_lock_temp(), output);
  }

  // optional int32 extskill = 31;
  if (has_extskill()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(31, this->extskill(), output);
  }

  // optional int32 extattrlock = 32;
  if (has_extattrlock()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(32, this->extattrlock(), output);
  }

  // repeated int32 magicid = 33;
  for (int i = 0; i < this->magicid_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      33, this->magicid(i), output);
  }

  // repeated int32 magictempid = 34;
  for (int i = 0; i < this->magictempid_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      34, this->magictempid(i), output);
  }

  // repeated .MsgPB.AttrEffect effects = 35;
  for (int i = 0; i < this->effects_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      35, this->effects(i), output);
  }

  // repeated .MsgPB.AttrEffect baseval = 36;
  for (int i = 0; i < this->baseval_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      36, this->baseval(i), output);
  }

  // repeated .MsgPB.AttrEffect staticval = 37;
  for (int i = 0; i < this->staticval_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      37, this->staticval(i), output);
  }

  // repeated .MsgPB.AttrEffect tempbase = 38;
  for (int i = 0; i < this->tempbase_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      38, this->tempbase(i), output);
  }

  // repeated .MsgPB.AttrEffect tempextattr = 39;
  for (int i = 0; i < this->tempextattr_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      39, this->tempextattr(i), output);
  }

  // repeated int32 effects_color = 40;
  for (int i = 0; i < this->effects_color_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      40, this->effects_color(i), output);
  }

  // repeated int32 tempext_color = 41;
  for (int i = 0; i < this->tempext_color_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      41, this->tempext_color(i), output);
  }

  // optional int32 strengthen = 42;
  if (has_strengthen()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(42, this->strengthen(), output);
  }

  // optional bool hide = 43;
  if (has_hide()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(43, this->hide(), output);
  }

  // optional .MsgPB.PBTowerBuildData towbuild_data = 50;
  if (has_towbuild_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      50, this->towbuild_data(), output);
  }

  // optional int64 auction_cooldown = 51;
  if (has_auction_cooldown()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(51, this->auction_cooldown(), output);
  }

  // repeated int32 pet_equip_skill = 53;
  for (int i = 0; i < this->pet_equip_skill_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      53, this->pet_equip_skill(i), output);
  }

  // optional bool identified = 54 [default = false];
  if (has_identified()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(54, this->identified(), output);
  }

  // optional .MsgPB.MsgItemCounters item_counters = 55;
  if (has_item_counters()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      55, this->item_counters(), output);
  }

  // optional int32 integrity = 56;
  if (has_integrity()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(56, this->integrity(), output);
  }

  // optional int32 quality = 57;
  if (has_quality()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(57, this->quality(), output);
  }

  // optional int64 dirty = 100;
  if (has_dirty()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(100, this->dirty(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.MsgItemCommonData)
}

::google::protobuf::uint8* MsgItemCommonData::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.MsgItemCommonData)
  // optional int64 uuid = 1;
  if (has_uuid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->uuid(), target);
  }

  // optional int32 dataid = 2;
  if (has_dataid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->dataid(), target);
  }

  // optional string name = 3;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->name(), target);
  }

  // optional int32 pos = 4;
  if (has_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->pos(), target);
  }

  // optional int32 count = 5;
  if (has_count()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->count(), target);
  }

  // optional int32 packettype = 6;
  if (has_packettype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->packettype(), target);
  }

  // optional string expired_time = 7;
  if (has_expired_time()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->expired_time().data(), this->expired_time().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "expired_time");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->expired_time(), target);
  }

  // optional int32 durable = 8;
  if (has_durable()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->durable(), target);
  }

  // optional string cooldown = 9;
  if (has_cooldown()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->cooldown().data(), this->cooldown().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "cooldown");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->cooldown(), target);
  }

  // optional string countdown_time = 10;
  if (has_countdown_time()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->countdown_time().data(), this->countdown_time().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "countdown_time");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->countdown_time(), target);
  }

  // optional int64 createtime = 11;
  if (has_createtime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(11, this->createtime(), target);
  }

  // optional int32 durablemax = 12;
  if (has_durablemax()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(12, this->durablemax(), target);
  }

  // optional int32 cooldown_forclient = 20;
  if (has_cooldown_forclient()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(20, this->cooldown_forclient(), target);
  }

  // optional int32 countdown_time_forclient = 21;
  if (has_countdown_time_forclient()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(21, this->countdown_time_forclient(), target);
  }

  // optional int32 rand_lock_temp = 30;
  if (has_rand_lock_temp()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(30, this->rand_lock_temp(), target);
  }

  // optional int32 extskill = 31;
  if (has_extskill()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(31, this->extskill(), target);
  }

  // optional int32 extattrlock = 32;
  if (has_extattrlock()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(32, this->extattrlock(), target);
  }

  // repeated int32 magicid = 33;
  for (int i = 0; i < this->magicid_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(33, this->magicid(i), target);
  }

  // repeated int32 magictempid = 34;
  for (int i = 0; i < this->magictempid_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(34, this->magictempid(i), target);
  }

  // repeated .MsgPB.AttrEffect effects = 35;
  for (int i = 0; i < this->effects_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        35, this->effects(i), target);
  }

  // repeated .MsgPB.AttrEffect baseval = 36;
  for (int i = 0; i < this->baseval_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        36, this->baseval(i), target);
  }

  // repeated .MsgPB.AttrEffect staticval = 37;
  for (int i = 0; i < this->staticval_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        37, this->staticval(i), target);
  }

  // repeated .MsgPB.AttrEffect tempbase = 38;
  for (int i = 0; i < this->tempbase_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        38, this->tempbase(i), target);
  }

  // repeated .MsgPB.AttrEffect tempextattr = 39;
  for (int i = 0; i < this->tempextattr_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        39, this->tempextattr(i), target);
  }

  // repeated int32 effects_color = 40;
  for (int i = 0; i < this->effects_color_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(40, this->effects_color(i), target);
  }

  // repeated int32 tempext_color = 41;
  for (int i = 0; i < this->tempext_color_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(41, this->tempext_color(i), target);
  }

  // optional int32 strengthen = 42;
  if (has_strengthen()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(42, this->strengthen(), target);
  }

  // optional bool hide = 43;
  if (has_hide()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(43, this->hide(), target);
  }

  // optional .MsgPB.PBTowerBuildData towbuild_data = 50;
  if (has_towbuild_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        50, this->towbuild_data(), target);
  }

  // optional int64 auction_cooldown = 51;
  if (has_auction_cooldown()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(51, this->auction_cooldown(), target);
  }

  // repeated int32 pet_equip_skill = 53;
  for (int i = 0; i < this->pet_equip_skill_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(53, this->pet_equip_skill(i), target);
  }

  // optional bool identified = 54 [default = false];
  if (has_identified()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(54, this->identified(), target);
  }

  // optional .MsgPB.MsgItemCounters item_counters = 55;
  if (has_item_counters()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        55, this->item_counters(), target);
  }

  // optional int32 integrity = 56;
  if (has_integrity()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(56, this->integrity(), target);
  }

  // optional int32 quality = 57;
  if (has_quality()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(57, this->quality(), target);
  }

  // optional int64 dirty = 100;
  if (has_dirty()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(100, this->dirty(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.MsgItemCommonData)
  return target;
}

int MsgItemCommonData::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 uuid = 1;
    if (has_uuid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->uuid());
    }

    // optional int32 dataid = 2;
    if (has_dataid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->dataid());
    }

    // optional string name = 3;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional int32 pos = 4;
    if (has_pos()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pos());
    }

    // optional int32 count = 5;
    if (has_count()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->count());
    }

    // optional int32 packettype = 6;
    if (has_packettype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->packettype());
    }

    // optional string expired_time = 7;
    if (has_expired_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->expired_time());
    }

    // optional int32 durable = 8;
    if (has_durable()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->durable());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional string cooldown = 9;
    if (has_cooldown()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->cooldown());
    }

    // optional string countdown_time = 10;
    if (has_countdown_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->countdown_time());
    }

    // optional int64 createtime = 11;
    if (has_createtime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->createtime());
    }

    // optional int32 durablemax = 12;
    if (has_durablemax()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->durablemax());
    }

    // optional int32 cooldown_forclient = 20;
    if (has_cooldown_forclient()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->cooldown_forclient());
    }

    // optional int32 countdown_time_forclient = 21;
    if (has_countdown_time_forclient()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->countdown_time_forclient());
    }

    // optional int32 rand_lock_temp = 30;
    if (has_rand_lock_temp()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->rand_lock_temp());
    }

    // optional int32 extskill = 31;
    if (has_extskill()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->extskill());
    }

  }
  if (_has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    // optional int32 extattrlock = 32;
    if (has_extattrlock()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->extattrlock());
    }

  }
  if (_has_bits_[26 / 32] & (0xffu << (26 % 32))) {
    // optional int32 strengthen = 42;
    if (has_strengthen()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->strengthen());
    }

    // optional bool hide = 43;
    if (has_hide()) {
      total_size += 2 + 1;
    }

    // optional .MsgPB.PBTowerBuildData towbuild_data = 50;
    if (has_towbuild_data()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->towbuild_data());
    }

    // optional int64 auction_cooldown = 51;
    if (has_auction_cooldown()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->auction_cooldown());
    }

    // optional bool identified = 54 [default = false];
    if (has_identified()) {
      total_size += 2 + 1;
    }

  }
  if (_has_bits_[32 / 32] & (0xffu << (32 % 32))) {
    // optional .MsgPB.MsgItemCounters item_counters = 55;
    if (has_item_counters()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->item_counters());
    }

    // optional int32 integrity = 56;
    if (has_integrity()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->integrity());
    }

    // optional int32 quality = 57;
    if (has_quality()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->quality());
    }

    // optional int64 dirty = 100;
    if (has_dirty()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->dirty());
    }

  }
  // repeated int32 magicid = 33;
  {
    int data_size = 0;
    for (int i = 0; i < this->magicid_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->magicid(i));
    }
    total_size += 2 * this->magicid_size() + data_size;
  }

  // repeated int32 magictempid = 34;
  {
    int data_size = 0;
    for (int i = 0; i < this->magictempid_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->magictempid(i));
    }
    total_size += 2 * this->magictempid_size() + data_size;
  }

  // repeated .MsgPB.AttrEffect effects = 35;
  total_size += 2 * this->effects_size();
  for (int i = 0; i < this->effects_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->effects(i));
  }

  // repeated .MsgPB.AttrEffect baseval = 36;
  total_size += 2 * this->baseval_size();
  for (int i = 0; i < this->baseval_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->baseval(i));
  }

  // repeated .MsgPB.AttrEffect staticval = 37;
  total_size += 2 * this->staticval_size();
  for (int i = 0; i < this->staticval_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->staticval(i));
  }

  // repeated .MsgPB.AttrEffect tempbase = 38;
  total_size += 2 * this->tempbase_size();
  for (int i = 0; i < this->tempbase_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->tempbase(i));
  }

  // repeated .MsgPB.AttrEffect tempextattr = 39;
  total_size += 2 * this->tempextattr_size();
  for (int i = 0; i < this->tempextattr_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->tempextattr(i));
  }

  // repeated int32 effects_color = 40;
  {
    int data_size = 0;
    for (int i = 0; i < this->effects_color_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->effects_color(i));
    }
    total_size += 2 * this->effects_color_size() + data_size;
  }

  // repeated int32 tempext_color = 41;
  {
    int data_size = 0;
    for (int i = 0; i < this->tempext_color_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->tempext_color(i));
    }
    total_size += 2 * this->tempext_color_size() + data_size;
  }

  // repeated int32 pet_equip_skill = 53;
  {
    int data_size = 0;
    for (int i = 0; i < this->pet_equip_skill_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->pet_equip_skill(i));
    }
    total_size += 2 * this->pet_equip_skill_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgItemCommonData::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgItemCommonData* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgItemCommonData*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgItemCommonData::MergeFrom(const MsgItemCommonData& from) {
  GOOGLE_CHECK_NE(&from, this);
  magicid_.MergeFrom(from.magicid_);
  magictempid_.MergeFrom(from.magictempid_);
  effects_.MergeFrom(from.effects_);
  baseval_.MergeFrom(from.baseval_);
  staticval_.MergeFrom(from.staticval_);
  tempbase_.MergeFrom(from.tempbase_);
  tempextattr_.MergeFrom(from.tempextattr_);
  effects_color_.MergeFrom(from.effects_color_);
  tempext_color_.MergeFrom(from.tempext_color_);
  pet_equip_skill_.MergeFrom(from.pet_equip_skill_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_uuid()) {
      set_uuid(from.uuid());
    }
    if (from.has_dataid()) {
      set_dataid(from.dataid());
    }
    if (from.has_name()) {
      set_name(from.name());
    }
    if (from.has_pos()) {
      set_pos(from.pos());
    }
    if (from.has_count()) {
      set_count(from.count());
    }
    if (from.has_packettype()) {
      set_packettype(from.packettype());
    }
    if (from.has_expired_time()) {
      set_expired_time(from.expired_time());
    }
    if (from.has_durable()) {
      set_durable(from.durable());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_cooldown()) {
      set_cooldown(from.cooldown());
    }
    if (from.has_countdown_time()) {
      set_countdown_time(from.countdown_time());
    }
    if (from.has_createtime()) {
      set_createtime(from.createtime());
    }
    if (from.has_durablemax()) {
      set_durablemax(from.durablemax());
    }
    if (from.has_cooldown_forclient()) {
      set_cooldown_forclient(from.cooldown_forclient());
    }
    if (from.has_countdown_time_forclient()) {
      set_countdown_time_forclient(from.countdown_time_forclient());
    }
    if (from.has_rand_lock_temp()) {
      set_rand_lock_temp(from.rand_lock_temp());
    }
    if (from.has_extskill()) {
      set_extskill(from.extskill());
    }
  }
  if (from._has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    if (from.has_extattrlock()) {
      set_extattrlock(from.extattrlock());
    }
  }
  if (from._has_bits_[26 / 32] & (0xffu << (26 % 32))) {
    if (from.has_strengthen()) {
      set_strengthen(from.strengthen());
    }
    if (from.has_hide()) {
      set_hide(from.hide());
    }
    if (from.has_towbuild_data()) {
      mutable_towbuild_data()->::MsgPB::PBTowerBuildData::MergeFrom(from.towbuild_data());
    }
    if (from.has_auction_cooldown()) {
      set_auction_cooldown(from.auction_cooldown());
    }
    if (from.has_identified()) {
      set_identified(from.identified());
    }
  }
  if (from._has_bits_[32 / 32] & (0xffu << (32 % 32))) {
    if (from.has_item_counters()) {
      mutable_item_counters()->::MsgPB::MsgItemCounters::MergeFrom(from.item_counters());
    }
    if (from.has_integrity()) {
      set_integrity(from.integrity());
    }
    if (from.has_quality()) {
      set_quality(from.quality());
    }
    if (from.has_dirty()) {
      set_dirty(from.dirty());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgItemCommonData::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgItemCommonData::CopyFrom(const MsgItemCommonData& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgItemCommonData::IsInitialized() const {

  return true;
}

void MsgItemCommonData::Swap(MsgItemCommonData* other) {
  if (other != this) {
    std::swap(uuid_, other->uuid_);
    std::swap(dataid_, other->dataid_);
    std::swap(name_, other->name_);
    std::swap(pos_, other->pos_);
    std::swap(count_, other->count_);
    std::swap(packettype_, other->packettype_);
    std::swap(expired_time_, other->expired_time_);
    std::swap(durable_, other->durable_);
    std::swap(cooldown_, other->cooldown_);
    std::swap(countdown_time_, other->countdown_time_);
    std::swap(createtime_, other->createtime_);
    std::swap(durablemax_, other->durablemax_);
    std::swap(cooldown_forclient_, other->cooldown_forclient_);
    std::swap(countdown_time_forclient_, other->countdown_time_forclient_);
    std::swap(rand_lock_temp_, other->rand_lock_temp_);
    std::swap(extskill_, other->extskill_);
    std::swap(extattrlock_, other->extattrlock_);
    magicid_.Swap(&other->magicid_);
    magictempid_.Swap(&other->magictempid_);
    effects_.Swap(&other->effects_);
    baseval_.Swap(&other->baseval_);
    staticval_.Swap(&other->staticval_);
    tempbase_.Swap(&other->tempbase_);
    tempextattr_.Swap(&other->tempextattr_);
    effects_color_.Swap(&other->effects_color_);
    tempext_color_.Swap(&other->tempext_color_);
    std::swap(strengthen_, other->strengthen_);
    std::swap(hide_, other->hide_);
    std::swap(towbuild_data_, other->towbuild_data_);
    std::swap(auction_cooldown_, other->auction_cooldown_);
    pet_equip_skill_.Swap(&other->pet_equip_skill_);
    std::swap(identified_, other->identified_);
    std::swap(item_counters_, other->item_counters_);
    std::swap(integrity_, other->integrity_);
    std::swap(quality_, other->quality_);
    std::swap(dirty_, other->dirty_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    std::swap(_has_bits_[1], other->_has_bits_[1]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgItemCommonData::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgItemCommonData_descriptor_;
  metadata.reflection = MsgItemCommonData_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ServerEquipInfo::kUuidFieldNumber;
const int ServerEquipInfo::kDataidFieldNumber;
const int ServerEquipInfo::kPosFieldNumber;
const int ServerEquipInfo::kHideFieldNumber;
const int ServerEquipInfo::kEffectsFieldNumber;
const int ServerEquipInfo::kBasevalFieldNumber;
const int ServerEquipInfo::kStaticvalFieldNumber;
const int ServerEquipInfo::kMagicidFieldNumber;
const int ServerEquipInfo::kExtskillFieldNumber;
const int ServerEquipInfo::kEffectsColorFieldNumber;
const int ServerEquipInfo::kDurableFieldNumber;
#endif  // !_MSC_VER

ServerEquipInfo::ServerEquipInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.ServerEquipInfo)
}

void ServerEquipInfo::InitAsDefaultInstance() {
}

ServerEquipInfo::ServerEquipInfo(const ServerEquipInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.ServerEquipInfo)
}

void ServerEquipInfo::SharedCtor() {
  _cached_size_ = 0;
  uuid_ = GOOGLE_LONGLONG(0);
  dataid_ = 0;
  pos_ = 0;
  hide_ = false;
  extskill_ = 0;
  durable_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ServerEquipInfo::~ServerEquipInfo() {
  // @@protoc_insertion_point(destructor:MsgPB.ServerEquipInfo)
  SharedDtor();
}

void ServerEquipInfo::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ServerEquipInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ServerEquipInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ServerEquipInfo_descriptor_;
}

const ServerEquipInfo& ServerEquipInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgItem_2eproto();
  return *default_instance_;
}

ServerEquipInfo* ServerEquipInfo::default_instance_ = NULL;

ServerEquipInfo* ServerEquipInfo::New() const {
  return new ServerEquipInfo;
}

void ServerEquipInfo::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<ServerEquipInfo*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 15) {
    ZR_(uuid_, pos_);
    hide_ = false;
  }
  if (_has_bits_[8 / 32] & 1280) {
    extskill_ = 0;
    durable_ = 0;
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  effects_.Clear();
  baseval_.Clear();
  staticval_.Clear();
  magicid_.Clear();
  effects_color_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ServerEquipInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.ServerEquipInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 uuid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &uuid_)));
          set_has_uuid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_dataid;
        break;
      }

      // optional int32 dataid = 2;
      case 2: {
        if (tag == 16) {
         parse_dataid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &dataid_)));
          set_has_dataid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_pos;
        break;
      }

      // optional .MsgPB.EQUIP_PACKET_POS pos = 3;
      case 3: {
        if (tag == 24) {
         parse_pos:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::EQUIP_PACKET_POS_IsValid(value)) {
            set_pos(static_cast< ::MsgPB::EQUIP_PACKET_POS >(value));
          } else {
            mutable_unknown_fields()->AddVarint(3, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_hide;
        break;
      }

      // optional bool hide = 4;
      case 4: {
        if (tag == 32) {
         parse_hide:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &hide_)));
          set_has_hide();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_effects;
        break;
      }

      // repeated .MsgPB.AttrEffect effects = 5;
      case 5: {
        if (tag == 42) {
         parse_effects:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_effects()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_effects;
        if (input->ExpectTag(50)) goto parse_baseval;
        break;
      }

      // repeated .MsgPB.AttrEffect baseval = 6;
      case 6: {
        if (tag == 50) {
         parse_baseval:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_baseval()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_baseval;
        if (input->ExpectTag(58)) goto parse_staticval;
        break;
      }

      // repeated .MsgPB.AttrEffect staticval = 7;
      case 7: {
        if (tag == 58) {
         parse_staticval:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_staticval()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_staticval;
        if (input->ExpectTag(64)) goto parse_magicid;
        break;
      }

      // repeated int32 magicid = 8;
      case 8: {
        if (tag == 64) {
         parse_magicid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 64, input, this->mutable_magicid())));
        } else if (tag == 66) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_magicid())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_magicid;
        if (input->ExpectTag(72)) goto parse_extskill;
        break;
      }

      // optional int32 extskill = 9;
      case 9: {
        if (tag == 72) {
         parse_extskill:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &extskill_)));
          set_has_extskill();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(80)) goto parse_effects_color;
        break;
      }

      // repeated int32 effects_color = 10;
      case 10: {
        if (tag == 80) {
         parse_effects_color:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 80, input, this->mutable_effects_color())));
        } else if (tag == 82) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_effects_color())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(80)) goto parse_effects_color;
        if (input->ExpectTag(88)) goto parse_durable;
        break;
      }

      // optional int32 durable = 11;
      case 11: {
        if (tag == 88) {
         parse_durable:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &durable_)));
          set_has_durable();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.ServerEquipInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.ServerEquipInfo)
  return false;
#undef DO_
}

void ServerEquipInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.ServerEquipInfo)
  // optional int64 uuid = 1;
  if (has_uuid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->uuid(), output);
  }

  // optional int32 dataid = 2;
  if (has_dataid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->dataid(), output);
  }

  // optional .MsgPB.EQUIP_PACKET_POS pos = 3;
  if (has_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->pos(), output);
  }

  // optional bool hide = 4;
  if (has_hide()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->hide(), output);
  }

  // repeated .MsgPB.AttrEffect effects = 5;
  for (int i = 0; i < this->effects_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->effects(i), output);
  }

  // repeated .MsgPB.AttrEffect baseval = 6;
  for (int i = 0; i < this->baseval_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->baseval(i), output);
  }

  // repeated .MsgPB.AttrEffect staticval = 7;
  for (int i = 0; i < this->staticval_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->staticval(i), output);
  }

  // repeated int32 magicid = 8;
  for (int i = 0; i < this->magicid_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      8, this->magicid(i), output);
  }

  // optional int32 extskill = 9;
  if (has_extskill()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->extskill(), output);
  }

  // repeated int32 effects_color = 10;
  for (int i = 0; i < this->effects_color_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      10, this->effects_color(i), output);
  }

  // optional int32 durable = 11;
  if (has_durable()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->durable(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.ServerEquipInfo)
}

::google::protobuf::uint8* ServerEquipInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.ServerEquipInfo)
  // optional int64 uuid = 1;
  if (has_uuid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->uuid(), target);
  }

  // optional int32 dataid = 2;
  if (has_dataid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->dataid(), target);
  }

  // optional .MsgPB.EQUIP_PACKET_POS pos = 3;
  if (has_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->pos(), target);
  }

  // optional bool hide = 4;
  if (has_hide()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->hide(), target);
  }

  // repeated .MsgPB.AttrEffect effects = 5;
  for (int i = 0; i < this->effects_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->effects(i), target);
  }

  // repeated .MsgPB.AttrEffect baseval = 6;
  for (int i = 0; i < this->baseval_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        6, this->baseval(i), target);
  }

  // repeated .MsgPB.AttrEffect staticval = 7;
  for (int i = 0; i < this->staticval_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        7, this->staticval(i), target);
  }

  // repeated int32 magicid = 8;
  for (int i = 0; i < this->magicid_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(8, this->magicid(i), target);
  }

  // optional int32 extskill = 9;
  if (has_extskill()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->extskill(), target);
  }

  // repeated int32 effects_color = 10;
  for (int i = 0; i < this->effects_color_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(10, this->effects_color(i), target);
  }

  // optional int32 durable = 11;
  if (has_durable()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->durable(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.ServerEquipInfo)
  return target;
}

int ServerEquipInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 uuid = 1;
    if (has_uuid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->uuid());
    }

    // optional int32 dataid = 2;
    if (has_dataid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->dataid());
    }

    // optional .MsgPB.EQUIP_PACKET_POS pos = 3;
    if (has_pos()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->pos());
    }

    // optional bool hide = 4;
    if (has_hide()) {
      total_size += 1 + 1;
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional int32 extskill = 9;
    if (has_extskill()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->extskill());
    }

    // optional int32 durable = 11;
    if (has_durable()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->durable());
    }

  }
  // repeated .MsgPB.AttrEffect effects = 5;
  total_size += 1 * this->effects_size();
  for (int i = 0; i < this->effects_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->effects(i));
  }

  // repeated .MsgPB.AttrEffect baseval = 6;
  total_size += 1 * this->baseval_size();
  for (int i = 0; i < this->baseval_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->baseval(i));
  }

  // repeated .MsgPB.AttrEffect staticval = 7;
  total_size += 1 * this->staticval_size();
  for (int i = 0; i < this->staticval_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->staticval(i));
  }

  // repeated int32 magicid = 8;
  {
    int data_size = 0;
    for (int i = 0; i < this->magicid_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->magicid(i));
    }
    total_size += 1 * this->magicid_size() + data_size;
  }

  // repeated int32 effects_color = 10;
  {
    int data_size = 0;
    for (int i = 0; i < this->effects_color_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->effects_color(i));
    }
    total_size += 1 * this->effects_color_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ServerEquipInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ServerEquipInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ServerEquipInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ServerEquipInfo::MergeFrom(const ServerEquipInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  effects_.MergeFrom(from.effects_);
  baseval_.MergeFrom(from.baseval_);
  staticval_.MergeFrom(from.staticval_);
  magicid_.MergeFrom(from.magicid_);
  effects_color_.MergeFrom(from.effects_color_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_uuid()) {
      set_uuid(from.uuid());
    }
    if (from.has_dataid()) {
      set_dataid(from.dataid());
    }
    if (from.has_pos()) {
      set_pos(from.pos());
    }
    if (from.has_hide()) {
      set_hide(from.hide());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_extskill()) {
      set_extskill(from.extskill());
    }
    if (from.has_durable()) {
      set_durable(from.durable());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ServerEquipInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServerEquipInfo::CopyFrom(const ServerEquipInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServerEquipInfo::IsInitialized() const {

  return true;
}

void ServerEquipInfo::Swap(ServerEquipInfo* other) {
  if (other != this) {
    std::swap(uuid_, other->uuid_);
    std::swap(dataid_, other->dataid_);
    std::swap(pos_, other->pos_);
    std::swap(hide_, other->hide_);
    effects_.Swap(&other->effects_);
    baseval_.Swap(&other->baseval_);
    staticval_.Swap(&other->staticval_);
    magicid_.Swap(&other->magicid_);
    std::swap(extskill_, other->extskill_);
    effects_color_.Swap(&other->effects_color_);
    std::swap(durable_, other->durable_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ServerEquipInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ServerEquipInfo_descriptor_;
  metadata.reflection = ServerEquipInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ItemPacketCapabilityInfo::kTypeFieldNumber;
const int ItemPacketCapabilityInfo::kCurrentGridNumFieldNumber;
const int ItemPacketCapabilityInfo::kMaxGridNumFieldNumber;
#endif  // !_MSC_VER

ItemPacketCapabilityInfo::ItemPacketCapabilityInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.ItemPacketCapabilityInfo)
}

void ItemPacketCapabilityInfo::InitAsDefaultInstance() {
}

ItemPacketCapabilityInfo::ItemPacketCapabilityInfo(const ItemPacketCapabilityInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.ItemPacketCapabilityInfo)
}

void ItemPacketCapabilityInfo::SharedCtor() {
  _cached_size_ = 0;
  type_ = 0;
  current_grid_num_ = 0;
  max_grid_num_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ItemPacketCapabilityInfo::~ItemPacketCapabilityInfo() {
  // @@protoc_insertion_point(destructor:MsgPB.ItemPacketCapabilityInfo)
  SharedDtor();
}

void ItemPacketCapabilityInfo::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ItemPacketCapabilityInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ItemPacketCapabilityInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ItemPacketCapabilityInfo_descriptor_;
}

const ItemPacketCapabilityInfo& ItemPacketCapabilityInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgItem_2eproto();
  return *default_instance_;
}

ItemPacketCapabilityInfo* ItemPacketCapabilityInfo::default_instance_ = NULL;

ItemPacketCapabilityInfo* ItemPacketCapabilityInfo::New() const {
  return new ItemPacketCapabilityInfo;
}

void ItemPacketCapabilityInfo::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<ItemPacketCapabilityInfo*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(type_, max_grid_num_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ItemPacketCapabilityInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.ItemPacketCapabilityInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .MsgPB.PACKET_TYPE type = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::PACKET_TYPE_IsValid(value)) {
            set_type(static_cast< ::MsgPB::PACKET_TYPE >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_current_grid_num;
        break;
      }

      // optional int32 current_grid_num = 2;
      case 2: {
        if (tag == 16) {
         parse_current_grid_num:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &current_grid_num_)));
          set_has_current_grid_num();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_max_grid_num;
        break;
      }

      // optional int32 max_grid_num = 3;
      case 3: {
        if (tag == 24) {
         parse_max_grid_num:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &max_grid_num_)));
          set_has_max_grid_num();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.ItemPacketCapabilityInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.ItemPacketCapabilityInfo)
  return false;
#undef DO_
}

void ItemPacketCapabilityInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.ItemPacketCapabilityInfo)
  // optional .MsgPB.PACKET_TYPE type = 1;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->type(), output);
  }

  // optional int32 current_grid_num = 2;
  if (has_current_grid_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->current_grid_num(), output);
  }

  // optional int32 max_grid_num = 3;
  if (has_max_grid_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->max_grid_num(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.ItemPacketCapabilityInfo)
}

::google::protobuf::uint8* ItemPacketCapabilityInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.ItemPacketCapabilityInfo)
  // optional .MsgPB.PACKET_TYPE type = 1;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->type(), target);
  }

  // optional int32 current_grid_num = 2;
  if (has_current_grid_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->current_grid_num(), target);
  }

  // optional int32 max_grid_num = 3;
  if (has_max_grid_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->max_grid_num(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.ItemPacketCapabilityInfo)
  return target;
}

int ItemPacketCapabilityInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .MsgPB.PACKET_TYPE type = 1;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
    }

    // optional int32 current_grid_num = 2;
    if (has_current_grid_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->current_grid_num());
    }

    // optional int32 max_grid_num = 3;
    if (has_max_grid_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->max_grid_num());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ItemPacketCapabilityInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ItemPacketCapabilityInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ItemPacketCapabilityInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ItemPacketCapabilityInfo::MergeFrom(const ItemPacketCapabilityInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_current_grid_num()) {
      set_current_grid_num(from.current_grid_num());
    }
    if (from.has_max_grid_num()) {
      set_max_grid_num(from.max_grid_num());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ItemPacketCapabilityInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ItemPacketCapabilityInfo::CopyFrom(const ItemPacketCapabilityInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ItemPacketCapabilityInfo::IsInitialized() const {

  return true;
}

void ItemPacketCapabilityInfo::Swap(ItemPacketCapabilityInfo* other) {
  if (other != this) {
    std::swap(type_, other->type_);
    std::swap(current_grid_num_, other->current_grid_num_);
    std::swap(max_grid_num_, other->max_grid_num_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ItemPacketCapabilityInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ItemPacketCapabilityInfo_descriptor_;
  metadata.reflection = ItemPacketCapabilityInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgItemPacketCapabilityGS2C::kMsgTypeFieldNumber;
const int MsgItemPacketCapabilityGS2C::kBodyNowFieldNumber;
const int MsgItemPacketCapabilityGS2C::kBodyMaxFieldNumber;
const int MsgItemPacketCapabilityGS2C::kBankNowFieldNumber;
const int MsgItemPacketCapabilityGS2C::kBankMaxFieldNumber;
const int MsgItemPacketCapabilityGS2C::kRent1NowFieldNumber;
const int MsgItemPacketCapabilityGS2C::kRent1MaxFieldNumber;
const int MsgItemPacketCapabilityGS2C::kRent1DeadlineFieldNumber;
const int MsgItemPacketCapabilityGS2C::kRent2NowFieldNumber;
const int MsgItemPacketCapabilityGS2C::kRent2MaxFieldNumber;
const int MsgItemPacketCapabilityGS2C::kRent2DeadlineFieldNumber;
const int MsgItemPacketCapabilityGS2C::kEndlessNowFieldNumber;
const int MsgItemPacketCapabilityGS2C::kEndlessMaxFieldNumber;
const int MsgItemPacketCapabilityGS2C::kPetNowFieldNumber;
const int MsgItemPacketCapabilityGS2C::kPetMaxFieldNumber;
const int MsgItemPacketCapabilityGS2C::kInfosFieldNumber;
#endif  // !_MSC_VER

MsgItemPacketCapabilityGS2C::MsgItemPacketCapabilityGS2C()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.MsgItemPacketCapabilityGS2C)
}

void MsgItemPacketCapabilityGS2C::InitAsDefaultInstance() {
}

MsgItemPacketCapabilityGS2C::MsgItemPacketCapabilityGS2C(const MsgItemPacketCapabilityGS2C& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.MsgItemPacketCapabilityGS2C)
}

void MsgItemPacketCapabilityGS2C::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  msgtype_ = 1200;
  body_now_ = 0;
  body_max_ = 0;
  bank_now_ = 0;
  bank_max_ = 0;
  rent1_now_ = 0;
  rent1_max_ = 0;
  rent1_deadline_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  rent2_now_ = 0;
  rent2_max_ = 0;
  rent2_deadline_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  endless_now_ = 0;
  endless_max_ = 0;
  pet_now_ = 0;
  pet_max_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgItemPacketCapabilityGS2C::~MsgItemPacketCapabilityGS2C() {
  // @@protoc_insertion_point(destructor:MsgPB.MsgItemPacketCapabilityGS2C)
  SharedDtor();
}

void MsgItemPacketCapabilityGS2C::SharedDtor() {
  if (rent1_deadline_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete rent1_deadline_;
  }
  if (rent2_deadline_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete rent2_deadline_;
  }
  if (this != default_instance_) {
  }
}

void MsgItemPacketCapabilityGS2C::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgItemPacketCapabilityGS2C::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgItemPacketCapabilityGS2C_descriptor_;
}

const MsgItemPacketCapabilityGS2C& MsgItemPacketCapabilityGS2C::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgItem_2eproto();
  return *default_instance_;
}

MsgItemPacketCapabilityGS2C* MsgItemPacketCapabilityGS2C::default_instance_ = NULL;

MsgItemPacketCapabilityGS2C* MsgItemPacketCapabilityGS2C::New() const {
  return new MsgItemPacketCapabilityGS2C;
}

void MsgItemPacketCapabilityGS2C::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<MsgItemPacketCapabilityGS2C*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 255) {
    ZR_(body_now_, rent1_now_);
    msgtype_ = 1200;
    rent1_max_ = 0;
    if (has_rent1_deadline()) {
      if (rent1_deadline_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        rent1_deadline_->clear();
      }
    }
  }
  if (_has_bits_[8 / 32] & 32512) {
    ZR_(rent2_max_, pet_now_);
    rent2_now_ = 0;
    if (has_rent2_deadline()) {
      if (rent2_deadline_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        rent2_deadline_->clear();
      }
    }
    pet_max_ = 0;
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  infos_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgItemPacketCapabilityGS2C::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.MsgItemPacketCapabilityGS2C)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_ITEMPACKET_CAPABILITY_GS2C];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::EMsgType_IsValid(value)) {
            set_msgtype(static_cast< ::MsgPB::EMsgType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_body_now;
        break;
      }

      // optional int32 body_now = 2;
      case 2: {
        if (tag == 16) {
         parse_body_now:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &body_now_)));
          set_has_body_now();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_body_max;
        break;
      }

      // optional int32 body_max = 3;
      case 3: {
        if (tag == 24) {
         parse_body_max:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &body_max_)));
          set_has_body_max();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_bank_now;
        break;
      }

      // optional int32 bank_now = 4;
      case 4: {
        if (tag == 32) {
         parse_bank_now:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &bank_now_)));
          set_has_bank_now();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_bank_max;
        break;
      }

      // optional int32 bank_max = 5;
      case 5: {
        if (tag == 40) {
         parse_bank_max:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &bank_max_)));
          set_has_bank_max();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_rent1_now;
        break;
      }

      // optional int32 rent1_now = 6;
      case 6: {
        if (tag == 48) {
         parse_rent1_now:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &rent1_now_)));
          set_has_rent1_now();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_rent1_max;
        break;
      }

      // optional int32 rent1_max = 7;
      case 7: {
        if (tag == 56) {
         parse_rent1_max:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &rent1_max_)));
          set_has_rent1_max();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_rent1_deadline;
        break;
      }

      // optional string rent1_deadline = 8;
      case 8: {
        if (tag == 66) {
         parse_rent1_deadline:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_rent1_deadline()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->rent1_deadline().data(), this->rent1_deadline().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "rent1_deadline");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_rent2_now;
        break;
      }

      // optional int32 rent2_now = 9;
      case 9: {
        if (tag == 72) {
         parse_rent2_now:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &rent2_now_)));
          set_has_rent2_now();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(80)) goto parse_rent2_max;
        break;
      }

      // optional int32 rent2_max = 10;
      case 10: {
        if (tag == 80) {
         parse_rent2_max:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &rent2_max_)));
          set_has_rent2_max();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(90)) goto parse_rent2_deadline;
        break;
      }

      // optional string rent2_deadline = 11;
      case 11: {
        if (tag == 90) {
         parse_rent2_deadline:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_rent2_deadline()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->rent2_deadline().data(), this->rent2_deadline().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "rent2_deadline");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(96)) goto parse_endless_now;
        break;
      }

      // optional int32 endless_now = 12;
      case 12: {
        if (tag == 96) {
         parse_endless_now:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &endless_now_)));
          set_has_endless_now();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(104)) goto parse_endless_max;
        break;
      }

      // optional int32 endless_max = 13;
      case 13: {
        if (tag == 104) {
         parse_endless_max:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &endless_max_)));
          set_has_endless_max();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(112)) goto parse_pet_now;
        break;
      }

      // optional int32 pet_now = 14;
      case 14: {
        if (tag == 112) {
         parse_pet_now:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pet_now_)));
          set_has_pet_now();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(120)) goto parse_pet_max;
        break;
      }

      // optional int32 pet_max = 15;
      case 15: {
        if (tag == 120) {
         parse_pet_max:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pet_max_)));
          set_has_pet_max();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(130)) goto parse_infos;
        break;
      }

      // repeated .MsgPB.ItemPacketCapabilityInfo infos = 16;
      case 16: {
        if (tag == 130) {
         parse_infos:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_infos()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(130)) goto parse_infos;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.MsgItemPacketCapabilityGS2C)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.MsgItemPacketCapabilityGS2C)
  return false;
#undef DO_
}

void MsgItemPacketCapabilityGS2C::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.MsgItemPacketCapabilityGS2C)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_ITEMPACKET_CAPABILITY_GS2C];
  if (has_msgtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->msgtype(), output);
  }

  // optional int32 body_now = 2;
  if (has_body_now()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->body_now(), output);
  }

  // optional int32 body_max = 3;
  if (has_body_max()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->body_max(), output);
  }

  // optional int32 bank_now = 4;
  if (has_bank_now()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->bank_now(), output);
  }

  // optional int32 bank_max = 5;
  if (has_bank_max()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->bank_max(), output);
  }

  // optional int32 rent1_now = 6;
  if (has_rent1_now()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->rent1_now(), output);
  }

  // optional int32 rent1_max = 7;
  if (has_rent1_max()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->rent1_max(), output);
  }

  // optional string rent1_deadline = 8;
  if (has_rent1_deadline()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->rent1_deadline().data(), this->rent1_deadline().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "rent1_deadline");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->rent1_deadline(), output);
  }

  // optional int32 rent2_now = 9;
  if (has_rent2_now()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->rent2_now(), output);
  }

  // optional int32 rent2_max = 10;
  if (has_rent2_max()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->rent2_max(), output);
  }

  // optional string rent2_deadline = 11;
  if (has_rent2_deadline()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->rent2_deadline().data(), this->rent2_deadline().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "rent2_deadline");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->rent2_deadline(), output);
  }

  // optional int32 endless_now = 12;
  if (has_endless_now()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(12, this->endless_now(), output);
  }

  // optional int32 endless_max = 13;
  if (has_endless_max()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(13, this->endless_max(), output);
  }

  // optional int32 pet_now = 14;
  if (has_pet_now()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(14, this->pet_now(), output);
  }

  // optional int32 pet_max = 15;
  if (has_pet_max()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(15, this->pet_max(), output);
  }

  // repeated .MsgPB.ItemPacketCapabilityInfo infos = 16;
  for (int i = 0; i < this->infos_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      16, this->infos(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.MsgItemPacketCapabilityGS2C)
}

::google::protobuf::uint8* MsgItemPacketCapabilityGS2C::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.MsgItemPacketCapabilityGS2C)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_ITEMPACKET_CAPABILITY_GS2C];
  if (has_msgtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->msgtype(), target);
  }

  // optional int32 body_now = 2;
  if (has_body_now()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->body_now(), target);
  }

  // optional int32 body_max = 3;
  if (has_body_max()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->body_max(), target);
  }

  // optional int32 bank_now = 4;
  if (has_bank_now()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->bank_now(), target);
  }

  // optional int32 bank_max = 5;
  if (has_bank_max()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->bank_max(), target);
  }

  // optional int32 rent1_now = 6;
  if (has_rent1_now()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->rent1_now(), target);
  }

  // optional int32 rent1_max = 7;
  if (has_rent1_max()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->rent1_max(), target);
  }

  // optional string rent1_deadline = 8;
  if (has_rent1_deadline()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->rent1_deadline().data(), this->rent1_deadline().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "rent1_deadline");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->rent1_deadline(), target);
  }

  // optional int32 rent2_now = 9;
  if (has_rent2_now()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->rent2_now(), target);
  }

  // optional int32 rent2_max = 10;
  if (has_rent2_max()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->rent2_max(), target);
  }

  // optional string rent2_deadline = 11;
  if (has_rent2_deadline()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->rent2_deadline().data(), this->rent2_deadline().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "rent2_deadline");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->rent2_deadline(), target);
  }

  // optional int32 endless_now = 12;
  if (has_endless_now()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(12, this->endless_now(), target);
  }

  // optional int32 endless_max = 13;
  if (has_endless_max()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(13, this->endless_max(), target);
  }

  // optional int32 pet_now = 14;
  if (has_pet_now()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(14, this->pet_now(), target);
  }

  // optional int32 pet_max = 15;
  if (has_pet_max()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(15, this->pet_max(), target);
  }

  // repeated .MsgPB.ItemPacketCapabilityInfo infos = 16;
  for (int i = 0; i < this->infos_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        16, this->infos(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.MsgItemPacketCapabilityGS2C)
  return target;
}

int MsgItemPacketCapabilityGS2C::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_ITEMPACKET_CAPABILITY_GS2C];
    if (has_msgtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgtype());
    }

    // optional int32 body_now = 2;
    if (has_body_now()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->body_now());
    }

    // optional int32 body_max = 3;
    if (has_body_max()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->body_max());
    }

    // optional int32 bank_now = 4;
    if (has_bank_now()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->bank_now());
    }

    // optional int32 bank_max = 5;
    if (has_bank_max()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->bank_max());
    }

    // optional int32 rent1_now = 6;
    if (has_rent1_now()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->rent1_now());
    }

    // optional int32 rent1_max = 7;
    if (has_rent1_max()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->rent1_max());
    }

    // optional string rent1_deadline = 8;
    if (has_rent1_deadline()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->rent1_deadline());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional int32 rent2_now = 9;
    if (has_rent2_now()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->rent2_now());
    }

    // optional int32 rent2_max = 10;
    if (has_rent2_max()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->rent2_max());
    }

    // optional string rent2_deadline = 11;
    if (has_rent2_deadline()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->rent2_deadline());
    }

    // optional int32 endless_now = 12;
    if (has_endless_now()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->endless_now());
    }

    // optional int32 endless_max = 13;
    if (has_endless_max()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->endless_max());
    }

    // optional int32 pet_now = 14;
    if (has_pet_now()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pet_now());
    }

    // optional int32 pet_max = 15;
    if (has_pet_max()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pet_max());
    }

  }
  // repeated .MsgPB.ItemPacketCapabilityInfo infos = 16;
  total_size += 2 * this->infos_size();
  for (int i = 0; i < this->infos_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->infos(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgItemPacketCapabilityGS2C::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgItemPacketCapabilityGS2C* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgItemPacketCapabilityGS2C*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgItemPacketCapabilityGS2C::MergeFrom(const MsgItemPacketCapabilityGS2C& from) {
  GOOGLE_CHECK_NE(&from, this);
  infos_.MergeFrom(from.infos_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msgtype()) {
      set_msgtype(from.msgtype());
    }
    if (from.has_body_now()) {
      set_body_now(from.body_now());
    }
    if (from.has_body_max()) {
      set_body_max(from.body_max());
    }
    if (from.has_bank_now()) {
      set_bank_now(from.bank_now());
    }
    if (from.has_bank_max()) {
      set_bank_max(from.bank_max());
    }
    if (from.has_rent1_now()) {
      set_rent1_now(from.rent1_now());
    }
    if (from.has_rent1_max()) {
      set_rent1_max(from.rent1_max());
    }
    if (from.has_rent1_deadline()) {
      set_rent1_deadline(from.rent1_deadline());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_rent2_now()) {
      set_rent2_now(from.rent2_now());
    }
    if (from.has_rent2_max()) {
      set_rent2_max(from.rent2_max());
    }
    if (from.has_rent2_deadline()) {
      set_rent2_deadline(from.rent2_deadline());
    }
    if (from.has_endless_now()) {
      set_endless_now(from.endless_now());
    }
    if (from.has_endless_max()) {
      set_endless_max(from.endless_max());
    }
    if (from.has_pet_now()) {
      set_pet_now(from.pet_now());
    }
    if (from.has_pet_max()) {
      set_pet_max(from.pet_max());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgItemPacketCapabilityGS2C::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgItemPacketCapabilityGS2C::CopyFrom(const MsgItemPacketCapabilityGS2C& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgItemPacketCapabilityGS2C::IsInitialized() const {

  return true;
}

void MsgItemPacketCapabilityGS2C::Swap(MsgItemPacketCapabilityGS2C* other) {
  if (other != this) {
    std::swap(msgtype_, other->msgtype_);
    std::swap(body_now_, other->body_now_);
    std::swap(body_max_, other->body_max_);
    std::swap(bank_now_, other->bank_now_);
    std::swap(bank_max_, other->bank_max_);
    std::swap(rent1_now_, other->rent1_now_);
    std::swap(rent1_max_, other->rent1_max_);
    std::swap(rent1_deadline_, other->rent1_deadline_);
    std::swap(rent2_now_, other->rent2_now_);
    std::swap(rent2_max_, other->rent2_max_);
    std::swap(rent2_deadline_, other->rent2_deadline_);
    std::swap(endless_now_, other->endless_now_);
    std::swap(endless_max_, other->endless_max_);
    std::swap(pet_now_, other->pet_now_);
    std::swap(pet_max_, other->pet_max_);
    infos_.Swap(&other->infos_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgItemPacketCapabilityGS2C::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgItemPacketCapabilityGS2C_descriptor_;
  metadata.reflection = MsgItemPacketCapabilityGS2C_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int S_ItemPacketPos::kUuidFieldNumber;
const int S_ItemPacketPos::kPacketFieldNumber;
const int S_ItemPacketPos::kPosFieldNumber;
const int S_ItemPacketPos::kItemUuidFieldNumber;
#endif  // !_MSC_VER

S_ItemPacketPos::S_ItemPacketPos()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.S_ItemPacketPos)
}

void S_ItemPacketPos::InitAsDefaultInstance() {
}

S_ItemPacketPos::S_ItemPacketPos(const S_ItemPacketPos& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.S_ItemPacketPos)
}

void S_ItemPacketPos::SharedCtor() {
  _cached_size_ = 0;
  uuid_ = GOOGLE_LONGLONG(0);
  packet_ = 0;
  pos_ = 0;
  item_uuid_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

S_ItemPacketPos::~S_ItemPacketPos() {
  // @@protoc_insertion_point(destructor:MsgPB.S_ItemPacketPos)
  SharedDtor();
}

void S_ItemPacketPos::SharedDtor() {
  if (this != default_instance_) {
  }
}

void S_ItemPacketPos::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* S_ItemPacketPos::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return S_ItemPacketPos_descriptor_;
}

const S_ItemPacketPos& S_ItemPacketPos::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgItem_2eproto();
  return *default_instance_;
}

S_ItemPacketPos* S_ItemPacketPos::default_instance_ = NULL;

S_ItemPacketPos* S_ItemPacketPos::New() const {
  return new S_ItemPacketPos;
}

void S_ItemPacketPos::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<S_ItemPacketPos*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(uuid_, item_uuid_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool S_ItemPacketPos::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.S_ItemPacketPos)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 uuid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &uuid_)));
          set_has_uuid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_packet;
        break;
      }

      // optional .MsgPB.PACKET_TYPE packet = 2;
      case 2: {
        if (tag == 16) {
         parse_packet:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::PACKET_TYPE_IsValid(value)) {
            set_packet(static_cast< ::MsgPB::PACKET_TYPE >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_pos;
        break;
      }

      // optional int32 pos = 3;
      case 3: {
        if (tag == 24) {
         parse_pos:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pos_)));
          set_has_pos();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_item_uuid;
        break;
      }

      // optional int64 item_uuid = 4;
      case 4: {
        if (tag == 32) {
         parse_item_uuid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &item_uuid_)));
          set_has_item_uuid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.S_ItemPacketPos)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.S_ItemPacketPos)
  return false;
#undef DO_
}

void S_ItemPacketPos::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.S_ItemPacketPos)
  // optional int64 uuid = 1;
  if (has_uuid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->uuid(), output);
  }

  // optional .MsgPB.PACKET_TYPE packet = 2;
  if (has_packet()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->packet(), output);
  }

  // optional int32 pos = 3;
  if (has_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->pos(), output);
  }

  // optional int64 item_uuid = 4;
  if (has_item_uuid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->item_uuid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.S_ItemPacketPos)
}

::google::protobuf::uint8* S_ItemPacketPos::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.S_ItemPacketPos)
  // optional int64 uuid = 1;
  if (has_uuid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->uuid(), target);
  }

  // optional .MsgPB.PACKET_TYPE packet = 2;
  if (has_packet()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->packet(), target);
  }

  // optional int32 pos = 3;
  if (has_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->pos(), target);
  }

  // optional int64 item_uuid = 4;
  if (has_item_uuid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->item_uuid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.S_ItemPacketPos)
  return target;
}

int S_ItemPacketPos::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 uuid = 1;
    if (has_uuid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->uuid());
    }

    // optional .MsgPB.PACKET_TYPE packet = 2;
    if (has_packet()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->packet());
    }

    // optional int32 pos = 3;
    if (has_pos()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pos());
    }

    // optional int64 item_uuid = 4;
    if (has_item_uuid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->item_uuid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void S_ItemPacketPos::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const S_ItemPacketPos* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const S_ItemPacketPos*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void S_ItemPacketPos::MergeFrom(const S_ItemPacketPos& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_uuid()) {
      set_uuid(from.uuid());
    }
    if (from.has_packet()) {
      set_packet(from.packet());
    }
    if (from.has_pos()) {
      set_pos(from.pos());
    }
    if (from.has_item_uuid()) {
      set_item_uuid(from.item_uuid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void S_ItemPacketPos::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S_ItemPacketPos::CopyFrom(const S_ItemPacketPos& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S_ItemPacketPos::IsInitialized() const {

  return true;
}

void S_ItemPacketPos::Swap(S_ItemPacketPos* other) {
  if (other != this) {
    std::swap(uuid_, other->uuid_);
    std::swap(packet_, other->packet_);
    std::swap(pos_, other->pos_);
    std::swap(item_uuid_, other->item_uuid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata S_ItemPacketPos::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = S_ItemPacketPos_descriptor_;
  metadata.reflection = S_ItemPacketPos_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgItemPacketPosGS2C::kMsgTypeFieldNumber;
const int MsgItemPacketPosGS2C::kDatasFieldNumber;
#endif  // !_MSC_VER

MsgItemPacketPosGS2C::MsgItemPacketPosGS2C()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.MsgItemPacketPosGS2C)
}

void MsgItemPacketPosGS2C::InitAsDefaultInstance() {
}

MsgItemPacketPosGS2C::MsgItemPacketPosGS2C(const MsgItemPacketPosGS2C& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.MsgItemPacketPosGS2C)
}

void MsgItemPacketPosGS2C::SharedCtor() {
  _cached_size_ = 0;
  msgtype_ = 1293;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgItemPacketPosGS2C::~MsgItemPacketPosGS2C() {
  // @@protoc_insertion_point(destructor:MsgPB.MsgItemPacketPosGS2C)
  SharedDtor();
}

void MsgItemPacketPosGS2C::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgItemPacketPosGS2C::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgItemPacketPosGS2C::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgItemPacketPosGS2C_descriptor_;
}

const MsgItemPacketPosGS2C& MsgItemPacketPosGS2C::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgItem_2eproto();
  return *default_instance_;
}

MsgItemPacketPosGS2C* MsgItemPacketPosGS2C::default_instance_ = NULL;

MsgItemPacketPosGS2C* MsgItemPacketPosGS2C::New() const {
  return new MsgItemPacketPosGS2C;
}

void MsgItemPacketPosGS2C::Clear() {
  msgtype_ = 1293;
  datas_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgItemPacketPosGS2C::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.MsgItemPacketPosGS2C)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_ITEM_PACKET_POS_GS2C];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::EMsgType_IsValid(value)) {
            set_msgtype(static_cast< ::MsgPB::EMsgType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_datas;
        break;
      }

      // repeated .MsgPB.S_ItemPacketPos datas = 2;
      case 2: {
        if (tag == 18) {
         parse_datas:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_datas()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_datas;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.MsgItemPacketPosGS2C)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.MsgItemPacketPosGS2C)
  return false;
#undef DO_
}

void MsgItemPacketPosGS2C::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.MsgItemPacketPosGS2C)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_ITEM_PACKET_POS_GS2C];
  if (has_msgtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->msgtype(), output);
  }

  // repeated .MsgPB.S_ItemPacketPos datas = 2;
  for (int i = 0; i < this->datas_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->datas(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.MsgItemPacketPosGS2C)
}

::google::protobuf::uint8* MsgItemPacketPosGS2C::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.MsgItemPacketPosGS2C)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_ITEM_PACKET_POS_GS2C];
  if (has_msgtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->msgtype(), target);
  }

  // repeated .MsgPB.S_ItemPacketPos datas = 2;
  for (int i = 0; i < this->datas_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->datas(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.MsgItemPacketPosGS2C)
  return target;
}

int MsgItemPacketPosGS2C::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_ITEM_PACKET_POS_GS2C];
    if (has_msgtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgtype());
    }

  }
  // repeated .MsgPB.S_ItemPacketPos datas = 2;
  total_size += 1 * this->datas_size();
  for (int i = 0; i < this->datas_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->datas(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgItemPacketPosGS2C::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgItemPacketPosGS2C* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgItemPacketPosGS2C*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgItemPacketPosGS2C::MergeFrom(const MsgItemPacketPosGS2C& from) {
  GOOGLE_CHECK_NE(&from, this);
  datas_.MergeFrom(from.datas_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msgtype()) {
      set_msgtype(from.msgtype());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgItemPacketPosGS2C::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgItemPacketPosGS2C::CopyFrom(const MsgItemPacketPosGS2C& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgItemPacketPosGS2C::IsInitialized() const {

  return true;
}

void MsgItemPacketPosGS2C::Swap(MsgItemPacketPosGS2C* other) {
  if (other != this) {
    std::swap(msgtype_, other->msgtype_);
    datas_.Swap(&other->datas_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgItemPacketPosGS2C::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgItemPacketPosGS2C_descriptor_;
  metadata.reflection = MsgItemPacketPosGS2C_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgItemDataGS2C_ItemData::kUuidFieldNumber;
const int MsgItemDataGS2C_ItemData::kDataidFieldNumber;
const int MsgItemDataGS2C_ItemData::kNameFieldNumber;
const int MsgItemDataGS2C_ItemData::kPosFieldNumber;
const int MsgItemDataGS2C_ItemData::kCountFieldNumber;
const int MsgItemDataGS2C_ItemData::kPackettypeFieldNumber;
const int MsgItemDataGS2C_ItemData::kCooldownFieldNumber;
const int MsgItemDataGS2C_ItemData::kExpiredTimeFieldNumber;
const int MsgItemDataGS2C_ItemData::kCountdownTimeFieldNumber;
const int MsgItemDataGS2C_ItemData::kDurableFieldNumber;
const int MsgItemDataGS2C_ItemData::kEffectsFieldNumber;
const int MsgItemDataGS2C_ItemData::kBasevalFieldNumber;
const int MsgItemDataGS2C_ItemData::kStaticvalFieldNumber;
const int MsgItemDataGS2C_ItemData::kExtattrlockFieldNumber;
const int MsgItemDataGS2C_ItemData::kTempbaseFieldNumber;
const int MsgItemDataGS2C_ItemData::kTempextattrFieldNumber;
const int MsgItemDataGS2C_ItemData::kMagicidFieldNumber;
const int MsgItemDataGS2C_ItemData::kMagictempidFieldNumber;
const int MsgItemDataGS2C_ItemData::kExtskillFieldNumber;
const int MsgItemDataGS2C_ItemData::kTowerBuildFieldNumber;
const int MsgItemDataGS2C_ItemData::kDurablemaxFieldNumber;
const int MsgItemDataGS2C_ItemData::kAuctionCooldownFieldNumber;
const int MsgItemDataGS2C_ItemData::kEffectsColorFieldNumber;
const int MsgItemDataGS2C_ItemData::kTempextColorFieldNumber;
const int MsgItemDataGS2C_ItemData::kStrengthenFieldNumber;
const int MsgItemDataGS2C_ItemData::kHideFieldNumber;
const int MsgItemDataGS2C_ItemData::kPetEquipSkillFieldNumber;
const int MsgItemDataGS2C_ItemData::kIdentifiedFieldNumber;
const int MsgItemDataGS2C_ItemData::kItemCountersFieldNumber;
const int MsgItemDataGS2C_ItemData::kIntegrityFieldNumber;
const int MsgItemDataGS2C_ItemData::kQualityFieldNumber;
#endif  // !_MSC_VER

MsgItemDataGS2C_ItemData::MsgItemDataGS2C_ItemData()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.MsgItemDataGS2C.ItemData)
}

void MsgItemDataGS2C_ItemData::InitAsDefaultInstance() {
  tower_build_ = const_cast< ::MsgPB::PBTowerBuildData*>(&::MsgPB::PBTowerBuildData::default_instance());
  item_counters_ = const_cast< ::MsgPB::MsgItemCounters*>(&::MsgPB::MsgItemCounters::default_instance());
}

MsgItemDataGS2C_ItemData::MsgItemDataGS2C_ItemData(const MsgItemDataGS2C_ItemData& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.MsgItemDataGS2C.ItemData)
}

void MsgItemDataGS2C_ItemData::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  uuid_ = GOOGLE_LONGLONG(0);
  dataid_ = 0;
  name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pos_ = 0;
  count_ = 0;
  packettype_ = 0;
  cooldown_ = 0;
  expired_time_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  countdown_time_ = 0;
  durable_ = 0;
  extattrlock_ = 0;
  extskill_ = 0;
  tower_build_ = NULL;
  durablemax_ = 0;
  auction_cooldown_ = GOOGLE_LONGLONG(0);
  strengthen_ = 0;
  hide_ = false;
  identified_ = false;
  item_counters_ = NULL;
  integrity_ = 0;
  quality_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgItemDataGS2C_ItemData::~MsgItemDataGS2C_ItemData() {
  // @@protoc_insertion_point(destructor:MsgPB.MsgItemDataGS2C.ItemData)
  SharedDtor();
}

void MsgItemDataGS2C_ItemData::SharedDtor() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (expired_time_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete expired_time_;
  }
  if (this != default_instance_) {
    delete tower_build_;
    delete item_counters_;
  }
}

void MsgItemDataGS2C_ItemData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgItemDataGS2C_ItemData::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgItemDataGS2C_ItemData_descriptor_;
}

const MsgItemDataGS2C_ItemData& MsgItemDataGS2C_ItemData::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgItem_2eproto();
  return *default_instance_;
}

MsgItemDataGS2C_ItemData* MsgItemDataGS2C_ItemData::default_instance_ = NULL;

MsgItemDataGS2C_ItemData* MsgItemDataGS2C_ItemData::New() const {
  return new MsgItemDataGS2C_ItemData;
}

void MsgItemDataGS2C_ItemData::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<MsgItemDataGS2C_ItemData*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 255) {
    ZR_(dataid_, packettype_);
    uuid_ = GOOGLE_LONGLONG(0);
    if (has_name()) {
      if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        name_->clear();
      }
    }
    cooldown_ = 0;
    if (has_expired_time()) {
      if (expired_time_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        expired_time_->clear();
      }
    }
  }
  if (_has_bits_[8 / 32] & 8960) {
    ZR_(durable_, extattrlock_);
    countdown_time_ = 0;
  }
  if (_has_bits_[16 / 32] & 3932160) {
    ZR_(extskill_, auction_cooldown_);
    if (has_tower_build()) {
      if (tower_build_ != NULL) tower_build_->::MsgPB::PBTowerBuildData::Clear();
    }
  }
  if (_has_bits_[24 / 32] & 2063597568) {
    ZR_(strengthen_, identified_);
    ZR_(integrity_, quality_);
    if (has_item_counters()) {
      if (item_counters_ != NULL) item_counters_->::MsgPB::MsgItemCounters::Clear();
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  effects_.Clear();
  baseval_.Clear();
  staticval_.Clear();
  tempbase_.Clear();
  tempextattr_.Clear();
  magicid_.Clear();
  magictempid_.Clear();
  effects_color_.Clear();
  tempext_color_.Clear();
  pet_equip_skill_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgItemDataGS2C_ItemData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.MsgItemDataGS2C.ItemData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 uuid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &uuid_)));
          set_has_uuid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_dataid;
        break;
      }

      // optional int32 dataid = 2;
      case 2: {
        if (tag == 16) {
         parse_dataid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &dataid_)));
          set_has_dataid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_name;
        break;
      }

      // optional string name = 3;
      case 3: {
        if (tag == 26) {
         parse_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_pos;
        break;
      }

      // optional int32 pos = 4;
      case 4: {
        if (tag == 32) {
         parse_pos:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pos_)));
          set_has_pos();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_count;
        break;
      }

      // optional int32 count = 5;
      case 5: {
        if (tag == 40) {
         parse_count:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &count_)));
          set_has_count();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_packettype;
        break;
      }

      // optional .MsgPB.PACKET_TYPE packettype = 6;
      case 6: {
        if (tag == 48) {
         parse_packettype:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::PACKET_TYPE_IsValid(value)) {
            set_packettype(static_cast< ::MsgPB::PACKET_TYPE >(value));
          } else {
            mutable_unknown_fields()->AddVarint(6, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_cooldown;
        break;
      }

      // optional int32 cooldown = 7;
      case 7: {
        if (tag == 56) {
         parse_cooldown:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cooldown_)));
          set_has_cooldown();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_expired_time;
        break;
      }

      // optional string expired_time = 8;
      case 8: {
        if (tag == 66) {
         parse_expired_time:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_expired_time()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->expired_time().data(), this->expired_time().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "expired_time");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_countdown_time;
        break;
      }

      // optional int32 countdown_time = 9;
      case 9: {
        if (tag == 72) {
         parse_countdown_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &countdown_time_)));
          set_has_countdown_time();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(80)) goto parse_durable;
        break;
      }

      // optional int32 durable = 10;
      case 10: {
        if (tag == 80) {
         parse_durable:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &durable_)));
          set_has_durable();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(90)) goto parse_effects;
        break;
      }

      // repeated .MsgPB.AttrEffect effects = 11;
      case 11: {
        if (tag == 90) {
         parse_effects:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_effects()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(90)) goto parse_effects;
        if (input->ExpectTag(98)) goto parse_baseval;
        break;
      }

      // repeated .MsgPB.AttrEffect baseval = 12;
      case 12: {
        if (tag == 98) {
         parse_baseval:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_baseval()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(98)) goto parse_baseval;
        if (input->ExpectTag(106)) goto parse_staticval;
        break;
      }

      // repeated .MsgPB.AttrEffect staticval = 13;
      case 13: {
        if (tag == 106) {
         parse_staticval:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_staticval()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(106)) goto parse_staticval;
        if (input->ExpectTag(112)) goto parse_extattrlock;
        break;
      }

      // optional int32 extattrlock = 14;
      case 14: {
        if (tag == 112) {
         parse_extattrlock:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &extattrlock_)));
          set_has_extattrlock();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(122)) goto parse_tempbase;
        break;
      }

      // repeated .MsgPB.AttrEffect tempbase = 15;
      case 15: {
        if (tag == 122) {
         parse_tempbase:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_tempbase()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(122)) goto parse_tempbase;
        if (input->ExpectTag(130)) goto parse_tempextattr;
        break;
      }

      // repeated .MsgPB.AttrEffect tempextattr = 16;
      case 16: {
        if (tag == 130) {
         parse_tempextattr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_tempextattr()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(130)) goto parse_tempextattr;
        if (input->ExpectTag(136)) goto parse_magicid;
        break;
      }

      // repeated int32 magicid = 17;
      case 17: {
        if (tag == 136) {
         parse_magicid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 2, 136, input, this->mutable_magicid())));
        } else if (tag == 138) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_magicid())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(136)) goto parse_magicid;
        if (input->ExpectTag(144)) goto parse_magictempid;
        break;
      }

      // repeated int32 magictempid = 18;
      case 18: {
        if (tag == 144) {
         parse_magictempid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 2, 144, input, this->mutable_magictempid())));
        } else if (tag == 146) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_magictempid())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(144)) goto parse_magictempid;
        if (input->ExpectTag(152)) goto parse_extskill;
        break;
      }

      // optional int32 extskill = 19;
      case 19: {
        if (tag == 152) {
         parse_extskill:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &extskill_)));
          set_has_extskill();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(162)) goto parse_tower_build;
        break;
      }

      // optional .MsgPB.PBTowerBuildData tower_build = 20;
      case 20: {
        if (tag == 162) {
         parse_tower_build:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_tower_build()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(168)) goto parse_durablemax;
        break;
      }

      // optional int32 durablemax = 21;
      case 21: {
        if (tag == 168) {
         parse_durablemax:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &durablemax_)));
          set_has_durablemax();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(176)) goto parse_auction_cooldown;
        break;
      }

      // optional int64 auction_cooldown = 22;
      case 22: {
        if (tag == 176) {
         parse_auction_cooldown:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &auction_cooldown_)));
          set_has_auction_cooldown();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(184)) goto parse_effects_color;
        break;
      }

      // repeated int32 effects_color = 23;
      case 23: {
        if (tag == 184) {
         parse_effects_color:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 2, 184, input, this->mutable_effects_color())));
        } else if (tag == 186) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_effects_color())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(184)) goto parse_effects_color;
        if (input->ExpectTag(192)) goto parse_tempext_color;
        break;
      }

      // repeated int32 tempext_color = 24;
      case 24: {
        if (tag == 192) {
         parse_tempext_color:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 2, 192, input, this->mutable_tempext_color())));
        } else if (tag == 194) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_tempext_color())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(192)) goto parse_tempext_color;
        if (input->ExpectTag(200)) goto parse_strengthen;
        break;
      }

      // optional int32 strengthen = 25;
      case 25: {
        if (tag == 200) {
         parse_strengthen:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &strengthen_)));
          set_has_strengthen();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(208)) goto parse_hide;
        break;
      }

      // optional bool hide = 26;
      case 26: {
        if (tag == 208) {
         parse_hide:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &hide_)));
          set_has_hide();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(216)) goto parse_pet_equip_skill;
        break;
      }

      // repeated int32 pet_equip_skill = 27;
      case 27: {
        if (tag == 216) {
         parse_pet_equip_skill:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 2, 216, input, this->mutable_pet_equip_skill())));
        } else if (tag == 218) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_pet_equip_skill())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(216)) goto parse_pet_equip_skill;
        if (input->ExpectTag(224)) goto parse_identified;
        break;
      }

      // optional bool identified = 28 [default = false];
      case 28: {
        if (tag == 224) {
         parse_identified:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &identified_)));
          set_has_identified();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(234)) goto parse_item_counters;
        break;
      }

      // optional .MsgPB.MsgItemCounters item_counters = 29;
      case 29: {
        if (tag == 234) {
         parse_item_counters:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_item_counters()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(240)) goto parse_integrity;
        break;
      }

      // optional int32 integrity = 30;
      case 30: {
        if (tag == 240) {
         parse_integrity:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &integrity_)));
          set_has_integrity();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(248)) goto parse_quality;
        break;
      }

      // optional int32 quality = 31;
      case 31: {
        if (tag == 248) {
         parse_quality:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &quality_)));
          set_has_quality();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.MsgItemDataGS2C.ItemData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.MsgItemDataGS2C.ItemData)
  return false;
#undef DO_
}

void MsgItemDataGS2C_ItemData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.MsgItemDataGS2C.ItemData)
  // optional int64 uuid = 1;
  if (has_uuid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->uuid(), output);
  }

  // optional int32 dataid = 2;
  if (has_dataid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->dataid(), output);
  }

  // optional string name = 3;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->name(), output);
  }

  // optional int32 pos = 4;
  if (has_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->pos(), output);
  }

  // optional int32 count = 5;
  if (has_count()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->count(), output);
  }

  // optional .MsgPB.PACKET_TYPE packettype = 6;
  if (has_packettype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      6, this->packettype(), output);
  }

  // optional int32 cooldown = 7;
  if (has_cooldown()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->cooldown(), output);
  }

  // optional string expired_time = 8;
  if (has_expired_time()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->expired_time().data(), this->expired_time().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "expired_time");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->expired_time(), output);
  }

  // optional int32 countdown_time = 9;
  if (has_countdown_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->countdown_time(), output);
  }

  // optional int32 durable = 10;
  if (has_durable()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->durable(), output);
  }

  // repeated .MsgPB.AttrEffect effects = 11;
  for (int i = 0; i < this->effects_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, this->effects(i), output);
  }

  // repeated .MsgPB.AttrEffect baseval = 12;
  for (int i = 0; i < this->baseval_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, this->baseval(i), output);
  }

  // repeated .MsgPB.AttrEffect staticval = 13;
  for (int i = 0; i < this->staticval_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      13, this->staticval(i), output);
  }

  // optional int32 extattrlock = 14;
  if (has_extattrlock()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(14, this->extattrlock(), output);
  }

  // repeated .MsgPB.AttrEffect tempbase = 15;
  for (int i = 0; i < this->tempbase_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      15, this->tempbase(i), output);
  }

  // repeated .MsgPB.AttrEffect tempextattr = 16;
  for (int i = 0; i < this->tempextattr_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      16, this->tempextattr(i), output);
  }

  // repeated int32 magicid = 17;
  for (int i = 0; i < this->magicid_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      17, this->magicid(i), output);
  }

  // repeated int32 magictempid = 18;
  for (int i = 0; i < this->magictempid_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      18, this->magictempid(i), output);
  }

  // optional int32 extskill = 19;
  if (has_extskill()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(19, this->extskill(), output);
  }

  // optional .MsgPB.PBTowerBuildData tower_build = 20;
  if (has_tower_build()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      20, this->tower_build(), output);
  }

  // optional int32 durablemax = 21;
  if (has_durablemax()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(21, this->durablemax(), output);
  }

  // optional int64 auction_cooldown = 22;
  if (has_auction_cooldown()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(22, this->auction_cooldown(), output);
  }

  // repeated int32 effects_color = 23;
  for (int i = 0; i < this->effects_color_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      23, this->effects_color(i), output);
  }

  // repeated int32 tempext_color = 24;
  for (int i = 0; i < this->tempext_color_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      24, this->tempext_color(i), output);
  }

  // optional int32 strengthen = 25;
  if (has_strengthen()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(25, this->strengthen(), output);
  }

  // optional bool hide = 26;
  if (has_hide()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(26, this->hide(), output);
  }

  // repeated int32 pet_equip_skill = 27;
  for (int i = 0; i < this->pet_equip_skill_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      27, this->pet_equip_skill(i), output);
  }

  // optional bool identified = 28 [default = false];
  if (has_identified()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(28, this->identified(), output);
  }

  // optional .MsgPB.MsgItemCounters item_counters = 29;
  if (has_item_counters()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      29, this->item_counters(), output);
  }

  // optional int32 integrity = 30;
  if (has_integrity()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(30, this->integrity(), output);
  }

  // optional int32 quality = 31;
  if (has_quality()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(31, this->quality(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.MsgItemDataGS2C.ItemData)
}

::google::protobuf::uint8* MsgItemDataGS2C_ItemData::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.MsgItemDataGS2C.ItemData)
  // optional int64 uuid = 1;
  if (has_uuid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->uuid(), target);
  }

  // optional int32 dataid = 2;
  if (has_dataid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->dataid(), target);
  }

  // optional string name = 3;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->name(), target);
  }

  // optional int32 pos = 4;
  if (has_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->pos(), target);
  }

  // optional int32 count = 5;
  if (has_count()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->count(), target);
  }

  // optional .MsgPB.PACKET_TYPE packettype = 6;
  if (has_packettype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      6, this->packettype(), target);
  }

  // optional int32 cooldown = 7;
  if (has_cooldown()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->cooldown(), target);
  }

  // optional string expired_time = 8;
  if (has_expired_time()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->expired_time().data(), this->expired_time().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "expired_time");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->expired_time(), target);
  }

  // optional int32 countdown_time = 9;
  if (has_countdown_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->countdown_time(), target);
  }

  // optional int32 durable = 10;
  if (has_durable()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->durable(), target);
  }

  // repeated .MsgPB.AttrEffect effects = 11;
  for (int i = 0; i < this->effects_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        11, this->effects(i), target);
  }

  // repeated .MsgPB.AttrEffect baseval = 12;
  for (int i = 0; i < this->baseval_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        12, this->baseval(i), target);
  }

  // repeated .MsgPB.AttrEffect staticval = 13;
  for (int i = 0; i < this->staticval_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        13, this->staticval(i), target);
  }

  // optional int32 extattrlock = 14;
  if (has_extattrlock()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(14, this->extattrlock(), target);
  }

  // repeated .MsgPB.AttrEffect tempbase = 15;
  for (int i = 0; i < this->tempbase_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        15, this->tempbase(i), target);
  }

  // repeated .MsgPB.AttrEffect tempextattr = 16;
  for (int i = 0; i < this->tempextattr_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        16, this->tempextattr(i), target);
  }

  // repeated int32 magicid = 17;
  for (int i = 0; i < this->magicid_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(17, this->magicid(i), target);
  }

  // repeated int32 magictempid = 18;
  for (int i = 0; i < this->magictempid_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(18, this->magictempid(i), target);
  }

  // optional int32 extskill = 19;
  if (has_extskill()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(19, this->extskill(), target);
  }

  // optional .MsgPB.PBTowerBuildData tower_build = 20;
  if (has_tower_build()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        20, this->tower_build(), target);
  }

  // optional int32 durablemax = 21;
  if (has_durablemax()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(21, this->durablemax(), target);
  }

  // optional int64 auction_cooldown = 22;
  if (has_auction_cooldown()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(22, this->auction_cooldown(), target);
  }

  // repeated int32 effects_color = 23;
  for (int i = 0; i < this->effects_color_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(23, this->effects_color(i), target);
  }

  // repeated int32 tempext_color = 24;
  for (int i = 0; i < this->tempext_color_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(24, this->tempext_color(i), target);
  }

  // optional int32 strengthen = 25;
  if (has_strengthen()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(25, this->strengthen(), target);
  }

  // optional bool hide = 26;
  if (has_hide()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(26, this->hide(), target);
  }

  // repeated int32 pet_equip_skill = 27;
  for (int i = 0; i < this->pet_equip_skill_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(27, this->pet_equip_skill(i), target);
  }

  // optional bool identified = 28 [default = false];
  if (has_identified()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(28, this->identified(), target);
  }

  // optional .MsgPB.MsgItemCounters item_counters = 29;
  if (has_item_counters()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        29, this->item_counters(), target);
  }

  // optional int32 integrity = 30;
  if (has_integrity()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(30, this->integrity(), target);
  }

  // optional int32 quality = 31;
  if (has_quality()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(31, this->quality(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.MsgItemDataGS2C.ItemData)
  return target;
}

int MsgItemDataGS2C_ItemData::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 uuid = 1;
    if (has_uuid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->uuid());
    }

    // optional int32 dataid = 2;
    if (has_dataid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->dataid());
    }

    // optional string name = 3;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional int32 pos = 4;
    if (has_pos()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pos());
    }

    // optional int32 count = 5;
    if (has_count()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->count());
    }

    // optional .MsgPB.PACKET_TYPE packettype = 6;
    if (has_packettype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->packettype());
    }

    // optional int32 cooldown = 7;
    if (has_cooldown()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->cooldown());
    }

    // optional string expired_time = 8;
    if (has_expired_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->expired_time());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional int32 countdown_time = 9;
    if (has_countdown_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->countdown_time());
    }

    // optional int32 durable = 10;
    if (has_durable()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->durable());
    }

    // optional int32 extattrlock = 14;
    if (has_extattrlock()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->extattrlock());
    }

  }
  if (_has_bits_[18 / 32] & (0xffu << (18 % 32))) {
    // optional int32 extskill = 19;
    if (has_extskill()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->extskill());
    }

    // optional .MsgPB.PBTowerBuildData tower_build = 20;
    if (has_tower_build()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->tower_build());
    }

    // optional int32 durablemax = 21;
    if (has_durablemax()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->durablemax());
    }

    // optional int64 auction_cooldown = 22;
    if (has_auction_cooldown()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->auction_cooldown());
    }

  }
  if (_has_bits_[24 / 32] & (0xffu << (24 % 32))) {
    // optional int32 strengthen = 25;
    if (has_strengthen()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->strengthen());
    }

    // optional bool hide = 26;
    if (has_hide()) {
      total_size += 2 + 1;
    }

    // optional bool identified = 28 [default = false];
    if (has_identified()) {
      total_size += 2 + 1;
    }

    // optional .MsgPB.MsgItemCounters item_counters = 29;
    if (has_item_counters()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->item_counters());
    }

    // optional int32 integrity = 30;
    if (has_integrity()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->integrity());
    }

    // optional int32 quality = 31;
    if (has_quality()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->quality());
    }

  }
  // repeated .MsgPB.AttrEffect effects = 11;
  total_size += 1 * this->effects_size();
  for (int i = 0; i < this->effects_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->effects(i));
  }

  // repeated .MsgPB.AttrEffect baseval = 12;
  total_size += 1 * this->baseval_size();
  for (int i = 0; i < this->baseval_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->baseval(i));
  }

  // repeated .MsgPB.AttrEffect staticval = 13;
  total_size += 1 * this->staticval_size();
  for (int i = 0; i < this->staticval_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->staticval(i));
  }

  // repeated .MsgPB.AttrEffect tempbase = 15;
  total_size += 1 * this->tempbase_size();
  for (int i = 0; i < this->tempbase_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->tempbase(i));
  }

  // repeated .MsgPB.AttrEffect tempextattr = 16;
  total_size += 2 * this->tempextattr_size();
  for (int i = 0; i < this->tempextattr_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->tempextattr(i));
  }

  // repeated int32 magicid = 17;
  {
    int data_size = 0;
    for (int i = 0; i < this->magicid_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->magicid(i));
    }
    total_size += 2 * this->magicid_size() + data_size;
  }

  // repeated int32 magictempid = 18;
  {
    int data_size = 0;
    for (int i = 0; i < this->magictempid_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->magictempid(i));
    }
    total_size += 2 * this->magictempid_size() + data_size;
  }

  // repeated int32 effects_color = 23;
  {
    int data_size = 0;
    for (int i = 0; i < this->effects_color_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->effects_color(i));
    }
    total_size += 2 * this->effects_color_size() + data_size;
  }

  // repeated int32 tempext_color = 24;
  {
    int data_size = 0;
    for (int i = 0; i < this->tempext_color_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->tempext_color(i));
    }
    total_size += 2 * this->tempext_color_size() + data_size;
  }

  // repeated int32 pet_equip_skill = 27;
  {
    int data_size = 0;
    for (int i = 0; i < this->pet_equip_skill_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->pet_equip_skill(i));
    }
    total_size += 2 * this->pet_equip_skill_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgItemDataGS2C_ItemData::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgItemDataGS2C_ItemData* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgItemDataGS2C_ItemData*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgItemDataGS2C_ItemData::MergeFrom(const MsgItemDataGS2C_ItemData& from) {
  GOOGLE_CHECK_NE(&from, this);
  effects_.MergeFrom(from.effects_);
  baseval_.MergeFrom(from.baseval_);
  staticval_.MergeFrom(from.staticval_);
  tempbase_.MergeFrom(from.tempbase_);
  tempextattr_.MergeFrom(from.tempextattr_);
  magicid_.MergeFrom(from.magicid_);
  magictempid_.MergeFrom(from.magictempid_);
  effects_color_.MergeFrom(from.effects_color_);
  tempext_color_.MergeFrom(from.tempext_color_);
  pet_equip_skill_.MergeFrom(from.pet_equip_skill_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_uuid()) {
      set_uuid(from.uuid());
    }
    if (from.has_dataid()) {
      set_dataid(from.dataid());
    }
    if (from.has_name()) {
      set_name(from.name());
    }
    if (from.has_pos()) {
      set_pos(from.pos());
    }
    if (from.has_count()) {
      set_count(from.count());
    }
    if (from.has_packettype()) {
      set_packettype(from.packettype());
    }
    if (from.has_cooldown()) {
      set_cooldown(from.cooldown());
    }
    if (from.has_expired_time()) {
      set_expired_time(from.expired_time());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_countdown_time()) {
      set_countdown_time(from.countdown_time());
    }
    if (from.has_durable()) {
      set_durable(from.durable());
    }
    if (from.has_extattrlock()) {
      set_extattrlock(from.extattrlock());
    }
  }
  if (from._has_bits_[18 / 32] & (0xffu << (18 % 32))) {
    if (from.has_extskill()) {
      set_extskill(from.extskill());
    }
    if (from.has_tower_build()) {
      mutable_tower_build()->::MsgPB::PBTowerBuildData::MergeFrom(from.tower_build());
    }
    if (from.has_durablemax()) {
      set_durablemax(from.durablemax());
    }
    if (from.has_auction_cooldown()) {
      set_auction_cooldown(from.auction_cooldown());
    }
  }
  if (from._has_bits_[24 / 32] & (0xffu << (24 % 32))) {
    if (from.has_strengthen()) {
      set_strengthen(from.strengthen());
    }
    if (from.has_hide()) {
      set_hide(from.hide());
    }
    if (from.has_identified()) {
      set_identified(from.identified());
    }
    if (from.has_item_counters()) {
      mutable_item_counters()->::MsgPB::MsgItemCounters::MergeFrom(from.item_counters());
    }
    if (from.has_integrity()) {
      set_integrity(from.integrity());
    }
    if (from.has_quality()) {
      set_quality(from.quality());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgItemDataGS2C_ItemData::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgItemDataGS2C_ItemData::CopyFrom(const MsgItemDataGS2C_ItemData& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgItemDataGS2C_ItemData::IsInitialized() const {

  return true;
}

void MsgItemDataGS2C_ItemData::Swap(MsgItemDataGS2C_ItemData* other) {
  if (other != this) {
    std::swap(uuid_, other->uuid_);
    std::swap(dataid_, other->dataid_);
    std::swap(name_, other->name_);
    std::swap(pos_, other->pos_);
    std::swap(count_, other->count_);
    std::swap(packettype_, other->packettype_);
    std::swap(cooldown_, other->cooldown_);
    std::swap(expired_time_, other->expired_time_);
    std::swap(countdown_time_, other->countdown_time_);
    std::swap(durable_, other->durable_);
    effects_.Swap(&other->effects_);
    baseval_.Swap(&other->baseval_);
    staticval_.Swap(&other->staticval_);
    std::swap(extattrlock_, other->extattrlock_);
    tempbase_.Swap(&other->tempbase_);
    tempextattr_.Swap(&other->tempextattr_);
    magicid_.Swap(&other->magicid_);
    magictempid_.Swap(&other->magictempid_);
    std::swap(extskill_, other->extskill_);
    std::swap(tower_build_, other->tower_build_);
    std::swap(durablemax_, other->durablemax_);
    std::swap(auction_cooldown_, other->auction_cooldown_);
    effects_color_.Swap(&other->effects_color_);
    tempext_color_.Swap(&other->tempext_color_);
    std::swap(strengthen_, other->strengthen_);
    std::swap(hide_, other->hide_);
    pet_equip_skill_.Swap(&other->pet_equip_skill_);
    std::swap(identified_, other->identified_);
    std::swap(item_counters_, other->item_counters_);
    std::swap(integrity_, other->integrity_);
    std::swap(quality_, other->quality_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgItemDataGS2C_ItemData::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgItemDataGS2C_ItemData_descriptor_;
  metadata.reflection = MsgItemDataGS2C_ItemData_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int MsgItemDataGS2C::kMsgTypeFieldNumber;
const int MsgItemDataGS2C::kItemsFieldNumber;
const int MsgItemDataGS2C::kIsLocalServerFieldNumber;
#endif  // !_MSC_VER

MsgItemDataGS2C::MsgItemDataGS2C()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.MsgItemDataGS2C)
}

void MsgItemDataGS2C::InitAsDefaultInstance() {
}

MsgItemDataGS2C::MsgItemDataGS2C(const MsgItemDataGS2C& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.MsgItemDataGS2C)
}

void MsgItemDataGS2C::SharedCtor() {
  _cached_size_ = 0;
  msgtype_ = 1201;
  islocalserver_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgItemDataGS2C::~MsgItemDataGS2C() {
  // @@protoc_insertion_point(destructor:MsgPB.MsgItemDataGS2C)
  SharedDtor();
}

void MsgItemDataGS2C::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgItemDataGS2C::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgItemDataGS2C::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgItemDataGS2C_descriptor_;
}

const MsgItemDataGS2C& MsgItemDataGS2C::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgItem_2eproto();
  return *default_instance_;
}

MsgItemDataGS2C* MsgItemDataGS2C::default_instance_ = NULL;

MsgItemDataGS2C* MsgItemDataGS2C::New() const {
  return new MsgItemDataGS2C;
}

void MsgItemDataGS2C::Clear() {
  if (_has_bits_[0 / 32] & 5) {
    msgtype_ = 1201;
    islocalserver_ = false;
  }
  items_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgItemDataGS2C::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.MsgItemDataGS2C)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_ITEM_DATA_GS2C];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::EMsgType_IsValid(value)) {
            set_msgtype(static_cast< ::MsgPB::EMsgType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_items;
        break;
      }

      // repeated .MsgPB.MsgItemDataGS2C.ItemData items = 2;
      case 2: {
        if (tag == 18) {
         parse_items:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_items()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_items;
        if (input->ExpectTag(24)) goto parse_isLocalServer;
        break;
      }

      // optional bool isLocalServer = 3 [default = false];
      case 3: {
        if (tag == 24) {
         parse_isLocalServer:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &islocalserver_)));
          set_has_islocalserver();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.MsgItemDataGS2C)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.MsgItemDataGS2C)
  return false;
#undef DO_
}

void MsgItemDataGS2C::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.MsgItemDataGS2C)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_ITEM_DATA_GS2C];
  if (has_msgtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->msgtype(), output);
  }

  // repeated .MsgPB.MsgItemDataGS2C.ItemData items = 2;
  for (int i = 0; i < this->items_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->items(i), output);
  }

  // optional bool isLocalServer = 3 [default = false];
  if (has_islocalserver()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->islocalserver(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.MsgItemDataGS2C)
}

::google::protobuf::uint8* MsgItemDataGS2C::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.MsgItemDataGS2C)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_ITEM_DATA_GS2C];
  if (has_msgtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->msgtype(), target);
  }

  // repeated .MsgPB.MsgItemDataGS2C.ItemData items = 2;
  for (int i = 0; i < this->items_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->items(i), target);
  }

  // optional bool isLocalServer = 3 [default = false];
  if (has_islocalserver()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->islocalserver(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.MsgItemDataGS2C)
  return target;
}

int MsgItemDataGS2C::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_ITEM_DATA_GS2C];
    if (has_msgtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgtype());
    }

    // optional bool isLocalServer = 3 [default = false];
    if (has_islocalserver()) {
      total_size += 1 + 1;
    }

  }
  // repeated .MsgPB.MsgItemDataGS2C.ItemData items = 2;
  total_size += 1 * this->items_size();
  for (int i = 0; i < this->items_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->items(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgItemDataGS2C::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgItemDataGS2C* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgItemDataGS2C*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgItemDataGS2C::MergeFrom(const MsgItemDataGS2C& from) {
  GOOGLE_CHECK_NE(&from, this);
  items_.MergeFrom(from.items_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msgtype()) {
      set_msgtype(from.msgtype());
    }
    if (from.has_islocalserver()) {
      set_islocalserver(from.islocalserver());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgItemDataGS2C::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgItemDataGS2C::CopyFrom(const MsgItemDataGS2C& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgItemDataGS2C::IsInitialized() const {

  return true;
}

void MsgItemDataGS2C::Swap(MsgItemDataGS2C* other) {
  if (other != this) {
    std::swap(msgtype_, other->msgtype_);
    items_.Swap(&other->items_);
    std::swap(islocalserver_, other->islocalserver_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgItemDataGS2C::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgItemDataGS2C_descriptor_;
  metadata.reflection = MsgItemDataGS2C_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgItemRemoveGS2C::kMsgTypeFieldNumber;
const int MsgItemRemoveGS2C::kUuidFieldNumber;
const int MsgItemRemoveGS2C::kIsLocalServerFieldNumber;
#endif  // !_MSC_VER

MsgItemRemoveGS2C::MsgItemRemoveGS2C()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.MsgItemRemoveGS2C)
}

void MsgItemRemoveGS2C::InitAsDefaultInstance() {
}

MsgItemRemoveGS2C::MsgItemRemoveGS2C(const MsgItemRemoveGS2C& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.MsgItemRemoveGS2C)
}

void MsgItemRemoveGS2C::SharedCtor() {
  _cached_size_ = 0;
  msgtype_ = 1202;
  uuid_ = GOOGLE_LONGLONG(0);
  islocalserver_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgItemRemoveGS2C::~MsgItemRemoveGS2C() {
  // @@protoc_insertion_point(destructor:MsgPB.MsgItemRemoveGS2C)
  SharedDtor();
}

void MsgItemRemoveGS2C::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgItemRemoveGS2C::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgItemRemoveGS2C::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgItemRemoveGS2C_descriptor_;
}

const MsgItemRemoveGS2C& MsgItemRemoveGS2C::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgItem_2eproto();
  return *default_instance_;
}

MsgItemRemoveGS2C* MsgItemRemoveGS2C::default_instance_ = NULL;

MsgItemRemoveGS2C* MsgItemRemoveGS2C::New() const {
  return new MsgItemRemoveGS2C;
}

void MsgItemRemoveGS2C::Clear() {
  if (_has_bits_[0 / 32] & 7) {
    msgtype_ = 1202;
    uuid_ = GOOGLE_LONGLONG(0);
    islocalserver_ = false;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgItemRemoveGS2C::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.MsgItemRemoveGS2C)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_ITEM_REMOVE_GS2C];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::EMsgType_IsValid(value)) {
            set_msgtype(static_cast< ::MsgPB::EMsgType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_uuid;
        break;
      }

      // optional int64 uuid = 2;
      case 2: {
        if (tag == 16) {
         parse_uuid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &uuid_)));
          set_has_uuid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_isLocalServer;
        break;
      }

      // optional bool isLocalServer = 3 [default = false];
      case 3: {
        if (tag == 24) {
         parse_isLocalServer:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &islocalserver_)));
          set_has_islocalserver();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.MsgItemRemoveGS2C)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.MsgItemRemoveGS2C)
  return false;
#undef DO_
}

void MsgItemRemoveGS2C::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.MsgItemRemoveGS2C)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_ITEM_REMOVE_GS2C];
  if (has_msgtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->msgtype(), output);
  }

  // optional int64 uuid = 2;
  if (has_uuid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->uuid(), output);
  }

  // optional bool isLocalServer = 3 [default = false];
  if (has_islocalserver()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->islocalserver(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.MsgItemRemoveGS2C)
}

::google::protobuf::uint8* MsgItemRemoveGS2C::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.MsgItemRemoveGS2C)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_ITEM_REMOVE_GS2C];
  if (has_msgtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->msgtype(), target);
  }

  // optional int64 uuid = 2;
  if (has_uuid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->uuid(), target);
  }

  // optional bool isLocalServer = 3 [default = false];
  if (has_islocalserver()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->islocalserver(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.MsgItemRemoveGS2C)
  return target;
}

int MsgItemRemoveGS2C::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_ITEM_REMOVE_GS2C];
    if (has_msgtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgtype());
    }

    // optional int64 uuid = 2;
    if (has_uuid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->uuid());
    }

    // optional bool isLocalServer = 3 [default = false];
    if (has_islocalserver()) {
      total_size += 1 + 1;
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgItemRemoveGS2C::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgItemRemoveGS2C* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgItemRemoveGS2C*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgItemRemoveGS2C::MergeFrom(const MsgItemRemoveGS2C& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msgtype()) {
      set_msgtype(from.msgtype());
    }
    if (from.has_uuid()) {
      set_uuid(from.uuid());
    }
    if (from.has_islocalserver()) {
      set_islocalserver(from.islocalserver());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgItemRemoveGS2C::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgItemRemoveGS2C::CopyFrom(const MsgItemRemoveGS2C& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgItemRemoveGS2C::IsInitialized() const {

  return true;
}

void MsgItemRemoveGS2C::Swap(MsgItemRemoveGS2C* other) {
  if (other != this) {
    std::swap(msgtype_, other->msgtype_);
    std::swap(uuid_, other->uuid_);
    std::swap(islocalserver_, other->islocalserver_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgItemRemoveGS2C::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgItemRemoveGS2C_descriptor_;
  metadata.reflection = MsgItemRemoveGS2C_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgItemExchangeC2GS::kSerialIDFieldNumber;
const int MsgItemExchangeC2GS::kMsgTypeFieldNumber;
const int MsgItemExchangeC2GS::kUuidFieldNumber;
const int MsgItemExchangeC2GS::kBagToFieldNumber;
const int MsgItemExchangeC2GS::kPosToFieldNumber;
const int MsgItemExchangeC2GS::kIggidFieldNumber;
#endif  // !_MSC_VER

MsgItemExchangeC2GS::MsgItemExchangeC2GS()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.MsgItemExchangeC2GS)
}

void MsgItemExchangeC2GS::InitAsDefaultInstance() {
}

MsgItemExchangeC2GS::MsgItemExchangeC2GS(const MsgItemExchangeC2GS& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.MsgItemExchangeC2GS)
}

void MsgItemExchangeC2GS::SharedCtor() {
  _cached_size_ = 0;
  serialid_ = 0;
  msgtype_ = 1203;
  uuid_ = GOOGLE_LONGLONG(0);
  bagto_ = 0;
  posto_ = 0;
  iggid_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgItemExchangeC2GS::~MsgItemExchangeC2GS() {
  // @@protoc_insertion_point(destructor:MsgPB.MsgItemExchangeC2GS)
  SharedDtor();
}

void MsgItemExchangeC2GS::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgItemExchangeC2GS::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgItemExchangeC2GS::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgItemExchangeC2GS_descriptor_;
}

const MsgItemExchangeC2GS& MsgItemExchangeC2GS::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgItem_2eproto();
  return *default_instance_;
}

MsgItemExchangeC2GS* MsgItemExchangeC2GS::default_instance_ = NULL;

MsgItemExchangeC2GS* MsgItemExchangeC2GS::New() const {
  return new MsgItemExchangeC2GS;
}

void MsgItemExchangeC2GS::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<MsgItemExchangeC2GS*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 63) {
    ZR_(uuid_, iggid_);
    serialid_ = 0;
    msgtype_ = 1203;
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgItemExchangeC2GS::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.MsgItemExchangeC2GS)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 SerialID = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &serialid_)));
          set_has_serialid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_msgType;
        break;
      }

      // optional .MsgPB.EMsgType msgType = 2 [default = _MSG_ITEM_EXCHANGE_C2GS];
      case 2: {
        if (tag == 16) {
         parse_msgType:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::EMsgType_IsValid(value)) {
            set_msgtype(static_cast< ::MsgPB::EMsgType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_uuid;
        break;
      }

      // optional int64 uuid = 3;
      case 3: {
        if (tag == 24) {
         parse_uuid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &uuid_)));
          set_has_uuid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_BagTo;
        break;
      }

      // optional .MsgPB.PACKET_TYPE BagTo = 4;
      case 4: {
        if (tag == 32) {
         parse_BagTo:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::PACKET_TYPE_IsValid(value)) {
            set_bagto(static_cast< ::MsgPB::PACKET_TYPE >(value));
          } else {
            mutable_unknown_fields()->AddVarint(4, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_PosTo;
        break;
      }

      // optional int32 PosTo = 5;
      case 5: {
        if (tag == 40) {
         parse_PosTo:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &posto_)));
          set_has_posto();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_iggid;
        break;
      }

      // optional int64 iggid = 6;
      case 6: {
        if (tag == 48) {
         parse_iggid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &iggid_)));
          set_has_iggid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.MsgItemExchangeC2GS)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.MsgItemExchangeC2GS)
  return false;
#undef DO_
}

void MsgItemExchangeC2GS::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.MsgItemExchangeC2GS)
  // optional int32 SerialID = 1;
  if (has_serialid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->serialid(), output);
  }

  // optional .MsgPB.EMsgType msgType = 2 [default = _MSG_ITEM_EXCHANGE_C2GS];
  if (has_msgtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->msgtype(), output);
  }

  // optional int64 uuid = 3;
  if (has_uuid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->uuid(), output);
  }

  // optional .MsgPB.PACKET_TYPE BagTo = 4;
  if (has_bagto()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->bagto(), output);
  }

  // optional int32 PosTo = 5;
  if (has_posto()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->posto(), output);
  }

  // optional int64 iggid = 6;
  if (has_iggid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(6, this->iggid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.MsgItemExchangeC2GS)
}

::google::protobuf::uint8* MsgItemExchangeC2GS::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.MsgItemExchangeC2GS)
  // optional int32 SerialID = 1;
  if (has_serialid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->serialid(), target);
  }

  // optional .MsgPB.EMsgType msgType = 2 [default = _MSG_ITEM_EXCHANGE_C2GS];
  if (has_msgtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->msgtype(), target);
  }

  // optional int64 uuid = 3;
  if (has_uuid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->uuid(), target);
  }

  // optional .MsgPB.PACKET_TYPE BagTo = 4;
  if (has_bagto()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->bagto(), target);
  }

  // optional int32 PosTo = 5;
  if (has_posto()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->posto(), target);
  }

  // optional int64 iggid = 6;
  if (has_iggid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(6, this->iggid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.MsgItemExchangeC2GS)
  return target;
}

int MsgItemExchangeC2GS::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 SerialID = 1;
    if (has_serialid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->serialid());
    }

    // optional .MsgPB.EMsgType msgType = 2 [default = _MSG_ITEM_EXCHANGE_C2GS];
    if (has_msgtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgtype());
    }

    // optional int64 uuid = 3;
    if (has_uuid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->uuid());
    }

    // optional .MsgPB.PACKET_TYPE BagTo = 4;
    if (has_bagto()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->bagto());
    }

    // optional int32 PosTo = 5;
    if (has_posto()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->posto());
    }

    // optional int64 iggid = 6;
    if (has_iggid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->iggid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgItemExchangeC2GS::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgItemExchangeC2GS* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgItemExchangeC2GS*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgItemExchangeC2GS::MergeFrom(const MsgItemExchangeC2GS& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_serialid()) {
      set_serialid(from.serialid());
    }
    if (from.has_msgtype()) {
      set_msgtype(from.msgtype());
    }
    if (from.has_uuid()) {
      set_uuid(from.uuid());
    }
    if (from.has_bagto()) {
      set_bagto(from.bagto());
    }
    if (from.has_posto()) {
      set_posto(from.posto());
    }
    if (from.has_iggid()) {
      set_iggid(from.iggid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgItemExchangeC2GS::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgItemExchangeC2GS::CopyFrom(const MsgItemExchangeC2GS& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgItemExchangeC2GS::IsInitialized() const {

  return true;
}

void MsgItemExchangeC2GS::Swap(MsgItemExchangeC2GS* other) {
  if (other != this) {
    std::swap(serialid_, other->serialid_);
    std::swap(msgtype_, other->msgtype_);
    std::swap(uuid_, other->uuid_);
    std::swap(bagto_, other->bagto_);
    std::swap(posto_, other->posto_);
    std::swap(iggid_, other->iggid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgItemExchangeC2GS::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgItemExchangeC2GS_descriptor_;
  metadata.reflection = MsgItemExchangeC2GS_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgItemExchangeResultGS2C::kSerialIDFieldNumber;
const int MsgItemExchangeResultGS2C::kMsgTypeFieldNumber;
const int MsgItemExchangeResultGS2C::kResultFieldNumber;
#endif  // !_MSC_VER

MsgItemExchangeResultGS2C::MsgItemExchangeResultGS2C()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.MsgItemExchangeResultGS2C)
}

void MsgItemExchangeResultGS2C::InitAsDefaultInstance() {
}

MsgItemExchangeResultGS2C::MsgItemExchangeResultGS2C(const MsgItemExchangeResultGS2C& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.MsgItemExchangeResultGS2C)
}

void MsgItemExchangeResultGS2C::SharedCtor() {
  _cached_size_ = 0;
  serialid_ = 0;
  msgtype_ = 1204;
  result_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgItemExchangeResultGS2C::~MsgItemExchangeResultGS2C() {
  // @@protoc_insertion_point(destructor:MsgPB.MsgItemExchangeResultGS2C)
  SharedDtor();
}

void MsgItemExchangeResultGS2C::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgItemExchangeResultGS2C::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgItemExchangeResultGS2C::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgItemExchangeResultGS2C_descriptor_;
}

const MsgItemExchangeResultGS2C& MsgItemExchangeResultGS2C::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgItem_2eproto();
  return *default_instance_;
}

MsgItemExchangeResultGS2C* MsgItemExchangeResultGS2C::default_instance_ = NULL;

MsgItemExchangeResultGS2C* MsgItemExchangeResultGS2C::New() const {
  return new MsgItemExchangeResultGS2C;
}

void MsgItemExchangeResultGS2C::Clear() {
  if (_has_bits_[0 / 32] & 7) {
    serialid_ = 0;
    msgtype_ = 1204;
    result_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgItemExchangeResultGS2C::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.MsgItemExchangeResultGS2C)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 SerialID = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &serialid_)));
          set_has_serialid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_msgType;
        break;
      }

      // optional .MsgPB.EMsgType msgType = 2 [default = _MSG_ITEM_EXCHANGE_RESULT_GS2C];
      case 2: {
        if (tag == 16) {
         parse_msgType:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::EMsgType_IsValid(value)) {
            set_msgtype(static_cast< ::MsgPB::EMsgType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_Result;
        break;
      }

      // optional .MsgPB.ITEM_EXCHANGE_RESULT Result = 3;
      case 3: {
        if (tag == 24) {
         parse_Result:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::ITEM_EXCHANGE_RESULT_IsValid(value)) {
            set_result(static_cast< ::MsgPB::ITEM_EXCHANGE_RESULT >(value));
          } else {
            mutable_unknown_fields()->AddVarint(3, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.MsgItemExchangeResultGS2C)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.MsgItemExchangeResultGS2C)
  return false;
#undef DO_
}

void MsgItemExchangeResultGS2C::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.MsgItemExchangeResultGS2C)
  // optional int32 SerialID = 1;
  if (has_serialid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->serialid(), output);
  }

  // optional .MsgPB.EMsgType msgType = 2 [default = _MSG_ITEM_EXCHANGE_RESULT_GS2C];
  if (has_msgtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->msgtype(), output);
  }

  // optional .MsgPB.ITEM_EXCHANGE_RESULT Result = 3;
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->result(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.MsgItemExchangeResultGS2C)
}

::google::protobuf::uint8* MsgItemExchangeResultGS2C::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.MsgItemExchangeResultGS2C)
  // optional int32 SerialID = 1;
  if (has_serialid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->serialid(), target);
  }

  // optional .MsgPB.EMsgType msgType = 2 [default = _MSG_ITEM_EXCHANGE_RESULT_GS2C];
  if (has_msgtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->msgtype(), target);
  }

  // optional .MsgPB.ITEM_EXCHANGE_RESULT Result = 3;
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->result(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.MsgItemExchangeResultGS2C)
  return target;
}

int MsgItemExchangeResultGS2C::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 SerialID = 1;
    if (has_serialid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->serialid());
    }

    // optional .MsgPB.EMsgType msgType = 2 [default = _MSG_ITEM_EXCHANGE_RESULT_GS2C];
    if (has_msgtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgtype());
    }

    // optional .MsgPB.ITEM_EXCHANGE_RESULT Result = 3;
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->result());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgItemExchangeResultGS2C::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgItemExchangeResultGS2C* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgItemExchangeResultGS2C*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgItemExchangeResultGS2C::MergeFrom(const MsgItemExchangeResultGS2C& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_serialid()) {
      set_serialid(from.serialid());
    }
    if (from.has_msgtype()) {
      set_msgtype(from.msgtype());
    }
    if (from.has_result()) {
      set_result(from.result());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgItemExchangeResultGS2C::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgItemExchangeResultGS2C::CopyFrom(const MsgItemExchangeResultGS2C& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgItemExchangeResultGS2C::IsInitialized() const {

  return true;
}

void MsgItemExchangeResultGS2C::Swap(MsgItemExchangeResultGS2C* other) {
  if (other != this) {
    std::swap(serialid_, other->serialid_);
    std::swap(msgtype_, other->msgtype_);
    std::swap(result_, other->result_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgItemExchangeResultGS2C::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgItemExchangeResultGS2C_descriptor_;
  metadata.reflection = MsgItemExchangeResultGS2C_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ItemPacketPosSyncData::kPosFieldNumber;
const int ItemPacketPosSyncData::kItemUuidFieldNumber;
#endif  // !_MSC_VER

ItemPacketPosSyncData::ItemPacketPosSyncData()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.ItemPacketPosSyncData)
}

void ItemPacketPosSyncData::InitAsDefaultInstance() {
}

ItemPacketPosSyncData::ItemPacketPosSyncData(const ItemPacketPosSyncData& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.ItemPacketPosSyncData)
}

void ItemPacketPosSyncData::SharedCtor() {
  _cached_size_ = 0;
  pos_ = 0;
  item_uuid_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ItemPacketPosSyncData::~ItemPacketPosSyncData() {
  // @@protoc_insertion_point(destructor:MsgPB.ItemPacketPosSyncData)
  SharedDtor();
}

void ItemPacketPosSyncData::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ItemPacketPosSyncData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ItemPacketPosSyncData::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ItemPacketPosSyncData_descriptor_;
}

const ItemPacketPosSyncData& ItemPacketPosSyncData::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgItem_2eproto();
  return *default_instance_;
}

ItemPacketPosSyncData* ItemPacketPosSyncData::default_instance_ = NULL;

ItemPacketPosSyncData* ItemPacketPosSyncData::New() const {
  return new ItemPacketPosSyncData;
}

void ItemPacketPosSyncData::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<ItemPacketPosSyncData*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(item_uuid_, pos_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ItemPacketPosSyncData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.ItemPacketPosSyncData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 pos = 2;
      case 2: {
        if (tag == 16) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pos_)));
          set_has_pos();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_item_uuid;
        break;
      }

      // optional int64 item_uuid = 3;
      case 3: {
        if (tag == 24) {
         parse_item_uuid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &item_uuid_)));
          set_has_item_uuid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.ItemPacketPosSyncData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.ItemPacketPosSyncData)
  return false;
#undef DO_
}

void ItemPacketPosSyncData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.ItemPacketPosSyncData)
  // optional int32 pos = 2;
  if (has_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->pos(), output);
  }

  // optional int64 item_uuid = 3;
  if (has_item_uuid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->item_uuid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.ItemPacketPosSyncData)
}

::google::protobuf::uint8* ItemPacketPosSyncData::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.ItemPacketPosSyncData)
  // optional int32 pos = 2;
  if (has_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->pos(), target);
  }

  // optional int64 item_uuid = 3;
  if (has_item_uuid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->item_uuid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.ItemPacketPosSyncData)
  return target;
}

int ItemPacketPosSyncData::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 pos = 2;
    if (has_pos()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pos());
    }

    // optional int64 item_uuid = 3;
    if (has_item_uuid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->item_uuid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ItemPacketPosSyncData::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ItemPacketPosSyncData* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ItemPacketPosSyncData*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ItemPacketPosSyncData::MergeFrom(const ItemPacketPosSyncData& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_pos()) {
      set_pos(from.pos());
    }
    if (from.has_item_uuid()) {
      set_item_uuid(from.item_uuid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ItemPacketPosSyncData::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ItemPacketPosSyncData::CopyFrom(const ItemPacketPosSyncData& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ItemPacketPosSyncData::IsInitialized() const {

  return true;
}

void ItemPacketPosSyncData::Swap(ItemPacketPosSyncData* other) {
  if (other != this) {
    std::swap(pos_, other->pos_);
    std::swap(item_uuid_, other->item_uuid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ItemPacketPosSyncData::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ItemPacketPosSyncData_descriptor_;
  metadata.reflection = ItemPacketPosSyncData_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgSyncItemPacketPosC2GS::kMsgTypeFieldNumber;
const int MsgSyncItemPacketPosC2GS::kSerialIDFieldNumber;
const int MsgSyncItemPacketPosC2GS::kIggidFieldNumber;
const int MsgSyncItemPacketPosC2GS::kPacketFieldNumber;
const int MsgSyncItemPacketPosC2GS::kDatasFieldNumber;
#endif  // !_MSC_VER

MsgSyncItemPacketPosC2GS::MsgSyncItemPacketPosC2GS()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.MsgSyncItemPacketPosC2GS)
}

void MsgSyncItemPacketPosC2GS::InitAsDefaultInstance() {
}

MsgSyncItemPacketPosC2GS::MsgSyncItemPacketPosC2GS(const MsgSyncItemPacketPosC2GS& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.MsgSyncItemPacketPosC2GS)
}

void MsgSyncItemPacketPosC2GS::SharedCtor() {
  _cached_size_ = 0;
  msgtype_ = 1294;
  serialid_ = 0;
  iggid_ = GOOGLE_LONGLONG(0);
  packet_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgSyncItemPacketPosC2GS::~MsgSyncItemPacketPosC2GS() {
  // @@protoc_insertion_point(destructor:MsgPB.MsgSyncItemPacketPosC2GS)
  SharedDtor();
}

void MsgSyncItemPacketPosC2GS::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgSyncItemPacketPosC2GS::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgSyncItemPacketPosC2GS::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgSyncItemPacketPosC2GS_descriptor_;
}

const MsgSyncItemPacketPosC2GS& MsgSyncItemPacketPosC2GS::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgItem_2eproto();
  return *default_instance_;
}

MsgSyncItemPacketPosC2GS* MsgSyncItemPacketPosC2GS::default_instance_ = NULL;

MsgSyncItemPacketPosC2GS* MsgSyncItemPacketPosC2GS::New() const {
  return new MsgSyncItemPacketPosC2GS;
}

void MsgSyncItemPacketPosC2GS::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<MsgSyncItemPacketPosC2GS*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 15) {
    ZR_(serialid_, iggid_);
    msgtype_ = 1294;
    packet_ = 0;
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  datas_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgSyncItemPacketPosC2GS::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.MsgSyncItemPacketPosC2GS)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_SYNC_ITEM_PACKET_POS_C2GS];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::EMsgType_IsValid(value)) {
            set_msgtype(static_cast< ::MsgPB::EMsgType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_serialID;
        break;
      }

      // optional int32 serialID = 2;
      case 2: {
        if (tag == 16) {
         parse_serialID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &serialid_)));
          set_has_serialid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_iggid;
        break;
      }

      // optional int64 iggid = 3;
      case 3: {
        if (tag == 24) {
         parse_iggid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &iggid_)));
          set_has_iggid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_packet;
        break;
      }

      // optional .MsgPB.PACKET_TYPE packet = 4;
      case 4: {
        if (tag == 32) {
         parse_packet:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::PACKET_TYPE_IsValid(value)) {
            set_packet(static_cast< ::MsgPB::PACKET_TYPE >(value));
          } else {
            mutable_unknown_fields()->AddVarint(4, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_datas;
        break;
      }

      // repeated .MsgPB.ItemPacketPosSyncData datas = 5;
      case 5: {
        if (tag == 42) {
         parse_datas:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_datas()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_datas;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.MsgSyncItemPacketPosC2GS)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.MsgSyncItemPacketPosC2GS)
  return false;
#undef DO_
}

void MsgSyncItemPacketPosC2GS::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.MsgSyncItemPacketPosC2GS)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_SYNC_ITEM_PACKET_POS_C2GS];
  if (has_msgtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->msgtype(), output);
  }

  // optional int32 serialID = 2;
  if (has_serialid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->serialid(), output);
  }

  // optional int64 iggid = 3;
  if (has_iggid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->iggid(), output);
  }

  // optional .MsgPB.PACKET_TYPE packet = 4;
  if (has_packet()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->packet(), output);
  }

  // repeated .MsgPB.ItemPacketPosSyncData datas = 5;
  for (int i = 0; i < this->datas_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->datas(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.MsgSyncItemPacketPosC2GS)
}

::google::protobuf::uint8* MsgSyncItemPacketPosC2GS::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.MsgSyncItemPacketPosC2GS)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_SYNC_ITEM_PACKET_POS_C2GS];
  if (has_msgtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->msgtype(), target);
  }

  // optional int32 serialID = 2;
  if (has_serialid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->serialid(), target);
  }

  // optional int64 iggid = 3;
  if (has_iggid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->iggid(), target);
  }

  // optional .MsgPB.PACKET_TYPE packet = 4;
  if (has_packet()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->packet(), target);
  }

  // repeated .MsgPB.ItemPacketPosSyncData datas = 5;
  for (int i = 0; i < this->datas_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->datas(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.MsgSyncItemPacketPosC2GS)
  return target;
}

int MsgSyncItemPacketPosC2GS::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_SYNC_ITEM_PACKET_POS_C2GS];
    if (has_msgtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgtype());
    }

    // optional int32 serialID = 2;
    if (has_serialid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->serialid());
    }

    // optional int64 iggid = 3;
    if (has_iggid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->iggid());
    }

    // optional .MsgPB.PACKET_TYPE packet = 4;
    if (has_packet()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->packet());
    }

  }
  // repeated .MsgPB.ItemPacketPosSyncData datas = 5;
  total_size += 1 * this->datas_size();
  for (int i = 0; i < this->datas_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->datas(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgSyncItemPacketPosC2GS::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgSyncItemPacketPosC2GS* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgSyncItemPacketPosC2GS*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgSyncItemPacketPosC2GS::MergeFrom(const MsgSyncItemPacketPosC2GS& from) {
  GOOGLE_CHECK_NE(&from, this);
  datas_.MergeFrom(from.datas_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msgtype()) {
      set_msgtype(from.msgtype());
    }
    if (from.has_serialid()) {
      set_serialid(from.serialid());
    }
    if (from.has_iggid()) {
      set_iggid(from.iggid());
    }
    if (from.has_packet()) {
      set_packet(from.packet());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgSyncItemPacketPosC2GS::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgSyncItemPacketPosC2GS::CopyFrom(const MsgSyncItemPacketPosC2GS& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgSyncItemPacketPosC2GS::IsInitialized() const {

  return true;
}

void MsgSyncItemPacketPosC2GS::Swap(MsgSyncItemPacketPosC2GS* other) {
  if (other != this) {
    std::swap(msgtype_, other->msgtype_);
    std::swap(serialid_, other->serialid_);
    std::swap(iggid_, other->iggid_);
    std::swap(packet_, other->packet_);
    datas_.Swap(&other->datas_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgSyncItemPacketPosC2GS::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgSyncItemPacketPosC2GS_descriptor_;
  metadata.reflection = MsgSyncItemPacketPosC2GS_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgItemPosData::kUuidFieldNumber;
const int MsgItemPosData::kPosFieldNumber;
#endif  // !_MSC_VER

MsgItemPosData::MsgItemPosData()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.MsgItemPosData)
}

void MsgItemPosData::InitAsDefaultInstance() {
}

MsgItemPosData::MsgItemPosData(const MsgItemPosData& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.MsgItemPosData)
}

void MsgItemPosData::SharedCtor() {
  _cached_size_ = 0;
  uuid_ = GOOGLE_LONGLONG(0);
  pos_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgItemPosData::~MsgItemPosData() {
  // @@protoc_insertion_point(destructor:MsgPB.MsgItemPosData)
  SharedDtor();
}

void MsgItemPosData::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgItemPosData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgItemPosData::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgItemPosData_descriptor_;
}

const MsgItemPosData& MsgItemPosData::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgItem_2eproto();
  return *default_instance_;
}

MsgItemPosData* MsgItemPosData::default_instance_ = NULL;

MsgItemPosData* MsgItemPosData::New() const {
  return new MsgItemPosData;
}

void MsgItemPosData::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<MsgItemPosData*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(uuid_, pos_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgItemPosData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.MsgItemPosData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 uuid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &uuid_)));
          set_has_uuid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_pos;
        break;
      }

      // optional int32 pos = 2;
      case 2: {
        if (tag == 16) {
         parse_pos:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pos_)));
          set_has_pos();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.MsgItemPosData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.MsgItemPosData)
  return false;
#undef DO_
}

void MsgItemPosData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.MsgItemPosData)
  // optional int64 uuid = 1;
  if (has_uuid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->uuid(), output);
  }

  // optional int32 pos = 2;
  if (has_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->pos(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.MsgItemPosData)
}

::google::protobuf::uint8* MsgItemPosData::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.MsgItemPosData)
  // optional int64 uuid = 1;
  if (has_uuid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->uuid(), target);
  }

  // optional int32 pos = 2;
  if (has_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->pos(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.MsgItemPosData)
  return target;
}

int MsgItemPosData::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 uuid = 1;
    if (has_uuid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->uuid());
    }

    // optional int32 pos = 2;
    if (has_pos()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pos());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgItemPosData::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgItemPosData* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgItemPosData*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgItemPosData::MergeFrom(const MsgItemPosData& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_uuid()) {
      set_uuid(from.uuid());
    }
    if (from.has_pos()) {
      set_pos(from.pos());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgItemPosData::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgItemPosData::CopyFrom(const MsgItemPosData& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgItemPosData::IsInitialized() const {

  return true;
}

void MsgItemPosData::Swap(MsgItemPosData* other) {
  if (other != this) {
    std::swap(uuid_, other->uuid_);
    std::swap(pos_, other->pos_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgItemPosData::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgItemPosData_descriptor_;
  metadata.reflection = MsgItemPosData_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgSyncItemPacketPosGS2C::kMsgTypeFieldNumber;
const int MsgSyncItemPacketPosGS2C::kSerialIDFieldNumber;
const int MsgSyncItemPacketPosGS2C::kResultFieldNumber;
const int MsgSyncItemPacketPosGS2C::kPosDataFieldNumber;
#endif  // !_MSC_VER

MsgSyncItemPacketPosGS2C::MsgSyncItemPacketPosGS2C()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.MsgSyncItemPacketPosGS2C)
}

void MsgSyncItemPacketPosGS2C::InitAsDefaultInstance() {
}

MsgSyncItemPacketPosGS2C::MsgSyncItemPacketPosGS2C(const MsgSyncItemPacketPosGS2C& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.MsgSyncItemPacketPosGS2C)
}

void MsgSyncItemPacketPosGS2C::SharedCtor() {
  _cached_size_ = 0;
  msgtype_ = 1295;
  serialid_ = 0;
  result_ = 1;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgSyncItemPacketPosGS2C::~MsgSyncItemPacketPosGS2C() {
  // @@protoc_insertion_point(destructor:MsgPB.MsgSyncItemPacketPosGS2C)
  SharedDtor();
}

void MsgSyncItemPacketPosGS2C::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgSyncItemPacketPosGS2C::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgSyncItemPacketPosGS2C::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgSyncItemPacketPosGS2C_descriptor_;
}

const MsgSyncItemPacketPosGS2C& MsgSyncItemPacketPosGS2C::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgItem_2eproto();
  return *default_instance_;
}

MsgSyncItemPacketPosGS2C* MsgSyncItemPacketPosGS2C::default_instance_ = NULL;

MsgSyncItemPacketPosGS2C* MsgSyncItemPacketPosGS2C::New() const {
  return new MsgSyncItemPacketPosGS2C;
}

void MsgSyncItemPacketPosGS2C::Clear() {
  if (_has_bits_[0 / 32] & 7) {
    msgtype_ = 1295;
    serialid_ = 0;
    result_ = 1;
  }
  posdata_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgSyncItemPacketPosGS2C::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.MsgSyncItemPacketPosGS2C)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_SYNC_ITEM_PACKET_POS_GS2C];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::EMsgType_IsValid(value)) {
            set_msgtype(static_cast< ::MsgPB::EMsgType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_serialID;
        break;
      }

      // optional int32 serialID = 2;
      case 2: {
        if (tag == 16) {
         parse_serialID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &serialid_)));
          set_has_serialid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_result;
        break;
      }

      // optional .MsgPB.E_SyncItemPacketPosResult result = 3 [default = E_SyncItemPacketPosResult_Fail];
      case 3: {
        if (tag == 24) {
         parse_result:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::E_SyncItemPacketPosResult_IsValid(value)) {
            set_result(static_cast< ::MsgPB::E_SyncItemPacketPosResult >(value));
          } else {
            mutable_unknown_fields()->AddVarint(3, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_posData;
        break;
      }

      // repeated .MsgPB.MsgItemPosData posData = 4;
      case 4: {
        if (tag == 34) {
         parse_posData:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_posdata()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_posData;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.MsgSyncItemPacketPosGS2C)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.MsgSyncItemPacketPosGS2C)
  return false;
#undef DO_
}

void MsgSyncItemPacketPosGS2C::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.MsgSyncItemPacketPosGS2C)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_SYNC_ITEM_PACKET_POS_GS2C];
  if (has_msgtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->msgtype(), output);
  }

  // optional int32 serialID = 2;
  if (has_serialid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->serialid(), output);
  }

  // optional .MsgPB.E_SyncItemPacketPosResult result = 3 [default = E_SyncItemPacketPosResult_Fail];
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->result(), output);
  }

  // repeated .MsgPB.MsgItemPosData posData = 4;
  for (int i = 0; i < this->posdata_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->posdata(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.MsgSyncItemPacketPosGS2C)
}

::google::protobuf::uint8* MsgSyncItemPacketPosGS2C::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.MsgSyncItemPacketPosGS2C)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_SYNC_ITEM_PACKET_POS_GS2C];
  if (has_msgtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->msgtype(), target);
  }

  // optional int32 serialID = 2;
  if (has_serialid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->serialid(), target);
  }

  // optional .MsgPB.E_SyncItemPacketPosResult result = 3 [default = E_SyncItemPacketPosResult_Fail];
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->result(), target);
  }

  // repeated .MsgPB.MsgItemPosData posData = 4;
  for (int i = 0; i < this->posdata_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->posdata(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.MsgSyncItemPacketPosGS2C)
  return target;
}

int MsgSyncItemPacketPosGS2C::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_SYNC_ITEM_PACKET_POS_GS2C];
    if (has_msgtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgtype());
    }

    // optional int32 serialID = 2;
    if (has_serialid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->serialid());
    }

    // optional .MsgPB.E_SyncItemPacketPosResult result = 3 [default = E_SyncItemPacketPosResult_Fail];
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->result());
    }

  }
  // repeated .MsgPB.MsgItemPosData posData = 4;
  total_size += 1 * this->posdata_size();
  for (int i = 0; i < this->posdata_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->posdata(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgSyncItemPacketPosGS2C::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgSyncItemPacketPosGS2C* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgSyncItemPacketPosGS2C*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgSyncItemPacketPosGS2C::MergeFrom(const MsgSyncItemPacketPosGS2C& from) {
  GOOGLE_CHECK_NE(&from, this);
  posdata_.MergeFrom(from.posdata_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msgtype()) {
      set_msgtype(from.msgtype());
    }
    if (from.has_serialid()) {
      set_serialid(from.serialid());
    }
    if (from.has_result()) {
      set_result(from.result());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgSyncItemPacketPosGS2C::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgSyncItemPacketPosGS2C::CopyFrom(const MsgSyncItemPacketPosGS2C& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgSyncItemPacketPosGS2C::IsInitialized() const {

  return true;
}

void MsgSyncItemPacketPosGS2C::Swap(MsgSyncItemPacketPosGS2C* other) {
  if (other != this) {
    std::swap(msgtype_, other->msgtype_);
    std::swap(serialid_, other->serialid_);
    std::swap(result_, other->result_);
    posdata_.Swap(&other->posdata_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgSyncItemPacketPosGS2C::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgSyncItemPacketPosGS2C_descriptor_;
  metadata.reflection = MsgSyncItemPacketPosGS2C_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgItemApartC2GS::kSerialIDFieldNumber;
const int MsgItemApartC2GS::kMsgTypeFieldNumber;
const int MsgItemApartC2GS::kUuidFieldNumber;
const int MsgItemApartC2GS::kBagToFieldNumber;
const int MsgItemApartC2GS::kPosToFieldNumber;
const int MsgItemApartC2GS::kCountFieldNumber;
const int MsgItemApartC2GS::kIggidFieldNumber;
#endif  // !_MSC_VER

MsgItemApartC2GS::MsgItemApartC2GS()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.MsgItemApartC2GS)
}

void MsgItemApartC2GS::InitAsDefaultInstance() {
}

MsgItemApartC2GS::MsgItemApartC2GS(const MsgItemApartC2GS& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.MsgItemApartC2GS)
}

void MsgItemApartC2GS::SharedCtor() {
  _cached_size_ = 0;
  serialid_ = 0;
  msgtype_ = 1205;
  uuid_ = GOOGLE_LONGLONG(0);
  bagto_ = 0;
  posto_ = 0;
  count_ = 0;
  iggid_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgItemApartC2GS::~MsgItemApartC2GS() {
  // @@protoc_insertion_point(destructor:MsgPB.MsgItemApartC2GS)
  SharedDtor();
}

void MsgItemApartC2GS::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgItemApartC2GS::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgItemApartC2GS::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgItemApartC2GS_descriptor_;
}

const MsgItemApartC2GS& MsgItemApartC2GS::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgItem_2eproto();
  return *default_instance_;
}

MsgItemApartC2GS* MsgItemApartC2GS::default_instance_ = NULL;

MsgItemApartC2GS* MsgItemApartC2GS::New() const {
  return new MsgItemApartC2GS;
}

void MsgItemApartC2GS::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<MsgItemApartC2GS*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 127) {
    ZR_(uuid_, count_);
    serialid_ = 0;
    msgtype_ = 1205;
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgItemApartC2GS::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.MsgItemApartC2GS)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 SerialID = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &serialid_)));
          set_has_serialid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_msgType;
        break;
      }

      // optional .MsgPB.EMsgType msgType = 2 [default = _MSG_ITEM_APART_C2GS];
      case 2: {
        if (tag == 16) {
         parse_msgType:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::EMsgType_IsValid(value)) {
            set_msgtype(static_cast< ::MsgPB::EMsgType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_uuid;
        break;
      }

      // optional int64 uuid = 3;
      case 3: {
        if (tag == 24) {
         parse_uuid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &uuid_)));
          set_has_uuid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_BagTo;
        break;
      }

      // optional .MsgPB.PACKET_TYPE BagTo = 4;
      case 4: {
        if (tag == 32) {
         parse_BagTo:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::PACKET_TYPE_IsValid(value)) {
            set_bagto(static_cast< ::MsgPB::PACKET_TYPE >(value));
          } else {
            mutable_unknown_fields()->AddVarint(4, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_PosTo;
        break;
      }

      // optional int32 PosTo = 5;
      case 5: {
        if (tag == 40) {
         parse_PosTo:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &posto_)));
          set_has_posto();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_Count;
        break;
      }

      // optional int32 Count = 6;
      case 6: {
        if (tag == 48) {
         parse_Count:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &count_)));
          set_has_count();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_iggid;
        break;
      }

      // optional int64 iggid = 7;
      case 7: {
        if (tag == 56) {
         parse_iggid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &iggid_)));
          set_has_iggid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.MsgItemApartC2GS)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.MsgItemApartC2GS)
  return false;
#undef DO_
}

void MsgItemApartC2GS::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.MsgItemApartC2GS)
  // optional int32 SerialID = 1;
  if (has_serialid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->serialid(), output);
  }

  // optional .MsgPB.EMsgType msgType = 2 [default = _MSG_ITEM_APART_C2GS];
  if (has_msgtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->msgtype(), output);
  }

  // optional int64 uuid = 3;
  if (has_uuid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->uuid(), output);
  }

  // optional .MsgPB.PACKET_TYPE BagTo = 4;
  if (has_bagto()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->bagto(), output);
  }

  // optional int32 PosTo = 5;
  if (has_posto()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->posto(), output);
  }

  // optional int32 Count = 6;
  if (has_count()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->count(), output);
  }

  // optional int64 iggid = 7;
  if (has_iggid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(7, this->iggid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.MsgItemApartC2GS)
}

::google::protobuf::uint8* MsgItemApartC2GS::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.MsgItemApartC2GS)
  // optional int32 SerialID = 1;
  if (has_serialid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->serialid(), target);
  }

  // optional .MsgPB.EMsgType msgType = 2 [default = _MSG_ITEM_APART_C2GS];
  if (has_msgtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->msgtype(), target);
  }

  // optional int64 uuid = 3;
  if (has_uuid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->uuid(), target);
  }

  // optional .MsgPB.PACKET_TYPE BagTo = 4;
  if (has_bagto()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->bagto(), target);
  }

  // optional int32 PosTo = 5;
  if (has_posto()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->posto(), target);
  }

  // optional int32 Count = 6;
  if (has_count()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->count(), target);
  }

  // optional int64 iggid = 7;
  if (has_iggid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(7, this->iggid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.MsgItemApartC2GS)
  return target;
}

int MsgItemApartC2GS::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 SerialID = 1;
    if (has_serialid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->serialid());
    }

    // optional .MsgPB.EMsgType msgType = 2 [default = _MSG_ITEM_APART_C2GS];
    if (has_msgtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgtype());
    }

    // optional int64 uuid = 3;
    if (has_uuid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->uuid());
    }

    // optional .MsgPB.PACKET_TYPE BagTo = 4;
    if (has_bagto()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->bagto());
    }

    // optional int32 PosTo = 5;
    if (has_posto()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->posto());
    }

    // optional int32 Count = 6;
    if (has_count()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->count());
    }

    // optional int64 iggid = 7;
    if (has_iggid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->iggid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgItemApartC2GS::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgItemApartC2GS* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgItemApartC2GS*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgItemApartC2GS::MergeFrom(const MsgItemApartC2GS& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_serialid()) {
      set_serialid(from.serialid());
    }
    if (from.has_msgtype()) {
      set_msgtype(from.msgtype());
    }
    if (from.has_uuid()) {
      set_uuid(from.uuid());
    }
    if (from.has_bagto()) {
      set_bagto(from.bagto());
    }
    if (from.has_posto()) {
      set_posto(from.posto());
    }
    if (from.has_count()) {
      set_count(from.count());
    }
    if (from.has_iggid()) {
      set_iggid(from.iggid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgItemApartC2GS::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgItemApartC2GS::CopyFrom(const MsgItemApartC2GS& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgItemApartC2GS::IsInitialized() const {

  return true;
}

void MsgItemApartC2GS::Swap(MsgItemApartC2GS* other) {
  if (other != this) {
    std::swap(serialid_, other->serialid_);
    std::swap(msgtype_, other->msgtype_);
    std::swap(uuid_, other->uuid_);
    std::swap(bagto_, other->bagto_);
    std::swap(posto_, other->posto_);
    std::swap(count_, other->count_);
    std::swap(iggid_, other->iggid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgItemApartC2GS::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgItemApartC2GS_descriptor_;
  metadata.reflection = MsgItemApartC2GS_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgItemApartResultGS2C::kSerialIDFieldNumber;
const int MsgItemApartResultGS2C::kMsgTypeFieldNumber;
const int MsgItemApartResultGS2C::kResultFieldNumber;
#endif  // !_MSC_VER

MsgItemApartResultGS2C::MsgItemApartResultGS2C()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.MsgItemApartResultGS2C)
}

void MsgItemApartResultGS2C::InitAsDefaultInstance() {
}

MsgItemApartResultGS2C::MsgItemApartResultGS2C(const MsgItemApartResultGS2C& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.MsgItemApartResultGS2C)
}

void MsgItemApartResultGS2C::SharedCtor() {
  _cached_size_ = 0;
  serialid_ = 0;
  msgtype_ = 1206;
  result_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgItemApartResultGS2C::~MsgItemApartResultGS2C() {
  // @@protoc_insertion_point(destructor:MsgPB.MsgItemApartResultGS2C)
  SharedDtor();
}

void MsgItemApartResultGS2C::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgItemApartResultGS2C::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgItemApartResultGS2C::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgItemApartResultGS2C_descriptor_;
}

const MsgItemApartResultGS2C& MsgItemApartResultGS2C::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgItem_2eproto();
  return *default_instance_;
}

MsgItemApartResultGS2C* MsgItemApartResultGS2C::default_instance_ = NULL;

MsgItemApartResultGS2C* MsgItemApartResultGS2C::New() const {
  return new MsgItemApartResultGS2C;
}

void MsgItemApartResultGS2C::Clear() {
  if (_has_bits_[0 / 32] & 7) {
    serialid_ = 0;
    msgtype_ = 1206;
    result_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgItemApartResultGS2C::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.MsgItemApartResultGS2C)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 SerialID = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &serialid_)));
          set_has_serialid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_msgType;
        break;
      }

      // optional .MsgPB.EMsgType msgType = 2 [default = _MSG_ITEM_APART_RESULT_GS2C];
      case 2: {
        if (tag == 16) {
         parse_msgType:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::EMsgType_IsValid(value)) {
            set_msgtype(static_cast< ::MsgPB::EMsgType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_Result;
        break;
      }

      // optional .MsgPB.ITEM_APART_RESULT Result = 3;
      case 3: {
        if (tag == 24) {
         parse_Result:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::ITEM_APART_RESULT_IsValid(value)) {
            set_result(static_cast< ::MsgPB::ITEM_APART_RESULT >(value));
          } else {
            mutable_unknown_fields()->AddVarint(3, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.MsgItemApartResultGS2C)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.MsgItemApartResultGS2C)
  return false;
#undef DO_
}

void MsgItemApartResultGS2C::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.MsgItemApartResultGS2C)
  // optional int32 SerialID = 1;
  if (has_serialid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->serialid(), output);
  }

  // optional .MsgPB.EMsgType msgType = 2 [default = _MSG_ITEM_APART_RESULT_GS2C];
  if (has_msgtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->msgtype(), output);
  }

  // optional .MsgPB.ITEM_APART_RESULT Result = 3;
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->result(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.MsgItemApartResultGS2C)
}

::google::protobuf::uint8* MsgItemApartResultGS2C::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.MsgItemApartResultGS2C)
  // optional int32 SerialID = 1;
  if (has_serialid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->serialid(), target);
  }

  // optional .MsgPB.EMsgType msgType = 2 [default = _MSG_ITEM_APART_RESULT_GS2C];
  if (has_msgtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->msgtype(), target);
  }

  // optional .MsgPB.ITEM_APART_RESULT Result = 3;
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->result(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.MsgItemApartResultGS2C)
  return target;
}

int MsgItemApartResultGS2C::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 SerialID = 1;
    if (has_serialid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->serialid());
    }

    // optional .MsgPB.EMsgType msgType = 2 [default = _MSG_ITEM_APART_RESULT_GS2C];
    if (has_msgtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgtype());
    }

    // optional .MsgPB.ITEM_APART_RESULT Result = 3;
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->result());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgItemApartResultGS2C::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgItemApartResultGS2C* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgItemApartResultGS2C*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgItemApartResultGS2C::MergeFrom(const MsgItemApartResultGS2C& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_serialid()) {
      set_serialid(from.serialid());
    }
    if (from.has_msgtype()) {
      set_msgtype(from.msgtype());
    }
    if (from.has_result()) {
      set_result(from.result());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgItemApartResultGS2C::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgItemApartResultGS2C::CopyFrom(const MsgItemApartResultGS2C& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgItemApartResultGS2C::IsInitialized() const {

  return true;
}

void MsgItemApartResultGS2C::Swap(MsgItemApartResultGS2C* other) {
  if (other != this) {
    std::swap(serialid_, other->serialid_);
    std::swap(msgtype_, other->msgtype_);
    std::swap(result_, other->result_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgItemApartResultGS2C::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgItemApartResultGS2C_descriptor_;
  metadata.reflection = MsgItemApartResultGS2C_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgItemAddItemPacketC2GS::kSerialIDFieldNumber;
const int MsgItemAddItemPacketC2GS::kMsgTypeFieldNumber;
const int MsgItemAddItemPacketC2GS::kEmTypeFieldNumber;
const int MsgItemAddItemPacketC2GS::kCountFieldNumber;
const int MsgItemAddItemPacketC2GS::kIggidFieldNumber;
const int MsgItemAddItemPacketC2GS::kCanUseDiamondFieldNumber;
#endif  // !_MSC_VER

MsgItemAddItemPacketC2GS::MsgItemAddItemPacketC2GS()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.MsgItemAddItemPacketC2GS)
}

void MsgItemAddItemPacketC2GS::InitAsDefaultInstance() {
}

MsgItemAddItemPacketC2GS::MsgItemAddItemPacketC2GS(const MsgItemAddItemPacketC2GS& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.MsgItemAddItemPacketC2GS)
}

void MsgItemAddItemPacketC2GS::SharedCtor() {
  _cached_size_ = 0;
  serialid_ = 0;
  msgtype_ = 1207;
  emtype_ = 0;
  count_ = 0;
  iggid_ = GOOGLE_LONGLONG(0);
  canusediamond_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgItemAddItemPacketC2GS::~MsgItemAddItemPacketC2GS() {
  // @@protoc_insertion_point(destructor:MsgPB.MsgItemAddItemPacketC2GS)
  SharedDtor();
}

void MsgItemAddItemPacketC2GS::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgItemAddItemPacketC2GS::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgItemAddItemPacketC2GS::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgItemAddItemPacketC2GS_descriptor_;
}

const MsgItemAddItemPacketC2GS& MsgItemAddItemPacketC2GS::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgItem_2eproto();
  return *default_instance_;
}

MsgItemAddItemPacketC2GS* MsgItemAddItemPacketC2GS::default_instance_ = NULL;

MsgItemAddItemPacketC2GS* MsgItemAddItemPacketC2GS::New() const {
  return new MsgItemAddItemPacketC2GS;
}

void MsgItemAddItemPacketC2GS::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<MsgItemAddItemPacketC2GS*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 63) {
    ZR_(emtype_, canusediamond_);
    serialid_ = 0;
    msgtype_ = 1207;
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgItemAddItemPacketC2GS::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.MsgItemAddItemPacketC2GS)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 SerialID = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &serialid_)));
          set_has_serialid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_msgType;
        break;
      }

      // optional .MsgPB.EMsgType msgType = 2 [default = _MSG_ITEM_ADD_ITEMPACKET_C2GS];
      case 2: {
        if (tag == 16) {
         parse_msgType:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::EMsgType_IsValid(value)) {
            set_msgtype(static_cast< ::MsgPB::EMsgType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_emType;
        break;
      }

      // optional .MsgPB.PACKET_TYPE emType = 3;
      case 3: {
        if (tag == 24) {
         parse_emType:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::PACKET_TYPE_IsValid(value)) {
            set_emtype(static_cast< ::MsgPB::PACKET_TYPE >(value));
          } else {
            mutable_unknown_fields()->AddVarint(3, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_Count;
        break;
      }

      // optional int32 Count = 4;
      case 4: {
        if (tag == 32) {
         parse_Count:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &count_)));
          set_has_count();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_iggid;
        break;
      }

      // optional int64 iggid = 5;
      case 5: {
        if (tag == 40) {
         parse_iggid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &iggid_)));
          set_has_iggid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_canUseDiamond;
        break;
      }

      // optional bool canUseDiamond = 6 [default = false];
      case 6: {
        if (tag == 48) {
         parse_canUseDiamond:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &canusediamond_)));
          set_has_canusediamond();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.MsgItemAddItemPacketC2GS)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.MsgItemAddItemPacketC2GS)
  return false;
#undef DO_
}

void MsgItemAddItemPacketC2GS::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.MsgItemAddItemPacketC2GS)
  // optional int32 SerialID = 1;
  if (has_serialid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->serialid(), output);
  }

  // optional .MsgPB.EMsgType msgType = 2 [default = _MSG_ITEM_ADD_ITEMPACKET_C2GS];
  if (has_msgtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->msgtype(), output);
  }

  // optional .MsgPB.PACKET_TYPE emType = 3;
  if (has_emtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->emtype(), output);
  }

  // optional int32 Count = 4;
  if (has_count()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->count(), output);
  }

  // optional int64 iggid = 5;
  if (has_iggid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(5, this->iggid(), output);
  }

  // optional bool canUseDiamond = 6 [default = false];
  if (has_canusediamond()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->canusediamond(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.MsgItemAddItemPacketC2GS)
}

::google::protobuf::uint8* MsgItemAddItemPacketC2GS::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.MsgItemAddItemPacketC2GS)
  // optional int32 SerialID = 1;
  if (has_serialid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->serialid(), target);
  }

  // optional .MsgPB.EMsgType msgType = 2 [default = _MSG_ITEM_ADD_ITEMPACKET_C2GS];
  if (has_msgtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->msgtype(), target);
  }

  // optional .MsgPB.PACKET_TYPE emType = 3;
  if (has_emtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->emtype(), target);
  }

  // optional int32 Count = 4;
  if (has_count()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->count(), target);
  }

  // optional int64 iggid = 5;
  if (has_iggid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(5, this->iggid(), target);
  }

  // optional bool canUseDiamond = 6 [default = false];
  if (has_canusediamond()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->canusediamond(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.MsgItemAddItemPacketC2GS)
  return target;
}

int MsgItemAddItemPacketC2GS::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 SerialID = 1;
    if (has_serialid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->serialid());
    }

    // optional .MsgPB.EMsgType msgType = 2 [default = _MSG_ITEM_ADD_ITEMPACKET_C2GS];
    if (has_msgtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgtype());
    }

    // optional .MsgPB.PACKET_TYPE emType = 3;
    if (has_emtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->emtype());
    }

    // optional int32 Count = 4;
    if (has_count()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->count());
    }

    // optional int64 iggid = 5;
    if (has_iggid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->iggid());
    }

    // optional bool canUseDiamond = 6 [default = false];
    if (has_canusediamond()) {
      total_size += 1 + 1;
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgItemAddItemPacketC2GS::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgItemAddItemPacketC2GS* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgItemAddItemPacketC2GS*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgItemAddItemPacketC2GS::MergeFrom(const MsgItemAddItemPacketC2GS& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_serialid()) {
      set_serialid(from.serialid());
    }
    if (from.has_msgtype()) {
      set_msgtype(from.msgtype());
    }
    if (from.has_emtype()) {
      set_emtype(from.emtype());
    }
    if (from.has_count()) {
      set_count(from.count());
    }
    if (from.has_iggid()) {
      set_iggid(from.iggid());
    }
    if (from.has_canusediamond()) {
      set_canusediamond(from.canusediamond());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgItemAddItemPacketC2GS::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgItemAddItemPacketC2GS::CopyFrom(const MsgItemAddItemPacketC2GS& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgItemAddItemPacketC2GS::IsInitialized() const {

  return true;
}

void MsgItemAddItemPacketC2GS::Swap(MsgItemAddItemPacketC2GS* other) {
  if (other != this) {
    std::swap(serialid_, other->serialid_);
    std::swap(msgtype_, other->msgtype_);
    std::swap(emtype_, other->emtype_);
    std::swap(count_, other->count_);
    std::swap(iggid_, other->iggid_);
    std::swap(canusediamond_, other->canusediamond_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgItemAddItemPacketC2GS::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgItemAddItemPacketC2GS_descriptor_;
  metadata.reflection = MsgItemAddItemPacketC2GS_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgItemAddItemPacketResultGS2C::kSerialIDFieldNumber;
const int MsgItemAddItemPacketResultGS2C::kMsgTypeFieldNumber;
const int MsgItemAddItemPacketResultGS2C::kResultFieldNumber;
const int MsgItemAddItemPacketResultGS2C::kPacketFieldNumber;
const int MsgItemAddItemPacketResultGS2C::kCanUseDiamondFieldNumber;
#endif  // !_MSC_VER

MsgItemAddItemPacketResultGS2C::MsgItemAddItemPacketResultGS2C()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.MsgItemAddItemPacketResultGS2C)
}

void MsgItemAddItemPacketResultGS2C::InitAsDefaultInstance() {
}

MsgItemAddItemPacketResultGS2C::MsgItemAddItemPacketResultGS2C(const MsgItemAddItemPacketResultGS2C& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.MsgItemAddItemPacketResultGS2C)
}

void MsgItemAddItemPacketResultGS2C::SharedCtor() {
  _cached_size_ = 0;
  serialid_ = 0;
  msgtype_ = 1208;
  result_ = 0;
  packet_ = 0;
  canusediamond_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgItemAddItemPacketResultGS2C::~MsgItemAddItemPacketResultGS2C() {
  // @@protoc_insertion_point(destructor:MsgPB.MsgItemAddItemPacketResultGS2C)
  SharedDtor();
}

void MsgItemAddItemPacketResultGS2C::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgItemAddItemPacketResultGS2C::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgItemAddItemPacketResultGS2C::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgItemAddItemPacketResultGS2C_descriptor_;
}

const MsgItemAddItemPacketResultGS2C& MsgItemAddItemPacketResultGS2C::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgItem_2eproto();
  return *default_instance_;
}

MsgItemAddItemPacketResultGS2C* MsgItemAddItemPacketResultGS2C::default_instance_ = NULL;

MsgItemAddItemPacketResultGS2C* MsgItemAddItemPacketResultGS2C::New() const {
  return new MsgItemAddItemPacketResultGS2C;
}

void MsgItemAddItemPacketResultGS2C::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<MsgItemAddItemPacketResultGS2C*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 31) {
    ZR_(result_, canusediamond_);
    serialid_ = 0;
    msgtype_ = 1208;
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgItemAddItemPacketResultGS2C::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.MsgItemAddItemPacketResultGS2C)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 SerialID = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &serialid_)));
          set_has_serialid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_msgType;
        break;
      }

      // optional .MsgPB.EMsgType msgType = 2 [default = _MSG_ITEM_ADD_ITEMPACKET_RESULT_GS2C];
      case 2: {
        if (tag == 16) {
         parse_msgType:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::EMsgType_IsValid(value)) {
            set_msgtype(static_cast< ::MsgPB::EMsgType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_Result;
        break;
      }

      // optional .MsgPB.ADD_ITEMPACKET_SIZE_RESULT Result = 3;
      case 3: {
        if (tag == 24) {
         parse_Result:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::ADD_ITEMPACKET_SIZE_RESULT_IsValid(value)) {
            set_result(static_cast< ::MsgPB::ADD_ITEMPACKET_SIZE_RESULT >(value));
          } else {
            mutable_unknown_fields()->AddVarint(3, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_packet;
        break;
      }

      // optional .MsgPB.PACKET_TYPE packet = 4;
      case 4: {
        if (tag == 32) {
         parse_packet:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::PACKET_TYPE_IsValid(value)) {
            set_packet(static_cast< ::MsgPB::PACKET_TYPE >(value));
          } else {
            mutable_unknown_fields()->AddVarint(4, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_canUseDiamond;
        break;
      }

      // optional bool canUseDiamond = 5 [default = false];
      case 5: {
        if (tag == 40) {
         parse_canUseDiamond:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &canusediamond_)));
          set_has_canusediamond();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.MsgItemAddItemPacketResultGS2C)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.MsgItemAddItemPacketResultGS2C)
  return false;
#undef DO_
}

void MsgItemAddItemPacketResultGS2C::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.MsgItemAddItemPacketResultGS2C)
  // optional int32 SerialID = 1;
  if (has_serialid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->serialid(), output);
  }

  // optional .MsgPB.EMsgType msgType = 2 [default = _MSG_ITEM_ADD_ITEMPACKET_RESULT_GS2C];
  if (has_msgtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->msgtype(), output);
  }

  // optional .MsgPB.ADD_ITEMPACKET_SIZE_RESULT Result = 3;
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->result(), output);
  }

  // optional .MsgPB.PACKET_TYPE packet = 4;
  if (has_packet()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->packet(), output);
  }

  // optional bool canUseDiamond = 5 [default = false];
  if (has_canusediamond()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->canusediamond(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.MsgItemAddItemPacketResultGS2C)
}

::google::protobuf::uint8* MsgItemAddItemPacketResultGS2C::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.MsgItemAddItemPacketResultGS2C)
  // optional int32 SerialID = 1;
  if (has_serialid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->serialid(), target);
  }

  // optional .MsgPB.EMsgType msgType = 2 [default = _MSG_ITEM_ADD_ITEMPACKET_RESULT_GS2C];
  if (has_msgtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->msgtype(), target);
  }

  // optional .MsgPB.ADD_ITEMPACKET_SIZE_RESULT Result = 3;
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->result(), target);
  }

  // optional .MsgPB.PACKET_TYPE packet = 4;
  if (has_packet()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->packet(), target);
  }

  // optional bool canUseDiamond = 5 [default = false];
  if (has_canusediamond()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->canusediamond(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.MsgItemAddItemPacketResultGS2C)
  return target;
}

int MsgItemAddItemPacketResultGS2C::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 SerialID = 1;
    if (has_serialid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->serialid());
    }

    // optional .MsgPB.EMsgType msgType = 2 [default = _MSG_ITEM_ADD_ITEMPACKET_RESULT_GS2C];
    if (has_msgtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgtype());
    }

    // optional .MsgPB.ADD_ITEMPACKET_SIZE_RESULT Result = 3;
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->result());
    }

    // optional .MsgPB.PACKET_TYPE packet = 4;
    if (has_packet()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->packet());
    }

    // optional bool canUseDiamond = 5 [default = false];
    if (has_canusediamond()) {
      total_size += 1 + 1;
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgItemAddItemPacketResultGS2C::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgItemAddItemPacketResultGS2C* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgItemAddItemPacketResultGS2C*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgItemAddItemPacketResultGS2C::MergeFrom(const MsgItemAddItemPacketResultGS2C& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_serialid()) {
      set_serialid(from.serialid());
    }
    if (from.has_msgtype()) {
      set_msgtype(from.msgtype());
    }
    if (from.has_result()) {
      set_result(from.result());
    }
    if (from.has_packet()) {
      set_packet(from.packet());
    }
    if (from.has_canusediamond()) {
      set_canusediamond(from.canusediamond());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgItemAddItemPacketResultGS2C::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgItemAddItemPacketResultGS2C::CopyFrom(const MsgItemAddItemPacketResultGS2C& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgItemAddItemPacketResultGS2C::IsInitialized() const {

  return true;
}

void MsgItemAddItemPacketResultGS2C::Swap(MsgItemAddItemPacketResultGS2C* other) {
  if (other != this) {
    std::swap(serialid_, other->serialid_);
    std::swap(msgtype_, other->msgtype_);
    std::swap(result_, other->result_);
    std::swap(packet_, other->packet_);
    std::swap(canusediamond_, other->canusediamond_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgItemAddItemPacketResultGS2C::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgItemAddItemPacketResultGS2C_descriptor_;
  metadata.reflection = MsgItemAddItemPacketResultGS2C_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgItemRentItemPacketC2GS::kSerialIDFieldNumber;
const int MsgItemRentItemPacketC2GS::kMsgTypeFieldNumber;
const int MsgItemRentItemPacketC2GS::kEmTypeFieldNumber;
const int MsgItemRentItemPacketC2GS::kDaysFieldNumber;
const int MsgItemRentItemPacketC2GS::kIggidFieldNumber;
#endif  // !_MSC_VER

MsgItemRentItemPacketC2GS::MsgItemRentItemPacketC2GS()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.MsgItemRentItemPacketC2GS)
}

void MsgItemRentItemPacketC2GS::InitAsDefaultInstance() {
}

MsgItemRentItemPacketC2GS::MsgItemRentItemPacketC2GS(const MsgItemRentItemPacketC2GS& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.MsgItemRentItemPacketC2GS)
}

void MsgItemRentItemPacketC2GS::SharedCtor() {
  _cached_size_ = 0;
  serialid_ = 0;
  msgtype_ = 1209;
  emtype_ = 0;
  days_ = 0;
  iggid_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgItemRentItemPacketC2GS::~MsgItemRentItemPacketC2GS() {
  // @@protoc_insertion_point(destructor:MsgPB.MsgItemRentItemPacketC2GS)
  SharedDtor();
}

void MsgItemRentItemPacketC2GS::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgItemRentItemPacketC2GS::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgItemRentItemPacketC2GS::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgItemRentItemPacketC2GS_descriptor_;
}

const MsgItemRentItemPacketC2GS& MsgItemRentItemPacketC2GS::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgItem_2eproto();
  return *default_instance_;
}

MsgItemRentItemPacketC2GS* MsgItemRentItemPacketC2GS::default_instance_ = NULL;

MsgItemRentItemPacketC2GS* MsgItemRentItemPacketC2GS::New() const {
  return new MsgItemRentItemPacketC2GS;
}

void MsgItemRentItemPacketC2GS::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<MsgItemRentItemPacketC2GS*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 31) {
    ZR_(emtype_, iggid_);
    serialid_ = 0;
    msgtype_ = 1209;
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgItemRentItemPacketC2GS::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.MsgItemRentItemPacketC2GS)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 SerialID = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &serialid_)));
          set_has_serialid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_msgType;
        break;
      }

      // optional .MsgPB.EMsgType msgType = 2 [default = _MSG_ITEM_RENT_ITEMPACKET_C2GS];
      case 2: {
        if (tag == 16) {
         parse_msgType:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::EMsgType_IsValid(value)) {
            set_msgtype(static_cast< ::MsgPB::EMsgType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_emType;
        break;
      }

      // optional .MsgPB.PACKET_TYPE emType = 3;
      case 3: {
        if (tag == 24) {
         parse_emType:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::PACKET_TYPE_IsValid(value)) {
            set_emtype(static_cast< ::MsgPB::PACKET_TYPE >(value));
          } else {
            mutable_unknown_fields()->AddVarint(3, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_Days;
        break;
      }

      // optional int32 Days = 4;
      case 4: {
        if (tag == 32) {
         parse_Days:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &days_)));
          set_has_days();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_iggid;
        break;
      }

      // optional int64 iggid = 5;
      case 5: {
        if (tag == 40) {
         parse_iggid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &iggid_)));
          set_has_iggid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.MsgItemRentItemPacketC2GS)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.MsgItemRentItemPacketC2GS)
  return false;
#undef DO_
}

void MsgItemRentItemPacketC2GS::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.MsgItemRentItemPacketC2GS)
  // optional int32 SerialID = 1;
  if (has_serialid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->serialid(), output);
  }

  // optional .MsgPB.EMsgType msgType = 2 [default = _MSG_ITEM_RENT_ITEMPACKET_C2GS];
  if (has_msgtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->msgtype(), output);
  }

  // optional .MsgPB.PACKET_TYPE emType = 3;
  if (has_emtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->emtype(), output);
  }

  // optional int32 Days = 4;
  if (has_days()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->days(), output);
  }

  // optional int64 iggid = 5;
  if (has_iggid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(5, this->iggid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.MsgItemRentItemPacketC2GS)
}

::google::protobuf::uint8* MsgItemRentItemPacketC2GS::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.MsgItemRentItemPacketC2GS)
  // optional int32 SerialID = 1;
  if (has_serialid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->serialid(), target);
  }

  // optional .MsgPB.EMsgType msgType = 2 [default = _MSG_ITEM_RENT_ITEMPACKET_C2GS];
  if (has_msgtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->msgtype(), target);
  }

  // optional .MsgPB.PACKET_TYPE emType = 3;
  if (has_emtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->emtype(), target);
  }

  // optional int32 Days = 4;
  if (has_days()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->days(), target);
  }

  // optional int64 iggid = 5;
  if (has_iggid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(5, this->iggid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.MsgItemRentItemPacketC2GS)
  return target;
}

int MsgItemRentItemPacketC2GS::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 SerialID = 1;
    if (has_serialid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->serialid());
    }

    // optional .MsgPB.EMsgType msgType = 2 [default = _MSG_ITEM_RENT_ITEMPACKET_C2GS];
    if (has_msgtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgtype());
    }

    // optional .MsgPB.PACKET_TYPE emType = 3;
    if (has_emtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->emtype());
    }

    // optional int32 Days = 4;
    if (has_days()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->days());
    }

    // optional int64 iggid = 5;
    if (has_iggid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->iggid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgItemRentItemPacketC2GS::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgItemRentItemPacketC2GS* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgItemRentItemPacketC2GS*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgItemRentItemPacketC2GS::MergeFrom(const MsgItemRentItemPacketC2GS& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_serialid()) {
      set_serialid(from.serialid());
    }
    if (from.has_msgtype()) {
      set_msgtype(from.msgtype());
    }
    if (from.has_emtype()) {
      set_emtype(from.emtype());
    }
    if (from.has_days()) {
      set_days(from.days());
    }
    if (from.has_iggid()) {
      set_iggid(from.iggid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgItemRentItemPacketC2GS::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgItemRentItemPacketC2GS::CopyFrom(const MsgItemRentItemPacketC2GS& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgItemRentItemPacketC2GS::IsInitialized() const {

  return true;
}

void MsgItemRentItemPacketC2GS::Swap(MsgItemRentItemPacketC2GS* other) {
  if (other != this) {
    std::swap(serialid_, other->serialid_);
    std::swap(msgtype_, other->msgtype_);
    std::swap(emtype_, other->emtype_);
    std::swap(days_, other->days_);
    std::swap(iggid_, other->iggid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgItemRentItemPacketC2GS::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgItemRentItemPacketC2GS_descriptor_;
  metadata.reflection = MsgItemRentItemPacketC2GS_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgItemRentItemPacketResultGS2C::kSerialIDFieldNumber;
const int MsgItemRentItemPacketResultGS2C::kMsgTypeFieldNumber;
const int MsgItemRentItemPacketResultGS2C::kResultFieldNumber;
#endif  // !_MSC_VER

MsgItemRentItemPacketResultGS2C::MsgItemRentItemPacketResultGS2C()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.MsgItemRentItemPacketResultGS2C)
}

void MsgItemRentItemPacketResultGS2C::InitAsDefaultInstance() {
}

MsgItemRentItemPacketResultGS2C::MsgItemRentItemPacketResultGS2C(const MsgItemRentItemPacketResultGS2C& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.MsgItemRentItemPacketResultGS2C)
}

void MsgItemRentItemPacketResultGS2C::SharedCtor() {
  _cached_size_ = 0;
  serialid_ = 0;
  msgtype_ = 1210;
  result_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgItemRentItemPacketResultGS2C::~MsgItemRentItemPacketResultGS2C() {
  // @@protoc_insertion_point(destructor:MsgPB.MsgItemRentItemPacketResultGS2C)
  SharedDtor();
}

void MsgItemRentItemPacketResultGS2C::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgItemRentItemPacketResultGS2C::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgItemRentItemPacketResultGS2C::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgItemRentItemPacketResultGS2C_descriptor_;
}

const MsgItemRentItemPacketResultGS2C& MsgItemRentItemPacketResultGS2C::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgItem_2eproto();
  return *default_instance_;
}

MsgItemRentItemPacketResultGS2C* MsgItemRentItemPacketResultGS2C::default_instance_ = NULL;

MsgItemRentItemPacketResultGS2C* MsgItemRentItemPacketResultGS2C::New() const {
  return new MsgItemRentItemPacketResultGS2C;
}

void MsgItemRentItemPacketResultGS2C::Clear() {
  if (_has_bits_[0 / 32] & 7) {
    serialid_ = 0;
    msgtype_ = 1210;
    result_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgItemRentItemPacketResultGS2C::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.MsgItemRentItemPacketResultGS2C)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 SerialID = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &serialid_)));
          set_has_serialid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_msgType;
        break;
      }

      // optional .MsgPB.EMsgType msgType = 2 [default = _MSG_ITEM_RENT_ITEMPACKET_RESULT_GS2C];
      case 2: {
        if (tag == 16) {
         parse_msgType:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::EMsgType_IsValid(value)) {
            set_msgtype(static_cast< ::MsgPB::EMsgType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_Result;
        break;
      }

      // optional .MsgPB.RENT_ITEMPACKET_RESULT Result = 3;
      case 3: {
        if (tag == 24) {
         parse_Result:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::RENT_ITEMPACKET_RESULT_IsValid(value)) {
            set_result(static_cast< ::MsgPB::RENT_ITEMPACKET_RESULT >(value));
          } else {
            mutable_unknown_fields()->AddVarint(3, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.MsgItemRentItemPacketResultGS2C)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.MsgItemRentItemPacketResultGS2C)
  return false;
#undef DO_
}

void MsgItemRentItemPacketResultGS2C::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.MsgItemRentItemPacketResultGS2C)
  // optional int32 SerialID = 1;
  if (has_serialid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->serialid(), output);
  }

  // optional .MsgPB.EMsgType msgType = 2 [default = _MSG_ITEM_RENT_ITEMPACKET_RESULT_GS2C];
  if (has_msgtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->msgtype(), output);
  }

  // optional .MsgPB.RENT_ITEMPACKET_RESULT Result = 3;
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->result(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.MsgItemRentItemPacketResultGS2C)
}

::google::protobuf::uint8* MsgItemRentItemPacketResultGS2C::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.MsgItemRentItemPacketResultGS2C)
  // optional int32 SerialID = 1;
  if (has_serialid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->serialid(), target);
  }

  // optional .MsgPB.EMsgType msgType = 2 [default = _MSG_ITEM_RENT_ITEMPACKET_RESULT_GS2C];
  if (has_msgtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->msgtype(), target);
  }

  // optional .MsgPB.RENT_ITEMPACKET_RESULT Result = 3;
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->result(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.MsgItemRentItemPacketResultGS2C)
  return target;
}

int MsgItemRentItemPacketResultGS2C::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 SerialID = 1;
    if (has_serialid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->serialid());
    }

    // optional .MsgPB.EMsgType msgType = 2 [default = _MSG_ITEM_RENT_ITEMPACKET_RESULT_GS2C];
    if (has_msgtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgtype());
    }

    // optional .MsgPB.RENT_ITEMPACKET_RESULT Result = 3;
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->result());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgItemRentItemPacketResultGS2C::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgItemRentItemPacketResultGS2C* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgItemRentItemPacketResultGS2C*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgItemRentItemPacketResultGS2C::MergeFrom(const MsgItemRentItemPacketResultGS2C& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_serialid()) {
      set_serialid(from.serialid());
    }
    if (from.has_msgtype()) {
      set_msgtype(from.msgtype());
    }
    if (from.has_result()) {
      set_result(from.result());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgItemRentItemPacketResultGS2C::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgItemRentItemPacketResultGS2C::CopyFrom(const MsgItemRentItemPacketResultGS2C& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgItemRentItemPacketResultGS2C::IsInitialized() const {

  return true;
}

void MsgItemRentItemPacketResultGS2C::Swap(MsgItemRentItemPacketResultGS2C* other) {
  if (other != this) {
    std::swap(serialid_, other->serialid_);
    std::swap(msgtype_, other->msgtype_);
    std::swap(result_, other->result_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgItemRentItemPacketResultGS2C::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgItemRentItemPacketResultGS2C_descriptor_;
  metadata.reflection = MsgItemRentItemPacketResultGS2C_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgItemDelC2GS::kSerialIDFieldNumber;
const int MsgItemDelC2GS::kMsgTypeFieldNumber;
const int MsgItemDelC2GS::kUuidFieldNumber;
const int MsgItemDelC2GS::kIggidFieldNumber;
#endif  // !_MSC_VER

MsgItemDelC2GS::MsgItemDelC2GS()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.MsgItemDelC2GS)
}

void MsgItemDelC2GS::InitAsDefaultInstance() {
}

MsgItemDelC2GS::MsgItemDelC2GS(const MsgItemDelC2GS& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.MsgItemDelC2GS)
}

void MsgItemDelC2GS::SharedCtor() {
  _cached_size_ = 0;
  serialid_ = 0;
  msgtype_ = 1211;
  uuid_ = GOOGLE_LONGLONG(0);
  iggid_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgItemDelC2GS::~MsgItemDelC2GS() {
  // @@protoc_insertion_point(destructor:MsgPB.MsgItemDelC2GS)
  SharedDtor();
}

void MsgItemDelC2GS::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgItemDelC2GS::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgItemDelC2GS::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgItemDelC2GS_descriptor_;
}

const MsgItemDelC2GS& MsgItemDelC2GS::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgItem_2eproto();
  return *default_instance_;
}

MsgItemDelC2GS* MsgItemDelC2GS::default_instance_ = NULL;

MsgItemDelC2GS* MsgItemDelC2GS::New() const {
  return new MsgItemDelC2GS;
}

void MsgItemDelC2GS::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<MsgItemDelC2GS*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 15) {
    ZR_(uuid_, iggid_);
    serialid_ = 0;
    msgtype_ = 1211;
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgItemDelC2GS::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.MsgItemDelC2GS)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 SerialID = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &serialid_)));
          set_has_serialid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_msgType;
        break;
      }

      // optional .MsgPB.EMsgType msgType = 2 [default = _MSG_ITEM_DEL_C2GS];
      case 2: {
        if (tag == 16) {
         parse_msgType:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::EMsgType_IsValid(value)) {
            set_msgtype(static_cast< ::MsgPB::EMsgType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_uuid;
        break;
      }

      // optional int64 uuid = 3;
      case 3: {
        if (tag == 24) {
         parse_uuid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &uuid_)));
          set_has_uuid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_iggid;
        break;
      }

      // optional int64 iggid = 4;
      case 4: {
        if (tag == 32) {
         parse_iggid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &iggid_)));
          set_has_iggid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.MsgItemDelC2GS)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.MsgItemDelC2GS)
  return false;
#undef DO_
}

void MsgItemDelC2GS::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.MsgItemDelC2GS)
  // optional int32 SerialID = 1;
  if (has_serialid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->serialid(), output);
  }

  // optional .MsgPB.EMsgType msgType = 2 [default = _MSG_ITEM_DEL_C2GS];
  if (has_msgtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->msgtype(), output);
  }

  // optional int64 uuid = 3;
  if (has_uuid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->uuid(), output);
  }

  // optional int64 iggid = 4;
  if (has_iggid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->iggid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.MsgItemDelC2GS)
}

::google::protobuf::uint8* MsgItemDelC2GS::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.MsgItemDelC2GS)
  // optional int32 SerialID = 1;
  if (has_serialid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->serialid(), target);
  }

  // optional .MsgPB.EMsgType msgType = 2 [default = _MSG_ITEM_DEL_C2GS];
  if (has_msgtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->msgtype(), target);
  }

  // optional int64 uuid = 3;
  if (has_uuid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->uuid(), target);
  }

  // optional int64 iggid = 4;
  if (has_iggid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->iggid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.MsgItemDelC2GS)
  return target;
}

int MsgItemDelC2GS::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 SerialID = 1;
    if (has_serialid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->serialid());
    }

    // optional .MsgPB.EMsgType msgType = 2 [default = _MSG_ITEM_DEL_C2GS];
    if (has_msgtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgtype());
    }

    // optional int64 uuid = 3;
    if (has_uuid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->uuid());
    }

    // optional int64 iggid = 4;
    if (has_iggid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->iggid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgItemDelC2GS::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgItemDelC2GS* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgItemDelC2GS*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgItemDelC2GS::MergeFrom(const MsgItemDelC2GS& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_serialid()) {
      set_serialid(from.serialid());
    }
    if (from.has_msgtype()) {
      set_msgtype(from.msgtype());
    }
    if (from.has_uuid()) {
      set_uuid(from.uuid());
    }
    if (from.has_iggid()) {
      set_iggid(from.iggid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgItemDelC2GS::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgItemDelC2GS::CopyFrom(const MsgItemDelC2GS& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgItemDelC2GS::IsInitialized() const {

  return true;
}

void MsgItemDelC2GS::Swap(MsgItemDelC2GS* other) {
  if (other != this) {
    std::swap(serialid_, other->serialid_);
    std::swap(msgtype_, other->msgtype_);
    std::swap(uuid_, other->uuid_);
    std::swap(iggid_, other->iggid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgItemDelC2GS::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgItemDelC2GS_descriptor_;
  metadata.reflection = MsgItemDelC2GS_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgItemDelResultGS2C::kSerialIDFieldNumber;
const int MsgItemDelResultGS2C::kMsgTypeFieldNumber;
const int MsgItemDelResultGS2C::kResultFieldNumber;
#endif  // !_MSC_VER

MsgItemDelResultGS2C::MsgItemDelResultGS2C()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.MsgItemDelResultGS2C)
}

void MsgItemDelResultGS2C::InitAsDefaultInstance() {
}

MsgItemDelResultGS2C::MsgItemDelResultGS2C(const MsgItemDelResultGS2C& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.MsgItemDelResultGS2C)
}

void MsgItemDelResultGS2C::SharedCtor() {
  _cached_size_ = 0;
  serialid_ = 0;
  msgtype_ = 1212;
  result_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgItemDelResultGS2C::~MsgItemDelResultGS2C() {
  // @@protoc_insertion_point(destructor:MsgPB.MsgItemDelResultGS2C)
  SharedDtor();
}

void MsgItemDelResultGS2C::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgItemDelResultGS2C::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgItemDelResultGS2C::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgItemDelResultGS2C_descriptor_;
}

const MsgItemDelResultGS2C& MsgItemDelResultGS2C::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgItem_2eproto();
  return *default_instance_;
}

MsgItemDelResultGS2C* MsgItemDelResultGS2C::default_instance_ = NULL;

MsgItemDelResultGS2C* MsgItemDelResultGS2C::New() const {
  return new MsgItemDelResultGS2C;
}

void MsgItemDelResultGS2C::Clear() {
  if (_has_bits_[0 / 32] & 7) {
    serialid_ = 0;
    msgtype_ = 1212;
    result_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgItemDelResultGS2C::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.MsgItemDelResultGS2C)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 SerialID = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &serialid_)));
          set_has_serialid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_msgType;
        break;
      }

      // optional .MsgPB.EMsgType msgType = 2 [default = _MSG_ITEM_DEL_RESULT_GS2C];
      case 2: {
        if (tag == 16) {
         parse_msgType:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::EMsgType_IsValid(value)) {
            set_msgtype(static_cast< ::MsgPB::EMsgType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_Result;
        break;
      }

      // optional .MsgPB.ITEM_DEL_RESULT Result = 3;
      case 3: {
        if (tag == 24) {
         parse_Result:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::ITEM_DEL_RESULT_IsValid(value)) {
            set_result(static_cast< ::MsgPB::ITEM_DEL_RESULT >(value));
          } else {
            mutable_unknown_fields()->AddVarint(3, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.MsgItemDelResultGS2C)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.MsgItemDelResultGS2C)
  return false;
#undef DO_
}

void MsgItemDelResultGS2C::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.MsgItemDelResultGS2C)
  // optional int32 SerialID = 1;
  if (has_serialid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->serialid(), output);
  }

  // optional .MsgPB.EMsgType msgType = 2 [default = _MSG_ITEM_DEL_RESULT_GS2C];
  if (has_msgtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->msgtype(), output);
  }

  // optional .MsgPB.ITEM_DEL_RESULT Result = 3;
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->result(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.MsgItemDelResultGS2C)
}

::google::protobuf::uint8* MsgItemDelResultGS2C::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.MsgItemDelResultGS2C)
  // optional int32 SerialID = 1;
  if (has_serialid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->serialid(), target);
  }

  // optional .MsgPB.EMsgType msgType = 2 [default = _MSG_ITEM_DEL_RESULT_GS2C];
  if (has_msgtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->msgtype(), target);
  }

  // optional .MsgPB.ITEM_DEL_RESULT Result = 3;
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->result(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.MsgItemDelResultGS2C)
  return target;
}

int MsgItemDelResultGS2C::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 SerialID = 1;
    if (has_serialid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->serialid());
    }

    // optional .MsgPB.EMsgType msgType = 2 [default = _MSG_ITEM_DEL_RESULT_GS2C];
    if (has_msgtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgtype());
    }

    // optional .MsgPB.ITEM_DEL_RESULT Result = 3;
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->result());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgItemDelResultGS2C::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgItemDelResultGS2C* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgItemDelResultGS2C*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgItemDelResultGS2C::MergeFrom(const MsgItemDelResultGS2C& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_serialid()) {
      set_serialid(from.serialid());
    }
    if (from.has_msgtype()) {
      set_msgtype(from.msgtype());
    }
    if (from.has_result()) {
      set_result(from.result());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgItemDelResultGS2C::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgItemDelResultGS2C::CopyFrom(const MsgItemDelResultGS2C& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgItemDelResultGS2C::IsInitialized() const {

  return true;
}

void MsgItemDelResultGS2C::Swap(MsgItemDelResultGS2C* other) {
  if (other != this) {
    std::swap(serialid_, other->serialid_);
    std::swap(msgtype_, other->msgtype_);
    std::swap(result_, other->result_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgItemDelResultGS2C::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgItemDelResultGS2C_descriptor_;
  metadata.reflection = MsgItemDelResultGS2C_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgItemDelRecoveryC2GS::kSerialIDFieldNumber;
const int MsgItemDelRecoveryC2GS::kMsgTypeFieldNumber;
const int MsgItemDelRecoveryC2GS::kBagToFieldNumber;
const int MsgItemDelRecoveryC2GS::kPosToFieldNumber;
const int MsgItemDelRecoveryC2GS::kIggidFieldNumber;
#endif  // !_MSC_VER

MsgItemDelRecoveryC2GS::MsgItemDelRecoveryC2GS()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.MsgItemDelRecoveryC2GS)
}

void MsgItemDelRecoveryC2GS::InitAsDefaultInstance() {
}

MsgItemDelRecoveryC2GS::MsgItemDelRecoveryC2GS(const MsgItemDelRecoveryC2GS& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.MsgItemDelRecoveryC2GS)
}

void MsgItemDelRecoveryC2GS::SharedCtor() {
  _cached_size_ = 0;
  serialid_ = 0;
  msgtype_ = 1213;
  bagto_ = 0;
  posto_ = 0;
  iggid_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgItemDelRecoveryC2GS::~MsgItemDelRecoveryC2GS() {
  // @@protoc_insertion_point(destructor:MsgPB.MsgItemDelRecoveryC2GS)
  SharedDtor();
}

void MsgItemDelRecoveryC2GS::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgItemDelRecoveryC2GS::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgItemDelRecoveryC2GS::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgItemDelRecoveryC2GS_descriptor_;
}

const MsgItemDelRecoveryC2GS& MsgItemDelRecoveryC2GS::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgItem_2eproto();
  return *default_instance_;
}

MsgItemDelRecoveryC2GS* MsgItemDelRecoveryC2GS::default_instance_ = NULL;

MsgItemDelRecoveryC2GS* MsgItemDelRecoveryC2GS::New() const {
  return new MsgItemDelRecoveryC2GS;
}

void MsgItemDelRecoveryC2GS::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<MsgItemDelRecoveryC2GS*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 31) {
    ZR_(bagto_, iggid_);
    serialid_ = 0;
    msgtype_ = 1213;
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgItemDelRecoveryC2GS::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.MsgItemDelRecoveryC2GS)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 SerialID = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &serialid_)));
          set_has_serialid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_msgType;
        break;
      }

      // optional .MsgPB.EMsgType msgType = 2 [default = _MSG_ITEM_DEL_RECOVERY_C2GS];
      case 2: {
        if (tag == 16) {
         parse_msgType:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::EMsgType_IsValid(value)) {
            set_msgtype(static_cast< ::MsgPB::EMsgType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_BagTo;
        break;
      }

      // optional .MsgPB.PACKET_TYPE BagTo = 3;
      case 3: {
        if (tag == 24) {
         parse_BagTo:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::PACKET_TYPE_IsValid(value)) {
            set_bagto(static_cast< ::MsgPB::PACKET_TYPE >(value));
          } else {
            mutable_unknown_fields()->AddVarint(3, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_PosTo;
        break;
      }

      // optional int32 PosTo = 4;
      case 4: {
        if (tag == 32) {
         parse_PosTo:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &posto_)));
          set_has_posto();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_iggid;
        break;
      }

      // optional int64 iggid = 5;
      case 5: {
        if (tag == 40) {
         parse_iggid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &iggid_)));
          set_has_iggid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.MsgItemDelRecoveryC2GS)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.MsgItemDelRecoveryC2GS)
  return false;
#undef DO_
}

void MsgItemDelRecoveryC2GS::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.MsgItemDelRecoveryC2GS)
  // optional int32 SerialID = 1;
  if (has_serialid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->serialid(), output);
  }

  // optional .MsgPB.EMsgType msgType = 2 [default = _MSG_ITEM_DEL_RECOVERY_C2GS];
  if (has_msgtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->msgtype(), output);
  }

  // optional .MsgPB.PACKET_TYPE BagTo = 3;
  if (has_bagto()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->bagto(), output);
  }

  // optional int32 PosTo = 4;
  if (has_posto()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->posto(), output);
  }

  // optional int64 iggid = 5;
  if (has_iggid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(5, this->iggid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.MsgItemDelRecoveryC2GS)
}

::google::protobuf::uint8* MsgItemDelRecoveryC2GS::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.MsgItemDelRecoveryC2GS)
  // optional int32 SerialID = 1;
  if (has_serialid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->serialid(), target);
  }

  // optional .MsgPB.EMsgType msgType = 2 [default = _MSG_ITEM_DEL_RECOVERY_C2GS];
  if (has_msgtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->msgtype(), target);
  }

  // optional .MsgPB.PACKET_TYPE BagTo = 3;
  if (has_bagto()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->bagto(), target);
  }

  // optional int32 PosTo = 4;
  if (has_posto()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->posto(), target);
  }

  // optional int64 iggid = 5;
  if (has_iggid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(5, this->iggid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.MsgItemDelRecoveryC2GS)
  return target;
}

int MsgItemDelRecoveryC2GS::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 SerialID = 1;
    if (has_serialid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->serialid());
    }

    // optional .MsgPB.EMsgType msgType = 2 [default = _MSG_ITEM_DEL_RECOVERY_C2GS];
    if (has_msgtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgtype());
    }

    // optional .MsgPB.PACKET_TYPE BagTo = 3;
    if (has_bagto()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->bagto());
    }

    // optional int32 PosTo = 4;
    if (has_posto()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->posto());
    }

    // optional int64 iggid = 5;
    if (has_iggid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->iggid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgItemDelRecoveryC2GS::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgItemDelRecoveryC2GS* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgItemDelRecoveryC2GS*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgItemDelRecoveryC2GS::MergeFrom(const MsgItemDelRecoveryC2GS& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_serialid()) {
      set_serialid(from.serialid());
    }
    if (from.has_msgtype()) {
      set_msgtype(from.msgtype());
    }
    if (from.has_bagto()) {
      set_bagto(from.bagto());
    }
    if (from.has_posto()) {
      set_posto(from.posto());
    }
    if (from.has_iggid()) {
      set_iggid(from.iggid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgItemDelRecoveryC2GS::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgItemDelRecoveryC2GS::CopyFrom(const MsgItemDelRecoveryC2GS& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgItemDelRecoveryC2GS::IsInitialized() const {

  return true;
}

void MsgItemDelRecoveryC2GS::Swap(MsgItemDelRecoveryC2GS* other) {
  if (other != this) {
    std::swap(serialid_, other->serialid_);
    std::swap(msgtype_, other->msgtype_);
    std::swap(bagto_, other->bagto_);
    std::swap(posto_, other->posto_);
    std::swap(iggid_, other->iggid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgItemDelRecoveryC2GS::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgItemDelRecoveryC2GS_descriptor_;
  metadata.reflection = MsgItemDelRecoveryC2GS_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgItemDelRecoveryResultGS2C::kSerialIDFieldNumber;
const int MsgItemDelRecoveryResultGS2C::kMsgTypeFieldNumber;
const int MsgItemDelRecoveryResultGS2C::kResultFieldNumber;
#endif  // !_MSC_VER

MsgItemDelRecoveryResultGS2C::MsgItemDelRecoveryResultGS2C()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.MsgItemDelRecoveryResultGS2C)
}

void MsgItemDelRecoveryResultGS2C::InitAsDefaultInstance() {
}

MsgItemDelRecoveryResultGS2C::MsgItemDelRecoveryResultGS2C(const MsgItemDelRecoveryResultGS2C& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.MsgItemDelRecoveryResultGS2C)
}

void MsgItemDelRecoveryResultGS2C::SharedCtor() {
  _cached_size_ = 0;
  serialid_ = 0;
  msgtype_ = 1214;
  result_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgItemDelRecoveryResultGS2C::~MsgItemDelRecoveryResultGS2C() {
  // @@protoc_insertion_point(destructor:MsgPB.MsgItemDelRecoveryResultGS2C)
  SharedDtor();
}

void MsgItemDelRecoveryResultGS2C::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgItemDelRecoveryResultGS2C::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgItemDelRecoveryResultGS2C::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgItemDelRecoveryResultGS2C_descriptor_;
}

const MsgItemDelRecoveryResultGS2C& MsgItemDelRecoveryResultGS2C::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgItem_2eproto();
  return *default_instance_;
}

MsgItemDelRecoveryResultGS2C* MsgItemDelRecoveryResultGS2C::default_instance_ = NULL;

MsgItemDelRecoveryResultGS2C* MsgItemDelRecoveryResultGS2C::New() const {
  return new MsgItemDelRecoveryResultGS2C;
}

void MsgItemDelRecoveryResultGS2C::Clear() {
  if (_has_bits_[0 / 32] & 7) {
    serialid_ = 0;
    msgtype_ = 1214;
    result_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgItemDelRecoveryResultGS2C::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.MsgItemDelRecoveryResultGS2C)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 SerialID = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &serialid_)));
          set_has_serialid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_msgType;
        break;
      }

      // optional .MsgPB.EMsgType msgType = 2 [default = _MSG_ITEM_DEL_RECOVERY_RESULT_GS2C];
      case 2: {
        if (tag == 16) {
         parse_msgType:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::EMsgType_IsValid(value)) {
            set_msgtype(static_cast< ::MsgPB::EMsgType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_Result;
        break;
      }

      // optional .MsgPB.ITEM_DEL_RECOVERY_RESULT Result = 3;
      case 3: {
        if (tag == 24) {
         parse_Result:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::ITEM_DEL_RECOVERY_RESULT_IsValid(value)) {
            set_result(static_cast< ::MsgPB::ITEM_DEL_RECOVERY_RESULT >(value));
          } else {
            mutable_unknown_fields()->AddVarint(3, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.MsgItemDelRecoveryResultGS2C)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.MsgItemDelRecoveryResultGS2C)
  return false;
#undef DO_
}

void MsgItemDelRecoveryResultGS2C::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.MsgItemDelRecoveryResultGS2C)
  // optional int32 SerialID = 1;
  if (has_serialid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->serialid(), output);
  }

  // optional .MsgPB.EMsgType msgType = 2 [default = _MSG_ITEM_DEL_RECOVERY_RESULT_GS2C];
  if (has_msgtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->msgtype(), output);
  }

  // optional .MsgPB.ITEM_DEL_RECOVERY_RESULT Result = 3;
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->result(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.MsgItemDelRecoveryResultGS2C)
}

::google::protobuf::uint8* MsgItemDelRecoveryResultGS2C::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.MsgItemDelRecoveryResultGS2C)
  // optional int32 SerialID = 1;
  if (has_serialid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->serialid(), target);
  }

  // optional .MsgPB.EMsgType msgType = 2 [default = _MSG_ITEM_DEL_RECOVERY_RESULT_GS2C];
  if (has_msgtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->msgtype(), target);
  }

  // optional .MsgPB.ITEM_DEL_RECOVERY_RESULT Result = 3;
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->result(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.MsgItemDelRecoveryResultGS2C)
  return target;
}

int MsgItemDelRecoveryResultGS2C::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 SerialID = 1;
    if (has_serialid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->serialid());
    }

    // optional .MsgPB.EMsgType msgType = 2 [default = _MSG_ITEM_DEL_RECOVERY_RESULT_GS2C];
    if (has_msgtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgtype());
    }

    // optional .MsgPB.ITEM_DEL_RECOVERY_RESULT Result = 3;
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->result());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgItemDelRecoveryResultGS2C::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgItemDelRecoveryResultGS2C* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgItemDelRecoveryResultGS2C*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgItemDelRecoveryResultGS2C::MergeFrom(const MsgItemDelRecoveryResultGS2C& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_serialid()) {
      set_serialid(from.serialid());
    }
    if (from.has_msgtype()) {
      set_msgtype(from.msgtype());
    }
    if (from.has_result()) {
      set_result(from.result());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgItemDelRecoveryResultGS2C::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgItemDelRecoveryResultGS2C::CopyFrom(const MsgItemDelRecoveryResultGS2C& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgItemDelRecoveryResultGS2C::IsInitialized() const {

  return true;
}

void MsgItemDelRecoveryResultGS2C::Swap(MsgItemDelRecoveryResultGS2C* other) {
  if (other != this) {
    std::swap(serialid_, other->serialid_);
    std::swap(msgtype_, other->msgtype_);
    std::swap(result_, other->result_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgItemDelRecoveryResultGS2C::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgItemDelRecoveryResultGS2C_descriptor_;
  metadata.reflection = MsgItemDelRecoveryResultGS2C_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgItemEquipC2GS::kSerialIDFieldNumber;
const int MsgItemEquipC2GS::kMsgTypeFieldNumber;
const int MsgItemEquipC2GS::kUuidFieldNumber;
const int MsgItemEquipC2GS::kBodyPacketPosFieldNumber;
const int MsgItemEquipC2GS::kEquipPacketPosFieldNumber;
const int MsgItemEquipC2GS::kIggidFieldNumber;
#endif  // !_MSC_VER

MsgItemEquipC2GS::MsgItemEquipC2GS()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.MsgItemEquipC2GS)
}

void MsgItemEquipC2GS::InitAsDefaultInstance() {
}

MsgItemEquipC2GS::MsgItemEquipC2GS(const MsgItemEquipC2GS& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.MsgItemEquipC2GS)
}

void MsgItemEquipC2GS::SharedCtor() {
  _cached_size_ = 0;
  serialid_ = GOOGLE_LONGLONG(0);
  msgtype_ = 1215;
  uuid_ = GOOGLE_LONGLONG(0);
  bodypacketpos_ = 0;
  equippacketpos_ = 0;
  iggid_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgItemEquipC2GS::~MsgItemEquipC2GS() {
  // @@protoc_insertion_point(destructor:MsgPB.MsgItemEquipC2GS)
  SharedDtor();
}

void MsgItemEquipC2GS::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgItemEquipC2GS::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgItemEquipC2GS::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgItemEquipC2GS_descriptor_;
}

const MsgItemEquipC2GS& MsgItemEquipC2GS::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgItem_2eproto();
  return *default_instance_;
}

MsgItemEquipC2GS* MsgItemEquipC2GS::default_instance_ = NULL;

MsgItemEquipC2GS* MsgItemEquipC2GS::New() const {
  return new MsgItemEquipC2GS;
}

void MsgItemEquipC2GS::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<MsgItemEquipC2GS*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 63) {
    ZR_(serialid_, uuid_);
    ZR_(bodypacketpos_, equippacketpos_);
    msgtype_ = 1215;
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgItemEquipC2GS::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.MsgItemEquipC2GS)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 SerialID = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &serialid_)));
          set_has_serialid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_msgType;
        break;
      }

      // optional .MsgPB.EMsgType msgType = 2 [default = _MSG_ITEM_EQUIP_C2GS];
      case 2: {
        if (tag == 16) {
         parse_msgType:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::EMsgType_IsValid(value)) {
            set_msgtype(static_cast< ::MsgPB::EMsgType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_uuid;
        break;
      }

      // optional int64 uuid = 3;
      case 3: {
        if (tag == 24) {
         parse_uuid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &uuid_)));
          set_has_uuid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_BodyPacketPos;
        break;
      }

      // optional int32 BodyPacketPos = 4;
      case 4: {
        if (tag == 32) {
         parse_BodyPacketPos:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &bodypacketpos_)));
          set_has_bodypacketpos();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_EquipPacketPos;
        break;
      }

      // optional int32 EquipPacketPos = 5;
      case 5: {
        if (tag == 40) {
         parse_EquipPacketPos:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &equippacketpos_)));
          set_has_equippacketpos();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_iggid;
        break;
      }

      // optional int64 iggid = 6;
      case 6: {
        if (tag == 48) {
         parse_iggid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &iggid_)));
          set_has_iggid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.MsgItemEquipC2GS)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.MsgItemEquipC2GS)
  return false;
#undef DO_
}

void MsgItemEquipC2GS::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.MsgItemEquipC2GS)
  // optional int64 SerialID = 1;
  if (has_serialid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->serialid(), output);
  }

  // optional .MsgPB.EMsgType msgType = 2 [default = _MSG_ITEM_EQUIP_C2GS];
  if (has_msgtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->msgtype(), output);
  }

  // optional int64 uuid = 3;
  if (has_uuid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->uuid(), output);
  }

  // optional int32 BodyPacketPos = 4;
  if (has_bodypacketpos()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->bodypacketpos(), output);
  }

  // optional int32 EquipPacketPos = 5;
  if (has_equippacketpos()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->equippacketpos(), output);
  }

  // optional int64 iggid = 6;
  if (has_iggid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(6, this->iggid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.MsgItemEquipC2GS)
}

::google::protobuf::uint8* MsgItemEquipC2GS::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.MsgItemEquipC2GS)
  // optional int64 SerialID = 1;
  if (has_serialid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->serialid(), target);
  }

  // optional .MsgPB.EMsgType msgType = 2 [default = _MSG_ITEM_EQUIP_C2GS];
  if (has_msgtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->msgtype(), target);
  }

  // optional int64 uuid = 3;
  if (has_uuid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->uuid(), target);
  }

  // optional int32 BodyPacketPos = 4;
  if (has_bodypacketpos()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->bodypacketpos(), target);
  }

  // optional int32 EquipPacketPos = 5;
  if (has_equippacketpos()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->equippacketpos(), target);
  }

  // optional int64 iggid = 6;
  if (has_iggid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(6, this->iggid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.MsgItemEquipC2GS)
  return target;
}

int MsgItemEquipC2GS::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 SerialID = 1;
    if (has_serialid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->serialid());
    }

    // optional .MsgPB.EMsgType msgType = 2 [default = _MSG_ITEM_EQUIP_C2GS];
    if (has_msgtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgtype());
    }

    // optional int64 uuid = 3;
    if (has_uuid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->uuid());
    }

    // optional int32 BodyPacketPos = 4;
    if (has_bodypacketpos()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->bodypacketpos());
    }

    // optional int32 EquipPacketPos = 5;
    if (has_equippacketpos()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->equippacketpos());
    }

    // optional int64 iggid = 6;
    if (has_iggid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->iggid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgItemEquipC2GS::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgItemEquipC2GS* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgItemEquipC2GS*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgItemEquipC2GS::MergeFrom(const MsgItemEquipC2GS& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_serialid()) {
      set_serialid(from.serialid());
    }
    if (from.has_msgtype()) {
      set_msgtype(from.msgtype());
    }
    if (from.has_uuid()) {
      set_uuid(from.uuid());
    }
    if (from.has_bodypacketpos()) {
      set_bodypacketpos(from.bodypacketpos());
    }
    if (from.has_equippacketpos()) {
      set_equippacketpos(from.equippacketpos());
    }
    if (from.has_iggid()) {
      set_iggid(from.iggid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgItemEquipC2GS::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgItemEquipC2GS::CopyFrom(const MsgItemEquipC2GS& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgItemEquipC2GS::IsInitialized() const {

  return true;
}

void MsgItemEquipC2GS::Swap(MsgItemEquipC2GS* other) {
  if (other != this) {
    std::swap(serialid_, other->serialid_);
    std::swap(msgtype_, other->msgtype_);
    std::swap(uuid_, other->uuid_);
    std::swap(bodypacketpos_, other->bodypacketpos_);
    std::swap(equippacketpos_, other->equippacketpos_);
    std::swap(iggid_, other->iggid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgItemEquipC2GS::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgItemEquipC2GS_descriptor_;
  metadata.reflection = MsgItemEquipC2GS_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgItemEquipResultC2GS::kSerialIDFieldNumber;
const int MsgItemEquipResultC2GS::kMsgTypeFieldNumber;
const int MsgItemEquipResultC2GS::kResultFieldNumber;
const int MsgItemEquipResultC2GS::kIggidFieldNumber;
const int MsgItemEquipResultC2GS::kEquipPacketPosFieldNumber;
#endif  // !_MSC_VER

MsgItemEquipResultC2GS::MsgItemEquipResultC2GS()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.MsgItemEquipResultC2GS)
}

void MsgItemEquipResultC2GS::InitAsDefaultInstance() {
}

MsgItemEquipResultC2GS::MsgItemEquipResultC2GS(const MsgItemEquipResultC2GS& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.MsgItemEquipResultC2GS)
}

void MsgItemEquipResultC2GS::SharedCtor() {
  _cached_size_ = 0;
  serialid_ = GOOGLE_LONGLONG(0);
  msgtype_ = 1216;
  result_ = 0;
  iggid_ = GOOGLE_LONGLONG(0);
  equippacketpos_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgItemEquipResultC2GS::~MsgItemEquipResultC2GS() {
  // @@protoc_insertion_point(destructor:MsgPB.MsgItemEquipResultC2GS)
  SharedDtor();
}

void MsgItemEquipResultC2GS::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgItemEquipResultC2GS::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgItemEquipResultC2GS::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgItemEquipResultC2GS_descriptor_;
}

const MsgItemEquipResultC2GS& MsgItemEquipResultC2GS::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgItem_2eproto();
  return *default_instance_;
}

MsgItemEquipResultC2GS* MsgItemEquipResultC2GS::default_instance_ = NULL;

MsgItemEquipResultC2GS* MsgItemEquipResultC2GS::New() const {
  return new MsgItemEquipResultC2GS;
}

void MsgItemEquipResultC2GS::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<MsgItemEquipResultC2GS*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 31) {
    ZR_(result_, equippacketpos_);
    serialid_ = GOOGLE_LONGLONG(0);
    msgtype_ = 1216;
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgItemEquipResultC2GS::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.MsgItemEquipResultC2GS)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 SerialID = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &serialid_)));
          set_has_serialid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_msgType;
        break;
      }

      // optional .MsgPB.EMsgType msgType = 2 [default = _MSG_ITEM_EQUIP_RESULT_GS2C];
      case 2: {
        if (tag == 16) {
         parse_msgType:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::EMsgType_IsValid(value)) {
            set_msgtype(static_cast< ::MsgPB::EMsgType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_Result;
        break;
      }

      // optional .MsgPB.ITEM_EQUIP_RESULT Result = 3;
      case 3: {
        if (tag == 24) {
         parse_Result:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::ITEM_EQUIP_RESULT_IsValid(value)) {
            set_result(static_cast< ::MsgPB::ITEM_EQUIP_RESULT >(value));
          } else {
            mutable_unknown_fields()->AddVarint(3, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_iggid;
        break;
      }

      // optional int64 iggid = 4;
      case 4: {
        if (tag == 32) {
         parse_iggid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &iggid_)));
          set_has_iggid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_EquipPacketPos;
        break;
      }

      // optional int32 EquipPacketPos = 5;
      case 5: {
        if (tag == 40) {
         parse_EquipPacketPos:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &equippacketpos_)));
          set_has_equippacketpos();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.MsgItemEquipResultC2GS)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.MsgItemEquipResultC2GS)
  return false;
#undef DO_
}

void MsgItemEquipResultC2GS::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.MsgItemEquipResultC2GS)
  // optional int64 SerialID = 1;
  if (has_serialid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->serialid(), output);
  }

  // optional .MsgPB.EMsgType msgType = 2 [default = _MSG_ITEM_EQUIP_RESULT_GS2C];
  if (has_msgtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->msgtype(), output);
  }

  // optional .MsgPB.ITEM_EQUIP_RESULT Result = 3;
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->result(), output);
  }

  // optional int64 iggid = 4;
  if (has_iggid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->iggid(), output);
  }

  // optional int32 EquipPacketPos = 5;
  if (has_equippacketpos()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->equippacketpos(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.MsgItemEquipResultC2GS)
}

::google::protobuf::uint8* MsgItemEquipResultC2GS::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.MsgItemEquipResultC2GS)
  // optional int64 SerialID = 1;
  if (has_serialid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->serialid(), target);
  }

  // optional .MsgPB.EMsgType msgType = 2 [default = _MSG_ITEM_EQUIP_RESULT_GS2C];
  if (has_msgtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->msgtype(), target);
  }

  // optional .MsgPB.ITEM_EQUIP_RESULT Result = 3;
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->result(), target);
  }

  // optional int64 iggid = 4;
  if (has_iggid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->iggid(), target);
  }

  // optional int32 EquipPacketPos = 5;
  if (has_equippacketpos()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->equippacketpos(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.MsgItemEquipResultC2GS)
  return target;
}

int MsgItemEquipResultC2GS::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 SerialID = 1;
    if (has_serialid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->serialid());
    }

    // optional .MsgPB.EMsgType msgType = 2 [default = _MSG_ITEM_EQUIP_RESULT_GS2C];
    if (has_msgtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgtype());
    }

    // optional .MsgPB.ITEM_EQUIP_RESULT Result = 3;
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->result());
    }

    // optional int64 iggid = 4;
    if (has_iggid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->iggid());
    }

    // optional int32 EquipPacketPos = 5;
    if (has_equippacketpos()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->equippacketpos());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgItemEquipResultC2GS::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgItemEquipResultC2GS* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgItemEquipResultC2GS*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgItemEquipResultC2GS::MergeFrom(const MsgItemEquipResultC2GS& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_serialid()) {
      set_serialid(from.serialid());
    }
    if (from.has_msgtype()) {
      set_msgtype(from.msgtype());
    }
    if (from.has_result()) {
      set_result(from.result());
    }
    if (from.has_iggid()) {
      set_iggid(from.iggid());
    }
    if (from.has_equippacketpos()) {
      set_equippacketpos(from.equippacketpos());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgItemEquipResultC2GS::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgItemEquipResultC2GS::CopyFrom(const MsgItemEquipResultC2GS& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgItemEquipResultC2GS::IsInitialized() const {

  return true;
}

void MsgItemEquipResultC2GS::Swap(MsgItemEquipResultC2GS* other) {
  if (other != this) {
    std::swap(serialid_, other->serialid_);
    std::swap(msgtype_, other->msgtype_);
    std::swap(result_, other->result_);
    std::swap(iggid_, other->iggid_);
    std::swap(equippacketpos_, other->equippacketpos_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgItemEquipResultC2GS::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgItemEquipResultC2GS_descriptor_;
  metadata.reflection = MsgItemEquipResultC2GS_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgItemPlayerEquipNotifyS2C::kSerialIDFieldNumber;
const int MsgItemPlayerEquipNotifyS2C::kMsgTypeFieldNumber;
const int MsgItemPlayerEquipNotifyS2C::kIggidFieldNumber;
const int MsgItemPlayerEquipNotifyS2C::kMapobjectidFieldNumber;
const int MsgItemPlayerEquipNotifyS2C::kEquipInfoFieldNumber;
#endif  // !_MSC_VER

MsgItemPlayerEquipNotifyS2C::MsgItemPlayerEquipNotifyS2C()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.MsgItemPlayerEquipNotifyS2C)
}

void MsgItemPlayerEquipNotifyS2C::InitAsDefaultInstance() {
  equip_info_ = const_cast< ::MsgPB::ServerEquipInfo*>(&::MsgPB::ServerEquipInfo::default_instance());
}

MsgItemPlayerEquipNotifyS2C::MsgItemPlayerEquipNotifyS2C(const MsgItemPlayerEquipNotifyS2C& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.MsgItemPlayerEquipNotifyS2C)
}

void MsgItemPlayerEquipNotifyS2C::SharedCtor() {
  _cached_size_ = 0;
  serialid_ = 0;
  msgtype_ = 1223;
  iggid_ = GOOGLE_LONGLONG(0);
  mapobjectid_ = 0;
  equip_info_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgItemPlayerEquipNotifyS2C::~MsgItemPlayerEquipNotifyS2C() {
  // @@protoc_insertion_point(destructor:MsgPB.MsgItemPlayerEquipNotifyS2C)
  SharedDtor();
}

void MsgItemPlayerEquipNotifyS2C::SharedDtor() {
  if (this != default_instance_) {
    delete equip_info_;
  }
}

void MsgItemPlayerEquipNotifyS2C::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgItemPlayerEquipNotifyS2C::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgItemPlayerEquipNotifyS2C_descriptor_;
}

const MsgItemPlayerEquipNotifyS2C& MsgItemPlayerEquipNotifyS2C::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgItem_2eproto();
  return *default_instance_;
}

MsgItemPlayerEquipNotifyS2C* MsgItemPlayerEquipNotifyS2C::default_instance_ = NULL;

MsgItemPlayerEquipNotifyS2C* MsgItemPlayerEquipNotifyS2C::New() const {
  return new MsgItemPlayerEquipNotifyS2C;
}

void MsgItemPlayerEquipNotifyS2C::Clear() {
  if (_has_bits_[0 / 32] & 31) {
    serialid_ = 0;
    msgtype_ = 1223;
    iggid_ = GOOGLE_LONGLONG(0);
    mapobjectid_ = 0;
    if (has_equip_info()) {
      if (equip_info_ != NULL) equip_info_->::MsgPB::ServerEquipInfo::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgItemPlayerEquipNotifyS2C::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.MsgItemPlayerEquipNotifyS2C)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 SerialID = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &serialid_)));
          set_has_serialid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_msgType;
        break;
      }

      // optional .MsgPB.EMsgType msgType = 2 [default = _MSG_ITEM_PLAYER_EQUIP_NOTIFY_S2C];
      case 2: {
        if (tag == 16) {
         parse_msgType:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::EMsgType_IsValid(value)) {
            set_msgtype(static_cast< ::MsgPB::EMsgType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_iggid;
        break;
      }

      // optional int64 iggid = 3;
      case 3: {
        if (tag == 24) {
         parse_iggid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &iggid_)));
          set_has_iggid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_mapobjectid;
        break;
      }

      // optional int32 mapobjectid = 4;
      case 4: {
        if (tag == 32) {
         parse_mapobjectid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &mapobjectid_)));
          set_has_mapobjectid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_equip_info;
        break;
      }

      // optional .MsgPB.ServerEquipInfo equip_info = 5;
      case 5: {
        if (tag == 42) {
         parse_equip_info:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_equip_info()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.MsgItemPlayerEquipNotifyS2C)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.MsgItemPlayerEquipNotifyS2C)
  return false;
#undef DO_
}

void MsgItemPlayerEquipNotifyS2C::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.MsgItemPlayerEquipNotifyS2C)
  // optional int32 SerialID = 1;
  if (has_serialid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->serialid(), output);
  }

  // optional .MsgPB.EMsgType msgType = 2 [default = _MSG_ITEM_PLAYER_EQUIP_NOTIFY_S2C];
  if (has_msgtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->msgtype(), output);
  }

  // optional int64 iggid = 3;
  if (has_iggid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->iggid(), output);
  }

  // optional int32 mapobjectid = 4;
  if (has_mapobjectid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->mapobjectid(), output);
  }

  // optional .MsgPB.ServerEquipInfo equip_info = 5;
  if (has_equip_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->equip_info(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.MsgItemPlayerEquipNotifyS2C)
}

::google::protobuf::uint8* MsgItemPlayerEquipNotifyS2C::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.MsgItemPlayerEquipNotifyS2C)
  // optional int32 SerialID = 1;
  if (has_serialid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->serialid(), target);
  }

  // optional .MsgPB.EMsgType msgType = 2 [default = _MSG_ITEM_PLAYER_EQUIP_NOTIFY_S2C];
  if (has_msgtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->msgtype(), target);
  }

  // optional int64 iggid = 3;
  if (has_iggid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->iggid(), target);
  }

  // optional int32 mapobjectid = 4;
  if (has_mapobjectid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->mapobjectid(), target);
  }

  // optional .MsgPB.ServerEquipInfo equip_info = 5;
  if (has_equip_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->equip_info(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.MsgItemPlayerEquipNotifyS2C)
  return target;
}

int MsgItemPlayerEquipNotifyS2C::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 SerialID = 1;
    if (has_serialid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->serialid());
    }

    // optional .MsgPB.EMsgType msgType = 2 [default = _MSG_ITEM_PLAYER_EQUIP_NOTIFY_S2C];
    if (has_msgtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgtype());
    }

    // optional int64 iggid = 3;
    if (has_iggid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->iggid());
    }

    // optional int32 mapobjectid = 4;
    if (has_mapobjectid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->mapobjectid());
    }

    // optional .MsgPB.ServerEquipInfo equip_info = 5;
    if (has_equip_info()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->equip_info());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgItemPlayerEquipNotifyS2C::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgItemPlayerEquipNotifyS2C* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgItemPlayerEquipNotifyS2C*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgItemPlayerEquipNotifyS2C::MergeFrom(const MsgItemPlayerEquipNotifyS2C& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_serialid()) {
      set_serialid(from.serialid());
    }
    if (from.has_msgtype()) {
      set_msgtype(from.msgtype());
    }
    if (from.has_iggid()) {
      set_iggid(from.iggid());
    }
    if (from.has_mapobjectid()) {
      set_mapobjectid(from.mapobjectid());
    }
    if (from.has_equip_info()) {
      mutable_equip_info()->::MsgPB::ServerEquipInfo::MergeFrom(from.equip_info());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgItemPlayerEquipNotifyS2C::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgItemPlayerEquipNotifyS2C::CopyFrom(const MsgItemPlayerEquipNotifyS2C& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgItemPlayerEquipNotifyS2C::IsInitialized() const {

  return true;
}

void MsgItemPlayerEquipNotifyS2C::Swap(MsgItemPlayerEquipNotifyS2C* other) {
  if (other != this) {
    std::swap(serialid_, other->serialid_);
    std::swap(msgtype_, other->msgtype_);
    std::swap(iggid_, other->iggid_);
    std::swap(mapobjectid_, other->mapobjectid_);
    std::swap(equip_info_, other->equip_info_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgItemPlayerEquipNotifyS2C::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgItemPlayerEquipNotifyS2C_descriptor_;
  metadata.reflection = MsgItemPlayerEquipNotifyS2C_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgItemOtherPlayerChangeEquip_S2C::kMsgTypeFieldNumber;
const int MsgItemOtherPlayerChangeEquip_S2C::kIggidFieldNumber;
const int MsgItemOtherPlayerChangeEquip_S2C::kOtherPlayerMapobjectidFieldNumber;
const int MsgItemOtherPlayerChangeEquip_S2C::kItemDataFieldNumber;
const int MsgItemOtherPlayerChangeEquip_S2C::kTakeOffFieldNumber;
#endif  // !_MSC_VER

MsgItemOtherPlayerChangeEquip_S2C::MsgItemOtherPlayerChangeEquip_S2C()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.MsgItemOtherPlayerChangeEquip_S2C)
}

void MsgItemOtherPlayerChangeEquip_S2C::InitAsDefaultInstance() {
  itemdata_ = const_cast< ::MsgPB::MsgItemCommonData*>(&::MsgPB::MsgItemCommonData::default_instance());
}

MsgItemOtherPlayerChangeEquip_S2C::MsgItemOtherPlayerChangeEquip_S2C(const MsgItemOtherPlayerChangeEquip_S2C& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.MsgItemOtherPlayerChangeEquip_S2C)
}

void MsgItemOtherPlayerChangeEquip_S2C::SharedCtor() {
  _cached_size_ = 0;
  msgtype_ = 1224;
  iggid_ = GOOGLE_LONGLONG(0);
  other_player_mapobjectid_ = 0;
  itemdata_ = NULL;
  take_off_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgItemOtherPlayerChangeEquip_S2C::~MsgItemOtherPlayerChangeEquip_S2C() {
  // @@protoc_insertion_point(destructor:MsgPB.MsgItemOtherPlayerChangeEquip_S2C)
  SharedDtor();
}

void MsgItemOtherPlayerChangeEquip_S2C::SharedDtor() {
  if (this != default_instance_) {
    delete itemdata_;
  }
}

void MsgItemOtherPlayerChangeEquip_S2C::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgItemOtherPlayerChangeEquip_S2C::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgItemOtherPlayerChangeEquip_S2C_descriptor_;
}

const MsgItemOtherPlayerChangeEquip_S2C& MsgItemOtherPlayerChangeEquip_S2C::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgItem_2eproto();
  return *default_instance_;
}

MsgItemOtherPlayerChangeEquip_S2C* MsgItemOtherPlayerChangeEquip_S2C::default_instance_ = NULL;

MsgItemOtherPlayerChangeEquip_S2C* MsgItemOtherPlayerChangeEquip_S2C::New() const {
  return new MsgItemOtherPlayerChangeEquip_S2C;
}

void MsgItemOtherPlayerChangeEquip_S2C::Clear() {
  if (_has_bits_[0 / 32] & 31) {
    msgtype_ = 1224;
    iggid_ = GOOGLE_LONGLONG(0);
    other_player_mapobjectid_ = 0;
    if (has_itemdata()) {
      if (itemdata_ != NULL) itemdata_->::MsgPB::MsgItemCommonData::Clear();
    }
    take_off_ = false;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgItemOtherPlayerChangeEquip_S2C::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.MsgItemOtherPlayerChangeEquip_S2C)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_ITEM_OTHER_PLAYER_CHANGE_EQUIP_S2C];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::EMsgType_IsValid(value)) {
            set_msgtype(static_cast< ::MsgPB::EMsgType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_iggid;
        break;
      }

      // optional int64 iggid = 2;
      case 2: {
        if (tag == 16) {
         parse_iggid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &iggid_)));
          set_has_iggid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_other_player_mapobjectid;
        break;
      }

      // optional int32 other_player_mapobjectid = 3;
      case 3: {
        if (tag == 24) {
         parse_other_player_mapobjectid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &other_player_mapobjectid_)));
          set_has_other_player_mapobjectid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_ItemData;
        break;
      }

      // optional .MsgPB.MsgItemCommonData ItemData = 4;
      case 4: {
        if (tag == 34) {
         parse_ItemData:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_itemdata()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_take_off;
        break;
      }

      // optional bool take_off = 5;
      case 5: {
        if (tag == 40) {
         parse_take_off:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &take_off_)));
          set_has_take_off();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.MsgItemOtherPlayerChangeEquip_S2C)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.MsgItemOtherPlayerChangeEquip_S2C)
  return false;
#undef DO_
}

void MsgItemOtherPlayerChangeEquip_S2C::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.MsgItemOtherPlayerChangeEquip_S2C)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_ITEM_OTHER_PLAYER_CHANGE_EQUIP_S2C];
  if (has_msgtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->msgtype(), output);
  }

  // optional int64 iggid = 2;
  if (has_iggid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->iggid(), output);
  }

  // optional int32 other_player_mapobjectid = 3;
  if (has_other_player_mapobjectid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->other_player_mapobjectid(), output);
  }

  // optional .MsgPB.MsgItemCommonData ItemData = 4;
  if (has_itemdata()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->itemdata(), output);
  }

  // optional bool take_off = 5;
  if (has_take_off()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->take_off(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.MsgItemOtherPlayerChangeEquip_S2C)
}

::google::protobuf::uint8* MsgItemOtherPlayerChangeEquip_S2C::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.MsgItemOtherPlayerChangeEquip_S2C)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_ITEM_OTHER_PLAYER_CHANGE_EQUIP_S2C];
  if (has_msgtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->msgtype(), target);
  }

  // optional int64 iggid = 2;
  if (has_iggid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->iggid(), target);
  }

  // optional int32 other_player_mapobjectid = 3;
  if (has_other_player_mapobjectid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->other_player_mapobjectid(), target);
  }

  // optional .MsgPB.MsgItemCommonData ItemData = 4;
  if (has_itemdata()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->itemdata(), target);
  }

  // optional bool take_off = 5;
  if (has_take_off()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->take_off(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.MsgItemOtherPlayerChangeEquip_S2C)
  return target;
}

int MsgItemOtherPlayerChangeEquip_S2C::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_ITEM_OTHER_PLAYER_CHANGE_EQUIP_S2C];
    if (has_msgtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgtype());
    }

    // optional int64 iggid = 2;
    if (has_iggid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->iggid());
    }

    // optional int32 other_player_mapobjectid = 3;
    if (has_other_player_mapobjectid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->other_player_mapobjectid());
    }

    // optional .MsgPB.MsgItemCommonData ItemData = 4;
    if (has_itemdata()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->itemdata());
    }

    // optional bool take_off = 5;
    if (has_take_off()) {
      total_size += 1 + 1;
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgItemOtherPlayerChangeEquip_S2C::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgItemOtherPlayerChangeEquip_S2C* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgItemOtherPlayerChangeEquip_S2C*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgItemOtherPlayerChangeEquip_S2C::MergeFrom(const MsgItemOtherPlayerChangeEquip_S2C& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msgtype()) {
      set_msgtype(from.msgtype());
    }
    if (from.has_iggid()) {
      set_iggid(from.iggid());
    }
    if (from.has_other_player_mapobjectid()) {
      set_other_player_mapobjectid(from.other_player_mapobjectid());
    }
    if (from.has_itemdata()) {
      mutable_itemdata()->::MsgPB::MsgItemCommonData::MergeFrom(from.itemdata());
    }
    if (from.has_take_off()) {
      set_take_off(from.take_off());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgItemOtherPlayerChangeEquip_S2C::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgItemOtherPlayerChangeEquip_S2C::CopyFrom(const MsgItemOtherPlayerChangeEquip_S2C& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgItemOtherPlayerChangeEquip_S2C::IsInitialized() const {

  return true;
}

void MsgItemOtherPlayerChangeEquip_S2C::Swap(MsgItemOtherPlayerChangeEquip_S2C* other) {
  if (other != this) {
    std::swap(msgtype_, other->msgtype_);
    std::swap(iggid_, other->iggid_);
    std::swap(other_player_mapobjectid_, other->other_player_mapobjectid_);
    std::swap(itemdata_, other->itemdata_);
    std::swap(take_off_, other->take_off_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgItemOtherPlayerChangeEquip_S2C::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgItemOtherPlayerChangeEquip_S2C_descriptor_;
  metadata.reflection = MsgItemOtherPlayerChangeEquip_S2C_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgItemUseC2S::kSerialIDFieldNumber;
const int MsgItemUseC2S::kMsgTypeFieldNumber;
const int MsgItemUseC2S::kIggidFieldNumber;
const int MsgItemUseC2S::kUuidFieldNumber;
const int MsgItemUseC2S::kCountFieldNumber;
const int MsgItemUseC2S::kParamFieldNumber;
#endif  // !_MSC_VER

MsgItemUseC2S::MsgItemUseC2S()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.MsgItemUseC2S)
}

void MsgItemUseC2S::InitAsDefaultInstance() {
}

MsgItemUseC2S::MsgItemUseC2S(const MsgItemUseC2S& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.MsgItemUseC2S)
}

void MsgItemUseC2S::SharedCtor() {
  _cached_size_ = 0;
  serialid_ = 0;
  msgtype_ = 1217;
  iggid_ = GOOGLE_LONGLONG(0);
  uuid_ = GOOGLE_LONGLONG(0);
  count_ = 0;
  param_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgItemUseC2S::~MsgItemUseC2S() {
  // @@protoc_insertion_point(destructor:MsgPB.MsgItemUseC2S)
  SharedDtor();
}

void MsgItemUseC2S::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgItemUseC2S::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgItemUseC2S::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgItemUseC2S_descriptor_;
}

const MsgItemUseC2S& MsgItemUseC2S::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgItem_2eproto();
  return *default_instance_;
}

MsgItemUseC2S* MsgItemUseC2S::default_instance_ = NULL;

MsgItemUseC2S* MsgItemUseC2S::New() const {
  return new MsgItemUseC2S;
}

void MsgItemUseC2S::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<MsgItemUseC2S*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 63) {
    ZR_(iggid_, count_);
    serialid_ = 0;
    msgtype_ = 1217;
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgItemUseC2S::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.MsgItemUseC2S)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 SerialID = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &serialid_)));
          set_has_serialid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_msgType;
        break;
      }

      // optional .MsgPB.EMsgType msgType = 2 [default = _MSG_ITEM_USE_C2S];
      case 2: {
        if (tag == 16) {
         parse_msgType:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::EMsgType_IsValid(value)) {
            set_msgtype(static_cast< ::MsgPB::EMsgType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_iggid;
        break;
      }

      // optional int64 iggid = 3;
      case 3: {
        if (tag == 24) {
         parse_iggid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &iggid_)));
          set_has_iggid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_uuid;
        break;
      }

      // optional int64 uuid = 4;
      case 4: {
        if (tag == 32) {
         parse_uuid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &uuid_)));
          set_has_uuid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_Count;
        break;
      }

      // optional int32 Count = 5;
      case 5: {
        if (tag == 40) {
         parse_Count:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &count_)));
          set_has_count();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_param;
        break;
      }

      // optional int64 param = 6;
      case 6: {
        if (tag == 48) {
         parse_param:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &param_)));
          set_has_param();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.MsgItemUseC2S)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.MsgItemUseC2S)
  return false;
#undef DO_
}

void MsgItemUseC2S::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.MsgItemUseC2S)
  // optional int32 SerialID = 1;
  if (has_serialid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->serialid(), output);
  }

  // optional .MsgPB.EMsgType msgType = 2 [default = _MSG_ITEM_USE_C2S];
  if (has_msgtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->msgtype(), output);
  }

  // optional int64 iggid = 3;
  if (has_iggid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->iggid(), output);
  }

  // optional int64 uuid = 4;
  if (has_uuid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->uuid(), output);
  }

  // optional int32 Count = 5;
  if (has_count()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->count(), output);
  }

  // optional int64 param = 6;
  if (has_param()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(6, this->param(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.MsgItemUseC2S)
}

::google::protobuf::uint8* MsgItemUseC2S::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.MsgItemUseC2S)
  // optional int32 SerialID = 1;
  if (has_serialid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->serialid(), target);
  }

  // optional .MsgPB.EMsgType msgType = 2 [default = _MSG_ITEM_USE_C2S];
  if (has_msgtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->msgtype(), target);
  }

  // optional int64 iggid = 3;
  if (has_iggid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->iggid(), target);
  }

  // optional int64 uuid = 4;
  if (has_uuid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->uuid(), target);
  }

  // optional int32 Count = 5;
  if (has_count()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->count(), target);
  }

  // optional int64 param = 6;
  if (has_param()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(6, this->param(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.MsgItemUseC2S)
  return target;
}

int MsgItemUseC2S::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 SerialID = 1;
    if (has_serialid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->serialid());
    }

    // optional .MsgPB.EMsgType msgType = 2 [default = _MSG_ITEM_USE_C2S];
    if (has_msgtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgtype());
    }

    // optional int64 iggid = 3;
    if (has_iggid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->iggid());
    }

    // optional int64 uuid = 4;
    if (has_uuid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->uuid());
    }

    // optional int32 Count = 5;
    if (has_count()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->count());
    }

    // optional int64 param = 6;
    if (has_param()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->param());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgItemUseC2S::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgItemUseC2S* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgItemUseC2S*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgItemUseC2S::MergeFrom(const MsgItemUseC2S& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_serialid()) {
      set_serialid(from.serialid());
    }
    if (from.has_msgtype()) {
      set_msgtype(from.msgtype());
    }
    if (from.has_iggid()) {
      set_iggid(from.iggid());
    }
    if (from.has_uuid()) {
      set_uuid(from.uuid());
    }
    if (from.has_count()) {
      set_count(from.count());
    }
    if (from.has_param()) {
      set_param(from.param());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgItemUseC2S::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgItemUseC2S::CopyFrom(const MsgItemUseC2S& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgItemUseC2S::IsInitialized() const {

  return true;
}

void MsgItemUseC2S::Swap(MsgItemUseC2S* other) {
  if (other != this) {
    std::swap(serialid_, other->serialid_);
    std::swap(msgtype_, other->msgtype_);
    std::swap(iggid_, other->iggid_);
    std::swap(uuid_, other->uuid_);
    std::swap(count_, other->count_);
    std::swap(param_, other->param_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgItemUseC2S::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgItemUseC2S_descriptor_;
  metadata.reflection = MsgItemUseC2S_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgItemUseResultS2C::kSerialIDFieldNumber;
const int MsgItemUseResultS2C::kMsgTypeFieldNumber;
const int MsgItemUseResultS2C::kIggidFieldNumber;
const int MsgItemUseResultS2C::kItemIDFieldNumber;
const int MsgItemUseResultS2C::kUuidFieldNumber;
const int MsgItemUseResultS2C::kCountFieldNumber;
const int MsgItemUseResultS2C::kResultFieldNumber;
const int MsgItemUseResultS2C::kAddBuffIdFieldNumber;
#endif  // !_MSC_VER

MsgItemUseResultS2C::MsgItemUseResultS2C()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.MsgItemUseResultS2C)
}

void MsgItemUseResultS2C::InitAsDefaultInstance() {
}

MsgItemUseResultS2C::MsgItemUseResultS2C(const MsgItemUseResultS2C& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.MsgItemUseResultS2C)
}

void MsgItemUseResultS2C::SharedCtor() {
  _cached_size_ = 0;
  serialid_ = 0;
  msgtype_ = 1218;
  iggid_ = GOOGLE_LONGLONG(0);
  itemid_ = 0;
  uuid_ = GOOGLE_LONGLONG(0);
  count_ = 0;
  result_ = 0;
  add_buff_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgItemUseResultS2C::~MsgItemUseResultS2C() {
  // @@protoc_insertion_point(destructor:MsgPB.MsgItemUseResultS2C)
  SharedDtor();
}

void MsgItemUseResultS2C::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgItemUseResultS2C::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgItemUseResultS2C::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgItemUseResultS2C_descriptor_;
}

const MsgItemUseResultS2C& MsgItemUseResultS2C::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgItem_2eproto();
  return *default_instance_;
}

MsgItemUseResultS2C* MsgItemUseResultS2C::default_instance_ = NULL;

MsgItemUseResultS2C* MsgItemUseResultS2C::New() const {
  return new MsgItemUseResultS2C;
}

void MsgItemUseResultS2C::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<MsgItemUseResultS2C*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 255) {
    ZR_(iggid_, add_buff_id_);
    serialid_ = 0;
    msgtype_ = 1218;
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgItemUseResultS2C::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.MsgItemUseResultS2C)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 SerialID = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &serialid_)));
          set_has_serialid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_msgType;
        break;
      }

      // optional .MsgPB.EMsgType msgType = 2 [default = _MSG_ITEM_USE_RESULT_S2C];
      case 2: {
        if (tag == 16) {
         parse_msgType:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::EMsgType_IsValid(value)) {
            set_msgtype(static_cast< ::MsgPB::EMsgType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_iggid;
        break;
      }

      // optional int64 iggid = 3;
      case 3: {
        if (tag == 24) {
         parse_iggid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &iggid_)));
          set_has_iggid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_ItemID;
        break;
      }

      // optional int32 ItemID = 4;
      case 4: {
        if (tag == 32) {
         parse_ItemID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &itemid_)));
          set_has_itemid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_uuid;
        break;
      }

      // optional int64 uuid = 5;
      case 5: {
        if (tag == 40) {
         parse_uuid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &uuid_)));
          set_has_uuid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_Count;
        break;
      }

      // optional int32 Count = 6;
      case 6: {
        if (tag == 48) {
         parse_Count:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &count_)));
          set_has_count();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_Result;
        break;
      }

      // optional .MsgPB.ITEM_USE_RESULT Result = 7;
      case 7: {
        if (tag == 56) {
         parse_Result:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::ITEM_USE_RESULT_IsValid(value)) {
            set_result(static_cast< ::MsgPB::ITEM_USE_RESULT >(value));
          } else {
            mutable_unknown_fields()->AddVarint(7, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_add_buff_id;
        break;
      }

      // optional int32 add_buff_id = 8;
      case 8: {
        if (tag == 64) {
         parse_add_buff_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &add_buff_id_)));
          set_has_add_buff_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.MsgItemUseResultS2C)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.MsgItemUseResultS2C)
  return false;
#undef DO_
}

void MsgItemUseResultS2C::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.MsgItemUseResultS2C)
  // optional int32 SerialID = 1;
  if (has_serialid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->serialid(), output);
  }

  // optional .MsgPB.EMsgType msgType = 2 [default = _MSG_ITEM_USE_RESULT_S2C];
  if (has_msgtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->msgtype(), output);
  }

  // optional int64 iggid = 3;
  if (has_iggid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->iggid(), output);
  }

  // optional int32 ItemID = 4;
  if (has_itemid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->itemid(), output);
  }

  // optional int64 uuid = 5;
  if (has_uuid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(5, this->uuid(), output);
  }

  // optional int32 Count = 6;
  if (has_count()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->count(), output);
  }

  // optional .MsgPB.ITEM_USE_RESULT Result = 7;
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      7, this->result(), output);
  }

  // optional int32 add_buff_id = 8;
  if (has_add_buff_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->add_buff_id(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.MsgItemUseResultS2C)
}

::google::protobuf::uint8* MsgItemUseResultS2C::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.MsgItemUseResultS2C)
  // optional int32 SerialID = 1;
  if (has_serialid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->serialid(), target);
  }

  // optional .MsgPB.EMsgType msgType = 2 [default = _MSG_ITEM_USE_RESULT_S2C];
  if (has_msgtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->msgtype(), target);
  }

  // optional int64 iggid = 3;
  if (has_iggid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->iggid(), target);
  }

  // optional int32 ItemID = 4;
  if (has_itemid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->itemid(), target);
  }

  // optional int64 uuid = 5;
  if (has_uuid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(5, this->uuid(), target);
  }

  // optional int32 Count = 6;
  if (has_count()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->count(), target);
  }

  // optional .MsgPB.ITEM_USE_RESULT Result = 7;
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      7, this->result(), target);
  }

  // optional int32 add_buff_id = 8;
  if (has_add_buff_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->add_buff_id(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.MsgItemUseResultS2C)
  return target;
}

int MsgItemUseResultS2C::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 SerialID = 1;
    if (has_serialid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->serialid());
    }

    // optional .MsgPB.EMsgType msgType = 2 [default = _MSG_ITEM_USE_RESULT_S2C];
    if (has_msgtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgtype());
    }

    // optional int64 iggid = 3;
    if (has_iggid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->iggid());
    }

    // optional int32 ItemID = 4;
    if (has_itemid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->itemid());
    }

    // optional int64 uuid = 5;
    if (has_uuid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->uuid());
    }

    // optional int32 Count = 6;
    if (has_count()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->count());
    }

    // optional .MsgPB.ITEM_USE_RESULT Result = 7;
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->result());
    }

    // optional int32 add_buff_id = 8;
    if (has_add_buff_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->add_buff_id());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgItemUseResultS2C::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgItemUseResultS2C* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgItemUseResultS2C*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgItemUseResultS2C::MergeFrom(const MsgItemUseResultS2C& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_serialid()) {
      set_serialid(from.serialid());
    }
    if (from.has_msgtype()) {
      set_msgtype(from.msgtype());
    }
    if (from.has_iggid()) {
      set_iggid(from.iggid());
    }
    if (from.has_itemid()) {
      set_itemid(from.itemid());
    }
    if (from.has_uuid()) {
      set_uuid(from.uuid());
    }
    if (from.has_count()) {
      set_count(from.count());
    }
    if (from.has_result()) {
      set_result(from.result());
    }
    if (from.has_add_buff_id()) {
      set_add_buff_id(from.add_buff_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgItemUseResultS2C::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgItemUseResultS2C::CopyFrom(const MsgItemUseResultS2C& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgItemUseResultS2C::IsInitialized() const {

  return true;
}

void MsgItemUseResultS2C::Swap(MsgItemUseResultS2C* other) {
  if (other != this) {
    std::swap(serialid_, other->serialid_);
    std::swap(msgtype_, other->msgtype_);
    std::swap(iggid_, other->iggid_);
    std::swap(itemid_, other->itemid_);
    std::swap(uuid_, other->uuid_);
    std::swap(count_, other->count_);
    std::swap(result_, other->result_);
    std::swap(add_buff_id_, other->add_buff_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgItemUseResultS2C::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgItemUseResultS2C_descriptor_;
  metadata.reflection = MsgItemUseResultS2C_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgPacketSizeData::kBodyNowFieldNumber;
const int MsgPacketSizeData::kBodyMaxFieldNumber;
const int MsgPacketSizeData::kBankNowFieldNumber;
const int MsgPacketSizeData::kBankMaxFieldNumber;
const int MsgPacketSizeData::kRent1NowFieldNumber;
const int MsgPacketSizeData::kRent1MaxFieldNumber;
const int MsgPacketSizeData::kRent1DeadlineFieldNumber;
const int MsgPacketSizeData::kRent2NowFieldNumber;
const int MsgPacketSizeData::kRent2MaxFieldNumber;
const int MsgPacketSizeData::kRent2DeadlineFieldNumber;
const int MsgPacketSizeData::kPetNowFieldNumber;
const int MsgPacketSizeData::kDirtyFieldNumber;
const int MsgPacketSizeData::kInfosFieldNumber;
#endif  // !_MSC_VER

MsgPacketSizeData::MsgPacketSizeData()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.MsgPacketSizeData)
}

void MsgPacketSizeData::InitAsDefaultInstance() {
}

MsgPacketSizeData::MsgPacketSizeData(const MsgPacketSizeData& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.MsgPacketSizeData)
}

void MsgPacketSizeData::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  body_now_ = 0;
  body_max_ = 0;
  bank_now_ = 0;
  bank_max_ = 0;
  rent1_now_ = 0;
  rent1_max_ = 0;
  rent1_deadline_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  rent2_now_ = 0;
  rent2_max_ = 0;
  rent2_deadline_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pet_now_ = 0;
  dirty_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgPacketSizeData::~MsgPacketSizeData() {
  // @@protoc_insertion_point(destructor:MsgPB.MsgPacketSizeData)
  SharedDtor();
}

void MsgPacketSizeData::SharedDtor() {
  if (rent1_deadline_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete rent1_deadline_;
  }
  if (rent2_deadline_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete rent2_deadline_;
  }
  if (this != default_instance_) {
  }
}

void MsgPacketSizeData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgPacketSizeData::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgPacketSizeData_descriptor_;
}

const MsgPacketSizeData& MsgPacketSizeData::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgItem_2eproto();
  return *default_instance_;
}

MsgPacketSizeData* MsgPacketSizeData::default_instance_ = NULL;

MsgPacketSizeData* MsgPacketSizeData::New() const {
  return new MsgPacketSizeData;
}

void MsgPacketSizeData::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<MsgPacketSizeData*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 255) {
    ZR_(body_now_, rent1_max_);
    if (has_rent1_deadline()) {
      if (rent1_deadline_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        rent1_deadline_->clear();
      }
    }
    rent2_now_ = 0;
  }
  if (_has_bits_[8 / 32] & 3840) {
    rent2_max_ = 0;
    if (has_rent2_deadline()) {
      if (rent2_deadline_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        rent2_deadline_->clear();
      }
    }
    pet_now_ = 0;
    dirty_ = GOOGLE_LONGLONG(0);
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  infos_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgPacketSizeData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.MsgPacketSizeData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 body_now = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &body_now_)));
          set_has_body_now();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_body_max;
        break;
      }

      // optional int32 body_max = 2;
      case 2: {
        if (tag == 16) {
         parse_body_max:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &body_max_)));
          set_has_body_max();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_bank_now;
        break;
      }

      // optional int32 bank_now = 3;
      case 3: {
        if (tag == 24) {
         parse_bank_now:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &bank_now_)));
          set_has_bank_now();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_bank_max;
        break;
      }

      // optional int32 bank_max = 4;
      case 4: {
        if (tag == 32) {
         parse_bank_max:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &bank_max_)));
          set_has_bank_max();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_rent1_now;
        break;
      }

      // optional int32 rent1_now = 5;
      case 5: {
        if (tag == 40) {
         parse_rent1_now:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &rent1_now_)));
          set_has_rent1_now();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_rent1_max;
        break;
      }

      // optional int32 rent1_max = 6;
      case 6: {
        if (tag == 48) {
         parse_rent1_max:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &rent1_max_)));
          set_has_rent1_max();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_rent1_deadline;
        break;
      }

      // optional string rent1_deadline = 7;
      case 7: {
        if (tag == 58) {
         parse_rent1_deadline:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_rent1_deadline()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->rent1_deadline().data(), this->rent1_deadline().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "rent1_deadline");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_rent2_now;
        break;
      }

      // optional int32 rent2_now = 8;
      case 8: {
        if (tag == 64) {
         parse_rent2_now:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &rent2_now_)));
          set_has_rent2_now();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_rent2_max;
        break;
      }

      // optional int32 rent2_max = 9;
      case 9: {
        if (tag == 72) {
         parse_rent2_max:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &rent2_max_)));
          set_has_rent2_max();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_rent2_deadline;
        break;
      }

      // optional string rent2_deadline = 10;
      case 10: {
        if (tag == 82) {
         parse_rent2_deadline:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_rent2_deadline()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->rent2_deadline().data(), this->rent2_deadline().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "rent2_deadline");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(88)) goto parse_pet_now;
        break;
      }

      // optional int32 pet_now = 11;
      case 11: {
        if (tag == 88) {
         parse_pet_now:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pet_now_)));
          set_has_pet_now();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(96)) goto parse_dirty;
        break;
      }

      // optional int64 dirty = 12;
      case 12: {
        if (tag == 96) {
         parse_dirty:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &dirty_)));
          set_has_dirty();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(106)) goto parse_infos;
        break;
      }

      // repeated .MsgPB.ItemPacketCapabilityInfo infos = 13;
      case 13: {
        if (tag == 106) {
         parse_infos:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_infos()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(106)) goto parse_infos;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.MsgPacketSizeData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.MsgPacketSizeData)
  return false;
#undef DO_
}

void MsgPacketSizeData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.MsgPacketSizeData)
  // optional int32 body_now = 1;
  if (has_body_now()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->body_now(), output);
  }

  // optional int32 body_max = 2;
  if (has_body_max()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->body_max(), output);
  }

  // optional int32 bank_now = 3;
  if (has_bank_now()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->bank_now(), output);
  }

  // optional int32 bank_max = 4;
  if (has_bank_max()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->bank_max(), output);
  }

  // optional int32 rent1_now = 5;
  if (has_rent1_now()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->rent1_now(), output);
  }

  // optional int32 rent1_max = 6;
  if (has_rent1_max()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->rent1_max(), output);
  }

  // optional string rent1_deadline = 7;
  if (has_rent1_deadline()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->rent1_deadline().data(), this->rent1_deadline().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "rent1_deadline");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->rent1_deadline(), output);
  }

  // optional int32 rent2_now = 8;
  if (has_rent2_now()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->rent2_now(), output);
  }

  // optional int32 rent2_max = 9;
  if (has_rent2_max()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->rent2_max(), output);
  }

  // optional string rent2_deadline = 10;
  if (has_rent2_deadline()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->rent2_deadline().data(), this->rent2_deadline().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "rent2_deadline");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->rent2_deadline(), output);
  }

  // optional int32 pet_now = 11;
  if (has_pet_now()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->pet_now(), output);
  }

  // optional int64 dirty = 12;
  if (has_dirty()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(12, this->dirty(), output);
  }

  // repeated .MsgPB.ItemPacketCapabilityInfo infos = 13;
  for (int i = 0; i < this->infos_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      13, this->infos(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.MsgPacketSizeData)
}

::google::protobuf::uint8* MsgPacketSizeData::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.MsgPacketSizeData)
  // optional int32 body_now = 1;
  if (has_body_now()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->body_now(), target);
  }

  // optional int32 body_max = 2;
  if (has_body_max()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->body_max(), target);
  }

  // optional int32 bank_now = 3;
  if (has_bank_now()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->bank_now(), target);
  }

  // optional int32 bank_max = 4;
  if (has_bank_max()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->bank_max(), target);
  }

  // optional int32 rent1_now = 5;
  if (has_rent1_now()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->rent1_now(), target);
  }

  // optional int32 rent1_max = 6;
  if (has_rent1_max()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->rent1_max(), target);
  }

  // optional string rent1_deadline = 7;
  if (has_rent1_deadline()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->rent1_deadline().data(), this->rent1_deadline().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "rent1_deadline");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->rent1_deadline(), target);
  }

  // optional int32 rent2_now = 8;
  if (has_rent2_now()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->rent2_now(), target);
  }

  // optional int32 rent2_max = 9;
  if (has_rent2_max()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->rent2_max(), target);
  }

  // optional string rent2_deadline = 10;
  if (has_rent2_deadline()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->rent2_deadline().data(), this->rent2_deadline().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "rent2_deadline");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->rent2_deadline(), target);
  }

  // optional int32 pet_now = 11;
  if (has_pet_now()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->pet_now(), target);
  }

  // optional int64 dirty = 12;
  if (has_dirty()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(12, this->dirty(), target);
  }

  // repeated .MsgPB.ItemPacketCapabilityInfo infos = 13;
  for (int i = 0; i < this->infos_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        13, this->infos(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.MsgPacketSizeData)
  return target;
}

int MsgPacketSizeData::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 body_now = 1;
    if (has_body_now()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->body_now());
    }

    // optional int32 body_max = 2;
    if (has_body_max()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->body_max());
    }

    // optional int32 bank_now = 3;
    if (has_bank_now()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->bank_now());
    }

    // optional int32 bank_max = 4;
    if (has_bank_max()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->bank_max());
    }

    // optional int32 rent1_now = 5;
    if (has_rent1_now()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->rent1_now());
    }

    // optional int32 rent1_max = 6;
    if (has_rent1_max()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->rent1_max());
    }

    // optional string rent1_deadline = 7;
    if (has_rent1_deadline()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->rent1_deadline());
    }

    // optional int32 rent2_now = 8;
    if (has_rent2_now()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->rent2_now());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional int32 rent2_max = 9;
    if (has_rent2_max()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->rent2_max());
    }

    // optional string rent2_deadline = 10;
    if (has_rent2_deadline()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->rent2_deadline());
    }

    // optional int32 pet_now = 11;
    if (has_pet_now()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pet_now());
    }

    // optional int64 dirty = 12;
    if (has_dirty()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->dirty());
    }

  }
  // repeated .MsgPB.ItemPacketCapabilityInfo infos = 13;
  total_size += 1 * this->infos_size();
  for (int i = 0; i < this->infos_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->infos(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgPacketSizeData::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgPacketSizeData* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgPacketSizeData*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgPacketSizeData::MergeFrom(const MsgPacketSizeData& from) {
  GOOGLE_CHECK_NE(&from, this);
  infos_.MergeFrom(from.infos_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_body_now()) {
      set_body_now(from.body_now());
    }
    if (from.has_body_max()) {
      set_body_max(from.body_max());
    }
    if (from.has_bank_now()) {
      set_bank_now(from.bank_now());
    }
    if (from.has_bank_max()) {
      set_bank_max(from.bank_max());
    }
    if (from.has_rent1_now()) {
      set_rent1_now(from.rent1_now());
    }
    if (from.has_rent1_max()) {
      set_rent1_max(from.rent1_max());
    }
    if (from.has_rent1_deadline()) {
      set_rent1_deadline(from.rent1_deadline());
    }
    if (from.has_rent2_now()) {
      set_rent2_now(from.rent2_now());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_rent2_max()) {
      set_rent2_max(from.rent2_max());
    }
    if (from.has_rent2_deadline()) {
      set_rent2_deadline(from.rent2_deadline());
    }
    if (from.has_pet_now()) {
      set_pet_now(from.pet_now());
    }
    if (from.has_dirty()) {
      set_dirty(from.dirty());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgPacketSizeData::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgPacketSizeData::CopyFrom(const MsgPacketSizeData& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgPacketSizeData::IsInitialized() const {

  return true;
}

void MsgPacketSizeData::Swap(MsgPacketSizeData* other) {
  if (other != this) {
    std::swap(body_now_, other->body_now_);
    std::swap(body_max_, other->body_max_);
    std::swap(bank_now_, other->bank_now_);
    std::swap(bank_max_, other->bank_max_);
    std::swap(rent1_now_, other->rent1_now_);
    std::swap(rent1_max_, other->rent1_max_);
    std::swap(rent1_deadline_, other->rent1_deadline_);
    std::swap(rent2_now_, other->rent2_now_);
    std::swap(rent2_max_, other->rent2_max_);
    std::swap(rent2_deadline_, other->rent2_deadline_);
    std::swap(pet_now_, other->pet_now_);
    std::swap(dirty_, other->dirty_);
    infos_.Swap(&other->infos_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgPacketSizeData::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgPacketSizeData_descriptor_;
  metadata.reflection = MsgPacketSizeData_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgItemSyncItemDataMS2GS::kMsgTypeFieldNumber;
const int MsgItemSyncItemDataMS2GS::kIggidFieldNumber;
const int MsgItemSyncItemDataMS2GS::kItemDataFieldNumber;
#endif  // !_MSC_VER

MsgItemSyncItemDataMS2GS::MsgItemSyncItemDataMS2GS()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.MsgItemSyncItemDataMS2GS)
}

void MsgItemSyncItemDataMS2GS::InitAsDefaultInstance() {
  itemdata_ = const_cast< ::MsgPB::MsgItemCommonData*>(&::MsgPB::MsgItemCommonData::default_instance());
}

MsgItemSyncItemDataMS2GS::MsgItemSyncItemDataMS2GS(const MsgItemSyncItemDataMS2GS& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.MsgItemSyncItemDataMS2GS)
}

void MsgItemSyncItemDataMS2GS::SharedCtor() {
  _cached_size_ = 0;
  msgtype_ = 1232;
  iggid_ = GOOGLE_LONGLONG(0);
  itemdata_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgItemSyncItemDataMS2GS::~MsgItemSyncItemDataMS2GS() {
  // @@protoc_insertion_point(destructor:MsgPB.MsgItemSyncItemDataMS2GS)
  SharedDtor();
}

void MsgItemSyncItemDataMS2GS::SharedDtor() {
  if (this != default_instance_) {
    delete itemdata_;
  }
}

void MsgItemSyncItemDataMS2GS::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgItemSyncItemDataMS2GS::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgItemSyncItemDataMS2GS_descriptor_;
}

const MsgItemSyncItemDataMS2GS& MsgItemSyncItemDataMS2GS::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgItem_2eproto();
  return *default_instance_;
}

MsgItemSyncItemDataMS2GS* MsgItemSyncItemDataMS2GS::default_instance_ = NULL;

MsgItemSyncItemDataMS2GS* MsgItemSyncItemDataMS2GS::New() const {
  return new MsgItemSyncItemDataMS2GS;
}

void MsgItemSyncItemDataMS2GS::Clear() {
  if (_has_bits_[0 / 32] & 7) {
    msgtype_ = 1232;
    iggid_ = GOOGLE_LONGLONG(0);
    if (has_itemdata()) {
      if (itemdata_ != NULL) itemdata_->::MsgPB::MsgItemCommonData::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgItemSyncItemDataMS2GS::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.MsgItemSyncItemDataMS2GS)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_ITEM_SYNC_ITEMDATA_MS2GS];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::EMsgType_IsValid(value)) {
            set_msgtype(static_cast< ::MsgPB::EMsgType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_iggid;
        break;
      }

      // optional int64 iggid = 2;
      case 2: {
        if (tag == 16) {
         parse_iggid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &iggid_)));
          set_has_iggid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_ItemData;
        break;
      }

      // optional .MsgPB.MsgItemCommonData ItemData = 3;
      case 3: {
        if (tag == 26) {
         parse_ItemData:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_itemdata()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.MsgItemSyncItemDataMS2GS)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.MsgItemSyncItemDataMS2GS)
  return false;
#undef DO_
}

void MsgItemSyncItemDataMS2GS::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.MsgItemSyncItemDataMS2GS)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_ITEM_SYNC_ITEMDATA_MS2GS];
  if (has_msgtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->msgtype(), output);
  }

  // optional int64 iggid = 2;
  if (has_iggid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->iggid(), output);
  }

  // optional .MsgPB.MsgItemCommonData ItemData = 3;
  if (has_itemdata()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->itemdata(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.MsgItemSyncItemDataMS2GS)
}

::google::protobuf::uint8* MsgItemSyncItemDataMS2GS::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.MsgItemSyncItemDataMS2GS)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_ITEM_SYNC_ITEMDATA_MS2GS];
  if (has_msgtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->msgtype(), target);
  }

  // optional int64 iggid = 2;
  if (has_iggid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->iggid(), target);
  }

  // optional .MsgPB.MsgItemCommonData ItemData = 3;
  if (has_itemdata()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->itemdata(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.MsgItemSyncItemDataMS2GS)
  return target;
}

int MsgItemSyncItemDataMS2GS::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_ITEM_SYNC_ITEMDATA_MS2GS];
    if (has_msgtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgtype());
    }

    // optional int64 iggid = 2;
    if (has_iggid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->iggid());
    }

    // optional .MsgPB.MsgItemCommonData ItemData = 3;
    if (has_itemdata()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->itemdata());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgItemSyncItemDataMS2GS::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgItemSyncItemDataMS2GS* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgItemSyncItemDataMS2GS*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgItemSyncItemDataMS2GS::MergeFrom(const MsgItemSyncItemDataMS2GS& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msgtype()) {
      set_msgtype(from.msgtype());
    }
    if (from.has_iggid()) {
      set_iggid(from.iggid());
    }
    if (from.has_itemdata()) {
      mutable_itemdata()->::MsgPB::MsgItemCommonData::MergeFrom(from.itemdata());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgItemSyncItemDataMS2GS::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgItemSyncItemDataMS2GS::CopyFrom(const MsgItemSyncItemDataMS2GS& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgItemSyncItemDataMS2GS::IsInitialized() const {

  return true;
}

void MsgItemSyncItemDataMS2GS::Swap(MsgItemSyncItemDataMS2GS* other) {
  if (other != this) {
    std::swap(msgtype_, other->msgtype_);
    std::swap(iggid_, other->iggid_);
    std::swap(itemdata_, other->itemdata_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgItemSyncItemDataMS2GS::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgItemSyncItemDataMS2GS_descriptor_;
  metadata.reflection = MsgItemSyncItemDataMS2GS_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgItemSyncItemDataMS2MCS::kMsgTypeFieldNumber;
const int MsgItemSyncItemDataMS2MCS::kIggidFieldNumber;
const int MsgItemSyncItemDataMS2MCS::kItemDataFieldNumber;
#endif  // !_MSC_VER

MsgItemSyncItemDataMS2MCS::MsgItemSyncItemDataMS2MCS()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.MsgItemSyncItemDataMS2MCS)
}

void MsgItemSyncItemDataMS2MCS::InitAsDefaultInstance() {
  itemdata_ = const_cast< ::MsgPB::MsgItemCommonData*>(&::MsgPB::MsgItemCommonData::default_instance());
}

MsgItemSyncItemDataMS2MCS::MsgItemSyncItemDataMS2MCS(const MsgItemSyncItemDataMS2MCS& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.MsgItemSyncItemDataMS2MCS)
}

void MsgItemSyncItemDataMS2MCS::SharedCtor() {
  _cached_size_ = 0;
  msgtype_ = 1234;
  iggid_ = GOOGLE_LONGLONG(0);
  itemdata_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgItemSyncItemDataMS2MCS::~MsgItemSyncItemDataMS2MCS() {
  // @@protoc_insertion_point(destructor:MsgPB.MsgItemSyncItemDataMS2MCS)
  SharedDtor();
}

void MsgItemSyncItemDataMS2MCS::SharedDtor() {
  if (this != default_instance_) {
    delete itemdata_;
  }
}

void MsgItemSyncItemDataMS2MCS::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgItemSyncItemDataMS2MCS::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgItemSyncItemDataMS2MCS_descriptor_;
}

const MsgItemSyncItemDataMS2MCS& MsgItemSyncItemDataMS2MCS::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgItem_2eproto();
  return *default_instance_;
}

MsgItemSyncItemDataMS2MCS* MsgItemSyncItemDataMS2MCS::default_instance_ = NULL;

MsgItemSyncItemDataMS2MCS* MsgItemSyncItemDataMS2MCS::New() const {
  return new MsgItemSyncItemDataMS2MCS;
}

void MsgItemSyncItemDataMS2MCS::Clear() {
  if (_has_bits_[0 / 32] & 7) {
    msgtype_ = 1234;
    iggid_ = GOOGLE_LONGLONG(0);
    if (has_itemdata()) {
      if (itemdata_ != NULL) itemdata_->::MsgPB::MsgItemCommonData::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgItemSyncItemDataMS2MCS::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.MsgItemSyncItemDataMS2MCS)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_ITEM_SYNC_ITEMDATA_MS2MCS];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::EMsgType_IsValid(value)) {
            set_msgtype(static_cast< ::MsgPB::EMsgType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_iggid;
        break;
      }

      // optional int64 iggid = 2;
      case 2: {
        if (tag == 16) {
         parse_iggid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &iggid_)));
          set_has_iggid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_ItemData;
        break;
      }

      // optional .MsgPB.MsgItemCommonData ItemData = 3;
      case 3: {
        if (tag == 26) {
         parse_ItemData:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_itemdata()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.MsgItemSyncItemDataMS2MCS)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.MsgItemSyncItemDataMS2MCS)
  return false;
#undef DO_
}

void MsgItemSyncItemDataMS2MCS::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.MsgItemSyncItemDataMS2MCS)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_ITEM_SYNC_ITEMDATA_MS2MCS];
  if (has_msgtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->msgtype(), output);
  }

  // optional int64 iggid = 2;
  if (has_iggid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->iggid(), output);
  }

  // optional .MsgPB.MsgItemCommonData ItemData = 3;
  if (has_itemdata()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->itemdata(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.MsgItemSyncItemDataMS2MCS)
}

::google::protobuf::uint8* MsgItemSyncItemDataMS2MCS::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.MsgItemSyncItemDataMS2MCS)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_ITEM_SYNC_ITEMDATA_MS2MCS];
  if (has_msgtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->msgtype(), target);
  }

  // optional int64 iggid = 2;
  if (has_iggid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->iggid(), target);
  }

  // optional .MsgPB.MsgItemCommonData ItemData = 3;
  if (has_itemdata()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->itemdata(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.MsgItemSyncItemDataMS2MCS)
  return target;
}

int MsgItemSyncItemDataMS2MCS::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_ITEM_SYNC_ITEMDATA_MS2MCS];
    if (has_msgtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgtype());
    }

    // optional int64 iggid = 2;
    if (has_iggid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->iggid());
    }

    // optional .MsgPB.MsgItemCommonData ItemData = 3;
    if (has_itemdata()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->itemdata());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgItemSyncItemDataMS2MCS::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgItemSyncItemDataMS2MCS* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgItemSyncItemDataMS2MCS*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgItemSyncItemDataMS2MCS::MergeFrom(const MsgItemSyncItemDataMS2MCS& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msgtype()) {
      set_msgtype(from.msgtype());
    }
    if (from.has_iggid()) {
      set_iggid(from.iggid());
    }
    if (from.has_itemdata()) {
      mutable_itemdata()->::MsgPB::MsgItemCommonData::MergeFrom(from.itemdata());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgItemSyncItemDataMS2MCS::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgItemSyncItemDataMS2MCS::CopyFrom(const MsgItemSyncItemDataMS2MCS& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgItemSyncItemDataMS2MCS::IsInitialized() const {

  return true;
}

void MsgItemSyncItemDataMS2MCS::Swap(MsgItemSyncItemDataMS2MCS* other) {
  if (other != this) {
    std::swap(msgtype_, other->msgtype_);
    std::swap(iggid_, other->iggid_);
    std::swap(itemdata_, other->itemdata_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgItemSyncItemDataMS2MCS::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgItemSyncItemDataMS2MCS_descriptor_;
  metadata.reflection = MsgItemSyncItemDataMS2MCS_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgItemClientSyncInitItemC2GS::kMsgTypeFieldNumber;
const int MsgItemClientSyncInitItemC2GS::kUuidFieldNumber;
const int MsgItemClientSyncInitItemC2GS::kDataidFieldNumber;
const int MsgItemClientSyncInitItemC2GS::kCountFieldNumber;
const int MsgItemClientSyncInitItemC2GS::kPosFieldNumber;
#endif  // !_MSC_VER

MsgItemClientSyncInitItemC2GS::MsgItemClientSyncInitItemC2GS()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.MsgItemClientSyncInitItemC2GS)
}

void MsgItemClientSyncInitItemC2GS::InitAsDefaultInstance() {
}

MsgItemClientSyncInitItemC2GS::MsgItemClientSyncInitItemC2GS(const MsgItemClientSyncInitItemC2GS& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.MsgItemClientSyncInitItemC2GS)
}

void MsgItemClientSyncInitItemC2GS::SharedCtor() {
  _cached_size_ = 0;
  msgtype_ = 1220;
  uuid_ = GOOGLE_LONGLONG(0);
  dataid_ = 0;
  count_ = 0;
  pos_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgItemClientSyncInitItemC2GS::~MsgItemClientSyncInitItemC2GS() {
  // @@protoc_insertion_point(destructor:MsgPB.MsgItemClientSyncInitItemC2GS)
  SharedDtor();
}

void MsgItemClientSyncInitItemC2GS::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgItemClientSyncInitItemC2GS::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgItemClientSyncInitItemC2GS::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgItemClientSyncInitItemC2GS_descriptor_;
}

const MsgItemClientSyncInitItemC2GS& MsgItemClientSyncInitItemC2GS::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgItem_2eproto();
  return *default_instance_;
}

MsgItemClientSyncInitItemC2GS* MsgItemClientSyncInitItemC2GS::default_instance_ = NULL;

MsgItemClientSyncInitItemC2GS* MsgItemClientSyncInitItemC2GS::New() const {
  return new MsgItemClientSyncInitItemC2GS;
}

void MsgItemClientSyncInitItemC2GS::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<MsgItemClientSyncInitItemC2GS*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 31) {
    ZR_(dataid_, pos_);
    msgtype_ = 1220;
    uuid_ = GOOGLE_LONGLONG(0);
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgItemClientSyncInitItemC2GS::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.MsgItemClientSyncInitItemC2GS)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_ITEM_CLIENTSYNC_INIT_ITEM];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::EMsgType_IsValid(value)) {
            set_msgtype(static_cast< ::MsgPB::EMsgType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_uuid;
        break;
      }

      // optional int64 uuid = 2;
      case 2: {
        if (tag == 16) {
         parse_uuid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &uuid_)));
          set_has_uuid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_dataid;
        break;
      }

      // optional int32 dataid = 3;
      case 3: {
        if (tag == 24) {
         parse_dataid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &dataid_)));
          set_has_dataid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_count;
        break;
      }

      // optional int32 count = 4;
      case 4: {
        if (tag == 32) {
         parse_count:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &count_)));
          set_has_count();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_pos;
        break;
      }

      // optional int32 pos = 5;
      case 5: {
        if (tag == 40) {
         parse_pos:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pos_)));
          set_has_pos();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.MsgItemClientSyncInitItemC2GS)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.MsgItemClientSyncInitItemC2GS)
  return false;
#undef DO_
}

void MsgItemClientSyncInitItemC2GS::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.MsgItemClientSyncInitItemC2GS)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_ITEM_CLIENTSYNC_INIT_ITEM];
  if (has_msgtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->msgtype(), output);
  }

  // optional int64 uuid = 2;
  if (has_uuid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->uuid(), output);
  }

  // optional int32 dataid = 3;
  if (has_dataid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->dataid(), output);
  }

  // optional int32 count = 4;
  if (has_count()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->count(), output);
  }

  // optional int32 pos = 5;
  if (has_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->pos(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.MsgItemClientSyncInitItemC2GS)
}

::google::protobuf::uint8* MsgItemClientSyncInitItemC2GS::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.MsgItemClientSyncInitItemC2GS)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_ITEM_CLIENTSYNC_INIT_ITEM];
  if (has_msgtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->msgtype(), target);
  }

  // optional int64 uuid = 2;
  if (has_uuid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->uuid(), target);
  }

  // optional int32 dataid = 3;
  if (has_dataid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->dataid(), target);
  }

  // optional int32 count = 4;
  if (has_count()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->count(), target);
  }

  // optional int32 pos = 5;
  if (has_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->pos(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.MsgItemClientSyncInitItemC2GS)
  return target;
}

int MsgItemClientSyncInitItemC2GS::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_ITEM_CLIENTSYNC_INIT_ITEM];
    if (has_msgtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgtype());
    }

    // optional int64 uuid = 2;
    if (has_uuid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->uuid());
    }

    // optional int32 dataid = 3;
    if (has_dataid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->dataid());
    }

    // optional int32 count = 4;
    if (has_count()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->count());
    }

    // optional int32 pos = 5;
    if (has_pos()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pos());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgItemClientSyncInitItemC2GS::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgItemClientSyncInitItemC2GS* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgItemClientSyncInitItemC2GS*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgItemClientSyncInitItemC2GS::MergeFrom(const MsgItemClientSyncInitItemC2GS& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msgtype()) {
      set_msgtype(from.msgtype());
    }
    if (from.has_uuid()) {
      set_uuid(from.uuid());
    }
    if (from.has_dataid()) {
      set_dataid(from.dataid());
    }
    if (from.has_count()) {
      set_count(from.count());
    }
    if (from.has_pos()) {
      set_pos(from.pos());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgItemClientSyncInitItemC2GS::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgItemClientSyncInitItemC2GS::CopyFrom(const MsgItemClientSyncInitItemC2GS& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgItemClientSyncInitItemC2GS::IsInitialized() const {

  return true;
}

void MsgItemClientSyncInitItemC2GS::Swap(MsgItemClientSyncInitItemC2GS* other) {
  if (other != this) {
    std::swap(msgtype_, other->msgtype_);
    std::swap(uuid_, other->uuid_);
    std::swap(dataid_, other->dataid_);
    std::swap(count_, other->count_);
    std::swap(pos_, other->pos_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgItemClientSyncInitItemC2GS::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgItemClientSyncInitItemC2GS_descriptor_;
  metadata.reflection = MsgItemClientSyncInitItemC2GS_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgItemClientSyncAddItemC2GS::kMsgTypeFieldNumber;
const int MsgItemClientSyncAddItemC2GS::kUuidFieldNumber;
const int MsgItemClientSyncAddItemC2GS::kDataidFieldNumber;
const int MsgItemClientSyncAddItemC2GS::kCountFieldNumber;
#endif  // !_MSC_VER

MsgItemClientSyncAddItemC2GS::MsgItemClientSyncAddItemC2GS()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.MsgItemClientSyncAddItemC2GS)
}

void MsgItemClientSyncAddItemC2GS::InitAsDefaultInstance() {
}

MsgItemClientSyncAddItemC2GS::MsgItemClientSyncAddItemC2GS(const MsgItemClientSyncAddItemC2GS& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.MsgItemClientSyncAddItemC2GS)
}

void MsgItemClientSyncAddItemC2GS::SharedCtor() {
  _cached_size_ = 0;
  msgtype_ = 1221;
  uuid_ = GOOGLE_LONGLONG(0);
  dataid_ = 0;
  count_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgItemClientSyncAddItemC2GS::~MsgItemClientSyncAddItemC2GS() {
  // @@protoc_insertion_point(destructor:MsgPB.MsgItemClientSyncAddItemC2GS)
  SharedDtor();
}

void MsgItemClientSyncAddItemC2GS::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgItemClientSyncAddItemC2GS::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgItemClientSyncAddItemC2GS::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgItemClientSyncAddItemC2GS_descriptor_;
}

const MsgItemClientSyncAddItemC2GS& MsgItemClientSyncAddItemC2GS::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgItem_2eproto();
  return *default_instance_;
}

MsgItemClientSyncAddItemC2GS* MsgItemClientSyncAddItemC2GS::default_instance_ = NULL;

MsgItemClientSyncAddItemC2GS* MsgItemClientSyncAddItemC2GS::New() const {
  return new MsgItemClientSyncAddItemC2GS;
}

void MsgItemClientSyncAddItemC2GS::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<MsgItemClientSyncAddItemC2GS*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 15) {
    ZR_(dataid_, count_);
    msgtype_ = 1221;
    uuid_ = GOOGLE_LONGLONG(0);
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgItemClientSyncAddItemC2GS::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.MsgItemClientSyncAddItemC2GS)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_ITEM_CLIENTSYNC_ADD_ITEM];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::EMsgType_IsValid(value)) {
            set_msgtype(static_cast< ::MsgPB::EMsgType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_uuid;
        break;
      }

      // optional int64 uuid = 2;
      case 2: {
        if (tag == 16) {
         parse_uuid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &uuid_)));
          set_has_uuid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_dataid;
        break;
      }

      // optional int32 dataid = 3;
      case 3: {
        if (tag == 24) {
         parse_dataid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &dataid_)));
          set_has_dataid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_count;
        break;
      }

      // optional int32 count = 4;
      case 4: {
        if (tag == 32) {
         parse_count:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &count_)));
          set_has_count();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.MsgItemClientSyncAddItemC2GS)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.MsgItemClientSyncAddItemC2GS)
  return false;
#undef DO_
}

void MsgItemClientSyncAddItemC2GS::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.MsgItemClientSyncAddItemC2GS)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_ITEM_CLIENTSYNC_ADD_ITEM];
  if (has_msgtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->msgtype(), output);
  }

  // optional int64 uuid = 2;
  if (has_uuid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->uuid(), output);
  }

  // optional int32 dataid = 3;
  if (has_dataid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->dataid(), output);
  }

  // optional int32 count = 4;
  if (has_count()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->count(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.MsgItemClientSyncAddItemC2GS)
}

::google::protobuf::uint8* MsgItemClientSyncAddItemC2GS::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.MsgItemClientSyncAddItemC2GS)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_ITEM_CLIENTSYNC_ADD_ITEM];
  if (has_msgtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->msgtype(), target);
  }

  // optional int64 uuid = 2;
  if (has_uuid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->uuid(), target);
  }

  // optional int32 dataid = 3;
  if (has_dataid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->dataid(), target);
  }

  // optional int32 count = 4;
  if (has_count()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->count(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.MsgItemClientSyncAddItemC2GS)
  return target;
}

int MsgItemClientSyncAddItemC2GS::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_ITEM_CLIENTSYNC_ADD_ITEM];
    if (has_msgtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgtype());
    }

    // optional int64 uuid = 2;
    if (has_uuid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->uuid());
    }

    // optional int32 dataid = 3;
    if (has_dataid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->dataid());
    }

    // optional int32 count = 4;
    if (has_count()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->count());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgItemClientSyncAddItemC2GS::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgItemClientSyncAddItemC2GS* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgItemClientSyncAddItemC2GS*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgItemClientSyncAddItemC2GS::MergeFrom(const MsgItemClientSyncAddItemC2GS& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msgtype()) {
      set_msgtype(from.msgtype());
    }
    if (from.has_uuid()) {
      set_uuid(from.uuid());
    }
    if (from.has_dataid()) {
      set_dataid(from.dataid());
    }
    if (from.has_count()) {
      set_count(from.count());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgItemClientSyncAddItemC2GS::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgItemClientSyncAddItemC2GS::CopyFrom(const MsgItemClientSyncAddItemC2GS& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgItemClientSyncAddItemC2GS::IsInitialized() const {

  return true;
}

void MsgItemClientSyncAddItemC2GS::Swap(MsgItemClientSyncAddItemC2GS* other) {
  if (other != this) {
    std::swap(msgtype_, other->msgtype_);
    std::swap(uuid_, other->uuid_);
    std::swap(dataid_, other->dataid_);
    std::swap(count_, other->count_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgItemClientSyncAddItemC2GS::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgItemClientSyncAddItemC2GS_descriptor_;
  metadata.reflection = MsgItemClientSyncAddItemC2GS_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgItemClientSyncDelItemC2GS::kMsgTypeFieldNumber;
const int MsgItemClientSyncDelItemC2GS::kUuidFieldNumber;
const int MsgItemClientSyncDelItemC2GS::kDataidFieldNumber;
const int MsgItemClientSyncDelItemC2GS::kCountFieldNumber;
#endif  // !_MSC_VER

MsgItemClientSyncDelItemC2GS::MsgItemClientSyncDelItemC2GS()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.MsgItemClientSyncDelItemC2GS)
}

void MsgItemClientSyncDelItemC2GS::InitAsDefaultInstance() {
}

MsgItemClientSyncDelItemC2GS::MsgItemClientSyncDelItemC2GS(const MsgItemClientSyncDelItemC2GS& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.MsgItemClientSyncDelItemC2GS)
}

void MsgItemClientSyncDelItemC2GS::SharedCtor() {
  _cached_size_ = 0;
  msgtype_ = 1222;
  uuid_ = GOOGLE_LONGLONG(0);
  dataid_ = 0;
  count_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgItemClientSyncDelItemC2GS::~MsgItemClientSyncDelItemC2GS() {
  // @@protoc_insertion_point(destructor:MsgPB.MsgItemClientSyncDelItemC2GS)
  SharedDtor();
}

void MsgItemClientSyncDelItemC2GS::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgItemClientSyncDelItemC2GS::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgItemClientSyncDelItemC2GS::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgItemClientSyncDelItemC2GS_descriptor_;
}

const MsgItemClientSyncDelItemC2GS& MsgItemClientSyncDelItemC2GS::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgItem_2eproto();
  return *default_instance_;
}

MsgItemClientSyncDelItemC2GS* MsgItemClientSyncDelItemC2GS::default_instance_ = NULL;

MsgItemClientSyncDelItemC2GS* MsgItemClientSyncDelItemC2GS::New() const {
  return new MsgItemClientSyncDelItemC2GS;
}

void MsgItemClientSyncDelItemC2GS::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<MsgItemClientSyncDelItemC2GS*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 15) {
    ZR_(dataid_, count_);
    msgtype_ = 1222;
    uuid_ = GOOGLE_LONGLONG(0);
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgItemClientSyncDelItemC2GS::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.MsgItemClientSyncDelItemC2GS)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_ITEM_CLIENTSYNC_DEL_ITEM];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::EMsgType_IsValid(value)) {
            set_msgtype(static_cast< ::MsgPB::EMsgType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_uuid;
        break;
      }

      // optional int64 uuid = 2;
      case 2: {
        if (tag == 16) {
         parse_uuid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &uuid_)));
          set_has_uuid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_dataid;
        break;
      }

      // optional int32 dataid = 3;
      case 3: {
        if (tag == 24) {
         parse_dataid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &dataid_)));
          set_has_dataid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_count;
        break;
      }

      // optional int32 count = 4;
      case 4: {
        if (tag == 32) {
         parse_count:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &count_)));
          set_has_count();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.MsgItemClientSyncDelItemC2GS)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.MsgItemClientSyncDelItemC2GS)
  return false;
#undef DO_
}

void MsgItemClientSyncDelItemC2GS::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.MsgItemClientSyncDelItemC2GS)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_ITEM_CLIENTSYNC_DEL_ITEM];
  if (has_msgtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->msgtype(), output);
  }

  // optional int64 uuid = 2;
  if (has_uuid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->uuid(), output);
  }

  // optional int32 dataid = 3;
  if (has_dataid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->dataid(), output);
  }

  // optional int32 count = 4;
  if (has_count()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->count(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.MsgItemClientSyncDelItemC2GS)
}

::google::protobuf::uint8* MsgItemClientSyncDelItemC2GS::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.MsgItemClientSyncDelItemC2GS)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_ITEM_CLIENTSYNC_DEL_ITEM];
  if (has_msgtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->msgtype(), target);
  }

  // optional int64 uuid = 2;
  if (has_uuid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->uuid(), target);
  }

  // optional int32 dataid = 3;
  if (has_dataid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->dataid(), target);
  }

  // optional int32 count = 4;
  if (has_count()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->count(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.MsgItemClientSyncDelItemC2GS)
  return target;
}

int MsgItemClientSyncDelItemC2GS::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_ITEM_CLIENTSYNC_DEL_ITEM];
    if (has_msgtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgtype());
    }

    // optional int64 uuid = 2;
    if (has_uuid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->uuid());
    }

    // optional int32 dataid = 3;
    if (has_dataid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->dataid());
    }

    // optional int32 count = 4;
    if (has_count()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->count());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgItemClientSyncDelItemC2GS::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgItemClientSyncDelItemC2GS* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgItemClientSyncDelItemC2GS*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgItemClientSyncDelItemC2GS::MergeFrom(const MsgItemClientSyncDelItemC2GS& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msgtype()) {
      set_msgtype(from.msgtype());
    }
    if (from.has_uuid()) {
      set_uuid(from.uuid());
    }
    if (from.has_dataid()) {
      set_dataid(from.dataid());
    }
    if (from.has_count()) {
      set_count(from.count());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgItemClientSyncDelItemC2GS::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgItemClientSyncDelItemC2GS::CopyFrom(const MsgItemClientSyncDelItemC2GS& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgItemClientSyncDelItemC2GS::IsInitialized() const {

  return true;
}

void MsgItemClientSyncDelItemC2GS::Swap(MsgItemClientSyncDelItemC2GS* other) {
  if (other != this) {
    std::swap(msgtype_, other->msgtype_);
    std::swap(uuid_, other->uuid_);
    std::swap(dataid_, other->dataid_);
    std::swap(count_, other->count_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgItemClientSyncDelItemC2GS::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgItemClientSyncDelItemC2GS_descriptor_;
  metadata.reflection = MsgItemClientSyncDelItemC2GS_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgItemShortcutS2C_ShortcutInfo::kPosFieldNumber;
const int MsgItemShortcutS2C_ShortcutInfo::kUuidFieldNumber;
#endif  // !_MSC_VER

MsgItemShortcutS2C_ShortcutInfo::MsgItemShortcutS2C_ShortcutInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.MsgItemShortcutS2C.ShortcutInfo)
}

void MsgItemShortcutS2C_ShortcutInfo::InitAsDefaultInstance() {
}

MsgItemShortcutS2C_ShortcutInfo::MsgItemShortcutS2C_ShortcutInfo(const MsgItemShortcutS2C_ShortcutInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.MsgItemShortcutS2C.ShortcutInfo)
}

void MsgItemShortcutS2C_ShortcutInfo::SharedCtor() {
  _cached_size_ = 0;
  pos_ = 0;
  uuid_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgItemShortcutS2C_ShortcutInfo::~MsgItemShortcutS2C_ShortcutInfo() {
  // @@protoc_insertion_point(destructor:MsgPB.MsgItemShortcutS2C.ShortcutInfo)
  SharedDtor();
}

void MsgItemShortcutS2C_ShortcutInfo::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgItemShortcutS2C_ShortcutInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgItemShortcutS2C_ShortcutInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgItemShortcutS2C_ShortcutInfo_descriptor_;
}

const MsgItemShortcutS2C_ShortcutInfo& MsgItemShortcutS2C_ShortcutInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgItem_2eproto();
  return *default_instance_;
}

MsgItemShortcutS2C_ShortcutInfo* MsgItemShortcutS2C_ShortcutInfo::default_instance_ = NULL;

MsgItemShortcutS2C_ShortcutInfo* MsgItemShortcutS2C_ShortcutInfo::New() const {
  return new MsgItemShortcutS2C_ShortcutInfo;
}

void MsgItemShortcutS2C_ShortcutInfo::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<MsgItemShortcutS2C_ShortcutInfo*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(uuid_, pos_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgItemShortcutS2C_ShortcutInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.MsgItemShortcutS2C.ShortcutInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 pos = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pos_)));
          set_has_pos();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_uuid;
        break;
      }

      // optional int64 uuid = 2;
      case 2: {
        if (tag == 16) {
         parse_uuid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &uuid_)));
          set_has_uuid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.MsgItemShortcutS2C.ShortcutInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.MsgItemShortcutS2C.ShortcutInfo)
  return false;
#undef DO_
}

void MsgItemShortcutS2C_ShortcutInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.MsgItemShortcutS2C.ShortcutInfo)
  // optional int32 pos = 1;
  if (has_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->pos(), output);
  }

  // optional int64 uuid = 2;
  if (has_uuid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->uuid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.MsgItemShortcutS2C.ShortcutInfo)
}

::google::protobuf::uint8* MsgItemShortcutS2C_ShortcutInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.MsgItemShortcutS2C.ShortcutInfo)
  // optional int32 pos = 1;
  if (has_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->pos(), target);
  }

  // optional int64 uuid = 2;
  if (has_uuid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->uuid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.MsgItemShortcutS2C.ShortcutInfo)
  return target;
}

int MsgItemShortcutS2C_ShortcutInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 pos = 1;
    if (has_pos()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pos());
    }

    // optional int64 uuid = 2;
    if (has_uuid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->uuid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgItemShortcutS2C_ShortcutInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgItemShortcutS2C_ShortcutInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgItemShortcutS2C_ShortcutInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgItemShortcutS2C_ShortcutInfo::MergeFrom(const MsgItemShortcutS2C_ShortcutInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_pos()) {
      set_pos(from.pos());
    }
    if (from.has_uuid()) {
      set_uuid(from.uuid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgItemShortcutS2C_ShortcutInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgItemShortcutS2C_ShortcutInfo::CopyFrom(const MsgItemShortcutS2C_ShortcutInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgItemShortcutS2C_ShortcutInfo::IsInitialized() const {

  return true;
}

void MsgItemShortcutS2C_ShortcutInfo::Swap(MsgItemShortcutS2C_ShortcutInfo* other) {
  if (other != this) {
    std::swap(pos_, other->pos_);
    std::swap(uuid_, other->uuid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgItemShortcutS2C_ShortcutInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgItemShortcutS2C_ShortcutInfo_descriptor_;
  metadata.reflection = MsgItemShortcutS2C_ShortcutInfo_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int MsgItemShortcutS2C::kMsgTypeFieldNumber;
const int MsgItemShortcutS2C::kIggidFieldNumber;
const int MsgItemShortcutS2C::kShortcutFieldNumber;
#endif  // !_MSC_VER

MsgItemShortcutS2C::MsgItemShortcutS2C()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.MsgItemShortcutS2C)
}

void MsgItemShortcutS2C::InitAsDefaultInstance() {
}

MsgItemShortcutS2C::MsgItemShortcutS2C(const MsgItemShortcutS2C& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.MsgItemShortcutS2C)
}

void MsgItemShortcutS2C::SharedCtor() {
  _cached_size_ = 0;
  msgtype_ = 1233;
  iggid_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgItemShortcutS2C::~MsgItemShortcutS2C() {
  // @@protoc_insertion_point(destructor:MsgPB.MsgItemShortcutS2C)
  SharedDtor();
}

void MsgItemShortcutS2C::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgItemShortcutS2C::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgItemShortcutS2C::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgItemShortcutS2C_descriptor_;
}

const MsgItemShortcutS2C& MsgItemShortcutS2C::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgItem_2eproto();
  return *default_instance_;
}

MsgItemShortcutS2C* MsgItemShortcutS2C::default_instance_ = NULL;

MsgItemShortcutS2C* MsgItemShortcutS2C::New() const {
  return new MsgItemShortcutS2C;
}

void MsgItemShortcutS2C::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    msgtype_ = 1233;
    iggid_ = GOOGLE_LONGLONG(0);
  }
  shortcut_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgItemShortcutS2C::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.MsgItemShortcutS2C)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_ITEM_SHORTCUT_S2C];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::EMsgType_IsValid(value)) {
            set_msgtype(static_cast< ::MsgPB::EMsgType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_iggid;
        break;
      }

      // optional int64 iggid = 2;
      case 2: {
        if (tag == 16) {
         parse_iggid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &iggid_)));
          set_has_iggid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_shortcut;
        break;
      }

      // repeated .MsgPB.MsgItemShortcutS2C.ShortcutInfo shortcut = 3;
      case 3: {
        if (tag == 26) {
         parse_shortcut:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_shortcut()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_shortcut;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.MsgItemShortcutS2C)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.MsgItemShortcutS2C)
  return false;
#undef DO_
}

void MsgItemShortcutS2C::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.MsgItemShortcutS2C)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_ITEM_SHORTCUT_S2C];
  if (has_msgtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->msgtype(), output);
  }

  // optional int64 iggid = 2;
  if (has_iggid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->iggid(), output);
  }

  // repeated .MsgPB.MsgItemShortcutS2C.ShortcutInfo shortcut = 3;
  for (int i = 0; i < this->shortcut_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->shortcut(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.MsgItemShortcutS2C)
}

::google::protobuf::uint8* MsgItemShortcutS2C::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.MsgItemShortcutS2C)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_ITEM_SHORTCUT_S2C];
  if (has_msgtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->msgtype(), target);
  }

  // optional int64 iggid = 2;
  if (has_iggid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->iggid(), target);
  }

  // repeated .MsgPB.MsgItemShortcutS2C.ShortcutInfo shortcut = 3;
  for (int i = 0; i < this->shortcut_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->shortcut(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.MsgItemShortcutS2C)
  return target;
}

int MsgItemShortcutS2C::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_ITEM_SHORTCUT_S2C];
    if (has_msgtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgtype());
    }

    // optional int64 iggid = 2;
    if (has_iggid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->iggid());
    }

  }
  // repeated .MsgPB.MsgItemShortcutS2C.ShortcutInfo shortcut = 3;
  total_size += 1 * this->shortcut_size();
  for (int i = 0; i < this->shortcut_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->shortcut(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgItemShortcutS2C::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgItemShortcutS2C* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgItemShortcutS2C*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgItemShortcutS2C::MergeFrom(const MsgItemShortcutS2C& from) {
  GOOGLE_CHECK_NE(&from, this);
  shortcut_.MergeFrom(from.shortcut_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msgtype()) {
      set_msgtype(from.msgtype());
    }
    if (from.has_iggid()) {
      set_iggid(from.iggid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgItemShortcutS2C::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgItemShortcutS2C::CopyFrom(const MsgItemShortcutS2C& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgItemShortcutS2C::IsInitialized() const {

  return true;
}

void MsgItemShortcutS2C::Swap(MsgItemShortcutS2C* other) {
  if (other != this) {
    std::swap(msgtype_, other->msgtype_);
    std::swap(iggid_, other->iggid_);
    shortcut_.Swap(&other->shortcut_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgItemShortcutS2C::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgItemShortcutS2C_descriptor_;
  metadata.reflection = MsgItemShortcutS2C_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgItemShortcutSetC2S::kMsgTypeFieldNumber;
const int MsgItemShortcutSetC2S::kIggidFieldNumber;
const int MsgItemShortcutSetC2S::kPosFieldNumber;
const int MsgItemShortcutSetC2S::kUuidFieldNumber;
#endif  // !_MSC_VER

MsgItemShortcutSetC2S::MsgItemShortcutSetC2S()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.MsgItemShortcutSetC2S)
}

void MsgItemShortcutSetC2S::InitAsDefaultInstance() {
}

MsgItemShortcutSetC2S::MsgItemShortcutSetC2S(const MsgItemShortcutSetC2S& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.MsgItemShortcutSetC2S)
}

void MsgItemShortcutSetC2S::SharedCtor() {
  _cached_size_ = 0;
  msgtype_ = 1235;
  iggid_ = GOOGLE_LONGLONG(0);
  pos_ = 0;
  uuid_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgItemShortcutSetC2S::~MsgItemShortcutSetC2S() {
  // @@protoc_insertion_point(destructor:MsgPB.MsgItemShortcutSetC2S)
  SharedDtor();
}

void MsgItemShortcutSetC2S::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgItemShortcutSetC2S::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgItemShortcutSetC2S::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgItemShortcutSetC2S_descriptor_;
}

const MsgItemShortcutSetC2S& MsgItemShortcutSetC2S::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgItem_2eproto();
  return *default_instance_;
}

MsgItemShortcutSetC2S* MsgItemShortcutSetC2S::default_instance_ = NULL;

MsgItemShortcutSetC2S* MsgItemShortcutSetC2S::New() const {
  return new MsgItemShortcutSetC2S;
}

void MsgItemShortcutSetC2S::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<MsgItemShortcutSetC2S*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 15) {
    ZR_(pos_, uuid_);
    msgtype_ = 1235;
    iggid_ = GOOGLE_LONGLONG(0);
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgItemShortcutSetC2S::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.MsgItemShortcutSetC2S)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_ITEM_SHORTCUT_SET_C2S];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::EMsgType_IsValid(value)) {
            set_msgtype(static_cast< ::MsgPB::EMsgType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_iggid;
        break;
      }

      // optional int64 iggid = 2;
      case 2: {
        if (tag == 16) {
         parse_iggid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &iggid_)));
          set_has_iggid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_pos;
        break;
      }

      // optional int32 pos = 3;
      case 3: {
        if (tag == 24) {
         parse_pos:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pos_)));
          set_has_pos();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_uuid;
        break;
      }

      // optional int64 uuid = 4;
      case 4: {
        if (tag == 32) {
         parse_uuid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &uuid_)));
          set_has_uuid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.MsgItemShortcutSetC2S)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.MsgItemShortcutSetC2S)
  return false;
#undef DO_
}

void MsgItemShortcutSetC2S::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.MsgItemShortcutSetC2S)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_ITEM_SHORTCUT_SET_C2S];
  if (has_msgtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->msgtype(), output);
  }

  // optional int64 iggid = 2;
  if (has_iggid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->iggid(), output);
  }

  // optional int32 pos = 3;
  if (has_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->pos(), output);
  }

  // optional int64 uuid = 4;
  if (has_uuid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->uuid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.MsgItemShortcutSetC2S)
}

::google::protobuf::uint8* MsgItemShortcutSetC2S::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.MsgItemShortcutSetC2S)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_ITEM_SHORTCUT_SET_C2S];
  if (has_msgtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->msgtype(), target);
  }

  // optional int64 iggid = 2;
  if (has_iggid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->iggid(), target);
  }

  // optional int32 pos = 3;
  if (has_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->pos(), target);
  }

  // optional int64 uuid = 4;
  if (has_uuid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->uuid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.MsgItemShortcutSetC2S)
  return target;
}

int MsgItemShortcutSetC2S::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_ITEM_SHORTCUT_SET_C2S];
    if (has_msgtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgtype());
    }

    // optional int64 iggid = 2;
    if (has_iggid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->iggid());
    }

    // optional int32 pos = 3;
    if (has_pos()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pos());
    }

    // optional int64 uuid = 4;
    if (has_uuid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->uuid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgItemShortcutSetC2S::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgItemShortcutSetC2S* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgItemShortcutSetC2S*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgItemShortcutSetC2S::MergeFrom(const MsgItemShortcutSetC2S& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msgtype()) {
      set_msgtype(from.msgtype());
    }
    if (from.has_iggid()) {
      set_iggid(from.iggid());
    }
    if (from.has_pos()) {
      set_pos(from.pos());
    }
    if (from.has_uuid()) {
      set_uuid(from.uuid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgItemShortcutSetC2S::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgItemShortcutSetC2S::CopyFrom(const MsgItemShortcutSetC2S& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgItemShortcutSetC2S::IsInitialized() const {

  return true;
}

void MsgItemShortcutSetC2S::Swap(MsgItemShortcutSetC2S* other) {
  if (other != this) {
    std::swap(msgtype_, other->msgtype_);
    std::swap(iggid_, other->iggid_);
    std::swap(pos_, other->pos_);
    std::swap(uuid_, other->uuid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgItemShortcutSetC2S::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgItemShortcutSetC2S_descriptor_;
  metadata.reflection = MsgItemShortcutSetC2S_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgItemEquipAttrLockC2S::kMsgTypeFieldNumber;
const int MsgItemEquipAttrLockC2S::kIggidFieldNumber;
const int MsgItemEquipAttrLockC2S::kUuidFieldNumber;
const int MsgItemEquipAttrLockC2S::kPosFieldNumber;
const int MsgItemEquipAttrLockC2S::kLockFieldNumber;
#endif  // !_MSC_VER

MsgItemEquipAttrLockC2S::MsgItemEquipAttrLockC2S()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.MsgItemEquipAttrLockC2S)
}

void MsgItemEquipAttrLockC2S::InitAsDefaultInstance() {
}

MsgItemEquipAttrLockC2S::MsgItemEquipAttrLockC2S(const MsgItemEquipAttrLockC2S& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.MsgItemEquipAttrLockC2S)
}

void MsgItemEquipAttrLockC2S::SharedCtor() {
  _cached_size_ = 0;
  msgtype_ = 1237;
  iggid_ = GOOGLE_LONGLONG(0);
  uuid_ = GOOGLE_LONGLONG(0);
  pos_ = 0;
  lock_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgItemEquipAttrLockC2S::~MsgItemEquipAttrLockC2S() {
  // @@protoc_insertion_point(destructor:MsgPB.MsgItemEquipAttrLockC2S)
  SharedDtor();
}

void MsgItemEquipAttrLockC2S::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgItemEquipAttrLockC2S::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgItemEquipAttrLockC2S::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgItemEquipAttrLockC2S_descriptor_;
}

const MsgItemEquipAttrLockC2S& MsgItemEquipAttrLockC2S::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgItem_2eproto();
  return *default_instance_;
}

MsgItemEquipAttrLockC2S* MsgItemEquipAttrLockC2S::default_instance_ = NULL;

MsgItemEquipAttrLockC2S* MsgItemEquipAttrLockC2S::New() const {
  return new MsgItemEquipAttrLockC2S;
}

void MsgItemEquipAttrLockC2S::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<MsgItemEquipAttrLockC2S*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 31) {
    ZR_(pos_, lock_);
    msgtype_ = 1237;
    iggid_ = GOOGLE_LONGLONG(0);
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgItemEquipAttrLockC2S::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.MsgItemEquipAttrLockC2S)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_ITEM_EQUIP_ATTR_LOCK_C2S];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::EMsgType_IsValid(value)) {
            set_msgtype(static_cast< ::MsgPB::EMsgType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_iggid;
        break;
      }

      // optional int64 iggid = 2;
      case 2: {
        if (tag == 16) {
         parse_iggid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &iggid_)));
          set_has_iggid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_uuid;
        break;
      }

      // optional int64 uuid = 3;
      case 3: {
        if (tag == 24) {
         parse_uuid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &uuid_)));
          set_has_uuid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_pos;
        break;
      }

      // optional int32 pos = 4;
      case 4: {
        if (tag == 32) {
         parse_pos:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pos_)));
          set_has_pos();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_lock;
        break;
      }

      // optional bool lock = 5;
      case 5: {
        if (tag == 40) {
         parse_lock:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &lock_)));
          set_has_lock();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.MsgItemEquipAttrLockC2S)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.MsgItemEquipAttrLockC2S)
  return false;
#undef DO_
}

void MsgItemEquipAttrLockC2S::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.MsgItemEquipAttrLockC2S)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_ITEM_EQUIP_ATTR_LOCK_C2S];
  if (has_msgtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->msgtype(), output);
  }

  // optional int64 iggid = 2;
  if (has_iggid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->iggid(), output);
  }

  // optional int64 uuid = 3;
  if (has_uuid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->uuid(), output);
  }

  // optional int32 pos = 4;
  if (has_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->pos(), output);
  }

  // optional bool lock = 5;
  if (has_lock()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->lock(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.MsgItemEquipAttrLockC2S)
}

::google::protobuf::uint8* MsgItemEquipAttrLockC2S::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.MsgItemEquipAttrLockC2S)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_ITEM_EQUIP_ATTR_LOCK_C2S];
  if (has_msgtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->msgtype(), target);
  }

  // optional int64 iggid = 2;
  if (has_iggid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->iggid(), target);
  }

  // optional int64 uuid = 3;
  if (has_uuid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->uuid(), target);
  }

  // optional int32 pos = 4;
  if (has_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->pos(), target);
  }

  // optional bool lock = 5;
  if (has_lock()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->lock(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.MsgItemEquipAttrLockC2S)
  return target;
}

int MsgItemEquipAttrLockC2S::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_ITEM_EQUIP_ATTR_LOCK_C2S];
    if (has_msgtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgtype());
    }

    // optional int64 iggid = 2;
    if (has_iggid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->iggid());
    }

    // optional int64 uuid = 3;
    if (has_uuid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->uuid());
    }

    // optional int32 pos = 4;
    if (has_pos()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pos());
    }

    // optional bool lock = 5;
    if (has_lock()) {
      total_size += 1 + 1;
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgItemEquipAttrLockC2S::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgItemEquipAttrLockC2S* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgItemEquipAttrLockC2S*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgItemEquipAttrLockC2S::MergeFrom(const MsgItemEquipAttrLockC2S& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msgtype()) {
      set_msgtype(from.msgtype());
    }
    if (from.has_iggid()) {
      set_iggid(from.iggid());
    }
    if (from.has_uuid()) {
      set_uuid(from.uuid());
    }
    if (from.has_pos()) {
      set_pos(from.pos());
    }
    if (from.has_lock()) {
      set_lock(from.lock());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgItemEquipAttrLockC2S::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgItemEquipAttrLockC2S::CopyFrom(const MsgItemEquipAttrLockC2S& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgItemEquipAttrLockC2S::IsInitialized() const {

  return true;
}

void MsgItemEquipAttrLockC2S::Swap(MsgItemEquipAttrLockC2S* other) {
  if (other != this) {
    std::swap(msgtype_, other->msgtype_);
    std::swap(iggid_, other->iggid_);
    std::swap(uuid_, other->uuid_);
    std::swap(pos_, other->pos_);
    std::swap(lock_, other->lock_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgItemEquipAttrLockC2S::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgItemEquipAttrLockC2S_descriptor_;
  metadata.reflection = MsgItemEquipAttrLockC2S_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgItemEquipAttrLockS2C::kMsgTypeFieldNumber;
const int MsgItemEquipAttrLockS2C::kIggidFieldNumber;
const int MsgItemEquipAttrLockS2C::kUuidFieldNumber;
const int MsgItemEquipAttrLockS2C::kPosFieldNumber;
const int MsgItemEquipAttrLockS2C::kLockFieldNumber;
#endif  // !_MSC_VER

MsgItemEquipAttrLockS2C::MsgItemEquipAttrLockS2C()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.MsgItemEquipAttrLockS2C)
}

void MsgItemEquipAttrLockS2C::InitAsDefaultInstance() {
}

MsgItemEquipAttrLockS2C::MsgItemEquipAttrLockS2C(const MsgItemEquipAttrLockS2C& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.MsgItemEquipAttrLockS2C)
}

void MsgItemEquipAttrLockS2C::SharedCtor() {
  _cached_size_ = 0;
  msgtype_ = 1238;
  iggid_ = GOOGLE_LONGLONG(0);
  uuid_ = GOOGLE_LONGLONG(0);
  pos_ = 0;
  lock_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgItemEquipAttrLockS2C::~MsgItemEquipAttrLockS2C() {
  // @@protoc_insertion_point(destructor:MsgPB.MsgItemEquipAttrLockS2C)
  SharedDtor();
}

void MsgItemEquipAttrLockS2C::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgItemEquipAttrLockS2C::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgItemEquipAttrLockS2C::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgItemEquipAttrLockS2C_descriptor_;
}

const MsgItemEquipAttrLockS2C& MsgItemEquipAttrLockS2C::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgItem_2eproto();
  return *default_instance_;
}

MsgItemEquipAttrLockS2C* MsgItemEquipAttrLockS2C::default_instance_ = NULL;

MsgItemEquipAttrLockS2C* MsgItemEquipAttrLockS2C::New() const {
  return new MsgItemEquipAttrLockS2C;
}

void MsgItemEquipAttrLockS2C::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<MsgItemEquipAttrLockS2C*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 31) {
    ZR_(pos_, lock_);
    msgtype_ = 1238;
    iggid_ = GOOGLE_LONGLONG(0);
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgItemEquipAttrLockS2C::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.MsgItemEquipAttrLockS2C)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_ITEM_EQUIP_ATTR_LOCK_S2C];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::EMsgType_IsValid(value)) {
            set_msgtype(static_cast< ::MsgPB::EMsgType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_iggid;
        break;
      }

      // optional int64 iggid = 2;
      case 2: {
        if (tag == 16) {
         parse_iggid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &iggid_)));
          set_has_iggid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_uuid;
        break;
      }

      // optional int64 uuid = 3;
      case 3: {
        if (tag == 24) {
         parse_uuid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &uuid_)));
          set_has_uuid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_pos;
        break;
      }

      // optional int32 pos = 4;
      case 4: {
        if (tag == 32) {
         parse_pos:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pos_)));
          set_has_pos();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_lock;
        break;
      }

      // optional bool lock = 5;
      case 5: {
        if (tag == 40) {
         parse_lock:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &lock_)));
          set_has_lock();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.MsgItemEquipAttrLockS2C)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.MsgItemEquipAttrLockS2C)
  return false;
#undef DO_
}

void MsgItemEquipAttrLockS2C::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.MsgItemEquipAttrLockS2C)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_ITEM_EQUIP_ATTR_LOCK_S2C];
  if (has_msgtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->msgtype(), output);
  }

  // optional int64 iggid = 2;
  if (has_iggid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->iggid(), output);
  }

  // optional int64 uuid = 3;
  if (has_uuid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->uuid(), output);
  }

  // optional int32 pos = 4;
  if (has_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->pos(), output);
  }

  // optional bool lock = 5;
  if (has_lock()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->lock(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.MsgItemEquipAttrLockS2C)
}

::google::protobuf::uint8* MsgItemEquipAttrLockS2C::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.MsgItemEquipAttrLockS2C)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_ITEM_EQUIP_ATTR_LOCK_S2C];
  if (has_msgtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->msgtype(), target);
  }

  // optional int64 iggid = 2;
  if (has_iggid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->iggid(), target);
  }

  // optional int64 uuid = 3;
  if (has_uuid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->uuid(), target);
  }

  // optional int32 pos = 4;
  if (has_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->pos(), target);
  }

  // optional bool lock = 5;
  if (has_lock()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->lock(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.MsgItemEquipAttrLockS2C)
  return target;
}

int MsgItemEquipAttrLockS2C::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_ITEM_EQUIP_ATTR_LOCK_S2C];
    if (has_msgtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgtype());
    }

    // optional int64 iggid = 2;
    if (has_iggid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->iggid());
    }

    // optional int64 uuid = 3;
    if (has_uuid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->uuid());
    }

    // optional int32 pos = 4;
    if (has_pos()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pos());
    }

    // optional bool lock = 5;
    if (has_lock()) {
      total_size += 1 + 1;
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgItemEquipAttrLockS2C::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgItemEquipAttrLockS2C* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgItemEquipAttrLockS2C*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgItemEquipAttrLockS2C::MergeFrom(const MsgItemEquipAttrLockS2C& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msgtype()) {
      set_msgtype(from.msgtype());
    }
    if (from.has_iggid()) {
      set_iggid(from.iggid());
    }
    if (from.has_uuid()) {
      set_uuid(from.uuid());
    }
    if (from.has_pos()) {
      set_pos(from.pos());
    }
    if (from.has_lock()) {
      set_lock(from.lock());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgItemEquipAttrLockS2C::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgItemEquipAttrLockS2C::CopyFrom(const MsgItemEquipAttrLockS2C& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgItemEquipAttrLockS2C::IsInitialized() const {

  return true;
}

void MsgItemEquipAttrLockS2C::Swap(MsgItemEquipAttrLockS2C* other) {
  if (other != this) {
    std::swap(msgtype_, other->msgtype_);
    std::swap(iggid_, other->iggid_);
    std::swap(uuid_, other->uuid_);
    std::swap(pos_, other->pos_);
    std::swap(lock_, other->lock_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgItemEquipAttrLockS2C::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgItemEquipAttrLockS2C_descriptor_;
  metadata.reflection = MsgItemEquipAttrLockS2C_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgItemEquipAttrWashC2S::kMsgTypeFieldNumber;
const int MsgItemEquipAttrWashC2S::kIggidFieldNumber;
const int MsgItemEquipAttrWashC2S::kUuidFieldNumber;
const int MsgItemEquipAttrWashC2S::kNTypeFieldNumber;
const int MsgItemEquipAttrWashC2S::kCanUseDiamondFieldNumber;
#endif  // !_MSC_VER

MsgItemEquipAttrWashC2S::MsgItemEquipAttrWashC2S()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.MsgItemEquipAttrWashC2S)
}

void MsgItemEquipAttrWashC2S::InitAsDefaultInstance() {
}

MsgItemEquipAttrWashC2S::MsgItemEquipAttrWashC2S(const MsgItemEquipAttrWashC2S& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.MsgItemEquipAttrWashC2S)
}

void MsgItemEquipAttrWashC2S::SharedCtor() {
  _cached_size_ = 0;
  msgtype_ = 1239;
  iggid_ = GOOGLE_LONGLONG(0);
  uuid_ = GOOGLE_LONGLONG(0);
  ntype_ = 0;
  canusediamond_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgItemEquipAttrWashC2S::~MsgItemEquipAttrWashC2S() {
  // @@protoc_insertion_point(destructor:MsgPB.MsgItemEquipAttrWashC2S)
  SharedDtor();
}

void MsgItemEquipAttrWashC2S::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgItemEquipAttrWashC2S::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgItemEquipAttrWashC2S::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgItemEquipAttrWashC2S_descriptor_;
}

const MsgItemEquipAttrWashC2S& MsgItemEquipAttrWashC2S::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgItem_2eproto();
  return *default_instance_;
}

MsgItemEquipAttrWashC2S* MsgItemEquipAttrWashC2S::default_instance_ = NULL;

MsgItemEquipAttrWashC2S* MsgItemEquipAttrWashC2S::New() const {
  return new MsgItemEquipAttrWashC2S;
}

void MsgItemEquipAttrWashC2S::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<MsgItemEquipAttrWashC2S*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 31) {
    ZR_(ntype_, canusediamond_);
    msgtype_ = 1239;
    iggid_ = GOOGLE_LONGLONG(0);
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgItemEquipAttrWashC2S::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.MsgItemEquipAttrWashC2S)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_ITEM_EQUIP_ATTR_WASH_C2S];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::EMsgType_IsValid(value)) {
            set_msgtype(static_cast< ::MsgPB::EMsgType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_iggid;
        break;
      }

      // optional int64 iggid = 2;
      case 2: {
        if (tag == 16) {
         parse_iggid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &iggid_)));
          set_has_iggid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_uuid;
        break;
      }

      // optional int64 uuid = 3;
      case 3: {
        if (tag == 24) {
         parse_uuid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &uuid_)));
          set_has_uuid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_nType;
        break;
      }

      // optional .MsgPB.WASHTYPE nType = 4;
      case 4: {
        if (tag == 32) {
         parse_nType:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::WASHTYPE_IsValid(value)) {
            set_ntype(static_cast< ::MsgPB::WASHTYPE >(value));
          } else {
            mutable_unknown_fields()->AddVarint(4, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_canUseDiamond;
        break;
      }

      // optional bool canUseDiamond = 5 [default = false];
      case 5: {
        if (tag == 40) {
         parse_canUseDiamond:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &canusediamond_)));
          set_has_canusediamond();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.MsgItemEquipAttrWashC2S)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.MsgItemEquipAttrWashC2S)
  return false;
#undef DO_
}

void MsgItemEquipAttrWashC2S::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.MsgItemEquipAttrWashC2S)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_ITEM_EQUIP_ATTR_WASH_C2S];
  if (has_msgtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->msgtype(), output);
  }

  // optional int64 iggid = 2;
  if (has_iggid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->iggid(), output);
  }

  // optional int64 uuid = 3;
  if (has_uuid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->uuid(), output);
  }

  // optional .MsgPB.WASHTYPE nType = 4;
  if (has_ntype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->ntype(), output);
  }

  // optional bool canUseDiamond = 5 [default = false];
  if (has_canusediamond()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->canusediamond(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.MsgItemEquipAttrWashC2S)
}

::google::protobuf::uint8* MsgItemEquipAttrWashC2S::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.MsgItemEquipAttrWashC2S)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_ITEM_EQUIP_ATTR_WASH_C2S];
  if (has_msgtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->msgtype(), target);
  }

  // optional int64 iggid = 2;
  if (has_iggid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->iggid(), target);
  }

  // optional int64 uuid = 3;
  if (has_uuid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->uuid(), target);
  }

  // optional .MsgPB.WASHTYPE nType = 4;
  if (has_ntype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->ntype(), target);
  }

  // optional bool canUseDiamond = 5 [default = false];
  if (has_canusediamond()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->canusediamond(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.MsgItemEquipAttrWashC2S)
  return target;
}

int MsgItemEquipAttrWashC2S::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_ITEM_EQUIP_ATTR_WASH_C2S];
    if (has_msgtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgtype());
    }

    // optional int64 iggid = 2;
    if (has_iggid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->iggid());
    }

    // optional int64 uuid = 3;
    if (has_uuid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->uuid());
    }

    // optional .MsgPB.WASHTYPE nType = 4;
    if (has_ntype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->ntype());
    }

    // optional bool canUseDiamond = 5 [default = false];
    if (has_canusediamond()) {
      total_size += 1 + 1;
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgItemEquipAttrWashC2S::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgItemEquipAttrWashC2S* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgItemEquipAttrWashC2S*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgItemEquipAttrWashC2S::MergeFrom(const MsgItemEquipAttrWashC2S& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msgtype()) {
      set_msgtype(from.msgtype());
    }
    if (from.has_iggid()) {
      set_iggid(from.iggid());
    }
    if (from.has_uuid()) {
      set_uuid(from.uuid());
    }
    if (from.has_ntype()) {
      set_ntype(from.ntype());
    }
    if (from.has_canusediamond()) {
      set_canusediamond(from.canusediamond());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgItemEquipAttrWashC2S::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgItemEquipAttrWashC2S::CopyFrom(const MsgItemEquipAttrWashC2S& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgItemEquipAttrWashC2S::IsInitialized() const {

  return true;
}

void MsgItemEquipAttrWashC2S::Swap(MsgItemEquipAttrWashC2S* other) {
  if (other != this) {
    std::swap(msgtype_, other->msgtype_);
    std::swap(iggid_, other->iggid_);
    std::swap(uuid_, other->uuid_);
    std::swap(ntype_, other->ntype_);
    std::swap(canusediamond_, other->canusediamond_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgItemEquipAttrWashC2S::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgItemEquipAttrWashC2S_descriptor_;
  metadata.reflection = MsgItemEquipAttrWashC2S_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgItemEquipAttrWashS2C::kMsgTypeFieldNumber;
const int MsgItemEquipAttrWashS2C::kIggidFieldNumber;
const int MsgItemEquipAttrWashS2C::kEResFieldNumber;
#endif  // !_MSC_VER

MsgItemEquipAttrWashS2C::MsgItemEquipAttrWashS2C()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.MsgItemEquipAttrWashS2C)
}

void MsgItemEquipAttrWashS2C::InitAsDefaultInstance() {
}

MsgItemEquipAttrWashS2C::MsgItemEquipAttrWashS2C(const MsgItemEquipAttrWashS2C& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.MsgItemEquipAttrWashS2C)
}

void MsgItemEquipAttrWashS2C::SharedCtor() {
  _cached_size_ = 0;
  msgtype_ = 1240;
  iggid_ = GOOGLE_LONGLONG(0);
  eres_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgItemEquipAttrWashS2C::~MsgItemEquipAttrWashS2C() {
  // @@protoc_insertion_point(destructor:MsgPB.MsgItemEquipAttrWashS2C)
  SharedDtor();
}

void MsgItemEquipAttrWashS2C::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgItemEquipAttrWashS2C::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgItemEquipAttrWashS2C::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgItemEquipAttrWashS2C_descriptor_;
}

const MsgItemEquipAttrWashS2C& MsgItemEquipAttrWashS2C::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgItem_2eproto();
  return *default_instance_;
}

MsgItemEquipAttrWashS2C* MsgItemEquipAttrWashS2C::default_instance_ = NULL;

MsgItemEquipAttrWashS2C* MsgItemEquipAttrWashS2C::New() const {
  return new MsgItemEquipAttrWashS2C;
}

void MsgItemEquipAttrWashS2C::Clear() {
  if (_has_bits_[0 / 32] & 7) {
    msgtype_ = 1240;
    iggid_ = GOOGLE_LONGLONG(0);
    eres_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgItemEquipAttrWashS2C::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.MsgItemEquipAttrWashS2C)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_ITEM_EQUIP_ATTR_WASH_S2C];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::EMsgType_IsValid(value)) {
            set_msgtype(static_cast< ::MsgPB::EMsgType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_iggid;
        break;
      }

      // optional int64 iggid = 2;
      case 2: {
        if (tag == 16) {
         parse_iggid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &iggid_)));
          set_has_iggid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_eRes;
        break;
      }

      // optional .MsgPB.ITEM_WASH_RESULT eRes = 3;
      case 3: {
        if (tag == 24) {
         parse_eRes:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::ITEM_WASH_RESULT_IsValid(value)) {
            set_eres(static_cast< ::MsgPB::ITEM_WASH_RESULT >(value));
          } else {
            mutable_unknown_fields()->AddVarint(3, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.MsgItemEquipAttrWashS2C)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.MsgItemEquipAttrWashS2C)
  return false;
#undef DO_
}

void MsgItemEquipAttrWashS2C::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.MsgItemEquipAttrWashS2C)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_ITEM_EQUIP_ATTR_WASH_S2C];
  if (has_msgtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->msgtype(), output);
  }

  // optional int64 iggid = 2;
  if (has_iggid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->iggid(), output);
  }

  // optional .MsgPB.ITEM_WASH_RESULT eRes = 3;
  if (has_eres()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->eres(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.MsgItemEquipAttrWashS2C)
}

::google::protobuf::uint8* MsgItemEquipAttrWashS2C::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.MsgItemEquipAttrWashS2C)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_ITEM_EQUIP_ATTR_WASH_S2C];
  if (has_msgtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->msgtype(), target);
  }

  // optional int64 iggid = 2;
  if (has_iggid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->iggid(), target);
  }

  // optional .MsgPB.ITEM_WASH_RESULT eRes = 3;
  if (has_eres()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->eres(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.MsgItemEquipAttrWashS2C)
  return target;
}

int MsgItemEquipAttrWashS2C::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_ITEM_EQUIP_ATTR_WASH_S2C];
    if (has_msgtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgtype());
    }

    // optional int64 iggid = 2;
    if (has_iggid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->iggid());
    }

    // optional .MsgPB.ITEM_WASH_RESULT eRes = 3;
    if (has_eres()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->eres());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgItemEquipAttrWashS2C::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgItemEquipAttrWashS2C* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgItemEquipAttrWashS2C*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgItemEquipAttrWashS2C::MergeFrom(const MsgItemEquipAttrWashS2C& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msgtype()) {
      set_msgtype(from.msgtype());
    }
    if (from.has_iggid()) {
      set_iggid(from.iggid());
    }
    if (from.has_eres()) {
      set_eres(from.eres());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgItemEquipAttrWashS2C::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgItemEquipAttrWashS2C::CopyFrom(const MsgItemEquipAttrWashS2C& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgItemEquipAttrWashS2C::IsInitialized() const {

  return true;
}

void MsgItemEquipAttrWashS2C::Swap(MsgItemEquipAttrWashS2C* other) {
  if (other != this) {
    std::swap(msgtype_, other->msgtype_);
    std::swap(iggid_, other->iggid_);
    std::swap(eres_, other->eres_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgItemEquipAttrWashS2C::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgItemEquipAttrWashS2C_descriptor_;
  metadata.reflection = MsgItemEquipAttrWashS2C_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgItemEquipAttrSaveC2S::kMsgTypeFieldNumber;
const int MsgItemEquipAttrSaveC2S::kIggidFieldNumber;
const int MsgItemEquipAttrSaveC2S::kUuidFieldNumber;
const int MsgItemEquipAttrSaveC2S::kSaveFieldNumber;
const int MsgItemEquipAttrSaveC2S::kNTypeFieldNumber;
#endif  // !_MSC_VER

MsgItemEquipAttrSaveC2S::MsgItemEquipAttrSaveC2S()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.MsgItemEquipAttrSaveC2S)
}

void MsgItemEquipAttrSaveC2S::InitAsDefaultInstance() {
}

MsgItemEquipAttrSaveC2S::MsgItemEquipAttrSaveC2S(const MsgItemEquipAttrSaveC2S& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.MsgItemEquipAttrSaveC2S)
}

void MsgItemEquipAttrSaveC2S::SharedCtor() {
  _cached_size_ = 0;
  msgtype_ = 1241;
  iggid_ = GOOGLE_LONGLONG(0);
  uuid_ = GOOGLE_LONGLONG(0);
  save_ = false;
  ntype_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgItemEquipAttrSaveC2S::~MsgItemEquipAttrSaveC2S() {
  // @@protoc_insertion_point(destructor:MsgPB.MsgItemEquipAttrSaveC2S)
  SharedDtor();
}

void MsgItemEquipAttrSaveC2S::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgItemEquipAttrSaveC2S::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgItemEquipAttrSaveC2S::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgItemEquipAttrSaveC2S_descriptor_;
}

const MsgItemEquipAttrSaveC2S& MsgItemEquipAttrSaveC2S::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgItem_2eproto();
  return *default_instance_;
}

MsgItemEquipAttrSaveC2S* MsgItemEquipAttrSaveC2S::default_instance_ = NULL;

MsgItemEquipAttrSaveC2S* MsgItemEquipAttrSaveC2S::New() const {
  return new MsgItemEquipAttrSaveC2S;
}

void MsgItemEquipAttrSaveC2S::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<MsgItemEquipAttrSaveC2S*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 31) {
    ZR_(save_, ntype_);
    msgtype_ = 1241;
    iggid_ = GOOGLE_LONGLONG(0);
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgItemEquipAttrSaveC2S::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.MsgItemEquipAttrSaveC2S)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_ITEM_EQUIP_ATTR_SAVE_C2S];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::EMsgType_IsValid(value)) {
            set_msgtype(static_cast< ::MsgPB::EMsgType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_iggid;
        break;
      }

      // optional int64 iggid = 2;
      case 2: {
        if (tag == 16) {
         parse_iggid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &iggid_)));
          set_has_iggid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_uuid;
        break;
      }

      // optional int64 uuid = 3;
      case 3: {
        if (tag == 24) {
         parse_uuid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &uuid_)));
          set_has_uuid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_save;
        break;
      }

      // optional bool save = 4;
      case 4: {
        if (tag == 32) {
         parse_save:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &save_)));
          set_has_save();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_nType;
        break;
      }

      // optional .MsgPB.WASHTYPE nType = 5;
      case 5: {
        if (tag == 40) {
         parse_nType:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::WASHTYPE_IsValid(value)) {
            set_ntype(static_cast< ::MsgPB::WASHTYPE >(value));
          } else {
            mutable_unknown_fields()->AddVarint(5, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.MsgItemEquipAttrSaveC2S)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.MsgItemEquipAttrSaveC2S)
  return false;
#undef DO_
}

void MsgItemEquipAttrSaveC2S::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.MsgItemEquipAttrSaveC2S)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_ITEM_EQUIP_ATTR_SAVE_C2S];
  if (has_msgtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->msgtype(), output);
  }

  // optional int64 iggid = 2;
  if (has_iggid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->iggid(), output);
  }

  // optional int64 uuid = 3;
  if (has_uuid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->uuid(), output);
  }

  // optional bool save = 4;
  if (has_save()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->save(), output);
  }

  // optional .MsgPB.WASHTYPE nType = 5;
  if (has_ntype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      5, this->ntype(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.MsgItemEquipAttrSaveC2S)
}

::google::protobuf::uint8* MsgItemEquipAttrSaveC2S::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.MsgItemEquipAttrSaveC2S)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_ITEM_EQUIP_ATTR_SAVE_C2S];
  if (has_msgtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->msgtype(), target);
  }

  // optional int64 iggid = 2;
  if (has_iggid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->iggid(), target);
  }

  // optional int64 uuid = 3;
  if (has_uuid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->uuid(), target);
  }

  // optional bool save = 4;
  if (has_save()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->save(), target);
  }

  // optional .MsgPB.WASHTYPE nType = 5;
  if (has_ntype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      5, this->ntype(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.MsgItemEquipAttrSaveC2S)
  return target;
}

int MsgItemEquipAttrSaveC2S::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_ITEM_EQUIP_ATTR_SAVE_C2S];
    if (has_msgtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgtype());
    }

    // optional int64 iggid = 2;
    if (has_iggid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->iggid());
    }

    // optional int64 uuid = 3;
    if (has_uuid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->uuid());
    }

    // optional bool save = 4;
    if (has_save()) {
      total_size += 1 + 1;
    }

    // optional .MsgPB.WASHTYPE nType = 5;
    if (has_ntype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->ntype());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgItemEquipAttrSaveC2S::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgItemEquipAttrSaveC2S* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgItemEquipAttrSaveC2S*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgItemEquipAttrSaveC2S::MergeFrom(const MsgItemEquipAttrSaveC2S& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msgtype()) {
      set_msgtype(from.msgtype());
    }
    if (from.has_iggid()) {
      set_iggid(from.iggid());
    }
    if (from.has_uuid()) {
      set_uuid(from.uuid());
    }
    if (from.has_save()) {
      set_save(from.save());
    }
    if (from.has_ntype()) {
      set_ntype(from.ntype());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgItemEquipAttrSaveC2S::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgItemEquipAttrSaveC2S::CopyFrom(const MsgItemEquipAttrSaveC2S& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgItemEquipAttrSaveC2S::IsInitialized() const {

  return true;
}

void MsgItemEquipAttrSaveC2S::Swap(MsgItemEquipAttrSaveC2S* other) {
  if (other != this) {
    std::swap(msgtype_, other->msgtype_);
    std::swap(iggid_, other->iggid_);
    std::swap(uuid_, other->uuid_);
    std::swap(save_, other->save_);
    std::swap(ntype_, other->ntype_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgItemEquipAttrSaveC2S::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgItemEquipAttrSaveC2S_descriptor_;
  metadata.reflection = MsgItemEquipAttrSaveC2S_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgItemEquipAttrSaveS2C::kMsgTypeFieldNumber;
const int MsgItemEquipAttrSaveS2C::kIggidFieldNumber;
const int MsgItemEquipAttrSaveS2C::kUuidFieldNumber;
#endif  // !_MSC_VER

MsgItemEquipAttrSaveS2C::MsgItemEquipAttrSaveS2C()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.MsgItemEquipAttrSaveS2C)
}

void MsgItemEquipAttrSaveS2C::InitAsDefaultInstance() {
}

MsgItemEquipAttrSaveS2C::MsgItemEquipAttrSaveS2C(const MsgItemEquipAttrSaveS2C& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.MsgItemEquipAttrSaveS2C)
}

void MsgItemEquipAttrSaveS2C::SharedCtor() {
  _cached_size_ = 0;
  msgtype_ = 1242;
  iggid_ = GOOGLE_LONGLONG(0);
  uuid_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgItemEquipAttrSaveS2C::~MsgItemEquipAttrSaveS2C() {
  // @@protoc_insertion_point(destructor:MsgPB.MsgItemEquipAttrSaveS2C)
  SharedDtor();
}

void MsgItemEquipAttrSaveS2C::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgItemEquipAttrSaveS2C::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgItemEquipAttrSaveS2C::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgItemEquipAttrSaveS2C_descriptor_;
}

const MsgItemEquipAttrSaveS2C& MsgItemEquipAttrSaveS2C::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgItem_2eproto();
  return *default_instance_;
}

MsgItemEquipAttrSaveS2C* MsgItemEquipAttrSaveS2C::default_instance_ = NULL;

MsgItemEquipAttrSaveS2C* MsgItemEquipAttrSaveS2C::New() const {
  return new MsgItemEquipAttrSaveS2C;
}

void MsgItemEquipAttrSaveS2C::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<MsgItemEquipAttrSaveS2C*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 7) {
    ZR_(iggid_, uuid_);
    msgtype_ = 1242;
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgItemEquipAttrSaveS2C::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.MsgItemEquipAttrSaveS2C)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_ITEM_EQUIP_ATTR_SAVE_S2C];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::EMsgType_IsValid(value)) {
            set_msgtype(static_cast< ::MsgPB::EMsgType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_iggid;
        break;
      }

      // optional int64 iggid = 2;
      case 2: {
        if (tag == 16) {
         parse_iggid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &iggid_)));
          set_has_iggid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_uuid;
        break;
      }

      // optional int64 uuid = 3;
      case 3: {
        if (tag == 24) {
         parse_uuid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &uuid_)));
          set_has_uuid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.MsgItemEquipAttrSaveS2C)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.MsgItemEquipAttrSaveS2C)
  return false;
#undef DO_
}

void MsgItemEquipAttrSaveS2C::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.MsgItemEquipAttrSaveS2C)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_ITEM_EQUIP_ATTR_SAVE_S2C];
  if (has_msgtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->msgtype(), output);
  }

  // optional int64 iggid = 2;
  if (has_iggid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->iggid(), output);
  }

  // optional int64 uuid = 3;
  if (has_uuid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->uuid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.MsgItemEquipAttrSaveS2C)
}

::google::protobuf::uint8* MsgItemEquipAttrSaveS2C::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.MsgItemEquipAttrSaveS2C)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_ITEM_EQUIP_ATTR_SAVE_S2C];
  if (has_msgtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->msgtype(), target);
  }

  // optional int64 iggid = 2;
  if (has_iggid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->iggid(), target);
  }

  // optional int64 uuid = 3;
  if (has_uuid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->uuid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.MsgItemEquipAttrSaveS2C)
  return target;
}

int MsgItemEquipAttrSaveS2C::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_ITEM_EQUIP_ATTR_SAVE_S2C];
    if (has_msgtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgtype());
    }

    // optional int64 iggid = 2;
    if (has_iggid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->iggid());
    }

    // optional int64 uuid = 3;
    if (has_uuid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->uuid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgItemEquipAttrSaveS2C::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgItemEquipAttrSaveS2C* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgItemEquipAttrSaveS2C*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgItemEquipAttrSaveS2C::MergeFrom(const MsgItemEquipAttrSaveS2C& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msgtype()) {
      set_msgtype(from.msgtype());
    }
    if (from.has_iggid()) {
      set_iggid(from.iggid());
    }
    if (from.has_uuid()) {
      set_uuid(from.uuid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgItemEquipAttrSaveS2C::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgItemEquipAttrSaveS2C::CopyFrom(const MsgItemEquipAttrSaveS2C& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgItemEquipAttrSaveS2C::IsInitialized() const {

  return true;
}

void MsgItemEquipAttrSaveS2C::Swap(MsgItemEquipAttrSaveS2C* other) {
  if (other != this) {
    std::swap(msgtype_, other->msgtype_);
    std::swap(iggid_, other->iggid_);
    std::swap(uuid_, other->uuid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgItemEquipAttrSaveS2C::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgItemEquipAttrSaveS2C_descriptor_;
  metadata.reflection = MsgItemEquipAttrSaveS2C_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgItemEquipMagicSacrificeC2S::kMsgTypeFieldNumber;
const int MsgItemEquipMagicSacrificeC2S::kIggidFieldNumber;
const int MsgItemEquipMagicSacrificeC2S::kUuidFieldNumber;
const int MsgItemEquipMagicSacrificeC2S::kItemsFieldNumber;
#endif  // !_MSC_VER

MsgItemEquipMagicSacrificeC2S::MsgItemEquipMagicSacrificeC2S()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.MsgItemEquipMagicSacrificeC2S)
}

void MsgItemEquipMagicSacrificeC2S::InitAsDefaultInstance() {
}

MsgItemEquipMagicSacrificeC2S::MsgItemEquipMagicSacrificeC2S(const MsgItemEquipMagicSacrificeC2S& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.MsgItemEquipMagicSacrificeC2S)
}

void MsgItemEquipMagicSacrificeC2S::SharedCtor() {
  _cached_size_ = 0;
  msgtype_ = 1243;
  iggid_ = GOOGLE_LONGLONG(0);
  uuid_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgItemEquipMagicSacrificeC2S::~MsgItemEquipMagicSacrificeC2S() {
  // @@protoc_insertion_point(destructor:MsgPB.MsgItemEquipMagicSacrificeC2S)
  SharedDtor();
}

void MsgItemEquipMagicSacrificeC2S::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgItemEquipMagicSacrificeC2S::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgItemEquipMagicSacrificeC2S::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgItemEquipMagicSacrificeC2S_descriptor_;
}

const MsgItemEquipMagicSacrificeC2S& MsgItemEquipMagicSacrificeC2S::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgItem_2eproto();
  return *default_instance_;
}

MsgItemEquipMagicSacrificeC2S* MsgItemEquipMagicSacrificeC2S::default_instance_ = NULL;

MsgItemEquipMagicSacrificeC2S* MsgItemEquipMagicSacrificeC2S::New() const {
  return new MsgItemEquipMagicSacrificeC2S;
}

void MsgItemEquipMagicSacrificeC2S::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<MsgItemEquipMagicSacrificeC2S*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 7) {
    ZR_(iggid_, uuid_);
    msgtype_ = 1243;
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  items_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgItemEquipMagicSacrificeC2S::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.MsgItemEquipMagicSacrificeC2S)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_ITEM_EQUIP_MAGIC_SACRIFICE_C2S];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::EMsgType_IsValid(value)) {
            set_msgtype(static_cast< ::MsgPB::EMsgType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_iggid;
        break;
      }

      // optional int64 iggid = 2;
      case 2: {
        if (tag == 16) {
         parse_iggid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &iggid_)));
          set_has_iggid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_uuid;
        break;
      }

      // optional int64 uuid = 3;
      case 3: {
        if (tag == 24) {
         parse_uuid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &uuid_)));
          set_has_uuid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_items;
        break;
      }

      // repeated .MsgPB.KeyValI64 items = 4;
      case 4: {
        if (tag == 34) {
         parse_items:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_items()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_items;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.MsgItemEquipMagicSacrificeC2S)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.MsgItemEquipMagicSacrificeC2S)
  return false;
#undef DO_
}

void MsgItemEquipMagicSacrificeC2S::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.MsgItemEquipMagicSacrificeC2S)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_ITEM_EQUIP_MAGIC_SACRIFICE_C2S];
  if (has_msgtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->msgtype(), output);
  }

  // optional int64 iggid = 2;
  if (has_iggid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->iggid(), output);
  }

  // optional int64 uuid = 3;
  if (has_uuid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->uuid(), output);
  }

  // repeated .MsgPB.KeyValI64 items = 4;
  for (int i = 0; i < this->items_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->items(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.MsgItemEquipMagicSacrificeC2S)
}

::google::protobuf::uint8* MsgItemEquipMagicSacrificeC2S::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.MsgItemEquipMagicSacrificeC2S)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_ITEM_EQUIP_MAGIC_SACRIFICE_C2S];
  if (has_msgtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->msgtype(), target);
  }

  // optional int64 iggid = 2;
  if (has_iggid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->iggid(), target);
  }

  // optional int64 uuid = 3;
  if (has_uuid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->uuid(), target);
  }

  // repeated .MsgPB.KeyValI64 items = 4;
  for (int i = 0; i < this->items_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->items(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.MsgItemEquipMagicSacrificeC2S)
  return target;
}

int MsgItemEquipMagicSacrificeC2S::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_ITEM_EQUIP_MAGIC_SACRIFICE_C2S];
    if (has_msgtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgtype());
    }

    // optional int64 iggid = 2;
    if (has_iggid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->iggid());
    }

    // optional int64 uuid = 3;
    if (has_uuid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->uuid());
    }

  }
  // repeated .MsgPB.KeyValI64 items = 4;
  total_size += 1 * this->items_size();
  for (int i = 0; i < this->items_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->items(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgItemEquipMagicSacrificeC2S::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgItemEquipMagicSacrificeC2S* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgItemEquipMagicSacrificeC2S*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgItemEquipMagicSacrificeC2S::MergeFrom(const MsgItemEquipMagicSacrificeC2S& from) {
  GOOGLE_CHECK_NE(&from, this);
  items_.MergeFrom(from.items_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msgtype()) {
      set_msgtype(from.msgtype());
    }
    if (from.has_iggid()) {
      set_iggid(from.iggid());
    }
    if (from.has_uuid()) {
      set_uuid(from.uuid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgItemEquipMagicSacrificeC2S::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgItemEquipMagicSacrificeC2S::CopyFrom(const MsgItemEquipMagicSacrificeC2S& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgItemEquipMagicSacrificeC2S::IsInitialized() const {

  return true;
}

void MsgItemEquipMagicSacrificeC2S::Swap(MsgItemEquipMagicSacrificeC2S* other) {
  if (other != this) {
    std::swap(msgtype_, other->msgtype_);
    std::swap(iggid_, other->iggid_);
    std::swap(uuid_, other->uuid_);
    items_.Swap(&other->items_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgItemEquipMagicSacrificeC2S::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgItemEquipMagicSacrificeC2S_descriptor_;
  metadata.reflection = MsgItemEquipMagicSacrificeC2S_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgItemEquipMagicSacrificeS2C::kMsgTypeFieldNumber;
const int MsgItemEquipMagicSacrificeS2C::kIggidFieldNumber;
const int MsgItemEquipMagicSacrificeS2C::kResFieldNumber;
const int MsgItemEquipMagicSacrificeS2C::kMagicidFieldNumber;
const int MsgItemEquipMagicSacrificeS2C::kUuidFieldNumber;
#endif  // !_MSC_VER

MsgItemEquipMagicSacrificeS2C::MsgItemEquipMagicSacrificeS2C()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.MsgItemEquipMagicSacrificeS2C)
}

void MsgItemEquipMagicSacrificeS2C::InitAsDefaultInstance() {
}

MsgItemEquipMagicSacrificeS2C::MsgItemEquipMagicSacrificeS2C(const MsgItemEquipMagicSacrificeS2C& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.MsgItemEquipMagicSacrificeS2C)
}

void MsgItemEquipMagicSacrificeS2C::SharedCtor() {
  _cached_size_ = 0;
  msgtype_ = 1244;
  iggid_ = GOOGLE_LONGLONG(0);
  res_ = 0;
  uuid_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgItemEquipMagicSacrificeS2C::~MsgItemEquipMagicSacrificeS2C() {
  // @@protoc_insertion_point(destructor:MsgPB.MsgItemEquipMagicSacrificeS2C)
  SharedDtor();
}

void MsgItemEquipMagicSacrificeS2C::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgItemEquipMagicSacrificeS2C::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgItemEquipMagicSacrificeS2C::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgItemEquipMagicSacrificeS2C_descriptor_;
}

const MsgItemEquipMagicSacrificeS2C& MsgItemEquipMagicSacrificeS2C::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgItem_2eproto();
  return *default_instance_;
}

MsgItemEquipMagicSacrificeS2C* MsgItemEquipMagicSacrificeS2C::default_instance_ = NULL;

MsgItemEquipMagicSacrificeS2C* MsgItemEquipMagicSacrificeS2C::New() const {
  return new MsgItemEquipMagicSacrificeS2C;
}

void MsgItemEquipMagicSacrificeS2C::Clear() {
  if (_has_bits_[0 / 32] & 23) {
    msgtype_ = 1244;
    iggid_ = GOOGLE_LONGLONG(0);
    res_ = 0;
    uuid_ = GOOGLE_LONGLONG(0);
  }
  magicid_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgItemEquipMagicSacrificeS2C::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.MsgItemEquipMagicSacrificeS2C)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_ITEM_EQUIP_MAGIC_SACRIFICE_S2C];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::EMsgType_IsValid(value)) {
            set_msgtype(static_cast< ::MsgPB::EMsgType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_iggid;
        break;
      }

      // optional int64 iggid = 2;
      case 2: {
        if (tag == 16) {
         parse_iggid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &iggid_)));
          set_has_iggid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_res;
        break;
      }

      // optional .MsgPB.ITEM_MAGIC_RESULT res = 3;
      case 3: {
        if (tag == 24) {
         parse_res:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::ITEM_MAGIC_RESULT_IsValid(value)) {
            set_res(static_cast< ::MsgPB::ITEM_MAGIC_RESULT >(value));
          } else {
            mutable_unknown_fields()->AddVarint(3, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_magicid;
        break;
      }

      // repeated int32 magicid = 4;
      case 4: {
        if (tag == 32) {
         parse_magicid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 32, input, this->mutable_magicid())));
        } else if (tag == 34) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_magicid())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_magicid;
        if (input->ExpectTag(40)) goto parse_uuid;
        break;
      }

      // optional int64 uuid = 5;
      case 5: {
        if (tag == 40) {
         parse_uuid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &uuid_)));
          set_has_uuid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.MsgItemEquipMagicSacrificeS2C)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.MsgItemEquipMagicSacrificeS2C)
  return false;
#undef DO_
}

void MsgItemEquipMagicSacrificeS2C::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.MsgItemEquipMagicSacrificeS2C)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_ITEM_EQUIP_MAGIC_SACRIFICE_S2C];
  if (has_msgtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->msgtype(), output);
  }

  // optional int64 iggid = 2;
  if (has_iggid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->iggid(), output);
  }

  // optional .MsgPB.ITEM_MAGIC_RESULT res = 3;
  if (has_res()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->res(), output);
  }

  // repeated int32 magicid = 4;
  for (int i = 0; i < this->magicid_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      4, this->magicid(i), output);
  }

  // optional int64 uuid = 5;
  if (has_uuid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(5, this->uuid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.MsgItemEquipMagicSacrificeS2C)
}

::google::protobuf::uint8* MsgItemEquipMagicSacrificeS2C::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.MsgItemEquipMagicSacrificeS2C)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_ITEM_EQUIP_MAGIC_SACRIFICE_S2C];
  if (has_msgtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->msgtype(), target);
  }

  // optional int64 iggid = 2;
  if (has_iggid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->iggid(), target);
  }

  // optional .MsgPB.ITEM_MAGIC_RESULT res = 3;
  if (has_res()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->res(), target);
  }

  // repeated int32 magicid = 4;
  for (int i = 0; i < this->magicid_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(4, this->magicid(i), target);
  }

  // optional int64 uuid = 5;
  if (has_uuid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(5, this->uuid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.MsgItemEquipMagicSacrificeS2C)
  return target;
}

int MsgItemEquipMagicSacrificeS2C::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_ITEM_EQUIP_MAGIC_SACRIFICE_S2C];
    if (has_msgtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgtype());
    }

    // optional int64 iggid = 2;
    if (has_iggid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->iggid());
    }

    // optional .MsgPB.ITEM_MAGIC_RESULT res = 3;
    if (has_res()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->res());
    }

    // optional int64 uuid = 5;
    if (has_uuid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->uuid());
    }

  }
  // repeated int32 magicid = 4;
  {
    int data_size = 0;
    for (int i = 0; i < this->magicid_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->magicid(i));
    }
    total_size += 1 * this->magicid_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgItemEquipMagicSacrificeS2C::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgItemEquipMagicSacrificeS2C* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgItemEquipMagicSacrificeS2C*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgItemEquipMagicSacrificeS2C::MergeFrom(const MsgItemEquipMagicSacrificeS2C& from) {
  GOOGLE_CHECK_NE(&from, this);
  magicid_.MergeFrom(from.magicid_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msgtype()) {
      set_msgtype(from.msgtype());
    }
    if (from.has_iggid()) {
      set_iggid(from.iggid());
    }
    if (from.has_res()) {
      set_res(from.res());
    }
    if (from.has_uuid()) {
      set_uuid(from.uuid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgItemEquipMagicSacrificeS2C::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgItemEquipMagicSacrificeS2C::CopyFrom(const MsgItemEquipMagicSacrificeS2C& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgItemEquipMagicSacrificeS2C::IsInitialized() const {

  return true;
}

void MsgItemEquipMagicSacrificeS2C::Swap(MsgItemEquipMagicSacrificeS2C* other) {
  if (other != this) {
    std::swap(msgtype_, other->msgtype_);
    std::swap(iggid_, other->iggid_);
    std::swap(res_, other->res_);
    magicid_.Swap(&other->magicid_);
    std::swap(uuid_, other->uuid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgItemEquipMagicSacrificeS2C::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgItemEquipMagicSacrificeS2C_descriptor_;
  metadata.reflection = MsgItemEquipMagicSacrificeS2C_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgItemEquipMagicInjectionC2S::kMsgTypeFieldNumber;
const int MsgItemEquipMagicInjectionC2S::kIggidFieldNumber;
const int MsgItemEquipMagicInjectionC2S::kUuidFieldNumber;
const int MsgItemEquipMagicInjectionC2S::kIndexFieldNumber;
#endif  // !_MSC_VER

MsgItemEquipMagicInjectionC2S::MsgItemEquipMagicInjectionC2S()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.MsgItemEquipMagicInjectionC2S)
}

void MsgItemEquipMagicInjectionC2S::InitAsDefaultInstance() {
}

MsgItemEquipMagicInjectionC2S::MsgItemEquipMagicInjectionC2S(const MsgItemEquipMagicInjectionC2S& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.MsgItemEquipMagicInjectionC2S)
}

void MsgItemEquipMagicInjectionC2S::SharedCtor() {
  _cached_size_ = 0;
  msgtype_ = 1245;
  iggid_ = GOOGLE_LONGLONG(0);
  uuid_ = GOOGLE_LONGLONG(0);
  index_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgItemEquipMagicInjectionC2S::~MsgItemEquipMagicInjectionC2S() {
  // @@protoc_insertion_point(destructor:MsgPB.MsgItemEquipMagicInjectionC2S)
  SharedDtor();
}

void MsgItemEquipMagicInjectionC2S::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgItemEquipMagicInjectionC2S::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgItemEquipMagicInjectionC2S::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgItemEquipMagicInjectionC2S_descriptor_;
}

const MsgItemEquipMagicInjectionC2S& MsgItemEquipMagicInjectionC2S::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgItem_2eproto();
  return *default_instance_;
}

MsgItemEquipMagicInjectionC2S* MsgItemEquipMagicInjectionC2S::default_instance_ = NULL;

MsgItemEquipMagicInjectionC2S* MsgItemEquipMagicInjectionC2S::New() const {
  return new MsgItemEquipMagicInjectionC2S;
}

void MsgItemEquipMagicInjectionC2S::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<MsgItemEquipMagicInjectionC2S*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 15) {
    ZR_(index_, uuid_);
    msgtype_ = 1245;
    iggid_ = GOOGLE_LONGLONG(0);
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgItemEquipMagicInjectionC2S::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.MsgItemEquipMagicInjectionC2S)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_ITEM_EQUIP_MAGIC_INJECTION_C2S];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::EMsgType_IsValid(value)) {
            set_msgtype(static_cast< ::MsgPB::EMsgType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_iggid;
        break;
      }

      // optional int64 iggid = 2;
      case 2: {
        if (tag == 16) {
         parse_iggid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &iggid_)));
          set_has_iggid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_uuid;
        break;
      }

      // optional int64 uuid = 3;
      case 3: {
        if (tag == 24) {
         parse_uuid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &uuid_)));
          set_has_uuid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_index;
        break;
      }

      // optional int32 index = 4;
      case 4: {
        if (tag == 32) {
         parse_index:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &index_)));
          set_has_index();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.MsgItemEquipMagicInjectionC2S)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.MsgItemEquipMagicInjectionC2S)
  return false;
#undef DO_
}

void MsgItemEquipMagicInjectionC2S::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.MsgItemEquipMagicInjectionC2S)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_ITEM_EQUIP_MAGIC_INJECTION_C2S];
  if (has_msgtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->msgtype(), output);
  }

  // optional int64 iggid = 2;
  if (has_iggid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->iggid(), output);
  }

  // optional int64 uuid = 3;
  if (has_uuid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->uuid(), output);
  }

  // optional int32 index = 4;
  if (has_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->index(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.MsgItemEquipMagicInjectionC2S)
}

::google::protobuf::uint8* MsgItemEquipMagicInjectionC2S::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.MsgItemEquipMagicInjectionC2S)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_ITEM_EQUIP_MAGIC_INJECTION_C2S];
  if (has_msgtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->msgtype(), target);
  }

  // optional int64 iggid = 2;
  if (has_iggid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->iggid(), target);
  }

  // optional int64 uuid = 3;
  if (has_uuid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->uuid(), target);
  }

  // optional int32 index = 4;
  if (has_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->index(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.MsgItemEquipMagicInjectionC2S)
  return target;
}

int MsgItemEquipMagicInjectionC2S::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_ITEM_EQUIP_MAGIC_INJECTION_C2S];
    if (has_msgtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgtype());
    }

    // optional int64 iggid = 2;
    if (has_iggid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->iggid());
    }

    // optional int64 uuid = 3;
    if (has_uuid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->uuid());
    }

    // optional int32 index = 4;
    if (has_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->index());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgItemEquipMagicInjectionC2S::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgItemEquipMagicInjectionC2S* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgItemEquipMagicInjectionC2S*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgItemEquipMagicInjectionC2S::MergeFrom(const MsgItemEquipMagicInjectionC2S& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msgtype()) {
      set_msgtype(from.msgtype());
    }
    if (from.has_iggid()) {
      set_iggid(from.iggid());
    }
    if (from.has_uuid()) {
      set_uuid(from.uuid());
    }
    if (from.has_index()) {
      set_index(from.index());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgItemEquipMagicInjectionC2S::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgItemEquipMagicInjectionC2S::CopyFrom(const MsgItemEquipMagicInjectionC2S& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgItemEquipMagicInjectionC2S::IsInitialized() const {

  return true;
}

void MsgItemEquipMagicInjectionC2S::Swap(MsgItemEquipMagicInjectionC2S* other) {
  if (other != this) {
    std::swap(msgtype_, other->msgtype_);
    std::swap(iggid_, other->iggid_);
    std::swap(uuid_, other->uuid_);
    std::swap(index_, other->index_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgItemEquipMagicInjectionC2S::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgItemEquipMagicInjectionC2S_descriptor_;
  metadata.reflection = MsgItemEquipMagicInjectionC2S_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgItemEquipMagicInjectionS2C::kMsgTypeFieldNumber;
const int MsgItemEquipMagicInjectionS2C::kIggidFieldNumber;
const int MsgItemEquipMagicInjectionS2C::kResFieldNumber;
const int MsgItemEquipMagicInjectionS2C::kUuidFieldNumber;
#endif  // !_MSC_VER

MsgItemEquipMagicInjectionS2C::MsgItemEquipMagicInjectionS2C()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.MsgItemEquipMagicInjectionS2C)
}

void MsgItemEquipMagicInjectionS2C::InitAsDefaultInstance() {
}

MsgItemEquipMagicInjectionS2C::MsgItemEquipMagicInjectionS2C(const MsgItemEquipMagicInjectionS2C& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.MsgItemEquipMagicInjectionS2C)
}

void MsgItemEquipMagicInjectionS2C::SharedCtor() {
  _cached_size_ = 0;
  msgtype_ = 1246;
  iggid_ = GOOGLE_LONGLONG(0);
  res_ = 0;
  uuid_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgItemEquipMagicInjectionS2C::~MsgItemEquipMagicInjectionS2C() {
  // @@protoc_insertion_point(destructor:MsgPB.MsgItemEquipMagicInjectionS2C)
  SharedDtor();
}

void MsgItemEquipMagicInjectionS2C::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgItemEquipMagicInjectionS2C::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgItemEquipMagicInjectionS2C::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgItemEquipMagicInjectionS2C_descriptor_;
}

const MsgItemEquipMagicInjectionS2C& MsgItemEquipMagicInjectionS2C::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgItem_2eproto();
  return *default_instance_;
}

MsgItemEquipMagicInjectionS2C* MsgItemEquipMagicInjectionS2C::default_instance_ = NULL;

MsgItemEquipMagicInjectionS2C* MsgItemEquipMagicInjectionS2C::New() const {
  return new MsgItemEquipMagicInjectionS2C;
}

void MsgItemEquipMagicInjectionS2C::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<MsgItemEquipMagicInjectionS2C*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 15) {
    ZR_(res_, uuid_);
    msgtype_ = 1246;
    iggid_ = GOOGLE_LONGLONG(0);
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgItemEquipMagicInjectionS2C::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.MsgItemEquipMagicInjectionS2C)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_ITEM_EQUIP_MAGIC_INJECTION_S2C];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::EMsgType_IsValid(value)) {
            set_msgtype(static_cast< ::MsgPB::EMsgType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_iggid;
        break;
      }

      // optional int64 iggid = 2;
      case 2: {
        if (tag == 16) {
         parse_iggid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &iggid_)));
          set_has_iggid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_res;
        break;
      }

      // optional .MsgPB.ITEM_MAGIC_RESULT res = 3;
      case 3: {
        if (tag == 24) {
         parse_res:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::ITEM_MAGIC_RESULT_IsValid(value)) {
            set_res(static_cast< ::MsgPB::ITEM_MAGIC_RESULT >(value));
          } else {
            mutable_unknown_fields()->AddVarint(3, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_uuid;
        break;
      }

      // optional int64 uuid = 4;
      case 4: {
        if (tag == 32) {
         parse_uuid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &uuid_)));
          set_has_uuid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.MsgItemEquipMagicInjectionS2C)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.MsgItemEquipMagicInjectionS2C)
  return false;
#undef DO_
}

void MsgItemEquipMagicInjectionS2C::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.MsgItemEquipMagicInjectionS2C)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_ITEM_EQUIP_MAGIC_INJECTION_S2C];
  if (has_msgtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->msgtype(), output);
  }

  // optional int64 iggid = 2;
  if (has_iggid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->iggid(), output);
  }

  // optional .MsgPB.ITEM_MAGIC_RESULT res = 3;
  if (has_res()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->res(), output);
  }

  // optional int64 uuid = 4;
  if (has_uuid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->uuid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.MsgItemEquipMagicInjectionS2C)
}

::google::protobuf::uint8* MsgItemEquipMagicInjectionS2C::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.MsgItemEquipMagicInjectionS2C)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_ITEM_EQUIP_MAGIC_INJECTION_S2C];
  if (has_msgtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->msgtype(), target);
  }

  // optional int64 iggid = 2;
  if (has_iggid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->iggid(), target);
  }

  // optional .MsgPB.ITEM_MAGIC_RESULT res = 3;
  if (has_res()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->res(), target);
  }

  // optional int64 uuid = 4;
  if (has_uuid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->uuid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.MsgItemEquipMagicInjectionS2C)
  return target;
}

int MsgItemEquipMagicInjectionS2C::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_ITEM_EQUIP_MAGIC_INJECTION_S2C];
    if (has_msgtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgtype());
    }

    // optional int64 iggid = 2;
    if (has_iggid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->iggid());
    }

    // optional .MsgPB.ITEM_MAGIC_RESULT res = 3;
    if (has_res()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->res());
    }

    // optional int64 uuid = 4;
    if (has_uuid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->uuid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgItemEquipMagicInjectionS2C::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgItemEquipMagicInjectionS2C* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgItemEquipMagicInjectionS2C*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgItemEquipMagicInjectionS2C::MergeFrom(const MsgItemEquipMagicInjectionS2C& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msgtype()) {
      set_msgtype(from.msgtype());
    }
    if (from.has_iggid()) {
      set_iggid(from.iggid());
    }
    if (from.has_res()) {
      set_res(from.res());
    }
    if (from.has_uuid()) {
      set_uuid(from.uuid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgItemEquipMagicInjectionS2C::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgItemEquipMagicInjectionS2C::CopyFrom(const MsgItemEquipMagicInjectionS2C& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgItemEquipMagicInjectionS2C::IsInitialized() const {

  return true;
}

void MsgItemEquipMagicInjectionS2C::Swap(MsgItemEquipMagicInjectionS2C* other) {
  if (other != this) {
    std::swap(msgtype_, other->msgtype_);
    std::swap(iggid_, other->iggid_);
    std::swap(res_, other->res_);
    std::swap(uuid_, other->uuid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgItemEquipMagicInjectionS2C::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgItemEquipMagicInjectionS2C_descriptor_;
  metadata.reflection = MsgItemEquipMagicInjectionS2C_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgItemEquipRepairC2S::kMsgTypeFieldNumber;
const int MsgItemEquipRepairC2S::kIggidFieldNumber;
const int MsgItemEquipRepairC2S::kUuidFieldNumber;
const int MsgItemEquipRepairC2S::kETypeFieldNumber;
const int MsgItemEquipRepairC2S::kRepairTypeFieldNumber;
#endif  // !_MSC_VER

MsgItemEquipRepairC2S::MsgItemEquipRepairC2S()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.MsgItemEquipRepairC2S)
}

void MsgItemEquipRepairC2S::InitAsDefaultInstance() {
}

MsgItemEquipRepairC2S::MsgItemEquipRepairC2S(const MsgItemEquipRepairC2S& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.MsgItemEquipRepairC2S)
}

void MsgItemEquipRepairC2S::SharedCtor() {
  _cached_size_ = 0;
  msgtype_ = 1247;
  iggid_ = GOOGLE_LONGLONG(0);
  uuid_ = GOOGLE_LONGLONG(0);
  etype_ = 0;
  repairtype_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgItemEquipRepairC2S::~MsgItemEquipRepairC2S() {
  // @@protoc_insertion_point(destructor:MsgPB.MsgItemEquipRepairC2S)
  SharedDtor();
}

void MsgItemEquipRepairC2S::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgItemEquipRepairC2S::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgItemEquipRepairC2S::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgItemEquipRepairC2S_descriptor_;
}

const MsgItemEquipRepairC2S& MsgItemEquipRepairC2S::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgItem_2eproto();
  return *default_instance_;
}

MsgItemEquipRepairC2S* MsgItemEquipRepairC2S::default_instance_ = NULL;

MsgItemEquipRepairC2S* MsgItemEquipRepairC2S::New() const {
  return new MsgItemEquipRepairC2S;
}

void MsgItemEquipRepairC2S::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<MsgItemEquipRepairC2S*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 31) {
    ZR_(etype_, repairtype_);
    msgtype_ = 1247;
    iggid_ = GOOGLE_LONGLONG(0);
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgItemEquipRepairC2S::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.MsgItemEquipRepairC2S)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_ITEM_EQUIP_REPAIR_C2S];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::EMsgType_IsValid(value)) {
            set_msgtype(static_cast< ::MsgPB::EMsgType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_iggid;
        break;
      }

      // optional int64 iggid = 2;
      case 2: {
        if (tag == 16) {
         parse_iggid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &iggid_)));
          set_has_iggid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_uuid;
        break;
      }

      // optional int64 uuid = 3;
      case 3: {
        if (tag == 24) {
         parse_uuid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &uuid_)));
          set_has_uuid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_eType;
        break;
      }

      // optional .MsgPB.PACKET_TYPE eType = 4;
      case 4: {
        if (tag == 32) {
         parse_eType:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::PACKET_TYPE_IsValid(value)) {
            set_etype(static_cast< ::MsgPB::PACKET_TYPE >(value));
          } else {
            mutable_unknown_fields()->AddVarint(4, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_repairType;
        break;
      }

      // optional int32 repairType = 5;
      case 5: {
        if (tag == 40) {
         parse_repairType:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &repairtype_)));
          set_has_repairtype();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.MsgItemEquipRepairC2S)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.MsgItemEquipRepairC2S)
  return false;
#undef DO_
}

void MsgItemEquipRepairC2S::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.MsgItemEquipRepairC2S)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_ITEM_EQUIP_REPAIR_C2S];
  if (has_msgtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->msgtype(), output);
  }

  // optional int64 iggid = 2;
  if (has_iggid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->iggid(), output);
  }

  // optional int64 uuid = 3;
  if (has_uuid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->uuid(), output);
  }

  // optional .MsgPB.PACKET_TYPE eType = 4;
  if (has_etype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->etype(), output);
  }

  // optional int32 repairType = 5;
  if (has_repairtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->repairtype(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.MsgItemEquipRepairC2S)
}

::google::protobuf::uint8* MsgItemEquipRepairC2S::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.MsgItemEquipRepairC2S)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_ITEM_EQUIP_REPAIR_C2S];
  if (has_msgtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->msgtype(), target);
  }

  // optional int64 iggid = 2;
  if (has_iggid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->iggid(), target);
  }

  // optional int64 uuid = 3;
  if (has_uuid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->uuid(), target);
  }

  // optional .MsgPB.PACKET_TYPE eType = 4;
  if (has_etype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->etype(), target);
  }

  // optional int32 repairType = 5;
  if (has_repairtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->repairtype(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.MsgItemEquipRepairC2S)
  return target;
}

int MsgItemEquipRepairC2S::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_ITEM_EQUIP_REPAIR_C2S];
    if (has_msgtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgtype());
    }

    // optional int64 iggid = 2;
    if (has_iggid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->iggid());
    }

    // optional int64 uuid = 3;
    if (has_uuid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->uuid());
    }

    // optional .MsgPB.PACKET_TYPE eType = 4;
    if (has_etype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->etype());
    }

    // optional int32 repairType = 5;
    if (has_repairtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->repairtype());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgItemEquipRepairC2S::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgItemEquipRepairC2S* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgItemEquipRepairC2S*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgItemEquipRepairC2S::MergeFrom(const MsgItemEquipRepairC2S& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msgtype()) {
      set_msgtype(from.msgtype());
    }
    if (from.has_iggid()) {
      set_iggid(from.iggid());
    }
    if (from.has_uuid()) {
      set_uuid(from.uuid());
    }
    if (from.has_etype()) {
      set_etype(from.etype());
    }
    if (from.has_repairtype()) {
      set_repairtype(from.repairtype());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgItemEquipRepairC2S::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgItemEquipRepairC2S::CopyFrom(const MsgItemEquipRepairC2S& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgItemEquipRepairC2S::IsInitialized() const {

  return true;
}

void MsgItemEquipRepairC2S::Swap(MsgItemEquipRepairC2S* other) {
  if (other != this) {
    std::swap(msgtype_, other->msgtype_);
    std::swap(iggid_, other->iggid_);
    std::swap(uuid_, other->uuid_);
    std::swap(etype_, other->etype_);
    std::swap(repairtype_, other->repairtype_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgItemEquipRepairC2S::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgItemEquipRepairC2S_descriptor_;
  metadata.reflection = MsgItemEquipRepairC2S_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgItemEquipRepairS2C_RepairUuid::kUuidFieldNumber;
#endif  // !_MSC_VER

MsgItemEquipRepairS2C_RepairUuid::MsgItemEquipRepairS2C_RepairUuid()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.MsgItemEquipRepairS2C.RepairUuid)
}

void MsgItemEquipRepairS2C_RepairUuid::InitAsDefaultInstance() {
}

MsgItemEquipRepairS2C_RepairUuid::MsgItemEquipRepairS2C_RepairUuid(const MsgItemEquipRepairS2C_RepairUuid& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.MsgItemEquipRepairS2C.RepairUuid)
}

void MsgItemEquipRepairS2C_RepairUuid::SharedCtor() {
  _cached_size_ = 0;
  uuid_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgItemEquipRepairS2C_RepairUuid::~MsgItemEquipRepairS2C_RepairUuid() {
  // @@protoc_insertion_point(destructor:MsgPB.MsgItemEquipRepairS2C.RepairUuid)
  SharedDtor();
}

void MsgItemEquipRepairS2C_RepairUuid::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgItemEquipRepairS2C_RepairUuid::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgItemEquipRepairS2C_RepairUuid::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgItemEquipRepairS2C_RepairUuid_descriptor_;
}

const MsgItemEquipRepairS2C_RepairUuid& MsgItemEquipRepairS2C_RepairUuid::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgItem_2eproto();
  return *default_instance_;
}

MsgItemEquipRepairS2C_RepairUuid* MsgItemEquipRepairS2C_RepairUuid::default_instance_ = NULL;

MsgItemEquipRepairS2C_RepairUuid* MsgItemEquipRepairS2C_RepairUuid::New() const {
  return new MsgItemEquipRepairS2C_RepairUuid;
}

void MsgItemEquipRepairS2C_RepairUuid::Clear() {
  uuid_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgItemEquipRepairS2C_RepairUuid::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.MsgItemEquipRepairS2C.RepairUuid)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 uuid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &uuid_)));
          set_has_uuid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.MsgItemEquipRepairS2C.RepairUuid)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.MsgItemEquipRepairS2C.RepairUuid)
  return false;
#undef DO_
}

void MsgItemEquipRepairS2C_RepairUuid::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.MsgItemEquipRepairS2C.RepairUuid)
  // optional int64 uuid = 1;
  if (has_uuid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->uuid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.MsgItemEquipRepairS2C.RepairUuid)
}

::google::protobuf::uint8* MsgItemEquipRepairS2C_RepairUuid::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.MsgItemEquipRepairS2C.RepairUuid)
  // optional int64 uuid = 1;
  if (has_uuid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->uuid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.MsgItemEquipRepairS2C.RepairUuid)
  return target;
}

int MsgItemEquipRepairS2C_RepairUuid::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 uuid = 1;
    if (has_uuid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->uuid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgItemEquipRepairS2C_RepairUuid::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgItemEquipRepairS2C_RepairUuid* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgItemEquipRepairS2C_RepairUuid*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgItemEquipRepairS2C_RepairUuid::MergeFrom(const MsgItemEquipRepairS2C_RepairUuid& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_uuid()) {
      set_uuid(from.uuid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgItemEquipRepairS2C_RepairUuid::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgItemEquipRepairS2C_RepairUuid::CopyFrom(const MsgItemEquipRepairS2C_RepairUuid& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgItemEquipRepairS2C_RepairUuid::IsInitialized() const {

  return true;
}

void MsgItemEquipRepairS2C_RepairUuid::Swap(MsgItemEquipRepairS2C_RepairUuid* other) {
  if (other != this) {
    std::swap(uuid_, other->uuid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgItemEquipRepairS2C_RepairUuid::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgItemEquipRepairS2C_RepairUuid_descriptor_;
  metadata.reflection = MsgItemEquipRepairS2C_RepairUuid_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int MsgItemEquipRepairS2C::kMsgTypeFieldNumber;
const int MsgItemEquipRepairS2C::kIggidFieldNumber;
const int MsgItemEquipRepairS2C::kResFieldNumber;
const int MsgItemEquipRepairS2C::kUuidFieldNumber;
#endif  // !_MSC_VER

MsgItemEquipRepairS2C::MsgItemEquipRepairS2C()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.MsgItemEquipRepairS2C)
}

void MsgItemEquipRepairS2C::InitAsDefaultInstance() {
}

MsgItemEquipRepairS2C::MsgItemEquipRepairS2C(const MsgItemEquipRepairS2C& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.MsgItemEquipRepairS2C)
}

void MsgItemEquipRepairS2C::SharedCtor() {
  _cached_size_ = 0;
  msgtype_ = 1248;
  iggid_ = GOOGLE_LONGLONG(0);
  res_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgItemEquipRepairS2C::~MsgItemEquipRepairS2C() {
  // @@protoc_insertion_point(destructor:MsgPB.MsgItemEquipRepairS2C)
  SharedDtor();
}

void MsgItemEquipRepairS2C::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgItemEquipRepairS2C::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgItemEquipRepairS2C::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgItemEquipRepairS2C_descriptor_;
}

const MsgItemEquipRepairS2C& MsgItemEquipRepairS2C::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgItem_2eproto();
  return *default_instance_;
}

MsgItemEquipRepairS2C* MsgItemEquipRepairS2C::default_instance_ = NULL;

MsgItemEquipRepairS2C* MsgItemEquipRepairS2C::New() const {
  return new MsgItemEquipRepairS2C;
}

void MsgItemEquipRepairS2C::Clear() {
  if (_has_bits_[0 / 32] & 7) {
    msgtype_ = 1248;
    iggid_ = GOOGLE_LONGLONG(0);
    res_ = 0;
  }
  uuid_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgItemEquipRepairS2C::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.MsgItemEquipRepairS2C)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_ITEM_EQUIP_REPAIR_S2C];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::EMsgType_IsValid(value)) {
            set_msgtype(static_cast< ::MsgPB::EMsgType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_iggid;
        break;
      }

      // optional int64 iggid = 2;
      case 2: {
        if (tag == 16) {
         parse_iggid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &iggid_)));
          set_has_iggid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_res;
        break;
      }

      // optional .MsgPB.ITEM_REPAIR_RESULT res = 3;
      case 3: {
        if (tag == 24) {
         parse_res:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::ITEM_REPAIR_RESULT_IsValid(value)) {
            set_res(static_cast< ::MsgPB::ITEM_REPAIR_RESULT >(value));
          } else {
            mutable_unknown_fields()->AddVarint(3, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_uuid;
        break;
      }

      // repeated .MsgPB.MsgItemEquipRepairS2C.RepairUuid uuid = 4;
      case 4: {
        if (tag == 34) {
         parse_uuid:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_uuid()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_uuid;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.MsgItemEquipRepairS2C)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.MsgItemEquipRepairS2C)
  return false;
#undef DO_
}

void MsgItemEquipRepairS2C::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.MsgItemEquipRepairS2C)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_ITEM_EQUIP_REPAIR_S2C];
  if (has_msgtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->msgtype(), output);
  }

  // optional int64 iggid = 2;
  if (has_iggid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->iggid(), output);
  }

  // optional .MsgPB.ITEM_REPAIR_RESULT res = 3;
  if (has_res()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->res(), output);
  }

  // repeated .MsgPB.MsgItemEquipRepairS2C.RepairUuid uuid = 4;
  for (int i = 0; i < this->uuid_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->uuid(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.MsgItemEquipRepairS2C)
}

::google::protobuf::uint8* MsgItemEquipRepairS2C::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.MsgItemEquipRepairS2C)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_ITEM_EQUIP_REPAIR_S2C];
  if (has_msgtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->msgtype(), target);
  }

  // optional int64 iggid = 2;
  if (has_iggid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->iggid(), target);
  }

  // optional .MsgPB.ITEM_REPAIR_RESULT res = 3;
  if (has_res()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->res(), target);
  }

  // repeated .MsgPB.MsgItemEquipRepairS2C.RepairUuid uuid = 4;
  for (int i = 0; i < this->uuid_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->uuid(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.MsgItemEquipRepairS2C)
  return target;
}

int MsgItemEquipRepairS2C::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_ITEM_EQUIP_REPAIR_S2C];
    if (has_msgtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgtype());
    }

    // optional int64 iggid = 2;
    if (has_iggid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->iggid());
    }

    // optional .MsgPB.ITEM_REPAIR_RESULT res = 3;
    if (has_res()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->res());
    }

  }
  // repeated .MsgPB.MsgItemEquipRepairS2C.RepairUuid uuid = 4;
  total_size += 1 * this->uuid_size();
  for (int i = 0; i < this->uuid_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->uuid(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgItemEquipRepairS2C::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgItemEquipRepairS2C* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgItemEquipRepairS2C*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgItemEquipRepairS2C::MergeFrom(const MsgItemEquipRepairS2C& from) {
  GOOGLE_CHECK_NE(&from, this);
  uuid_.MergeFrom(from.uuid_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msgtype()) {
      set_msgtype(from.msgtype());
    }
    if (from.has_iggid()) {
      set_iggid(from.iggid());
    }
    if (from.has_res()) {
      set_res(from.res());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgItemEquipRepairS2C::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgItemEquipRepairS2C::CopyFrom(const MsgItemEquipRepairS2C& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgItemEquipRepairS2C::IsInitialized() const {

  return true;
}

void MsgItemEquipRepairS2C::Swap(MsgItemEquipRepairS2C* other) {
  if (other != this) {
    std::swap(msgtype_, other->msgtype_);
    std::swap(iggid_, other->iggid_);
    std::swap(res_, other->res_);
    uuid_.Swap(&other->uuid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgItemEquipRepairS2C::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgItemEquipRepairS2C_descriptor_;
  metadata.reflection = MsgItemEquipRepairS2C_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgItemEquipStrengthenC2S::kMsgTypeFieldNumber;
const int MsgItemEquipStrengthenC2S::kIggidFieldNumber;
const int MsgItemEquipStrengthenC2S::kUuidFieldNumber;
#endif  // !_MSC_VER

MsgItemEquipStrengthenC2S::MsgItemEquipStrengthenC2S()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.MsgItemEquipStrengthenC2S)
}

void MsgItemEquipStrengthenC2S::InitAsDefaultInstance() {
}

MsgItemEquipStrengthenC2S::MsgItemEquipStrengthenC2S(const MsgItemEquipStrengthenC2S& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.MsgItemEquipStrengthenC2S)
}

void MsgItemEquipStrengthenC2S::SharedCtor() {
  _cached_size_ = 0;
  msgtype_ = 2033;
  iggid_ = GOOGLE_LONGLONG(0);
  uuid_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgItemEquipStrengthenC2S::~MsgItemEquipStrengthenC2S() {
  // @@protoc_insertion_point(destructor:MsgPB.MsgItemEquipStrengthenC2S)
  SharedDtor();
}

void MsgItemEquipStrengthenC2S::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgItemEquipStrengthenC2S::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgItemEquipStrengthenC2S::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgItemEquipStrengthenC2S_descriptor_;
}

const MsgItemEquipStrengthenC2S& MsgItemEquipStrengthenC2S::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgItem_2eproto();
  return *default_instance_;
}

MsgItemEquipStrengthenC2S* MsgItemEquipStrengthenC2S::default_instance_ = NULL;

MsgItemEquipStrengthenC2S* MsgItemEquipStrengthenC2S::New() const {
  return new MsgItemEquipStrengthenC2S;
}

void MsgItemEquipStrengthenC2S::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<MsgItemEquipStrengthenC2S*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 7) {
    ZR_(iggid_, uuid_);
    msgtype_ = 2033;
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgItemEquipStrengthenC2S::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.MsgItemEquipStrengthenC2S)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_DUNGEON_ENDLESS_STRENGTHEN_C2S];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::EMsgType_IsValid(value)) {
            set_msgtype(static_cast< ::MsgPB::EMsgType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_iggid;
        break;
      }

      // optional int64 iggid = 2;
      case 2: {
        if (tag == 16) {
         parse_iggid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &iggid_)));
          set_has_iggid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_uuid;
        break;
      }

      // optional int64 uuid = 3;
      case 3: {
        if (tag == 24) {
         parse_uuid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &uuid_)));
          set_has_uuid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.MsgItemEquipStrengthenC2S)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.MsgItemEquipStrengthenC2S)
  return false;
#undef DO_
}

void MsgItemEquipStrengthenC2S::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.MsgItemEquipStrengthenC2S)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_DUNGEON_ENDLESS_STRENGTHEN_C2S];
  if (has_msgtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->msgtype(), output);
  }

  // optional int64 iggid = 2;
  if (has_iggid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->iggid(), output);
  }

  // optional int64 uuid = 3;
  if (has_uuid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->uuid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.MsgItemEquipStrengthenC2S)
}

::google::protobuf::uint8* MsgItemEquipStrengthenC2S::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.MsgItemEquipStrengthenC2S)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_DUNGEON_ENDLESS_STRENGTHEN_C2S];
  if (has_msgtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->msgtype(), target);
  }

  // optional int64 iggid = 2;
  if (has_iggid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->iggid(), target);
  }

  // optional int64 uuid = 3;
  if (has_uuid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->uuid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.MsgItemEquipStrengthenC2S)
  return target;
}

int MsgItemEquipStrengthenC2S::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_DUNGEON_ENDLESS_STRENGTHEN_C2S];
    if (has_msgtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgtype());
    }

    // optional int64 iggid = 2;
    if (has_iggid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->iggid());
    }

    // optional int64 uuid = 3;
    if (has_uuid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->uuid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgItemEquipStrengthenC2S::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgItemEquipStrengthenC2S* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgItemEquipStrengthenC2S*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgItemEquipStrengthenC2S::MergeFrom(const MsgItemEquipStrengthenC2S& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msgtype()) {
      set_msgtype(from.msgtype());
    }
    if (from.has_iggid()) {
      set_iggid(from.iggid());
    }
    if (from.has_uuid()) {
      set_uuid(from.uuid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgItemEquipStrengthenC2S::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgItemEquipStrengthenC2S::CopyFrom(const MsgItemEquipStrengthenC2S& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgItemEquipStrengthenC2S::IsInitialized() const {

  return true;
}

void MsgItemEquipStrengthenC2S::Swap(MsgItemEquipStrengthenC2S* other) {
  if (other != this) {
    std::swap(msgtype_, other->msgtype_);
    std::swap(iggid_, other->iggid_);
    std::swap(uuid_, other->uuid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgItemEquipStrengthenC2S::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgItemEquipStrengthenC2S_descriptor_;
  metadata.reflection = MsgItemEquipStrengthenC2S_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgItemEquipStrengthenS2C::kMsgTypeFieldNumber;
const int MsgItemEquipStrengthenS2C::kIggidFieldNumber;
const int MsgItemEquipStrengthenS2C::kResFieldNumber;
#endif  // !_MSC_VER

MsgItemEquipStrengthenS2C::MsgItemEquipStrengthenS2C()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.MsgItemEquipStrengthenS2C)
}

void MsgItemEquipStrengthenS2C::InitAsDefaultInstance() {
}

MsgItemEquipStrengthenS2C::MsgItemEquipStrengthenS2C(const MsgItemEquipStrengthenS2C& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.MsgItemEquipStrengthenS2C)
}

void MsgItemEquipStrengthenS2C::SharedCtor() {
  _cached_size_ = 0;
  msgtype_ = 2034;
  iggid_ = GOOGLE_LONGLONG(0);
  res_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgItemEquipStrengthenS2C::~MsgItemEquipStrengthenS2C() {
  // @@protoc_insertion_point(destructor:MsgPB.MsgItemEquipStrengthenS2C)
  SharedDtor();
}

void MsgItemEquipStrengthenS2C::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgItemEquipStrengthenS2C::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgItemEquipStrengthenS2C::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgItemEquipStrengthenS2C_descriptor_;
}

const MsgItemEquipStrengthenS2C& MsgItemEquipStrengthenS2C::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgItem_2eproto();
  return *default_instance_;
}

MsgItemEquipStrengthenS2C* MsgItemEquipStrengthenS2C::default_instance_ = NULL;

MsgItemEquipStrengthenS2C* MsgItemEquipStrengthenS2C::New() const {
  return new MsgItemEquipStrengthenS2C;
}

void MsgItemEquipStrengthenS2C::Clear() {
  if (_has_bits_[0 / 32] & 7) {
    msgtype_ = 2034;
    iggid_ = GOOGLE_LONGLONG(0);
    res_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgItemEquipStrengthenS2C::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.MsgItemEquipStrengthenS2C)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_DUNGEON_ENDLESS_STRENGTHEN_S2C];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::EMsgType_IsValid(value)) {
            set_msgtype(static_cast< ::MsgPB::EMsgType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_iggid;
        break;
      }

      // optional int64 iggid = 2;
      case 2: {
        if (tag == 16) {
         parse_iggid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &iggid_)));
          set_has_iggid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_res;
        break;
      }

      // optional .MsgPB.ITEM_STRENGTHEN_RESULT res = 3;
      case 3: {
        if (tag == 24) {
         parse_res:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::ITEM_STRENGTHEN_RESULT_IsValid(value)) {
            set_res(static_cast< ::MsgPB::ITEM_STRENGTHEN_RESULT >(value));
          } else {
            mutable_unknown_fields()->AddVarint(3, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.MsgItemEquipStrengthenS2C)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.MsgItemEquipStrengthenS2C)
  return false;
#undef DO_
}

void MsgItemEquipStrengthenS2C::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.MsgItemEquipStrengthenS2C)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_DUNGEON_ENDLESS_STRENGTHEN_S2C];
  if (has_msgtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->msgtype(), output);
  }

  // optional int64 iggid = 2;
  if (has_iggid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->iggid(), output);
  }

  // optional .MsgPB.ITEM_STRENGTHEN_RESULT res = 3;
  if (has_res()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->res(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.MsgItemEquipStrengthenS2C)
}

::google::protobuf::uint8* MsgItemEquipStrengthenS2C::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.MsgItemEquipStrengthenS2C)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_DUNGEON_ENDLESS_STRENGTHEN_S2C];
  if (has_msgtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->msgtype(), target);
  }

  // optional int64 iggid = 2;
  if (has_iggid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->iggid(), target);
  }

  // optional .MsgPB.ITEM_STRENGTHEN_RESULT res = 3;
  if (has_res()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->res(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.MsgItemEquipStrengthenS2C)
  return target;
}

int MsgItemEquipStrengthenS2C::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_DUNGEON_ENDLESS_STRENGTHEN_S2C];
    if (has_msgtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgtype());
    }

    // optional int64 iggid = 2;
    if (has_iggid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->iggid());
    }

    // optional .MsgPB.ITEM_STRENGTHEN_RESULT res = 3;
    if (has_res()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->res());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgItemEquipStrengthenS2C::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgItemEquipStrengthenS2C* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgItemEquipStrengthenS2C*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgItemEquipStrengthenS2C::MergeFrom(const MsgItemEquipStrengthenS2C& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msgtype()) {
      set_msgtype(from.msgtype());
    }
    if (from.has_iggid()) {
      set_iggid(from.iggid());
    }
    if (from.has_res()) {
      set_res(from.res());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgItemEquipStrengthenS2C::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgItemEquipStrengthenS2C::CopyFrom(const MsgItemEquipStrengthenS2C& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgItemEquipStrengthenS2C::IsInitialized() const {

  return true;
}

void MsgItemEquipStrengthenS2C::Swap(MsgItemEquipStrengthenS2C* other) {
  if (other != this) {
    std::swap(msgtype_, other->msgtype_);
    std::swap(iggid_, other->iggid_);
    std::swap(res_, other->res_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgItemEquipStrengthenS2C::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgItemEquipStrengthenS2C_descriptor_;
  metadata.reflection = MsgItemEquipStrengthenS2C_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgNewItemSendOverS2C::kMsgTypeFieldNumber;
const int MsgNewItemSendOverS2C::kIggidFieldNumber;
#endif  // !_MSC_VER

MsgNewItemSendOverS2C::MsgNewItemSendOverS2C()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.MsgNewItemSendOverS2C)
}

void MsgNewItemSendOverS2C::InitAsDefaultInstance() {
}

MsgNewItemSendOverS2C::MsgNewItemSendOverS2C(const MsgNewItemSendOverS2C& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.MsgNewItemSendOverS2C)
}

void MsgNewItemSendOverS2C::SharedCtor() {
  _cached_size_ = 0;
  msgtype_ = 1236;
  iggid_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgNewItemSendOverS2C::~MsgNewItemSendOverS2C() {
  // @@protoc_insertion_point(destructor:MsgPB.MsgNewItemSendOverS2C)
  SharedDtor();
}

void MsgNewItemSendOverS2C::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgNewItemSendOverS2C::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgNewItemSendOverS2C::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgNewItemSendOverS2C_descriptor_;
}

const MsgNewItemSendOverS2C& MsgNewItemSendOverS2C::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgItem_2eproto();
  return *default_instance_;
}

MsgNewItemSendOverS2C* MsgNewItemSendOverS2C::default_instance_ = NULL;

MsgNewItemSendOverS2C* MsgNewItemSendOverS2C::New() const {
  return new MsgNewItemSendOverS2C;
}

void MsgNewItemSendOverS2C::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    msgtype_ = 1236;
    iggid_ = GOOGLE_LONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgNewItemSendOverS2C::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.MsgNewItemSendOverS2C)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_ITEM_NEW_SENDOVER_S2C];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::EMsgType_IsValid(value)) {
            set_msgtype(static_cast< ::MsgPB::EMsgType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_iggid;
        break;
      }

      // optional int64 iggid = 2;
      case 2: {
        if (tag == 16) {
         parse_iggid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &iggid_)));
          set_has_iggid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.MsgNewItemSendOverS2C)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.MsgNewItemSendOverS2C)
  return false;
#undef DO_
}

void MsgNewItemSendOverS2C::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.MsgNewItemSendOverS2C)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_ITEM_NEW_SENDOVER_S2C];
  if (has_msgtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->msgtype(), output);
  }

  // optional int64 iggid = 2;
  if (has_iggid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->iggid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.MsgNewItemSendOverS2C)
}

::google::protobuf::uint8* MsgNewItemSendOverS2C::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.MsgNewItemSendOverS2C)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_ITEM_NEW_SENDOVER_S2C];
  if (has_msgtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->msgtype(), target);
  }

  // optional int64 iggid = 2;
  if (has_iggid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->iggid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.MsgNewItemSendOverS2C)
  return target;
}

int MsgNewItemSendOverS2C::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_ITEM_NEW_SENDOVER_S2C];
    if (has_msgtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgtype());
    }

    // optional int64 iggid = 2;
    if (has_iggid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->iggid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgNewItemSendOverS2C::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgNewItemSendOverS2C* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgNewItemSendOverS2C*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgNewItemSendOverS2C::MergeFrom(const MsgNewItemSendOverS2C& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msgtype()) {
      set_msgtype(from.msgtype());
    }
    if (from.has_iggid()) {
      set_iggid(from.iggid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgNewItemSendOverS2C::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgNewItemSendOverS2C::CopyFrom(const MsgNewItemSendOverS2C& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgNewItemSendOverS2C::IsInitialized() const {

  return true;
}

void MsgNewItemSendOverS2C::Swap(MsgNewItemSendOverS2C* other) {
  if (other != this) {
    std::swap(msgtype_, other->msgtype_);
    std::swap(iggid_, other->iggid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgNewItemSendOverS2C::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgNewItemSendOverS2C_descriptor_;
  metadata.reflection = MsgNewItemSendOverS2C_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgItemEquipHideC2S::kMsgTypeFieldNumber;
const int MsgItemEquipHideC2S::kIggidFieldNumber;
const int MsgItemEquipHideC2S::kUuidFieldNumber;
const int MsgItemEquipHideC2S::kHideFieldNumber;
#endif  // !_MSC_VER

MsgItemEquipHideC2S::MsgItemEquipHideC2S()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.MsgItemEquipHideC2S)
}

void MsgItemEquipHideC2S::InitAsDefaultInstance() {
}

MsgItemEquipHideC2S::MsgItemEquipHideC2S(const MsgItemEquipHideC2S& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.MsgItemEquipHideC2S)
}

void MsgItemEquipHideC2S::SharedCtor() {
  _cached_size_ = 0;
  msgtype_ = 1225;
  iggid_ = GOOGLE_LONGLONG(0);
  uuid_ = GOOGLE_LONGLONG(0);
  hide_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgItemEquipHideC2S::~MsgItemEquipHideC2S() {
  // @@protoc_insertion_point(destructor:MsgPB.MsgItemEquipHideC2S)
  SharedDtor();
}

void MsgItemEquipHideC2S::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgItemEquipHideC2S::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgItemEquipHideC2S::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgItemEquipHideC2S_descriptor_;
}

const MsgItemEquipHideC2S& MsgItemEquipHideC2S::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgItem_2eproto();
  return *default_instance_;
}

MsgItemEquipHideC2S* MsgItemEquipHideC2S::default_instance_ = NULL;

MsgItemEquipHideC2S* MsgItemEquipHideC2S::New() const {
  return new MsgItemEquipHideC2S;
}

void MsgItemEquipHideC2S::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<MsgItemEquipHideC2S*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 15) {
    ZR_(hide_, uuid_);
    msgtype_ = 1225;
    iggid_ = GOOGLE_LONGLONG(0);
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgItemEquipHideC2S::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.MsgItemEquipHideC2S)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_ITEM_EQUIP_HIDE_C2S];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::EMsgType_IsValid(value)) {
            set_msgtype(static_cast< ::MsgPB::EMsgType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_iggid;
        break;
      }

      // optional int64 iggid = 2;
      case 2: {
        if (tag == 16) {
         parse_iggid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &iggid_)));
          set_has_iggid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_uuid;
        break;
      }

      // optional int64 uuid = 3;
      case 3: {
        if (tag == 24) {
         parse_uuid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &uuid_)));
          set_has_uuid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_hide;
        break;
      }

      // optional bool hide = 4;
      case 4: {
        if (tag == 32) {
         parse_hide:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &hide_)));
          set_has_hide();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.MsgItemEquipHideC2S)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.MsgItemEquipHideC2S)
  return false;
#undef DO_
}

void MsgItemEquipHideC2S::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.MsgItemEquipHideC2S)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_ITEM_EQUIP_HIDE_C2S];
  if (has_msgtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->msgtype(), output);
  }

  // optional int64 iggid = 2;
  if (has_iggid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->iggid(), output);
  }

  // optional int64 uuid = 3;
  if (has_uuid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->uuid(), output);
  }

  // optional bool hide = 4;
  if (has_hide()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->hide(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.MsgItemEquipHideC2S)
}

::google::protobuf::uint8* MsgItemEquipHideC2S::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.MsgItemEquipHideC2S)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_ITEM_EQUIP_HIDE_C2S];
  if (has_msgtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->msgtype(), target);
  }

  // optional int64 iggid = 2;
  if (has_iggid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->iggid(), target);
  }

  // optional int64 uuid = 3;
  if (has_uuid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->uuid(), target);
  }

  // optional bool hide = 4;
  if (has_hide()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->hide(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.MsgItemEquipHideC2S)
  return target;
}

int MsgItemEquipHideC2S::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_ITEM_EQUIP_HIDE_C2S];
    if (has_msgtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgtype());
    }

    // optional int64 iggid = 2;
    if (has_iggid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->iggid());
    }

    // optional int64 uuid = 3;
    if (has_uuid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->uuid());
    }

    // optional bool hide = 4;
    if (has_hide()) {
      total_size += 1 + 1;
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgItemEquipHideC2S::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgItemEquipHideC2S* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgItemEquipHideC2S*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgItemEquipHideC2S::MergeFrom(const MsgItemEquipHideC2S& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msgtype()) {
      set_msgtype(from.msgtype());
    }
    if (from.has_iggid()) {
      set_iggid(from.iggid());
    }
    if (from.has_uuid()) {
      set_uuid(from.uuid());
    }
    if (from.has_hide()) {
      set_hide(from.hide());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgItemEquipHideC2S::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgItemEquipHideC2S::CopyFrom(const MsgItemEquipHideC2S& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgItemEquipHideC2S::IsInitialized() const {

  return true;
}

void MsgItemEquipHideC2S::Swap(MsgItemEquipHideC2S* other) {
  if (other != this) {
    std::swap(msgtype_, other->msgtype_);
    std::swap(iggid_, other->iggid_);
    std::swap(uuid_, other->uuid_);
    std::swap(hide_, other->hide_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgItemEquipHideC2S::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgItemEquipHideC2S_descriptor_;
  metadata.reflection = MsgItemEquipHideC2S_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgItemEquipHideS2C::kMsgTypeFieldNumber;
const int MsgItemEquipHideS2C::kIggidFieldNumber;
const int MsgItemEquipHideS2C::kUuidFieldNumber;
const int MsgItemEquipHideS2C::kHideFieldNumber;
#endif  // !_MSC_VER

MsgItemEquipHideS2C::MsgItemEquipHideS2C()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.MsgItemEquipHideS2C)
}

void MsgItemEquipHideS2C::InitAsDefaultInstance() {
}

MsgItemEquipHideS2C::MsgItemEquipHideS2C(const MsgItemEquipHideS2C& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.MsgItemEquipHideS2C)
}

void MsgItemEquipHideS2C::SharedCtor() {
  _cached_size_ = 0;
  msgtype_ = 1226;
  iggid_ = GOOGLE_LONGLONG(0);
  uuid_ = GOOGLE_LONGLONG(0);
  hide_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgItemEquipHideS2C::~MsgItemEquipHideS2C() {
  // @@protoc_insertion_point(destructor:MsgPB.MsgItemEquipHideS2C)
  SharedDtor();
}

void MsgItemEquipHideS2C::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgItemEquipHideS2C::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgItemEquipHideS2C::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgItemEquipHideS2C_descriptor_;
}

const MsgItemEquipHideS2C& MsgItemEquipHideS2C::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgItem_2eproto();
  return *default_instance_;
}

MsgItemEquipHideS2C* MsgItemEquipHideS2C::default_instance_ = NULL;

MsgItemEquipHideS2C* MsgItemEquipHideS2C::New() const {
  return new MsgItemEquipHideS2C;
}

void MsgItemEquipHideS2C::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<MsgItemEquipHideS2C*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 15) {
    ZR_(hide_, uuid_);
    msgtype_ = 1226;
    iggid_ = GOOGLE_LONGLONG(0);
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgItemEquipHideS2C::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.MsgItemEquipHideS2C)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_ITEM_EQUIP_HIDE_S2C];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::EMsgType_IsValid(value)) {
            set_msgtype(static_cast< ::MsgPB::EMsgType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_iggid;
        break;
      }

      // optional int64 iggid = 2;
      case 2: {
        if (tag == 16) {
         parse_iggid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &iggid_)));
          set_has_iggid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_uuid;
        break;
      }

      // optional int64 uuid = 3;
      case 3: {
        if (tag == 24) {
         parse_uuid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &uuid_)));
          set_has_uuid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_hide;
        break;
      }

      // optional bool hide = 4;
      case 4: {
        if (tag == 32) {
         parse_hide:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &hide_)));
          set_has_hide();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.MsgItemEquipHideS2C)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.MsgItemEquipHideS2C)
  return false;
#undef DO_
}

void MsgItemEquipHideS2C::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.MsgItemEquipHideS2C)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_ITEM_EQUIP_HIDE_S2C];
  if (has_msgtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->msgtype(), output);
  }

  // optional int64 iggid = 2;
  if (has_iggid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->iggid(), output);
  }

  // optional int64 uuid = 3;
  if (has_uuid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->uuid(), output);
  }

  // optional bool hide = 4;
  if (has_hide()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->hide(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.MsgItemEquipHideS2C)
}

::google::protobuf::uint8* MsgItemEquipHideS2C::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.MsgItemEquipHideS2C)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_ITEM_EQUIP_HIDE_S2C];
  if (has_msgtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->msgtype(), target);
  }

  // optional int64 iggid = 2;
  if (has_iggid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->iggid(), target);
  }

  // optional int64 uuid = 3;
  if (has_uuid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->uuid(), target);
  }

  // optional bool hide = 4;
  if (has_hide()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->hide(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.MsgItemEquipHideS2C)
  return target;
}

int MsgItemEquipHideS2C::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_ITEM_EQUIP_HIDE_S2C];
    if (has_msgtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgtype());
    }

    // optional int64 iggid = 2;
    if (has_iggid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->iggid());
    }

    // optional int64 uuid = 3;
    if (has_uuid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->uuid());
    }

    // optional bool hide = 4;
    if (has_hide()) {
      total_size += 1 + 1;
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgItemEquipHideS2C::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgItemEquipHideS2C* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgItemEquipHideS2C*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgItemEquipHideS2C::MergeFrom(const MsgItemEquipHideS2C& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msgtype()) {
      set_msgtype(from.msgtype());
    }
    if (from.has_iggid()) {
      set_iggid(from.iggid());
    }
    if (from.has_uuid()) {
      set_uuid(from.uuid());
    }
    if (from.has_hide()) {
      set_hide(from.hide());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgItemEquipHideS2C::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgItemEquipHideS2C::CopyFrom(const MsgItemEquipHideS2C& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgItemEquipHideS2C::IsInitialized() const {

  return true;
}

void MsgItemEquipHideS2C::Swap(MsgItemEquipHideS2C* other) {
  if (other != this) {
    std::swap(msgtype_, other->msgtype_);
    std::swap(iggid_, other->iggid_);
    std::swap(uuid_, other->uuid_);
    std::swap(hide_, other->hide_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgItemEquipHideS2C::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgItemEquipHideS2C_descriptor_;
  metadata.reflection = MsgItemEquipHideS2C_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgIdentifyEquipC2S::kMsgTypeFieldNumber;
const int MsgIdentifyEquipC2S::kIggidFieldNumber;
const int MsgIdentifyEquipC2S::kUuidsFieldNumber;
#endif  // !_MSC_VER

MsgIdentifyEquipC2S::MsgIdentifyEquipC2S()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.MsgIdentifyEquipC2S)
}

void MsgIdentifyEquipC2S::InitAsDefaultInstance() {
}

MsgIdentifyEquipC2S::MsgIdentifyEquipC2S(const MsgIdentifyEquipC2S& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.MsgIdentifyEquipC2S)
}

void MsgIdentifyEquipC2S::SharedCtor() {
  _cached_size_ = 0;
  msgtype_ = 1281;
  iggid_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgIdentifyEquipC2S::~MsgIdentifyEquipC2S() {
  // @@protoc_insertion_point(destructor:MsgPB.MsgIdentifyEquipC2S)
  SharedDtor();
}

void MsgIdentifyEquipC2S::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgIdentifyEquipC2S::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgIdentifyEquipC2S::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgIdentifyEquipC2S_descriptor_;
}

const MsgIdentifyEquipC2S& MsgIdentifyEquipC2S::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgItem_2eproto();
  return *default_instance_;
}

MsgIdentifyEquipC2S* MsgIdentifyEquipC2S::default_instance_ = NULL;

MsgIdentifyEquipC2S* MsgIdentifyEquipC2S::New() const {
  return new MsgIdentifyEquipC2S;
}

void MsgIdentifyEquipC2S::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    msgtype_ = 1281;
    iggid_ = GOOGLE_LONGLONG(0);
  }
  uuids_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgIdentifyEquipC2S::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.MsgIdentifyEquipC2S)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_IDENTIFY_EQUIP_C2S];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::EMsgType_IsValid(value)) {
            set_msgtype(static_cast< ::MsgPB::EMsgType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_iggid;
        break;
      }

      // optional int64 iggid = 2;
      case 2: {
        if (tag == 16) {
         parse_iggid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &iggid_)));
          set_has_iggid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_uuids;
        break;
      }

      // repeated int64 uuids = 3;
      case 3: {
        if (tag == 24) {
         parse_uuids:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 24, input, this->mutable_uuids())));
        } else if (tag == 26) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_uuids())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_uuids;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.MsgIdentifyEquipC2S)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.MsgIdentifyEquipC2S)
  return false;
#undef DO_
}

void MsgIdentifyEquipC2S::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.MsgIdentifyEquipC2S)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_IDENTIFY_EQUIP_C2S];
  if (has_msgtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->msgtype(), output);
  }

  // optional int64 iggid = 2;
  if (has_iggid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->iggid(), output);
  }

  // repeated int64 uuids = 3;
  for (int i = 0; i < this->uuids_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(
      3, this->uuids(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.MsgIdentifyEquipC2S)
}

::google::protobuf::uint8* MsgIdentifyEquipC2S::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.MsgIdentifyEquipC2S)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_IDENTIFY_EQUIP_C2S];
  if (has_msgtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->msgtype(), target);
  }

  // optional int64 iggid = 2;
  if (has_iggid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->iggid(), target);
  }

  // repeated int64 uuids = 3;
  for (int i = 0; i < this->uuids_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64ToArray(3, this->uuids(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.MsgIdentifyEquipC2S)
  return target;
}

int MsgIdentifyEquipC2S::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_IDENTIFY_EQUIP_C2S];
    if (has_msgtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgtype());
    }

    // optional int64 iggid = 2;
    if (has_iggid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->iggid());
    }

  }
  // repeated int64 uuids = 3;
  {
    int data_size = 0;
    for (int i = 0; i < this->uuids_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int64Size(this->uuids(i));
    }
    total_size += 1 * this->uuids_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgIdentifyEquipC2S::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgIdentifyEquipC2S* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgIdentifyEquipC2S*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgIdentifyEquipC2S::MergeFrom(const MsgIdentifyEquipC2S& from) {
  GOOGLE_CHECK_NE(&from, this);
  uuids_.MergeFrom(from.uuids_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msgtype()) {
      set_msgtype(from.msgtype());
    }
    if (from.has_iggid()) {
      set_iggid(from.iggid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgIdentifyEquipC2S::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgIdentifyEquipC2S::CopyFrom(const MsgIdentifyEquipC2S& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgIdentifyEquipC2S::IsInitialized() const {

  return true;
}

void MsgIdentifyEquipC2S::Swap(MsgIdentifyEquipC2S* other) {
  if (other != this) {
    std::swap(msgtype_, other->msgtype_);
    std::swap(iggid_, other->iggid_);
    uuids_.Swap(&other->uuids_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgIdentifyEquipC2S::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgIdentifyEquipC2S_descriptor_;
  metadata.reflection = MsgIdentifyEquipC2S_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int IdentifyEquipResult::kResFieldNumber;
const int IdentifyEquipResult::kItemFieldNumber;
#endif  // !_MSC_VER

IdentifyEquipResult::IdentifyEquipResult()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.IdentifyEquipResult)
}

void IdentifyEquipResult::InitAsDefaultInstance() {
  item_ = const_cast< ::MsgPB::MsgItemDataGS2C*>(&::MsgPB::MsgItemDataGS2C::default_instance());
}

IdentifyEquipResult::IdentifyEquipResult(const IdentifyEquipResult& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.IdentifyEquipResult)
}

void IdentifyEquipResult::SharedCtor() {
  _cached_size_ = 0;
  res_ = 1;
  item_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

IdentifyEquipResult::~IdentifyEquipResult() {
  // @@protoc_insertion_point(destructor:MsgPB.IdentifyEquipResult)
  SharedDtor();
}

void IdentifyEquipResult::SharedDtor() {
  if (this != default_instance_) {
    delete item_;
  }
}

void IdentifyEquipResult::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* IdentifyEquipResult::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return IdentifyEquipResult_descriptor_;
}

const IdentifyEquipResult& IdentifyEquipResult::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgItem_2eproto();
  return *default_instance_;
}

IdentifyEquipResult* IdentifyEquipResult::default_instance_ = NULL;

IdentifyEquipResult* IdentifyEquipResult::New() const {
  return new IdentifyEquipResult;
}

void IdentifyEquipResult::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    res_ = 1;
    if (has_item()) {
      if (item_ != NULL) item_->::MsgPB::MsgItemDataGS2C::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool IdentifyEquipResult::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.IdentifyEquipResult)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .MsgPB.E_IDENTIFY_EQUIP_RESULT res = 1 [default = E_IDENTIFY_EQUIP_RESULT_FAIL];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::E_IDENTIFY_EQUIP_RESULT_IsValid(value)) {
            set_res(static_cast< ::MsgPB::E_IDENTIFY_EQUIP_RESULT >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_item;
        break;
      }

      // optional .MsgPB.MsgItemDataGS2C item = 2;
      case 2: {
        if (tag == 18) {
         parse_item:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_item()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.IdentifyEquipResult)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.IdentifyEquipResult)
  return false;
#undef DO_
}

void IdentifyEquipResult::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.IdentifyEquipResult)
  // required .MsgPB.E_IDENTIFY_EQUIP_RESULT res = 1 [default = E_IDENTIFY_EQUIP_RESULT_FAIL];
  if (has_res()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->res(), output);
  }

  // optional .MsgPB.MsgItemDataGS2C item = 2;
  if (has_item()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->item(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.IdentifyEquipResult)
}

::google::protobuf::uint8* IdentifyEquipResult::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.IdentifyEquipResult)
  // required .MsgPB.E_IDENTIFY_EQUIP_RESULT res = 1 [default = E_IDENTIFY_EQUIP_RESULT_FAIL];
  if (has_res()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->res(), target);
  }

  // optional .MsgPB.MsgItemDataGS2C item = 2;
  if (has_item()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->item(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.IdentifyEquipResult)
  return target;
}

int IdentifyEquipResult::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .MsgPB.E_IDENTIFY_EQUIP_RESULT res = 1 [default = E_IDENTIFY_EQUIP_RESULT_FAIL];
    if (has_res()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->res());
    }

    // optional .MsgPB.MsgItemDataGS2C item = 2;
    if (has_item()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->item());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void IdentifyEquipResult::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const IdentifyEquipResult* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const IdentifyEquipResult*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void IdentifyEquipResult::MergeFrom(const IdentifyEquipResult& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_res()) {
      set_res(from.res());
    }
    if (from.has_item()) {
      mutable_item()->::MsgPB::MsgItemDataGS2C::MergeFrom(from.item());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void IdentifyEquipResult::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void IdentifyEquipResult::CopyFrom(const IdentifyEquipResult& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IdentifyEquipResult::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void IdentifyEquipResult::Swap(IdentifyEquipResult* other) {
  if (other != this) {
    std::swap(res_, other->res_);
    std::swap(item_, other->item_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata IdentifyEquipResult::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = IdentifyEquipResult_descriptor_;
  metadata.reflection = IdentifyEquipResult_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgIdentifyEquipS2C::kMsgTypeFieldNumber;
const int MsgIdentifyEquipS2C::kIggidFieldNumber;
const int MsgIdentifyEquipS2C::kResultsFieldNumber;
#endif  // !_MSC_VER

MsgIdentifyEquipS2C::MsgIdentifyEquipS2C()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.MsgIdentifyEquipS2C)
}

void MsgIdentifyEquipS2C::InitAsDefaultInstance() {
}

MsgIdentifyEquipS2C::MsgIdentifyEquipS2C(const MsgIdentifyEquipS2C& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.MsgIdentifyEquipS2C)
}

void MsgIdentifyEquipS2C::SharedCtor() {
  _cached_size_ = 0;
  msgtype_ = 1282;
  iggid_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgIdentifyEquipS2C::~MsgIdentifyEquipS2C() {
  // @@protoc_insertion_point(destructor:MsgPB.MsgIdentifyEquipS2C)
  SharedDtor();
}

void MsgIdentifyEquipS2C::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgIdentifyEquipS2C::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgIdentifyEquipS2C::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgIdentifyEquipS2C_descriptor_;
}

const MsgIdentifyEquipS2C& MsgIdentifyEquipS2C::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgItem_2eproto();
  return *default_instance_;
}

MsgIdentifyEquipS2C* MsgIdentifyEquipS2C::default_instance_ = NULL;

MsgIdentifyEquipS2C* MsgIdentifyEquipS2C::New() const {
  return new MsgIdentifyEquipS2C;
}

void MsgIdentifyEquipS2C::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    msgtype_ = 1282;
    iggid_ = GOOGLE_LONGLONG(0);
  }
  results_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgIdentifyEquipS2C::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.MsgIdentifyEquipS2C)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_IDENTIFY_EQUIP_S2C];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::EMsgType_IsValid(value)) {
            set_msgtype(static_cast< ::MsgPB::EMsgType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_iggid;
        break;
      }

      // optional int64 iggid = 2;
      case 2: {
        if (tag == 16) {
         parse_iggid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &iggid_)));
          set_has_iggid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_results;
        break;
      }

      // repeated .MsgPB.IdentifyEquipResult results = 3;
      case 3: {
        if (tag == 26) {
         parse_results:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_results()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_results;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.MsgIdentifyEquipS2C)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.MsgIdentifyEquipS2C)
  return false;
#undef DO_
}

void MsgIdentifyEquipS2C::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.MsgIdentifyEquipS2C)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_IDENTIFY_EQUIP_S2C];
  if (has_msgtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->msgtype(), output);
  }

  // optional int64 iggid = 2;
  if (has_iggid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->iggid(), output);
  }

  // repeated .MsgPB.IdentifyEquipResult results = 3;
  for (int i = 0; i < this->results_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->results(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.MsgIdentifyEquipS2C)
}

::google::protobuf::uint8* MsgIdentifyEquipS2C::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.MsgIdentifyEquipS2C)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_IDENTIFY_EQUIP_S2C];
  if (has_msgtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->msgtype(), target);
  }

  // optional int64 iggid = 2;
  if (has_iggid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->iggid(), target);
  }

  // repeated .MsgPB.IdentifyEquipResult results = 3;
  for (int i = 0; i < this->results_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->results(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.MsgIdentifyEquipS2C)
  return target;
}

int MsgIdentifyEquipS2C::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_IDENTIFY_EQUIP_S2C];
    if (has_msgtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgtype());
    }

    // optional int64 iggid = 2;
    if (has_iggid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->iggid());
    }

  }
  // repeated .MsgPB.IdentifyEquipResult results = 3;
  total_size += 1 * this->results_size();
  for (int i = 0; i < this->results_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->results(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgIdentifyEquipS2C::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgIdentifyEquipS2C* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgIdentifyEquipS2C*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgIdentifyEquipS2C::MergeFrom(const MsgIdentifyEquipS2C& from) {
  GOOGLE_CHECK_NE(&from, this);
  results_.MergeFrom(from.results_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msgtype()) {
      set_msgtype(from.msgtype());
    }
    if (from.has_iggid()) {
      set_iggid(from.iggid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgIdentifyEquipS2C::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgIdentifyEquipS2C::CopyFrom(const MsgIdentifyEquipS2C& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgIdentifyEquipS2C::IsInitialized() const {

  if (!::google::protobuf::internal::AllAreInitialized(this->results())) return false;
  return true;
}

void MsgIdentifyEquipS2C::Swap(MsgIdentifyEquipS2C* other) {
  if (other != this) {
    std::swap(msgtype_, other->msgtype_);
    std::swap(iggid_, other->iggid_);
    results_.Swap(&other->results_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgIdentifyEquipS2C::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgIdentifyEquipS2C_descriptor_;
  metadata.reflection = MsgIdentifyEquipS2C_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgItemUserInteractiveResult_S2C::kMsgTypeFieldNumber;
const int MsgItemUserInteractiveResult_S2C::kIggidFieldNumber;
const int MsgItemUserInteractiveResult_S2C::kItemIDFieldNumber;
const int MsgItemUserInteractiveResult_S2C::kUuidFieldNumber;
const int MsgItemUserInteractiveResult_S2C::kItemsFieldNumber;
#endif  // !_MSC_VER

MsgItemUserInteractiveResult_S2C::MsgItemUserInteractiveResult_S2C()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.MsgItemUserInteractiveResult_S2C)
}

void MsgItemUserInteractiveResult_S2C::InitAsDefaultInstance() {
}

MsgItemUserInteractiveResult_S2C::MsgItemUserInteractiveResult_S2C(const MsgItemUserInteractiveResult_S2C& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.MsgItemUserInteractiveResult_S2C)
}

void MsgItemUserInteractiveResult_S2C::SharedCtor() {
  _cached_size_ = 0;
  msgtype_ = 1227;
  iggid_ = GOOGLE_LONGLONG(0);
  itemid_ = 0;
  uuid_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgItemUserInteractiveResult_S2C::~MsgItemUserInteractiveResult_S2C() {
  // @@protoc_insertion_point(destructor:MsgPB.MsgItemUserInteractiveResult_S2C)
  SharedDtor();
}

void MsgItemUserInteractiveResult_S2C::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgItemUserInteractiveResult_S2C::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgItemUserInteractiveResult_S2C::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgItemUserInteractiveResult_S2C_descriptor_;
}

const MsgItemUserInteractiveResult_S2C& MsgItemUserInteractiveResult_S2C::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgItem_2eproto();
  return *default_instance_;
}

MsgItemUserInteractiveResult_S2C* MsgItemUserInteractiveResult_S2C::default_instance_ = NULL;

MsgItemUserInteractiveResult_S2C* MsgItemUserInteractiveResult_S2C::New() const {
  return new MsgItemUserInteractiveResult_S2C;
}

void MsgItemUserInteractiveResult_S2C::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<MsgItemUserInteractiveResult_S2C*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 15) {
    ZR_(itemid_, uuid_);
    msgtype_ = 1227;
    iggid_ = GOOGLE_LONGLONG(0);
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  items_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgItemUserInteractiveResult_S2C::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.MsgItemUserInteractiveResult_S2C)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_ITEM_USE_INTERACTIVE_RESULT_S2C];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::EMsgType_IsValid(value)) {
            set_msgtype(static_cast< ::MsgPB::EMsgType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_iggid;
        break;
      }

      // optional int64 iggid = 2;
      case 2: {
        if (tag == 16) {
         parse_iggid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &iggid_)));
          set_has_iggid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_ItemID;
        break;
      }

      // optional int32 ItemID = 3;
      case 3: {
        if (tag == 24) {
         parse_ItemID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &itemid_)));
          set_has_itemid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_uuid;
        break;
      }

      // optional int64 uuid = 4;
      case 4: {
        if (tag == 32) {
         parse_uuid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &uuid_)));
          set_has_uuid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_items;
        break;
      }

      // repeated .MsgPB.ItemReward items = 5;
      case 5: {
        if (tag == 42) {
         parse_items:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_items()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_items;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.MsgItemUserInteractiveResult_S2C)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.MsgItemUserInteractiveResult_S2C)
  return false;
#undef DO_
}

void MsgItemUserInteractiveResult_S2C::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.MsgItemUserInteractiveResult_S2C)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_ITEM_USE_INTERACTIVE_RESULT_S2C];
  if (has_msgtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->msgtype(), output);
  }

  // optional int64 iggid = 2;
  if (has_iggid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->iggid(), output);
  }

  // optional int32 ItemID = 3;
  if (has_itemid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->itemid(), output);
  }

  // optional int64 uuid = 4;
  if (has_uuid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->uuid(), output);
  }

  // repeated .MsgPB.ItemReward items = 5;
  for (int i = 0; i < this->items_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->items(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.MsgItemUserInteractiveResult_S2C)
}

::google::protobuf::uint8* MsgItemUserInteractiveResult_S2C::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.MsgItemUserInteractiveResult_S2C)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_ITEM_USE_INTERACTIVE_RESULT_S2C];
  if (has_msgtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->msgtype(), target);
  }

  // optional int64 iggid = 2;
  if (has_iggid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->iggid(), target);
  }

  // optional int32 ItemID = 3;
  if (has_itemid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->itemid(), target);
  }

  // optional int64 uuid = 4;
  if (has_uuid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->uuid(), target);
  }

  // repeated .MsgPB.ItemReward items = 5;
  for (int i = 0; i < this->items_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->items(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.MsgItemUserInteractiveResult_S2C)
  return target;
}

int MsgItemUserInteractiveResult_S2C::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_ITEM_USE_INTERACTIVE_RESULT_S2C];
    if (has_msgtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgtype());
    }

    // optional int64 iggid = 2;
    if (has_iggid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->iggid());
    }

    // optional int32 ItemID = 3;
    if (has_itemid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->itemid());
    }

    // optional int64 uuid = 4;
    if (has_uuid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->uuid());
    }

  }
  // repeated .MsgPB.ItemReward items = 5;
  total_size += 1 * this->items_size();
  for (int i = 0; i < this->items_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->items(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgItemUserInteractiveResult_S2C::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgItemUserInteractiveResult_S2C* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgItemUserInteractiveResult_S2C*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgItemUserInteractiveResult_S2C::MergeFrom(const MsgItemUserInteractiveResult_S2C& from) {
  GOOGLE_CHECK_NE(&from, this);
  items_.MergeFrom(from.items_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msgtype()) {
      set_msgtype(from.msgtype());
    }
    if (from.has_iggid()) {
      set_iggid(from.iggid());
    }
    if (from.has_itemid()) {
      set_itemid(from.itemid());
    }
    if (from.has_uuid()) {
      set_uuid(from.uuid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgItemUserInteractiveResult_S2C::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgItemUserInteractiveResult_S2C::CopyFrom(const MsgItemUserInteractiveResult_S2C& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgItemUserInteractiveResult_S2C::IsInitialized() const {

  return true;
}

void MsgItemUserInteractiveResult_S2C::Swap(MsgItemUserInteractiveResult_S2C* other) {
  if (other != this) {
    std::swap(msgtype_, other->msgtype_);
    std::swap(iggid_, other->iggid_);
    std::swap(itemid_, other->itemid_);
    std::swap(uuid_, other->uuid_);
    items_.Swap(&other->items_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgItemUserInteractiveResult_S2C::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgItemUserInteractiveResult_S2C_descriptor_;
  metadata.reflection = MsgItemUserInteractiveResult_S2C_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgDropItemC2S::kMsgTypeFieldNumber;
const int MsgDropItemC2S::kIggidFieldNumber;
const int MsgDropItemC2S::kUuidsFieldNumber;
#endif  // !_MSC_VER

MsgDropItemC2S::MsgDropItemC2S()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.MsgDropItemC2S)
}

void MsgDropItemC2S::InitAsDefaultInstance() {
}

MsgDropItemC2S::MsgDropItemC2S(const MsgDropItemC2S& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.MsgDropItemC2S)
}

void MsgDropItemC2S::SharedCtor() {
  _cached_size_ = 0;
  msgtype_ = 1283;
  iggid_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgDropItemC2S::~MsgDropItemC2S() {
  // @@protoc_insertion_point(destructor:MsgPB.MsgDropItemC2S)
  SharedDtor();
}

void MsgDropItemC2S::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgDropItemC2S::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgDropItemC2S::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgDropItemC2S_descriptor_;
}

const MsgDropItemC2S& MsgDropItemC2S::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgItem_2eproto();
  return *default_instance_;
}

MsgDropItemC2S* MsgDropItemC2S::default_instance_ = NULL;

MsgDropItemC2S* MsgDropItemC2S::New() const {
  return new MsgDropItemC2S;
}

void MsgDropItemC2S::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    msgtype_ = 1283;
    iggid_ = GOOGLE_LONGLONG(0);
  }
  uuids_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgDropItemC2S::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.MsgDropItemC2S)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_DROP_ITEM_C2S];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::EMsgType_IsValid(value)) {
            set_msgtype(static_cast< ::MsgPB::EMsgType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_iggid;
        break;
      }

      // optional int64 iggid = 2;
      case 2: {
        if (tag == 16) {
         parse_iggid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &iggid_)));
          set_has_iggid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_uuids;
        break;
      }

      // repeated int64 uuids = 3;
      case 3: {
        if (tag == 24) {
         parse_uuids:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 24, input, this->mutable_uuids())));
        } else if (tag == 26) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_uuids())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_uuids;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.MsgDropItemC2S)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.MsgDropItemC2S)
  return false;
#undef DO_
}

void MsgDropItemC2S::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.MsgDropItemC2S)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_DROP_ITEM_C2S];
  if (has_msgtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->msgtype(), output);
  }

  // optional int64 iggid = 2;
  if (has_iggid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->iggid(), output);
  }

  // repeated int64 uuids = 3;
  for (int i = 0; i < this->uuids_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(
      3, this->uuids(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.MsgDropItemC2S)
}

::google::protobuf::uint8* MsgDropItemC2S::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.MsgDropItemC2S)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_DROP_ITEM_C2S];
  if (has_msgtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->msgtype(), target);
  }

  // optional int64 iggid = 2;
  if (has_iggid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->iggid(), target);
  }

  // repeated int64 uuids = 3;
  for (int i = 0; i < this->uuids_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64ToArray(3, this->uuids(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.MsgDropItemC2S)
  return target;
}

int MsgDropItemC2S::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_DROP_ITEM_C2S];
    if (has_msgtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgtype());
    }

    // optional int64 iggid = 2;
    if (has_iggid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->iggid());
    }

  }
  // repeated int64 uuids = 3;
  {
    int data_size = 0;
    for (int i = 0; i < this->uuids_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int64Size(this->uuids(i));
    }
    total_size += 1 * this->uuids_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgDropItemC2S::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgDropItemC2S* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgDropItemC2S*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgDropItemC2S::MergeFrom(const MsgDropItemC2S& from) {
  GOOGLE_CHECK_NE(&from, this);
  uuids_.MergeFrom(from.uuids_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msgtype()) {
      set_msgtype(from.msgtype());
    }
    if (from.has_iggid()) {
      set_iggid(from.iggid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgDropItemC2S::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgDropItemC2S::CopyFrom(const MsgDropItemC2S& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgDropItemC2S::IsInitialized() const {

  return true;
}

void MsgDropItemC2S::Swap(MsgDropItemC2S* other) {
  if (other != this) {
    std::swap(msgtype_, other->msgtype_);
    std::swap(iggid_, other->iggid_);
    uuids_.Swap(&other->uuids_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgDropItemC2S::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgDropItemC2S_descriptor_;
  metadata.reflection = MsgDropItemC2S_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int DropItemResult::kResFieldNumber;
const int DropItemResult::kUuidFieldNumber;
#endif  // !_MSC_VER

DropItemResult::DropItemResult()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.DropItemResult)
}

void DropItemResult::InitAsDefaultInstance() {
}

DropItemResult::DropItemResult(const DropItemResult& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.DropItemResult)
}

void DropItemResult::SharedCtor() {
  _cached_size_ = 0;
  res_ = 1;
  uuid_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DropItemResult::~DropItemResult() {
  // @@protoc_insertion_point(destructor:MsgPB.DropItemResult)
  SharedDtor();
}

void DropItemResult::SharedDtor() {
  if (this != default_instance_) {
  }
}

void DropItemResult::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DropItemResult::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DropItemResult_descriptor_;
}

const DropItemResult& DropItemResult::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgItem_2eproto();
  return *default_instance_;
}

DropItemResult* DropItemResult::default_instance_ = NULL;

DropItemResult* DropItemResult::New() const {
  return new DropItemResult;
}

void DropItemResult::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    res_ = 1;
    uuid_ = GOOGLE_LONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool DropItemResult::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.DropItemResult)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .MsgPB.E_DropItemResult res = 1 [default = E_DropItemResult_Fail];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::E_DropItemResult_IsValid(value)) {
            set_res(static_cast< ::MsgPB::E_DropItemResult >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_uuid;
        break;
      }

      // optional int64 uuid = 2;
      case 2: {
        if (tag == 16) {
         parse_uuid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &uuid_)));
          set_has_uuid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.DropItemResult)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.DropItemResult)
  return false;
#undef DO_
}

void DropItemResult::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.DropItemResult)
  // required .MsgPB.E_DropItemResult res = 1 [default = E_DropItemResult_Fail];
  if (has_res()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->res(), output);
  }

  // optional int64 uuid = 2;
  if (has_uuid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->uuid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.DropItemResult)
}

::google::protobuf::uint8* DropItemResult::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.DropItemResult)
  // required .MsgPB.E_DropItemResult res = 1 [default = E_DropItemResult_Fail];
  if (has_res()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->res(), target);
  }

  // optional int64 uuid = 2;
  if (has_uuid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->uuid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.DropItemResult)
  return target;
}

int DropItemResult::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .MsgPB.E_DropItemResult res = 1 [default = E_DropItemResult_Fail];
    if (has_res()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->res());
    }

    // optional int64 uuid = 2;
    if (has_uuid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->uuid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DropItemResult::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const DropItemResult* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const DropItemResult*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void DropItemResult::MergeFrom(const DropItemResult& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_res()) {
      set_res(from.res());
    }
    if (from.has_uuid()) {
      set_uuid(from.uuid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void DropItemResult::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DropItemResult::CopyFrom(const DropItemResult& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DropItemResult::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void DropItemResult::Swap(DropItemResult* other) {
  if (other != this) {
    std::swap(res_, other->res_);
    std::swap(uuid_, other->uuid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata DropItemResult::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DropItemResult_descriptor_;
  metadata.reflection = DropItemResult_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgDropItemS2C::kMsgTypeFieldNumber;
const int MsgDropItemS2C::kIggidFieldNumber;
const int MsgDropItemS2C::kResultsFieldNumber;
#endif  // !_MSC_VER

MsgDropItemS2C::MsgDropItemS2C()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.MsgDropItemS2C)
}

void MsgDropItemS2C::InitAsDefaultInstance() {
}

MsgDropItemS2C::MsgDropItemS2C(const MsgDropItemS2C& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.MsgDropItemS2C)
}

void MsgDropItemS2C::SharedCtor() {
  _cached_size_ = 0;
  msgtype_ = 1284;
  iggid_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgDropItemS2C::~MsgDropItemS2C() {
  // @@protoc_insertion_point(destructor:MsgPB.MsgDropItemS2C)
  SharedDtor();
}

void MsgDropItemS2C::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgDropItemS2C::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgDropItemS2C::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgDropItemS2C_descriptor_;
}

const MsgDropItemS2C& MsgDropItemS2C::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgItem_2eproto();
  return *default_instance_;
}

MsgDropItemS2C* MsgDropItemS2C::default_instance_ = NULL;

MsgDropItemS2C* MsgDropItemS2C::New() const {
  return new MsgDropItemS2C;
}

void MsgDropItemS2C::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    msgtype_ = 1284;
    iggid_ = GOOGLE_LONGLONG(0);
  }
  results_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgDropItemS2C::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.MsgDropItemS2C)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_DROP_ITEM_S2C];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::EMsgType_IsValid(value)) {
            set_msgtype(static_cast< ::MsgPB::EMsgType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_iggid;
        break;
      }

      // optional int64 iggid = 2;
      case 2: {
        if (tag == 16) {
         parse_iggid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &iggid_)));
          set_has_iggid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_results;
        break;
      }

      // repeated .MsgPB.DropItemResult results = 3;
      case 3: {
        if (tag == 26) {
         parse_results:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_results()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_results;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.MsgDropItemS2C)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.MsgDropItemS2C)
  return false;
#undef DO_
}

void MsgDropItemS2C::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.MsgDropItemS2C)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_DROP_ITEM_S2C];
  if (has_msgtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->msgtype(), output);
  }

  // optional int64 iggid = 2;
  if (has_iggid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->iggid(), output);
  }

  // repeated .MsgPB.DropItemResult results = 3;
  for (int i = 0; i < this->results_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->results(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.MsgDropItemS2C)
}

::google::protobuf::uint8* MsgDropItemS2C::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.MsgDropItemS2C)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_DROP_ITEM_S2C];
  if (has_msgtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->msgtype(), target);
  }

  // optional int64 iggid = 2;
  if (has_iggid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->iggid(), target);
  }

  // repeated .MsgPB.DropItemResult results = 3;
  for (int i = 0; i < this->results_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->results(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.MsgDropItemS2C)
  return target;
}

int MsgDropItemS2C::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_DROP_ITEM_S2C];
    if (has_msgtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgtype());
    }

    // optional int64 iggid = 2;
    if (has_iggid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->iggid());
    }

  }
  // repeated .MsgPB.DropItemResult results = 3;
  total_size += 1 * this->results_size();
  for (int i = 0; i < this->results_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->results(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgDropItemS2C::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgDropItemS2C* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgDropItemS2C*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgDropItemS2C::MergeFrom(const MsgDropItemS2C& from) {
  GOOGLE_CHECK_NE(&from, this);
  results_.MergeFrom(from.results_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msgtype()) {
      set_msgtype(from.msgtype());
    }
    if (from.has_iggid()) {
      set_iggid(from.iggid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgDropItemS2C::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgDropItemS2C::CopyFrom(const MsgDropItemS2C& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgDropItemS2C::IsInitialized() const {

  if (!::google::protobuf::internal::AllAreInitialized(this->results())) return false;
  return true;
}

void MsgDropItemS2C::Swap(MsgDropItemS2C* other) {
  if (other != this) {
    std::swap(msgtype_, other->msgtype_);
    std::swap(iggid_, other->iggid_);
    results_.Swap(&other->results_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgDropItemS2C::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgDropItemS2C_descriptor_;
  metadata.reflection = MsgDropItemS2C_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgUpgradeItemC2S::kMsgTypeFieldNumber;
const int MsgUpgradeItemC2S::kIggidFieldNumber;
const int MsgUpgradeItemC2S::kUuidFieldNumber;
#endif  // !_MSC_VER

MsgUpgradeItemC2S::MsgUpgradeItemC2S()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.MsgUpgradeItemC2S)
}

void MsgUpgradeItemC2S::InitAsDefaultInstance() {
}

MsgUpgradeItemC2S::MsgUpgradeItemC2S(const MsgUpgradeItemC2S& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.MsgUpgradeItemC2S)
}

void MsgUpgradeItemC2S::SharedCtor() {
  _cached_size_ = 0;
  msgtype_ = 1285;
  iggid_ = GOOGLE_LONGLONG(0);
  uuid_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgUpgradeItemC2S::~MsgUpgradeItemC2S() {
  // @@protoc_insertion_point(destructor:MsgPB.MsgUpgradeItemC2S)
  SharedDtor();
}

void MsgUpgradeItemC2S::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgUpgradeItemC2S::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgUpgradeItemC2S::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgUpgradeItemC2S_descriptor_;
}

const MsgUpgradeItemC2S& MsgUpgradeItemC2S::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgItem_2eproto();
  return *default_instance_;
}

MsgUpgradeItemC2S* MsgUpgradeItemC2S::default_instance_ = NULL;

MsgUpgradeItemC2S* MsgUpgradeItemC2S::New() const {
  return new MsgUpgradeItemC2S;
}

void MsgUpgradeItemC2S::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<MsgUpgradeItemC2S*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 7) {
    ZR_(iggid_, uuid_);
    msgtype_ = 1285;
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgUpgradeItemC2S::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.MsgUpgradeItemC2S)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_UPGRADE_ITEM_C2S];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::EMsgType_IsValid(value)) {
            set_msgtype(static_cast< ::MsgPB::EMsgType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_iggid;
        break;
      }

      // optional int64 iggid = 2;
      case 2: {
        if (tag == 16) {
         parse_iggid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &iggid_)));
          set_has_iggid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_uuid;
        break;
      }

      // optional int64 uuid = 3;
      case 3: {
        if (tag == 24) {
         parse_uuid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &uuid_)));
          set_has_uuid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.MsgUpgradeItemC2S)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.MsgUpgradeItemC2S)
  return false;
#undef DO_
}

void MsgUpgradeItemC2S::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.MsgUpgradeItemC2S)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_UPGRADE_ITEM_C2S];
  if (has_msgtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->msgtype(), output);
  }

  // optional int64 iggid = 2;
  if (has_iggid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->iggid(), output);
  }

  // optional int64 uuid = 3;
  if (has_uuid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->uuid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.MsgUpgradeItemC2S)
}

::google::protobuf::uint8* MsgUpgradeItemC2S::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.MsgUpgradeItemC2S)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_UPGRADE_ITEM_C2S];
  if (has_msgtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->msgtype(), target);
  }

  // optional int64 iggid = 2;
  if (has_iggid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->iggid(), target);
  }

  // optional int64 uuid = 3;
  if (has_uuid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->uuid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.MsgUpgradeItemC2S)
  return target;
}

int MsgUpgradeItemC2S::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_UPGRADE_ITEM_C2S];
    if (has_msgtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgtype());
    }

    // optional int64 iggid = 2;
    if (has_iggid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->iggid());
    }

    // optional int64 uuid = 3;
    if (has_uuid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->uuid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgUpgradeItemC2S::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgUpgradeItemC2S* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgUpgradeItemC2S*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgUpgradeItemC2S::MergeFrom(const MsgUpgradeItemC2S& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msgtype()) {
      set_msgtype(from.msgtype());
    }
    if (from.has_iggid()) {
      set_iggid(from.iggid());
    }
    if (from.has_uuid()) {
      set_uuid(from.uuid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgUpgradeItemC2S::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgUpgradeItemC2S::CopyFrom(const MsgUpgradeItemC2S& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgUpgradeItemC2S::IsInitialized() const {

  return true;
}

void MsgUpgradeItemC2S::Swap(MsgUpgradeItemC2S* other) {
  if (other != this) {
    std::swap(msgtype_, other->msgtype_);
    std::swap(iggid_, other->iggid_);
    std::swap(uuid_, other->uuid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgUpgradeItemC2S::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgUpgradeItemC2S_descriptor_;
  metadata.reflection = MsgUpgradeItemC2S_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgUpgradeItemS2C::kMsgTypeFieldNumber;
const int MsgUpgradeItemS2C::kIggidFieldNumber;
const int MsgUpgradeItemS2C::kEcFieldNumber;
const int MsgUpgradeItemS2C::kUuidFieldNumber;
const int MsgUpgradeItemS2C::kOldDataIdFieldNumber;
const int MsgUpgradeItemS2C::kNewDataIdFieldNumber;
#endif  // !_MSC_VER

MsgUpgradeItemS2C::MsgUpgradeItemS2C()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.MsgUpgradeItemS2C)
}

void MsgUpgradeItemS2C::InitAsDefaultInstance() {
}

MsgUpgradeItemS2C::MsgUpgradeItemS2C(const MsgUpgradeItemS2C& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.MsgUpgradeItemS2C)
}

void MsgUpgradeItemS2C::SharedCtor() {
  _cached_size_ = 0;
  msgtype_ = 1286;
  iggid_ = GOOGLE_LONGLONG(0);
  ec_ = 0;
  uuid_ = GOOGLE_LONGLONG(0);
  old_data_id_ = 0;
  new_data_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgUpgradeItemS2C::~MsgUpgradeItemS2C() {
  // @@protoc_insertion_point(destructor:MsgPB.MsgUpgradeItemS2C)
  SharedDtor();
}

void MsgUpgradeItemS2C::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgUpgradeItemS2C::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgUpgradeItemS2C::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgUpgradeItemS2C_descriptor_;
}

const MsgUpgradeItemS2C& MsgUpgradeItemS2C::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgItem_2eproto();
  return *default_instance_;
}

MsgUpgradeItemS2C* MsgUpgradeItemS2C::default_instance_ = NULL;

MsgUpgradeItemS2C* MsgUpgradeItemS2C::New() const {
  return new MsgUpgradeItemS2C;
}

void MsgUpgradeItemS2C::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<MsgUpgradeItemS2C*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 63) {
    ZR_(ec_, new_data_id_);
    msgtype_ = 1286;
    iggid_ = GOOGLE_LONGLONG(0);
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgUpgradeItemS2C::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.MsgUpgradeItemS2C)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_UPGRADE_ITEM_S2C];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::EMsgType_IsValid(value)) {
            set_msgtype(static_cast< ::MsgPB::EMsgType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_iggid;
        break;
      }

      // optional int64 iggid = 2;
      case 2: {
        if (tag == 16) {
         parse_iggid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &iggid_)));
          set_has_iggid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_ec;
        break;
      }

      // optional .MsgPB.E_ErrorCode ec = 3;
      case 3: {
        if (tag == 24) {
         parse_ec:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::E_ErrorCode_IsValid(value)) {
            set_ec(static_cast< ::MsgPB::E_ErrorCode >(value));
          } else {
            mutable_unknown_fields()->AddVarint(3, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_uuid;
        break;
      }

      // optional int64 uuid = 4;
      case 4: {
        if (tag == 32) {
         parse_uuid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &uuid_)));
          set_has_uuid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_old_data_id;
        break;
      }

      // optional int32 old_data_id = 5;
      case 5: {
        if (tag == 40) {
         parse_old_data_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &old_data_id_)));
          set_has_old_data_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_new_data_id;
        break;
      }

      // optional int32 new_data_id = 6;
      case 6: {
        if (tag == 48) {
         parse_new_data_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &new_data_id_)));
          set_has_new_data_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.MsgUpgradeItemS2C)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.MsgUpgradeItemS2C)
  return false;
#undef DO_
}

void MsgUpgradeItemS2C::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.MsgUpgradeItemS2C)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_UPGRADE_ITEM_S2C];
  if (has_msgtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->msgtype(), output);
  }

  // optional int64 iggid = 2;
  if (has_iggid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->iggid(), output);
  }

  // optional .MsgPB.E_ErrorCode ec = 3;
  if (has_ec()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->ec(), output);
  }

  // optional int64 uuid = 4;
  if (has_uuid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->uuid(), output);
  }

  // optional int32 old_data_id = 5;
  if (has_old_data_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->old_data_id(), output);
  }

  // optional int32 new_data_id = 6;
  if (has_new_data_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->new_data_id(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.MsgUpgradeItemS2C)
}

::google::protobuf::uint8* MsgUpgradeItemS2C::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.MsgUpgradeItemS2C)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_UPGRADE_ITEM_S2C];
  if (has_msgtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->msgtype(), target);
  }

  // optional int64 iggid = 2;
  if (has_iggid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->iggid(), target);
  }

  // optional .MsgPB.E_ErrorCode ec = 3;
  if (has_ec()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->ec(), target);
  }

  // optional int64 uuid = 4;
  if (has_uuid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->uuid(), target);
  }

  // optional int32 old_data_id = 5;
  if (has_old_data_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->old_data_id(), target);
  }

  // optional int32 new_data_id = 6;
  if (has_new_data_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->new_data_id(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.MsgUpgradeItemS2C)
  return target;
}

int MsgUpgradeItemS2C::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_UPGRADE_ITEM_S2C];
    if (has_msgtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgtype());
    }

    // optional int64 iggid = 2;
    if (has_iggid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->iggid());
    }

    // optional .MsgPB.E_ErrorCode ec = 3;
    if (has_ec()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->ec());
    }

    // optional int64 uuid = 4;
    if (has_uuid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->uuid());
    }

    // optional int32 old_data_id = 5;
    if (has_old_data_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->old_data_id());
    }

    // optional int32 new_data_id = 6;
    if (has_new_data_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->new_data_id());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgUpgradeItemS2C::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgUpgradeItemS2C* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgUpgradeItemS2C*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgUpgradeItemS2C::MergeFrom(const MsgUpgradeItemS2C& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msgtype()) {
      set_msgtype(from.msgtype());
    }
    if (from.has_iggid()) {
      set_iggid(from.iggid());
    }
    if (from.has_ec()) {
      set_ec(from.ec());
    }
    if (from.has_uuid()) {
      set_uuid(from.uuid());
    }
    if (from.has_old_data_id()) {
      set_old_data_id(from.old_data_id());
    }
    if (from.has_new_data_id()) {
      set_new_data_id(from.new_data_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgUpgradeItemS2C::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgUpgradeItemS2C::CopyFrom(const MsgUpgradeItemS2C& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgUpgradeItemS2C::IsInitialized() const {

  return true;
}

void MsgUpgradeItemS2C::Swap(MsgUpgradeItemS2C* other) {
  if (other != this) {
    std::swap(msgtype_, other->msgtype_);
    std::swap(iggid_, other->iggid_);
    std::swap(ec_, other->ec_);
    std::swap(uuid_, other->uuid_);
    std::swap(old_data_id_, other->old_data_id_);
    std::swap(new_data_id_, other->new_data_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgUpgradeItemS2C::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgUpgradeItemS2C_descriptor_;
  metadata.reflection = MsgUpgradeItemS2C_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgFoodUseCountS2C::kMsgTypeFieldNumber;
const int MsgFoodUseCountS2C::kCountFieldNumber;
const int MsgFoodUseCountS2C::kDigMineExpCountFieldNumber;
const int MsgFoodUseCountS2C::kDigPlantExpCountFieldNumber;
#endif  // !_MSC_VER

MsgFoodUseCountS2C::MsgFoodUseCountS2C()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.MsgFoodUseCountS2C)
}

void MsgFoodUseCountS2C::InitAsDefaultInstance() {
}

MsgFoodUseCountS2C::MsgFoodUseCountS2C(const MsgFoodUseCountS2C& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.MsgFoodUseCountS2C)
}

void MsgFoodUseCountS2C::SharedCtor() {
  _cached_size_ = 0;
  msgtype_ = 1350;
  count_ = 0;
  dig_mine_exp_count_ = 0;
  dig_plant_exp_count_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgFoodUseCountS2C::~MsgFoodUseCountS2C() {
  // @@protoc_insertion_point(destructor:MsgPB.MsgFoodUseCountS2C)
  SharedDtor();
}

void MsgFoodUseCountS2C::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgFoodUseCountS2C::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgFoodUseCountS2C::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgFoodUseCountS2C_descriptor_;
}

const MsgFoodUseCountS2C& MsgFoodUseCountS2C::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgItem_2eproto();
  return *default_instance_;
}

MsgFoodUseCountS2C* MsgFoodUseCountS2C::default_instance_ = NULL;

MsgFoodUseCountS2C* MsgFoodUseCountS2C::New() const {
  return new MsgFoodUseCountS2C;
}

void MsgFoodUseCountS2C::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<MsgFoodUseCountS2C*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 15) {
    ZR_(count_, dig_plant_exp_count_);
    msgtype_ = 1350;
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgFoodUseCountS2C::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.MsgFoodUseCountS2C)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_FOOD_COUNT_S2C];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::EMsgType_IsValid(value)) {
            set_msgtype(static_cast< ::MsgPB::EMsgType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_count;
        break;
      }

      // optional int32 count = 2;
      case 2: {
        if (tag == 16) {
         parse_count:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &count_)));
          set_has_count();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_dig_mine_exp_count;
        break;
      }

      // optional int32 dig_mine_exp_count = 3;
      case 3: {
        if (tag == 24) {
         parse_dig_mine_exp_count:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &dig_mine_exp_count_)));
          set_has_dig_mine_exp_count();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_dig_plant_exp_count;
        break;
      }

      // optional int32 dig_plant_exp_count = 4;
      case 4: {
        if (tag == 32) {
         parse_dig_plant_exp_count:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &dig_plant_exp_count_)));
          set_has_dig_plant_exp_count();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.MsgFoodUseCountS2C)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.MsgFoodUseCountS2C)
  return false;
#undef DO_
}

void MsgFoodUseCountS2C::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.MsgFoodUseCountS2C)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_FOOD_COUNT_S2C];
  if (has_msgtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->msgtype(), output);
  }

  // optional int32 count = 2;
  if (has_count()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->count(), output);
  }

  // optional int32 dig_mine_exp_count = 3;
  if (has_dig_mine_exp_count()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->dig_mine_exp_count(), output);
  }

  // optional int32 dig_plant_exp_count = 4;
  if (has_dig_plant_exp_count()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->dig_plant_exp_count(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.MsgFoodUseCountS2C)
}

::google::protobuf::uint8* MsgFoodUseCountS2C::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.MsgFoodUseCountS2C)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_FOOD_COUNT_S2C];
  if (has_msgtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->msgtype(), target);
  }

  // optional int32 count = 2;
  if (has_count()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->count(), target);
  }

  // optional int32 dig_mine_exp_count = 3;
  if (has_dig_mine_exp_count()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->dig_mine_exp_count(), target);
  }

  // optional int32 dig_plant_exp_count = 4;
  if (has_dig_plant_exp_count()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->dig_plant_exp_count(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.MsgFoodUseCountS2C)
  return target;
}

int MsgFoodUseCountS2C::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_FOOD_COUNT_S2C];
    if (has_msgtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgtype());
    }

    // optional int32 count = 2;
    if (has_count()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->count());
    }

    // optional int32 dig_mine_exp_count = 3;
    if (has_dig_mine_exp_count()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->dig_mine_exp_count());
    }

    // optional int32 dig_plant_exp_count = 4;
    if (has_dig_plant_exp_count()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->dig_plant_exp_count());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgFoodUseCountS2C::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgFoodUseCountS2C* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgFoodUseCountS2C*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgFoodUseCountS2C::MergeFrom(const MsgFoodUseCountS2C& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msgtype()) {
      set_msgtype(from.msgtype());
    }
    if (from.has_count()) {
      set_count(from.count());
    }
    if (from.has_dig_mine_exp_count()) {
      set_dig_mine_exp_count(from.dig_mine_exp_count());
    }
    if (from.has_dig_plant_exp_count()) {
      set_dig_plant_exp_count(from.dig_plant_exp_count());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgFoodUseCountS2C::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgFoodUseCountS2C::CopyFrom(const MsgFoodUseCountS2C& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgFoodUseCountS2C::IsInitialized() const {

  return true;
}

void MsgFoodUseCountS2C::Swap(MsgFoodUseCountS2C* other) {
  if (other != this) {
    std::swap(msgtype_, other->msgtype_);
    std::swap(count_, other->count_);
    std::swap(dig_mine_exp_count_, other->dig_mine_exp_count_);
    std::swap(dig_plant_exp_count_, other->dig_plant_exp_count_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgFoodUseCountS2C::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgFoodUseCountS2C_descriptor_;
  metadata.reflection = MsgFoodUseCountS2C_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgItemMultiEquipC2S_EquipInfo::kUuidFieldNumber;
const int MsgItemMultiEquipC2S_EquipInfo::kEquipPosFieldNumber;
#endif  // !_MSC_VER

MsgItemMultiEquipC2S_EquipInfo::MsgItemMultiEquipC2S_EquipInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.MsgItemMultiEquipC2S.EquipInfo)
}

void MsgItemMultiEquipC2S_EquipInfo::InitAsDefaultInstance() {
}

MsgItemMultiEquipC2S_EquipInfo::MsgItemMultiEquipC2S_EquipInfo(const MsgItemMultiEquipC2S_EquipInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.MsgItemMultiEquipC2S.EquipInfo)
}

void MsgItemMultiEquipC2S_EquipInfo::SharedCtor() {
  _cached_size_ = 0;
  uuid_ = GOOGLE_LONGLONG(0);
  equip_pos_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgItemMultiEquipC2S_EquipInfo::~MsgItemMultiEquipC2S_EquipInfo() {
  // @@protoc_insertion_point(destructor:MsgPB.MsgItemMultiEquipC2S.EquipInfo)
  SharedDtor();
}

void MsgItemMultiEquipC2S_EquipInfo::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgItemMultiEquipC2S_EquipInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgItemMultiEquipC2S_EquipInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgItemMultiEquipC2S_EquipInfo_descriptor_;
}

const MsgItemMultiEquipC2S_EquipInfo& MsgItemMultiEquipC2S_EquipInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgItem_2eproto();
  return *default_instance_;
}

MsgItemMultiEquipC2S_EquipInfo* MsgItemMultiEquipC2S_EquipInfo::default_instance_ = NULL;

MsgItemMultiEquipC2S_EquipInfo* MsgItemMultiEquipC2S_EquipInfo::New() const {
  return new MsgItemMultiEquipC2S_EquipInfo;
}

void MsgItemMultiEquipC2S_EquipInfo::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<MsgItemMultiEquipC2S_EquipInfo*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(uuid_, equip_pos_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgItemMultiEquipC2S_EquipInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.MsgItemMultiEquipC2S.EquipInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 uuid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &uuid_)));
          set_has_uuid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_equip_pos;
        break;
      }

      // optional int32 equip_pos = 2;
      case 2: {
        if (tag == 16) {
         parse_equip_pos:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &equip_pos_)));
          set_has_equip_pos();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.MsgItemMultiEquipC2S.EquipInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.MsgItemMultiEquipC2S.EquipInfo)
  return false;
#undef DO_
}

void MsgItemMultiEquipC2S_EquipInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.MsgItemMultiEquipC2S.EquipInfo)
  // optional int64 uuid = 1;
  if (has_uuid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->uuid(), output);
  }

  // optional int32 equip_pos = 2;
  if (has_equip_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->equip_pos(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.MsgItemMultiEquipC2S.EquipInfo)
}

::google::protobuf::uint8* MsgItemMultiEquipC2S_EquipInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.MsgItemMultiEquipC2S.EquipInfo)
  // optional int64 uuid = 1;
  if (has_uuid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->uuid(), target);
  }

  // optional int32 equip_pos = 2;
  if (has_equip_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->equip_pos(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.MsgItemMultiEquipC2S.EquipInfo)
  return target;
}

int MsgItemMultiEquipC2S_EquipInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 uuid = 1;
    if (has_uuid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->uuid());
    }

    // optional int32 equip_pos = 2;
    if (has_equip_pos()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->equip_pos());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgItemMultiEquipC2S_EquipInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgItemMultiEquipC2S_EquipInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgItemMultiEquipC2S_EquipInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgItemMultiEquipC2S_EquipInfo::MergeFrom(const MsgItemMultiEquipC2S_EquipInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_uuid()) {
      set_uuid(from.uuid());
    }
    if (from.has_equip_pos()) {
      set_equip_pos(from.equip_pos());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgItemMultiEquipC2S_EquipInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgItemMultiEquipC2S_EquipInfo::CopyFrom(const MsgItemMultiEquipC2S_EquipInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgItemMultiEquipC2S_EquipInfo::IsInitialized() const {

  return true;
}

void MsgItemMultiEquipC2S_EquipInfo::Swap(MsgItemMultiEquipC2S_EquipInfo* other) {
  if (other != this) {
    std::swap(uuid_, other->uuid_);
    std::swap(equip_pos_, other->equip_pos_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgItemMultiEquipC2S_EquipInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgItemMultiEquipC2S_EquipInfo_descriptor_;
  metadata.reflection = MsgItemMultiEquipC2S_EquipInfo_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int MsgItemMultiEquipC2S::kMsgTypeFieldNumber;
const int MsgItemMultiEquipC2S::kItemFieldNumber;
#endif  // !_MSC_VER

MsgItemMultiEquipC2S::MsgItemMultiEquipC2S()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.MsgItemMultiEquipC2S)
}

void MsgItemMultiEquipC2S::InitAsDefaultInstance() {
}

MsgItemMultiEquipC2S::MsgItemMultiEquipC2S(const MsgItemMultiEquipC2S& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.MsgItemMultiEquipC2S)
}

void MsgItemMultiEquipC2S::SharedCtor() {
  _cached_size_ = 0;
  msgtype_ = 1296;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgItemMultiEquipC2S::~MsgItemMultiEquipC2S() {
  // @@protoc_insertion_point(destructor:MsgPB.MsgItemMultiEquipC2S)
  SharedDtor();
}

void MsgItemMultiEquipC2S::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgItemMultiEquipC2S::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgItemMultiEquipC2S::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgItemMultiEquipC2S_descriptor_;
}

const MsgItemMultiEquipC2S& MsgItemMultiEquipC2S::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgItem_2eproto();
  return *default_instance_;
}

MsgItemMultiEquipC2S* MsgItemMultiEquipC2S::default_instance_ = NULL;

MsgItemMultiEquipC2S* MsgItemMultiEquipC2S::New() const {
  return new MsgItemMultiEquipC2S;
}

void MsgItemMultiEquipC2S::Clear() {
  msgtype_ = 1296;
  item_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgItemMultiEquipC2S::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.MsgItemMultiEquipC2S)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .MsgPB.EMsgType msgType = 1 [default = MSG_ITEM_MULTI_EQUIP_C2S];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::EMsgType_IsValid(value)) {
            set_msgtype(static_cast< ::MsgPB::EMsgType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_item;
        break;
      }

      // repeated .MsgPB.MsgItemMultiEquipC2S.EquipInfo item = 2;
      case 2: {
        if (tag == 18) {
         parse_item:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_item()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_item;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.MsgItemMultiEquipC2S)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.MsgItemMultiEquipC2S)
  return false;
#undef DO_
}

void MsgItemMultiEquipC2S::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.MsgItemMultiEquipC2S)
  // optional .MsgPB.EMsgType msgType = 1 [default = MSG_ITEM_MULTI_EQUIP_C2S];
  if (has_msgtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->msgtype(), output);
  }

  // repeated .MsgPB.MsgItemMultiEquipC2S.EquipInfo item = 2;
  for (int i = 0; i < this->item_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->item(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.MsgItemMultiEquipC2S)
}

::google::protobuf::uint8* MsgItemMultiEquipC2S::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.MsgItemMultiEquipC2S)
  // optional .MsgPB.EMsgType msgType = 1 [default = MSG_ITEM_MULTI_EQUIP_C2S];
  if (has_msgtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->msgtype(), target);
  }

  // repeated .MsgPB.MsgItemMultiEquipC2S.EquipInfo item = 2;
  for (int i = 0; i < this->item_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->item(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.MsgItemMultiEquipC2S)
  return target;
}

int MsgItemMultiEquipC2S::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .MsgPB.EMsgType msgType = 1 [default = MSG_ITEM_MULTI_EQUIP_C2S];
    if (has_msgtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgtype());
    }

  }
  // repeated .MsgPB.MsgItemMultiEquipC2S.EquipInfo item = 2;
  total_size += 1 * this->item_size();
  for (int i = 0; i < this->item_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->item(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgItemMultiEquipC2S::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgItemMultiEquipC2S* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgItemMultiEquipC2S*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgItemMultiEquipC2S::MergeFrom(const MsgItemMultiEquipC2S& from) {
  GOOGLE_CHECK_NE(&from, this);
  item_.MergeFrom(from.item_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msgtype()) {
      set_msgtype(from.msgtype());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgItemMultiEquipC2S::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgItemMultiEquipC2S::CopyFrom(const MsgItemMultiEquipC2S& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgItemMultiEquipC2S::IsInitialized() const {

  return true;
}

void MsgItemMultiEquipC2S::Swap(MsgItemMultiEquipC2S* other) {
  if (other != this) {
    std::swap(msgtype_, other->msgtype_);
    item_.Swap(&other->item_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgItemMultiEquipC2S::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgItemMultiEquipC2S_descriptor_;
  metadata.reflection = MsgItemMultiEquipC2S_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgItemMultiEquipS2C::kMsgTypeFieldNumber;
const int MsgItemMultiEquipS2C::kUuidFieldNumber;
#endif  // !_MSC_VER

MsgItemMultiEquipS2C::MsgItemMultiEquipS2C()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.MsgItemMultiEquipS2C)
}

void MsgItemMultiEquipS2C::InitAsDefaultInstance() {
}

MsgItemMultiEquipS2C::MsgItemMultiEquipS2C(const MsgItemMultiEquipS2C& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.MsgItemMultiEquipS2C)
}

void MsgItemMultiEquipS2C::SharedCtor() {
  _cached_size_ = 0;
  msgtype_ = 1297;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgItemMultiEquipS2C::~MsgItemMultiEquipS2C() {
  // @@protoc_insertion_point(destructor:MsgPB.MsgItemMultiEquipS2C)
  SharedDtor();
}

void MsgItemMultiEquipS2C::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgItemMultiEquipS2C::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgItemMultiEquipS2C::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgItemMultiEquipS2C_descriptor_;
}

const MsgItemMultiEquipS2C& MsgItemMultiEquipS2C::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgItem_2eproto();
  return *default_instance_;
}

MsgItemMultiEquipS2C* MsgItemMultiEquipS2C::default_instance_ = NULL;

MsgItemMultiEquipS2C* MsgItemMultiEquipS2C::New() const {
  return new MsgItemMultiEquipS2C;
}

void MsgItemMultiEquipS2C::Clear() {
  msgtype_ = 1297;
  uuid_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgItemMultiEquipS2C::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.MsgItemMultiEquipS2C)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .MsgPB.EMsgType msgType = 1 [default = MSG_ITEM_MULTI_EQUIP_S2C];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::EMsgType_IsValid(value)) {
            set_msgtype(static_cast< ::MsgPB::EMsgType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_uuid;
        break;
      }

      // repeated int64 uuid = 2;
      case 2: {
        if (tag == 16) {
         parse_uuid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 16, input, this->mutable_uuid())));
        } else if (tag == 18) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_uuid())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_uuid;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.MsgItemMultiEquipS2C)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.MsgItemMultiEquipS2C)
  return false;
#undef DO_
}

void MsgItemMultiEquipS2C::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.MsgItemMultiEquipS2C)
  // optional .MsgPB.EMsgType msgType = 1 [default = MSG_ITEM_MULTI_EQUIP_S2C];
  if (has_msgtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->msgtype(), output);
  }

  // repeated int64 uuid = 2;
  for (int i = 0; i < this->uuid_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(
      2, this->uuid(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.MsgItemMultiEquipS2C)
}

::google::protobuf::uint8* MsgItemMultiEquipS2C::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.MsgItemMultiEquipS2C)
  // optional .MsgPB.EMsgType msgType = 1 [default = MSG_ITEM_MULTI_EQUIP_S2C];
  if (has_msgtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->msgtype(), target);
  }

  // repeated int64 uuid = 2;
  for (int i = 0; i < this->uuid_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64ToArray(2, this->uuid(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.MsgItemMultiEquipS2C)
  return target;
}

int MsgItemMultiEquipS2C::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .MsgPB.EMsgType msgType = 1 [default = MSG_ITEM_MULTI_EQUIP_S2C];
    if (has_msgtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgtype());
    }

  }
  // repeated int64 uuid = 2;
  {
    int data_size = 0;
    for (int i = 0; i < this->uuid_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int64Size(this->uuid(i));
    }
    total_size += 1 * this->uuid_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgItemMultiEquipS2C::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgItemMultiEquipS2C* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgItemMultiEquipS2C*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgItemMultiEquipS2C::MergeFrom(const MsgItemMultiEquipS2C& from) {
  GOOGLE_CHECK_NE(&from, this);
  uuid_.MergeFrom(from.uuid_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msgtype()) {
      set_msgtype(from.msgtype());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgItemMultiEquipS2C::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgItemMultiEquipS2C::CopyFrom(const MsgItemMultiEquipS2C& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgItemMultiEquipS2C::IsInitialized() const {

  return true;
}

void MsgItemMultiEquipS2C::Swap(MsgItemMultiEquipS2C* other) {
  if (other != this) {
    std::swap(msgtype_, other->msgtype_);
    uuid_.Swap(&other->uuid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgItemMultiEquipS2C::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgItemMultiEquipS2C_descriptor_;
  metadata.reflection = MsgItemMultiEquipS2C_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgItemMaterialS2C::kMsgTypeFieldNumber;
const int MsgItemMaterialS2C::kDataFieldNumber;
#endif  // !_MSC_VER

MsgItemMaterialS2C::MsgItemMaterialS2C()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.MsgItemMaterialS2C)
}

void MsgItemMaterialS2C::InitAsDefaultInstance() {
}

MsgItemMaterialS2C::MsgItemMaterialS2C(const MsgItemMaterialS2C& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.MsgItemMaterialS2C)
}

void MsgItemMaterialS2C::SharedCtor() {
  _cached_size_ = 0;
  msgtype_ = 1298;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgItemMaterialS2C::~MsgItemMaterialS2C() {
  // @@protoc_insertion_point(destructor:MsgPB.MsgItemMaterialS2C)
  SharedDtor();
}

void MsgItemMaterialS2C::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgItemMaterialS2C::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgItemMaterialS2C::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgItemMaterialS2C_descriptor_;
}

const MsgItemMaterialS2C& MsgItemMaterialS2C::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgItem_2eproto();
  return *default_instance_;
}

MsgItemMaterialS2C* MsgItemMaterialS2C::default_instance_ = NULL;

MsgItemMaterialS2C* MsgItemMaterialS2C::New() const {
  return new MsgItemMaterialS2C;
}

void MsgItemMaterialS2C::Clear() {
  msgtype_ = 1298;
  data_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgItemMaterialS2C::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.MsgItemMaterialS2C)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_SYNC_ITEM_MATERIAL_S2C];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::EMsgType_IsValid(value)) {
            set_msgtype(static_cast< ::MsgPB::EMsgType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_data;
        break;
      }

      // repeated .MsgPB.MsgMaterialData data = 2;
      case 2: {
        if (tag == 18) {
         parse_data:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_data()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_data;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.MsgItemMaterialS2C)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.MsgItemMaterialS2C)
  return false;
#undef DO_
}

void MsgItemMaterialS2C::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.MsgItemMaterialS2C)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_SYNC_ITEM_MATERIAL_S2C];
  if (has_msgtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->msgtype(), output);
  }

  // repeated .MsgPB.MsgMaterialData data = 2;
  for (int i = 0; i < this->data_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->data(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.MsgItemMaterialS2C)
}

::google::protobuf::uint8* MsgItemMaterialS2C::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.MsgItemMaterialS2C)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_SYNC_ITEM_MATERIAL_S2C];
  if (has_msgtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->msgtype(), target);
  }

  // repeated .MsgPB.MsgMaterialData data = 2;
  for (int i = 0; i < this->data_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->data(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.MsgItemMaterialS2C)
  return target;
}

int MsgItemMaterialS2C::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_SYNC_ITEM_MATERIAL_S2C];
    if (has_msgtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgtype());
    }

  }
  // repeated .MsgPB.MsgMaterialData data = 2;
  total_size += 1 * this->data_size();
  for (int i = 0; i < this->data_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->data(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgItemMaterialS2C::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgItemMaterialS2C* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgItemMaterialS2C*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgItemMaterialS2C::MergeFrom(const MsgItemMaterialS2C& from) {
  GOOGLE_CHECK_NE(&from, this);
  data_.MergeFrom(from.data_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msgtype()) {
      set_msgtype(from.msgtype());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgItemMaterialS2C::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgItemMaterialS2C::CopyFrom(const MsgItemMaterialS2C& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgItemMaterialS2C::IsInitialized() const {

  return true;
}

void MsgItemMaterialS2C::Swap(MsgItemMaterialS2C* other) {
  if (other != this) {
    std::swap(msgtype_, other->msgtype_);
    data_.Swap(&other->data_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgItemMaterialS2C::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgItemMaterialS2C_descriptor_;
  metadata.reflection = MsgItemMaterialS2C_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgItemProtectoUpgradeC2S::kSerialIDFieldNumber;
const int MsgItemProtectoUpgradeC2S::kMsgTypeFieldNumber;
const int MsgItemProtectoUpgradeC2S::kIggidFieldNumber;
const int MsgItemProtectoUpgradeC2S::kUuidFieldNumber;
const int MsgItemProtectoUpgradeC2S::kProtectoridFieldNumber;
#endif  // !_MSC_VER

MsgItemProtectoUpgradeC2S::MsgItemProtectoUpgradeC2S()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.MsgItemProtectoUpgradeC2S)
}

void MsgItemProtectoUpgradeC2S::InitAsDefaultInstance() {
}

MsgItemProtectoUpgradeC2S::MsgItemProtectoUpgradeC2S(const MsgItemProtectoUpgradeC2S& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.MsgItemProtectoUpgradeC2S)
}

void MsgItemProtectoUpgradeC2S::SharedCtor() {
  _cached_size_ = 0;
  serialid_ = 0;
  msgtype_ = 1287;
  iggid_ = GOOGLE_LONGLONG(0);
  uuid_ = GOOGLE_LONGLONG(0);
  protectorid_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgItemProtectoUpgradeC2S::~MsgItemProtectoUpgradeC2S() {
  // @@protoc_insertion_point(destructor:MsgPB.MsgItemProtectoUpgradeC2S)
  SharedDtor();
}

void MsgItemProtectoUpgradeC2S::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgItemProtectoUpgradeC2S::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgItemProtectoUpgradeC2S::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgItemProtectoUpgradeC2S_descriptor_;
}

const MsgItemProtectoUpgradeC2S& MsgItemProtectoUpgradeC2S::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgItem_2eproto();
  return *default_instance_;
}

MsgItemProtectoUpgradeC2S* MsgItemProtectoUpgradeC2S::default_instance_ = NULL;

MsgItemProtectoUpgradeC2S* MsgItemProtectoUpgradeC2S::New() const {
  return new MsgItemProtectoUpgradeC2S;
}

void MsgItemProtectoUpgradeC2S::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<MsgItemProtectoUpgradeC2S*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 31) {
    ZR_(iggid_, protectorid_);
    serialid_ = 0;
    msgtype_ = 1287;
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgItemProtectoUpgradeC2S::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.MsgItemProtectoUpgradeC2S)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 SerialID = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &serialid_)));
          set_has_serialid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_msgType;
        break;
      }

      // optional .MsgPB.EMsgType msgType = 2 [default = _MSG_UPGRADE_PRO_ITEM_S2C];
      case 2: {
        if (tag == 16) {
         parse_msgType:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::EMsgType_IsValid(value)) {
            set_msgtype(static_cast< ::MsgPB::EMsgType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_iggid;
        break;
      }

      // optional int64 iggid = 3;
      case 3: {
        if (tag == 24) {
         parse_iggid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &iggid_)));
          set_has_iggid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_uuid;
        break;
      }

      // optional int64 uuid = 4;
      case 4: {
        if (tag == 32) {
         parse_uuid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &uuid_)));
          set_has_uuid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_protectorid;
        break;
      }

      // optional int64 protectorid = 5;
      case 5: {
        if (tag == 40) {
         parse_protectorid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &protectorid_)));
          set_has_protectorid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.MsgItemProtectoUpgradeC2S)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.MsgItemProtectoUpgradeC2S)
  return false;
#undef DO_
}

void MsgItemProtectoUpgradeC2S::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.MsgItemProtectoUpgradeC2S)
  // optional int32 SerialID = 1;
  if (has_serialid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->serialid(), output);
  }

  // optional .MsgPB.EMsgType msgType = 2 [default = _MSG_UPGRADE_PRO_ITEM_S2C];
  if (has_msgtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->msgtype(), output);
  }

  // optional int64 iggid = 3;
  if (has_iggid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->iggid(), output);
  }

  // optional int64 uuid = 4;
  if (has_uuid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->uuid(), output);
  }

  // optional int64 protectorid = 5;
  if (has_protectorid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(5, this->protectorid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.MsgItemProtectoUpgradeC2S)
}

::google::protobuf::uint8* MsgItemProtectoUpgradeC2S::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.MsgItemProtectoUpgradeC2S)
  // optional int32 SerialID = 1;
  if (has_serialid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->serialid(), target);
  }

  // optional .MsgPB.EMsgType msgType = 2 [default = _MSG_UPGRADE_PRO_ITEM_S2C];
  if (has_msgtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->msgtype(), target);
  }

  // optional int64 iggid = 3;
  if (has_iggid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->iggid(), target);
  }

  // optional int64 uuid = 4;
  if (has_uuid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->uuid(), target);
  }

  // optional int64 protectorid = 5;
  if (has_protectorid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(5, this->protectorid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.MsgItemProtectoUpgradeC2S)
  return target;
}

int MsgItemProtectoUpgradeC2S::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 SerialID = 1;
    if (has_serialid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->serialid());
    }

    // optional .MsgPB.EMsgType msgType = 2 [default = _MSG_UPGRADE_PRO_ITEM_S2C];
    if (has_msgtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgtype());
    }

    // optional int64 iggid = 3;
    if (has_iggid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->iggid());
    }

    // optional int64 uuid = 4;
    if (has_uuid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->uuid());
    }

    // optional int64 protectorid = 5;
    if (has_protectorid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->protectorid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgItemProtectoUpgradeC2S::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgItemProtectoUpgradeC2S* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgItemProtectoUpgradeC2S*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgItemProtectoUpgradeC2S::MergeFrom(const MsgItemProtectoUpgradeC2S& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_serialid()) {
      set_serialid(from.serialid());
    }
    if (from.has_msgtype()) {
      set_msgtype(from.msgtype());
    }
    if (from.has_iggid()) {
      set_iggid(from.iggid());
    }
    if (from.has_uuid()) {
      set_uuid(from.uuid());
    }
    if (from.has_protectorid()) {
      set_protectorid(from.protectorid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgItemProtectoUpgradeC2S::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgItemProtectoUpgradeC2S::CopyFrom(const MsgItemProtectoUpgradeC2S& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgItemProtectoUpgradeC2S::IsInitialized() const {

  return true;
}

void MsgItemProtectoUpgradeC2S::Swap(MsgItemProtectoUpgradeC2S* other) {
  if (other != this) {
    std::swap(serialid_, other->serialid_);
    std::swap(msgtype_, other->msgtype_);
    std::swap(iggid_, other->iggid_);
    std::swap(uuid_, other->uuid_);
    std::swap(protectorid_, other->protectorid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgItemProtectoUpgradeC2S::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgItemProtectoUpgradeC2S_descriptor_;
  metadata.reflection = MsgItemProtectoUpgradeC2S_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace MsgPB

// @@protoc_insertion_point(global_scope)
