// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MsgSurvival.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "MsgSurvival.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace MsgPB {

namespace {

const ::google::protobuf::Descriptor* MsgSurvivalRecordData_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgSurvivalRecordData_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgSurvivalEventFlagData_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgSurvivalEventFlagData_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgSurvivalTargetInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgSurvivalTargetInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgSurvivalGameReward_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgSurvivalGameReward_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgSurvivalNpcReward_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgSurvivalNpcReward_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgSurvivalNotifyEventS2C_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgSurvivalNotifyEventS2C_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* MsgSurvivalNotifyEventS2C_TYPE_descriptor_ = NULL;
const ::google::protobuf::Descriptor* MsgSurvivalNotifyWaveS2C_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgSurvivalNotifyWaveS2C_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgSurvivalNotifyTargetInfoS2C_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgSurvivalNotifyTargetInfoS2C_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgSurvivalNotifyNpcRewardS2C_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgSurvivalNotifyNpcRewardS2C_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgSurvivalNotifyGameRewardS2C_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgSurvivalNotifyGameRewardS2C_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgSurvivalNotifyClearMobS2C_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgSurvivalNotifyClearMobS2C_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgSurvivalNotifyMobBirthPointS2C_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgSurvivalNotifyMobBirthPointS2C_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* MsgSurvivalNotifyMobBirthPointS2C_STATUS_descriptor_ = NULL;
const ::google::protobuf::Descriptor* MsgSyncSurvivalEventFlagS2C_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgSyncSurvivalEventFlagS2C_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgUpdateSurvivalEventFlagS2C_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgUpdateSurvivalEventFlagS2C_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgSurvivalTriggerCountS2C_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgSurvivalTriggerCountS2C_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgSetSurvivalRecordC2S_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgSetSurvivalRecordC2S_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_MsgSurvival_2eproto() {
  protobuf_AddDesc_MsgSurvival_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "MsgSurvival.proto");
  GOOGLE_CHECK(file != NULL);
  MsgSurvivalRecordData_descriptor_ = file->message_type(0);
  static const int MsgSurvivalRecordData_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSurvivalRecordData, uuid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSurvivalRecordData, win_count_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSurvivalRecordData, lose_count_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSurvivalRecordData, play_count_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSurvivalRecordData, shortest_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSurvivalRecordData, dirty_),
  };
  MsgSurvivalRecordData_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgSurvivalRecordData_descriptor_,
      MsgSurvivalRecordData::default_instance_,
      MsgSurvivalRecordData_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSurvivalRecordData, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSurvivalRecordData, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgSurvivalRecordData));
  MsgSurvivalEventFlagData_descriptor_ = file->message_type(1);
  static const int MsgSurvivalEventFlagData_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSurvivalEventFlagData, flag_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSurvivalEventFlagData, dirty_),
  };
  MsgSurvivalEventFlagData_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgSurvivalEventFlagData_descriptor_,
      MsgSurvivalEventFlagData::default_instance_,
      MsgSurvivalEventFlagData_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSurvivalEventFlagData, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSurvivalEventFlagData, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgSurvivalEventFlagData));
  MsgSurvivalTargetInfo_descriptor_ = file->message_type(2);
  static const int MsgSurvivalTargetInfo_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSurvivalTargetInfo, currentnumber_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSurvivalTargetInfo, maxnumber_),
  };
  MsgSurvivalTargetInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgSurvivalTargetInfo_descriptor_,
      MsgSurvivalTargetInfo::default_instance_,
      MsgSurvivalTargetInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSurvivalTargetInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSurvivalTargetInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgSurvivalTargetInfo));
  MsgSurvivalGameReward_descriptor_ = file->message_type(3);
  static const int MsgSurvivalGameReward_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSurvivalGameReward, itemid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSurvivalGameReward, itemcount_),
  };
  MsgSurvivalGameReward_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgSurvivalGameReward_descriptor_,
      MsgSurvivalGameReward::default_instance_,
      MsgSurvivalGameReward_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSurvivalGameReward, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSurvivalGameReward, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgSurvivalGameReward));
  MsgSurvivalNpcReward_descriptor_ = file->message_type(4);
  static const int MsgSurvivalNpcReward_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSurvivalNpcReward, mobid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSurvivalNpcReward, itemid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSurvivalNpcReward, itemcount_),
  };
  MsgSurvivalNpcReward_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgSurvivalNpcReward_descriptor_,
      MsgSurvivalNpcReward::default_instance_,
      MsgSurvivalNpcReward_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSurvivalNpcReward, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSurvivalNpcReward, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgSurvivalNpcReward));
  MsgSurvivalNotifyEventS2C_descriptor_ = file->message_type(5);
  static const int MsgSurvivalNotifyEventS2C_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSurvivalNotifyEventS2C, msgtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSurvivalNotifyEventS2C, iggid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSurvivalNotifyEventS2C, notifytype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSurvivalNotifyEventS2C, survivaleventid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSurvivalNotifyEventS2C, wave_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSurvivalNotifyEventS2C, countdown_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSurvivalNotifyEventS2C, targetinfo_),
  };
  MsgSurvivalNotifyEventS2C_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgSurvivalNotifyEventS2C_descriptor_,
      MsgSurvivalNotifyEventS2C::default_instance_,
      MsgSurvivalNotifyEventS2C_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSurvivalNotifyEventS2C, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSurvivalNotifyEventS2C, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgSurvivalNotifyEventS2C));
  MsgSurvivalNotifyEventS2C_TYPE_descriptor_ = MsgSurvivalNotifyEventS2C_descriptor_->enum_type(0);
  MsgSurvivalNotifyWaveS2C_descriptor_ = file->message_type(6);
  static const int MsgSurvivalNotifyWaveS2C_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSurvivalNotifyWaveS2C, msgtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSurvivalNotifyWaveS2C, iggid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSurvivalNotifyWaveS2C, survivaleventid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSurvivalNotifyWaveS2C, wave_),
  };
  MsgSurvivalNotifyWaveS2C_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgSurvivalNotifyWaveS2C_descriptor_,
      MsgSurvivalNotifyWaveS2C::default_instance_,
      MsgSurvivalNotifyWaveS2C_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSurvivalNotifyWaveS2C, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSurvivalNotifyWaveS2C, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgSurvivalNotifyWaveS2C));
  MsgSurvivalNotifyTargetInfoS2C_descriptor_ = file->message_type(7);
  static const int MsgSurvivalNotifyTargetInfoS2C_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSurvivalNotifyTargetInfoS2C, msgtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSurvivalNotifyTargetInfoS2C, iggid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSurvivalNotifyTargetInfoS2C, targetinfo_),
  };
  MsgSurvivalNotifyTargetInfoS2C_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgSurvivalNotifyTargetInfoS2C_descriptor_,
      MsgSurvivalNotifyTargetInfoS2C::default_instance_,
      MsgSurvivalNotifyTargetInfoS2C_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSurvivalNotifyTargetInfoS2C, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSurvivalNotifyTargetInfoS2C, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgSurvivalNotifyTargetInfoS2C));
  MsgSurvivalNotifyNpcRewardS2C_descriptor_ = file->message_type(8);
  static const int MsgSurvivalNotifyNpcRewardS2C_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSurvivalNotifyNpcRewardS2C, msgtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSurvivalNotifyNpcRewardS2C, iggid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSurvivalNotifyNpcRewardS2C, reward_),
  };
  MsgSurvivalNotifyNpcRewardS2C_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgSurvivalNotifyNpcRewardS2C_descriptor_,
      MsgSurvivalNotifyNpcRewardS2C::default_instance_,
      MsgSurvivalNotifyNpcRewardS2C_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSurvivalNotifyNpcRewardS2C, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSurvivalNotifyNpcRewardS2C, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgSurvivalNotifyNpcRewardS2C));
  MsgSurvivalNotifyGameRewardS2C_descriptor_ = file->message_type(9);
  static const int MsgSurvivalNotifyGameRewardS2C_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSurvivalNotifyGameRewardS2C, msgtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSurvivalNotifyGameRewardS2C, iggid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSurvivalNotifyGameRewardS2C, gameresult_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSurvivalNotifyGameRewardS2C, survivaleventid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSurvivalNotifyGameRewardS2C, reward_),
  };
  MsgSurvivalNotifyGameRewardS2C_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgSurvivalNotifyGameRewardS2C_descriptor_,
      MsgSurvivalNotifyGameRewardS2C::default_instance_,
      MsgSurvivalNotifyGameRewardS2C_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSurvivalNotifyGameRewardS2C, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSurvivalNotifyGameRewardS2C, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgSurvivalNotifyGameRewardS2C));
  MsgSurvivalNotifyClearMobS2C_descriptor_ = file->message_type(10);
  static const int MsgSurvivalNotifyClearMobS2C_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSurvivalNotifyClearMobS2C, msgtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSurvivalNotifyClearMobS2C, iggid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSurvivalNotifyClearMobS2C, mapobjectid_),
  };
  MsgSurvivalNotifyClearMobS2C_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgSurvivalNotifyClearMobS2C_descriptor_,
      MsgSurvivalNotifyClearMobS2C::default_instance_,
      MsgSurvivalNotifyClearMobS2C_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSurvivalNotifyClearMobS2C, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSurvivalNotifyClearMobS2C, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgSurvivalNotifyClearMobS2C));
  MsgSurvivalNotifyMobBirthPointS2C_descriptor_ = file->message_type(11);
  static const int MsgSurvivalNotifyMobBirthPointS2C_offsets_[11] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSurvivalNotifyMobBirthPointS2C, msgtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSurvivalNotifyMobBirthPointS2C, iggid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSurvivalNotifyMobBirthPointS2C, survivaleventid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSurvivalNotifyMobBirthPointS2C, wave_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSurvivalNotifyMobBirthPointS2C, status_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSurvivalNotifyMobBirthPointS2C, enable_left_point_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSurvivalNotifyMobBirthPointS2C, left_pos_x_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSurvivalNotifyMobBirthPointS2C, left_pos_y_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSurvivalNotifyMobBirthPointS2C, enable_right_point_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSurvivalNotifyMobBirthPointS2C, right_pos_x_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSurvivalNotifyMobBirthPointS2C, right_pos_y_),
  };
  MsgSurvivalNotifyMobBirthPointS2C_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgSurvivalNotifyMobBirthPointS2C_descriptor_,
      MsgSurvivalNotifyMobBirthPointS2C::default_instance_,
      MsgSurvivalNotifyMobBirthPointS2C_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSurvivalNotifyMobBirthPointS2C, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSurvivalNotifyMobBirthPointS2C, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgSurvivalNotifyMobBirthPointS2C));
  MsgSurvivalNotifyMobBirthPointS2C_STATUS_descriptor_ = MsgSurvivalNotifyMobBirthPointS2C_descriptor_->enum_type(0);
  MsgSyncSurvivalEventFlagS2C_descriptor_ = file->message_type(12);
  static const int MsgSyncSurvivalEventFlagS2C_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSyncSurvivalEventFlagS2C, msgtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSyncSurvivalEventFlagS2C, values_),
  };
  MsgSyncSurvivalEventFlagS2C_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgSyncSurvivalEventFlagS2C_descriptor_,
      MsgSyncSurvivalEventFlagS2C::default_instance_,
      MsgSyncSurvivalEventFlagS2C_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSyncSurvivalEventFlagS2C, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSyncSurvivalEventFlagS2C, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgSyncSurvivalEventFlagS2C));
  MsgUpdateSurvivalEventFlagS2C_descriptor_ = file->message_type(13);
  static const int MsgUpdateSurvivalEventFlagS2C_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgUpdateSurvivalEventFlagS2C, msgtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgUpdateSurvivalEventFlagS2C, data_),
  };
  MsgUpdateSurvivalEventFlagS2C_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgUpdateSurvivalEventFlagS2C_descriptor_,
      MsgUpdateSurvivalEventFlagS2C::default_instance_,
      MsgUpdateSurvivalEventFlagS2C_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgUpdateSurvivalEventFlagS2C, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgUpdateSurvivalEventFlagS2C, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgUpdateSurvivalEventFlagS2C));
  MsgSurvivalTriggerCountS2C_descriptor_ = file->message_type(14);
  static const int MsgSurvivalTriggerCountS2C_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSurvivalTriggerCountS2C, msgtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSurvivalTriggerCountS2C, count_),
  };
  MsgSurvivalTriggerCountS2C_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgSurvivalTriggerCountS2C_descriptor_,
      MsgSurvivalTriggerCountS2C::default_instance_,
      MsgSurvivalTriggerCountS2C_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSurvivalTriggerCountS2C, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSurvivalTriggerCountS2C, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgSurvivalTriggerCountS2C));
  MsgSetSurvivalRecordC2S_descriptor_ = file->message_type(15);
  static const int MsgSetSurvivalRecordC2S_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSetSurvivalRecordC2S, msgtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSetSurvivalRecordC2S, uuid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSetSurvivalRecordC2S, gameresult_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSetSurvivalRecordC2S, newclearancetime_),
  };
  MsgSetSurvivalRecordC2S_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgSetSurvivalRecordC2S_descriptor_,
      MsgSetSurvivalRecordC2S::default_instance_,
      MsgSetSurvivalRecordC2S_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSetSurvivalRecordC2S, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSetSurvivalRecordC2S, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgSetSurvivalRecordC2S));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_MsgSurvival_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgSurvivalRecordData_descriptor_, &MsgSurvivalRecordData::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgSurvivalEventFlagData_descriptor_, &MsgSurvivalEventFlagData::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgSurvivalTargetInfo_descriptor_, &MsgSurvivalTargetInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgSurvivalGameReward_descriptor_, &MsgSurvivalGameReward::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgSurvivalNpcReward_descriptor_, &MsgSurvivalNpcReward::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgSurvivalNotifyEventS2C_descriptor_, &MsgSurvivalNotifyEventS2C::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgSurvivalNotifyWaveS2C_descriptor_, &MsgSurvivalNotifyWaveS2C::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgSurvivalNotifyTargetInfoS2C_descriptor_, &MsgSurvivalNotifyTargetInfoS2C::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgSurvivalNotifyNpcRewardS2C_descriptor_, &MsgSurvivalNotifyNpcRewardS2C::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgSurvivalNotifyGameRewardS2C_descriptor_, &MsgSurvivalNotifyGameRewardS2C::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgSurvivalNotifyClearMobS2C_descriptor_, &MsgSurvivalNotifyClearMobS2C::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgSurvivalNotifyMobBirthPointS2C_descriptor_, &MsgSurvivalNotifyMobBirthPointS2C::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgSyncSurvivalEventFlagS2C_descriptor_, &MsgSyncSurvivalEventFlagS2C::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgUpdateSurvivalEventFlagS2C_descriptor_, &MsgUpdateSurvivalEventFlagS2C::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgSurvivalTriggerCountS2C_descriptor_, &MsgSurvivalTriggerCountS2C::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgSetSurvivalRecordC2S_descriptor_, &MsgSetSurvivalRecordC2S::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_MsgSurvival_2eproto() {
  delete MsgSurvivalRecordData::default_instance_;
  delete MsgSurvivalRecordData_reflection_;
  delete MsgSurvivalEventFlagData::default_instance_;
  delete MsgSurvivalEventFlagData_reflection_;
  delete MsgSurvivalTargetInfo::default_instance_;
  delete MsgSurvivalTargetInfo_reflection_;
  delete MsgSurvivalGameReward::default_instance_;
  delete MsgSurvivalGameReward_reflection_;
  delete MsgSurvivalNpcReward::default_instance_;
  delete MsgSurvivalNpcReward_reflection_;
  delete MsgSurvivalNotifyEventS2C::default_instance_;
  delete MsgSurvivalNotifyEventS2C_reflection_;
  delete MsgSurvivalNotifyWaveS2C::default_instance_;
  delete MsgSurvivalNotifyWaveS2C_reflection_;
  delete MsgSurvivalNotifyTargetInfoS2C::default_instance_;
  delete MsgSurvivalNotifyTargetInfoS2C_reflection_;
  delete MsgSurvivalNotifyNpcRewardS2C::default_instance_;
  delete MsgSurvivalNotifyNpcRewardS2C_reflection_;
  delete MsgSurvivalNotifyGameRewardS2C::default_instance_;
  delete MsgSurvivalNotifyGameRewardS2C_reflection_;
  delete MsgSurvivalNotifyClearMobS2C::default_instance_;
  delete MsgSurvivalNotifyClearMobS2C_reflection_;
  delete MsgSurvivalNotifyMobBirthPointS2C::default_instance_;
  delete MsgSurvivalNotifyMobBirthPointS2C_reflection_;
  delete MsgSyncSurvivalEventFlagS2C::default_instance_;
  delete MsgSyncSurvivalEventFlagS2C_reflection_;
  delete MsgUpdateSurvivalEventFlagS2C::default_instance_;
  delete MsgUpdateSurvivalEventFlagS2C_reflection_;
  delete MsgSurvivalTriggerCountS2C::default_instance_;
  delete MsgSurvivalTriggerCountS2C_reflection_;
  delete MsgSetSurvivalRecordC2S::default_instance_;
  delete MsgSetSurvivalRecordC2S_reflection_;
}

void protobuf_AddDesc_MsgSurvival_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::MsgPB::protobuf_AddDesc_MsgType_2eproto();
  ::MsgPB::protobuf_AddDesc_MsgGameDef_2eproto();
  ::MsgPB::protobuf_AddDesc_MsgMapServer_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\021MsgSurvival.proto\022\005MsgPB\032\rMsgType.prot"
    "o\032\020MsgGameDef.proto\032\022MsgMapServer.proto\""
    "\206\001\n\025MsgSurvivalRecordData\022\014\n\004uuid\030\001 \001(\003\022"
    "\021\n\twin_count\030\002 \001(\005\022\022\n\nlose_count\030\003 \001(\005\022\022"
    "\n\nplay_count\030\004 \001(\005\022\025\n\rshortest_time\030\005 \001("
    "\005\022\r\n\005dirty\030\006 \001(\003\"7\n\030MsgSurvivalEventFlag"
    "Data\022\014\n\004flag\030\001 \003(\r\022\r\n\005dirty\030\002 \001(\003\"A\n\025Msg"
    "SurvivalTargetInfo\022\025\n\rCurrentNumber\030\001 \001("
    "\005\022\021\n\tMaxNumber\030\002 \001(\005\":\n\025MsgSurvivalGameR"
    "eward\022\016\n\006ItemID\030\001 \001(\005\022\021\n\tItemCount\030\002 \001(\005"
    "\"H\n\024MsgSurvivalNpcReward\022\r\n\005MobID\030\001 \001(\005\022"
    "\016\n\006ItemID\030\002 \001(\005\022\021\n\tItemCount\030\003 \001(\005\"\306\002\n\031M"
    "sgSurvivalNotifyEventS2C\022A\n\007msgType\030\001 \001("
    "\0162\017.MsgPB.EMsgType:\037_MSG_SURVIVAL_NOTIFY"
    "_EVENT_MS2C\022\r\n\005iggid\030\002 \001(\003\0229\n\nNotifyType"
    "\030\003 \001(\0162%.MsgPB.MsgSurvivalNotifyEventS2C"
    ".TYPE\022\027\n\017SurvivalEventID\030\004 \001(\005\022\014\n\004Wave\030\005"
    " \001(\005\022\021\n\tCountdown\030\006 \001(\005\0220\n\nTargetInfo\030\007 "
    "\001(\0132\034.MsgPB.MsgSurvivalTargetInfo\"0\n\004TYP"
    "E\022\013\n\007TRIGGER\020\000\022\t\n\005LOGIN\020\001\022\020\n\014TRIGGER_DIF"
    "F\020\002\"\222\001\n\030MsgSurvivalNotifyWaveS2C\022@\n\007msgT"
    "ype\030\001 \001(\0162\017.MsgPB.EMsgType:\036_MSG_SURVIVA"
    "L_NOTIFY_WAVE_MS2C\022\r\n\005iggid\030\002 \001(\003\022\027\n\017Sur"
    "vivalEventID\030\003 \001(\005\022\014\n\004Wave\030\004 \001(\005\"\252\001\n\036Msg"
    "SurvivalNotifyTargetInfoS2C\022G\n\007msgType\030\001"
    " \001(\0162\017.MsgPB.EMsgType:%_MSG_SURVIVAL_NOT"
    "IFY_TARGET_INFO_MS2C\022\r\n\005iggid\030\002 \001(\003\0220\n\nT"
    "argetInfo\030\003 \001(\0132\034.MsgPB.MsgSurvivalTarge"
    "tInfo\"\243\001\n\035MsgSurvivalNotifyNpcRewardS2C\022"
    "F\n\007msgType\030\001 \001(\0162\017.MsgPB.EMsgType:$_MSG_"
    "SURVIVAL_NOTIFY_NPC_REWARD_MS2C\022\r\n\005iggid"
    "\030\002 \001(\003\022+\n\006Reward\030\003 \003(\0132\033.MsgPB.MsgSurviv"
    "alNpcReward\"\360\001\n\036MsgSurvivalNotifyGameRew"
    "ardS2C\022G\n\007msgType\030\001 \001(\0162\017.MsgPB.EMsgType"
    ":%_MSG_SURVIVAL_NOTIFY_GAME_REWARD_MS2C\022"
    "\r\n\005iggid\030\002 \001(\003\022/\n\nGameResult\030\003 \001(\0162\033.Msg"
    "PB.SURVIVAL_GAME_RESULT\022\027\n\017SurvivalEvent"
    "ID\030\004 \001(\005\022,\n\006Reward\030\005 \003(\0132\034.MsgPB.MsgSurv"
    "ivalGameReward\"\211\001\n\034MsgSurvivalNotifyClea"
    "rMobS2C\022E\n\007msgType\030\001 \001(\0162\017.MsgPB.EMsgTyp"
    "e:#_MSG_SURVIVAL_NOTIFY_CLEAR_MOB_MS2C\022\r"
    "\n\005iggid\030\002 \001(\003\022\023\n\013MapObjectID\030\003 \003(\005\"\217\003\n!M"
    "sgSurvivalNotifyMobBirthPointS2C\022K\n\007msgT"
    "ype\030\001 \001(\0162\017.MsgPB.EMsgType:)_MSG_SURVIVA"
    "L_NOTIFY_MOB_BIRTH_POINT_MS2C\022\r\n\005iggid\030\002"
    " \001(\003\022\027\n\017SurvivalEventID\030\003 \001(\005\022\014\n\004Wave\030\004 "
    "\001(\005\022\?\n\006status\030\005 \001(\0162/.MsgPB.MsgSurvivalN"
    "otifyMobBirthPointS2C.STATUS\022\031\n\021enable_l"
    "eft_point\030\006 \001(\010\022\022\n\nleft_pos_x\030\007 \001(\005\022\022\n\nl"
    "eft_pos_y\030\010 \001(\005\022\032\n\022enable_right_point\030\t "
    "\001(\010\022\023\n\013right_pos_x\030\n \001(\005\022\023\n\013right_pos_y\030"
    "\013 \001(\005\"\035\n\006STATUS\022\010\n\004OPEN\020\000\022\t\n\005CLOSE\020\001\"r\n\033"
    "MsgSyncSurvivalEventFlagS2C\022C\n\007msgType\030\001"
    " \001(\0162\017.MsgPB.EMsgType:!_MSG_SYNC_SURVIVA"
    "L_EVENT_FLAG_S2C\022\016\n\006values\030\002 \003(\r\"\227\001\n\035Msg"
    "UpdateSurvivalEventFlagS2C\022E\n\007msgType\030\001 "
    "\001(\0162\017.MsgPB.EMsgType:#_MSG_UPDATE_SURVIV"
    "AL_EVENT_FLAG_S2C\022/\n\004data\030\002 \001(\0132!.MsgPB."
    "MsgLSSurvivalEventFlagData\"u\n\032MsgSurviva"
    "lTriggerCountS2C\022H\n\007msgType\030\001 \001(\0162\017.MsgP"
    "B.EMsgType:&_MSG_UPDATE_SURVIVAL_TRIGGER"
    "_COUNT_S2C\022\r\n\005count\030\002 \001(\005\"\262\001\n\027MsgSetSurv"
    "ivalRecordC2S\022>\n\007msgType\030\001 \001(\0162\017.MsgPB.E"
    "MsgType:\034_MSG_SET_SURVIVAL_RECORD_C2S\022\014\n"
    "\004uuid\030\002 \001(\003\022/\n\nGameResult\030\003 \001(\0162\033.MsgPB."
    "SURVIVAL_GAME_RESULT\022\030\n\020NewClearanceTime"
    "\030\004 \001(\005", 2646);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "MsgSurvival.proto", &protobuf_RegisterTypes);
  MsgSurvivalRecordData::default_instance_ = new MsgSurvivalRecordData();
  MsgSurvivalEventFlagData::default_instance_ = new MsgSurvivalEventFlagData();
  MsgSurvivalTargetInfo::default_instance_ = new MsgSurvivalTargetInfo();
  MsgSurvivalGameReward::default_instance_ = new MsgSurvivalGameReward();
  MsgSurvivalNpcReward::default_instance_ = new MsgSurvivalNpcReward();
  MsgSurvivalNotifyEventS2C::default_instance_ = new MsgSurvivalNotifyEventS2C();
  MsgSurvivalNotifyWaveS2C::default_instance_ = new MsgSurvivalNotifyWaveS2C();
  MsgSurvivalNotifyTargetInfoS2C::default_instance_ = new MsgSurvivalNotifyTargetInfoS2C();
  MsgSurvivalNotifyNpcRewardS2C::default_instance_ = new MsgSurvivalNotifyNpcRewardS2C();
  MsgSurvivalNotifyGameRewardS2C::default_instance_ = new MsgSurvivalNotifyGameRewardS2C();
  MsgSurvivalNotifyClearMobS2C::default_instance_ = new MsgSurvivalNotifyClearMobS2C();
  MsgSurvivalNotifyMobBirthPointS2C::default_instance_ = new MsgSurvivalNotifyMobBirthPointS2C();
  MsgSyncSurvivalEventFlagS2C::default_instance_ = new MsgSyncSurvivalEventFlagS2C();
  MsgUpdateSurvivalEventFlagS2C::default_instance_ = new MsgUpdateSurvivalEventFlagS2C();
  MsgSurvivalTriggerCountS2C::default_instance_ = new MsgSurvivalTriggerCountS2C();
  MsgSetSurvivalRecordC2S::default_instance_ = new MsgSetSurvivalRecordC2S();
  MsgSurvivalRecordData::default_instance_->InitAsDefaultInstance();
  MsgSurvivalEventFlagData::default_instance_->InitAsDefaultInstance();
  MsgSurvivalTargetInfo::default_instance_->InitAsDefaultInstance();
  MsgSurvivalGameReward::default_instance_->InitAsDefaultInstance();
  MsgSurvivalNpcReward::default_instance_->InitAsDefaultInstance();
  MsgSurvivalNotifyEventS2C::default_instance_->InitAsDefaultInstance();
  MsgSurvivalNotifyWaveS2C::default_instance_->InitAsDefaultInstance();
  MsgSurvivalNotifyTargetInfoS2C::default_instance_->InitAsDefaultInstance();
  MsgSurvivalNotifyNpcRewardS2C::default_instance_->InitAsDefaultInstance();
  MsgSurvivalNotifyGameRewardS2C::default_instance_->InitAsDefaultInstance();
  MsgSurvivalNotifyClearMobS2C::default_instance_->InitAsDefaultInstance();
  MsgSurvivalNotifyMobBirthPointS2C::default_instance_->InitAsDefaultInstance();
  MsgSyncSurvivalEventFlagS2C::default_instance_->InitAsDefaultInstance();
  MsgUpdateSurvivalEventFlagS2C::default_instance_->InitAsDefaultInstance();
  MsgSurvivalTriggerCountS2C::default_instance_->InitAsDefaultInstance();
  MsgSetSurvivalRecordC2S::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_MsgSurvival_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_MsgSurvival_2eproto {
  StaticDescriptorInitializer_MsgSurvival_2eproto() {
    protobuf_AddDesc_MsgSurvival_2eproto();
  }
} static_descriptor_initializer_MsgSurvival_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int MsgSurvivalRecordData::kUuidFieldNumber;
const int MsgSurvivalRecordData::kWinCountFieldNumber;
const int MsgSurvivalRecordData::kLoseCountFieldNumber;
const int MsgSurvivalRecordData::kPlayCountFieldNumber;
const int MsgSurvivalRecordData::kShortestTimeFieldNumber;
const int MsgSurvivalRecordData::kDirtyFieldNumber;
#endif  // !_MSC_VER

MsgSurvivalRecordData::MsgSurvivalRecordData()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.MsgSurvivalRecordData)
}

void MsgSurvivalRecordData::InitAsDefaultInstance() {
}

MsgSurvivalRecordData::MsgSurvivalRecordData(const MsgSurvivalRecordData& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.MsgSurvivalRecordData)
}

void MsgSurvivalRecordData::SharedCtor() {
  _cached_size_ = 0;
  uuid_ = GOOGLE_LONGLONG(0);
  win_count_ = 0;
  lose_count_ = 0;
  play_count_ = 0;
  shortest_time_ = 0;
  dirty_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgSurvivalRecordData::~MsgSurvivalRecordData() {
  // @@protoc_insertion_point(destructor:MsgPB.MsgSurvivalRecordData)
  SharedDtor();
}

void MsgSurvivalRecordData::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgSurvivalRecordData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgSurvivalRecordData::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgSurvivalRecordData_descriptor_;
}

const MsgSurvivalRecordData& MsgSurvivalRecordData::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgSurvival_2eproto();
  return *default_instance_;
}

MsgSurvivalRecordData* MsgSurvivalRecordData::default_instance_ = NULL;

MsgSurvivalRecordData* MsgSurvivalRecordData::New() const {
  return new MsgSurvivalRecordData;
}

void MsgSurvivalRecordData::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<MsgSurvivalRecordData*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 63) {
    ZR_(uuid_, dirty_);
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgSurvivalRecordData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.MsgSurvivalRecordData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 uuid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &uuid_)));
          set_has_uuid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_win_count;
        break;
      }

      // optional int32 win_count = 2;
      case 2: {
        if (tag == 16) {
         parse_win_count:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &win_count_)));
          set_has_win_count();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_lose_count;
        break;
      }

      // optional int32 lose_count = 3;
      case 3: {
        if (tag == 24) {
         parse_lose_count:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &lose_count_)));
          set_has_lose_count();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_play_count;
        break;
      }

      // optional int32 play_count = 4;
      case 4: {
        if (tag == 32) {
         parse_play_count:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &play_count_)));
          set_has_play_count();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_shortest_time;
        break;
      }

      // optional int32 shortest_time = 5;
      case 5: {
        if (tag == 40) {
         parse_shortest_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &shortest_time_)));
          set_has_shortest_time();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_dirty;
        break;
      }

      // optional int64 dirty = 6;
      case 6: {
        if (tag == 48) {
         parse_dirty:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &dirty_)));
          set_has_dirty();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.MsgSurvivalRecordData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.MsgSurvivalRecordData)
  return false;
#undef DO_
}

void MsgSurvivalRecordData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.MsgSurvivalRecordData)
  // optional int64 uuid = 1;
  if (has_uuid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->uuid(), output);
  }

  // optional int32 win_count = 2;
  if (has_win_count()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->win_count(), output);
  }

  // optional int32 lose_count = 3;
  if (has_lose_count()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->lose_count(), output);
  }

  // optional int32 play_count = 4;
  if (has_play_count()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->play_count(), output);
  }

  // optional int32 shortest_time = 5;
  if (has_shortest_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->shortest_time(), output);
  }

  // optional int64 dirty = 6;
  if (has_dirty()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(6, this->dirty(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.MsgSurvivalRecordData)
}

::google::protobuf::uint8* MsgSurvivalRecordData::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.MsgSurvivalRecordData)
  // optional int64 uuid = 1;
  if (has_uuid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->uuid(), target);
  }

  // optional int32 win_count = 2;
  if (has_win_count()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->win_count(), target);
  }

  // optional int32 lose_count = 3;
  if (has_lose_count()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->lose_count(), target);
  }

  // optional int32 play_count = 4;
  if (has_play_count()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->play_count(), target);
  }

  // optional int32 shortest_time = 5;
  if (has_shortest_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->shortest_time(), target);
  }

  // optional int64 dirty = 6;
  if (has_dirty()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(6, this->dirty(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.MsgSurvivalRecordData)
  return target;
}

int MsgSurvivalRecordData::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 uuid = 1;
    if (has_uuid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->uuid());
    }

    // optional int32 win_count = 2;
    if (has_win_count()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->win_count());
    }

    // optional int32 lose_count = 3;
    if (has_lose_count()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->lose_count());
    }

    // optional int32 play_count = 4;
    if (has_play_count()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->play_count());
    }

    // optional int32 shortest_time = 5;
    if (has_shortest_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->shortest_time());
    }

    // optional int64 dirty = 6;
    if (has_dirty()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->dirty());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgSurvivalRecordData::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgSurvivalRecordData* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgSurvivalRecordData*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgSurvivalRecordData::MergeFrom(const MsgSurvivalRecordData& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_uuid()) {
      set_uuid(from.uuid());
    }
    if (from.has_win_count()) {
      set_win_count(from.win_count());
    }
    if (from.has_lose_count()) {
      set_lose_count(from.lose_count());
    }
    if (from.has_play_count()) {
      set_play_count(from.play_count());
    }
    if (from.has_shortest_time()) {
      set_shortest_time(from.shortest_time());
    }
    if (from.has_dirty()) {
      set_dirty(from.dirty());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgSurvivalRecordData::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgSurvivalRecordData::CopyFrom(const MsgSurvivalRecordData& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgSurvivalRecordData::IsInitialized() const {

  return true;
}

void MsgSurvivalRecordData::Swap(MsgSurvivalRecordData* other) {
  if (other != this) {
    std::swap(uuid_, other->uuid_);
    std::swap(win_count_, other->win_count_);
    std::swap(lose_count_, other->lose_count_);
    std::swap(play_count_, other->play_count_);
    std::swap(shortest_time_, other->shortest_time_);
    std::swap(dirty_, other->dirty_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgSurvivalRecordData::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgSurvivalRecordData_descriptor_;
  metadata.reflection = MsgSurvivalRecordData_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgSurvivalEventFlagData::kFlagFieldNumber;
const int MsgSurvivalEventFlagData::kDirtyFieldNumber;
#endif  // !_MSC_VER

MsgSurvivalEventFlagData::MsgSurvivalEventFlagData()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.MsgSurvivalEventFlagData)
}

void MsgSurvivalEventFlagData::InitAsDefaultInstance() {
}

MsgSurvivalEventFlagData::MsgSurvivalEventFlagData(const MsgSurvivalEventFlagData& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.MsgSurvivalEventFlagData)
}

void MsgSurvivalEventFlagData::SharedCtor() {
  _cached_size_ = 0;
  dirty_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgSurvivalEventFlagData::~MsgSurvivalEventFlagData() {
  // @@protoc_insertion_point(destructor:MsgPB.MsgSurvivalEventFlagData)
  SharedDtor();
}

void MsgSurvivalEventFlagData::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgSurvivalEventFlagData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgSurvivalEventFlagData::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgSurvivalEventFlagData_descriptor_;
}

const MsgSurvivalEventFlagData& MsgSurvivalEventFlagData::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgSurvival_2eproto();
  return *default_instance_;
}

MsgSurvivalEventFlagData* MsgSurvivalEventFlagData::default_instance_ = NULL;

MsgSurvivalEventFlagData* MsgSurvivalEventFlagData::New() const {
  return new MsgSurvivalEventFlagData;
}

void MsgSurvivalEventFlagData::Clear() {
  dirty_ = GOOGLE_LONGLONG(0);
  flag_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgSurvivalEventFlagData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.MsgSurvivalEventFlagData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint32 flag = 1;
      case 1: {
        if (tag == 8) {
         parse_flag:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 8, input, this->mutable_flag())));
        } else if (tag == 10) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_flag())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(8)) goto parse_flag;
        if (input->ExpectTag(16)) goto parse_dirty;
        break;
      }

      // optional int64 dirty = 2;
      case 2: {
        if (tag == 16) {
         parse_dirty:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &dirty_)));
          set_has_dirty();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.MsgSurvivalEventFlagData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.MsgSurvivalEventFlagData)
  return false;
#undef DO_
}

void MsgSurvivalEventFlagData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.MsgSurvivalEventFlagData)
  // repeated uint32 flag = 1;
  for (int i = 0; i < this->flag_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      1, this->flag(i), output);
  }

  // optional int64 dirty = 2;
  if (has_dirty()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->dirty(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.MsgSurvivalEventFlagData)
}

::google::protobuf::uint8* MsgSurvivalEventFlagData::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.MsgSurvivalEventFlagData)
  // repeated uint32 flag = 1;
  for (int i = 0; i < this->flag_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(1, this->flag(i), target);
  }

  // optional int64 dirty = 2;
  if (has_dirty()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->dirty(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.MsgSurvivalEventFlagData)
  return target;
}

int MsgSurvivalEventFlagData::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // optional int64 dirty = 2;
    if (has_dirty()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->dirty());
    }

  }
  // repeated uint32 flag = 1;
  {
    int data_size = 0;
    for (int i = 0; i < this->flag_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->flag(i));
    }
    total_size += 1 * this->flag_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgSurvivalEventFlagData::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgSurvivalEventFlagData* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgSurvivalEventFlagData*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgSurvivalEventFlagData::MergeFrom(const MsgSurvivalEventFlagData& from) {
  GOOGLE_CHECK_NE(&from, this);
  flag_.MergeFrom(from.flag_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_dirty()) {
      set_dirty(from.dirty());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgSurvivalEventFlagData::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgSurvivalEventFlagData::CopyFrom(const MsgSurvivalEventFlagData& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgSurvivalEventFlagData::IsInitialized() const {

  return true;
}

void MsgSurvivalEventFlagData::Swap(MsgSurvivalEventFlagData* other) {
  if (other != this) {
    flag_.Swap(&other->flag_);
    std::swap(dirty_, other->dirty_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgSurvivalEventFlagData::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgSurvivalEventFlagData_descriptor_;
  metadata.reflection = MsgSurvivalEventFlagData_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgSurvivalTargetInfo::kCurrentNumberFieldNumber;
const int MsgSurvivalTargetInfo::kMaxNumberFieldNumber;
#endif  // !_MSC_VER

MsgSurvivalTargetInfo::MsgSurvivalTargetInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.MsgSurvivalTargetInfo)
}

void MsgSurvivalTargetInfo::InitAsDefaultInstance() {
}

MsgSurvivalTargetInfo::MsgSurvivalTargetInfo(const MsgSurvivalTargetInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.MsgSurvivalTargetInfo)
}

void MsgSurvivalTargetInfo::SharedCtor() {
  _cached_size_ = 0;
  currentnumber_ = 0;
  maxnumber_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgSurvivalTargetInfo::~MsgSurvivalTargetInfo() {
  // @@protoc_insertion_point(destructor:MsgPB.MsgSurvivalTargetInfo)
  SharedDtor();
}

void MsgSurvivalTargetInfo::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgSurvivalTargetInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgSurvivalTargetInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgSurvivalTargetInfo_descriptor_;
}

const MsgSurvivalTargetInfo& MsgSurvivalTargetInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgSurvival_2eproto();
  return *default_instance_;
}

MsgSurvivalTargetInfo* MsgSurvivalTargetInfo::default_instance_ = NULL;

MsgSurvivalTargetInfo* MsgSurvivalTargetInfo::New() const {
  return new MsgSurvivalTargetInfo;
}

void MsgSurvivalTargetInfo::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<MsgSurvivalTargetInfo*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(currentnumber_, maxnumber_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgSurvivalTargetInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.MsgSurvivalTargetInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 CurrentNumber = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &currentnumber_)));
          set_has_currentnumber();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_MaxNumber;
        break;
      }

      // optional int32 MaxNumber = 2;
      case 2: {
        if (tag == 16) {
         parse_MaxNumber:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &maxnumber_)));
          set_has_maxnumber();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.MsgSurvivalTargetInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.MsgSurvivalTargetInfo)
  return false;
#undef DO_
}

void MsgSurvivalTargetInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.MsgSurvivalTargetInfo)
  // optional int32 CurrentNumber = 1;
  if (has_currentnumber()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->currentnumber(), output);
  }

  // optional int32 MaxNumber = 2;
  if (has_maxnumber()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->maxnumber(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.MsgSurvivalTargetInfo)
}

::google::protobuf::uint8* MsgSurvivalTargetInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.MsgSurvivalTargetInfo)
  // optional int32 CurrentNumber = 1;
  if (has_currentnumber()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->currentnumber(), target);
  }

  // optional int32 MaxNumber = 2;
  if (has_maxnumber()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->maxnumber(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.MsgSurvivalTargetInfo)
  return target;
}

int MsgSurvivalTargetInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 CurrentNumber = 1;
    if (has_currentnumber()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->currentnumber());
    }

    // optional int32 MaxNumber = 2;
    if (has_maxnumber()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->maxnumber());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgSurvivalTargetInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgSurvivalTargetInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgSurvivalTargetInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgSurvivalTargetInfo::MergeFrom(const MsgSurvivalTargetInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_currentnumber()) {
      set_currentnumber(from.currentnumber());
    }
    if (from.has_maxnumber()) {
      set_maxnumber(from.maxnumber());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgSurvivalTargetInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgSurvivalTargetInfo::CopyFrom(const MsgSurvivalTargetInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgSurvivalTargetInfo::IsInitialized() const {

  return true;
}

void MsgSurvivalTargetInfo::Swap(MsgSurvivalTargetInfo* other) {
  if (other != this) {
    std::swap(currentnumber_, other->currentnumber_);
    std::swap(maxnumber_, other->maxnumber_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgSurvivalTargetInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgSurvivalTargetInfo_descriptor_;
  metadata.reflection = MsgSurvivalTargetInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgSurvivalGameReward::kItemIDFieldNumber;
const int MsgSurvivalGameReward::kItemCountFieldNumber;
#endif  // !_MSC_VER

MsgSurvivalGameReward::MsgSurvivalGameReward()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.MsgSurvivalGameReward)
}

void MsgSurvivalGameReward::InitAsDefaultInstance() {
}

MsgSurvivalGameReward::MsgSurvivalGameReward(const MsgSurvivalGameReward& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.MsgSurvivalGameReward)
}

void MsgSurvivalGameReward::SharedCtor() {
  _cached_size_ = 0;
  itemid_ = 0;
  itemcount_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgSurvivalGameReward::~MsgSurvivalGameReward() {
  // @@protoc_insertion_point(destructor:MsgPB.MsgSurvivalGameReward)
  SharedDtor();
}

void MsgSurvivalGameReward::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgSurvivalGameReward::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgSurvivalGameReward::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgSurvivalGameReward_descriptor_;
}

const MsgSurvivalGameReward& MsgSurvivalGameReward::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgSurvival_2eproto();
  return *default_instance_;
}

MsgSurvivalGameReward* MsgSurvivalGameReward::default_instance_ = NULL;

MsgSurvivalGameReward* MsgSurvivalGameReward::New() const {
  return new MsgSurvivalGameReward;
}

void MsgSurvivalGameReward::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<MsgSurvivalGameReward*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(itemid_, itemcount_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgSurvivalGameReward::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.MsgSurvivalGameReward)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 ItemID = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &itemid_)));
          set_has_itemid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_ItemCount;
        break;
      }

      // optional int32 ItemCount = 2;
      case 2: {
        if (tag == 16) {
         parse_ItemCount:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &itemcount_)));
          set_has_itemcount();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.MsgSurvivalGameReward)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.MsgSurvivalGameReward)
  return false;
#undef DO_
}

void MsgSurvivalGameReward::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.MsgSurvivalGameReward)
  // optional int32 ItemID = 1;
  if (has_itemid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->itemid(), output);
  }

  // optional int32 ItemCount = 2;
  if (has_itemcount()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->itemcount(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.MsgSurvivalGameReward)
}

::google::protobuf::uint8* MsgSurvivalGameReward::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.MsgSurvivalGameReward)
  // optional int32 ItemID = 1;
  if (has_itemid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->itemid(), target);
  }

  // optional int32 ItemCount = 2;
  if (has_itemcount()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->itemcount(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.MsgSurvivalGameReward)
  return target;
}

int MsgSurvivalGameReward::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 ItemID = 1;
    if (has_itemid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->itemid());
    }

    // optional int32 ItemCount = 2;
    if (has_itemcount()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->itemcount());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgSurvivalGameReward::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgSurvivalGameReward* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgSurvivalGameReward*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgSurvivalGameReward::MergeFrom(const MsgSurvivalGameReward& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_itemid()) {
      set_itemid(from.itemid());
    }
    if (from.has_itemcount()) {
      set_itemcount(from.itemcount());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgSurvivalGameReward::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgSurvivalGameReward::CopyFrom(const MsgSurvivalGameReward& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgSurvivalGameReward::IsInitialized() const {

  return true;
}

void MsgSurvivalGameReward::Swap(MsgSurvivalGameReward* other) {
  if (other != this) {
    std::swap(itemid_, other->itemid_);
    std::swap(itemcount_, other->itemcount_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgSurvivalGameReward::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgSurvivalGameReward_descriptor_;
  metadata.reflection = MsgSurvivalGameReward_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgSurvivalNpcReward::kMobIDFieldNumber;
const int MsgSurvivalNpcReward::kItemIDFieldNumber;
const int MsgSurvivalNpcReward::kItemCountFieldNumber;
#endif  // !_MSC_VER

MsgSurvivalNpcReward::MsgSurvivalNpcReward()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.MsgSurvivalNpcReward)
}

void MsgSurvivalNpcReward::InitAsDefaultInstance() {
}

MsgSurvivalNpcReward::MsgSurvivalNpcReward(const MsgSurvivalNpcReward& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.MsgSurvivalNpcReward)
}

void MsgSurvivalNpcReward::SharedCtor() {
  _cached_size_ = 0;
  mobid_ = 0;
  itemid_ = 0;
  itemcount_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgSurvivalNpcReward::~MsgSurvivalNpcReward() {
  // @@protoc_insertion_point(destructor:MsgPB.MsgSurvivalNpcReward)
  SharedDtor();
}

void MsgSurvivalNpcReward::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgSurvivalNpcReward::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgSurvivalNpcReward::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgSurvivalNpcReward_descriptor_;
}

const MsgSurvivalNpcReward& MsgSurvivalNpcReward::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgSurvival_2eproto();
  return *default_instance_;
}

MsgSurvivalNpcReward* MsgSurvivalNpcReward::default_instance_ = NULL;

MsgSurvivalNpcReward* MsgSurvivalNpcReward::New() const {
  return new MsgSurvivalNpcReward;
}

void MsgSurvivalNpcReward::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<MsgSurvivalNpcReward*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(mobid_, itemcount_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgSurvivalNpcReward::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.MsgSurvivalNpcReward)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 MobID = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &mobid_)));
          set_has_mobid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_ItemID;
        break;
      }

      // optional int32 ItemID = 2;
      case 2: {
        if (tag == 16) {
         parse_ItemID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &itemid_)));
          set_has_itemid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_ItemCount;
        break;
      }

      // optional int32 ItemCount = 3;
      case 3: {
        if (tag == 24) {
         parse_ItemCount:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &itemcount_)));
          set_has_itemcount();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.MsgSurvivalNpcReward)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.MsgSurvivalNpcReward)
  return false;
#undef DO_
}

void MsgSurvivalNpcReward::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.MsgSurvivalNpcReward)
  // optional int32 MobID = 1;
  if (has_mobid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->mobid(), output);
  }

  // optional int32 ItemID = 2;
  if (has_itemid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->itemid(), output);
  }

  // optional int32 ItemCount = 3;
  if (has_itemcount()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->itemcount(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.MsgSurvivalNpcReward)
}

::google::protobuf::uint8* MsgSurvivalNpcReward::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.MsgSurvivalNpcReward)
  // optional int32 MobID = 1;
  if (has_mobid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->mobid(), target);
  }

  // optional int32 ItemID = 2;
  if (has_itemid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->itemid(), target);
  }

  // optional int32 ItemCount = 3;
  if (has_itemcount()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->itemcount(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.MsgSurvivalNpcReward)
  return target;
}

int MsgSurvivalNpcReward::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 MobID = 1;
    if (has_mobid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->mobid());
    }

    // optional int32 ItemID = 2;
    if (has_itemid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->itemid());
    }

    // optional int32 ItemCount = 3;
    if (has_itemcount()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->itemcount());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgSurvivalNpcReward::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgSurvivalNpcReward* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgSurvivalNpcReward*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgSurvivalNpcReward::MergeFrom(const MsgSurvivalNpcReward& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_mobid()) {
      set_mobid(from.mobid());
    }
    if (from.has_itemid()) {
      set_itemid(from.itemid());
    }
    if (from.has_itemcount()) {
      set_itemcount(from.itemcount());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgSurvivalNpcReward::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgSurvivalNpcReward::CopyFrom(const MsgSurvivalNpcReward& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgSurvivalNpcReward::IsInitialized() const {

  return true;
}

void MsgSurvivalNpcReward::Swap(MsgSurvivalNpcReward* other) {
  if (other != this) {
    std::swap(mobid_, other->mobid_);
    std::swap(itemid_, other->itemid_);
    std::swap(itemcount_, other->itemcount_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgSurvivalNpcReward::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgSurvivalNpcReward_descriptor_;
  metadata.reflection = MsgSurvivalNpcReward_reflection_;
  return metadata;
}


// ===================================================================

const ::google::protobuf::EnumDescriptor* MsgSurvivalNotifyEventS2C_TYPE_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgSurvivalNotifyEventS2C_TYPE_descriptor_;
}
bool MsgSurvivalNotifyEventS2C_TYPE_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const MsgSurvivalNotifyEventS2C_TYPE MsgSurvivalNotifyEventS2C::TRIGGER;
const MsgSurvivalNotifyEventS2C_TYPE MsgSurvivalNotifyEventS2C::LOGIN;
const MsgSurvivalNotifyEventS2C_TYPE MsgSurvivalNotifyEventS2C::TRIGGER_DIFF;
const MsgSurvivalNotifyEventS2C_TYPE MsgSurvivalNotifyEventS2C::TYPE_MIN;
const MsgSurvivalNotifyEventS2C_TYPE MsgSurvivalNotifyEventS2C::TYPE_MAX;
const int MsgSurvivalNotifyEventS2C::TYPE_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int MsgSurvivalNotifyEventS2C::kMsgTypeFieldNumber;
const int MsgSurvivalNotifyEventS2C::kIggidFieldNumber;
const int MsgSurvivalNotifyEventS2C::kNotifyTypeFieldNumber;
const int MsgSurvivalNotifyEventS2C::kSurvivalEventIDFieldNumber;
const int MsgSurvivalNotifyEventS2C::kWaveFieldNumber;
const int MsgSurvivalNotifyEventS2C::kCountdownFieldNumber;
const int MsgSurvivalNotifyEventS2C::kTargetInfoFieldNumber;
#endif  // !_MSC_VER

MsgSurvivalNotifyEventS2C::MsgSurvivalNotifyEventS2C()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.MsgSurvivalNotifyEventS2C)
}

void MsgSurvivalNotifyEventS2C::InitAsDefaultInstance() {
  targetinfo_ = const_cast< ::MsgPB::MsgSurvivalTargetInfo*>(&::MsgPB::MsgSurvivalTargetInfo::default_instance());
}

MsgSurvivalNotifyEventS2C::MsgSurvivalNotifyEventS2C(const MsgSurvivalNotifyEventS2C& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.MsgSurvivalNotifyEventS2C)
}

void MsgSurvivalNotifyEventS2C::SharedCtor() {
  _cached_size_ = 0;
  msgtype_ = 2300;
  iggid_ = GOOGLE_LONGLONG(0);
  notifytype_ = 0;
  survivaleventid_ = 0;
  wave_ = 0;
  countdown_ = 0;
  targetinfo_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgSurvivalNotifyEventS2C::~MsgSurvivalNotifyEventS2C() {
  // @@protoc_insertion_point(destructor:MsgPB.MsgSurvivalNotifyEventS2C)
  SharedDtor();
}

void MsgSurvivalNotifyEventS2C::SharedDtor() {
  if (this != default_instance_) {
    delete targetinfo_;
  }
}

void MsgSurvivalNotifyEventS2C::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgSurvivalNotifyEventS2C::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgSurvivalNotifyEventS2C_descriptor_;
}

const MsgSurvivalNotifyEventS2C& MsgSurvivalNotifyEventS2C::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgSurvival_2eproto();
  return *default_instance_;
}

MsgSurvivalNotifyEventS2C* MsgSurvivalNotifyEventS2C::default_instance_ = NULL;

MsgSurvivalNotifyEventS2C* MsgSurvivalNotifyEventS2C::New() const {
  return new MsgSurvivalNotifyEventS2C;
}

void MsgSurvivalNotifyEventS2C::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<MsgSurvivalNotifyEventS2C*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 127) {
    ZR_(notifytype_, wave_);
    msgtype_ = 2300;
    iggid_ = GOOGLE_LONGLONG(0);
    countdown_ = 0;
    if (has_targetinfo()) {
      if (targetinfo_ != NULL) targetinfo_->::MsgPB::MsgSurvivalTargetInfo::Clear();
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgSurvivalNotifyEventS2C::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.MsgSurvivalNotifyEventS2C)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_SURVIVAL_NOTIFY_EVENT_MS2C];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::EMsgType_IsValid(value)) {
            set_msgtype(static_cast< ::MsgPB::EMsgType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_iggid;
        break;
      }

      // optional int64 iggid = 2;
      case 2: {
        if (tag == 16) {
         parse_iggid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &iggid_)));
          set_has_iggid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_NotifyType;
        break;
      }

      // optional .MsgPB.MsgSurvivalNotifyEventS2C.TYPE NotifyType = 3;
      case 3: {
        if (tag == 24) {
         parse_NotifyType:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::MsgSurvivalNotifyEventS2C_TYPE_IsValid(value)) {
            set_notifytype(static_cast< ::MsgPB::MsgSurvivalNotifyEventS2C_TYPE >(value));
          } else {
            mutable_unknown_fields()->AddVarint(3, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_SurvivalEventID;
        break;
      }

      // optional int32 SurvivalEventID = 4;
      case 4: {
        if (tag == 32) {
         parse_SurvivalEventID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &survivaleventid_)));
          set_has_survivaleventid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_Wave;
        break;
      }

      // optional int32 Wave = 5;
      case 5: {
        if (tag == 40) {
         parse_Wave:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &wave_)));
          set_has_wave();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_Countdown;
        break;
      }

      // optional int32 Countdown = 6;
      case 6: {
        if (tag == 48) {
         parse_Countdown:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &countdown_)));
          set_has_countdown();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_TargetInfo;
        break;
      }

      // optional .MsgPB.MsgSurvivalTargetInfo TargetInfo = 7;
      case 7: {
        if (tag == 58) {
         parse_TargetInfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_targetinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.MsgSurvivalNotifyEventS2C)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.MsgSurvivalNotifyEventS2C)
  return false;
#undef DO_
}

void MsgSurvivalNotifyEventS2C::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.MsgSurvivalNotifyEventS2C)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_SURVIVAL_NOTIFY_EVENT_MS2C];
  if (has_msgtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->msgtype(), output);
  }

  // optional int64 iggid = 2;
  if (has_iggid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->iggid(), output);
  }

  // optional .MsgPB.MsgSurvivalNotifyEventS2C.TYPE NotifyType = 3;
  if (has_notifytype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->notifytype(), output);
  }

  // optional int32 SurvivalEventID = 4;
  if (has_survivaleventid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->survivaleventid(), output);
  }

  // optional int32 Wave = 5;
  if (has_wave()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->wave(), output);
  }

  // optional int32 Countdown = 6;
  if (has_countdown()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->countdown(), output);
  }

  // optional .MsgPB.MsgSurvivalTargetInfo TargetInfo = 7;
  if (has_targetinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->targetinfo(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.MsgSurvivalNotifyEventS2C)
}

::google::protobuf::uint8* MsgSurvivalNotifyEventS2C::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.MsgSurvivalNotifyEventS2C)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_SURVIVAL_NOTIFY_EVENT_MS2C];
  if (has_msgtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->msgtype(), target);
  }

  // optional int64 iggid = 2;
  if (has_iggid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->iggid(), target);
  }

  // optional .MsgPB.MsgSurvivalNotifyEventS2C.TYPE NotifyType = 3;
  if (has_notifytype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->notifytype(), target);
  }

  // optional int32 SurvivalEventID = 4;
  if (has_survivaleventid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->survivaleventid(), target);
  }

  // optional int32 Wave = 5;
  if (has_wave()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->wave(), target);
  }

  // optional int32 Countdown = 6;
  if (has_countdown()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->countdown(), target);
  }

  // optional .MsgPB.MsgSurvivalTargetInfo TargetInfo = 7;
  if (has_targetinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        7, this->targetinfo(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.MsgSurvivalNotifyEventS2C)
  return target;
}

int MsgSurvivalNotifyEventS2C::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_SURVIVAL_NOTIFY_EVENT_MS2C];
    if (has_msgtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgtype());
    }

    // optional int64 iggid = 2;
    if (has_iggid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->iggid());
    }

    // optional .MsgPB.MsgSurvivalNotifyEventS2C.TYPE NotifyType = 3;
    if (has_notifytype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->notifytype());
    }

    // optional int32 SurvivalEventID = 4;
    if (has_survivaleventid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->survivaleventid());
    }

    // optional int32 Wave = 5;
    if (has_wave()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->wave());
    }

    // optional int32 Countdown = 6;
    if (has_countdown()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->countdown());
    }

    // optional .MsgPB.MsgSurvivalTargetInfo TargetInfo = 7;
    if (has_targetinfo()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->targetinfo());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgSurvivalNotifyEventS2C::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgSurvivalNotifyEventS2C* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgSurvivalNotifyEventS2C*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgSurvivalNotifyEventS2C::MergeFrom(const MsgSurvivalNotifyEventS2C& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msgtype()) {
      set_msgtype(from.msgtype());
    }
    if (from.has_iggid()) {
      set_iggid(from.iggid());
    }
    if (from.has_notifytype()) {
      set_notifytype(from.notifytype());
    }
    if (from.has_survivaleventid()) {
      set_survivaleventid(from.survivaleventid());
    }
    if (from.has_wave()) {
      set_wave(from.wave());
    }
    if (from.has_countdown()) {
      set_countdown(from.countdown());
    }
    if (from.has_targetinfo()) {
      mutable_targetinfo()->::MsgPB::MsgSurvivalTargetInfo::MergeFrom(from.targetinfo());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgSurvivalNotifyEventS2C::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgSurvivalNotifyEventS2C::CopyFrom(const MsgSurvivalNotifyEventS2C& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgSurvivalNotifyEventS2C::IsInitialized() const {

  return true;
}

void MsgSurvivalNotifyEventS2C::Swap(MsgSurvivalNotifyEventS2C* other) {
  if (other != this) {
    std::swap(msgtype_, other->msgtype_);
    std::swap(iggid_, other->iggid_);
    std::swap(notifytype_, other->notifytype_);
    std::swap(survivaleventid_, other->survivaleventid_);
    std::swap(wave_, other->wave_);
    std::swap(countdown_, other->countdown_);
    std::swap(targetinfo_, other->targetinfo_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgSurvivalNotifyEventS2C::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgSurvivalNotifyEventS2C_descriptor_;
  metadata.reflection = MsgSurvivalNotifyEventS2C_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgSurvivalNotifyWaveS2C::kMsgTypeFieldNumber;
const int MsgSurvivalNotifyWaveS2C::kIggidFieldNumber;
const int MsgSurvivalNotifyWaveS2C::kSurvivalEventIDFieldNumber;
const int MsgSurvivalNotifyWaveS2C::kWaveFieldNumber;
#endif  // !_MSC_VER

MsgSurvivalNotifyWaveS2C::MsgSurvivalNotifyWaveS2C()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.MsgSurvivalNotifyWaveS2C)
}

void MsgSurvivalNotifyWaveS2C::InitAsDefaultInstance() {
}

MsgSurvivalNotifyWaveS2C::MsgSurvivalNotifyWaveS2C(const MsgSurvivalNotifyWaveS2C& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.MsgSurvivalNotifyWaveS2C)
}

void MsgSurvivalNotifyWaveS2C::SharedCtor() {
  _cached_size_ = 0;
  msgtype_ = 2301;
  iggid_ = GOOGLE_LONGLONG(0);
  survivaleventid_ = 0;
  wave_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgSurvivalNotifyWaveS2C::~MsgSurvivalNotifyWaveS2C() {
  // @@protoc_insertion_point(destructor:MsgPB.MsgSurvivalNotifyWaveS2C)
  SharedDtor();
}

void MsgSurvivalNotifyWaveS2C::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgSurvivalNotifyWaveS2C::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgSurvivalNotifyWaveS2C::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgSurvivalNotifyWaveS2C_descriptor_;
}

const MsgSurvivalNotifyWaveS2C& MsgSurvivalNotifyWaveS2C::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgSurvival_2eproto();
  return *default_instance_;
}

MsgSurvivalNotifyWaveS2C* MsgSurvivalNotifyWaveS2C::default_instance_ = NULL;

MsgSurvivalNotifyWaveS2C* MsgSurvivalNotifyWaveS2C::New() const {
  return new MsgSurvivalNotifyWaveS2C;
}

void MsgSurvivalNotifyWaveS2C::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<MsgSurvivalNotifyWaveS2C*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 15) {
    ZR_(survivaleventid_, wave_);
    msgtype_ = 2301;
    iggid_ = GOOGLE_LONGLONG(0);
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgSurvivalNotifyWaveS2C::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.MsgSurvivalNotifyWaveS2C)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_SURVIVAL_NOTIFY_WAVE_MS2C];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::EMsgType_IsValid(value)) {
            set_msgtype(static_cast< ::MsgPB::EMsgType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_iggid;
        break;
      }

      // optional int64 iggid = 2;
      case 2: {
        if (tag == 16) {
         parse_iggid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &iggid_)));
          set_has_iggid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_SurvivalEventID;
        break;
      }

      // optional int32 SurvivalEventID = 3;
      case 3: {
        if (tag == 24) {
         parse_SurvivalEventID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &survivaleventid_)));
          set_has_survivaleventid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_Wave;
        break;
      }

      // optional int32 Wave = 4;
      case 4: {
        if (tag == 32) {
         parse_Wave:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &wave_)));
          set_has_wave();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.MsgSurvivalNotifyWaveS2C)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.MsgSurvivalNotifyWaveS2C)
  return false;
#undef DO_
}

void MsgSurvivalNotifyWaveS2C::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.MsgSurvivalNotifyWaveS2C)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_SURVIVAL_NOTIFY_WAVE_MS2C];
  if (has_msgtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->msgtype(), output);
  }

  // optional int64 iggid = 2;
  if (has_iggid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->iggid(), output);
  }

  // optional int32 SurvivalEventID = 3;
  if (has_survivaleventid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->survivaleventid(), output);
  }

  // optional int32 Wave = 4;
  if (has_wave()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->wave(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.MsgSurvivalNotifyWaveS2C)
}

::google::protobuf::uint8* MsgSurvivalNotifyWaveS2C::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.MsgSurvivalNotifyWaveS2C)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_SURVIVAL_NOTIFY_WAVE_MS2C];
  if (has_msgtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->msgtype(), target);
  }

  // optional int64 iggid = 2;
  if (has_iggid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->iggid(), target);
  }

  // optional int32 SurvivalEventID = 3;
  if (has_survivaleventid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->survivaleventid(), target);
  }

  // optional int32 Wave = 4;
  if (has_wave()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->wave(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.MsgSurvivalNotifyWaveS2C)
  return target;
}

int MsgSurvivalNotifyWaveS2C::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_SURVIVAL_NOTIFY_WAVE_MS2C];
    if (has_msgtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgtype());
    }

    // optional int64 iggid = 2;
    if (has_iggid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->iggid());
    }

    // optional int32 SurvivalEventID = 3;
    if (has_survivaleventid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->survivaleventid());
    }

    // optional int32 Wave = 4;
    if (has_wave()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->wave());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgSurvivalNotifyWaveS2C::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgSurvivalNotifyWaveS2C* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgSurvivalNotifyWaveS2C*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgSurvivalNotifyWaveS2C::MergeFrom(const MsgSurvivalNotifyWaveS2C& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msgtype()) {
      set_msgtype(from.msgtype());
    }
    if (from.has_iggid()) {
      set_iggid(from.iggid());
    }
    if (from.has_survivaleventid()) {
      set_survivaleventid(from.survivaleventid());
    }
    if (from.has_wave()) {
      set_wave(from.wave());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgSurvivalNotifyWaveS2C::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgSurvivalNotifyWaveS2C::CopyFrom(const MsgSurvivalNotifyWaveS2C& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgSurvivalNotifyWaveS2C::IsInitialized() const {

  return true;
}

void MsgSurvivalNotifyWaveS2C::Swap(MsgSurvivalNotifyWaveS2C* other) {
  if (other != this) {
    std::swap(msgtype_, other->msgtype_);
    std::swap(iggid_, other->iggid_);
    std::swap(survivaleventid_, other->survivaleventid_);
    std::swap(wave_, other->wave_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgSurvivalNotifyWaveS2C::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgSurvivalNotifyWaveS2C_descriptor_;
  metadata.reflection = MsgSurvivalNotifyWaveS2C_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgSurvivalNotifyTargetInfoS2C::kMsgTypeFieldNumber;
const int MsgSurvivalNotifyTargetInfoS2C::kIggidFieldNumber;
const int MsgSurvivalNotifyTargetInfoS2C::kTargetInfoFieldNumber;
#endif  // !_MSC_VER

MsgSurvivalNotifyTargetInfoS2C::MsgSurvivalNotifyTargetInfoS2C()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.MsgSurvivalNotifyTargetInfoS2C)
}

void MsgSurvivalNotifyTargetInfoS2C::InitAsDefaultInstance() {
  targetinfo_ = const_cast< ::MsgPB::MsgSurvivalTargetInfo*>(&::MsgPB::MsgSurvivalTargetInfo::default_instance());
}

MsgSurvivalNotifyTargetInfoS2C::MsgSurvivalNotifyTargetInfoS2C(const MsgSurvivalNotifyTargetInfoS2C& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.MsgSurvivalNotifyTargetInfoS2C)
}

void MsgSurvivalNotifyTargetInfoS2C::SharedCtor() {
  _cached_size_ = 0;
  msgtype_ = 2302;
  iggid_ = GOOGLE_LONGLONG(0);
  targetinfo_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgSurvivalNotifyTargetInfoS2C::~MsgSurvivalNotifyTargetInfoS2C() {
  // @@protoc_insertion_point(destructor:MsgPB.MsgSurvivalNotifyTargetInfoS2C)
  SharedDtor();
}

void MsgSurvivalNotifyTargetInfoS2C::SharedDtor() {
  if (this != default_instance_) {
    delete targetinfo_;
  }
}

void MsgSurvivalNotifyTargetInfoS2C::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgSurvivalNotifyTargetInfoS2C::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgSurvivalNotifyTargetInfoS2C_descriptor_;
}

const MsgSurvivalNotifyTargetInfoS2C& MsgSurvivalNotifyTargetInfoS2C::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgSurvival_2eproto();
  return *default_instance_;
}

MsgSurvivalNotifyTargetInfoS2C* MsgSurvivalNotifyTargetInfoS2C::default_instance_ = NULL;

MsgSurvivalNotifyTargetInfoS2C* MsgSurvivalNotifyTargetInfoS2C::New() const {
  return new MsgSurvivalNotifyTargetInfoS2C;
}

void MsgSurvivalNotifyTargetInfoS2C::Clear() {
  if (_has_bits_[0 / 32] & 7) {
    msgtype_ = 2302;
    iggid_ = GOOGLE_LONGLONG(0);
    if (has_targetinfo()) {
      if (targetinfo_ != NULL) targetinfo_->::MsgPB::MsgSurvivalTargetInfo::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgSurvivalNotifyTargetInfoS2C::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.MsgSurvivalNotifyTargetInfoS2C)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_SURVIVAL_NOTIFY_TARGET_INFO_MS2C];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::EMsgType_IsValid(value)) {
            set_msgtype(static_cast< ::MsgPB::EMsgType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_iggid;
        break;
      }

      // optional int64 iggid = 2;
      case 2: {
        if (tag == 16) {
         parse_iggid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &iggid_)));
          set_has_iggid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_TargetInfo;
        break;
      }

      // optional .MsgPB.MsgSurvivalTargetInfo TargetInfo = 3;
      case 3: {
        if (tag == 26) {
         parse_TargetInfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_targetinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.MsgSurvivalNotifyTargetInfoS2C)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.MsgSurvivalNotifyTargetInfoS2C)
  return false;
#undef DO_
}

void MsgSurvivalNotifyTargetInfoS2C::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.MsgSurvivalNotifyTargetInfoS2C)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_SURVIVAL_NOTIFY_TARGET_INFO_MS2C];
  if (has_msgtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->msgtype(), output);
  }

  // optional int64 iggid = 2;
  if (has_iggid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->iggid(), output);
  }

  // optional .MsgPB.MsgSurvivalTargetInfo TargetInfo = 3;
  if (has_targetinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->targetinfo(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.MsgSurvivalNotifyTargetInfoS2C)
}

::google::protobuf::uint8* MsgSurvivalNotifyTargetInfoS2C::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.MsgSurvivalNotifyTargetInfoS2C)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_SURVIVAL_NOTIFY_TARGET_INFO_MS2C];
  if (has_msgtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->msgtype(), target);
  }

  // optional int64 iggid = 2;
  if (has_iggid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->iggid(), target);
  }

  // optional .MsgPB.MsgSurvivalTargetInfo TargetInfo = 3;
  if (has_targetinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->targetinfo(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.MsgSurvivalNotifyTargetInfoS2C)
  return target;
}

int MsgSurvivalNotifyTargetInfoS2C::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_SURVIVAL_NOTIFY_TARGET_INFO_MS2C];
    if (has_msgtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgtype());
    }

    // optional int64 iggid = 2;
    if (has_iggid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->iggid());
    }

    // optional .MsgPB.MsgSurvivalTargetInfo TargetInfo = 3;
    if (has_targetinfo()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->targetinfo());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgSurvivalNotifyTargetInfoS2C::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgSurvivalNotifyTargetInfoS2C* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgSurvivalNotifyTargetInfoS2C*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgSurvivalNotifyTargetInfoS2C::MergeFrom(const MsgSurvivalNotifyTargetInfoS2C& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msgtype()) {
      set_msgtype(from.msgtype());
    }
    if (from.has_iggid()) {
      set_iggid(from.iggid());
    }
    if (from.has_targetinfo()) {
      mutable_targetinfo()->::MsgPB::MsgSurvivalTargetInfo::MergeFrom(from.targetinfo());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgSurvivalNotifyTargetInfoS2C::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgSurvivalNotifyTargetInfoS2C::CopyFrom(const MsgSurvivalNotifyTargetInfoS2C& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgSurvivalNotifyTargetInfoS2C::IsInitialized() const {

  return true;
}

void MsgSurvivalNotifyTargetInfoS2C::Swap(MsgSurvivalNotifyTargetInfoS2C* other) {
  if (other != this) {
    std::swap(msgtype_, other->msgtype_);
    std::swap(iggid_, other->iggid_);
    std::swap(targetinfo_, other->targetinfo_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgSurvivalNotifyTargetInfoS2C::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgSurvivalNotifyTargetInfoS2C_descriptor_;
  metadata.reflection = MsgSurvivalNotifyTargetInfoS2C_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgSurvivalNotifyNpcRewardS2C::kMsgTypeFieldNumber;
const int MsgSurvivalNotifyNpcRewardS2C::kIggidFieldNumber;
const int MsgSurvivalNotifyNpcRewardS2C::kRewardFieldNumber;
#endif  // !_MSC_VER

MsgSurvivalNotifyNpcRewardS2C::MsgSurvivalNotifyNpcRewardS2C()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.MsgSurvivalNotifyNpcRewardS2C)
}

void MsgSurvivalNotifyNpcRewardS2C::InitAsDefaultInstance() {
}

MsgSurvivalNotifyNpcRewardS2C::MsgSurvivalNotifyNpcRewardS2C(const MsgSurvivalNotifyNpcRewardS2C& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.MsgSurvivalNotifyNpcRewardS2C)
}

void MsgSurvivalNotifyNpcRewardS2C::SharedCtor() {
  _cached_size_ = 0;
  msgtype_ = 2303;
  iggid_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgSurvivalNotifyNpcRewardS2C::~MsgSurvivalNotifyNpcRewardS2C() {
  // @@protoc_insertion_point(destructor:MsgPB.MsgSurvivalNotifyNpcRewardS2C)
  SharedDtor();
}

void MsgSurvivalNotifyNpcRewardS2C::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgSurvivalNotifyNpcRewardS2C::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgSurvivalNotifyNpcRewardS2C::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgSurvivalNotifyNpcRewardS2C_descriptor_;
}

const MsgSurvivalNotifyNpcRewardS2C& MsgSurvivalNotifyNpcRewardS2C::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgSurvival_2eproto();
  return *default_instance_;
}

MsgSurvivalNotifyNpcRewardS2C* MsgSurvivalNotifyNpcRewardS2C::default_instance_ = NULL;

MsgSurvivalNotifyNpcRewardS2C* MsgSurvivalNotifyNpcRewardS2C::New() const {
  return new MsgSurvivalNotifyNpcRewardS2C;
}

void MsgSurvivalNotifyNpcRewardS2C::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    msgtype_ = 2303;
    iggid_ = GOOGLE_LONGLONG(0);
  }
  reward_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgSurvivalNotifyNpcRewardS2C::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.MsgSurvivalNotifyNpcRewardS2C)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_SURVIVAL_NOTIFY_NPC_REWARD_MS2C];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::EMsgType_IsValid(value)) {
            set_msgtype(static_cast< ::MsgPB::EMsgType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_iggid;
        break;
      }

      // optional int64 iggid = 2;
      case 2: {
        if (tag == 16) {
         parse_iggid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &iggid_)));
          set_has_iggid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_Reward;
        break;
      }

      // repeated .MsgPB.MsgSurvivalNpcReward Reward = 3;
      case 3: {
        if (tag == 26) {
         parse_Reward:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_reward()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_Reward;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.MsgSurvivalNotifyNpcRewardS2C)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.MsgSurvivalNotifyNpcRewardS2C)
  return false;
#undef DO_
}

void MsgSurvivalNotifyNpcRewardS2C::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.MsgSurvivalNotifyNpcRewardS2C)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_SURVIVAL_NOTIFY_NPC_REWARD_MS2C];
  if (has_msgtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->msgtype(), output);
  }

  // optional int64 iggid = 2;
  if (has_iggid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->iggid(), output);
  }

  // repeated .MsgPB.MsgSurvivalNpcReward Reward = 3;
  for (int i = 0; i < this->reward_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->reward(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.MsgSurvivalNotifyNpcRewardS2C)
}

::google::protobuf::uint8* MsgSurvivalNotifyNpcRewardS2C::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.MsgSurvivalNotifyNpcRewardS2C)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_SURVIVAL_NOTIFY_NPC_REWARD_MS2C];
  if (has_msgtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->msgtype(), target);
  }

  // optional int64 iggid = 2;
  if (has_iggid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->iggid(), target);
  }

  // repeated .MsgPB.MsgSurvivalNpcReward Reward = 3;
  for (int i = 0; i < this->reward_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->reward(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.MsgSurvivalNotifyNpcRewardS2C)
  return target;
}

int MsgSurvivalNotifyNpcRewardS2C::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_SURVIVAL_NOTIFY_NPC_REWARD_MS2C];
    if (has_msgtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgtype());
    }

    // optional int64 iggid = 2;
    if (has_iggid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->iggid());
    }

  }
  // repeated .MsgPB.MsgSurvivalNpcReward Reward = 3;
  total_size += 1 * this->reward_size();
  for (int i = 0; i < this->reward_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->reward(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgSurvivalNotifyNpcRewardS2C::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgSurvivalNotifyNpcRewardS2C* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgSurvivalNotifyNpcRewardS2C*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgSurvivalNotifyNpcRewardS2C::MergeFrom(const MsgSurvivalNotifyNpcRewardS2C& from) {
  GOOGLE_CHECK_NE(&from, this);
  reward_.MergeFrom(from.reward_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msgtype()) {
      set_msgtype(from.msgtype());
    }
    if (from.has_iggid()) {
      set_iggid(from.iggid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgSurvivalNotifyNpcRewardS2C::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgSurvivalNotifyNpcRewardS2C::CopyFrom(const MsgSurvivalNotifyNpcRewardS2C& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgSurvivalNotifyNpcRewardS2C::IsInitialized() const {

  return true;
}

void MsgSurvivalNotifyNpcRewardS2C::Swap(MsgSurvivalNotifyNpcRewardS2C* other) {
  if (other != this) {
    std::swap(msgtype_, other->msgtype_);
    std::swap(iggid_, other->iggid_);
    reward_.Swap(&other->reward_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgSurvivalNotifyNpcRewardS2C::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgSurvivalNotifyNpcRewardS2C_descriptor_;
  metadata.reflection = MsgSurvivalNotifyNpcRewardS2C_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgSurvivalNotifyGameRewardS2C::kMsgTypeFieldNumber;
const int MsgSurvivalNotifyGameRewardS2C::kIggidFieldNumber;
const int MsgSurvivalNotifyGameRewardS2C::kGameResultFieldNumber;
const int MsgSurvivalNotifyGameRewardS2C::kSurvivalEventIDFieldNumber;
const int MsgSurvivalNotifyGameRewardS2C::kRewardFieldNumber;
#endif  // !_MSC_VER

MsgSurvivalNotifyGameRewardS2C::MsgSurvivalNotifyGameRewardS2C()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.MsgSurvivalNotifyGameRewardS2C)
}

void MsgSurvivalNotifyGameRewardS2C::InitAsDefaultInstance() {
}

MsgSurvivalNotifyGameRewardS2C::MsgSurvivalNotifyGameRewardS2C(const MsgSurvivalNotifyGameRewardS2C& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.MsgSurvivalNotifyGameRewardS2C)
}

void MsgSurvivalNotifyGameRewardS2C::SharedCtor() {
  _cached_size_ = 0;
  msgtype_ = 2304;
  iggid_ = GOOGLE_LONGLONG(0);
  gameresult_ = 0;
  survivaleventid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgSurvivalNotifyGameRewardS2C::~MsgSurvivalNotifyGameRewardS2C() {
  // @@protoc_insertion_point(destructor:MsgPB.MsgSurvivalNotifyGameRewardS2C)
  SharedDtor();
}

void MsgSurvivalNotifyGameRewardS2C::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgSurvivalNotifyGameRewardS2C::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgSurvivalNotifyGameRewardS2C::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgSurvivalNotifyGameRewardS2C_descriptor_;
}

const MsgSurvivalNotifyGameRewardS2C& MsgSurvivalNotifyGameRewardS2C::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgSurvival_2eproto();
  return *default_instance_;
}

MsgSurvivalNotifyGameRewardS2C* MsgSurvivalNotifyGameRewardS2C::default_instance_ = NULL;

MsgSurvivalNotifyGameRewardS2C* MsgSurvivalNotifyGameRewardS2C::New() const {
  return new MsgSurvivalNotifyGameRewardS2C;
}

void MsgSurvivalNotifyGameRewardS2C::Clear() {
  if (_has_bits_[0 / 32] & 15) {
    msgtype_ = 2304;
    iggid_ = GOOGLE_LONGLONG(0);
    gameresult_ = 0;
    survivaleventid_ = 0;
  }
  reward_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgSurvivalNotifyGameRewardS2C::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.MsgSurvivalNotifyGameRewardS2C)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_SURVIVAL_NOTIFY_GAME_REWARD_MS2C];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::EMsgType_IsValid(value)) {
            set_msgtype(static_cast< ::MsgPB::EMsgType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_iggid;
        break;
      }

      // optional int64 iggid = 2;
      case 2: {
        if (tag == 16) {
         parse_iggid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &iggid_)));
          set_has_iggid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_GameResult;
        break;
      }

      // optional .MsgPB.SURVIVAL_GAME_RESULT GameResult = 3;
      case 3: {
        if (tag == 24) {
         parse_GameResult:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::SURVIVAL_GAME_RESULT_IsValid(value)) {
            set_gameresult(static_cast< ::MsgPB::SURVIVAL_GAME_RESULT >(value));
          } else {
            mutable_unknown_fields()->AddVarint(3, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_SurvivalEventID;
        break;
      }

      // optional int32 SurvivalEventID = 4;
      case 4: {
        if (tag == 32) {
         parse_SurvivalEventID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &survivaleventid_)));
          set_has_survivaleventid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_Reward;
        break;
      }

      // repeated .MsgPB.MsgSurvivalGameReward Reward = 5;
      case 5: {
        if (tag == 42) {
         parse_Reward:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_reward()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_Reward;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.MsgSurvivalNotifyGameRewardS2C)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.MsgSurvivalNotifyGameRewardS2C)
  return false;
#undef DO_
}

void MsgSurvivalNotifyGameRewardS2C::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.MsgSurvivalNotifyGameRewardS2C)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_SURVIVAL_NOTIFY_GAME_REWARD_MS2C];
  if (has_msgtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->msgtype(), output);
  }

  // optional int64 iggid = 2;
  if (has_iggid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->iggid(), output);
  }

  // optional .MsgPB.SURVIVAL_GAME_RESULT GameResult = 3;
  if (has_gameresult()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->gameresult(), output);
  }

  // optional int32 SurvivalEventID = 4;
  if (has_survivaleventid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->survivaleventid(), output);
  }

  // repeated .MsgPB.MsgSurvivalGameReward Reward = 5;
  for (int i = 0; i < this->reward_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->reward(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.MsgSurvivalNotifyGameRewardS2C)
}

::google::protobuf::uint8* MsgSurvivalNotifyGameRewardS2C::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.MsgSurvivalNotifyGameRewardS2C)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_SURVIVAL_NOTIFY_GAME_REWARD_MS2C];
  if (has_msgtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->msgtype(), target);
  }

  // optional int64 iggid = 2;
  if (has_iggid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->iggid(), target);
  }

  // optional .MsgPB.SURVIVAL_GAME_RESULT GameResult = 3;
  if (has_gameresult()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->gameresult(), target);
  }

  // optional int32 SurvivalEventID = 4;
  if (has_survivaleventid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->survivaleventid(), target);
  }

  // repeated .MsgPB.MsgSurvivalGameReward Reward = 5;
  for (int i = 0; i < this->reward_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->reward(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.MsgSurvivalNotifyGameRewardS2C)
  return target;
}

int MsgSurvivalNotifyGameRewardS2C::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_SURVIVAL_NOTIFY_GAME_REWARD_MS2C];
    if (has_msgtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgtype());
    }

    // optional int64 iggid = 2;
    if (has_iggid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->iggid());
    }

    // optional .MsgPB.SURVIVAL_GAME_RESULT GameResult = 3;
    if (has_gameresult()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->gameresult());
    }

    // optional int32 SurvivalEventID = 4;
    if (has_survivaleventid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->survivaleventid());
    }

  }
  // repeated .MsgPB.MsgSurvivalGameReward Reward = 5;
  total_size += 1 * this->reward_size();
  for (int i = 0; i < this->reward_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->reward(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgSurvivalNotifyGameRewardS2C::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgSurvivalNotifyGameRewardS2C* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgSurvivalNotifyGameRewardS2C*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgSurvivalNotifyGameRewardS2C::MergeFrom(const MsgSurvivalNotifyGameRewardS2C& from) {
  GOOGLE_CHECK_NE(&from, this);
  reward_.MergeFrom(from.reward_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msgtype()) {
      set_msgtype(from.msgtype());
    }
    if (from.has_iggid()) {
      set_iggid(from.iggid());
    }
    if (from.has_gameresult()) {
      set_gameresult(from.gameresult());
    }
    if (from.has_survivaleventid()) {
      set_survivaleventid(from.survivaleventid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgSurvivalNotifyGameRewardS2C::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgSurvivalNotifyGameRewardS2C::CopyFrom(const MsgSurvivalNotifyGameRewardS2C& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgSurvivalNotifyGameRewardS2C::IsInitialized() const {

  return true;
}

void MsgSurvivalNotifyGameRewardS2C::Swap(MsgSurvivalNotifyGameRewardS2C* other) {
  if (other != this) {
    std::swap(msgtype_, other->msgtype_);
    std::swap(iggid_, other->iggid_);
    std::swap(gameresult_, other->gameresult_);
    std::swap(survivaleventid_, other->survivaleventid_);
    reward_.Swap(&other->reward_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgSurvivalNotifyGameRewardS2C::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgSurvivalNotifyGameRewardS2C_descriptor_;
  metadata.reflection = MsgSurvivalNotifyGameRewardS2C_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgSurvivalNotifyClearMobS2C::kMsgTypeFieldNumber;
const int MsgSurvivalNotifyClearMobS2C::kIggidFieldNumber;
const int MsgSurvivalNotifyClearMobS2C::kMapObjectIDFieldNumber;
#endif  // !_MSC_VER

MsgSurvivalNotifyClearMobS2C::MsgSurvivalNotifyClearMobS2C()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.MsgSurvivalNotifyClearMobS2C)
}

void MsgSurvivalNotifyClearMobS2C::InitAsDefaultInstance() {
}

MsgSurvivalNotifyClearMobS2C::MsgSurvivalNotifyClearMobS2C(const MsgSurvivalNotifyClearMobS2C& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.MsgSurvivalNotifyClearMobS2C)
}

void MsgSurvivalNotifyClearMobS2C::SharedCtor() {
  _cached_size_ = 0;
  msgtype_ = 2305;
  iggid_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgSurvivalNotifyClearMobS2C::~MsgSurvivalNotifyClearMobS2C() {
  // @@protoc_insertion_point(destructor:MsgPB.MsgSurvivalNotifyClearMobS2C)
  SharedDtor();
}

void MsgSurvivalNotifyClearMobS2C::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgSurvivalNotifyClearMobS2C::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgSurvivalNotifyClearMobS2C::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgSurvivalNotifyClearMobS2C_descriptor_;
}

const MsgSurvivalNotifyClearMobS2C& MsgSurvivalNotifyClearMobS2C::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgSurvival_2eproto();
  return *default_instance_;
}

MsgSurvivalNotifyClearMobS2C* MsgSurvivalNotifyClearMobS2C::default_instance_ = NULL;

MsgSurvivalNotifyClearMobS2C* MsgSurvivalNotifyClearMobS2C::New() const {
  return new MsgSurvivalNotifyClearMobS2C;
}

void MsgSurvivalNotifyClearMobS2C::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    msgtype_ = 2305;
    iggid_ = GOOGLE_LONGLONG(0);
  }
  mapobjectid_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgSurvivalNotifyClearMobS2C::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.MsgSurvivalNotifyClearMobS2C)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_SURVIVAL_NOTIFY_CLEAR_MOB_MS2C];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::EMsgType_IsValid(value)) {
            set_msgtype(static_cast< ::MsgPB::EMsgType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_iggid;
        break;
      }

      // optional int64 iggid = 2;
      case 2: {
        if (tag == 16) {
         parse_iggid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &iggid_)));
          set_has_iggid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_MapObjectID;
        break;
      }

      // repeated int32 MapObjectID = 3;
      case 3: {
        if (tag == 24) {
         parse_MapObjectID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 24, input, this->mutable_mapobjectid())));
        } else if (tag == 26) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_mapobjectid())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_MapObjectID;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.MsgSurvivalNotifyClearMobS2C)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.MsgSurvivalNotifyClearMobS2C)
  return false;
#undef DO_
}

void MsgSurvivalNotifyClearMobS2C::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.MsgSurvivalNotifyClearMobS2C)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_SURVIVAL_NOTIFY_CLEAR_MOB_MS2C];
  if (has_msgtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->msgtype(), output);
  }

  // optional int64 iggid = 2;
  if (has_iggid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->iggid(), output);
  }

  // repeated int32 MapObjectID = 3;
  for (int i = 0; i < this->mapobjectid_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      3, this->mapobjectid(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.MsgSurvivalNotifyClearMobS2C)
}

::google::protobuf::uint8* MsgSurvivalNotifyClearMobS2C::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.MsgSurvivalNotifyClearMobS2C)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_SURVIVAL_NOTIFY_CLEAR_MOB_MS2C];
  if (has_msgtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->msgtype(), target);
  }

  // optional int64 iggid = 2;
  if (has_iggid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->iggid(), target);
  }

  // repeated int32 MapObjectID = 3;
  for (int i = 0; i < this->mapobjectid_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(3, this->mapobjectid(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.MsgSurvivalNotifyClearMobS2C)
  return target;
}

int MsgSurvivalNotifyClearMobS2C::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_SURVIVAL_NOTIFY_CLEAR_MOB_MS2C];
    if (has_msgtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgtype());
    }

    // optional int64 iggid = 2;
    if (has_iggid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->iggid());
    }

  }
  // repeated int32 MapObjectID = 3;
  {
    int data_size = 0;
    for (int i = 0; i < this->mapobjectid_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->mapobjectid(i));
    }
    total_size += 1 * this->mapobjectid_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgSurvivalNotifyClearMobS2C::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgSurvivalNotifyClearMobS2C* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgSurvivalNotifyClearMobS2C*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgSurvivalNotifyClearMobS2C::MergeFrom(const MsgSurvivalNotifyClearMobS2C& from) {
  GOOGLE_CHECK_NE(&from, this);
  mapobjectid_.MergeFrom(from.mapobjectid_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msgtype()) {
      set_msgtype(from.msgtype());
    }
    if (from.has_iggid()) {
      set_iggid(from.iggid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgSurvivalNotifyClearMobS2C::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgSurvivalNotifyClearMobS2C::CopyFrom(const MsgSurvivalNotifyClearMobS2C& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgSurvivalNotifyClearMobS2C::IsInitialized() const {

  return true;
}

void MsgSurvivalNotifyClearMobS2C::Swap(MsgSurvivalNotifyClearMobS2C* other) {
  if (other != this) {
    std::swap(msgtype_, other->msgtype_);
    std::swap(iggid_, other->iggid_);
    mapobjectid_.Swap(&other->mapobjectid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgSurvivalNotifyClearMobS2C::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgSurvivalNotifyClearMobS2C_descriptor_;
  metadata.reflection = MsgSurvivalNotifyClearMobS2C_reflection_;
  return metadata;
}


// ===================================================================

const ::google::protobuf::EnumDescriptor* MsgSurvivalNotifyMobBirthPointS2C_STATUS_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgSurvivalNotifyMobBirthPointS2C_STATUS_descriptor_;
}
bool MsgSurvivalNotifyMobBirthPointS2C_STATUS_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const MsgSurvivalNotifyMobBirthPointS2C_STATUS MsgSurvivalNotifyMobBirthPointS2C::OPEN;
const MsgSurvivalNotifyMobBirthPointS2C_STATUS MsgSurvivalNotifyMobBirthPointS2C::CLOSE;
const MsgSurvivalNotifyMobBirthPointS2C_STATUS MsgSurvivalNotifyMobBirthPointS2C::STATUS_MIN;
const MsgSurvivalNotifyMobBirthPointS2C_STATUS MsgSurvivalNotifyMobBirthPointS2C::STATUS_MAX;
const int MsgSurvivalNotifyMobBirthPointS2C::STATUS_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int MsgSurvivalNotifyMobBirthPointS2C::kMsgTypeFieldNumber;
const int MsgSurvivalNotifyMobBirthPointS2C::kIggidFieldNumber;
const int MsgSurvivalNotifyMobBirthPointS2C::kSurvivalEventIDFieldNumber;
const int MsgSurvivalNotifyMobBirthPointS2C::kWaveFieldNumber;
const int MsgSurvivalNotifyMobBirthPointS2C::kStatusFieldNumber;
const int MsgSurvivalNotifyMobBirthPointS2C::kEnableLeftPointFieldNumber;
const int MsgSurvivalNotifyMobBirthPointS2C::kLeftPosXFieldNumber;
const int MsgSurvivalNotifyMobBirthPointS2C::kLeftPosYFieldNumber;
const int MsgSurvivalNotifyMobBirthPointS2C::kEnableRightPointFieldNumber;
const int MsgSurvivalNotifyMobBirthPointS2C::kRightPosXFieldNumber;
const int MsgSurvivalNotifyMobBirthPointS2C::kRightPosYFieldNumber;
#endif  // !_MSC_VER

MsgSurvivalNotifyMobBirthPointS2C::MsgSurvivalNotifyMobBirthPointS2C()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.MsgSurvivalNotifyMobBirthPointS2C)
}

void MsgSurvivalNotifyMobBirthPointS2C::InitAsDefaultInstance() {
}

MsgSurvivalNotifyMobBirthPointS2C::MsgSurvivalNotifyMobBirthPointS2C(const MsgSurvivalNotifyMobBirthPointS2C& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.MsgSurvivalNotifyMobBirthPointS2C)
}

void MsgSurvivalNotifyMobBirthPointS2C::SharedCtor() {
  _cached_size_ = 0;
  msgtype_ = 2306;
  iggid_ = GOOGLE_LONGLONG(0);
  survivaleventid_ = 0;
  wave_ = 0;
  status_ = 0;
  enable_left_point_ = false;
  left_pos_x_ = 0;
  left_pos_y_ = 0;
  enable_right_point_ = false;
  right_pos_x_ = 0;
  right_pos_y_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgSurvivalNotifyMobBirthPointS2C::~MsgSurvivalNotifyMobBirthPointS2C() {
  // @@protoc_insertion_point(destructor:MsgPB.MsgSurvivalNotifyMobBirthPointS2C)
  SharedDtor();
}

void MsgSurvivalNotifyMobBirthPointS2C::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgSurvivalNotifyMobBirthPointS2C::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgSurvivalNotifyMobBirthPointS2C::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgSurvivalNotifyMobBirthPointS2C_descriptor_;
}

const MsgSurvivalNotifyMobBirthPointS2C& MsgSurvivalNotifyMobBirthPointS2C::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgSurvival_2eproto();
  return *default_instance_;
}

MsgSurvivalNotifyMobBirthPointS2C* MsgSurvivalNotifyMobBirthPointS2C::default_instance_ = NULL;

MsgSurvivalNotifyMobBirthPointS2C* MsgSurvivalNotifyMobBirthPointS2C::New() const {
  return new MsgSurvivalNotifyMobBirthPointS2C;
}

void MsgSurvivalNotifyMobBirthPointS2C::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<MsgSurvivalNotifyMobBirthPointS2C*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 255) {
    ZR_(survivaleventid_, enable_left_point_);
    msgtype_ = 2306;
    iggid_ = GOOGLE_LONGLONG(0);
    left_pos_y_ = 0;
  }
  if (_has_bits_[8 / 32] & 1792) {
    ZR_(right_pos_x_, right_pos_y_);
    enable_right_point_ = false;
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgSurvivalNotifyMobBirthPointS2C::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.MsgSurvivalNotifyMobBirthPointS2C)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_SURVIVAL_NOTIFY_MOB_BIRTH_POINT_MS2C];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::EMsgType_IsValid(value)) {
            set_msgtype(static_cast< ::MsgPB::EMsgType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_iggid;
        break;
      }

      // optional int64 iggid = 2;
      case 2: {
        if (tag == 16) {
         parse_iggid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &iggid_)));
          set_has_iggid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_SurvivalEventID;
        break;
      }

      // optional int32 SurvivalEventID = 3;
      case 3: {
        if (tag == 24) {
         parse_SurvivalEventID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &survivaleventid_)));
          set_has_survivaleventid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_Wave;
        break;
      }

      // optional int32 Wave = 4;
      case 4: {
        if (tag == 32) {
         parse_Wave:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &wave_)));
          set_has_wave();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_status;
        break;
      }

      // optional .MsgPB.MsgSurvivalNotifyMobBirthPointS2C.STATUS status = 5;
      case 5: {
        if (tag == 40) {
         parse_status:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::MsgSurvivalNotifyMobBirthPointS2C_STATUS_IsValid(value)) {
            set_status(static_cast< ::MsgPB::MsgSurvivalNotifyMobBirthPointS2C_STATUS >(value));
          } else {
            mutable_unknown_fields()->AddVarint(5, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_enable_left_point;
        break;
      }

      // optional bool enable_left_point = 6;
      case 6: {
        if (tag == 48) {
         parse_enable_left_point:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &enable_left_point_)));
          set_has_enable_left_point();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_left_pos_x;
        break;
      }

      // optional int32 left_pos_x = 7;
      case 7: {
        if (tag == 56) {
         parse_left_pos_x:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &left_pos_x_)));
          set_has_left_pos_x();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_left_pos_y;
        break;
      }

      // optional int32 left_pos_y = 8;
      case 8: {
        if (tag == 64) {
         parse_left_pos_y:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &left_pos_y_)));
          set_has_left_pos_y();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_enable_right_point;
        break;
      }

      // optional bool enable_right_point = 9;
      case 9: {
        if (tag == 72) {
         parse_enable_right_point:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &enable_right_point_)));
          set_has_enable_right_point();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(80)) goto parse_right_pos_x;
        break;
      }

      // optional int32 right_pos_x = 10;
      case 10: {
        if (tag == 80) {
         parse_right_pos_x:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &right_pos_x_)));
          set_has_right_pos_x();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(88)) goto parse_right_pos_y;
        break;
      }

      // optional int32 right_pos_y = 11;
      case 11: {
        if (tag == 88) {
         parse_right_pos_y:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &right_pos_y_)));
          set_has_right_pos_y();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.MsgSurvivalNotifyMobBirthPointS2C)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.MsgSurvivalNotifyMobBirthPointS2C)
  return false;
#undef DO_
}

void MsgSurvivalNotifyMobBirthPointS2C::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.MsgSurvivalNotifyMobBirthPointS2C)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_SURVIVAL_NOTIFY_MOB_BIRTH_POINT_MS2C];
  if (has_msgtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->msgtype(), output);
  }

  // optional int64 iggid = 2;
  if (has_iggid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->iggid(), output);
  }

  // optional int32 SurvivalEventID = 3;
  if (has_survivaleventid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->survivaleventid(), output);
  }

  // optional int32 Wave = 4;
  if (has_wave()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->wave(), output);
  }

  // optional .MsgPB.MsgSurvivalNotifyMobBirthPointS2C.STATUS status = 5;
  if (has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      5, this->status(), output);
  }

  // optional bool enable_left_point = 6;
  if (has_enable_left_point()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->enable_left_point(), output);
  }

  // optional int32 left_pos_x = 7;
  if (has_left_pos_x()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->left_pos_x(), output);
  }

  // optional int32 left_pos_y = 8;
  if (has_left_pos_y()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->left_pos_y(), output);
  }

  // optional bool enable_right_point = 9;
  if (has_enable_right_point()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(9, this->enable_right_point(), output);
  }

  // optional int32 right_pos_x = 10;
  if (has_right_pos_x()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->right_pos_x(), output);
  }

  // optional int32 right_pos_y = 11;
  if (has_right_pos_y()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->right_pos_y(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.MsgSurvivalNotifyMobBirthPointS2C)
}

::google::protobuf::uint8* MsgSurvivalNotifyMobBirthPointS2C::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.MsgSurvivalNotifyMobBirthPointS2C)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_SURVIVAL_NOTIFY_MOB_BIRTH_POINT_MS2C];
  if (has_msgtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->msgtype(), target);
  }

  // optional int64 iggid = 2;
  if (has_iggid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->iggid(), target);
  }

  // optional int32 SurvivalEventID = 3;
  if (has_survivaleventid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->survivaleventid(), target);
  }

  // optional int32 Wave = 4;
  if (has_wave()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->wave(), target);
  }

  // optional .MsgPB.MsgSurvivalNotifyMobBirthPointS2C.STATUS status = 5;
  if (has_status()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      5, this->status(), target);
  }

  // optional bool enable_left_point = 6;
  if (has_enable_left_point()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->enable_left_point(), target);
  }

  // optional int32 left_pos_x = 7;
  if (has_left_pos_x()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->left_pos_x(), target);
  }

  // optional int32 left_pos_y = 8;
  if (has_left_pos_y()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->left_pos_y(), target);
  }

  // optional bool enable_right_point = 9;
  if (has_enable_right_point()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(9, this->enable_right_point(), target);
  }

  // optional int32 right_pos_x = 10;
  if (has_right_pos_x()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->right_pos_x(), target);
  }

  // optional int32 right_pos_y = 11;
  if (has_right_pos_y()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->right_pos_y(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.MsgSurvivalNotifyMobBirthPointS2C)
  return target;
}

int MsgSurvivalNotifyMobBirthPointS2C::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_SURVIVAL_NOTIFY_MOB_BIRTH_POINT_MS2C];
    if (has_msgtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgtype());
    }

    // optional int64 iggid = 2;
    if (has_iggid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->iggid());
    }

    // optional int32 SurvivalEventID = 3;
    if (has_survivaleventid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->survivaleventid());
    }

    // optional int32 Wave = 4;
    if (has_wave()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->wave());
    }

    // optional .MsgPB.MsgSurvivalNotifyMobBirthPointS2C.STATUS status = 5;
    if (has_status()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->status());
    }

    // optional bool enable_left_point = 6;
    if (has_enable_left_point()) {
      total_size += 1 + 1;
    }

    // optional int32 left_pos_x = 7;
    if (has_left_pos_x()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->left_pos_x());
    }

    // optional int32 left_pos_y = 8;
    if (has_left_pos_y()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->left_pos_y());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional bool enable_right_point = 9;
    if (has_enable_right_point()) {
      total_size += 1 + 1;
    }

    // optional int32 right_pos_x = 10;
    if (has_right_pos_x()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->right_pos_x());
    }

    // optional int32 right_pos_y = 11;
    if (has_right_pos_y()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->right_pos_y());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgSurvivalNotifyMobBirthPointS2C::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgSurvivalNotifyMobBirthPointS2C* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgSurvivalNotifyMobBirthPointS2C*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgSurvivalNotifyMobBirthPointS2C::MergeFrom(const MsgSurvivalNotifyMobBirthPointS2C& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msgtype()) {
      set_msgtype(from.msgtype());
    }
    if (from.has_iggid()) {
      set_iggid(from.iggid());
    }
    if (from.has_survivaleventid()) {
      set_survivaleventid(from.survivaleventid());
    }
    if (from.has_wave()) {
      set_wave(from.wave());
    }
    if (from.has_status()) {
      set_status(from.status());
    }
    if (from.has_enable_left_point()) {
      set_enable_left_point(from.enable_left_point());
    }
    if (from.has_left_pos_x()) {
      set_left_pos_x(from.left_pos_x());
    }
    if (from.has_left_pos_y()) {
      set_left_pos_y(from.left_pos_y());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_enable_right_point()) {
      set_enable_right_point(from.enable_right_point());
    }
    if (from.has_right_pos_x()) {
      set_right_pos_x(from.right_pos_x());
    }
    if (from.has_right_pos_y()) {
      set_right_pos_y(from.right_pos_y());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgSurvivalNotifyMobBirthPointS2C::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgSurvivalNotifyMobBirthPointS2C::CopyFrom(const MsgSurvivalNotifyMobBirthPointS2C& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgSurvivalNotifyMobBirthPointS2C::IsInitialized() const {

  return true;
}

void MsgSurvivalNotifyMobBirthPointS2C::Swap(MsgSurvivalNotifyMobBirthPointS2C* other) {
  if (other != this) {
    std::swap(msgtype_, other->msgtype_);
    std::swap(iggid_, other->iggid_);
    std::swap(survivaleventid_, other->survivaleventid_);
    std::swap(wave_, other->wave_);
    std::swap(status_, other->status_);
    std::swap(enable_left_point_, other->enable_left_point_);
    std::swap(left_pos_x_, other->left_pos_x_);
    std::swap(left_pos_y_, other->left_pos_y_);
    std::swap(enable_right_point_, other->enable_right_point_);
    std::swap(right_pos_x_, other->right_pos_x_);
    std::swap(right_pos_y_, other->right_pos_y_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgSurvivalNotifyMobBirthPointS2C::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgSurvivalNotifyMobBirthPointS2C_descriptor_;
  metadata.reflection = MsgSurvivalNotifyMobBirthPointS2C_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgSyncSurvivalEventFlagS2C::kMsgTypeFieldNumber;
const int MsgSyncSurvivalEventFlagS2C::kValuesFieldNumber;
#endif  // !_MSC_VER

MsgSyncSurvivalEventFlagS2C::MsgSyncSurvivalEventFlagS2C()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.MsgSyncSurvivalEventFlagS2C)
}

void MsgSyncSurvivalEventFlagS2C::InitAsDefaultInstance() {
}

MsgSyncSurvivalEventFlagS2C::MsgSyncSurvivalEventFlagS2C(const MsgSyncSurvivalEventFlagS2C& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.MsgSyncSurvivalEventFlagS2C)
}

void MsgSyncSurvivalEventFlagS2C::SharedCtor() {
  _cached_size_ = 0;
  msgtype_ = 2351;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgSyncSurvivalEventFlagS2C::~MsgSyncSurvivalEventFlagS2C() {
  // @@protoc_insertion_point(destructor:MsgPB.MsgSyncSurvivalEventFlagS2C)
  SharedDtor();
}

void MsgSyncSurvivalEventFlagS2C::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgSyncSurvivalEventFlagS2C::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgSyncSurvivalEventFlagS2C::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgSyncSurvivalEventFlagS2C_descriptor_;
}

const MsgSyncSurvivalEventFlagS2C& MsgSyncSurvivalEventFlagS2C::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgSurvival_2eproto();
  return *default_instance_;
}

MsgSyncSurvivalEventFlagS2C* MsgSyncSurvivalEventFlagS2C::default_instance_ = NULL;

MsgSyncSurvivalEventFlagS2C* MsgSyncSurvivalEventFlagS2C::New() const {
  return new MsgSyncSurvivalEventFlagS2C;
}

void MsgSyncSurvivalEventFlagS2C::Clear() {
  msgtype_ = 2351;
  values_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgSyncSurvivalEventFlagS2C::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.MsgSyncSurvivalEventFlagS2C)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_SYNC_SURVIVAL_EVENT_FLAG_S2C];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::EMsgType_IsValid(value)) {
            set_msgtype(static_cast< ::MsgPB::EMsgType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_values;
        break;
      }

      // repeated uint32 values = 2;
      case 2: {
        if (tag == 16) {
         parse_values:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 16, input, this->mutable_values())));
        } else if (tag == 18) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_values())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_values;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.MsgSyncSurvivalEventFlagS2C)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.MsgSyncSurvivalEventFlagS2C)
  return false;
#undef DO_
}

void MsgSyncSurvivalEventFlagS2C::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.MsgSyncSurvivalEventFlagS2C)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_SYNC_SURVIVAL_EVENT_FLAG_S2C];
  if (has_msgtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->msgtype(), output);
  }

  // repeated uint32 values = 2;
  for (int i = 0; i < this->values_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      2, this->values(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.MsgSyncSurvivalEventFlagS2C)
}

::google::protobuf::uint8* MsgSyncSurvivalEventFlagS2C::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.MsgSyncSurvivalEventFlagS2C)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_SYNC_SURVIVAL_EVENT_FLAG_S2C];
  if (has_msgtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->msgtype(), target);
  }

  // repeated uint32 values = 2;
  for (int i = 0; i < this->values_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(2, this->values(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.MsgSyncSurvivalEventFlagS2C)
  return target;
}

int MsgSyncSurvivalEventFlagS2C::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_SYNC_SURVIVAL_EVENT_FLAG_S2C];
    if (has_msgtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgtype());
    }

  }
  // repeated uint32 values = 2;
  {
    int data_size = 0;
    for (int i = 0; i < this->values_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->values(i));
    }
    total_size += 1 * this->values_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgSyncSurvivalEventFlagS2C::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgSyncSurvivalEventFlagS2C* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgSyncSurvivalEventFlagS2C*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgSyncSurvivalEventFlagS2C::MergeFrom(const MsgSyncSurvivalEventFlagS2C& from) {
  GOOGLE_CHECK_NE(&from, this);
  values_.MergeFrom(from.values_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msgtype()) {
      set_msgtype(from.msgtype());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgSyncSurvivalEventFlagS2C::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgSyncSurvivalEventFlagS2C::CopyFrom(const MsgSyncSurvivalEventFlagS2C& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgSyncSurvivalEventFlagS2C::IsInitialized() const {

  return true;
}

void MsgSyncSurvivalEventFlagS2C::Swap(MsgSyncSurvivalEventFlagS2C* other) {
  if (other != this) {
    std::swap(msgtype_, other->msgtype_);
    values_.Swap(&other->values_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgSyncSurvivalEventFlagS2C::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgSyncSurvivalEventFlagS2C_descriptor_;
  metadata.reflection = MsgSyncSurvivalEventFlagS2C_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgUpdateSurvivalEventFlagS2C::kMsgTypeFieldNumber;
const int MsgUpdateSurvivalEventFlagS2C::kDataFieldNumber;
#endif  // !_MSC_VER

MsgUpdateSurvivalEventFlagS2C::MsgUpdateSurvivalEventFlagS2C()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.MsgUpdateSurvivalEventFlagS2C)
}

void MsgUpdateSurvivalEventFlagS2C::InitAsDefaultInstance() {
  data_ = const_cast< ::MsgPB::MsgLSSurvivalEventFlagData*>(&::MsgPB::MsgLSSurvivalEventFlagData::default_instance());
}

MsgUpdateSurvivalEventFlagS2C::MsgUpdateSurvivalEventFlagS2C(const MsgUpdateSurvivalEventFlagS2C& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.MsgUpdateSurvivalEventFlagS2C)
}

void MsgUpdateSurvivalEventFlagS2C::SharedCtor() {
  _cached_size_ = 0;
  msgtype_ = 2352;
  data_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgUpdateSurvivalEventFlagS2C::~MsgUpdateSurvivalEventFlagS2C() {
  // @@protoc_insertion_point(destructor:MsgPB.MsgUpdateSurvivalEventFlagS2C)
  SharedDtor();
}

void MsgUpdateSurvivalEventFlagS2C::SharedDtor() {
  if (this != default_instance_) {
    delete data_;
  }
}

void MsgUpdateSurvivalEventFlagS2C::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgUpdateSurvivalEventFlagS2C::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgUpdateSurvivalEventFlagS2C_descriptor_;
}

const MsgUpdateSurvivalEventFlagS2C& MsgUpdateSurvivalEventFlagS2C::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgSurvival_2eproto();
  return *default_instance_;
}

MsgUpdateSurvivalEventFlagS2C* MsgUpdateSurvivalEventFlagS2C::default_instance_ = NULL;

MsgUpdateSurvivalEventFlagS2C* MsgUpdateSurvivalEventFlagS2C::New() const {
  return new MsgUpdateSurvivalEventFlagS2C;
}

void MsgUpdateSurvivalEventFlagS2C::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    msgtype_ = 2352;
    if (has_data()) {
      if (data_ != NULL) data_->::MsgPB::MsgLSSurvivalEventFlagData::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgUpdateSurvivalEventFlagS2C::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.MsgUpdateSurvivalEventFlagS2C)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_UPDATE_SURVIVAL_EVENT_FLAG_S2C];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::EMsgType_IsValid(value)) {
            set_msgtype(static_cast< ::MsgPB::EMsgType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_data;
        break;
      }

      // optional .MsgPB.MsgLSSurvivalEventFlagData data = 2;
      case 2: {
        if (tag == 18) {
         parse_data:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_data()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.MsgUpdateSurvivalEventFlagS2C)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.MsgUpdateSurvivalEventFlagS2C)
  return false;
#undef DO_
}

void MsgUpdateSurvivalEventFlagS2C::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.MsgUpdateSurvivalEventFlagS2C)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_UPDATE_SURVIVAL_EVENT_FLAG_S2C];
  if (has_msgtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->msgtype(), output);
  }

  // optional .MsgPB.MsgLSSurvivalEventFlagData data = 2;
  if (has_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->data(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.MsgUpdateSurvivalEventFlagS2C)
}

::google::protobuf::uint8* MsgUpdateSurvivalEventFlagS2C::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.MsgUpdateSurvivalEventFlagS2C)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_UPDATE_SURVIVAL_EVENT_FLAG_S2C];
  if (has_msgtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->msgtype(), target);
  }

  // optional .MsgPB.MsgLSSurvivalEventFlagData data = 2;
  if (has_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->data(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.MsgUpdateSurvivalEventFlagS2C)
  return target;
}

int MsgUpdateSurvivalEventFlagS2C::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_UPDATE_SURVIVAL_EVENT_FLAG_S2C];
    if (has_msgtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgtype());
    }

    // optional .MsgPB.MsgLSSurvivalEventFlagData data = 2;
    if (has_data()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->data());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgUpdateSurvivalEventFlagS2C::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgUpdateSurvivalEventFlagS2C* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgUpdateSurvivalEventFlagS2C*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgUpdateSurvivalEventFlagS2C::MergeFrom(const MsgUpdateSurvivalEventFlagS2C& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msgtype()) {
      set_msgtype(from.msgtype());
    }
    if (from.has_data()) {
      mutable_data()->::MsgPB::MsgLSSurvivalEventFlagData::MergeFrom(from.data());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgUpdateSurvivalEventFlagS2C::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgUpdateSurvivalEventFlagS2C::CopyFrom(const MsgUpdateSurvivalEventFlagS2C& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgUpdateSurvivalEventFlagS2C::IsInitialized() const {

  return true;
}

void MsgUpdateSurvivalEventFlagS2C::Swap(MsgUpdateSurvivalEventFlagS2C* other) {
  if (other != this) {
    std::swap(msgtype_, other->msgtype_);
    std::swap(data_, other->data_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgUpdateSurvivalEventFlagS2C::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgUpdateSurvivalEventFlagS2C_descriptor_;
  metadata.reflection = MsgUpdateSurvivalEventFlagS2C_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgSurvivalTriggerCountS2C::kMsgTypeFieldNumber;
const int MsgSurvivalTriggerCountS2C::kCountFieldNumber;
#endif  // !_MSC_VER

MsgSurvivalTriggerCountS2C::MsgSurvivalTriggerCountS2C()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.MsgSurvivalTriggerCountS2C)
}

void MsgSurvivalTriggerCountS2C::InitAsDefaultInstance() {
}

MsgSurvivalTriggerCountS2C::MsgSurvivalTriggerCountS2C(const MsgSurvivalTriggerCountS2C& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.MsgSurvivalTriggerCountS2C)
}

void MsgSurvivalTriggerCountS2C::SharedCtor() {
  _cached_size_ = 0;
  msgtype_ = 2353;
  count_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgSurvivalTriggerCountS2C::~MsgSurvivalTriggerCountS2C() {
  // @@protoc_insertion_point(destructor:MsgPB.MsgSurvivalTriggerCountS2C)
  SharedDtor();
}

void MsgSurvivalTriggerCountS2C::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgSurvivalTriggerCountS2C::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgSurvivalTriggerCountS2C::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgSurvivalTriggerCountS2C_descriptor_;
}

const MsgSurvivalTriggerCountS2C& MsgSurvivalTriggerCountS2C::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgSurvival_2eproto();
  return *default_instance_;
}

MsgSurvivalTriggerCountS2C* MsgSurvivalTriggerCountS2C::default_instance_ = NULL;

MsgSurvivalTriggerCountS2C* MsgSurvivalTriggerCountS2C::New() const {
  return new MsgSurvivalTriggerCountS2C;
}

void MsgSurvivalTriggerCountS2C::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    msgtype_ = 2353;
    count_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgSurvivalTriggerCountS2C::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.MsgSurvivalTriggerCountS2C)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_UPDATE_SURVIVAL_TRIGGER_COUNT_S2C];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::EMsgType_IsValid(value)) {
            set_msgtype(static_cast< ::MsgPB::EMsgType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_count;
        break;
      }

      // optional int32 count = 2;
      case 2: {
        if (tag == 16) {
         parse_count:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &count_)));
          set_has_count();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.MsgSurvivalTriggerCountS2C)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.MsgSurvivalTriggerCountS2C)
  return false;
#undef DO_
}

void MsgSurvivalTriggerCountS2C::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.MsgSurvivalTriggerCountS2C)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_UPDATE_SURVIVAL_TRIGGER_COUNT_S2C];
  if (has_msgtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->msgtype(), output);
  }

  // optional int32 count = 2;
  if (has_count()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->count(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.MsgSurvivalTriggerCountS2C)
}

::google::protobuf::uint8* MsgSurvivalTriggerCountS2C::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.MsgSurvivalTriggerCountS2C)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_UPDATE_SURVIVAL_TRIGGER_COUNT_S2C];
  if (has_msgtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->msgtype(), target);
  }

  // optional int32 count = 2;
  if (has_count()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->count(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.MsgSurvivalTriggerCountS2C)
  return target;
}

int MsgSurvivalTriggerCountS2C::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_UPDATE_SURVIVAL_TRIGGER_COUNT_S2C];
    if (has_msgtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgtype());
    }

    // optional int32 count = 2;
    if (has_count()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->count());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgSurvivalTriggerCountS2C::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgSurvivalTriggerCountS2C* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgSurvivalTriggerCountS2C*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgSurvivalTriggerCountS2C::MergeFrom(const MsgSurvivalTriggerCountS2C& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msgtype()) {
      set_msgtype(from.msgtype());
    }
    if (from.has_count()) {
      set_count(from.count());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgSurvivalTriggerCountS2C::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgSurvivalTriggerCountS2C::CopyFrom(const MsgSurvivalTriggerCountS2C& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgSurvivalTriggerCountS2C::IsInitialized() const {

  return true;
}

void MsgSurvivalTriggerCountS2C::Swap(MsgSurvivalTriggerCountS2C* other) {
  if (other != this) {
    std::swap(msgtype_, other->msgtype_);
    std::swap(count_, other->count_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgSurvivalTriggerCountS2C::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgSurvivalTriggerCountS2C_descriptor_;
  metadata.reflection = MsgSurvivalTriggerCountS2C_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgSetSurvivalRecordC2S::kMsgTypeFieldNumber;
const int MsgSetSurvivalRecordC2S::kUuidFieldNumber;
const int MsgSetSurvivalRecordC2S::kGameResultFieldNumber;
const int MsgSetSurvivalRecordC2S::kNewClearanceTimeFieldNumber;
#endif  // !_MSC_VER

MsgSetSurvivalRecordC2S::MsgSetSurvivalRecordC2S()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgPB.MsgSetSurvivalRecordC2S)
}

void MsgSetSurvivalRecordC2S::InitAsDefaultInstance() {
}

MsgSetSurvivalRecordC2S::MsgSetSurvivalRecordC2S(const MsgSetSurvivalRecordC2S& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgPB.MsgSetSurvivalRecordC2S)
}

void MsgSetSurvivalRecordC2S::SharedCtor() {
  _cached_size_ = 0;
  msgtype_ = 2354;
  uuid_ = GOOGLE_LONGLONG(0);
  gameresult_ = 0;
  newclearancetime_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgSetSurvivalRecordC2S::~MsgSetSurvivalRecordC2S() {
  // @@protoc_insertion_point(destructor:MsgPB.MsgSetSurvivalRecordC2S)
  SharedDtor();
}

void MsgSetSurvivalRecordC2S::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgSetSurvivalRecordC2S::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgSetSurvivalRecordC2S::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgSetSurvivalRecordC2S_descriptor_;
}

const MsgSetSurvivalRecordC2S& MsgSetSurvivalRecordC2S::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MsgSurvival_2eproto();
  return *default_instance_;
}

MsgSetSurvivalRecordC2S* MsgSetSurvivalRecordC2S::default_instance_ = NULL;

MsgSetSurvivalRecordC2S* MsgSetSurvivalRecordC2S::New() const {
  return new MsgSetSurvivalRecordC2S;
}

void MsgSetSurvivalRecordC2S::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<MsgSetSurvivalRecordC2S*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 15) {
    ZR_(gameresult_, newclearancetime_);
    msgtype_ = 2354;
    uuid_ = GOOGLE_LONGLONG(0);
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgSetSurvivalRecordC2S::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgPB.MsgSetSurvivalRecordC2S)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_SET_SURVIVAL_RECORD_C2S];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::EMsgType_IsValid(value)) {
            set_msgtype(static_cast< ::MsgPB::EMsgType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_uuid;
        break;
      }

      // optional int64 uuid = 2;
      case 2: {
        if (tag == 16) {
         parse_uuid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &uuid_)));
          set_has_uuid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_GameResult;
        break;
      }

      // optional .MsgPB.SURVIVAL_GAME_RESULT GameResult = 3;
      case 3: {
        if (tag == 24) {
         parse_GameResult:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MsgPB::SURVIVAL_GAME_RESULT_IsValid(value)) {
            set_gameresult(static_cast< ::MsgPB::SURVIVAL_GAME_RESULT >(value));
          } else {
            mutable_unknown_fields()->AddVarint(3, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_NewClearanceTime;
        break;
      }

      // optional int32 NewClearanceTime = 4;
      case 4: {
        if (tag == 32) {
         parse_NewClearanceTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &newclearancetime_)));
          set_has_newclearancetime();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgPB.MsgSetSurvivalRecordC2S)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgPB.MsgSetSurvivalRecordC2S)
  return false;
#undef DO_
}

void MsgSetSurvivalRecordC2S::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgPB.MsgSetSurvivalRecordC2S)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_SET_SURVIVAL_RECORD_C2S];
  if (has_msgtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->msgtype(), output);
  }

  // optional int64 uuid = 2;
  if (has_uuid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->uuid(), output);
  }

  // optional .MsgPB.SURVIVAL_GAME_RESULT GameResult = 3;
  if (has_gameresult()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->gameresult(), output);
  }

  // optional int32 NewClearanceTime = 4;
  if (has_newclearancetime()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->newclearancetime(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgPB.MsgSetSurvivalRecordC2S)
}

::google::protobuf::uint8* MsgSetSurvivalRecordC2S::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgPB.MsgSetSurvivalRecordC2S)
  // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_SET_SURVIVAL_RECORD_C2S];
  if (has_msgtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->msgtype(), target);
  }

  // optional int64 uuid = 2;
  if (has_uuid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->uuid(), target);
  }

  // optional .MsgPB.SURVIVAL_GAME_RESULT GameResult = 3;
  if (has_gameresult()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->gameresult(), target);
  }

  // optional int32 NewClearanceTime = 4;
  if (has_newclearancetime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->newclearancetime(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgPB.MsgSetSurvivalRecordC2S)
  return target;
}

int MsgSetSurvivalRecordC2S::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .MsgPB.EMsgType msgType = 1 [default = _MSG_SET_SURVIVAL_RECORD_C2S];
    if (has_msgtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgtype());
    }

    // optional int64 uuid = 2;
    if (has_uuid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->uuid());
    }

    // optional .MsgPB.SURVIVAL_GAME_RESULT GameResult = 3;
    if (has_gameresult()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->gameresult());
    }

    // optional int32 NewClearanceTime = 4;
    if (has_newclearancetime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->newclearancetime());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgSetSurvivalRecordC2S::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgSetSurvivalRecordC2S* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgSetSurvivalRecordC2S*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgSetSurvivalRecordC2S::MergeFrom(const MsgSetSurvivalRecordC2S& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msgtype()) {
      set_msgtype(from.msgtype());
    }
    if (from.has_uuid()) {
      set_uuid(from.uuid());
    }
    if (from.has_gameresult()) {
      set_gameresult(from.gameresult());
    }
    if (from.has_newclearancetime()) {
      set_newclearancetime(from.newclearancetime());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgSetSurvivalRecordC2S::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgSetSurvivalRecordC2S::CopyFrom(const MsgSetSurvivalRecordC2S& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgSetSurvivalRecordC2S::IsInitialized() const {

  return true;
}

void MsgSetSurvivalRecordC2S::Swap(MsgSetSurvivalRecordC2S* other) {
  if (other != this) {
    std::swap(msgtype_, other->msgtype_);
    std::swap(uuid_, other->uuid_);
    std::swap(gameresult_, other->gameresult_);
    std::swap(newclearancetime_, other->newclearancetime_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgSetSurvivalRecordC2S::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgSetSurvivalRecordC2S_descriptor_;
  metadata.reflection = MsgSetSurvivalRecordC2S_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace MsgPB

// @@protoc_insertion_point(global_scope)
